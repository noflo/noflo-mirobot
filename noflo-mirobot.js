
/**
 * Require the given path.
 *
 * @param {String} path
 * @return {Object} exports
 * @api public
 */

function require(path, parent, orig) {
  var resolved = require.resolve(path);

  // lookup failed
  if (null == resolved) {
    orig = orig || path;
    parent = parent || 'root';
    var err = new Error('Failed to require "' + orig + '" from "' + parent + '"');
    err.path = orig;
    err.parent = parent;
    err.require = true;
    throw err;
  }

  var module = require.modules[resolved];

  // perform real require()
  // by invoking the module's
  // registered function
  if (!module._resolving && !module.exports) {
    var mod = {};
    mod.exports = {};
    mod.client = mod.component = true;
    module._resolving = true;
    module.call(this, mod.exports, require.relative(resolved), mod);
    delete module._resolving;
    module.exports = mod.exports;
  }

  return module.exports;
}

/**
 * Registered modules.
 */

require.modules = {};

/**
 * Registered aliases.
 */

require.aliases = {};

/**
 * Resolve `path`.
 *
 * Lookup:
 *
 *   - PATH/index.js
 *   - PATH.js
 *   - PATH
 *
 * @param {String} path
 * @return {String} path or null
 * @api private
 */

require.resolve = function(path) {
  if (path.charAt(0) === '/') path = path.slice(1);

  var paths = [
    path,
    path + '.js',
    path + '.json',
    path + '/index.js',
    path + '/index.json'
  ];

  for (var i = 0; i < paths.length; i++) {
    var path = paths[i];
    if (require.modules.hasOwnProperty(path)) return path;
    if (require.aliases.hasOwnProperty(path)) return require.aliases[path];
  }
};

/**
 * Normalize `path` relative to the current path.
 *
 * @param {String} curr
 * @param {String} path
 * @return {String}
 * @api private
 */

require.normalize = function(curr, path) {
  var segs = [];

  if ('.' != path.charAt(0)) return path;

  curr = curr.split('/');
  path = path.split('/');

  for (var i = 0; i < path.length; ++i) {
    if ('..' == path[i]) {
      curr.pop();
    } else if ('.' != path[i] && '' != path[i]) {
      segs.push(path[i]);
    }
  }

  return curr.concat(segs).join('/');
};

/**
 * Register module at `path` with callback `definition`.
 *
 * @param {String} path
 * @param {Function} definition
 * @api private
 */

require.register = function(path, definition) {
  require.modules[path] = definition;
};

/**
 * Alias a module definition.
 *
 * @param {String} from
 * @param {String} to
 * @api private
 */

require.alias = function(from, to) {
  if (!require.modules.hasOwnProperty(from)) {
    throw new Error('Failed to alias "' + from + '", it does not exist');
  }
  require.aliases[to] = from;
};

/**
 * Return a require function relative to the `parent` path.
 *
 * @param {String} parent
 * @return {Function}
 * @api private
 */

require.relative = function(parent) {
  var p = require.normalize(parent, '..');

  /**
   * lastIndexOf helper.
   */

  function lastIndexOf(arr, obj) {
    var i = arr.length;
    while (i--) {
      if (arr[i] === obj) return i;
    }
    return -1;
  }

  /**
   * The relative require() itself.
   */

  function localRequire(path) {
    var resolved = localRequire.resolve(path);
    return require(resolved, parent, path);
  }

  /**
   * Resolve relative to the parent.
   */

  localRequire.resolve = function(path) {
    var c = path.charAt(0);
    if ('/' == c) return path.slice(1);
    if ('.' == c) return require.normalize(p, path);

    // resolve deps by returning
    // the dep in the nearest "deps"
    // directory
    var segs = parent.split('/');
    var i = lastIndexOf(segs, 'deps') + 1;
    if (!i) i = 0;
    path = segs.slice(0, i + 1).join('/') + '/deps/' + path;
    return path;
  };

  /**
   * Check if module is defined at `path`.
   */

  localRequire.exists = function(path) {
    return require.modules.hasOwnProperty(localRequire.resolve(path));
  };

  return localRequire;
};
require.register("bergie-emitter/index.js", function(exports, require, module){

/**
 * Expose `Emitter`.
 */

module.exports.EventEmitter = Emitter;

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks[event] = this._callbacks[event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  var self = this;
  this._callbacks = this._callbacks || {};

  function on() {
    self.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks[event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks[event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks[event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks[event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};

});
require.register("jashkenas-underscore/underscore.js", function(exports, require, module){
//     Underscore.js 1.7.0
//     http://underscorejs.org
//     (c) 2009-2014 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
//     Underscore may be freely distributed under the MIT license.

(function() {

  // Baseline setup
  // --------------

  // Establish the root object, `window` in the browser, or `exports` on the server.
  var root = this;

  // Save the previous value of the `_` variable.
  var previousUnderscore = root._;

  // Save bytes in the minified (but not gzipped) version:
  var ArrayProto = Array.prototype, ObjProto = Object.prototype, FuncProto = Function.prototype;

  // Create quick reference variables for speed access to core prototypes.
  var
    push             = ArrayProto.push,
    slice            = ArrayProto.slice,
    toString         = ObjProto.toString,
    hasOwnProperty   = ObjProto.hasOwnProperty;

  // All **ECMAScript 5** native function implementations that we hope to use
  // are declared here.
  var
    nativeIsArray      = Array.isArray,
    nativeKeys         = Object.keys,
    nativeBind         = FuncProto.bind;

  // Create a safe reference to the Underscore object for use below.
  var _ = function(obj) {
    if (obj instanceof _) return obj;
    if (!(this instanceof _)) return new _(obj);
    this._wrapped = obj;
  };

  // Export the Underscore object for **Node.js**, with
  // backwards-compatibility for the old `require()` API. If we're in
  // the browser, add `_` as a global object.
  if (typeof exports !== 'undefined') {
    if (typeof module !== 'undefined' && module.exports) {
      exports = module.exports = _;
    }
    exports._ = _;
  } else {
    root._ = _;
  }

  // Current version.
  _.VERSION = '1.7.0';

  // Internal function that returns an efficient (for current engines) version
  // of the passed-in callback, to be repeatedly applied in other Underscore
  // functions.
  var optimizeCb = function(func, context, argCount) {
    if (context === void 0) return func;
    switch (argCount == null ? 3 : argCount) {
      case 1: return function(value) {
        return func.call(context, value);
      };
      case 2: return function(value, other) {
        return func.call(context, value, other);
      };
      case 3: return function(value, index, collection) {
        return func.call(context, value, index, collection);
      };
      case 4: return function(accumulator, value, index, collection) {
        return func.call(context, accumulator, value, index, collection);
      };
    }
    return function() {
      return func.apply(context, arguments);
    };
  };

  // A mostly-internal function to generate callbacks that can be applied
  // to each element in a collection, returning the desired result â€” either
  // identity, an arbitrary callback, a property matcher, or a property accessor.
  var cb = function(value, context, argCount) {
    if (value == null) return _.identity;
    if (_.isFunction(value)) return optimizeCb(value, context, argCount);
    if (_.isObject(value)) return _.matches(value);
    return _.property(value);
  };
  _.iteratee = function(value, context) {
    return cb(value, context);
  };

  // Collection Functions
  // --------------------

  // The cornerstone, an `each` implementation, aka `forEach`.
  // Handles raw objects in addition to array-likes. Treats all
  // sparse array-likes as if they were dense.
  _.each = _.forEach = function(obj, iteratee, context) {
    if (obj == null) return obj;
    iteratee = optimizeCb(iteratee, context);
    var i, length = obj.length;
    if (length === +length) {
      for (i = 0; i < length; i++) {
        iteratee(obj[i], i, obj);
      }
    } else {
      var keys = _.keys(obj);
      for (i = 0, length = keys.length; i < length; i++) {
        iteratee(obj[keys[i]], keys[i], obj);
      }
    }
    return obj;
  };

  // Return the results of applying the iteratee to each element.
  _.map = _.collect = function(obj, iteratee, context) {
    if (obj == null) return [];
    iteratee = cb(iteratee, context);
    var keys = obj.length !== +obj.length && _.keys(obj),
        length = (keys || obj).length,
        results = Array(length),
        currentKey;
    for (var index = 0; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      results[index] = iteratee(obj[currentKey], currentKey, obj);
    }
    return results;
  };

  var reduceError = 'Reduce of empty array with no initial value';

  // **Reduce** builds up a single result from a list of values, aka `inject`,
  // or `foldl`.
  _.reduce = _.foldl = _.inject = function(obj, iteratee, memo, context) {
    if (obj == null) obj = [];
    iteratee = optimizeCb(iteratee, context, 4);
    var keys = obj.length !== +obj.length && _.keys(obj),
        length = (keys || obj).length,
        index = 0, currentKey;
    if (arguments.length < 3) {
      if (!length) throw new TypeError(reduceError);
      memo = obj[keys ? keys[index++] : index++];
    }
    for (; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      memo = iteratee(memo, obj[currentKey], currentKey, obj);
    }
    return memo;
  };

  // The right-associative version of reduce, also known as `foldr`.
  _.reduceRight = _.foldr = function(obj, iteratee, memo, context) {
    if (obj == null) obj = [];
    iteratee = optimizeCb(iteratee, context, 4);
    var keys = obj.length !== + obj.length && _.keys(obj),
        index = (keys || obj).length,
        currentKey;
    if (arguments.length < 3) {
      if (!index) throw new TypeError(reduceError);
      memo = obj[keys ? keys[--index] : --index];
    }
    while (index--) {
      currentKey = keys ? keys[index] : index;
      memo = iteratee(memo, obj[currentKey], currentKey, obj);
    }
    return memo;
  };

  // Return the first value which passes a truth test. Aliased as `detect`.
  _.find = _.detect = function(obj, predicate, context) {
    var key;
    if (obj.length === +obj.length) {
      key = _.findIndex(obj, predicate, context);
    } else {
      key = _.findKey(obj, predicate, context);
    }
    if (key !== void 0 && key !== -1) return obj[key];
  };

  // Return all the elements that pass a truth test.
  // Aliased as `select`.
  _.filter = _.select = function(obj, predicate, context) {
    var results = [];
    if (obj == null) return results;
    predicate = cb(predicate, context);
    _.each(obj, function(value, index, list) {
      if (predicate(value, index, list)) results.push(value);
    });
    return results;
  };

  // Return all the elements for which a truth test fails.
  _.reject = function(obj, predicate, context) {
    return _.filter(obj, _.negate(cb(predicate)), context);
  };

  // Determine whether all of the elements match a truth test.
  // Aliased as `all`.
  _.every = _.all = function(obj, predicate, context) {
    if (obj == null) return true;
    predicate = cb(predicate, context);
    var keys = obj.length !== +obj.length && _.keys(obj),
        length = (keys || obj).length,
        index, currentKey;
    for (index = 0; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      if (!predicate(obj[currentKey], currentKey, obj)) return false;
    }
    return true;
  };

  // Determine if at least one element in the object matches a truth test.
  // Aliased as `any`.
  _.some = _.any = function(obj, predicate, context) {
    if (obj == null) return false;
    predicate = cb(predicate, context);
    var keys = obj.length !== +obj.length && _.keys(obj),
        length = (keys || obj).length,
        index, currentKey;
    for (index = 0; index < length; index++) {
      currentKey = keys ? keys[index] : index;
      if (predicate(obj[currentKey], currentKey, obj)) return true;
    }
    return false;
  };

  // Determine if the array or object contains a given value (using `===`).
  // Aliased as `include`.
  _.contains = _.include = function(obj, target) {
    if (obj == null) return false;
    if (obj.length !== +obj.length) obj = _.values(obj);
    return _.indexOf(obj, target) >= 0;
  };

  // Invoke a method (with arguments) on every item in a collection.
  _.invoke = function(obj, method) {
    var args = slice.call(arguments, 2);
    var isFunc = _.isFunction(method);
    return _.map(obj, function(value) {
      return (isFunc ? method : value[method]).apply(value, args);
    });
  };

  // Convenience version of a common use case of `map`: fetching a property.
  _.pluck = function(obj, key) {
    return _.map(obj, _.property(key));
  };

  // Convenience version of a common use case of `filter`: selecting only objects
  // containing specific `key:value` pairs.
  _.where = function(obj, attrs) {
    return _.filter(obj, _.matches(attrs));
  };

  // Convenience version of a common use case of `find`: getting the first object
  // containing specific `key:value` pairs.
  _.findWhere = function(obj, attrs) {
    return _.find(obj, _.matches(attrs));
  };

  // Return the maximum element (or element-based computation).
  _.max = function(obj, iteratee, context) {
    var result = -Infinity, lastComputed = -Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = obj.length === +obj.length ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value > result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed > lastComputed || computed === -Infinity && result === -Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Return the minimum element (or element-based computation).
  _.min = function(obj, iteratee, context) {
    var result = Infinity, lastComputed = Infinity,
        value, computed;
    if (iteratee == null && obj != null) {
      obj = obj.length === +obj.length ? obj : _.values(obj);
      for (var i = 0, length = obj.length; i < length; i++) {
        value = obj[i];
        if (value < result) {
          result = value;
        }
      }
    } else {
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index, list) {
        computed = iteratee(value, index, list);
        if (computed < lastComputed || computed === Infinity && result === Infinity) {
          result = value;
          lastComputed = computed;
        }
      });
    }
    return result;
  };

  // Shuffle a collection, using the modern version of the
  // [Fisher-Yates shuffle](http://en.wikipedia.org/wiki/Fisherâ€“Yates_shuffle).
  _.shuffle = function(obj) {
    var set = obj && obj.length === +obj.length ? obj : _.values(obj);
    var length = set.length;
    var shuffled = Array(length);
    for (var index = 0, rand; index < length; index++) {
      rand = _.random(0, index);
      if (rand !== index) shuffled[index] = shuffled[rand];
      shuffled[rand] = set[index];
    }
    return shuffled;
  };

  // Sample **n** random values from a collection.
  // If **n** is not specified, returns a single random element.
  // The internal `guard` argument allows it to work with `map`.
  _.sample = function(obj, n, guard) {
    if (n == null || guard) {
      if (obj.length !== +obj.length) obj = _.values(obj);
      return obj[_.random(obj.length - 1)];
    }
    return _.shuffle(obj).slice(0, Math.max(0, n));
  };

  // Sort the object's values by a criterion produced by an iteratee.
  _.sortBy = function(obj, iteratee, context) {
    iteratee = cb(iteratee, context);
    return _.pluck(_.map(obj, function(value, index, list) {
      return {
        value: value,
        index: index,
        criteria: iteratee(value, index, list)
      };
    }).sort(function(left, right) {
      var a = left.criteria;
      var b = right.criteria;
      if (a !== b) {
        if (a > b || a === void 0) return 1;
        if (a < b || b === void 0) return -1;
      }
      return left.index - right.index;
    }), 'value');
  };

  // An internal function used for aggregate "group by" operations.
  var group = function(behavior) {
    return function(obj, iteratee, context) {
      var result = {};
      iteratee = cb(iteratee, context);
      _.each(obj, function(value, index) {
        var key = iteratee(value, index, obj);
        behavior(result, value, key);
      });
      return result;
    };
  };

  // Groups the object's values by a criterion. Pass either a string attribute
  // to group by, or a function that returns the criterion.
  _.groupBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key].push(value); else result[key] = [value];
  });

  // Indexes the object's values by a criterion, similar to `groupBy`, but for
  // when you know that your index values will be unique.
  _.indexBy = group(function(result, value, key) {
    result[key] = value;
  });

  // Counts instances of an object that group by a certain criterion. Pass
  // either a string attribute to count by, or a function that returns the
  // criterion.
  _.countBy = group(function(result, value, key) {
    if (_.has(result, key)) result[key]++; else result[key] = 1;
  });

  // Use a comparator function to figure out the smallest index at which
  // an object should be inserted so as to maintain order. Uses binary search.
  _.sortedIndex = function(array, obj, iteratee, context) {
    iteratee = cb(iteratee, context, 1);
    var value = iteratee(obj);
    var low = 0, high = array.length;
    while (low < high) {
      var mid = low + high >>> 1;
      if (iteratee(array[mid]) < value) low = mid + 1; else high = mid;
    }
    return low;
  };

  // Safely create a real, live array from anything iterable.
  _.toArray = function(obj) {
    if (!obj) return [];
    if (_.isArray(obj)) return slice.call(obj);
    if (obj.length === +obj.length) return _.map(obj, _.identity);
    return _.values(obj);
  };

  // Return the number of elements in an object.
  _.size = function(obj) {
    if (obj == null) return 0;
    return obj.length === +obj.length ? obj.length : _.keys(obj).length;
  };

  // Split a collection into two arrays: one whose elements all satisfy the given
  // predicate, and one whose elements all do not satisfy the predicate.
  _.partition = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var pass = [], fail = [];
    _.each(obj, function(value, key, obj) {
      (predicate(value, key, obj) ? pass : fail).push(value);
    });
    return [pass, fail];
  };

  // Array Functions
  // ---------------

  // Get the first element of an array. Passing **n** will return the first N
  // values in the array. Aliased as `head` and `take`. The **guard** check
  // allows it to work with `_.map`.
  _.first = _.head = _.take = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[0];
    return _.initial(array, array.length - n);
  };

  // Returns everything but the last entry of the array. Especially useful on
  // the arguments object. Passing **n** will return all the values in
  // the array, excluding the last N. The **guard** check allows it to work with
  // `_.map`.
  _.initial = function(array, n, guard) {
    return slice.call(array, 0, Math.max(0, array.length - (n == null || guard ? 1 : n)));
  };

  // Get the last element of an array. Passing **n** will return the last N
  // values in the array. The **guard** check allows it to work with `_.map`.
  _.last = function(array, n, guard) {
    if (array == null) return void 0;
    if (n == null || guard) return array[array.length - 1];
    return _.rest(array, Math.max(0, array.length - n));
  };

  // Returns everything but the first entry of the array. Aliased as `tail` and `drop`.
  // Especially useful on the arguments object. Passing an **n** will return
  // the rest N values in the array. The **guard**
  // check allows it to work with `_.map`.
  _.rest = _.tail = _.drop = function(array, n, guard) {
    return slice.call(array, n == null || guard ? 1 : n);
  };

  // Trim out all falsy values from an array.
  _.compact = function(array) {
    return _.filter(array, _.identity);
  };

  // Internal implementation of a recursive `flatten` function.
  var flatten = function(input, shallow, strict, startIndex) {
    var output = [], idx = 0, value;
    for (var i = startIndex || 0, length = input && input.length; i < length; i++) {
      value = input[i];
      if (value && value.length >= 0 && (_.isArray(value) || _.isArguments(value))) {
        //flatten current level of array or arguments object
        if (!shallow) value = flatten(value, shallow, strict);
        var j = 0, len = value.length;
        output.length += len;
        while (j < len) {
          output[idx++] = value[j++];
        }
      } else if (!strict) {
        output[idx++] = value;
      }
    }
    return output;
  };

  // Flatten out an array, either recursively (by default), or just one level.
  _.flatten = function(array, shallow) {
    return flatten(array, shallow, false);
  };

  // Return a version of the array that does not contain the specified value(s).
  _.without = function(array) {
    return _.difference(array, slice.call(arguments, 1));
  };

  // Produce a duplicate-free version of the array. If the array has already
  // been sorted, you have the option of using a faster algorithm.
  // Aliased as `unique`.
  _.uniq = _.unique = function(array, isSorted, iteratee, context) {
    if (array == null) return [];
    if (!_.isBoolean(isSorted)) {
      context = iteratee;
      iteratee = isSorted;
      isSorted = false;
    }
    if (iteratee != null) iteratee = cb(iteratee, context);
    var result = [];
    var seen = [];
    for (var i = 0, length = array.length; i < length; i++) {
      var value = array[i],
          computed = iteratee ? iteratee(value, i, array) : value;
      if (isSorted) {
        if (!i || seen !== computed) result.push(value);
        seen = computed;
      } else if (iteratee) {
        if (!_.contains(seen, computed)) {
          seen.push(computed);
          result.push(value);
        }
      } else if (!_.contains(result, value)) {
        result.push(value);
      }
    }
    return result;
  };

  // Produce an array that contains the union: each distinct element from all of
  // the passed-in arrays.
  _.union = function() {
    return _.uniq(flatten(arguments, true, true));
  };

  // Produce an array that contains every item shared between all the
  // passed-in arrays.
  _.intersection = function(array) {
    if (array == null) return [];
    var result = [];
    var argsLength = arguments.length;
    for (var i = 0, length = array.length; i < length; i++) {
      var item = array[i];
      if (_.contains(result, item)) continue;
      for (var j = 1; j < argsLength; j++) {
        if (!_.contains(arguments[j], item)) break;
      }
      if (j === argsLength) result.push(item);
    }
    return result;
  };

  // Take the difference between one array and a number of other arrays.
  // Only the elements present in just the first array will remain.
  _.difference = function(array) {
    var rest = flatten(arguments, true, true, 1);
    return _.filter(array, function(value){
      return !_.contains(rest, value);
    });
  };

  // Zip together multiple lists into a single array -- elements that share
  // an index go together.
  _.zip = function(array) {
    if (array == null) return [];
    var length = _.max(arguments, 'length').length;
    var results = Array(length);
    while (length-- > 0) {
      results[length] = _.pluck(arguments, length);
    }
    return results;
  };

  // Complement of _.zip. Unzip accepts an array of arrays and groups
  // each array's elements on shared indices
  _.unzip = function(array) {
    return _.zip.apply(null, array);
  };

  // Converts lists into objects. Pass either a single array of `[key, value]`
  // pairs, or two parallel arrays of the same length -- one of keys, and one of
  // the corresponding values.
  _.object = function(list, values) {
    if (list == null) return {};
    var result = {};
    for (var i = 0, length = list.length; i < length; i++) {
      if (values) {
        result[list[i]] = values[i];
      } else {
        result[list[i][0]] = list[i][1];
      }
    }
    return result;
  };

  // Return the position of the first occurrence of an item in an array,
  // or -1 if the item is not included in the array.
  // If the array is large and already in sort order, pass `true`
  // for **isSorted** to use binary search.
  _.indexOf = function(array, item, isSorted) {
    var i = 0, length = array && array.length;
    if (typeof isSorted == 'number') {
      i = isSorted < 0 ? Math.max(0, length + isSorted) : isSorted;
    } else if (isSorted) {
      i = _.sortedIndex(array, item);
      return array[i] === item ? i : -1;
    }
    for (; i < length; i++) if (array[i] === item) return i;
    return -1;
  };

  _.lastIndexOf = function(array, item, from) {
    var idx = array ? array.length : 0;
    if (typeof from == 'number') {
      idx = from < 0 ? idx + from + 1 : Math.min(idx, from + 1);
    }
    while (--idx >= 0) if (array[idx] === item) return idx;
    return -1;
  };

  // Returns the first index on an array-like that passes a predicate test
  _.findIndex = function(array, predicate, context) {
    predicate = cb(predicate, context);
    var length = array != null ? array.length : 0;
    for (var i = 0; i < length; i++) {
      if (predicate(array[i], i, array)) return i;
    }
    return -1;
  };

  // Generate an integer Array containing an arithmetic progression. A port of
  // the native Python `range()` function. See
  // [the Python documentation](http://docs.python.org/library/functions.html#range).
  _.range = function(start, stop, step) {
    if (arguments.length <= 1) {
      stop = start || 0;
      start = 0;
    }
    step = step || 1;

    var length = Math.max(Math.ceil((stop - start) / step), 0);
    var range = Array(length);

    for (var idx = 0; idx < length; idx++, start += step) {
      range[idx] = start;
    }

    return range;
  };

  // Function (ahem) Functions
  // ------------------

  // Reusable constructor function for prototype setting.
  var Ctor = function(){};

  // Determines whether to execute a function as a constructor
  // or a normal function with the provided arguments
  var executeBound = function(sourceFunc, boundFunc, context, callingContext, args) {
    if (!(callingContext instanceof boundFunc)) return sourceFunc.apply(context, args);
    Ctor.prototype = sourceFunc.prototype;
    var self = new Ctor;
    Ctor.prototype = null;
    var result = sourceFunc.apply(self, args);
    if (_.isObject(result)) return result;
    return self;
  };

  // Create a function bound to a given object (assigning `this`, and arguments,
  // optionally). Delegates to **ECMAScript 5**'s native `Function.bind` if
  // available.
  _.bind = function(func, context) {
    if (nativeBind && func.bind === nativeBind) return nativeBind.apply(func, slice.call(arguments, 1));
    if (!_.isFunction(func)) throw TypeError('Bind must be called on a function');
    var args = slice.call(arguments, 2);
    return function bound() {
      return executeBound(func, bound, context, this, args.concat(slice.call(arguments)));
    };
  };

  // Partially apply a function by creating a version that has had some of its
  // arguments pre-filled, without changing its dynamic `this` context. _ acts
  // as a placeholder, allowing any combination of arguments to be pre-filled.
  _.partial = function(func) {
    var boundArgs = slice.call(arguments, 1);
    return function bound() {
      var position = 0;
      var args = boundArgs.slice();
      for (var i = 0, length = args.length; i < length; i++) {
        if (args[i] === _) args[i] = arguments[position++];
      }
      while (position < arguments.length) args.push(arguments[position++]);
      return executeBound(func, bound, this, this, args);
    };
  };

  // Bind a number of an object's methods to that object. Remaining arguments
  // are the method names to be bound. Useful for ensuring that all callbacks
  // defined on an object belong to it.
  _.bindAll = function(obj) {
    var i, length = arguments.length, key;
    if (length <= 1) throw new Error('bindAll must be passed function names');
    for (i = 1; i < length; i++) {
      key = arguments[i];
      obj[key] = _.bind(obj[key], obj);
    }
    return obj;
  };

  // Memoize an expensive function by storing its results.
  _.memoize = function(func, hasher) {
    var memoize = function(key) {
      var cache = memoize.cache;
      var address = '' + (hasher ? hasher.apply(this, arguments) : key);
      if (!_.has(cache, address)) cache[address] = func.apply(this, arguments);
      return cache[address];
    };
    memoize.cache = {};
    return memoize;
  };

  // Delays a function for the given number of milliseconds, and then calls
  // it with the arguments supplied.
  _.delay = function(func, wait) {
    var args = slice.call(arguments, 2);
    return setTimeout(function(){
      return func.apply(null, args);
    }, wait);
  };

  // Defers a function, scheduling it to run after the current call stack has
  // cleared.
  _.defer = function(func) {
    return _.delay.apply(_, [func, 1].concat(slice.call(arguments, 1)));
  };

  // Returns a function, that, when invoked, will only be triggered at most once
  // during a given window of time. Normally, the throttled function will run
  // as much as it can, without ever going more than once per `wait` duration;
  // but if you'd like to disable the execution on the leading edge, pass
  // `{leading: false}`. To disable execution on the trailing edge, ditto.
  _.throttle = function(func, wait, options) {
    var context, args, result;
    var timeout = null;
    var previous = 0;
    if (!options) options = {};
    var later = function() {
      previous = options.leading === false ? 0 : _.now();
      timeout = null;
      result = func.apply(context, args);
      if (!timeout) context = args = null;
    };
    return function() {
      var now = _.now();
      if (!previous && options.leading === false) previous = now;
      var remaining = wait - (now - previous);
      context = this;
      args = arguments;
      if (remaining <= 0 || remaining > wait) {
        if (timeout) {
          clearTimeout(timeout);
          timeout = null;
        }
        previous = now;
        result = func.apply(context, args);
        if (!timeout) context = args = null;
      } else if (!timeout && options.trailing !== false) {
        timeout = setTimeout(later, remaining);
      }
      return result;
    };
  };

  // Returns a function, that, as long as it continues to be invoked, will not
  // be triggered. The function will be called after it stops being called for
  // N milliseconds. If `immediate` is passed, trigger the function on the
  // leading edge, instead of the trailing.
  _.debounce = function(func, wait, immediate) {
    var timeout, args, context, timestamp, result;

    var later = function() {
      var last = _.now() - timestamp;

      if (last < wait && last >= 0) {
        timeout = setTimeout(later, wait - last);
      } else {
        timeout = null;
        if (!immediate) {
          result = func.apply(context, args);
          if (!timeout) context = args = null;
        }
      }
    };

    return function() {
      context = this;
      args = arguments;
      timestamp = _.now();
      var callNow = immediate && !timeout;
      if (!timeout) timeout = setTimeout(later, wait);
      if (callNow) {
        result = func.apply(context, args);
        context = args = null;
      }

      return result;
    };
  };

  // Returns the first function passed as an argument to the second,
  // allowing you to adjust arguments, run code before and after, and
  // conditionally execute the original function.
  _.wrap = function(func, wrapper) {
    return _.partial(wrapper, func);
  };

  // Returns a negated version of the passed-in predicate.
  _.negate = function(predicate) {
    return function() {
      return !predicate.apply(this, arguments);
    };
  };

  // Returns a function that is the composition of a list of functions, each
  // consuming the return value of the function that follows.
  _.compose = function() {
    var args = arguments;
    var start = args.length - 1;
    return function() {
      var i = start;
      var result = args[start].apply(this, arguments);
      while (i--) result = args[i].call(this, result);
      return result;
    };
  };

  // Returns a function that will only be executed after being called N times.
  _.after = function(times, func) {
    return function() {
      if (--times < 1) {
        return func.apply(this, arguments);
      }
    };
  };

  // Returns a function that will only be executed before being called N times.
  _.before = function(times, func) {
    var memo;
    return function() {
      if (--times > 0) {
        memo = func.apply(this, arguments);
      }
      if (times <= 1) {
        func = null;
      }
      return memo;
    };
  };

  // Returns a function that will be executed at most one time, no matter how
  // often you call it. Useful for lazy initialization.
  _.once = _.partial(_.before, 2);

  // Object Functions
  // ----------------

  // Keys in IE < 9 that won't be iterated by `for key in ...` and thus missed.
  var hasEnumBug = !({toString: null}).propertyIsEnumerable('toString');
  var nonEnumerableProps = ['constructor', 'valueOf', 'isPrototypeOf', 'toString',
                      'propertyIsEnumerable', 'hasOwnProperty', 'toLocaleString'];

  // Retrieve the names of an object's properties.
  // Delegates to **ECMAScript 5**'s native `Object.keys`
  _.keys = function(obj) {
    if (!_.isObject(obj)) return [];
    if (nativeKeys) return nativeKeys(obj);
    var keys = [];
    for (var key in obj) if (_.has(obj, key)) keys.push(key);

    // Ahem, IE < 9.
    if (hasEnumBug) {
      var nonEnumIdx = nonEnumerableProps.length;
      while (nonEnumIdx--) {
        var prop = nonEnumerableProps[nonEnumIdx];
        if (_.has(obj, prop) && !_.contains(keys, prop)) keys.push(prop);
      }
    }
    return keys;
  };

  // Retrieve the values of an object's properties.
  _.values = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var values = Array(length);
    for (var i = 0; i < length; i++) {
      values[i] = obj[keys[i]];
    }
    return values;
  };

  // Convert an object into a list of `[key, value]` pairs.
  _.pairs = function(obj) {
    var keys = _.keys(obj);
    var length = keys.length;
    var pairs = Array(length);
    for (var i = 0; i < length; i++) {
      pairs[i] = [keys[i], obj[keys[i]]];
    }
    return pairs;
  };

  // Invert the keys and values of an object. The values must be serializable.
  _.invert = function(obj) {
    var result = {};
    var keys = _.keys(obj);
    for (var i = 0, length = keys.length; i < length; i++) {
      result[obj[keys[i]]] = keys[i];
    }
    return result;
  };

  // Return a sorted list of the function names available on the object.
  // Aliased as `methods`
  _.functions = _.methods = function(obj) {
    var names = [];
    for (var key in obj) {
      if (_.isFunction(obj[key])) names.push(key);
    }
    return names.sort();
  };

  // Extend a given object with all the properties in passed-in object(s).
  _.extend = function(obj) {
    if (!_.isObject(obj)) return obj;
    var source, prop;
    for (var i = 1, length = arguments.length; i < length; i++) {
      source = arguments[i];
      for (prop in source) {
        obj[prop] = source[prop];
      }
    }
    return obj;
  };

  // Returns the first key on an object that passes a predicate test
  _.findKey = function(obj, predicate, context) {
    predicate = cb(predicate, context);
    var keys = _.keys(obj), key;
    for (var i = 0, length = keys.length; i < length; i++) {
      key = keys[i];
      if (predicate(obj[key], key, obj)) return key;
    }
  };

  // Return a copy of the object only containing the whitelisted properties.
  _.pick = function(obj, iteratee, context) {
    var result = {}, key;
    if (obj == null) return result;
    if (_.isFunction(iteratee)) {
      iteratee = optimizeCb(iteratee, context);
      for (key in obj) {
        var value = obj[key];
        if (iteratee(value, key, obj)) result[key] = value;
      }
    } else {
      var keys = flatten(arguments, false, false, 1);
      obj = new Object(obj);
      for (var i = 0, length = keys.length; i < length; i++) {
        key = keys[i];
        if (key in obj) result[key] = obj[key];
      }
    }
    return result;
  };

   // Return a copy of the object without the blacklisted properties.
  _.omit = function(obj, iteratee, context) {
    if (_.isFunction(iteratee)) {
      iteratee = _.negate(iteratee);
    } else {
      var keys = _.map(flatten(arguments, false, false, 1), String);
      iteratee = function(value, key) {
        return !_.contains(keys, key);
      };
    }
    return _.pick(obj, iteratee, context);
  };

  // Fill in a given object with default properties.
  _.defaults = function(obj) {
    if (!_.isObject(obj)) return obj;
    for (var i = 1, length = arguments.length; i < length; i++) {
      var source = arguments[i];
      for (var prop in source) {
        if (obj[prop] === void 0) obj[prop] = source[prop];
      }
    }
    return obj;
  };

  // Create a (shallow-cloned) duplicate of an object.
  _.clone = function(obj) {
    if (!_.isObject(obj)) return obj;
    return _.isArray(obj) ? obj.slice() : _.extend({}, obj);
  };

  // Invokes interceptor with the obj, and then returns obj.
  // The primary purpose of this method is to "tap into" a method chain, in
  // order to perform operations on intermediate results within the chain.
  _.tap = function(obj, interceptor) {
    interceptor(obj);
    return obj;
  };

  // Internal recursive comparison function for `isEqual`.
  var eq = function(a, b, aStack, bStack) {
    // Identical objects are equal. `0 === -0`, but they aren't identical.
    // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).
    if (a === b) return a !== 0 || 1 / a === 1 / b;
    // A strict comparison is necessary because `null == undefined`.
    if (a == null || b == null) return a === b;
    // Unwrap any wrapped objects.
    if (a instanceof _) a = a._wrapped;
    if (b instanceof _) b = b._wrapped;
    // Compare `[[Class]]` names.
    var className = toString.call(a);
    if (className !== toString.call(b)) return false;
    switch (className) {
      // Strings, numbers, regular expressions, dates, and booleans are compared by value.
      case '[object RegExp]':
      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')
      case '[object String]':
        // Primitives and their corresponding object wrappers are equivalent; thus, `"5"` is
        // equivalent to `new String("5")`.
        return '' + a === '' + b;
      case '[object Number]':
        // `NaN`s are equivalent, but non-reflexive.
        // Object(NaN) is equivalent to NaN
        if (+a !== +a) return +b !== +b;
        // An `egal` comparison is performed for other numeric values.
        return +a === 0 ? 1 / +a === 1 / b : +a === +b;
      case '[object Date]':
      case '[object Boolean]':
        // Coerce dates and booleans to numeric primitive values. Dates are compared by their
        // millisecond representations. Note that invalid dates with millisecond representations
        // of `NaN` are not equivalent.
        return +a === +b;
    }

    var areArrays = className === '[object Array]';
    if (!areArrays) {
      if (typeof a != 'object' || typeof b != 'object') return false;

      // Objects with different constructors are not equivalent, but `Object`s or `Array`s
      // from different frames are.
      var aCtor = a.constructor, bCtor = b.constructor;
      if (aCtor !== bCtor && !(_.isFunction(aCtor) && aCtor instanceof aCtor &&
                               _.isFunction(bCtor) && bCtor instanceof bCtor)
                          && ('constructor' in a && 'constructor' in b)) {
        return false;
      }
    }
    // Assume equality for cyclic structures. The algorithm for detecting cyclic
    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.
    var length = aStack.length;
    while (length--) {
      // Linear search. Performance is inversely proportional to the number of
      // unique nested structures.
      if (aStack[length] === a) return bStack[length] === b;
    }

    // Add the first object to the stack of traversed objects.
    aStack.push(a);
    bStack.push(b);
    var size, result;
    // Recursively compare objects and arrays.
    if (areArrays) {
      // Compare array lengths to determine if a deep comparison is necessary.
      size = a.length;
      result = size === b.length;
      if (result) {
        // Deep compare the contents, ignoring non-numeric properties.
        while (size--) {
          if (!(result = eq(a[size], b[size], aStack, bStack))) break;
        }
      }
    } else {
      // Deep compare objects.
      var keys = _.keys(a), key;
      size = keys.length;
      // Ensure that both objects contain the same number of properties before comparing deep equality.
      result = _.keys(b).length === size;
      if (result) {
        while (size--) {
          // Deep compare each member
          key = keys[size];
          if (!(result = _.has(b, key) && eq(a[key], b[key], aStack, bStack))) break;
        }
      }
    }
    // Remove the first object from the stack of traversed objects.
    aStack.pop();
    bStack.pop();
    return result;
  };

  // Perform a deep comparison to check if two objects are equal.
  _.isEqual = function(a, b) {
    return eq(a, b, [], []);
  };

  // Is a given array, string, or object empty?
  // An "empty" object has no enumerable own-properties.
  _.isEmpty = function(obj) {
    if (obj == null) return true;
    if (_.isArray(obj) || _.isString(obj) || _.isArguments(obj)) return obj.length === 0;
    for (var key in obj) if (_.has(obj, key)) return false;
    return true;
  };

  // Is a given value a DOM element?
  _.isElement = function(obj) {
    return !!(obj && obj.nodeType === 1);
  };

  // Is a given value an array?
  // Delegates to ECMA5's native Array.isArray
  _.isArray = nativeIsArray || function(obj) {
    return toString.call(obj) === '[object Array]';
  };

  // Is a given variable an object?
  _.isObject = function(obj) {
    var type = typeof obj;
    return type === 'function' || type === 'object' && !!obj;
  };

  // Add some isType methods: isArguments, isFunction, isString, isNumber, isDate, isRegExp, isError.
  _.each(['Arguments', 'Function', 'String', 'Number', 'Date', 'RegExp', 'Error'], function(name) {
    _['is' + name] = function(obj) {
      return toString.call(obj) === '[object ' + name + ']';
    };
  });

  // Define a fallback version of the method in browsers (ahem, IE < 9), where
  // there isn't any inspectable "Arguments" type.
  if (!_.isArguments(arguments)) {
    _.isArguments = function(obj) {
      return _.has(obj, 'callee');
    };
  }

  // Optimize `isFunction` if appropriate. Work around an IE 11 bug.
  if (typeof /./ !== 'function') {
    _.isFunction = function(obj) {
      return typeof obj == 'function' || false;
    };
  }

  // Is a given object a finite number?
  _.isFinite = function(obj) {
    return isFinite(obj) && !isNaN(parseFloat(obj));
  };

  // Is the given value `NaN`? (NaN is the only number which does not equal itself).
  _.isNaN = function(obj) {
    return _.isNumber(obj) && obj !== +obj;
  };

  // Is a given value a boolean?
  _.isBoolean = function(obj) {
    return obj === true || obj === false || toString.call(obj) === '[object Boolean]';
  };

  // Is a given value equal to null?
  _.isNull = function(obj) {
    return obj === null;
  };

  // Is a given variable undefined?
  _.isUndefined = function(obj) {
    return obj === void 0;
  };

  // Shortcut function for checking if an object has a given property directly
  // on itself (in other words, not on a prototype).
  _.has = function(obj, key) {
    return obj != null && hasOwnProperty.call(obj, key);
  };

  // Utility Functions
  // -----------------

  // Run Underscore.js in *noConflict* mode, returning the `_` variable to its
  // previous owner. Returns a reference to the Underscore object.
  _.noConflict = function() {
    root._ = previousUnderscore;
    return this;
  };

  // Keep the identity function around for default iteratees.
  _.identity = function(value) {
    return value;
  };

  // Predicate-generating functions. Often useful outside of Underscore.
  _.constant = function(value) {
    return function() {
      return value;
    };
  };

  _.noop = function(){};

  _.property = function(key) {
    return function(obj) {
      return obj == null ? void 0 : obj[key];
    };
  };

  // Returns a predicate for checking whether an object has a given set of `key:value` pairs.
  _.matches = function(attrs) {
    var pairs = _.pairs(attrs), length = pairs.length;
    return function(obj) {
      if (obj == null) return !length;
      obj = new Object(obj);
      for (var i = 0; i < length; i++) {
        var pair = pairs[i], key = pair[0];
        if (pair[1] !== obj[key] || !(key in obj)) return false;
      }
      return true;
    };
  };

  // Run a function **n** times.
  _.times = function(n, iteratee, context) {
    var accum = Array(Math.max(0, n));
    iteratee = optimizeCb(iteratee, context, 1);
    for (var i = 0; i < n; i++) accum[i] = iteratee(i);
    return accum;
  };

  // Return a random integer between min and max (inclusive).
  _.random = function(min, max) {
    if (max == null) {
      max = min;
      min = 0;
    }
    return min + Math.floor(Math.random() * (max - min + 1));
  };

  // A (possibly faster) way to get the current timestamp as an integer.
  _.now = Date.now || function() {
    return new Date().getTime();
  };

   // List of HTML entities for escaping.
  var escapeMap = {
    '&': '&amp;',
    '<': '&lt;',
    '>': '&gt;',
    '"': '&quot;',
    "'": '&#x27;',
    '`': '&#x60;'
  };
  var unescapeMap = _.invert(escapeMap);

  // Functions for escaping and unescaping strings to/from HTML interpolation.
  var createEscaper = function(map) {
    var escaper = function(match) {
      return map[match];
    };
    // Regexes for identifying a key that needs to be escaped
    var source = '(?:' + _.keys(map).join('|') + ')';
    var testRegexp = RegExp(source);
    var replaceRegexp = RegExp(source, 'g');
    return function(string) {
      string = string == null ? '' : '' + string;
      return testRegexp.test(string) ? string.replace(replaceRegexp, escaper) : string;
    };
  };
  _.escape = createEscaper(escapeMap);
  _.unescape = createEscaper(unescapeMap);

  // If the value of the named `property` is a function then invoke it with the
  // `object` as context; otherwise, return it.
  _.result = function(object, property, fallback) {
    var value = object == null ? void 0 : object[property];
    if (value === void 0) {
      value = fallback;
    }
    return _.isFunction(value) ? value.call(object) : value;
  };

  // Generate a unique integer id (unique within the entire client session).
  // Useful for temporary DOM ids.
  var idCounter = 0;
  _.uniqueId = function(prefix) {
    var id = ++idCounter + '';
    return prefix ? prefix + id : id;
  };

  // By default, Underscore uses ERB-style template delimiters, change the
  // following template settings to use alternative delimiters.
  _.templateSettings = {
    evaluate    : /<%([\s\S]+?)%>/g,
    interpolate : /<%=([\s\S]+?)%>/g,
    escape      : /<%-([\s\S]+?)%>/g
  };

  // When customizing `templateSettings`, if you don't want to define an
  // interpolation, evaluation or escaping regex, we need one that is
  // guaranteed not to match.
  var noMatch = /(.)^/;

  // Certain characters need to be escaped so that they can be put into a
  // string literal.
  var escapes = {
    "'":      "'",
    '\\':     '\\',
    '\r':     'r',
    '\n':     'n',
    '\u2028': 'u2028',
    '\u2029': 'u2029'
  };

  var escaper = /\\|'|\r|\n|\u2028|\u2029/g;

  var escapeChar = function(match) {
    return '\\' + escapes[match];
  };

  // JavaScript micro-templating, similar to John Resig's implementation.
  // Underscore templating handles arbitrary delimiters, preserves whitespace,
  // and correctly escapes quotes within interpolated code.
  // NB: `oldSettings` only exists for backwards compatibility.
  _.template = function(text, settings, oldSettings) {
    if (!settings && oldSettings) settings = oldSettings;
    settings = _.defaults({}, settings, _.templateSettings);

    // Combine delimiters into one regular expression via alternation.
    var matcher = RegExp([
      (settings.escape || noMatch).source,
      (settings.interpolate || noMatch).source,
      (settings.evaluate || noMatch).source
    ].join('|') + '|$', 'g');

    // Compile the template source, escaping string literals appropriately.
    var index = 0;
    var source = "__p+='";
    text.replace(matcher, function(match, escape, interpolate, evaluate, offset) {
      source += text.slice(index, offset).replace(escaper, escapeChar);
      index = offset + match.length;

      if (escape) {
        source += "'+\n((__t=(" + escape + "))==null?'':_.escape(__t))+\n'";
      } else if (interpolate) {
        source += "'+\n((__t=(" + interpolate + "))==null?'':__t)+\n'";
      } else if (evaluate) {
        source += "';\n" + evaluate + "\n__p+='";
      }

      // Adobe VMs need the match returned to produce the correct offest.
      return match;
    });
    source += "';\n";

    // If a variable is not specified, place data values in local scope.
    if (!settings.variable) source = 'with(obj||{}){\n' + source + '}\n';

    source = "var __t,__p='',__j=Array.prototype.join," +
      "print=function(){__p+=__j.call(arguments,'');};\n" +
      source + 'return __p;\n';

    try {
      var render = new Function(settings.variable || 'obj', '_', source);
    } catch (e) {
      e.source = source;
      throw e;
    }

    var template = function(data) {
      return render.call(this, data, _);
    };

    // Provide the compiled source as a convenience for precompilation.
    var argument = settings.variable || 'obj';
    template.source = 'function(' + argument + '){\n' + source + '}';

    return template;
  };

  // Add a "chain" function. Start chaining a wrapped Underscore object.
  _.chain = function(obj) {
    var instance = _(obj);
    instance._chain = true;
    return instance;
  };

  // OOP
  // ---------------
  // If Underscore is called as a function, it returns a wrapped object that
  // can be used OO-style. This wrapper holds altered versions of all the
  // underscore functions. Wrapped objects may be chained.

  // Helper function to continue chaining intermediate results.
  var result = function(instance, obj) {
    return instance._chain ? _(obj).chain() : obj;
  };

  // Add your own custom functions to the Underscore object.
  _.mixin = function(obj) {
    _.each(_.functions(obj), function(name) {
      var func = _[name] = obj[name];
      _.prototype[name] = function() {
        var args = [this._wrapped];
        push.apply(args, arguments);
        return result(this, func.apply(_, args));
      };
    });
  };

  // Add all of the Underscore functions to the wrapper object.
  _.mixin(_);

  // Add all mutator Array functions to the wrapper.
  _.each(['pop', 'push', 'reverse', 'shift', 'sort', 'splice', 'unshift'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      var obj = this._wrapped;
      method.apply(obj, arguments);
      if ((name === 'shift' || name === 'splice') && obj.length === 0) delete obj[0];
      return result(this, obj);
    };
  });

  // Add all accessor Array functions to the wrapper.
  _.each(['concat', 'join', 'slice'], function(name) {
    var method = ArrayProto[name];
    _.prototype[name] = function() {
      return result(this, method.apply(this._wrapped, arguments));
    };
  });

  // Extracts the result from a wrapped and chained object.
  _.prototype.value = function() {
    return this._wrapped;
  };

  // AMD registration happens at the end for compatibility with AMD loaders
  // that may not enforce next-turn semantics on modules. Even though general
  // practice for AMD registration is to be anonymous, underscore registers
  // as a named module because, like jQuery, it is a base library that is
  // popular enough to be bundled in a third party lib, but not be part of
  // an AMD load request. Those cases could generate an error when an
  // anonymous define() is called outside of a loader request.
  if (typeof define === 'function' && define.amd) {
    define('underscore', [], function() {
      return _;
    });
  }
}.call(this));

});
require.register("noflo-fbp/lib/fbp.js", function(exports, require, module){
module.exports = (function(){
  /*
   * Generated by PEG.js 0.7.0.
   *
   * http://pegjs.majda.cz/
   */
  
  function quote(s) {
    /*
     * ECMA-262, 5th ed., 7.8.4: All characters may appear literally in a
     * string literal except for the closing quote character, backslash,
     * carriage return, line separator, paragraph separator, and line feed.
     * Any character may appear in the form of an escape sequence.
     *
     * For portability, we also escape escape all control and non-ASCII
     * characters. Note that "\0" and "\v" escape sequences are not used
     * because JSHint does not like the first and IE the second.
     */
     return '"' + s
      .replace(/\\/g, '\\\\')  // backslash
      .replace(/"/g, '\\"')    // closing quote character
      .replace(/\x08/g, '\\b') // backspace
      .replace(/\t/g, '\\t')   // horizontal tab
      .replace(/\n/g, '\\n')   // line feed
      .replace(/\f/g, '\\f')   // form feed
      .replace(/\r/g, '\\r')   // carriage return
      .replace(/[\x00-\x07\x0B\x0E-\x1F\x80-\uFFFF]/g, escape)
      + '"';
  }
  
  var result = {
    /*
     * Parses the input with a generated parser. If the parsing is successfull,
     * returns a value explicitly or implicitly specified by the grammar from
     * which the parser was generated (see |PEG.buildParser|). If the parsing is
     * unsuccessful, throws |PEG.parser.SyntaxError| describing the error.
     */
    parse: function(input, startRule) {
      var parseFunctions = {
        "start": parse_start,
        "line": parse_line,
        "LineTerminator": parse_LineTerminator,
        "comment": parse_comment,
        "connection": parse_connection,
        "bridge": parse_bridge,
        "leftlet": parse_leftlet,
        "iip": parse_iip,
        "rightlet": parse_rightlet,
        "node": parse_node,
        "component": parse_component,
        "compMeta": parse_compMeta,
        "port": parse_port,
        "portWithIndex": parse_portWithIndex,
        "anychar": parse_anychar,
        "iipchar": parse_iipchar,
        "_": parse__,
        "__": parse___
      };
      
      if (startRule !== undefined) {
        if (parseFunctions[startRule] === undefined) {
          throw new Error("Invalid rule name: " + quote(startRule) + ".");
        }
      } else {
        startRule = "start";
      }
      
      var pos = 0;
      var reportFailures = 0;
      var rightmostFailuresPos = 0;
      var rightmostFailuresExpected = [];
      
      function padLeft(input, padding, length) {
        var result = input;
        
        var padLength = length - input.length;
        for (var i = 0; i < padLength; i++) {
          result = padding + result;
        }
        
        return result;
      }
      
      function escape(ch) {
        var charCode = ch.charCodeAt(0);
        var escapeChar;
        var length;
        
        if (charCode <= 0xFF) {
          escapeChar = 'x';
          length = 2;
        } else {
          escapeChar = 'u';
          length = 4;
        }
        
        return '\\' + escapeChar + padLeft(charCode.toString(16).toUpperCase(), '0', length);
      }
      
      function matchFailed(failure) {
        if (pos < rightmostFailuresPos) {
          return;
        }
        
        if (pos > rightmostFailuresPos) {
          rightmostFailuresPos = pos;
          rightmostFailuresExpected = [];
        }
        
        rightmostFailuresExpected.push(failure);
      }
      
      function parse_start() {
        var result0, result1;
        var pos0;
        
        pos0 = pos;
        result0 = [];
        result1 = parse_line();
        while (result1 !== null) {
          result0.push(result1);
          result1 = parse_line();
        }
        if (result0 !== null) {
          result0 = (function(offset) { return parser.getResult();  })(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_line() {
        var result0, result1, result2, result3, result4, result5, result6, result7, result8;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse__();
        if (result0 !== null) {
          if (input.substr(pos, 7) === "EXPORT=") {
            result1 = "EXPORT=";
            pos += 7;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("\"EXPORT=\"");
            }
          }
          if (result1 !== null) {
            if (/^[A-Za-z.0-9_]/.test(input.charAt(pos))) {
              result3 = input.charAt(pos);
              pos++;
            } else {
              result3 = null;
              if (reportFailures === 0) {
                matchFailed("[A-Za-z.0-9_]");
              }
            }
            if (result3 !== null) {
              result2 = [];
              while (result3 !== null) {
                result2.push(result3);
                if (/^[A-Za-z.0-9_]/.test(input.charAt(pos))) {
                  result3 = input.charAt(pos);
                  pos++;
                } else {
                  result3 = null;
                  if (reportFailures === 0) {
                    matchFailed("[A-Za-z.0-9_]");
                  }
                }
              }
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              if (input.charCodeAt(pos) === 58) {
                result3 = ":";
                pos++;
              } else {
                result3 = null;
                if (reportFailures === 0) {
                  matchFailed("\":\"");
                }
              }
              if (result3 !== null) {
                if (/^[A-Z0-9_]/.test(input.charAt(pos))) {
                  result5 = input.charAt(pos);
                  pos++;
                } else {
                  result5 = null;
                  if (reportFailures === 0) {
                    matchFailed("[A-Z0-9_]");
                  }
                }
                if (result5 !== null) {
                  result4 = [];
                  while (result5 !== null) {
                    result4.push(result5);
                    if (/^[A-Z0-9_]/.test(input.charAt(pos))) {
                      result5 = input.charAt(pos);
                      pos++;
                    } else {
                      result5 = null;
                      if (reportFailures === 0) {
                        matchFailed("[A-Z0-9_]");
                      }
                    }
                  }
                } else {
                  result4 = null;
                }
                if (result4 !== null) {
                  result5 = parse__();
                  if (result5 !== null) {
                    result6 = parse_LineTerminator();
                    result6 = result6 !== null ? result6 : "";
                    if (result6 !== null) {
                      result0 = [result0, result1, result2, result3, result4, result5, result6];
                    } else {
                      result0 = null;
                      pos = pos1;
                    }
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, priv, pub) {return parser.registerExports(priv.join(""),pub.join(""))})(pos0, result0[2], result0[4]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        if (result0 === null) {
          pos0 = pos;
          pos1 = pos;
          result0 = parse__();
          if (result0 !== null) {
            if (input.substr(pos, 7) === "INPORT=") {
              result1 = "INPORT=";
              pos += 7;
            } else {
              result1 = null;
              if (reportFailures === 0) {
                matchFailed("\"INPORT=\"");
              }
            }
            if (result1 !== null) {
              if (/^[A-Za-z0-9_]/.test(input.charAt(pos))) {
                result3 = input.charAt(pos);
                pos++;
              } else {
                result3 = null;
                if (reportFailures === 0) {
                  matchFailed("[A-Za-z0-9_]");
                }
              }
              if (result3 !== null) {
                result2 = [];
                while (result3 !== null) {
                  result2.push(result3);
                  if (/^[A-Za-z0-9_]/.test(input.charAt(pos))) {
                    result3 = input.charAt(pos);
                    pos++;
                  } else {
                    result3 = null;
                    if (reportFailures === 0) {
                      matchFailed("[A-Za-z0-9_]");
                    }
                  }
                }
              } else {
                result2 = null;
              }
              if (result2 !== null) {
                if (input.charCodeAt(pos) === 46) {
                  result3 = ".";
                  pos++;
                } else {
                  result3 = null;
                  if (reportFailures === 0) {
                    matchFailed("\".\"");
                  }
                }
                if (result3 !== null) {
                  if (/^[A-Z0-9_]/.test(input.charAt(pos))) {
                    result5 = input.charAt(pos);
                    pos++;
                  } else {
                    result5 = null;
                    if (reportFailures === 0) {
                      matchFailed("[A-Z0-9_]");
                    }
                  }
                  if (result5 !== null) {
                    result4 = [];
                    while (result5 !== null) {
                      result4.push(result5);
                      if (/^[A-Z0-9_]/.test(input.charAt(pos))) {
                        result5 = input.charAt(pos);
                        pos++;
                      } else {
                        result5 = null;
                        if (reportFailures === 0) {
                          matchFailed("[A-Z0-9_]");
                        }
                      }
                    }
                  } else {
                    result4 = null;
                  }
                  if (result4 !== null) {
                    if (input.charCodeAt(pos) === 58) {
                      result5 = ":";
                      pos++;
                    } else {
                      result5 = null;
                      if (reportFailures === 0) {
                        matchFailed("\":\"");
                      }
                    }
                    if (result5 !== null) {
                      if (/^[A-Z0-9_]/.test(input.charAt(pos))) {
                        result7 = input.charAt(pos);
                        pos++;
                      } else {
                        result7 = null;
                        if (reportFailures === 0) {
                          matchFailed("[A-Z0-9_]");
                        }
                      }
                      if (result7 !== null) {
                        result6 = [];
                        while (result7 !== null) {
                          result6.push(result7);
                          if (/^[A-Z0-9_]/.test(input.charAt(pos))) {
                            result7 = input.charAt(pos);
                            pos++;
                          } else {
                            result7 = null;
                            if (reportFailures === 0) {
                              matchFailed("[A-Z0-9_]");
                            }
                          }
                        }
                      } else {
                        result6 = null;
                      }
                      if (result6 !== null) {
                        result7 = parse__();
                        if (result7 !== null) {
                          result8 = parse_LineTerminator();
                          result8 = result8 !== null ? result8 : "";
                          if (result8 !== null) {
                            result0 = [result0, result1, result2, result3, result4, result5, result6, result7, result8];
                          } else {
                            result0 = null;
                            pos = pos1;
                          }
                        } else {
                          result0 = null;
                          pos = pos1;
                        }
                      } else {
                        result0 = null;
                        pos = pos1;
                      }
                    } else {
                      result0 = null;
                      pos = pos1;
                    }
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
          if (result0 !== null) {
            result0 = (function(offset, node, port, pub) {return parser.registerInports(node.join(""),port.join(""),pub.join(""))})(pos0, result0[2], result0[4], result0[6]);
          }
          if (result0 === null) {
            pos = pos0;
          }
          if (result0 === null) {
            pos0 = pos;
            pos1 = pos;
            result0 = parse__();
            if (result0 !== null) {
              if (input.substr(pos, 8) === "OUTPORT=") {
                result1 = "OUTPORT=";
                pos += 8;
              } else {
                result1 = null;
                if (reportFailures === 0) {
                  matchFailed("\"OUTPORT=\"");
                }
              }
              if (result1 !== null) {
                if (/^[A-Za-z0-9_]/.test(input.charAt(pos))) {
                  result3 = input.charAt(pos);
                  pos++;
                } else {
                  result3 = null;
                  if (reportFailures === 0) {
                    matchFailed("[A-Za-z0-9_]");
                  }
                }
                if (result3 !== null) {
                  result2 = [];
                  while (result3 !== null) {
                    result2.push(result3);
                    if (/^[A-Za-z0-9_]/.test(input.charAt(pos))) {
                      result3 = input.charAt(pos);
                      pos++;
                    } else {
                      result3 = null;
                      if (reportFailures === 0) {
                        matchFailed("[A-Za-z0-9_]");
                      }
                    }
                  }
                } else {
                  result2 = null;
                }
                if (result2 !== null) {
                  if (input.charCodeAt(pos) === 46) {
                    result3 = ".";
                    pos++;
                  } else {
                    result3 = null;
                    if (reportFailures === 0) {
                      matchFailed("\".\"");
                    }
                  }
                  if (result3 !== null) {
                    if (/^[A-Z0-9_]/.test(input.charAt(pos))) {
                      result5 = input.charAt(pos);
                      pos++;
                    } else {
                      result5 = null;
                      if (reportFailures === 0) {
                        matchFailed("[A-Z0-9_]");
                      }
                    }
                    if (result5 !== null) {
                      result4 = [];
                      while (result5 !== null) {
                        result4.push(result5);
                        if (/^[A-Z0-9_]/.test(input.charAt(pos))) {
                          result5 = input.charAt(pos);
                          pos++;
                        } else {
                          result5 = null;
                          if (reportFailures === 0) {
                            matchFailed("[A-Z0-9_]");
                          }
                        }
                      }
                    } else {
                      result4 = null;
                    }
                    if (result4 !== null) {
                      if (input.charCodeAt(pos) === 58) {
                        result5 = ":";
                        pos++;
                      } else {
                        result5 = null;
                        if (reportFailures === 0) {
                          matchFailed("\":\"");
                        }
                      }
                      if (result5 !== null) {
                        if (/^[A-Z0-9_]/.test(input.charAt(pos))) {
                          result7 = input.charAt(pos);
                          pos++;
                        } else {
                          result7 = null;
                          if (reportFailures === 0) {
                            matchFailed("[A-Z0-9_]");
                          }
                        }
                        if (result7 !== null) {
                          result6 = [];
                          while (result7 !== null) {
                            result6.push(result7);
                            if (/^[A-Z0-9_]/.test(input.charAt(pos))) {
                              result7 = input.charAt(pos);
                              pos++;
                            } else {
                              result7 = null;
                              if (reportFailures === 0) {
                                matchFailed("[A-Z0-9_]");
                              }
                            }
                          }
                        } else {
                          result6 = null;
                        }
                        if (result6 !== null) {
                          result7 = parse__();
                          if (result7 !== null) {
                            result8 = parse_LineTerminator();
                            result8 = result8 !== null ? result8 : "";
                            if (result8 !== null) {
                              result0 = [result0, result1, result2, result3, result4, result5, result6, result7, result8];
                            } else {
                              result0 = null;
                              pos = pos1;
                            }
                          } else {
                            result0 = null;
                            pos = pos1;
                          }
                        } else {
                          result0 = null;
                          pos = pos1;
                        }
                      } else {
                        result0 = null;
                        pos = pos1;
                      }
                    } else {
                      result0 = null;
                      pos = pos1;
                    }
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
            if (result0 !== null) {
              result0 = (function(offset, node, port, pub) {return parser.registerOutports(node.join(""),port.join(""),pub.join(""))})(pos0, result0[2], result0[4], result0[6]);
            }
            if (result0 === null) {
              pos = pos0;
            }
            if (result0 === null) {
              pos0 = pos;
              result0 = parse_comment();
              if (result0 !== null) {
                if (/^[\n\r\u2028\u2029]/.test(input.charAt(pos))) {
                  result1 = input.charAt(pos);
                  pos++;
                } else {
                  result1 = null;
                  if (reportFailures === 0) {
                    matchFailed("[\\n\\r\\u2028\\u2029]");
                  }
                }
                result1 = result1 !== null ? result1 : "";
                if (result1 !== null) {
                  result0 = [result0, result1];
                } else {
                  result0 = null;
                  pos = pos0;
                }
              } else {
                result0 = null;
                pos = pos0;
              }
              if (result0 === null) {
                pos0 = pos;
                result0 = parse__();
                if (result0 !== null) {
                  if (/^[\n\r\u2028\u2029]/.test(input.charAt(pos))) {
                    result1 = input.charAt(pos);
                    pos++;
                  } else {
                    result1 = null;
                    if (reportFailures === 0) {
                      matchFailed("[\\n\\r\\u2028\\u2029]");
                    }
                  }
                  if (result1 !== null) {
                    result0 = [result0, result1];
                  } else {
                    result0 = null;
                    pos = pos0;
                  }
                } else {
                  result0 = null;
                  pos = pos0;
                }
                if (result0 === null) {
                  pos0 = pos;
                  pos1 = pos;
                  result0 = parse__();
                  if (result0 !== null) {
                    result1 = parse_connection();
                    if (result1 !== null) {
                      result2 = parse__();
                      if (result2 !== null) {
                        result3 = parse_LineTerminator();
                        result3 = result3 !== null ? result3 : "";
                        if (result3 !== null) {
                          result0 = [result0, result1, result2, result3];
                        } else {
                          result0 = null;
                          pos = pos1;
                        }
                      } else {
                        result0 = null;
                        pos = pos1;
                      }
                    } else {
                      result0 = null;
                      pos = pos1;
                    }
                  } else {
                    result0 = null;
                    pos = pos1;
                  }
                  if (result0 !== null) {
                    result0 = (function(offset, edges) {return parser.registerEdges(edges);})(pos0, result0[1]);
                  }
                  if (result0 === null) {
                    pos = pos0;
                  }
                }
              }
            }
          }
        }
        return result0;
      }
      
      function parse_LineTerminator() {
        var result0, result1, result2, result3;
        var pos0;
        
        pos0 = pos;
        result0 = parse__();
        if (result0 !== null) {
          if (input.charCodeAt(pos) === 44) {
            result1 = ",";
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("\",\"");
            }
          }
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            result2 = parse_comment();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              if (/^[\n\r\u2028\u2029]/.test(input.charAt(pos))) {
                result3 = input.charAt(pos);
                pos++;
              } else {
                result3 = null;
                if (reportFailures === 0) {
                  matchFailed("[\\n\\r\\u2028\\u2029]");
                }
              }
              result3 = result3 !== null ? result3 : "";
              if (result3 !== null) {
                result0 = [result0, result1, result2, result3];
              } else {
                result0 = null;
                pos = pos0;
              }
            } else {
              result0 = null;
              pos = pos0;
            }
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        return result0;
      }
      
      function parse_comment() {
        var result0, result1, result2, result3;
        var pos0;
        
        pos0 = pos;
        result0 = parse__();
        if (result0 !== null) {
          if (input.charCodeAt(pos) === 35) {
            result1 = "#";
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("\"#\"");
            }
          }
          if (result1 !== null) {
            result2 = [];
            result3 = parse_anychar();
            while (result3 !== null) {
              result2.push(result3);
              result3 = parse_anychar();
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos0;
            }
          } else {
            result0 = null;
            pos = pos0;
          }
        } else {
          result0 = null;
          pos = pos0;
        }
        return result0;
      }
      
      function parse_connection() {
        var result0, result1, result2, result3, result4;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_bridge();
        if (result0 !== null) {
          result1 = parse__();
          if (result1 !== null) {
            if (input.substr(pos, 2) === "->") {
              result2 = "->";
              pos += 2;
            } else {
              result2 = null;
              if (reportFailures === 0) {
                matchFailed("\"->\"");
              }
            }
            if (result2 !== null) {
              result3 = parse__();
              if (result3 !== null) {
                result4 = parse_connection();
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, x, y) { return [x,y]; })(pos0, result0[0], result0[4]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        if (result0 === null) {
          result0 = parse_bridge();
        }
        return result0;
      }
      
      function parse_bridge() {
        var result0, result1, result2, result3, result4;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_port();
        if (result0 !== null) {
          result1 = parse__();
          if (result1 !== null) {
            result2 = parse_node();
            if (result2 !== null) {
              result3 = parse__();
              if (result3 !== null) {
                result4 = parse_port();
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, x, proc, y) { return [{"tgt":{process:proc, port:x}},{"src":{process:proc, port:y}}]; })(pos0, result0[0], result0[2], result0[4]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        if (result0 === null) {
          result0 = parse_iip();
          if (result0 === null) {
            result0 = parse_rightlet();
            if (result0 === null) {
              result0 = parse_leftlet();
            }
          }
        }
        return result0;
      }
      
      function parse_leftlet() {
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_node();
        if (result0 !== null) {
          result1 = parse__();
          if (result1 !== null) {
            result2 = parse_port();
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, proc, port) { return {"src":{process:proc, port:port}} })(pos0, result0[0], result0[2]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        if (result0 === null) {
          pos0 = pos;
          pos1 = pos;
          result0 = parse_node();
          if (result0 !== null) {
            result1 = parse__();
            if (result1 !== null) {
              result2 = parse_portWithIndex();
              if (result2 !== null) {
                result0 = [result0, result1, result2];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
          if (result0 !== null) {
            result0 = (function(offset, proc, port) { return {"src":{process:proc, port:port.port, index: port.index}} })(pos0, result0[0], result0[2]);
          }
          if (result0 === null) {
            pos = pos0;
          }
        }
        return result0;
      }
      
      function parse_iip() {
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        if (input.charCodeAt(pos) === 39) {
          result0 = "'";
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"'\"");
          }
        }
        if (result0 !== null) {
          result1 = [];
          result2 = parse_iipchar();
          while (result2 !== null) {
            result1.push(result2);
            result2 = parse_iipchar();
          }
          if (result1 !== null) {
            if (input.charCodeAt(pos) === 39) {
              result2 = "'";
              pos++;
            } else {
              result2 = null;
              if (reportFailures === 0) {
                matchFailed("\"'\"");
              }
            }
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, iip) { return {"data":iip.join("")} })(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_rightlet() {
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        result0 = parse_port();
        if (result0 !== null) {
          result1 = parse__();
          if (result1 !== null) {
            result2 = parse_node();
            if (result2 !== null) {
              result0 = [result0, result1, result2];
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, port, proc) { return {"tgt":{process:proc, port:port}} })(pos0, result0[0], result0[2]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        if (result0 === null) {
          pos0 = pos;
          pos1 = pos;
          result0 = parse_portWithIndex();
          if (result0 !== null) {
            result1 = parse__();
            if (result1 !== null) {
              result2 = parse_node();
              if (result2 !== null) {
                result0 = [result0, result1, result2];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
          if (result0 !== null) {
            result0 = (function(offset, port, proc) { return {"tgt":{process:proc, port:port.port, index: port.index}} })(pos0, result0[0], result0[2]);
          }
          if (result0 === null) {
            pos = pos0;
          }
        }
        return result0;
      }
      
      function parse_node() {
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        if (/^[a-zA-Z0-9_]/.test(input.charAt(pos))) {
          result1 = input.charAt(pos);
          pos++;
        } else {
          result1 = null;
          if (reportFailures === 0) {
            matchFailed("[a-zA-Z0-9_]");
          }
        }
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            if (/^[a-zA-Z0-9_]/.test(input.charAt(pos))) {
              result1 = input.charAt(pos);
              pos++;
            } else {
              result1 = null;
              if (reportFailures === 0) {
                matchFailed("[a-zA-Z0-9_]");
              }
            }
          }
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result1 = parse_component();
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, node, comp) { if(comp){parser.addNode(node.join(""),comp);}; return node.join("")})(pos0, result0[0], result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_component() {
        var result0, result1, result2, result3;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        if (input.charCodeAt(pos) === 40) {
          result0 = "(";
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\"(\"");
          }
        }
        if (result0 !== null) {
          if (/^[a-zA-Z\/\-0-9_]/.test(input.charAt(pos))) {
            result2 = input.charAt(pos);
            pos++;
          } else {
            result2 = null;
            if (reportFailures === 0) {
              matchFailed("[a-zA-Z\\/\\-0-9_]");
            }
          }
          if (result2 !== null) {
            result1 = [];
            while (result2 !== null) {
              result1.push(result2);
              if (/^[a-zA-Z\/\-0-9_]/.test(input.charAt(pos))) {
                result2 = input.charAt(pos);
                pos++;
              } else {
                result2 = null;
                if (reportFailures === 0) {
                  matchFailed("[a-zA-Z\\/\\-0-9_]");
                }
              }
            }
          } else {
            result1 = null;
          }
          result1 = result1 !== null ? result1 : "";
          if (result1 !== null) {
            result2 = parse_compMeta();
            result2 = result2 !== null ? result2 : "";
            if (result2 !== null) {
              if (input.charCodeAt(pos) === 41) {
                result3 = ")";
                pos++;
              } else {
                result3 = null;
                if (reportFailures === 0) {
                  matchFailed("\")\"");
                }
              }
              if (result3 !== null) {
                result0 = [result0, result1, result2, result3];
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, comp, meta) { var o = {}; comp ? o.comp = comp.join("") : o.comp = ''; meta ? o.meta = meta.join("").split(',') : null; return o; })(pos0, result0[1], result0[2]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_compMeta() {
        var result0, result1, result2;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        if (input.charCodeAt(pos) === 58) {
          result0 = ":";
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("\":\"");
          }
        }
        if (result0 !== null) {
          if (/^[a-zA-Z\/=_,0-9]/.test(input.charAt(pos))) {
            result2 = input.charAt(pos);
            pos++;
          } else {
            result2 = null;
            if (reportFailures === 0) {
              matchFailed("[a-zA-Z\\/=_,0-9]");
            }
          }
          if (result2 !== null) {
            result1 = [];
            while (result2 !== null) {
              result1.push(result2);
              if (/^[a-zA-Z\/=_,0-9]/.test(input.charAt(pos))) {
                result2 = input.charAt(pos);
                pos++;
              } else {
                result2 = null;
                if (reportFailures === 0) {
                  matchFailed("[a-zA-Z\\/=_,0-9]");
                }
              }
            }
          } else {
            result1 = null;
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, meta) {return meta})(pos0, result0[1]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_port() {
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        if (/^[A-Z.0-9_]/.test(input.charAt(pos))) {
          result1 = input.charAt(pos);
          pos++;
        } else {
          result1 = null;
          if (reportFailures === 0) {
            matchFailed("[A-Z.0-9_]");
          }
        }
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            if (/^[A-Z.0-9_]/.test(input.charAt(pos))) {
              result1 = input.charAt(pos);
              pos++;
            } else {
              result1 = null;
              if (reportFailures === 0) {
                matchFailed("[A-Z.0-9_]");
              }
            }
          }
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          result1 = parse___();
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, portname) {return portname.join("").toLowerCase()})(pos0, result0[0]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_portWithIndex() {
        var result0, result1, result2, result3, result4;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        if (/^[A-Z.0-9_]/.test(input.charAt(pos))) {
          result1 = input.charAt(pos);
          pos++;
        } else {
          result1 = null;
          if (reportFailures === 0) {
            matchFailed("[A-Z.0-9_]");
          }
        }
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            if (/^[A-Z.0-9_]/.test(input.charAt(pos))) {
              result1 = input.charAt(pos);
              pos++;
            } else {
              result1 = null;
              if (reportFailures === 0) {
                matchFailed("[A-Z.0-9_]");
              }
            }
          }
        } else {
          result0 = null;
        }
        if (result0 !== null) {
          if (input.charCodeAt(pos) === 91) {
            result1 = "[";
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("\"[\"");
            }
          }
          if (result1 !== null) {
            if (/^[0-9]/.test(input.charAt(pos))) {
              result3 = input.charAt(pos);
              pos++;
            } else {
              result3 = null;
              if (reportFailures === 0) {
                matchFailed("[0-9]");
              }
            }
            if (result3 !== null) {
              result2 = [];
              while (result3 !== null) {
                result2.push(result3);
                if (/^[0-9]/.test(input.charAt(pos))) {
                  result3 = input.charAt(pos);
                  pos++;
                } else {
                  result3 = null;
                  if (reportFailures === 0) {
                    matchFailed("[0-9]");
                  }
                }
              }
            } else {
              result2 = null;
            }
            if (result2 !== null) {
              if (input.charCodeAt(pos) === 93) {
                result3 = "]";
                pos++;
              } else {
                result3 = null;
                if (reportFailures === 0) {
                  matchFailed("\"]\"");
                }
              }
              if (result3 !== null) {
                result4 = parse___();
                if (result4 !== null) {
                  result0 = [result0, result1, result2, result3, result4];
                } else {
                  result0 = null;
                  pos = pos1;
                }
              } else {
                result0 = null;
                pos = pos1;
              }
            } else {
              result0 = null;
              pos = pos1;
            }
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset, portname, portindex) {return { port: portname.join("").toLowerCase(), index: parseInt(portindex.join('')) }})(pos0, result0[0], result0[2]);
        }
        if (result0 === null) {
          pos = pos0;
        }
        return result0;
      }
      
      function parse_anychar() {
        var result0;
        
        if (/^[^\n\r\u2028\u2029]/.test(input.charAt(pos))) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("[^\\n\\r\\u2028\\u2029]");
          }
        }
        return result0;
      }
      
      function parse_iipchar() {
        var result0, result1;
        var pos0, pos1;
        
        pos0 = pos;
        pos1 = pos;
        if (/^[\\]/.test(input.charAt(pos))) {
          result0 = input.charAt(pos);
          pos++;
        } else {
          result0 = null;
          if (reportFailures === 0) {
            matchFailed("[\\\\]");
          }
        }
        if (result0 !== null) {
          if (/^[']/.test(input.charAt(pos))) {
            result1 = input.charAt(pos);
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("[']");
            }
          }
          if (result1 !== null) {
            result0 = [result0, result1];
          } else {
            result0 = null;
            pos = pos1;
          }
        } else {
          result0 = null;
          pos = pos1;
        }
        if (result0 !== null) {
          result0 = (function(offset) { return "'"; })(pos0);
        }
        if (result0 === null) {
          pos = pos0;
        }
        if (result0 === null) {
          if (/^[^']/.test(input.charAt(pos))) {
            result0 = input.charAt(pos);
            pos++;
          } else {
            result0 = null;
            if (reportFailures === 0) {
              matchFailed("[^']");
            }
          }
        }
        return result0;
      }
      
      function parse__() {
        var result0, result1;
        
        result0 = [];
        if (input.charCodeAt(pos) === 32) {
          result1 = " ";
          pos++;
        } else {
          result1 = null;
          if (reportFailures === 0) {
            matchFailed("\" \"");
          }
        }
        while (result1 !== null) {
          result0.push(result1);
          if (input.charCodeAt(pos) === 32) {
            result1 = " ";
            pos++;
          } else {
            result1 = null;
            if (reportFailures === 0) {
              matchFailed("\" \"");
            }
          }
        }
        result0 = result0 !== null ? result0 : "";
        return result0;
      }
      
      function parse___() {
        var result0, result1;
        
        if (input.charCodeAt(pos) === 32) {
          result1 = " ";
          pos++;
        } else {
          result1 = null;
          if (reportFailures === 0) {
            matchFailed("\" \"");
          }
        }
        if (result1 !== null) {
          result0 = [];
          while (result1 !== null) {
            result0.push(result1);
            if (input.charCodeAt(pos) === 32) {
              result1 = " ";
              pos++;
            } else {
              result1 = null;
              if (reportFailures === 0) {
                matchFailed("\" \"");
              }
            }
          }
        } else {
          result0 = null;
        }
        return result0;
      }
      
      
      function cleanupExpected(expected) {
        expected.sort();
        
        var lastExpected = null;
        var cleanExpected = [];
        for (var i = 0; i < expected.length; i++) {
          if (expected[i] !== lastExpected) {
            cleanExpected.push(expected[i]);
            lastExpected = expected[i];
          }
        }
        return cleanExpected;
      }
      
      function computeErrorPosition() {
        /*
         * The first idea was to use |String.split| to break the input up to the
         * error position along newlines and derive the line and column from
         * there. However IE's |split| implementation is so broken that it was
         * enough to prevent it.
         */
        
        var line = 1;
        var column = 1;
        var seenCR = false;
        
        for (var i = 0; i < Math.max(pos, rightmostFailuresPos); i++) {
          var ch = input.charAt(i);
          if (ch === "\n") {
            if (!seenCR) { line++; }
            column = 1;
            seenCR = false;
          } else if (ch === "\r" || ch === "\u2028" || ch === "\u2029") {
            line++;
            column = 1;
            seenCR = true;
          } else {
            column++;
            seenCR = false;
          }
        }
        
        return { line: line, column: column };
      }
      
      
        var parser, edges, nodes; 
      
        parser = this;
        delete parser.exports;
        delete parser.inports;
        delete parser.outports;
      
        edges = parser.edges = [];
      
        nodes = {};
      
        parser.addNode = function (nodeName, comp) {
          if (!nodes[nodeName]) {
            nodes[nodeName] = {}
          }
          if (!!comp.comp) {
            nodes[nodeName].component = comp.comp;
          }
          if (!!comp.meta) {
            var metadata = {};
            for (var i = 0; i < comp.meta.length; i++) {
              var item = comp.meta[i].split('=');
              if (item.length === 1) {
                item = ['routes', item[0]];
              }
              metadata[item[0]] = item[1];
            }
            nodes[nodeName].metadata=metadata;
          }
         
        }
      
        parser.getResult = function () {
          return {processes:nodes, connections:parser.processEdges(), exports:parser.exports, inports: parser.inports, outports: parser.outports};
        }  
      
        var flatten = function (array, isShallow) {
          var index = -1,
            length = array ? array.length : 0,
            result = [];
      
          while (++index < length) {
            var value = array[index];
      
            if (value instanceof Array) {
              Array.prototype.push.apply(result, isShallow ? value : flatten(value));
            }
            else {
              result.push(value);
            }
          }
          return result;
        }
        
        parser.registerExports = function (priv, pub) {
          if (!parser.exports) {
            parser.exports = [];
          }
          parser.exports.push({private:priv.toLowerCase(), public:pub.toLowerCase()})
        }
        parser.registerInports = function (node, port, pub) {
          if (!parser.inports) {
            parser.inports = {};
          }
          parser.inports[pub.toLowerCase()] = {process:node, port:port.toLowerCase()}
        }
        parser.registerOutports = function (node, port, pub) {
          if (!parser.outports) {
            parser.outports = {};
          }
          parser.outports[pub.toLowerCase()] = {process:node, port:port.toLowerCase()}
        }
      
        parser.registerEdges = function (edges) {
      
          edges.forEach(function (o, i) {
            parser.edges.push(o);
          });
        }  
      
        parser.processEdges = function () {   
          var flats, grouped;
          flats = flatten(parser.edges);
          grouped = [];
          var current = {};
          flats.forEach(function (o, i) {
            if (i % 2 !== 0) { 
              var pair = grouped[grouped.length - 1];
              pair.tgt = o.tgt;
              return;
            }
            grouped.push(o);
          });
          return grouped;
        }
      
      
      var result = parseFunctions[startRule]();
      
      /*
       * The parser is now in one of the following three states:
       *
       * 1. The parser successfully parsed the whole input.
       *
       *    - |result !== null|
       *    - |pos === input.length|
       *    - |rightmostFailuresExpected| may or may not contain something
       *
       * 2. The parser successfully parsed only a part of the input.
       *
       *    - |result !== null|
       *    - |pos < input.length|
       *    - |rightmostFailuresExpected| may or may not contain something
       *
       * 3. The parser did not successfully parse any part of the input.
       *
       *   - |result === null|
       *   - |pos === 0|
       *   - |rightmostFailuresExpected| contains at least one failure
       *
       * All code following this comment (including called functions) must
       * handle these states.
       */
      if (result === null || pos !== input.length) {
        var offset = Math.max(pos, rightmostFailuresPos);
        var found = offset < input.length ? input.charAt(offset) : null;
        var errorPosition = computeErrorPosition();
        
        throw new this.SyntaxError(
          cleanupExpected(rightmostFailuresExpected),
          found,
          offset,
          errorPosition.line,
          errorPosition.column
        );
      }
      
      return result;
    },
    
    /* Returns the parser source code. */
    toSource: function() { return this._source; }
  };
  
  /* Thrown when a parser encounters a syntax error. */
  
  result.SyntaxError = function(expected, found, offset, line, column) {
    function buildMessage(expected, found) {
      var expectedHumanized, foundHumanized;
      
      switch (expected.length) {
        case 0:
          expectedHumanized = "end of input";
          break;
        case 1:
          expectedHumanized = expected[0];
          break;
        default:
          expectedHumanized = expected.slice(0, expected.length - 1).join(", ")
            + " or "
            + expected[expected.length - 1];
      }
      
      foundHumanized = found ? quote(found) : "end of input";
      
      return "Expected " + expectedHumanized + " but " + foundHumanized + " found.";
    }
    
    this.name = "SyntaxError";
    this.expected = expected;
    this.found = found;
    this.message = buildMessage(expected, found);
    this.offset = offset;
    this.line = line;
    this.column = column;
  };
  
  result.SyntaxError.prototype = Error.prototype;
  
  return result;
})();
});
require.register("noflo-noflo/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo","description":"Flow-Based Programming environment for JavaScript","keywords":["fbp","workflow","flow"],"repo":"noflo/noflo","version":"0.5.10","dependencies":{"bergie/emitter":"*","jashkenas/underscore":"*","noflo/fbp":"*"},"remotes":["https://raw.githubusercontent.com"],"development":{},"license":"MIT","main":"src/lib/NoFlo.js","scripts":["src/lib/Graph.js","src/lib/InternalSocket.js","src/lib/BasePort.js","src/lib/InPort.js","src/lib/OutPort.js","src/lib/Ports.js","src/lib/Port.js","src/lib/ArrayPort.js","src/lib/Component.js","src/lib/AsyncComponent.js","src/lib/LoggingComponent.js","src/lib/ComponentLoader.js","src/lib/NoFlo.js","src/lib/Network.js","src/lib/Platform.js","src/lib/Journal.js","src/lib/Utils.js","src/lib/Helpers.js","src/lib/Streams.js","src/components/Graph.js"],"json":["component.json"],"noflo":{"components":{"Graph":"src/components/Graph.js"}}}');
});
require.register("noflo-noflo/src/lib/Graph.js", function(exports, require, module){
var EventEmitter, Graph, clone, mergeResolveTheirsNaive, platform, resetGraph,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

clone = require('./Utils').clone;

platform = require('./Platform');

Graph = (function(_super) {
  __extends(Graph, _super);

  Graph.prototype.name = '';

  Graph.prototype.properties = {};

  Graph.prototype.nodes = [];

  Graph.prototype.edges = [];

  Graph.prototype.initializers = [];

  Graph.prototype.exports = [];

  Graph.prototype.inports = {};

  Graph.prototype.outports = {};

  Graph.prototype.groups = [];

  function Graph(name) {
    this.name = name != null ? name : '';
    this.properties = {};
    this.nodes = [];
    this.edges = [];
    this.initializers = [];
    this.exports = [];
    this.inports = {};
    this.outports = {};
    this.groups = [];
    this.transaction = {
      id: null,
      depth: 0
    };
  }

  Graph.prototype.startTransaction = function(id, metadata) {
    if (this.transaction.id) {
      throw Error("Nested transactions not supported");
    }
    this.transaction.id = id;
    this.transaction.depth = 1;
    return this.emit('startTransaction', id, metadata);
  };

  Graph.prototype.endTransaction = function(id, metadata) {
    if (!this.transaction.id) {
      throw Error("Attempted to end non-existing transaction");
    }
    this.transaction.id = null;
    this.transaction.depth = 0;
    return this.emit('endTransaction', id, metadata);
  };

  Graph.prototype.checkTransactionStart = function() {
    if (!this.transaction.id) {
      return this.startTransaction('implicit');
    } else if (this.transaction.id === 'implicit') {
      return this.transaction.depth += 1;
    }
  };

  Graph.prototype.checkTransactionEnd = function() {
    if (this.transaction.id === 'implicit') {
      this.transaction.depth -= 1;
    }
    if (this.transaction.depth === 0) {
      return this.endTransaction('implicit');
    }
  };

  Graph.prototype.setProperties = function(properties) {
    var before, item, val;
    this.checkTransactionStart();
    before = clone(this.properties);
    for (item in properties) {
      val = properties[item];
      this.properties[item] = val;
    }
    this.emit('changeProperties', this.properties, before);
    return this.checkTransactionEnd();
  };

  Graph.prototype.addExport = function(publicPort, nodeKey, portKey, metadata) {
    var exported;
    if (metadata == null) {
      metadata = {
        x: 0,
        y: 0
      };
    }
    if (!this.getNode(nodeKey)) {
      return;
    }
    this.checkTransactionStart();
    exported = {
      "public": publicPort,
      process: nodeKey,
      port: portKey,
      metadata: metadata
    };
    this.exports.push(exported);
    this.emit('addExport', exported);
    return this.checkTransactionEnd();
  };

  Graph.prototype.removeExport = function(publicPort) {
    var exported, found, idx, _i, _len, _ref;
    publicPort = publicPort.toLowerCase();
    found = null;
    _ref = this.exports;
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      exported = _ref[idx];
      if (exported["public"] === publicPort) {
        found = exported;
      }
    }
    if (!found) {
      return;
    }
    this.checkTransactionStart();
    this.exports.splice(this.exports.indexOf(found), 1);
    this.emit('removeExport', found);
    return this.checkTransactionEnd();
  };

  Graph.prototype.addInport = function(publicPort, nodeKey, portKey, metadata) {
    if (!this.getNode(nodeKey)) {
      return;
    }
    this.checkTransactionStart();
    this.inports[publicPort] = {
      process: nodeKey,
      port: portKey,
      metadata: metadata
    };
    this.emit('addInport', publicPort, this.inports[publicPort]);
    return this.checkTransactionEnd();
  };

  Graph.prototype.removeInport = function(publicPort) {
    var port;
    publicPort = publicPort.toLowerCase();
    if (!this.inports[publicPort]) {
      return;
    }
    this.checkTransactionStart();
    port = this.inports[publicPort];
    this.setInportMetadata(publicPort, {});
    delete this.inports[publicPort];
    this.emit('removeInport', publicPort, port);
    return this.checkTransactionEnd();
  };

  Graph.prototype.renameInport = function(oldPort, newPort) {
    if (!this.inports[oldPort]) {
      return;
    }
    this.checkTransactionStart();
    this.inports[newPort] = this.inports[oldPort];
    delete this.inports[oldPort];
    this.emit('renameInport', oldPort, newPort);
    return this.checkTransactionEnd();
  };

  Graph.prototype.setInportMetadata = function(publicPort, metadata) {
    var before, item, val;
    if (!this.inports[publicPort]) {
      return;
    }
    this.checkTransactionStart();
    before = clone(this.inports[publicPort].metadata);
    if (!this.inports[publicPort].metadata) {
      this.inports[publicPort].metadata = {};
    }
    for (item in metadata) {
      val = metadata[item];
      if (val != null) {
        this.inports[publicPort].metadata[item] = val;
      } else {
        delete this.inports[publicPort].metadata[item];
      }
    }
    this.emit('changeInport', publicPort, this.inports[publicPort], before);
    return this.checkTransactionEnd();
  };

  Graph.prototype.addOutport = function(publicPort, nodeKey, portKey, metadata) {
    if (!this.getNode(nodeKey)) {
      return;
    }
    this.checkTransactionStart();
    this.outports[publicPort] = {
      process: nodeKey,
      port: portKey,
      metadata: metadata
    };
    this.emit('addOutport', publicPort, this.outports[publicPort]);
    return this.checkTransactionEnd();
  };

  Graph.prototype.removeOutport = function(publicPort) {
    var port;
    publicPort = publicPort.toLowerCase();
    if (!this.outports[publicPort]) {
      return;
    }
    this.checkTransactionStart();
    port = this.outports[publicPort];
    this.setOutportMetadata(publicPort, {});
    delete this.outports[publicPort];
    this.emit('removeOutport', publicPort, port);
    return this.checkTransactionEnd();
  };

  Graph.prototype.renameOutport = function(oldPort, newPort) {
    if (!this.outports[oldPort]) {
      return;
    }
    this.checkTransactionStart();
    this.outports[newPort] = this.outports[oldPort];
    delete this.outports[oldPort];
    this.emit('renameOutport', oldPort, newPort);
    return this.checkTransactionEnd();
  };

  Graph.prototype.setOutportMetadata = function(publicPort, metadata) {
    var before, item, val;
    if (!this.outports[publicPort]) {
      return;
    }
    this.checkTransactionStart();
    before = clone(this.outports[publicPort].metadata);
    if (!this.outports[publicPort].metadata) {
      this.outports[publicPort].metadata = {};
    }
    for (item in metadata) {
      val = metadata[item];
      if (val != null) {
        this.outports[publicPort].metadata[item] = val;
      } else {
        delete this.outports[publicPort].metadata[item];
      }
    }
    this.emit('changeOutport', publicPort, this.outports[publicPort], before);
    return this.checkTransactionEnd();
  };

  Graph.prototype.addGroup = function(group, nodes, metadata) {
    var g;
    this.checkTransactionStart();
    g = {
      name: group,
      nodes: nodes,
      metadata: metadata
    };
    this.groups.push(g);
    this.emit('addGroup', g);
    return this.checkTransactionEnd();
  };

  Graph.prototype.renameGroup = function(oldName, newName) {
    var group, _i, _len, _ref;
    this.checkTransactionStart();
    _ref = this.groups;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      group = _ref[_i];
      if (!group) {
        continue;
      }
      if (group.name !== oldName) {
        continue;
      }
      group.name = newName;
      this.emit('renameGroup', oldName, newName);
    }
    return this.checkTransactionEnd();
  };

  Graph.prototype.removeGroup = function(groupName) {
    var group, _i, _len, _ref;
    this.checkTransactionStart();
    _ref = this.groups;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      group = _ref[_i];
      if (!group) {
        continue;
      }
      if (group.name !== groupName) {
        continue;
      }
      this.setGroupMetadata(group.name, {});
      this.groups.splice(this.groups.indexOf(group), 1);
      this.emit('removeGroup', group);
    }
    return this.checkTransactionEnd();
  };

  Graph.prototype.setGroupMetadata = function(groupName, metadata) {
    var before, group, item, val, _i, _len, _ref;
    this.checkTransactionStart();
    _ref = this.groups;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      group = _ref[_i];
      if (!group) {
        continue;
      }
      if (group.name !== groupName) {
        continue;
      }
      before = clone(group.metadata);
      for (item in metadata) {
        val = metadata[item];
        if (val != null) {
          group.metadata[item] = val;
        } else {
          delete group.metadata[item];
        }
      }
      this.emit('changeGroup', group, before);
    }
    return this.checkTransactionEnd();
  };

  Graph.prototype.addNode = function(id, component, metadata) {
    var node;
    this.checkTransactionStart();
    if (!metadata) {
      metadata = {};
    }
    node = {
      id: id,
      component: component,
      metadata: metadata
    };
    this.nodes.push(node);
    this.emit('addNode', node);
    this.checkTransactionEnd();
    return node;
  };

  Graph.prototype.removeNode = function(id) {
    var edge, exported, group, index, initializer, node, priv, pub, toRemove, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _len5, _len6, _len7, _len8, _m, _n, _o, _p, _q, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
    node = this.getNode(id);
    if (!node) {
      return;
    }
    this.checkTransactionStart();
    toRemove = [];
    _ref = this.edges;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      edge = _ref[_i];
      if ((edge.from.node === node.id) || (edge.to.node === node.id)) {
        toRemove.push(edge);
      }
    }
    for (_j = 0, _len1 = toRemove.length; _j < _len1; _j++) {
      edge = toRemove[_j];
      this.removeEdge(edge.from.node, edge.from.port, edge.to.node, edge.to.port);
    }
    toRemove = [];
    _ref1 = this.initializers;
    for (_k = 0, _len2 = _ref1.length; _k < _len2; _k++) {
      initializer = _ref1[_k];
      if (initializer.to.node === node.id) {
        toRemove.push(initializer);
      }
    }
    for (_l = 0, _len3 = toRemove.length; _l < _len3; _l++) {
      initializer = toRemove[_l];
      this.removeInitial(initializer.to.node, initializer.to.port);
    }
    toRemove = [];
    _ref2 = this.exports;
    for (_m = 0, _len4 = _ref2.length; _m < _len4; _m++) {
      exported = _ref2[_m];
      if (id.toLowerCase() === exported.process) {
        toRemove.push(exported);
      }
    }
    for (_n = 0, _len5 = toRemove.length; _n < _len5; _n++) {
      exported = toRemove[_n];
      this.removeExports(exported["public"]);
    }
    toRemove = [];
    _ref3 = this.inports;
    for (pub in _ref3) {
      priv = _ref3[pub];
      if (priv.process === id) {
        toRemove.push(pub);
      }
    }
    for (_o = 0, _len6 = toRemove.length; _o < _len6; _o++) {
      pub = toRemove[_o];
      this.removeInport(pub);
    }
    toRemove = [];
    _ref4 = this.outports;
    for (pub in _ref4) {
      priv = _ref4[pub];
      if (priv.process === id) {
        toRemove.push(pub);
      }
    }
    for (_p = 0, _len7 = toRemove.length; _p < _len7; _p++) {
      pub = toRemove[_p];
      this.removeOutport(pub);
    }
    _ref5 = this.groups;
    for (_q = 0, _len8 = _ref5.length; _q < _len8; _q++) {
      group = _ref5[_q];
      if (!group) {
        continue;
      }
      index = group.nodes.indexOf(id);
      if (index === -1) {
        continue;
      }
      group.nodes.splice(index, 1);
    }
    this.setNodeMetadata(id, {});
    if (-1 !== this.nodes.indexOf(node)) {
      this.nodes.splice(this.nodes.indexOf(node), 1);
    }
    this.emit('removeNode', node);
    return this.checkTransactionEnd();
  };

  Graph.prototype.getNode = function(id) {
    var node, _i, _len, _ref;
    _ref = this.nodes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      node = _ref[_i];
      if (!node) {
        continue;
      }
      if (node.id === id) {
        return node;
      }
    }
    return null;
  };

  Graph.prototype.renameNode = function(oldId, newId) {
    var edge, exported, group, iip, index, node, priv, pub, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
    this.checkTransactionStart();
    node = this.getNode(oldId);
    if (!node) {
      return;
    }
    node.id = newId;
    _ref = this.edges;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      edge = _ref[_i];
      if (!edge) {
        continue;
      }
      if (edge.from.node === oldId) {
        edge.from.node = newId;
      }
      if (edge.to.node === oldId) {
        edge.to.node = newId;
      }
    }
    _ref1 = this.initializers;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      iip = _ref1[_j];
      if (!iip) {
        continue;
      }
      if (iip.to.node === oldId) {
        iip.to.node = newId;
      }
    }
    _ref2 = this.inports;
    for (pub in _ref2) {
      priv = _ref2[pub];
      if (priv.process === oldId) {
        priv.process = newId;
      }
    }
    _ref3 = this.outports;
    for (pub in _ref3) {
      priv = _ref3[pub];
      if (priv.process === oldId) {
        priv.process = newId;
      }
    }
    _ref4 = this.exports;
    for (_k = 0, _len2 = _ref4.length; _k < _len2; _k++) {
      exported = _ref4[_k];
      if (exported.process === oldId) {
        exported.process = newId;
      }
    }
    _ref5 = this.groups;
    for (_l = 0, _len3 = _ref5.length; _l < _len3; _l++) {
      group = _ref5[_l];
      if (!group) {
        continue;
      }
      index = group.nodes.indexOf(oldId);
      if (index === -1) {
        continue;
      }
      group.nodes[index] = newId;
    }
    this.emit('renameNode', oldId, newId);
    return this.checkTransactionEnd();
  };

  Graph.prototype.setNodeMetadata = function(id, metadata) {
    var before, item, node, val;
    node = this.getNode(id);
    if (!node) {
      return;
    }
    this.checkTransactionStart();
    before = clone(node.metadata);
    if (!node.metadata) {
      node.metadata = {};
    }
    for (item in metadata) {
      val = metadata[item];
      if (val != null) {
        node.metadata[item] = val;
      } else {
        delete node.metadata[item];
      }
    }
    this.emit('changeNode', node, before);
    return this.checkTransactionEnd();
  };

  Graph.prototype.addEdge = function(outNode, outPort, inNode, inPort, metadata) {
    var edge, _i, _len, _ref;
    if (metadata == null) {
      metadata = {};
    }
    _ref = this.edges;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      edge = _ref[_i];
      if (edge.from.node === outNode && edge.from.port === outPort && edge.to.node === inNode && edge.to.port === inPort) {
        return;
      }
    }
    if (!this.getNode(outNode)) {
      return;
    }
    if (!this.getNode(inNode)) {
      return;
    }
    this.checkTransactionStart();
    edge = {
      from: {
        node: outNode,
        port: outPort
      },
      to: {
        node: inNode,
        port: inPort
      },
      metadata: metadata
    };
    this.edges.push(edge);
    this.emit('addEdge', edge);
    this.checkTransactionEnd();
    return edge;
  };

  Graph.prototype.addEdgeIndex = function(outNode, outPort, outIndex, inNode, inPort, inIndex, metadata) {
    var edge;
    if (metadata == null) {
      metadata = {};
    }
    if (!this.getNode(outNode)) {
      return;
    }
    if (!this.getNode(inNode)) {
      return;
    }
    if (inIndex === null) {
      inIndex = void 0;
    }
    if (outIndex === null) {
      outIndex = void 0;
    }
    if (!metadata) {
      metadata = {};
    }
    this.checkTransactionStart();
    edge = {
      from: {
        node: outNode,
        port: outPort,
        index: outIndex
      },
      to: {
        node: inNode,
        port: inPort,
        index: inIndex
      },
      metadata: metadata
    };
    this.edges.push(edge);
    this.emit('addEdge', edge);
    this.checkTransactionEnd();
    return edge;
  };

  Graph.prototype.removeEdge = function(node, port, node2, port2) {
    var edge, index, toKeep, toRemove, _i, _j, _k, _len, _len1, _len2, _ref, _ref1;
    this.checkTransactionStart();
    toRemove = [];
    toKeep = [];
    if (node2 && port2) {
      _ref = this.edges;
      for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
        edge = _ref[index];
        if (edge.from.node === node && edge.from.port === port && edge.to.node === node2 && edge.to.port === port2) {
          this.setEdgeMetadata(edge.from.node, edge.from.port, edge.to.node, edge.to.port, {});
          toRemove.push(edge);
        } else {
          toKeep.push(edge);
        }
      }
    } else {
      _ref1 = this.edges;
      for (index = _j = 0, _len1 = _ref1.length; _j < _len1; index = ++_j) {
        edge = _ref1[index];
        if ((edge.from.node === node && edge.from.port === port) || (edge.to.node === node && edge.to.port === port)) {
          this.setEdgeMetadata(edge.from.node, edge.from.port, edge.to.node, edge.to.port, {});
          toRemove.push(edge);
        } else {
          toKeep.push(edge);
        }
      }
    }
    this.edges = toKeep;
    for (_k = 0, _len2 = toRemove.length; _k < _len2; _k++) {
      edge = toRemove[_k];
      this.emit('removeEdge', edge);
    }
    return this.checkTransactionEnd();
  };

  Graph.prototype.getEdge = function(node, port, node2, port2) {
    var edge, index, _i, _len, _ref;
    _ref = this.edges;
    for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
      edge = _ref[index];
      if (!edge) {
        continue;
      }
      if (edge.from.node === node && edge.from.port === port) {
        if (edge.to.node === node2 && edge.to.port === port2) {
          return edge;
        }
      }
    }
    return null;
  };

  Graph.prototype.setEdgeMetadata = function(node, port, node2, port2, metadata) {
    var before, edge, item, val;
    edge = this.getEdge(node, port, node2, port2);
    if (!edge) {
      return;
    }
    this.checkTransactionStart();
    before = clone(edge.metadata);
    if (!edge.metadata) {
      edge.metadata = {};
    }
    for (item in metadata) {
      val = metadata[item];
      if (val != null) {
        edge.metadata[item] = val;
      } else {
        delete edge.metadata[item];
      }
    }
    this.emit('changeEdge', edge, before);
    return this.checkTransactionEnd();
  };

  Graph.prototype.addInitial = function(data, node, port, metadata) {
    var initializer;
    if (!this.getNode(node)) {
      return;
    }
    this.checkTransactionStart();
    initializer = {
      from: {
        data: data
      },
      to: {
        node: node,
        port: port
      },
      metadata: metadata
    };
    this.initializers.push(initializer);
    this.emit('addInitial', initializer);
    this.checkTransactionEnd();
    return initializer;
  };

  Graph.prototype.addInitialIndex = function(data, node, port, index, metadata) {
    var initializer;
    if (!this.getNode(node)) {
      return;
    }
    if (index === null) {
      index = void 0;
    }
    this.checkTransactionStart();
    initializer = {
      from: {
        data: data
      },
      to: {
        node: node,
        port: port,
        index: index
      },
      metadata: metadata
    };
    this.initializers.push(initializer);
    this.emit('addInitial', initializer);
    this.checkTransactionEnd();
    return initializer;
  };

  Graph.prototype.addGraphInitial = function(data, node, metadata) {
    var inport;
    inport = this.inports[node];
    if (!inport) {
      return;
    }
    return this.addInitial(data, inport.process, inport.port, metadata);
  };

  Graph.prototype.addGraphInitialIndex = function(data, node, index, metadata) {
    var inport;
    inport = this.inports[node];
    if (!inport) {
      return;
    }
    return this.addInitialIndex(data, inport.process, inport.port, index, metadata);
  };

  Graph.prototype.removeInitial = function(node, port) {
    var edge, index, toKeep, toRemove, _i, _j, _len, _len1, _ref;
    this.checkTransactionStart();
    toRemove = [];
    toKeep = [];
    _ref = this.initializers;
    for (index = _i = 0, _len = _ref.length; _i < _len; index = ++_i) {
      edge = _ref[index];
      if (edge.to.node === node && edge.to.port === port) {
        toRemove.push(edge);
      } else {
        toKeep.push(edge);
      }
    }
    this.initializers = toKeep;
    for (_j = 0, _len1 = toRemove.length; _j < _len1; _j++) {
      edge = toRemove[_j];
      this.emit('removeInitial', edge);
    }
    return this.checkTransactionEnd();
  };

  Graph.prototype.removeGraphInitial = function(node) {
    var inport;
    inport = this.inports[node];
    if (!inport) {
      return;
    }
    return this.removeInitial(inport.process, inport.port);
  };

  Graph.prototype.toDOT = function() {
    var cleanID, cleanPort, data, dot, edge, id, initializer, node, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
    cleanID = function(id) {
      return id.replace(/\s*/g, "");
    };
    cleanPort = function(port) {
      return port.replace(/\./g, "");
    };
    dot = "digraph {\n";
    _ref = this.nodes;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      node = _ref[_i];
      dot += "    " + (cleanID(node.id)) + " [label=" + node.id + " shape=box]\n";
    }
    _ref1 = this.initializers;
    for (id = _j = 0, _len1 = _ref1.length; _j < _len1; id = ++_j) {
      initializer = _ref1[id];
      if (typeof initializer.from.data === 'function') {
        data = 'Function';
      } else {
        data = initializer.from.data;
      }
      dot += "    data" + id + " [label=\"'" + data + "'\" shape=plaintext]\n";
      dot += "    data" + id + " -> " + (cleanID(initializer.to.node)) + "[headlabel=" + (cleanPort(initializer.to.port)) + " labelfontcolor=blue labelfontsize=8.0]\n";
    }
    _ref2 = this.edges;
    for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
      edge = _ref2[_k];
      dot += "    " + (cleanID(edge.from.node)) + " -> " + (cleanID(edge.to.node)) + "[taillabel=" + (cleanPort(edge.from.port)) + " headlabel=" + (cleanPort(edge.to.port)) + " labelfontcolor=blue labelfontsize=8.0]\n";
    }
    dot += "}";
    return dot;
  };

  Graph.prototype.toYUML = function() {
    var edge, initializer, yuml, _i, _j, _len, _len1, _ref, _ref1;
    yuml = [];
    _ref = this.initializers;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      initializer = _ref[_i];
      yuml.push("(start)[" + initializer.to.port + "]->(" + initializer.to.node + ")");
    }
    _ref1 = this.edges;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      edge = _ref1[_j];
      yuml.push("(" + edge.from.node + ")[" + edge.from.port + "]->(" + edge.to.node + ")");
    }
    return yuml.join(",");
  };

  Graph.prototype.toJSON = function() {
    var connection, edge, exported, group, groupData, initializer, json, node, priv, property, pub, value, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7;
    json = {
      properties: {},
      inports: {},
      outports: {},
      groups: [],
      processes: {},
      connections: []
    };
    if (this.name) {
      json.properties.name = this.name;
    }
    _ref = this.properties;
    for (property in _ref) {
      value = _ref[property];
      json.properties[property] = value;
    }
    _ref1 = this.inports;
    for (pub in _ref1) {
      priv = _ref1[pub];
      json.inports[pub] = priv;
    }
    _ref2 = this.outports;
    for (pub in _ref2) {
      priv = _ref2[pub];
      json.outports[pub] = priv;
    }
    _ref3 = this.exports;
    for (_i = 0, _len = _ref3.length; _i < _len; _i++) {
      exported = _ref3[_i];
      if (!json.exports) {
        json.exports = [];
      }
      json.exports.push(exported);
    }
    _ref4 = this.groups;
    for (_j = 0, _len1 = _ref4.length; _j < _len1; _j++) {
      group = _ref4[_j];
      groupData = {
        name: group.name,
        nodes: group.nodes
      };
      if (Object.keys(group.metadata).length) {
        groupData.metadata = group.metadata;
      }
      json.groups.push(groupData);
    }
    _ref5 = this.nodes;
    for (_k = 0, _len2 = _ref5.length; _k < _len2; _k++) {
      node = _ref5[_k];
      json.processes[node.id] = {
        component: node.component
      };
      if (node.metadata) {
        json.processes[node.id].metadata = node.metadata;
      }
    }
    _ref6 = this.edges;
    for (_l = 0, _len3 = _ref6.length; _l < _len3; _l++) {
      edge = _ref6[_l];
      connection = {
        src: {
          process: edge.from.node,
          port: edge.from.port,
          index: edge.from.index
        },
        tgt: {
          process: edge.to.node,
          port: edge.to.port,
          index: edge.to.index
        }
      };
      if (Object.keys(edge.metadata).length) {
        connection.metadata = edge.metadata;
      }
      json.connections.push(connection);
    }
    _ref7 = this.initializers;
    for (_m = 0, _len4 = _ref7.length; _m < _len4; _m++) {
      initializer = _ref7[_m];
      json.connections.push({
        data: initializer.from.data,
        tgt: {
          process: initializer.to.node,
          port: initializer.to.port,
          index: initializer.to.index
        }
      });
    }
    return json;
  };

  Graph.prototype.save = function(file, success) {
    var json;
    json = JSON.stringify(this.toJSON(), null, 4);
    return require('fs').writeFile("" + file + ".json", json, "utf-8", function(err, data) {
      if (err) {
        throw err;
      }
      return success(file);
    });
  };

  return Graph;

})(EventEmitter);

exports.Graph = Graph;

exports.createGraph = function(name) {
  return new Graph(name);
};

exports.loadJSON = function(definition, success, metadata) {
  var conn, def, exported, graph, group, id, portId, priv, processId, properties, property, pub, split, value, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;
  if (metadata == null) {
    metadata = {};
  }
  if (typeof definition === 'string') {
    definition = JSON.parse(definition);
  }
  if (!definition.properties) {
    definition.properties = {};
  }
  if (!definition.processes) {
    definition.processes = {};
  }
  if (!definition.connections) {
    definition.connections = [];
  }
  graph = new Graph(definition.properties.name);
  graph.startTransaction('loadJSON', metadata);
  properties = {};
  _ref = definition.properties;
  for (property in _ref) {
    value = _ref[property];
    if (property === 'name') {
      continue;
    }
    properties[property] = value;
  }
  graph.setProperties(properties);
  _ref1 = definition.processes;
  for (id in _ref1) {
    def = _ref1[id];
    if (!def.metadata) {
      def.metadata = {};
    }
    graph.addNode(id, def.component, def.metadata);
  }
  _ref2 = definition.connections;
  for (_i = 0, _len = _ref2.length; _i < _len; _i++) {
    conn = _ref2[_i];
    metadata = conn.metadata ? conn.metadata : {};
    if (conn.data !== void 0) {
      if (typeof conn.tgt.index === 'number') {
        graph.addInitialIndex(conn.data, conn.tgt.process, conn.tgt.port.toLowerCase(), conn.tgt.index, metadata);
      } else {
        graph.addInitial(conn.data, conn.tgt.process, conn.tgt.port.toLowerCase(), metadata);
      }
      continue;
    }
    if (typeof conn.src.index === 'number' || typeof conn.tgt.index === 'number') {
      graph.addEdgeIndex(conn.src.process, conn.src.port.toLowerCase(), conn.src.index, conn.tgt.process, conn.tgt.port.toLowerCase(), conn.tgt.index, metadata);
      continue;
    }
    graph.addEdge(conn.src.process, conn.src.port.toLowerCase(), conn.tgt.process, conn.tgt.port.toLowerCase(), metadata);
  }
  if (definition.exports && definition.exports.length) {
    _ref3 = definition.exports;
    for (_j = 0, _len1 = _ref3.length; _j < _len1; _j++) {
      exported = _ref3[_j];
      if (exported["private"]) {
        split = exported["private"].split('.');
        if (split.length !== 2) {
          continue;
        }
        processId = split[0];
        portId = split[1];
        for (id in definition.processes) {
          if (id.toLowerCase() === processId.toLowerCase()) {
            processId = id;
          }
        }
      } else {
        processId = exported.process;
        portId = exported.port;
      }
      graph.addExport(exported["public"], processId, portId, exported.metadata);
    }
  }
  if (definition.inports) {
    _ref4 = definition.inports;
    for (pub in _ref4) {
      priv = _ref4[pub];
      graph.addInport(pub, priv.process, priv.port, priv.metadata);
    }
  }
  if (definition.outports) {
    _ref5 = definition.outports;
    for (pub in _ref5) {
      priv = _ref5[pub];
      graph.addOutport(pub, priv.process, priv.port, priv.metadata);
    }
  }
  if (definition.groups) {
    _ref6 = definition.groups;
    for (_k = 0, _len2 = _ref6.length; _k < _len2; _k++) {
      group = _ref6[_k];
      graph.addGroup(group.name, group.nodes, group.metadata || {});
    }
  }
  graph.endTransaction('loadJSON');
  return success(graph);
};

exports.loadFBP = function(fbpData, success) {
  var definition;
  definition = require('fbp').parse(fbpData);
  return exports.loadJSON(definition, success);
};

exports.loadHTTP = function(url, success) {
  var req;
  req = new XMLHttpRequest;
  req.onreadystatechange = function() {
    if (req.readyState !== 4) {
      return;
    }
    if (req.status !== 200) {
      return success();
    }
    return success(req.responseText);
  };
  req.open('GET', url, true);
  return req.send();
};

exports.loadFile = function(file, success, metadata) {
  var definition, e;
  if (metadata == null) {
    metadata = {};
  }
  if (platform.isBrowser()) {
    try {
      definition = require(file);
    } catch (_error) {
      e = _error;
      exports.loadHTTP(file, function(data) {
        if (!data) {
          throw new Error("Failed to load graph " + file);
          return;
        }
        if (file.split('.').pop() === 'fbp') {
          return exports.loadFBP(data, success, metadata);
        }
        definition = JSON.parse(data);
        return exports.loadJSON(definition, success, metadata);
      });
      return;
    }
    exports.loadJSON(definition, success, metadata);
    return;
  }
  return require('fs').readFile(file, "utf-8", function(err, data) {
    if (err) {
      throw err;
    }
    if (file.split('.').pop() === 'fbp') {
      return exports.loadFBP(data, success);
    }
    definition = JSON.parse(data);
    return exports.loadJSON(definition, success);
  });
};

resetGraph = function(graph) {
  var edge, exp, group, iip, node, port, v, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _results;
  _ref = (clone(graph.groups)).reverse();
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    group = _ref[_i];
    if (group != null) {
      graph.removeGroup(group.name);
    }
  }
  _ref1 = clone(graph.outports);
  for (port in _ref1) {
    v = _ref1[port];
    graph.removeOutport(port);
  }
  _ref2 = clone(graph.inports);
  for (port in _ref2) {
    v = _ref2[port];
    graph.removeInport(port);
  }
  _ref3 = clone(graph.exports.reverse());
  for (_j = 0, _len1 = _ref3.length; _j < _len1; _j++) {
    exp = _ref3[_j];
    graph.removeExports(exp["public"]);
  }
  graph.setProperties({});
  _ref4 = (clone(graph.initializers)).reverse();
  for (_k = 0, _len2 = _ref4.length; _k < _len2; _k++) {
    iip = _ref4[_k];
    graph.removeInitial(iip.to.node, iip.to.port);
  }
  _ref5 = (clone(graph.edges)).reverse();
  for (_l = 0, _len3 = _ref5.length; _l < _len3; _l++) {
    edge = _ref5[_l];
    graph.removeEdge(edge.from.node, edge.from.port, edge.to.node, edge.to.port);
  }
  _ref6 = (clone(graph.nodes)).reverse();
  _results = [];
  for (_m = 0, _len4 = _ref6.length; _m < _len4; _m++) {
    node = _ref6[_m];
    _results.push(graph.removeNode(node.id));
  }
  return _results;
};

mergeResolveTheirsNaive = function(base, to) {
  var edge, exp, group, iip, node, priv, pub, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6, _results;
  resetGraph(base);
  _ref = to.nodes;
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    node = _ref[_i];
    base.addNode(node.id, node.component, node.metadata);
  }
  _ref1 = to.edges;
  for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
    edge = _ref1[_j];
    base.addEdge(edge.from.node, edge.from.port, edge.to.node, edge.to.port, edge.metadata);
  }
  _ref2 = to.initializers;
  for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
    iip = _ref2[_k];
    base.addInitial(iip.from.data, iip.to.node, iip.to.port, iip.metadata);
  }
  _ref3 = to.exports;
  for (_l = 0, _len3 = _ref3.length; _l < _len3; _l++) {
    exp = _ref3[_l];
    base.addExport(exp["public"], exp.node, exp.port, exp.metadata);
  }
  base.setProperties(to.properties);
  _ref4 = to.inports;
  for (pub in _ref4) {
    priv = _ref4[pub];
    base.addInport(pub, priv.process, priv.port, priv.metadata);
  }
  _ref5 = to.outports;
  for (pub in _ref5) {
    priv = _ref5[pub];
    base.addOutport(pub, priv.process, priv.port, priv.metadata);
  }
  _ref6 = to.groups;
  _results = [];
  for (_m = 0, _len4 = _ref6.length; _m < _len4; _m++) {
    group = _ref6[_m];
    _results.push(base.addGroup(group.name, group.nodes, group.metadata));
  }
  return _results;
};

exports.equivalent = function(a, b, options) {
  var A, B;
  if (options == null) {
    options = {};
  }
  A = JSON.stringify(a);
  B = JSON.stringify(b);
  return A === B;
};

exports.mergeResolveTheirs = mergeResolveTheirsNaive;

});
require.register("noflo-noflo/src/lib/InternalSocket.js", function(exports, require, module){
var EventEmitter, InternalSocket,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

InternalSocket = (function(_super) {
  __extends(InternalSocket, _super);

  InternalSocket.prototype.regularEmitEvent = function(event, data) {
    return this.emit(event, data);
  };

  InternalSocket.prototype.debugEmitEvent = function(event, data) {
    var error;
    try {
      return this.emit(event, data);
    } catch (_error) {
      error = _error;
      return this.emit('error', {
        id: this.to.process.id,
        error: error
      });
    }
  };

  function InternalSocket() {
    this.connected = false;
    this.groups = [];
    this.dataDelegate = null;
    this.debug = false;
    this.emitEvent = this.regularEmitEvent;
  }

  InternalSocket.prototype.connect = function() {
    if (this.connected) {
      return;
    }
    this.connected = true;
    return this.emitEvent('connect', this);
  };

  InternalSocket.prototype.disconnect = function() {
    if (!this.connected) {
      return;
    }
    this.connected = false;
    return this.emitEvent('disconnect', this);
  };

  InternalSocket.prototype.isConnected = function() {
    return this.connected;
  };

  InternalSocket.prototype.send = function(data) {
    if (!this.connected) {
      this.connect();
    }
    if (data === void 0 && typeof this.dataDelegate === 'function') {
      data = this.dataDelegate();
    }
    return this.emitEvent('data', data);
  };

  InternalSocket.prototype.beginGroup = function(group) {
    this.groups.push(group);
    return this.emitEvent('begingroup', group);
  };

  InternalSocket.prototype.endGroup = function() {
    if (!this.groups.length) {
      return;
    }
    return this.emitEvent('endgroup', this.groups.pop());
  };

  InternalSocket.prototype.setDataDelegate = function(delegate) {
    if (typeof delegate !== 'function') {
      throw Error('A data delegate must be a function.');
    }
    return this.dataDelegate = delegate;
  };

  InternalSocket.prototype.setDebug = function(active) {
    this.debug = active;
    return this.emitEvent = this.debug ? this.debugEmitEvent : this.regularEmitEvent;
  };

  InternalSocket.prototype.getId = function() {
    var fromStr, toStr;
    fromStr = function(from) {
      return "" + from.process.id + "() " + (from.port.toUpperCase());
    };
    toStr = function(to) {
      return "" + (to.port.toUpperCase()) + " " + to.process.id + "()";
    };
    if (!(this.from || this.to)) {
      return "UNDEFINED";
    }
    if (this.from && !this.to) {
      return "" + (fromStr(this.from)) + " -> ANON";
    }
    if (!this.from) {
      return "DATA -> " + (toStr(this.to));
    }
    return "" + (fromStr(this.from)) + " -> " + (toStr(this.to));
  };

  return InternalSocket;

})(EventEmitter);

exports.InternalSocket = InternalSocket;

exports.createSocket = function() {
  return new InternalSocket;
};

});
require.register("noflo-noflo/src/lib/BasePort.js", function(exports, require, module){
var BasePort, EventEmitter, validTypes,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

validTypes = ['all', 'string', 'number', 'int', 'object', 'array', 'boolean', 'color', 'date', 'bang', 'function', 'buffer'];

BasePort = (function(_super) {
  __extends(BasePort, _super);

  function BasePort(options) {
    this.handleOptions(options);
    this.sockets = [];
    this.node = null;
    this.name = null;
  }

  BasePort.prototype.handleOptions = function(options) {
    if (!options) {
      options = {};
    }
    if (!options.datatype) {
      options.datatype = 'all';
    }
    if (options.required === void 0) {
      options.required = false;
    }
    if (options.datatype === 'integer') {
      options.datatype = 'int';
    }
    if (validTypes.indexOf(options.datatype) === -1) {
      throw new Error("Invalid port datatype '" + options.datatype + "' specified, valid are " + (validTypes.join(', ')));
    }
    if (options.type && options.type.indexOf('/') === -1) {
      throw new Error("Invalid port type '" + options.type + "' specified. Should be URL or MIME type");
    }
    return this.options = options;
  };

  BasePort.prototype.getId = function() {
    if (!(this.node && this.name)) {
      return 'Port';
    }
    return "" + this.node + " " + (this.name.toUpperCase());
  };

  BasePort.prototype.getDataType = function() {
    return this.options.datatype;
  };

  BasePort.prototype.getDescription = function() {
    return this.options.description;
  };

  BasePort.prototype.attach = function(socket, index) {
    if (index == null) {
      index = null;
    }
    if (!this.isAddressable() || index === null) {
      index = this.sockets.length;
    }
    this.sockets[index] = socket;
    this.attachSocket(socket, index);
    if (this.isAddressable()) {
      this.emit('attach', socket, index);
      return;
    }
    return this.emit('attach', socket);
  };

  BasePort.prototype.attachSocket = function() {};

  BasePort.prototype.detach = function(socket) {
    var index;
    index = this.sockets.indexOf(socket);
    if (index === -1) {
      return;
    }
    this.sockets[index] = void 0;
    if (this.isAddressable()) {
      this.emit('detach', socket, index);
      return;
    }
    return this.emit('detach', socket);
  };

  BasePort.prototype.isAddressable = function() {
    if (this.options.addressable) {
      return true;
    }
    return false;
  };

  BasePort.prototype.isBuffered = function() {
    if (this.options.buffered) {
      return true;
    }
    return false;
  };

  BasePort.prototype.isRequired = function() {
    if (this.options.required) {
      return true;
    }
    return false;
  };

  BasePort.prototype.isAttached = function(socketId) {
    if (socketId == null) {
      socketId = null;
    }
    if (this.isAddressable() && socketId !== null) {
      if (this.sockets[socketId]) {
        return true;
      }
      return false;
    }
    if (this.sockets.length) {
      return true;
    }
    return false;
  };

  BasePort.prototype.listAttached = function() {
    var attached, idx, socket, _i, _len, _ref;
    attached = [];
    _ref = this.sockets;
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      socket = _ref[idx];
      if (!socket) {
        continue;
      }
      attached.push(idx);
    }
    return attached;
  };

  BasePort.prototype.isConnected = function(socketId) {
    var connected;
    if (socketId == null) {
      socketId = null;
    }
    if (this.isAddressable()) {
      if (socketId === null) {
        throw new Error("" + (this.getId()) + ": Socket ID required");
      }
      if (!this.sockets[socketId]) {
        throw new Error("" + (this.getId()) + ": Socket " + socketId + " not available");
      }
      return this.sockets[socketId].isConnected();
    }
    connected = false;
    this.sockets.forEach((function(_this) {
      return function(socket) {
        if (!socket) {
          return;
        }
        if (socket.isConnected()) {
          return connected = true;
        }
      };
    })(this));
    return connected;
  };

  BasePort.prototype.canAttach = function() {
    return true;
  };

  return BasePort;

})(EventEmitter);

module.exports = BasePort;

});
require.register("noflo-noflo/src/lib/InPort.js", function(exports, require, module){
var BasePort, InPort,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BasePort = require('./BasePort');

InPort = (function(_super) {
  __extends(InPort, _super);

  function InPort(options, process) {
    this.process = null;
    if (!process && typeof options === 'function') {
      process = options;
      options = {};
    }
    if (options && options.buffered === void 0) {
      options.buffered = false;
    }
    if (!process && options && options.process) {
      process = options.process;
      delete options.process;
    }
    if (process) {
      if (typeof process !== 'function') {
        throw new Error('process must be a function');
      }
      this.process = process;
    }
    InPort.__super__.constructor.call(this, options);
    this.prepareBuffer();
  }

  InPort.prototype.attachSocket = function(socket, localId) {
    if (localId == null) {
      localId = null;
    }
    if (this.hasDefault()) {
      socket.setDataDelegate((function(_this) {
        return function() {
          return _this.options["default"];
        };
      })(this));
    }
    socket.on('connect', (function(_this) {
      return function() {
        return _this.handleSocketEvent('connect', socket, localId);
      };
    })(this));
    socket.on('begingroup', (function(_this) {
      return function(group) {
        return _this.handleSocketEvent('begingroup', group, localId);
      };
    })(this));
    socket.on('data', (function(_this) {
      return function(data) {
        _this.validateData(data);
        return _this.handleSocketEvent('data', data, localId);
      };
    })(this));
    socket.on('endgroup', (function(_this) {
      return function(group) {
        return _this.handleSocketEvent('endgroup', group, localId);
      };
    })(this));
    return socket.on('disconnect', (function(_this) {
      return function() {
        return _this.handleSocketEvent('disconnect', socket, localId);
      };
    })(this));
  };

  InPort.prototype.handleSocketEvent = function(event, payload, id) {
    if (this.isBuffered()) {
      this.buffer.push({
        event: event,
        payload: payload,
        id: id
      });
      if (this.isAddressable()) {
        if (this.process) {
          this.process(event, id, this.nodeInstance);
        }
        this.emit(event, id);
      } else {
        if (this.process) {
          this.process(event, this.nodeInstance);
        }
        this.emit(event);
      }
      return;
    }
    if (this.process) {
      if (this.isAddressable()) {
        this.process(event, payload, id, this.nodeInstance);
      } else {
        this.process(event, payload, this.nodeInstance);
      }
    }
    if (this.isAddressable()) {
      return this.emit(event, payload, id);
    }
    return this.emit(event, payload);
  };

  InPort.prototype.hasDefault = function() {
    return this.options["default"] !== void 0;
  };

  InPort.prototype.prepareBuffer = function() {
    if (!this.isBuffered()) {
      return;
    }
    return this.buffer = [];
  };

  InPort.prototype.validateData = function(data) {
    if (!this.options.values) {
      return;
    }
    if (this.options.values.indexOf(data) === -1) {
      throw new Error('Invalid data received');
    }
  };

  InPort.prototype.receive = function() {
    if (!this.isBuffered()) {
      throw new Error('Receive is only possible on buffered ports');
    }
    return this.buffer.shift();
  };

  InPort.prototype.contains = function() {
    if (!this.isBuffered()) {
      throw new Error('Contains query is only possible on buffered ports');
    }
    return this.buffer.filter(function(packet) {
      if (packet.event === 'data') {
        return true;
      }
    }).length;
  };

  return InPort;

})(BasePort);

module.exports = InPort;

});
require.register("noflo-noflo/src/lib/OutPort.js", function(exports, require, module){
var BasePort, OutPort,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

BasePort = require('./BasePort');

OutPort = (function(_super) {
  __extends(OutPort, _super);

  function OutPort(options) {
    this.cache = {};
    OutPort.__super__.constructor.call(this, options);
  }

  OutPort.prototype.attach = function(socket, index) {
    if (index == null) {
      index = null;
    }
    OutPort.__super__.attach.call(this, socket, index);
    if (this.isCaching() && (this.cache[index] != null)) {
      return this.send(this.cache[index], index);
    }
  };

  OutPort.prototype.connect = function(socketId) {
    var socket, sockets, _i, _len, _results;
    if (socketId == null) {
      socketId = null;
    }
    sockets = this.getSockets(socketId);
    this.checkRequired(sockets);
    _results = [];
    for (_i = 0, _len = sockets.length; _i < _len; _i++) {
      socket = sockets[_i];
      if (!socket) {
        continue;
      }
      _results.push(socket.connect());
    }
    return _results;
  };

  OutPort.prototype.beginGroup = function(group, socketId) {
    var sockets;
    if (socketId == null) {
      socketId = null;
    }
    sockets = this.getSockets(socketId);
    this.checkRequired(sockets);
    return sockets.forEach(function(socket) {
      if (!socket) {
        return;
      }
      if (socket.isConnected()) {
        return socket.beginGroup(group);
      }
      socket.once('connect', function() {
        return socket.beginGroup(group);
      });
      return socket.connect();
    });
  };

  OutPort.prototype.send = function(data, socketId) {
    var sockets;
    if (socketId == null) {
      socketId = null;
    }
    sockets = this.getSockets(socketId);
    this.checkRequired(sockets);
    if (this.isCaching() && data !== this.cache[socketId]) {
      this.cache[socketId] = data;
    }
    return sockets.forEach(function(socket) {
      if (!socket) {
        return;
      }
      if (socket.isConnected()) {
        return socket.send(data);
      }
      socket.once('connect', function() {
        return socket.send(data);
      });
      return socket.connect();
    });
  };

  OutPort.prototype.endGroup = function(socketId) {
    var socket, sockets, _i, _len, _results;
    if (socketId == null) {
      socketId = null;
    }
    sockets = this.getSockets(socketId);
    this.checkRequired(sockets);
    _results = [];
    for (_i = 0, _len = sockets.length; _i < _len; _i++) {
      socket = sockets[_i];
      if (!socket) {
        continue;
      }
      _results.push(socket.endGroup());
    }
    return _results;
  };

  OutPort.prototype.disconnect = function(socketId) {
    var socket, sockets, _i, _len, _results;
    if (socketId == null) {
      socketId = null;
    }
    sockets = this.getSockets(socketId);
    this.checkRequired(sockets);
    _results = [];
    for (_i = 0, _len = sockets.length; _i < _len; _i++) {
      socket = sockets[_i];
      if (!socket) {
        continue;
      }
      _results.push(socket.disconnect());
    }
    return _results;
  };

  OutPort.prototype.checkRequired = function(sockets) {
    if (sockets.length === 0 && this.isRequired()) {
      throw new Error("" + (this.getId()) + ": No connections available");
    }
  };

  OutPort.prototype.getSockets = function(socketId) {
    if (this.isAddressable()) {
      if (socketId === null) {
        throw new Error("" + (this.getId()) + " Socket ID required");
      }
      if (!this.sockets[socketId]) {
        return [];
      }
      return [this.sockets[socketId]];
    }
    return this.sockets;
  };

  OutPort.prototype.isCaching = function() {
    if (this.options.caching) {
      return true;
    }
    return false;
  };

  return OutPort;

})(BasePort);

module.exports = OutPort;

});
require.register("noflo-noflo/src/lib/Ports.js", function(exports, require, module){
var EventEmitter, InPort, InPorts, OutPort, OutPorts, Ports,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

InPort = require('./InPort');

OutPort = require('./OutPort');

Ports = (function(_super) {
  __extends(Ports, _super);

  Ports.prototype.model = InPort;

  function Ports(ports) {
    var name, options;
    this.ports = {};
    if (!ports) {
      return;
    }
    for (name in ports) {
      options = ports[name];
      this.add(name, options);
    }
  }

  Ports.prototype.add = function(name, options, process) {
    if (name === 'add' || name === 'remove') {
      throw new Error('Add and remove are restricted port names');
    }
    if (!name.match(/^[a-z0-9_\.\/]+$/)) {
      throw new Error("Port names can only contain lowercase alphanumeric characters and underscores. '" + name + "' not allowed");
    }
    if (this.ports[name]) {
      this.remove(name);
    }
    if (typeof options === 'object' && options.canAttach) {
      this.ports[name] = options;
    } else {
      this.ports[name] = new this.model(options, process);
    }
    this[name] = this.ports[name];
    this.emit('add', name);
    return this;
  };

  Ports.prototype.remove = function(name) {
    if (!this.ports[name]) {
      throw new Error("Port " + name + " not defined");
    }
    delete this.ports[name];
    delete this[name];
    this.emit('remove', name);
    return this;
  };

  return Ports;

})(EventEmitter);

exports.InPorts = InPorts = (function(_super) {
  __extends(InPorts, _super);

  function InPorts() {
    return InPorts.__super__.constructor.apply(this, arguments);
  }

  InPorts.prototype.on = function(name, event, callback) {
    if (!this.ports[name]) {
      throw new Error("Port " + name + " not available");
    }
    return this.ports[name].on(event, callback);
  };

  InPorts.prototype.once = function(name, event, callback) {
    if (!this.ports[name]) {
      throw new Error("Port " + name + " not available");
    }
    return this.ports[name].once(event, callback);
  };

  return InPorts;

})(Ports);

exports.OutPorts = OutPorts = (function(_super) {
  __extends(OutPorts, _super);

  function OutPorts() {
    return OutPorts.__super__.constructor.apply(this, arguments);
  }

  OutPorts.prototype.model = OutPort;

  OutPorts.prototype.connect = function(name, socketId) {
    if (!this.ports[name]) {
      throw new Error("Port " + name + " not available");
    }
    return this.ports[name].connect(socketId);
  };

  OutPorts.prototype.beginGroup = function(name, group, socketId) {
    if (!this.ports[name]) {
      throw new Error("Port " + name + " not available");
    }
    return this.ports[name].beginGroup(group, socketId);
  };

  OutPorts.prototype.send = function(name, data, socketId) {
    if (!this.ports[name]) {
      throw new Error("Port " + name + " not available");
    }
    return this.ports[name].send(data, socketId);
  };

  OutPorts.prototype.endGroup = function(name, socketId) {
    if (!this.ports[name]) {
      throw new Error("Port " + name + " not available");
    }
    return this.ports[name].endGroup(socketId);
  };

  OutPorts.prototype.disconnect = function(name, socketId) {
    if (!this.ports[name]) {
      throw new Error("Port " + name + " not available");
    }
    return this.ports[name].disconnect(socketId);
  };

  return OutPorts;

})(Ports);

});
require.register("noflo-noflo/src/lib/Port.js", function(exports, require, module){
var EventEmitter, Port,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

Port = (function(_super) {
  __extends(Port, _super);

  Port.prototype.description = '';

  Port.prototype.required = true;

  function Port(type) {
    this.type = type;
    if (!this.type) {
      this.type = 'all';
    }
    if (this.type === 'integer') {
      this.type = 'int';
    }
    this.sockets = [];
    this.from = null;
    this.node = null;
    this.name = null;
  }

  Port.prototype.getId = function() {
    if (!(this.node && this.name)) {
      return 'Port';
    }
    return "" + this.node + " " + (this.name.toUpperCase());
  };

  Port.prototype.getDataType = function() {
    return this.type;
  };

  Port.prototype.getDescription = function() {
    return this.description;
  };

  Port.prototype.attach = function(socket) {
    this.sockets.push(socket);
    return this.attachSocket(socket);
  };

  Port.prototype.attachSocket = function(socket, localId) {
    if (localId == null) {
      localId = null;
    }
    this.emit("attach", socket, localId);
    this.from = socket.from;
    if (socket.setMaxListeners) {
      socket.setMaxListeners(0);
    }
    socket.on("connect", (function(_this) {
      return function() {
        return _this.emit("connect", socket, localId);
      };
    })(this));
    socket.on("begingroup", (function(_this) {
      return function(group) {
        return _this.emit("begingroup", group, localId);
      };
    })(this));
    socket.on("data", (function(_this) {
      return function(data) {
        return _this.emit("data", data, localId);
      };
    })(this));
    socket.on("endgroup", (function(_this) {
      return function(group) {
        return _this.emit("endgroup", group, localId);
      };
    })(this));
    return socket.on("disconnect", (function(_this) {
      return function() {
        return _this.emit("disconnect", socket, localId);
      };
    })(this));
  };

  Port.prototype.connect = function() {
    var socket, _i, _len, _ref, _results;
    if (this.sockets.length === 0) {
      throw new Error("" + (this.getId()) + ": No connections available");
    }
    _ref = this.sockets;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      socket = _ref[_i];
      _results.push(socket.connect());
    }
    return _results;
  };

  Port.prototype.beginGroup = function(group) {
    if (this.sockets.length === 0) {
      throw new Error("" + (this.getId()) + ": No connections available");
    }
    return this.sockets.forEach(function(socket) {
      if (socket.isConnected()) {
        return socket.beginGroup(group);
      }
      socket.once('connect', function() {
        return socket.beginGroup(group);
      });
      return socket.connect();
    });
  };

  Port.prototype.send = function(data) {
    if (this.sockets.length === 0) {
      throw new Error("" + (this.getId()) + ": No connections available");
    }
    return this.sockets.forEach(function(socket) {
      if (socket.isConnected()) {
        return socket.send(data);
      }
      socket.once('connect', function() {
        return socket.send(data);
      });
      return socket.connect();
    });
  };

  Port.prototype.endGroup = function() {
    var socket, _i, _len, _ref, _results;
    if (this.sockets.length === 0) {
      throw new Error("" + (this.getId()) + ": No connections available");
    }
    _ref = this.sockets;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      socket = _ref[_i];
      _results.push(socket.endGroup());
    }
    return _results;
  };

  Port.prototype.disconnect = function() {
    var socket, _i, _len, _ref, _results;
    if (this.sockets.length === 0) {
      throw new Error("" + (this.getId()) + ": No connections available");
    }
    _ref = this.sockets;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      socket = _ref[_i];
      _results.push(socket.disconnect());
    }
    return _results;
  };

  Port.prototype.detach = function(socket) {
    var index;
    if (this.sockets.length === 0) {
      return;
    }
    if (!socket) {
      socket = this.sockets[0];
    }
    index = this.sockets.indexOf(socket);
    if (index === -1) {
      return;
    }
    if (this.isAddressable()) {
      this.sockets[index] = void 0;
      this.emit('detach', socket, index);
      return;
    }
    this.sockets.splice(index, 1);
    return this.emit("detach", socket);
  };

  Port.prototype.isConnected = function() {
    var connected;
    connected = false;
    this.sockets.forEach((function(_this) {
      return function(socket) {
        if (socket.isConnected()) {
          return connected = true;
        }
      };
    })(this));
    return connected;
  };

  Port.prototype.isAddressable = function() {
    return false;
  };

  Port.prototype.isRequired = function() {
    return this.required;
  };

  Port.prototype.isAttached = function() {
    if (this.sockets.length > 0) {
      return true;
    }
    return false;
  };

  Port.prototype.listAttached = function() {
    var attached, idx, socket, _i, _len, _ref;
    attached = [];
    _ref = this.sockets;
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      socket = _ref[idx];
      if (!socket) {
        continue;
      }
      attached.push(idx);
    }
    return attached;
  };

  Port.prototype.canAttach = function() {
    return true;
  };

  return Port;

})(EventEmitter);

exports.Port = Port;

});
require.register("noflo-noflo/src/lib/ArrayPort.js", function(exports, require, module){
var ArrayPort, port,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

port = require("./Port");

ArrayPort = (function(_super) {
  __extends(ArrayPort, _super);

  function ArrayPort(type) {
    this.type = type;
    ArrayPort.__super__.constructor.call(this, this.type);
  }

  ArrayPort.prototype.attach = function(socket, socketId) {
    if (socketId == null) {
      socketId = null;
    }
    if (socketId === null) {
      socketId = this.sockets.length;
    }
    this.sockets[socketId] = socket;
    return this.attachSocket(socket, socketId);
  };

  ArrayPort.prototype.connect = function(socketId) {
    if (socketId == null) {
      socketId = null;
    }
    if (socketId === null) {
      if (!this.sockets.length) {
        throw new Error("" + (this.getId()) + ": No connections available");
      }
      this.sockets.forEach(function(socket) {
        if (!socket) {
          return;
        }
        return socket.connect();
      });
      return;
    }
    if (!this.sockets[socketId]) {
      throw new Error("" + (this.getId()) + ": No connection '" + socketId + "' available");
    }
    return this.sockets[socketId].connect();
  };

  ArrayPort.prototype.beginGroup = function(group, socketId) {
    if (socketId == null) {
      socketId = null;
    }
    if (socketId === null) {
      if (!this.sockets.length) {
        throw new Error("" + (this.getId()) + ": No connections available");
      }
      this.sockets.forEach((function(_this) {
        return function(socket, index) {
          if (!socket) {
            return;
          }
          return _this.beginGroup(group, index);
        };
      })(this));
      return;
    }
    if (!this.sockets[socketId]) {
      throw new Error("" + (this.getId()) + ": No connection '" + socketId + "' available");
    }
    if (this.isConnected(socketId)) {
      return this.sockets[socketId].beginGroup(group);
    }
    this.sockets[socketId].once("connect", (function(_this) {
      return function() {
        return _this.sockets[socketId].beginGroup(group);
      };
    })(this));
    return this.sockets[socketId].connect();
  };

  ArrayPort.prototype.send = function(data, socketId) {
    if (socketId == null) {
      socketId = null;
    }
    if (socketId === null) {
      if (!this.sockets.length) {
        throw new Error("" + (this.getId()) + ": No connections available");
      }
      this.sockets.forEach((function(_this) {
        return function(socket, index) {
          if (!socket) {
            return;
          }
          return _this.send(data, index);
        };
      })(this));
      return;
    }
    if (!this.sockets[socketId]) {
      throw new Error("" + (this.getId()) + ": No connection '" + socketId + "' available");
    }
    if (this.isConnected(socketId)) {
      return this.sockets[socketId].send(data);
    }
    this.sockets[socketId].once("connect", (function(_this) {
      return function() {
        return _this.sockets[socketId].send(data);
      };
    })(this));
    return this.sockets[socketId].connect();
  };

  ArrayPort.prototype.endGroup = function(socketId) {
    if (socketId == null) {
      socketId = null;
    }
    if (socketId === null) {
      if (!this.sockets.length) {
        throw new Error("" + (this.getId()) + ": No connections available");
      }
      this.sockets.forEach((function(_this) {
        return function(socket, index) {
          if (!socket) {
            return;
          }
          return _this.endGroup(index);
        };
      })(this));
      return;
    }
    if (!this.sockets[socketId]) {
      throw new Error("" + (this.getId()) + ": No connection '" + socketId + "' available");
    }
    return this.sockets[socketId].endGroup();
  };

  ArrayPort.prototype.disconnect = function(socketId) {
    var socket, _i, _len, _ref;
    if (socketId == null) {
      socketId = null;
    }
    if (socketId === null) {
      if (!this.sockets.length) {
        throw new Error("" + (this.getId()) + ": No connections available");
      }
      _ref = this.sockets;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        socket = _ref[_i];
        if (!socket) {
          return;
        }
        socket.disconnect();
      }
      return;
    }
    if (!this.sockets[socketId]) {
      return;
    }
    return this.sockets[socketId].disconnect();
  };

  ArrayPort.prototype.isConnected = function(socketId) {
    var connected;
    if (socketId == null) {
      socketId = null;
    }
    if (socketId === null) {
      connected = false;
      this.sockets.forEach((function(_this) {
        return function(socket) {
          if (!socket) {
            return;
          }
          if (socket.isConnected()) {
            return connected = true;
          }
        };
      })(this));
      return connected;
    }
    if (!this.sockets[socketId]) {
      return false;
    }
    return this.sockets[socketId].isConnected();
  };

  ArrayPort.prototype.isAddressable = function() {
    return true;
  };

  ArrayPort.prototype.isAttached = function(socketId) {
    var socket, _i, _len, _ref;
    if (socketId === void 0) {
      _ref = this.sockets;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        socket = _ref[_i];
        if (socket) {
          return true;
        }
      }
      return false;
    }
    if (this.sockets[socketId]) {
      return true;
    }
    return false;
  };

  return ArrayPort;

})(port.Port);

exports.ArrayPort = ArrayPort;

});
require.register("noflo-noflo/src/lib/Component.js", function(exports, require, module){
var Component, EventEmitter, ports,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

EventEmitter = require('events').EventEmitter;

ports = require('./Ports');

Component = (function(_super) {
  __extends(Component, _super);

  Component.prototype.description = '';

  Component.prototype.icon = null;

  Component.prototype.started = false;

  function Component(options) {
    this.error = __bind(this.error, this);
    if (!options) {
      options = {};
    }
    if (!options.inPorts) {
      options.inPorts = {};
    }
    if (options.inPorts instanceof ports.InPorts) {
      this.inPorts = options.inPorts;
    } else {
      this.inPorts = new ports.InPorts(options.inPorts);
    }
    if (!options.outPorts) {
      options.outPorts = {};
    }
    if (options.outPorts instanceof ports.OutPorts) {
      this.outPorts = options.outPorts;
    } else {
      this.outPorts = new ports.OutPorts(options.outPorts);
    }
  }

  Component.prototype.getDescription = function() {
    return this.description;
  };

  Component.prototype.isReady = function() {
    return true;
  };

  Component.prototype.isSubgraph = function() {
    return false;
  };

  Component.prototype.setIcon = function(icon) {
    this.icon = icon;
    return this.emit('icon', this.icon);
  };

  Component.prototype.getIcon = function() {
    return this.icon;
  };

  Component.prototype.error = function(e, groups, errorPort) {
    var group, _i, _j, _len, _len1;
    if (groups == null) {
      groups = [];
    }
    if (errorPort == null) {
      errorPort = 'error';
    }
    if (this.outPorts[errorPort] && (this.outPorts[errorPort].isAttached() || !this.outPorts[errorPort].isRequired())) {
      for (_i = 0, _len = groups.length; _i < _len; _i++) {
        group = groups[_i];
        this.outPorts[errorPort].beginGroup(group);
      }
      this.outPorts[errorPort].send(e);
      for (_j = 0, _len1 = groups.length; _j < _len1; _j++) {
        group = groups[_j];
        this.outPorts[errorPort].endGroup();
      }
      this.outPorts[errorPort].disconnect();
      return;
    }
    throw e;
  };

  Component.prototype.shutdown = function() {
    return this.started = false;
  };

  Component.prototype.start = function() {
    this.started = true;
    return this.started;
  };

  Component.prototype.isStarted = function() {
    return this.started;
  };

  return Component;

})(EventEmitter);

exports.Component = Component;

});
require.register("noflo-noflo/src/lib/AsyncComponent.js", function(exports, require, module){
var AsyncComponent, component, port,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

port = require("./Port");

component = require("./Component");

AsyncComponent = (function(_super) {
  __extends(AsyncComponent, _super);

  function AsyncComponent(inPortName, outPortName, errPortName) {
    this.inPortName = inPortName != null ? inPortName : "in";
    this.outPortName = outPortName != null ? outPortName : "out";
    this.errPortName = errPortName != null ? errPortName : "error";
    if (!this.inPorts[this.inPortName]) {
      throw new Error("no inPort named '" + this.inPortName + "'");
    }
    if (!this.outPorts[this.outPortName]) {
      throw new Error("no outPort named '" + this.outPortName + "'");
    }
    this.load = 0;
    this.q = [];
    this.errorGroups = [];
    this.outPorts.load = new port.Port();
    this.inPorts[this.inPortName].on("begingroup", (function(_this) {
      return function(group) {
        if (_this.load > 0) {
          return _this.q.push({
            name: "begingroup",
            data: group
          });
        }
        _this.errorGroups.push(group);
        return _this.outPorts[_this.outPortName].beginGroup(group);
      };
    })(this));
    this.inPorts[this.inPortName].on("endgroup", (function(_this) {
      return function() {
        if (_this.load > 0) {
          return _this.q.push({
            name: "endgroup"
          });
        }
        _this.errorGroups.pop();
        return _this.outPorts[_this.outPortName].endGroup();
      };
    })(this));
    this.inPorts[this.inPortName].on("disconnect", (function(_this) {
      return function() {
        if (_this.load > 0) {
          return _this.q.push({
            name: "disconnect"
          });
        }
        _this.outPorts[_this.outPortName].disconnect();
        _this.errorGroups = [];
        if (_this.outPorts.load.isAttached()) {
          return _this.outPorts.load.disconnect();
        }
      };
    })(this));
    this.inPorts[this.inPortName].on("data", (function(_this) {
      return function(data) {
        if (_this.q.length > 0) {
          return _this.q.push({
            name: "data",
            data: data
          });
        }
        return _this.processData(data);
      };
    })(this));
  }

  AsyncComponent.prototype.processData = function(data) {
    this.incrementLoad();
    return this.doAsync(data, (function(_this) {
      return function(err) {
        if (err) {
          _this.error(err, _this.errorGroups, _this.errPortName);
        }
        return _this.decrementLoad();
      };
    })(this));
  };

  AsyncComponent.prototype.incrementLoad = function() {
    this.load++;
    if (this.outPorts.load.isAttached()) {
      this.outPorts.load.send(this.load);
    }
    if (this.outPorts.load.isAttached()) {
      return this.outPorts.load.disconnect();
    }
  };

  AsyncComponent.prototype.doAsync = function(data, callback) {
    return callback(new Error("AsyncComponents must implement doAsync"));
  };

  AsyncComponent.prototype.decrementLoad = function() {
    if (this.load === 0) {
      throw new Error("load cannot be negative");
    }
    this.load--;
    if (this.outPorts.load.isAttached()) {
      this.outPorts.load.send(this.load);
    }
    if (this.outPorts.load.isAttached()) {
      this.outPorts.load.disconnect();
    }
    if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {
      return process.nextTick((function(_this) {
        return function() {
          return _this.processQueue();
        };
      })(this));
    } else {
      return setTimeout((function(_this) {
        return function() {
          return _this.processQueue();
        };
      })(this), 0);
    }
  };

  AsyncComponent.prototype.processQueue = function() {
    var event, processedData;
    if (this.load > 0) {
      return;
    }
    processedData = false;
    while (this.q.length > 0) {
      event = this.q[0];
      switch (event.name) {
        case "begingroup":
          if (processedData) {
            return;
          }
          this.outPorts[this.outPortName].beginGroup(event.data);
          this.errorGroups.push(event.data);
          this.q.shift();
          break;
        case "endgroup":
          if (processedData) {
            return;
          }
          this.outPorts[this.outPortName].endGroup();
          this.errorGroups.pop();
          this.q.shift();
          break;
        case "disconnect":
          if (processedData) {
            return;
          }
          this.outPorts[this.outPortName].disconnect();
          if (this.outPorts.load.isAttached()) {
            this.outPorts.load.disconnect();
          }
          this.errorGroups = [];
          this.q.shift();
          break;
        case "data":
          this.processData(event.data);
          this.q.shift();
          processedData = true;
      }
    }
  };

  AsyncComponent.prototype.shutdown = function() {
    this.q = [];
    return this.errorGroups = [];
  };

  return AsyncComponent;

})(component.Component);

exports.AsyncComponent = AsyncComponent;

});
require.register("noflo-noflo/src/lib/LoggingComponent.js", function(exports, require, module){
var Component, Port, util,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

Component = require("./Component").Component;

Port = require("./Port").Port;

if (!require('./Platform').isBrowser()) {
  util = require("util");
} else {
  util = {
    inspect: function(data) {
      return data;
    }
  };
}

exports.LoggingComponent = (function(_super) {
  __extends(LoggingComponent, _super);

  function LoggingComponent() {
    this.sendLog = __bind(this.sendLog, this);
    this.outPorts = {
      log: new Port()
    };
  }

  LoggingComponent.prototype.sendLog = function(message) {
    if (typeof message === "object") {
      message.when = new Date;
      message.source = this.constructor.name;
      if (this.nodeId != null) {
        message.nodeID = this.nodeId;
      }
    }
    if ((this.outPorts.log != null) && this.outPorts.log.isAttached()) {
      return this.outPorts.log.send(message);
    } else {
      return console.log(util.inspect(message, 4, true, true));
    }
  };

  return LoggingComponent;

})(Component);

});
require.register("noflo-noflo/src/lib/ComponentLoader.js", function(exports, require, module){
var ComponentLoader, EventEmitter, internalSocket, nofloGraph, utils,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

internalSocket = require('./InternalSocket');

nofloGraph = require('./Graph');

utils = require('./Utils');

EventEmitter = require('events').EventEmitter;

ComponentLoader = (function(_super) {
  __extends(ComponentLoader, _super);

  function ComponentLoader(baseDir) {
    this.baseDir = baseDir;
    this.components = null;
    this.checked = [];
    this.revalidate = false;
    this.libraryIcons = {};
    this.processing = false;
    this.ready = false;
  }

  ComponentLoader.prototype.getModulePrefix = function(name) {
    if (!name) {
      return '';
    }
    if (name === 'noflo') {
      return '';
    }
    return name.replace('noflo-', '');
  };

  ComponentLoader.prototype.getModuleComponents = function(moduleName) {
    var cPath, definition, dependency, e, loader, name, prefix, _ref, _ref1, _results;
    if (this.checked.indexOf(moduleName) !== -1) {
      return;
    }
    this.checked.push(moduleName);
    try {
      definition = require("/" + moduleName + "/component.json");
    } catch (_error) {
      e = _error;
      if (moduleName.substr(0, 1) === '/') {
        return this.getModuleComponents("noflo-" + (moduleName.substr(1)));
      }
      return;
    }
    for (dependency in definition.dependencies) {
      this.getModuleComponents(dependency.replace('/', '-'));
    }
    if (!definition.noflo) {
      return;
    }
    prefix = this.getModulePrefix(definition.name);
    if (definition.noflo.icon) {
      this.libraryIcons[prefix] = definition.noflo.icon;
    }
    if (moduleName[0] === '/') {
      moduleName = moduleName.substr(1);
    }
    if (definition.noflo.loader) {
      loader = require("/" + moduleName + "/" + definition.noflo.loader);
      this.registerLoader(loader, function() {});
    }
    if (definition.noflo.components) {
      _ref = definition.noflo.components;
      for (name in _ref) {
        cPath = _ref[name];
        if (cPath.indexOf('.js') !== -1) {
          cPath = cPath.replace('.js', '.js');
        }
        if (cPath.substr(0, 2) === './') {
          cPath = cPath.substr(2);
        }
        this.registerComponent(prefix, name, "/" + moduleName + "/" + cPath);
      }
    }
    if (definition.noflo.graphs) {
      _ref1 = definition.noflo.graphs;
      _results = [];
      for (name in _ref1) {
        cPath = _ref1[name];
        _results.push(this.registerGraph(prefix, name, "/" + moduleName + "/" + cPath));
      }
      return _results;
    }
  };

  ComponentLoader.prototype.listComponents = function(callback) {
    if (this.processing) {
      this.once('ready', (function(_this) {
        return function() {
          return callback(_this.components);
        };
      })(this));
      return;
    }
    if (this.components) {
      return callback(this.components);
    }
    this.ready = false;
    this.processing = true;
    return setTimeout((function(_this) {
      return function() {
        _this.components = {};
        _this.getModuleComponents(_this.baseDir);
        _this.processing = false;
        _this.ready = true;
        _this.emit('ready', true);
        if (callback) {
          return callback(_this.components);
        }
      };
    })(this), 1);
  };

  ComponentLoader.prototype.load = function(name, callback, metadata) {
    var component, componentName;
    if (!this.ready) {
      this.listComponents((function(_this) {
        return function() {
          return _this.load(name, callback, metadata);
        };
      })(this));
      return;
    }
    component = this.components[name];
    if (!component) {
      for (componentName in this.components) {
        if (componentName.split('/')[1] === name) {
          component = this.components[componentName];
          break;
        }
      }
      if (!component) {
        callback(new Error("Component " + name + " not available with base " + this.baseDir));
        return;
      }
    }
    if (this.isGraph(component)) {
      if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {
        process.nextTick((function(_this) {
          return function() {
            return _this.loadGraph(name, component, callback, metadata);
          };
        })(this));
      } else {
        setTimeout((function(_this) {
          return function() {
            return _this.loadGraph(name, component, callback, metadata);
          };
        })(this), 0);
      }
      return;
    }
    return this.createComponent(name, component, metadata, (function(_this) {
      return function(err, instance) {
        if (err) {
          return callback(err);
        }
        if (!instance) {
          callback(new Error("Component " + name + " could not be loaded."));
          return;
        }
        if (name === 'Graph') {
          instance.baseDir = _this.baseDir;
        }
        _this.setIcon(name, instance);
        return callback(null, instance);
      };
    })(this));
  };

  ComponentLoader.prototype.createComponent = function(name, component, metadata, callback) {
    var e, implementation, instance;
    implementation = component;
    if (typeof implementation === 'string') {
      try {
        implementation = require(implementation);
      } catch (_error) {
        e = _error;
        return callback(e);
      }
    }
    if (typeof implementation.getComponent === 'function') {
      instance = implementation.getComponent(metadata);
    } else if (typeof implementation === 'function') {
      instance = implementation(metadata);
    } else {
      callback(new Error("Invalid type " + (typeof implementation) + " for component " + name + "."));
      return;
    }
    return callback(null, instance);
  };

  ComponentLoader.prototype.isGraph = function(cPath) {
    if (typeof cPath === 'object' && cPath instanceof nofloGraph.Graph) {
      return true;
    }
    if (typeof cPath !== 'string') {
      return false;
    }
    return cPath.indexOf('.fbp') !== -1 || cPath.indexOf('.json') !== -1;
  };

  ComponentLoader.prototype.loadGraph = function(name, component, callback, metadata) {
    var graph, graphImplementation, graphSocket;
    graphImplementation = require(this.components['Graph']);
    graphSocket = internalSocket.createSocket();
    graph = graphImplementation.getComponent(metadata);
    graph.loader = this;
    graph.baseDir = this.baseDir;
    graph.inPorts.graph.attach(graphSocket);
    graphSocket.send(component);
    graphSocket.disconnect();
    graph.inPorts.remove('graph');
    this.setIcon(name, graph);
    return callback(null, graph);
  };

  ComponentLoader.prototype.setIcon = function(name, instance) {
    var componentName, library, _ref;
    if (!instance.getIcon || instance.getIcon()) {
      return;
    }
    _ref = name.split('/'), library = _ref[0], componentName = _ref[1];
    if (componentName && this.getLibraryIcon(library)) {
      instance.setIcon(this.getLibraryIcon(library));
      return;
    }
    if (instance.isSubgraph()) {
      instance.setIcon('sitemap');
      return;
    }
    instance.setIcon('square');
  };

  ComponentLoader.prototype.getLibraryIcon = function(prefix) {
    if (this.libraryIcons[prefix]) {
      return this.libraryIcons[prefix];
    }
    return null;
  };

  ComponentLoader.prototype.normalizeName = function(packageId, name) {
    var fullName, prefix;
    prefix = this.getModulePrefix(packageId);
    fullName = "" + prefix + "/" + name;
    if (!packageId) {
      fullName = name;
    }
    return fullName;
  };

  ComponentLoader.prototype.registerComponent = function(packageId, name, cPath, callback) {
    var fullName;
    fullName = this.normalizeName(packageId, name);
    this.components[fullName] = cPath;
    if (callback) {
      return callback();
    }
  };

  ComponentLoader.prototype.registerGraph = function(packageId, name, gPath, callback) {
    return this.registerComponent(packageId, name, gPath, callback);
  };

  ComponentLoader.prototype.registerLoader = function(loader, callback) {
    return loader(this, callback);
  };

  ComponentLoader.prototype.setSource = function(packageId, name, source, language, callback) {
    var e, implementation;
    if (!this.ready) {
      this.listComponents((function(_this) {
        return function() {
          return _this.setSource(packageId, name, source, language, callback);
        };
      })(this));
      return;
    }
    if (language === 'coffeescript') {
      if (!window.CoffeeScript) {
        return callback(new Error('CoffeeScript compiler not available'));
      }
      try {
        source = CoffeeScript.compile(source, {
          bare: true
        });
      } catch (_error) {
        e = _error;
        return callback(e);
      }
    }
    try {
      source = source.replace("require('noflo')", "require('./NoFlo')");
      source = source.replace('require("noflo")', 'require("./NoFlo")');
      implementation = eval("(function () { var exports = {}; " + source + "; return exports; })()");
    } catch (_error) {
      e = _error;
      return callback(e);
    }
    if (!(implementation || implementation.getComponent)) {
      return callback(new Error('Provided source failed to create a runnable component'));
    }
    return this.registerComponent(packageId, name, implementation, function() {
      return callback(null);
    });
  };

  ComponentLoader.prototype.getSource = function(name, callback) {
    var component, componentName, nameParts, path;
    if (!this.ready) {
      this.listComponents((function(_this) {
        return function() {
          return _this.getSource(name, callback);
        };
      })(this));
      return;
    }
    component = this.components[name];
    if (!component) {
      for (componentName in this.components) {
        if (componentName.split('/')[1] === name) {
          component = this.components[componentName];
          name = componentName;
          break;
        }
      }
      if (!component) {
        return callback(new Error("Component " + name + " not installed"));
      }
    }
    if (typeof component !== 'string') {
      return callback(new Error("Can't provide source for " + name + ". Not a file"));
    }
    nameParts = name.split('/');
    if (nameParts.length === 1) {
      nameParts[1] = nameParts[0];
      nameParts[0] = '';
    }
    if (this.isGraph(component)) {
      nofloGraph.loadFile(component, function(graph) {
        if (!graph) {
          return callback(new Error('Unable to load graph'));
        }
        return callback(null, {
          name: nameParts[1],
          library: nameParts[0],
          code: JSON.stringify(graph.toJSON()),
          language: 'json'
        });
      });
      return;
    }
    path = window.require.resolve(component);
    if (!path) {
      return callback(new Error("Component " + name + " is not resolvable to a path"));
    }
    return callback(null, {
      name: nameParts[1],
      library: nameParts[0],
      code: window.require.modules[path].toString(),
      language: utils.guessLanguageFromFilename(component)
    });
  };

  ComponentLoader.prototype.clear = function() {
    this.components = null;
    this.checked = [];
    this.revalidate = true;
    this.ready = false;
    return this.processing = false;
  };

  return ComponentLoader;

})(EventEmitter);

exports.ComponentLoader = ComponentLoader;

});
require.register("noflo-noflo/src/lib/NoFlo.js", function(exports, require, module){
var ports;

exports.graph = require('./Graph');

exports.Graph = exports.graph.Graph;

exports.journal = require('./Journal');

exports.Journal = exports.journal.Journal;

exports.Network = require('./Network').Network;

exports.isBrowser = require('./Platform').isBrowser;

if (!exports.isBrowser()) {
  exports.ComponentLoader = require('./nodejs/ComponentLoader').ComponentLoader;
} else {
  exports.ComponentLoader = require('./ComponentLoader').ComponentLoader;
}

exports.Component = require('./Component').Component;

exports.AsyncComponent = require('./AsyncComponent').AsyncComponent;

exports.LoggingComponent = require('./LoggingComponent').LoggingComponent;

exports.helpers = require('./Helpers');

ports = require('./Ports');

exports.InPorts = ports.InPorts;

exports.OutPorts = ports.OutPorts;

exports.InPort = require('./InPort');

exports.OutPort = require('./OutPort');

exports.Port = require('./Port').Port;

exports.ArrayPort = require('./ArrayPort').ArrayPort;

exports.internalSocket = require('./InternalSocket');

exports.createNetwork = function(graph, callback, delay) {
  var network, networkReady;
  network = new exports.Network(graph);
  networkReady = function(network) {
    if (callback != null) {
      callback(network);
    }
    return network.start();
  };
  network.loader.listComponents(function() {
    if (graph.nodes.length === 0) {
      return networkReady(network);
    }
    if (delay) {
      if (callback != null) {
        callback(network);
      }
      return;
    }
    return network.connect(function() {
      return networkReady(network);
    });
  });
  return network;
};

exports.loadFile = function(file, baseDir, callback) {
  if (!callback) {
    callback = baseDir;
    baseDir = null;
  }
  return exports.graph.loadFile(file, function(net) {
    if (baseDir) {
      net.baseDir = baseDir;
    }
    return exports.createNetwork(net, callback);
  });
};

exports.saveFile = function(graph, file, callback) {
  return exports.graph.save(file, function() {
    return callback(file);
  });
};

});
require.register("noflo-noflo/src/lib/Network.js", function(exports, require, module){
var EventEmitter, Network, componentLoader, graph, internalSocket, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require("underscore");

internalSocket = require("./InternalSocket");

graph = require("./Graph");

EventEmitter = require('events').EventEmitter;

if (!require('./Platform').isBrowser()) {
  componentLoader = require("./nodejs/ComponentLoader");
} else {
  componentLoader = require('./ComponentLoader');
}

Network = (function(_super) {
  __extends(Network, _super);

  Network.prototype.processes = {};

  Network.prototype.connections = [];

  Network.prototype.initials = [];

  Network.prototype.defaults = [];

  Network.prototype.graph = null;

  Network.prototype.startupDate = null;

  Network.prototype.portBuffer = {};

  function Network(graph) {
    this.processes = {};
    this.connections = [];
    this.initials = [];
    this.nextInitials = [];
    this.defaults = [];
    this.graph = graph;
    this.started = false;
    this.debug = false;
    if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {
      this.baseDir = graph.baseDir || process.cwd();
    } else {
      this.baseDir = graph.baseDir || '/';
    }
    this.startupDate = new Date();
    if (graph.componentLoader) {
      this.loader = graph.componentLoader;
    } else {
      this.loader = new componentLoader.ComponentLoader(this.baseDir);
    }
  }

  Network.prototype.uptime = function() {
    return new Date() - this.startupDate;
  };

  Network.prototype.connectionCount = 0;

  Network.prototype.increaseConnections = function() {
    if (this.connectionCount === 0) {
      this.emit('start', {
        start: this.startupDate
      });
    }
    return this.connectionCount++;
  };

  Network.prototype.decreaseConnections = function() {
    var ender;
    this.connectionCount--;
    if (this.connectionCount === 0) {
      ender = _.debounce((function(_this) {
        return function() {
          if (_this.connectionCount) {
            return;
          }
          return _this.emit('end', {
            start: _this.startupDate,
            end: new Date,
            uptime: _this.uptime()
          });
        };
      })(this), 10);
      return ender();
    }
  };

  Network.prototype.load = function(component, metadata, callback) {
    return this.loader.load(component, callback, metadata);
  };

  Network.prototype.addNode = function(node, callback) {
    var process;
    if (this.processes[node.id]) {
      if (callback) {
        callback(null, this.processes[node.id]);
      }
      return;
    }
    process = {
      id: node.id
    };
    if (!node.component) {
      this.processes[process.id] = process;
      if (callback) {
        callback(null, process);
      }
      return;
    }
    return this.load(node.component, node.metadata, (function(_this) {
      return function(err, instance) {
        var name, port, _ref, _ref1;
        if (err) {
          return callback(err);
        }
        instance.nodeId = node.id;
        process.component = instance;
        _ref = process.component.inPorts;
        for (name in _ref) {
          port = _ref[name];
          if (!port || typeof port === 'function' || !port.canAttach) {
            continue;
          }
          port.node = node.id;
          port.nodeInstance = instance;
          port.name = name;
        }
        _ref1 = process.component.outPorts;
        for (name in _ref1) {
          port = _ref1[name];
          if (!port || typeof port === 'function' || !port.canAttach) {
            continue;
          }
          port.node = node.id;
          port.nodeInstance = instance;
          port.name = name;
        }
        if (instance.isSubgraph()) {
          _this.subscribeSubgraph(process);
        }
        _this.subscribeNode(process);
        _this.processes[process.id] = process;
        if (callback) {
          return callback(null, process);
        }
      };
    })(this));
  };

  Network.prototype.removeNode = function(node, callback) {
    if (!this.processes[node.id]) {
      return callback(new Error("Node " + node.id + " not found"));
    }
    this.processes[node.id].component.shutdown();
    delete this.processes[node.id];
    if (callback) {
      return callback(null);
    }
  };

  Network.prototype.renameNode = function(oldId, newId, callback) {
    var name, port, process, _ref, _ref1;
    process = this.getNode(oldId);
    if (!process) {
      return callback(new Error("Process " + oldId + " not found"));
    }
    process.id = newId;
    _ref = process.component.inPorts;
    for (name in _ref) {
      port = _ref[name];
      port.node = newId;
    }
    _ref1 = process.component.outPorts;
    for (name in _ref1) {
      port = _ref1[name];
      port.node = newId;
    }
    this.processes[newId] = process;
    delete this.processes[oldId];
    if (callback) {
      return callback(null);
    }
  };

  Network.prototype.getNode = function(id) {
    return this.processes[id];
  };

  Network.prototype.connect = function(done) {
    var callStack, edges, initializers, nodes, serialize, setDefaults, subscribeGraph;
    if (done == null) {
      done = function() {};
    }
    callStack = 0;
    serialize = (function(_this) {
      return function(next, add) {
        return function(type) {
          return _this["add" + type](add, function() {
            callStack++;
            if (callStack % 100 === 0) {
              setTimeout(function() {
                return next(type);
              }, 0);
              return;
            }
            return next(type);
          });
        };
      };
    })(this);
    subscribeGraph = (function(_this) {
      return function() {
        _this.subscribeGraph();
        return done();
      };
    })(this);
    setDefaults = _.reduceRight(this.graph.nodes, serialize, subscribeGraph);
    initializers = _.reduceRight(this.graph.initializers, serialize, function() {
      return setDefaults("Defaults");
    });
    edges = _.reduceRight(this.graph.edges, serialize, function() {
      return initializers("Initial");
    });
    nodes = _.reduceRight(this.graph.nodes, serialize, function() {
      return edges("Edge");
    });
    return nodes("Node");
  };

  Network.prototype.connectPort = function(socket, process, port, index, inbound) {
    if (inbound) {
      socket.to = {
        process: process,
        port: port,
        index: index
      };
      if (!(process.component.inPorts && process.component.inPorts[port])) {
        throw new Error("No inport '" + port + "' defined in process " + process.id + " (" + (socket.getId()) + ")");
        return;
      }
      if (process.component.inPorts[port].isAddressable()) {
        return process.component.inPorts[port].attach(socket, index);
      }
      return process.component.inPorts[port].attach(socket);
    }
    socket.from = {
      process: process,
      port: port,
      index: index
    };
    if (!(process.component.outPorts && process.component.outPorts[port])) {
      throw new Error("No outport '" + port + "' defined in process " + process.id + " (" + (socket.getId()) + ")");
      return;
    }
    if (process.component.outPorts[port].isAddressable()) {
      return process.component.outPorts[port].attach(socket, index);
    }
    return process.component.outPorts[port].attach(socket);
  };

  Network.prototype.subscribeGraph = function() {
    var graphOps, processOps, processing, registerOp;
    graphOps = [];
    processing = false;
    registerOp = function(op, details) {
      return graphOps.push({
        op: op,
        details: details
      });
    };
    processOps = (function(_this) {
      return function() {
        var cb, op;
        if (!graphOps.length) {
          processing = false;
          return;
        }
        processing = true;
        op = graphOps.shift();
        cb = processOps;
        switch (op.op) {
          case 'renameNode':
            return _this.renameNode(op.details.from, op.details.to, cb);
          default:
            return _this[op.op](op.details, cb);
        }
      };
    })(this);
    this.graph.on('addNode', (function(_this) {
      return function(node) {
        registerOp('addNode', node);
        if (!processing) {
          return processOps();
        }
      };
    })(this));
    this.graph.on('removeNode', (function(_this) {
      return function(node) {
        registerOp('removeNode', node);
        if (!processing) {
          return processOps();
        }
      };
    })(this));
    this.graph.on('renameNode', (function(_this) {
      return function(oldId, newId) {
        registerOp('renameNode', {
          from: oldId,
          to: newId
        });
        if (!processing) {
          return processOps();
        }
      };
    })(this));
    this.graph.on('addEdge', (function(_this) {
      return function(edge) {
        registerOp('addEdge', edge);
        if (!processing) {
          return processOps();
        }
      };
    })(this));
    this.graph.on('removeEdge', (function(_this) {
      return function(edge) {
        registerOp('removeEdge', edge);
        if (!processing) {
          return processOps();
        }
      };
    })(this));
    this.graph.on('addInitial', (function(_this) {
      return function(iip) {
        registerOp('addInitial', iip);
        if (!processing) {
          return processOps();
        }
      };
    })(this));
    return this.graph.on('removeInitial', (function(_this) {
      return function(iip) {
        registerOp('removeInitial', iip);
        if (!processing) {
          return processOps();
        }
      };
    })(this));
  };

  Network.prototype.subscribeSubgraph = function(node) {
    var emitSub;
    if (!node.component.isReady()) {
      node.component.once('ready', (function(_this) {
        return function() {
          return _this.subscribeSubgraph(node);
        };
      })(this));
      return;
    }
    if (!node.component.network) {
      return;
    }
    emitSub = (function(_this) {
      return function(type, data) {
        if (type === 'connect') {
          _this.increaseConnections();
        }
        if (type === 'disconnect') {
          _this.decreaseConnections();
        }
        if (!data) {
          data = {};
        }
        if (data.subgraph) {
          if (!data.subgraph.unshift) {
            data.subgraph = [data.subgraph];
          }
          data.subgraph = data.subgraph.unshift(node.id);
        } else {
          data.subgraph = [node.id];
        }
        return _this.emit(type, data);
      };
    })(this);
    node.component.network.on('connect', function(data) {
      return emitSub('connect', data);
    });
    node.component.network.on('begingroup', function(data) {
      return emitSub('begingroup', data);
    });
    node.component.network.on('data', function(data) {
      return emitSub('data', data);
    });
    node.component.network.on('endgroup', function(data) {
      return emitSub('endgroup', data);
    });
    node.component.network.on('disconnect', function(data) {
      return emitSub('disconnect', data);
    });
    return node.component.network.on('process-error', function(data) {
      return emitSub('process-error', data);
    });
  };

  Network.prototype.subscribeSocket = function(socket) {
    socket.on('connect', (function(_this) {
      return function() {
        _this.increaseConnections();
        return _this.emit('connect', {
          id: socket.getId(),
          socket: socket
        });
      };
    })(this));
    socket.on('begingroup', (function(_this) {
      return function(group) {
        return _this.emit('begingroup', {
          id: socket.getId(),
          socket: socket,
          group: group
        });
      };
    })(this));
    socket.on('data', (function(_this) {
      return function(data) {
        return _this.emit('data', {
          id: socket.getId(),
          socket: socket,
          data: data
        });
      };
    })(this));
    socket.on('endgroup', (function(_this) {
      return function(group) {
        return _this.emit('endgroup', {
          id: socket.getId(),
          socket: socket,
          group: group
        });
      };
    })(this));
    socket.on('disconnect', (function(_this) {
      return function() {
        _this.decreaseConnections();
        return _this.emit('disconnect', {
          id: socket.getId(),
          socket: socket
        });
      };
    })(this));
    return socket.on('error', (function(_this) {
      return function(event) {
        return _this.emit('process-error', event);
      };
    })(this));
  };

  Network.prototype.subscribeNode = function(node) {
    if (!node.component.getIcon) {
      return;
    }
    return node.component.on('icon', (function(_this) {
      return function() {
        return _this.emit('icon', {
          id: node.id,
          icon: node.component.getIcon()
        });
      };
    })(this));
  };

  Network.prototype.addEdge = function(edge, callback) {
    var from, socket, to;
    socket = internalSocket.createSocket();
    from = this.getNode(edge.from.node);
    if (!from) {
      throw new Error("No process defined for outbound node " + edge.from.node);
    }
    if (!from.component) {
      throw new Error("No component defined for outbound node " + edge.from.node);
    }
    if (!from.component.isReady()) {
      from.component.once("ready", (function(_this) {
        return function() {
          return _this.addEdge(edge, callback);
        };
      })(this));
      return;
    }
    to = this.getNode(edge.to.node);
    if (!to) {
      throw new Error("No process defined for inbound node " + edge.to.node);
    }
    if (!to.component) {
      throw new Error("No component defined for inbound node " + edge.to.node);
    }
    if (!to.component.isReady()) {
      to.component.once("ready", (function(_this) {
        return function() {
          return _this.addEdge(edge, callback);
        };
      })(this));
      return;
    }
    this.subscribeSocket(socket);
    this.connectPort(socket, to, edge.to.port, edge.to.index, true);
    this.connectPort(socket, from, edge.from.port, edge.from.index, false);
    this.connections.push(socket);
    if (callback) {
      return callback();
    }
  };

  Network.prototype.removeEdge = function(edge, callback) {
    var connection, _i, _len, _ref, _results;
    _ref = this.connections;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      connection = _ref[_i];
      if (!connection) {
        continue;
      }
      if (!(edge.to.node === connection.to.process.id && edge.to.port === connection.to.port)) {
        continue;
      }
      connection.to.process.component.inPorts[connection.to.port].detach(connection);
      if (edge.from.node) {
        if (connection.from && edge.from.node === connection.from.process.id && edge.from.port === connection.from.port) {
          connection.from.process.component.outPorts[connection.from.port].detach(connection);
        }
      }
      this.connections.splice(this.connections.indexOf(connection), 1);
      if (callback) {
        _results.push(callback());
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  Network.prototype.addDefaults = function(node, callback) {
    var key, port, process, socket, _ref;
    process = this.processes[node.id];
    if (!process.component.isReady()) {
      if (process.component.setMaxListeners) {
        process.component.setMaxListeners(0);
      }
      process.component.once("ready", (function(_this) {
        return function() {
          return _this.addDefaults(process, callback);
        };
      })(this));
      return;
    }
    _ref = process.component.inPorts.ports;
    for (key in _ref) {
      port = _ref[key];
      if (typeof port.hasDefault === 'function' && port.hasDefault() && !port.isAttached()) {
        socket = internalSocket.createSocket();
        this.subscribeSocket(socket);
        this.connectPort(socket, process, key, void 0, true);
        this.connections.push(socket);
        this.defaults.push(socket);
      }
    }
    if (callback) {
      return callback();
    }
  };

  Network.prototype.addInitial = function(initializer, callback) {
    var init, socket, to;
    socket = internalSocket.createSocket();
    this.subscribeSocket(socket);
    to = this.getNode(initializer.to.node);
    if (!to) {
      throw new Error("No process defined for inbound node " + initializer.to.node);
    }
    if (!(to.component.isReady() || to.component.inPorts[initializer.to.port])) {
      if (to.component.setMaxListeners) {
        to.component.setMaxListeners(0);
      }
      to.component.once("ready", (function(_this) {
        return function() {
          return _this.addInitial(initializer, callback);
        };
      })(this));
      return;
    }
    this.connectPort(socket, to, initializer.to.port, initializer.to.index, true);
    this.connections.push(socket);
    init = {
      socket: socket,
      data: initializer.from.data
    };
    this.initials.push(init);
    this.nextInitials.push(init);
    if (this.isStarted()) {
      this.sendInitials();
    }
    if (callback) {
      return callback();
    }
  };

  Network.prototype.removeInitial = function(initializer, callback) {
    var connection, init, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
    _ref = this.connections;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      connection = _ref[_i];
      if (!connection) {
        continue;
      }
      if (!(initializer.to.node === connection.to.process.id && initializer.to.port === connection.to.port)) {
        continue;
      }
      connection.to.process.component.inPorts[connection.to.port].detach(connection);
      this.connections.splice(this.connections.indexOf(connection), 1);
      _ref1 = this.initials;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        init = _ref1[_j];
        if (!init) {
          continue;
        }
        if (init.socket !== connection) {
          continue;
        }
        this.initials.splice(this.initials.indexOf(init), 1);
      }
      _ref2 = this.nextInitials;
      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
        init = _ref2[_k];
        if (!init) {
          continue;
        }
        if (init.socket !== connection) {
          continue;
        }
        this.nextInitials.splice(this.nextInitials.indexOf(init), 1);
      }
    }
    if (callback) {
      return callback();
    }
  };

  Network.prototype.sendInitial = function(initial) {
    initial.socket.connect();
    initial.socket.send(initial.data);
    return initial.socket.disconnect();
  };

  Network.prototype.sendInitials = function() {
    var send;
    send = (function(_this) {
      return function() {
        var initial, _i, _len, _ref;
        _ref = _this.initials;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          initial = _ref[_i];
          _this.sendInitial(initial);
        }
        return _this.initials = [];
      };
    })(this);
    if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {
      return process.nextTick(send);
    } else {
      return setTimeout(send, 0);
    }
  };

  Network.prototype.isStarted = function() {
    return this.started;
  };

  Network.prototype.isRunning = function() {
    if (!this.started) {
      return false;
    }
    return this.connectionCount > 0;
  };

  Network.prototype.startComponents = function() {
    var id, process, _ref, _results;
    _ref = this.processes;
    _results = [];
    for (id in _ref) {
      process = _ref[id];
      _results.push(process.component.start());
    }
    return _results;
  };

  Network.prototype.sendDefaults = function() {
    var socket, _i, _len, _ref, _results;
    _ref = this.defaults;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      socket = _ref[_i];
      if (socket.to.process.component.inPorts[socket.to.port].sockets.length !== 1) {
        continue;
      }
      socket.connect();
      socket.send();
      _results.push(socket.disconnect());
    }
    return _results;
  };

  Network.prototype.start = function() {
    if (this.started) {
      this.stop();
    }
    this.started = true;
    this.initials = this.nextInitials.slice(0);
    this.startComponents();
    this.sendInitials();
    return this.sendDefaults();
  };

  Network.prototype.stop = function() {
    var connection, id, process, _i, _len, _ref, _ref1;
    _ref = this.connections;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      connection = _ref[_i];
      if (!connection.isConnected()) {
        continue;
      }
      connection.disconnect();
    }
    _ref1 = this.processes;
    for (id in _ref1) {
      process = _ref1[id];
      process.component.shutdown();
    }
    return this.started = false;
  };

  Network.prototype.getDebug = function() {
    return this.debug;
  };

  Network.prototype.setDebug = function(active) {
    var instance, process, processId, socket, _i, _len, _ref, _ref1, _results;
    if (active === this.debug) {
      return;
    }
    this.debug = active;
    _ref = this.connections;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      socket = _ref[_i];
      socket.setDebug(active);
    }
    _ref1 = this.processes;
    _results = [];
    for (processId in _ref1) {
      process = _ref1[processId];
      instance = process.component;
      if (instance.isSubgraph()) {
        _results.push(instance.network.setDebug(active));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  return Network;

})(EventEmitter);

exports.Network = Network;

});
require.register("noflo-noflo/src/lib/Platform.js", function(exports, require, module){
exports.isBrowser = function() {
  if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {
    return false;
  }
  return true;
};

});
require.register("noflo-noflo/src/lib/Journal.js", function(exports, require, module){
var EventEmitter, Journal, JournalStore, MemoryJournalStore, calculateMeta, clone, entryToPrettyString,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

EventEmitter = require('events').EventEmitter;

clone = require('./Utils').clone;

entryToPrettyString = function(entry) {
  var a;
  a = entry.args;
  switch (entry.cmd) {
    case 'addNode':
      return "" + a.id + "(" + a.component + ")";
    case 'removeNode':
      return "DEL " + a.id + "(" + a.component + ")";
    case 'renameNode':
      return "RENAME " + a.oldId + " " + a.newId;
    case 'changeNode':
      return "META " + a.id;
    case 'addEdge':
      return "" + a.from.node + " " + a.from.port + " -> " + a.to.port + " " + a.to.node;
    case 'removeEdge':
      return "" + a.from.node + " " + a.from.port + " -X> " + a.to.port + " " + a.to.node;
    case 'changeEdge':
      return "META " + a.from.node + " " + a.from.port + " -> " + a.to.port + " " + a.to.node;
    case 'addInitial':
      return "'" + a.from.data + "' -> " + a.to.port + " " + a.to.node;
    case 'removeInitial':
      return "'" + a.from.data + "' -X> " + a.to.port + " " + a.to.node;
    case 'startTransaction':
      return ">>> " + entry.rev + ": " + a.id;
    case 'endTransaction':
      return "<<< " + entry.rev + ": " + a.id;
    case 'changeProperties':
      return "PROPERTIES";
    case 'addGroup':
      return "GROUP " + a.name;
    case 'renameGroup':
      return "RENAME GROUP " + a.oldName + " " + a.newName;
    case 'removeGroup':
      return "DEL GROUP " + a.name;
    case 'changeGroup':
      return "META GROUP " + a.name;
    case 'addInport':
      return "INPORT " + a.name;
    case 'removeInport':
      return "DEL INPORT " + a.name;
    case 'renameInport':
      return "RENAME INPORT " + a.oldId + " " + a.newId;
    case 'changeInport':
      return "META INPORT " + a.name;
    case 'addOutport':
      return "OUTPORT " + a.name;
    case 'removeOutport':
      return "DEL OUTPORT " + a.name;
    case 'renameOutport':
      return "RENAME OUTPORT " + a.oldId + " " + a.newId;
    case 'changeOutport':
      return "META OUTPORT " + a.name;
    default:
      throw new Error("Unknown journal entry: " + entry.cmd);
  }
};

calculateMeta = function(oldMeta, newMeta) {
  var k, setMeta, v;
  setMeta = {};
  for (k in oldMeta) {
    v = oldMeta[k];
    setMeta[k] = null;
  }
  for (k in newMeta) {
    v = newMeta[k];
    setMeta[k] = v;
  }
  return setMeta;
};

JournalStore = (function(_super) {
  __extends(JournalStore, _super);

  JournalStore.prototype.lastRevision = 0;

  function JournalStore(graph) {
    this.graph = graph;
    this.lastRevision = 0;
  }

  JournalStore.prototype.putTransaction = function(revId, entries) {
    if (revId > this.lastRevision) {
      this.lastRevision = revId;
    }
    return this.emit('transaction', revId);
  };

  JournalStore.prototype.fetchTransaction = function(revId, entries) {};

  return JournalStore;

})(EventEmitter);

MemoryJournalStore = (function(_super) {
  __extends(MemoryJournalStore, _super);

  function MemoryJournalStore(graph) {
    MemoryJournalStore.__super__.constructor.call(this, graph);
    this.transactions = [];
  }

  MemoryJournalStore.prototype.putTransaction = function(revId, entries) {
    MemoryJournalStore.__super__.putTransaction.call(this, revId, entries);
    return this.transactions[revId] = entries;
  };

  MemoryJournalStore.prototype.fetchTransaction = function(revId) {
    return this.transactions[revId];
  };

  return MemoryJournalStore;

})(JournalStore);

Journal = (function(_super) {
  __extends(Journal, _super);

  Journal.prototype.graph = null;

  Journal.prototype.entries = [];

  Journal.prototype.subscribed = true;

  function Journal(graph, metadata, store) {
    this.endTransaction = __bind(this.endTransaction, this);
    this.startTransaction = __bind(this.startTransaction, this);
    var edge, group, iip, k, node, v, _i, _j, _k, _l, _len, _len1, _len2, _len3, _ref, _ref1, _ref2, _ref3, _ref4, _ref5;
    this.graph = graph;
    this.entries = [];
    this.subscribed = true;
    this.store = store || new MemoryJournalStore(this.graph);
    if (this.store.transactions.length === 0) {
      this.currentRevision = -1;
      this.startTransaction('initial', metadata);
      _ref = this.graph.nodes;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        node = _ref[_i];
        this.appendCommand('addNode', node);
      }
      _ref1 = this.graph.edges;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        edge = _ref1[_j];
        this.appendCommand('addEdge', edge);
      }
      _ref2 = this.graph.initializers;
      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
        iip = _ref2[_k];
        this.appendCommand('addInitial', iip);
      }
      if (Object.keys(this.graph.properties).length > 0) {
        this.appendCommand('changeProperties', this.graph.properties, {});
      }
      _ref3 = this.graph.inports;
      for (k in _ref3) {
        v = _ref3[k];
        this.appendCommand('addInport', {
          name: k,
          port: v
        });
      }
      _ref4 = this.graph.outports;
      for (k in _ref4) {
        v = _ref4[k];
        this.appendCommand('addOutport', {
          name: k,
          port: v
        });
      }
      _ref5 = this.graph.groups;
      for (_l = 0, _len3 = _ref5.length; _l < _len3; _l++) {
        group = _ref5[_l];
        this.appendCommand('addGroup', group);
      }
      this.endTransaction('initial', metadata);
    } else {
      this.currentRevision = this.store.lastRevision;
    }
    this.graph.on('addNode', (function(_this) {
      return function(node) {
        return _this.appendCommand('addNode', node);
      };
    })(this));
    this.graph.on('removeNode', (function(_this) {
      return function(node) {
        return _this.appendCommand('removeNode', node);
      };
    })(this));
    this.graph.on('renameNode', (function(_this) {
      return function(oldId, newId) {
        var args;
        args = {
          oldId: oldId,
          newId: newId
        };
        return _this.appendCommand('renameNode', args);
      };
    })(this));
    this.graph.on('changeNode', (function(_this) {
      return function(node, oldMeta) {
        return _this.appendCommand('changeNode', {
          id: node.id,
          "new": node.metadata,
          old: oldMeta
        });
      };
    })(this));
    this.graph.on('addEdge', (function(_this) {
      return function(edge) {
        return _this.appendCommand('addEdge', edge);
      };
    })(this));
    this.graph.on('removeEdge', (function(_this) {
      return function(edge) {
        return _this.appendCommand('removeEdge', edge);
      };
    })(this));
    this.graph.on('changeEdge', (function(_this) {
      return function(edge, oldMeta) {
        return _this.appendCommand('changeEdge', {
          from: edge.from,
          to: edge.to,
          "new": edge.metadata,
          old: oldMeta
        });
      };
    })(this));
    this.graph.on('addInitial', (function(_this) {
      return function(iip) {
        return _this.appendCommand('addInitial', iip);
      };
    })(this));
    this.graph.on('removeInitial', (function(_this) {
      return function(iip) {
        return _this.appendCommand('removeInitial', iip);
      };
    })(this));
    this.graph.on('changeProperties', (function(_this) {
      return function(newProps, oldProps) {
        return _this.appendCommand('changeProperties', {
          "new": newProps,
          old: oldProps
        });
      };
    })(this));
    this.graph.on('addGroup', (function(_this) {
      return function(group) {
        return _this.appendCommand('addGroup', group);
      };
    })(this));
    this.graph.on('renameGroup', (function(_this) {
      return function(oldName, newName) {
        return _this.appendCommand('renameGroup', {
          oldName: oldName,
          newName: newName
        });
      };
    })(this));
    this.graph.on('removeGroup', (function(_this) {
      return function(group) {
        return _this.appendCommand('removeGroup', group);
      };
    })(this));
    this.graph.on('changeGroup', (function(_this) {
      return function(group, oldMeta) {
        return _this.appendCommand('changeGroup', {
          name: group.name,
          "new": group.metadata,
          old: oldMeta
        });
      };
    })(this));
    this.graph.on('addExport', (function(_this) {
      return function(exported) {
        return _this.appendCommand('addExport', exported);
      };
    })(this));
    this.graph.on('removeExport', (function(_this) {
      return function(exported) {
        return _this.appendCommand('removeExport', exported);
      };
    })(this));
    this.graph.on('addInport', (function(_this) {
      return function(name, port) {
        return _this.appendCommand('addInport', {
          name: name,
          port: port
        });
      };
    })(this));
    this.graph.on('removeInport', (function(_this) {
      return function(name, port) {
        return _this.appendCommand('removeInport', {
          name: name,
          port: port
        });
      };
    })(this));
    this.graph.on('renameInport', (function(_this) {
      return function(oldId, newId) {
        return _this.appendCommand('renameInport', {
          oldId: oldId,
          newId: newId
        });
      };
    })(this));
    this.graph.on('changeInport', (function(_this) {
      return function(name, port, oldMeta) {
        return _this.appendCommand('changeInport', {
          name: name,
          "new": port.metadata,
          old: oldMeta
        });
      };
    })(this));
    this.graph.on('addOutport', (function(_this) {
      return function(name, port) {
        return _this.appendCommand('addOutport', {
          name: name,
          port: port
        });
      };
    })(this));
    this.graph.on('removeOutport', (function(_this) {
      return function(name, port) {
        return _this.appendCommand('removeOutport', {
          name: name,
          port: port
        });
      };
    })(this));
    this.graph.on('renameOutport', (function(_this) {
      return function(oldId, newId) {
        return _this.appendCommand('renameOutport', {
          oldId: oldId,
          newId: newId
        });
      };
    })(this));
    this.graph.on('changeOutport', (function(_this) {
      return function(name, port, oldMeta) {
        return _this.appendCommand('changeOutport', {
          name: name,
          "new": port.metadata,
          old: oldMeta
        });
      };
    })(this));
    this.graph.on('startTransaction', (function(_this) {
      return function(id, meta) {
        return _this.startTransaction(id, meta);
      };
    })(this));
    this.graph.on('endTransaction', (function(_this) {
      return function(id, meta) {
        return _this.endTransaction(id, meta);
      };
    })(this));
  }

  Journal.prototype.startTransaction = function(id, meta) {
    if (!this.subscribed) {
      return;
    }
    if (this.entries.length > 0) {
      throw Error("Inconsistent @entries");
    }
    this.currentRevision++;
    return this.appendCommand('startTransaction', {
      id: id,
      metadata: meta
    }, this.currentRevision);
  };

  Journal.prototype.endTransaction = function(id, meta) {
    if (!this.subscribed) {
      return;
    }
    this.appendCommand('endTransaction', {
      id: id,
      metadata: meta
    }, this.currentRevision);
    this.store.putTransaction(this.currentRevision, this.entries);
    return this.entries = [];
  };

  Journal.prototype.appendCommand = function(cmd, args, rev) {
    var entry;
    if (!this.subscribed) {
      return;
    }
    entry = {
      cmd: cmd,
      args: clone(args)
    };
    if (rev != null) {
      entry.rev = rev;
    }
    return this.entries.push(entry);
  };

  Journal.prototype.executeEntry = function(entry) {
    var a;
    a = entry.args;
    switch (entry.cmd) {
      case 'addNode':
        return this.graph.addNode(a.id, a.component);
      case 'removeNode':
        return this.graph.removeNode(a.id);
      case 'renameNode':
        return this.graph.renameNode(a.oldId, a.newId);
      case 'changeNode':
        return this.graph.setNodeMetadata(a.id, calculateMeta(a.old, a["new"]));
      case 'addEdge':
        return this.graph.addEdge(a.from.node, a.from.port, a.to.node, a.to.port);
      case 'removeEdge':
        return this.graph.removeEdge(a.from.node, a.from.port, a.to.node, a.to.port);
      case 'changeEdge':
        return this.graph.setEdgeMetadata(a.from.node, a.from.port, a.to.node, a.to.port, calculateMeta(a.old, a["new"]));
      case 'addInitial':
        return this.graph.addInitial(a.from.data, a.to.node, a.to.port);
      case 'removeInitial':
        return this.graph.removeInitial(a.to.node, a.to.port);
      case 'startTransaction':
        return null;
      case 'endTransaction':
        return null;
      case 'changeProperties':
        return this.graph.setProperties(a["new"]);
      case 'addGroup':
        return this.graph.addGroup(a.name, a.nodes, a.metadata);
      case 'renameGroup':
        return this.graph.renameGroup(a.oldName, a.newName);
      case 'removeGroup':
        return this.graph.removeGroup(a.name);
      case 'changeGroup':
        return this.graph.setGroupMetadata(a.name, calculateMeta(a.old, a["new"]));
      case 'addInport':
        return this.graph.addInport(a.name, a.port.process, a.port.port, a.port.metadata);
      case 'removeInport':
        return this.graph.removeInport(a.name);
      case 'renameInport':
        return this.graph.renameInport(a.oldId, a.newId);
      case 'changeInport':
        return this.graph.setInportMetadata(a.port, calculateMeta(a.old, a["new"]));
      case 'addOutport':
        return this.graph.addOutport(a.name, a.port.process, a.port.port, a.port.metadata(a.name));
      case 'removeOutport':
        return this.graph.removeOutport;
      case 'renameOutport':
        return this.graph.renameOutport(a.oldId, a.newId);
      case 'changeOutport':
        return this.graph.setOutportMetadata(a.port, calculateMeta(a.old, a["new"]));
      default:
        throw new Error("Unknown journal entry: " + entry.cmd);
    }
  };

  Journal.prototype.executeEntryInversed = function(entry) {
    var a;
    a = entry.args;
    switch (entry.cmd) {
      case 'addNode':
        return this.graph.removeNode(a.id);
      case 'removeNode':
        return this.graph.addNode(a.id, a.component);
      case 'renameNode':
        return this.graph.renameNode(a.newId, a.oldId);
      case 'changeNode':
        return this.graph.setNodeMetadata(a.id, calculateMeta(a["new"], a.old));
      case 'addEdge':
        return this.graph.removeEdge(a.from.node, a.from.port, a.to.node, a.to.port);
      case 'removeEdge':
        return this.graph.addEdge(a.from.node, a.from.port, a.to.node, a.to.port);
      case 'changeEdge':
        return this.graph.setEdgeMetadata(a.from.node, a.from.port, a.to.node, a.to.port, calculateMeta(a["new"], a.old));
      case 'addInitial':
        return this.graph.removeInitial(a.to.node, a.to.port);
      case 'removeInitial':
        return this.graph.addInitial(a.from.data, a.to.node, a.to.port);
      case 'startTransaction':
        return null;
      case 'endTransaction':
        return null;
      case 'changeProperties':
        return this.graph.setProperties(a.old);
      case 'addGroup':
        return this.graph.removeGroup(a.name);
      case 'renameGroup':
        return this.graph.renameGroup(a.newName, a.oldName);
      case 'removeGroup':
        return this.graph.addGroup(a.name, a.nodes, a.metadata);
      case 'changeGroup':
        return this.graph.setGroupMetadata(a.name, calculateMeta(a["new"], a.old));
      case 'addInport':
        return this.graph.removeInport(a.name);
      case 'removeInport':
        return this.graph.addInport(a.name, a.port.process, a.port.port, a.port.metadata);
      case 'renameInport':
        return this.graph.renameInport(a.newId, a.oldId);
      case 'changeInport':
        return this.graph.setInportMetadata(a.port, calculateMeta(a["new"], a.old));
      case 'addOutport':
        return this.graph.removeOutport(a.name);
      case 'removeOutport':
        return this.graph.addOutport(a.name, a.port.process, a.port.port, a.port.metadata);
      case 'renameOutport':
        return this.graph.renameOutport(a.newId, a.oldId);
      case 'changeOutport':
        return this.graph.setOutportMetadata(a.port, calculateMeta(a["new"], a.old));
      default:
        throw new Error("Unknown journal entry: " + entry.cmd);
    }
  };

  Journal.prototype.moveToRevision = function(revId) {
    var entries, entry, i, r, _i, _j, _k, _l, _len, _ref, _ref1, _ref2, _ref3, _ref4;
    if (revId === this.currentRevision) {
      return;
    }
    this.subscribed = false;
    if (revId > this.currentRevision) {
      for (r = _i = _ref = this.currentRevision + 1; _ref <= revId ? _i <= revId : _i >= revId; r = _ref <= revId ? ++_i : --_i) {
        _ref1 = this.store.fetchTransaction(r);
        for (_j = 0, _len = _ref1.length; _j < _len; _j++) {
          entry = _ref1[_j];
          this.executeEntry(entry);
        }
      }
    } else {
      for (r = _k = _ref2 = this.currentRevision, _ref3 = revId + 1; _k >= _ref3; r = _k += -1) {
        entries = this.store.fetchTransaction(r);
        for (i = _l = _ref4 = entries.length - 1; _l >= 0; i = _l += -1) {
          this.executeEntryInversed(entries[i]);
        }
      }
    }
    this.currentRevision = revId;
    return this.subscribed = true;
  };

  Journal.prototype.undo = function() {
    if (!this.canUndo()) {
      return;
    }
    return this.moveToRevision(this.currentRevision - 1);
  };

  Journal.prototype.canUndo = function() {
    return this.currentRevision > 0;
  };

  Journal.prototype.redo = function() {
    if (!this.canRedo()) {
      return;
    }
    return this.moveToRevision(this.currentRevision + 1);
  };

  Journal.prototype.canRedo = function() {
    return this.currentRevision < this.store.lastRevision;
  };

  Journal.prototype.toPrettyString = function(startRev, endRev) {
    var e, entry, lines, r, _i, _j, _len;
    startRev |= 0;
    endRev |= this.store.lastRevision;
    lines = [];
    for (r = _i = startRev; startRev <= endRev ? _i < endRev : _i > endRev; r = startRev <= endRev ? ++_i : --_i) {
      e = this.store.fetchTransaction(r);
      for (_j = 0, _len = e.length; _j < _len; _j++) {
        entry = e[_j];
        lines.push(entryToPrettyString(entry));
      }
    }
    return lines.join('\n');
  };

  Journal.prototype.toJSON = function(startRev, endRev) {
    var entries, entry, r, _i, _j, _len, _ref;
    startRev |= 0;
    endRev |= this.store.lastRevision;
    entries = [];
    for (r = _i = startRev; _i < endRev; r = _i += 1) {
      _ref = this.store.fetchTransaction(r);
      for (_j = 0, _len = _ref.length; _j < _len; _j++) {
        entry = _ref[_j];
        entries.push(entryToPrettyString(entry));
      }
    }
    return entries;
  };

  Journal.prototype.save = function(file, success) {
    var json;
    json = JSON.stringify(this.toJSON(), null, 4);
    return require('fs').writeFile("" + file + ".json", json, "utf-8", function(err, data) {
      if (err) {
        throw err;
      }
      return success(file);
    });
  };

  return Journal;

})(EventEmitter);

exports.Journal = Journal;

exports.JournalStore = JournalStore;

exports.MemoryJournalStore = MemoryJournalStore;

});
require.register("noflo-noflo/src/lib/Utils.js", function(exports, require, module){
var clone, guessLanguageFromFilename;

clone = function(obj) {
  var flags, key, newInstance;
  if ((obj == null) || typeof obj !== 'object') {
    return obj;
  }
  if (obj instanceof Date) {
    return new Date(obj.getTime());
  }
  if (obj instanceof RegExp) {
    flags = '';
    if (obj.global != null) {
      flags += 'g';
    }
    if (obj.ignoreCase != null) {
      flags += 'i';
    }
    if (obj.multiline != null) {
      flags += 'm';
    }
    if (obj.sticky != null) {
      flags += 'y';
    }
    return new RegExp(obj.source, flags);
  }
  newInstance = new obj.constructor();
  for (key in obj) {
    newInstance[key] = clone(obj[key]);
  }
  return newInstance;
};

guessLanguageFromFilename = function(filename) {
  if (/.*\.coffee$/.test(filename)) {
    return 'coffeescript';
  }
  return 'javascript';
};

exports.clone = clone;

exports.guessLanguageFromFilename = guessLanguageFromFilename;

});
require.register("noflo-noflo/src/lib/Helpers.js", function(exports, require, module){
var InternalSocket, StreamReceiver, StreamSender, isArray, _,
  __hasProp = {}.hasOwnProperty;

_ = require('underscore');

StreamSender = require('./Streams').StreamSender;

StreamReceiver = require('./Streams').StreamReceiver;

InternalSocket = require('./InternalSocket');

isArray = function(obj) {
  if (Array.isArray) {
    return Array.isArray(obj);
  }
  return Object.prototype.toString.call(arg) === '[object Array]';
};

exports.MapComponent = function(component, func, config) {
  var groups, inPort, outPort;
  if (!config) {
    config = {};
  }
  if (!config.inPort) {
    config.inPort = 'in';
  }
  if (!config.outPort) {
    config.outPort = 'out';
  }
  inPort = component.inPorts[config.inPort];
  outPort = component.outPorts[config.outPort];
  groups = [];
  return inPort.process = function(event, payload) {
    switch (event) {
      case 'connect':
        return outPort.connect();
      case 'begingroup':
        groups.push(payload);
        return outPort.beginGroup(payload);
      case 'data':
        return func(payload, groups, outPort);
      case 'endgroup':
        groups.pop();
        return outPort.endGroup();
      case 'disconnect':
        groups = [];
        return outPort.disconnect();
    }
  };
};

exports.WirePattern = function(component, config, proc) {
  var baseShutdown, closeGroupOnOuts, collectGroups, disconnectOuts, gc, inPorts, name, outPorts, port, processQueue, resumeTaskQ, sendGroupToOuts, _fn, _fn1, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref, _ref1;
  inPorts = 'in' in config ? config["in"] : 'in';
  if (!isArray(inPorts)) {
    inPorts = [inPorts];
  }
  outPorts = 'out' in config ? config.out : 'out';
  if (!isArray(outPorts)) {
    outPorts = [outPorts];
  }
  if (!('error' in config)) {
    config.error = 'error';
  }
  if (!('async' in config)) {
    config.async = false;
  }
  if (!('ordered' in config)) {
    config.ordered = true;
  }
  if (!('group' in config)) {
    config.group = false;
  }
  if (!('field' in config)) {
    config.field = null;
  }
  if (!('forwardGroups' in config)) {
    config.forwardGroups = false;
  }
  if (!('receiveStreams' in config)) {
    config.receiveStreams = false;
  }
  if (typeof config.receiveStreams === 'string') {
    config.receiveStreams = [config.receiveStreams];
  }
  if (!('sendStreams' in config)) {
    config.sendStreams = false;
  }
  if (typeof config.sendStreams === 'string') {
    config.sendStreams = [config.sendStreams];
  }
  if (config.async) {
    config.sendStreams = outPorts;
  }
  if (!('params' in config)) {
    config.params = [];
  }
  if (typeof config.params === 'string') {
    config.params = [config.params];
  }
  if (!('name' in config)) {
    config.name = '';
  }
  if (!('dropInput' in config)) {
    config.dropInput = false;
  }
  if (!('arrayPolicy' in config)) {
    config.arrayPolicy = {
      "in": 'any',
      params: 'all'
    };
  }
  if (!('gcFrequency' in config)) {
    config.gcFrequency = 100;
  }
  if (!('gcTimeout' in config)) {
    config.gcTimeout = 300;
  }
  collectGroups = config.forwardGroups;
  if (typeof collectGroups === 'boolean' && !config.group) {
    collectGroups = inPorts;
  }
  if (typeof collectGroups === 'string' && !config.group) {
    collectGroups = [collectGroups];
  }
  if (collectGroups !== false && config.group) {
    collectGroups = true;
  }
  for (_i = 0, _len = inPorts.length; _i < _len; _i++) {
    name = inPorts[_i];
    if (!component.inPorts[name]) {
      throw new Error("no inPort named '" + name + "'");
    }
  }
  for (_j = 0, _len1 = outPorts.length; _j < _len1; _j++) {
    name = outPorts[_j];
    if (!component.outPorts[name]) {
      throw new Error("no outPort named '" + name + "'");
    }
  }
  component.groupedData = {};
  component.groupedGroups = {};
  component.groupedDisconnects = {};
  disconnectOuts = function() {
    var p, _k, _len2, _results;
    _results = [];
    for (_k = 0, _len2 = outPorts.length; _k < _len2; _k++) {
      p = outPorts[_k];
      if (component.outPorts[p].isConnected()) {
        _results.push(component.outPorts[p].disconnect());
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };
  sendGroupToOuts = function(grp) {
    var p, _k, _len2, _results;
    _results = [];
    for (_k = 0, _len2 = outPorts.length; _k < _len2; _k++) {
      p = outPorts[_k];
      _results.push(component.outPorts[p].beginGroup(grp));
    }
    return _results;
  };
  closeGroupOnOuts = function(grp) {
    var p, _k, _len2, _results;
    _results = [];
    for (_k = 0, _len2 = outPorts.length; _k < _len2; _k++) {
      p = outPorts[_k];
      _results.push(component.outPorts[p].endGroup(grp));
    }
    return _results;
  };
  component.outputQ = [];
  processQueue = function() {
    var flushed, key, stream, streams, tmp;
    while (component.outputQ.length > 0) {
      streams = component.outputQ[0];
      flushed = false;
      if (streams === null) {
        disconnectOuts();
        flushed = true;
      } else {
        if (outPorts.length === 1) {
          tmp = {};
          tmp[outPorts[0]] = streams;
          streams = tmp;
        }
        for (key in streams) {
          stream = streams[key];
          if (stream.resolved) {
            stream.flush();
            flushed = true;
          }
        }
      }
      if (flushed) {
        component.outputQ.shift();
      }
      if (!flushed) {
        return;
      }
    }
  };
  if (config.async) {
    if ('load' in component.outPorts) {
      component.load = 0;
    }
    component.beforeProcess = function(outs) {
      if (config.ordered) {
        component.outputQ.push(outs);
      }
      component.load++;
      if ('load' in component.outPorts && component.outPorts.load.isAttached()) {
        component.outPorts.load.send(component.load);
        return component.outPorts.load.disconnect();
      }
    };
    component.afterProcess = function(err, outs) {
      processQueue();
      component.load--;
      if ('load' in component.outPorts && component.outPorts.load.isAttached()) {
        component.outPorts.load.send(component.load);
        return component.outPorts.load.disconnect();
      }
    };
  }
  component.taskQ = [];
  component.params = {};
  component.requiredParams = [];
  component.completeParams = [];
  component.receivedParams = [];
  component.defaultedParams = [];
  component.defaultsSent = false;
  component.sendDefaults = function() {
    var param, tempSocket, _k, _len2, _ref;
    if (component.defaultedParams.length > 0) {
      _ref = component.defaultedParams;
      for (_k = 0, _len2 = _ref.length; _k < _len2; _k++) {
        param = _ref[_k];
        if (component.receivedParams.indexOf(param) === -1) {
          tempSocket = InternalSocket.createSocket();
          component.inPorts[param].attach(tempSocket);
          tempSocket.send();
          tempSocket.disconnect();
          component.inPorts[param].detach(tempSocket);
        }
      }
    }
    return component.defaultsSent = true;
  };
  resumeTaskQ = function() {
    var task, temp, _results;
    if (component.completeParams.length === component.requiredParams.length && component.taskQ.length > 0) {
      temp = component.taskQ.slice(0);
      component.taskQ = [];
      _results = [];
      while (temp.length > 0) {
        task = temp.shift();
        _results.push(task());
      }
      return _results;
    }
  };
  _ref = config.params;
  for (_k = 0, _len2 = _ref.length; _k < _len2; _k++) {
    port = _ref[_k];
    if (!component.inPorts[port]) {
      throw new Error("no inPort named '" + port + "'");
    }
    if (component.inPorts[port].isRequired()) {
      component.requiredParams.push(port);
    }
    if (component.inPorts[port].hasDefault()) {
      component.defaultedParams.push(port);
    }
  }
  _ref1 = config.params;
  _fn = function(port) {
    var inPort;
    inPort = component.inPorts[port];
    return inPort.process = function(event, payload, index) {
      if (event !== 'data') {
        return;
      }
      if (inPort.isAddressable()) {
        if (!(port in component.params)) {
          component.params[port] = {};
        }
        component.params[port][index] = payload;
        if (config.arrayPolicy.params === 'all' && Object.keys(component.params[port]).length < inPort.listAttached().length) {
          return;
        }
      } else {
        component.params[port] = payload;
      }
      if (component.completeParams.indexOf(port) === -1 && component.requiredParams.indexOf(port) > -1) {
        component.completeParams.push(port);
      }
      component.receivedParams.push(port);
      return resumeTaskQ();
    };
  };
  for (_l = 0, _len3 = _ref1.length; _l < _len3; _l++) {
    port = _ref1[_l];
    _fn(port);
  }
  component.disconnectData = {};
  component.disconnectQ = [];
  component.groupBuffers = {};
  component.keyBuffers = {};
  component.gcTimestamps = {};
  component.dropRequest = function(key) {
    if (key in component.disconnectData) {
      delete component.disconnectData[key];
    }
    if (key in component.groupedData) {
      delete component.groupedData[key];
    }
    if (key in component.groupedGroups) {
      return delete component.groupedGroups[key];
    }
  };
  component.gcCounter = 0;
  gc = function() {
    var current, key, val, _ref2, _results;
    component.gcCounter++;
    if (component.gcCounter % config.gcFrequency === 0) {
      current = new Date().getTime();
      _ref2 = component.gcTimestamps;
      _results = [];
      for (key in _ref2) {
        val = _ref2[key];
        if ((current - val) > (config.gcTimeout * 1000)) {
          component.dropRequest(key);
          _results.push(delete component.gcTimestamps[key]);
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    }
  };
  _fn1 = function(port) {
    var inPort, needPortGroups;
    component.groupBuffers[port] = [];
    component.keyBuffers[port] = null;
    if (config.receiveStreams && config.receiveStreams.indexOf(port) !== -1) {
      inPort = new StreamReceiver(component.inPorts[port]);
    } else {
      inPort = component.inPorts[port];
    }
    needPortGroups = collectGroups instanceof Array && collectGroups.indexOf(port) !== -1;
    return inPort.process = function(event, payload, index) {
      var data, foundGroup, g, groupLength, groups, grp, i, key, obj, out, outs, postpone, postponedToQ, reqId, requiredLength, resume, task, tmp, whenDone, whenDoneGroups, _len5, _len6, _len7, _len8, _n, _o, _p, _q, _r, _ref2, _ref3, _ref4, _s;
      if (!component.groupBuffers[port]) {
        component.groupBuffers[port] = [];
      }
      switch (event) {
        case 'begingroup':
          component.groupBuffers[port].push(payload);
          if (config.forwardGroups && (collectGroups === true || needPortGroups) && !config.async) {
            return sendGroupToOuts(payload);
          }
          break;
        case 'endgroup':
          component.groupBuffers[port] = component.groupBuffers[port].slice(0, component.groupBuffers[port].length - 1);
          if (config.forwardGroups && (collectGroups === true || needPortGroups) && !config.async) {
            return closeGroupOnOuts(payload);
          }
          break;
        case 'disconnect':
          if (inPorts.length === 1) {
            if (config.async || config.StreamSender) {
              if (config.ordered) {
                component.outputQ.push(null);
                return processQueue();
              } else {
                return component.disconnectQ.push(true);
              }
            } else {
              return disconnectOuts();
            }
          } else {
            foundGroup = false;
            key = component.keyBuffers[port];
            if (!(key in component.disconnectData)) {
              component.disconnectData[key] = [];
            }
            for (i = _n = 0, _ref2 = component.disconnectData[key].length; 0 <= _ref2 ? _n < _ref2 : _n > _ref2; i = 0 <= _ref2 ? ++_n : --_n) {
              if (!(port in component.disconnectData[key][i])) {
                foundGroup = true;
                component.disconnectData[key][i][port] = true;
                if (Object.keys(component.disconnectData[key][i]).length === inPorts.length) {
                  component.disconnectData[key].shift();
                  if (config.async || config.StreamSender) {
                    if (config.ordered) {
                      component.outputQ.push(null);
                      processQueue();
                    } else {
                      component.disconnectQ.push(true);
                    }
                  } else {
                    disconnectOuts();
                  }
                  if (component.disconnectData[key].length === 0) {
                    delete component.disconnectData[key];
                  }
                }
                break;
              }
            }
            if (!foundGroup) {
              obj = {};
              obj[port] = true;
              return component.disconnectData[key].push(obj);
            }
          }
          break;
        case 'data':
          if (inPorts.length === 1) {
            if (inPort.isAddressable()) {
              data = {};
              data[index] = payload;
            } else {
              data = payload;
            }
            groups = component.groupBuffers[port];
          } else {
            key = '';
            if (config.group && component.groupBuffers[port].length > 0) {
              key = component.groupBuffers[port].toString();
              if (config.group instanceof RegExp) {
                reqId = null;
                _ref3 = component.groupBuffers[port];
                for (_o = 0, _len5 = _ref3.length; _o < _len5; _o++) {
                  grp = _ref3[_o];
                  if (config.group.test(grp)) {
                    reqId = grp;
                    break;
                  }
                }
                key = reqId ? reqId : '';
              }
            } else if (config.field && typeof payload === 'object' && config.field in payload) {
              key = payload[config.field];
            }
            component.keyBuffers[port] = key;
            if (!(key in component.groupedData)) {
              component.groupedData[key] = [];
            }
            if (!(key in component.groupedGroups)) {
              component.groupedGroups[key] = [];
            }
            foundGroup = false;
            requiredLength = inPorts.length;
            if (config.field) {
              ++requiredLength;
            }
            for (i = _p = 0, _ref4 = component.groupedData[key].length; 0 <= _ref4 ? _p < _ref4 : _p > _ref4; i = 0 <= _ref4 ? ++_p : --_p) {
              if (!(port in component.groupedData[key][i]) || (component.inPorts[port].isAddressable() && config.arrayPolicy["in"] === 'all' && !(index in component.groupedData[key][i][port]))) {
                foundGroup = true;
                if (component.inPorts[port].isAddressable()) {
                  if (!(port in component.groupedData[key][i])) {
                    component.groupedData[key][i][port] = {};
                  }
                  component.groupedData[key][i][port][index] = payload;
                } else {
                  component.groupedData[key][i][port] = payload;
                }
                if (needPortGroups) {
                  component.groupedGroups[key][i] = _.union(component.groupedGroups[key][i], component.groupBuffers[port]);
                } else if (collectGroups === true) {
                  component.groupedGroups[key][i][port] = component.groupBuffers[port];
                }
                if (component.inPorts[port].isAddressable() && config.arrayPolicy["in"] === 'all' && Object.keys(component.groupedData[key][i][port]).length < component.inPorts[port].listAttached().length) {
                  return;
                }
                groupLength = Object.keys(component.groupedData[key][i]).length;
                if (groupLength === requiredLength) {
                  data = (component.groupedData[key].splice(i, 1))[0];
                  groups = (component.groupedGroups[key].splice(i, 1))[0];
                  if (collectGroups === true) {
                    groups = _.intersection.apply(null, _.values(groups));
                  }
                  if (component.groupedData[key].length === 0) {
                    delete component.groupedData[key];
                  }
                  if (component.groupedGroups[key].length === 0) {
                    delete component.groupedGroups[key];
                  }
                  if (config.group && key) {
                    delete component.gcTimestamps[key];
                  }
                  break;
                } else {
                  return;
                }
              }
            }
            if (!foundGroup) {
              obj = {};
              if (config.field) {
                obj[config.field] = key;
              }
              obj[port] = payload;
              component.groupedData[key].push(obj);
              if (needPortGroups) {
                component.groupedGroups[key].push(component.groupBuffers[port]);
              } else if (collectGroups === true) {
                tmp = {};
                tmp[port] = component.groupBuffers[port];
                component.groupedGroups[key].push(tmp);
              } else {
                component.groupedGroups[key].push([]);
              }
              if (config.group && key) {
                component.gcTimestamps[key] = new Date().getTime();
              }
              return;
            }
          }
          if (config.dropInput && component.completeParams.length !== component.requiredParams.length) {
            return;
          }
          outs = {};
          for (_q = 0, _len6 = outPorts.length; _q < _len6; _q++) {
            name = outPorts[_q];
            if (config.async || config.sendStreams && config.sendStreams.indexOf(name) !== -1) {
              outs[name] = new StreamSender(component.outPorts[name], config.ordered);
            } else {
              outs[name] = component.outPorts[name];
            }
          }
          if (outPorts.length === 1) {
            outs = outs[outPorts[0]];
          }
          if (!groups) {
            groups = [];
          }
          whenDoneGroups = groups.slice(0);
          whenDone = function(err) {
            var disconnect, out, outputs, _len7, _r;
            if (err) {
              component.error(err, whenDoneGroups);
            }
            if (typeof component.fail === 'function' && component.hasErrors) {
              component.fail();
            }
            outputs = outPorts.length === 1 ? {
              port: outs
            } : outs;
            disconnect = false;
            if (component.disconnectQ.length > 0) {
              component.disconnectQ.shift();
              disconnect = true;
            }
            for (name in outputs) {
              out = outputs[name];
              if (config.forwardGroups && config.async) {
                for (_r = 0, _len7 = whenDoneGroups.length; _r < _len7; _r++) {
                  i = whenDoneGroups[_r];
                  out.endGroup();
                }
              }
              if (disconnect) {
                out.disconnect();
              }
              if (config.async || config.StreamSender) {
                out.done();
              }
            }
            if (typeof component.afterProcess === 'function') {
              return component.afterProcess(err || component.hasErrors, outs);
            }
          };
          if (typeof component.beforeProcess === 'function') {
            component.beforeProcess(outs);
          }
          if (config.forwardGroups && config.async) {
            if (outPorts.length === 1) {
              for (_r = 0, _len7 = groups.length; _r < _len7; _r++) {
                g = groups[_r];
                outs.beginGroup(g);
              }
            } else {
              for (name in outs) {
                out = outs[name];
                for (_s = 0, _len8 = groups.length; _s < _len8; _s++) {
                  g = groups[_s];
                  out.beginGroup(g);
                }
              }
            }
          }
          exports.MultiError(component, config.name, config.error, groups);
          if (config.async) {
            postpone = function() {};
            resume = function() {};
            postponedToQ = false;
            task = function() {
              return proc.call(component, data, groups, outs, whenDone, postpone, resume);
            };
            postpone = function(backToQueue) {
              if (backToQueue == null) {
                backToQueue = true;
              }
              postponedToQ = backToQueue;
              if (backToQueue) {
                return component.taskQ.push(task);
              }
            };
            resume = function() {
              if (postponedToQ) {
                return resumeTaskQ();
              } else {
                return task();
              }
            };
          } else {
            task = function() {
              proc.call(component, data, groups, outs);
              return whenDone();
            };
          }
          component.taskQ.push(task);
          resumeTaskQ();
          return gc();
      }
    };
  };
  for (_m = 0, _len4 = inPorts.length; _m < _len4; _m++) {
    port = inPorts[_m];
    _fn1(port);
  }
  baseShutdown = component.shutdown;
  component.shutdown = function() {
    baseShutdown.call(component);
    component.groupedData = {};
    component.groupedGroups = {};
    component.outputQ = [];
    component.disconnectData = {};
    component.disconnectQ = [];
    component.taskQ = [];
    component.params = {};
    component.completeParams = [];
    component.receivedParams = [];
    component.defaultsSent = false;
    component.groupBuffers = {};
    component.keyBuffers = {};
    component.gcTimestamps = {};
    return component.gcCounter = 0;
  };
  return component;
};

exports.GroupedInput = exports.WirePattern;

exports.CustomError = function(message, options) {
  var err;
  err = new Error(message);
  return exports.CustomizeError(err, options);
};

exports.CustomizeError = function(err, options) {
  var key, val;
  for (key in options) {
    if (!__hasProp.call(options, key)) continue;
    val = options[key];
    err[key] = val;
  }
  return err;
};

exports.MultiError = function(component, group, errorPort, forwardedGroups) {
  var baseShutdown;
  if (group == null) {
    group = '';
  }
  if (errorPort == null) {
    errorPort = 'error';
  }
  if (forwardedGroups == null) {
    forwardedGroups = [];
  }
  component.hasErrors = false;
  component.errors = [];
  component.error = function(e, groups) {
    if (groups == null) {
      groups = [];
    }
    component.errors.push({
      err: e,
      groups: forwardedGroups.concat(groups)
    });
    return component.hasErrors = true;
  };
  component.fail = function(e, groups) {
    var error, grp, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
    if (e == null) {
      e = null;
    }
    if (groups == null) {
      groups = [];
    }
    if (e) {
      component.error(e, groups);
    }
    if (!component.hasErrors) {
      return;
    }
    if (!(errorPort in component.outPorts)) {
      return;
    }
    if (!component.outPorts[errorPort].isAttached()) {
      return;
    }
    if (group) {
      component.outPorts[errorPort].beginGroup(group);
    }
    _ref = component.errors;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      error = _ref[_i];
      _ref1 = error.groups;
      for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
        grp = _ref1[_j];
        component.outPorts[errorPort].beginGroup(grp);
      }
      component.outPorts[errorPort].send(error.err);
      _ref2 = error.groups;
      for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
        grp = _ref2[_k];
        component.outPorts[errorPort].endGroup();
      }
    }
    if (group) {
      component.outPorts[errorPort].endGroup();
    }
    component.outPorts[errorPort].disconnect();
    component.hasErrors = false;
    return component.errors = [];
  };
  baseShutdown = component.shutdown;
  component.shutdown = function() {
    baseShutdown.call(component);
    component.hasErrors = false;
    return component.errors = [];
  };
  return component;
};

});
require.register("noflo-noflo/src/lib/Streams.js", function(exports, require, module){
var IP, StreamReceiver, StreamSender, Substream;

IP = (function() {
  function IP(data) {
    this.data = data;
  }

  IP.prototype.sendTo = function(port) {
    return port.send(this.data);
  };

  IP.prototype.getValue = function() {
    return this.data;
  };

  IP.prototype.toObject = function() {
    return this.data;
  };

  return IP;

})();

exports.IP = IP;

Substream = (function() {
  function Substream(key) {
    this.key = key;
    this.value = [];
  }

  Substream.prototype.push = function(value) {
    return this.value.push(value);
  };

  Substream.prototype.sendTo = function(port) {
    var ip, _i, _len, _ref;
    port.beginGroup(this.key);
    _ref = this.value;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      ip = _ref[_i];
      if (ip instanceof Substream || ip instanceof IP) {
        ip.sendTo(port);
      } else {
        port.send(ip);
      }
    }
    return port.endGroup();
  };

  Substream.prototype.getKey = function() {
    return this.key;
  };

  Substream.prototype.getValue = function() {
    var hasKeys, ip, obj, res, val, _i, _len, _ref;
    switch (this.value.length) {
      case 0:
        return null;
      case 1:
        if (typeof this.value[0].getValue === 'function') {
          if (this.value[0] instanceof Substream) {
            obj = {};
            obj[this.value[0].key] = this.value[0].getValue();
            return obj;
          } else {
            return this.value[0].getValue();
          }
        } else {
          return this.value[0];
        }
        break;
      default:
        res = [];
        hasKeys = false;
        _ref = this.value;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          ip = _ref[_i];
          val = typeof ip.getValue === 'function' ? ip.getValue() : ip;
          if (ip instanceof Substream) {
            obj = {};
            obj[ip.key] = ip.getValue();
            res.push(obj);
          } else {
            res.push(val);
          }
        }
        return res;
    }
  };

  Substream.prototype.toObject = function() {
    var obj;
    obj = {};
    obj[this.key] = this.getValue();
    return obj;
  };

  return Substream;

})();

exports.Substream = Substream;

StreamSender = (function() {
  function StreamSender(port, ordered) {
    this.port = port;
    this.ordered = ordered != null ? ordered : false;
    this.q = [];
    this.resetCurrent();
    this.resolved = false;
  }

  StreamSender.prototype.resetCurrent = function() {
    this.level = 0;
    this.current = null;
    return this.stack = [];
  };

  StreamSender.prototype.beginGroup = function(group) {
    var stream;
    this.level++;
    stream = new Substream(group);
    this.stack.push(stream);
    this.current = stream;
    return this;
  };

  StreamSender.prototype.endGroup = function() {
    var parent, value;
    if (this.level > 0) {
      this.level--;
    }
    value = this.stack.pop();
    if (this.level === 0) {
      this.q.push(value);
      this.resetCurrent();
    } else {
      parent = this.stack[this.stack.length - 1];
      parent.push(value);
      this.current = parent;
    }
    return this;
  };

  StreamSender.prototype.send = function(data) {
    if (this.level === 0) {
      this.q.push(new IP(data));
    } else {
      this.current.push(new IP(data));
    }
    return this;
  };

  StreamSender.prototype.done = function() {
    if (this.ordered) {
      this.resolved = true;
    } else {
      this.flush();
    }
    return this;
  };

  StreamSender.prototype.disconnect = function() {
    this.q.push(null);
    return this;
  };

  StreamSender.prototype.flush = function() {
    var ip, res, _i, _len, _ref;
    res = false;
    if (this.q.length > 0) {
      _ref = this.q;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        ip = _ref[_i];
        if (ip === null) {
          if (this.port.isConnected()) {
            this.port.disconnect();
          }
        } else {
          ip.sendTo(this.port);
        }
      }
      res = true;
    }
    this.q = [];
    return res;
  };

  StreamSender.prototype.isAttached = function() {
    return this.port.isAttached();
  };

  return StreamSender;

})();

exports.StreamSender = StreamSender;

StreamReceiver = (function() {
  function StreamReceiver(port, buffered, process) {
    this.port = port;
    this.buffered = buffered != null ? buffered : false;
    this.process = process != null ? process : null;
    this.q = [];
    this.resetCurrent();
    this.port.process = (function(_this) {
      return function(event, payload, index) {
        var stream;
        switch (event) {
          case 'connect':
            if (typeof _this.process === 'function') {
              return _this.process('connect', index);
            }
            break;
          case 'begingroup':
            _this.level++;
            stream = new Substream(payload);
            if (_this.level === 1) {
              _this.root = stream;
              _this.parent = null;
            } else {
              _this.parent = _this.current;
            }
            return _this.current = stream;
          case 'endgroup':
            if (_this.level > 0) {
              _this.level--;
            }
            if (_this.level === 0) {
              if (_this.buffered) {
                _this.q.push(_this.root);
                _this.process('readable', index);
              } else {
                if (typeof _this.process === 'function') {
                  _this.process('data', _this.root, index);
                }
              }
              return _this.resetCurrent();
            } else {
              _this.parent.push(_this.current);
              return _this.current = _this.parent;
            }
            break;
          case 'data':
            if (_this.level === 0) {
              return _this.q.push(new IP(payload));
            } else {
              return _this.current.push(new IP(payload));
            }
            break;
          case 'disconnect':
            if (typeof _this.process === 'function') {
              return _this.process('disconnect', index);
            }
        }
      };
    })(this);
  }

  StreamReceiver.prototype.resetCurrent = function() {
    this.level = 0;
    this.root = null;
    this.current = null;
    return this.parent = null;
  };

  StreamReceiver.prototype.read = function() {
    if (this.q.length === 0) {
      return void 0;
    }
    return this.q.shift();
  };

  return StreamReceiver;

})();

exports.StreamReceiver = StreamReceiver;

});
require.register("noflo-noflo/src/components/Graph.js", function(exports, require, module){
var Graph, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {
  noflo = require("../../lib/NoFlo");
} else {
  noflo = require('../lib/NoFlo');
}

Graph = (function(_super) {
  __extends(Graph, _super);

  function Graph(metadata) {
    this.metadata = metadata;
    this.network = null;
    this.ready = true;
    this.started = false;
    this.baseDir = null;
    this.loader = null;
    this.inPorts = new noflo.InPorts({
      graph: {
        datatype: 'all',
        description: 'NoFlo graph definition to be used with the subgraph component',
        required: true,
        immediate: true
      }
    });
    this.outPorts = new noflo.OutPorts;
    this.inPorts.on('graph', 'data', (function(_this) {
      return function(data) {
        return _this.setGraph(data);
      };
    })(this));
  }

  Graph.prototype.setGraph = function(graph) {
    this.ready = false;
    if (typeof graph === 'object') {
      if (typeof graph.addNode === 'function') {
        return this.createNetwork(graph);
      }
      noflo.graph.loadJSON(graph, (function(_this) {
        return function(instance) {
          instance.baseDir = _this.baseDir;
          return _this.createNetwork(instance);
        };
      })(this));
      return;
    }
    if (graph.substr(0, 1) !== "/" && graph.substr(1, 1) !== ":" && process && process.cwd) {
      graph = "" + (process.cwd()) + "/" + graph;
    }
    return graph = noflo.graph.loadFile(graph, (function(_this) {
      return function(instance) {
        instance.baseDir = _this.baseDir;
        return _this.createNetwork(instance);
      };
    })(this));
  };

  Graph.prototype.createNetwork = function(graph) {
    this.description = graph.properties.description || '';
    this.icon = graph.properties.icon || this.icon;
    graph.componentLoader = this.loader;
    return noflo.createNetwork(graph, (function(_this) {
      return function(network) {
        _this.network = network;
        _this.emit('network', _this.network);
        return _this.network.connect(function() {
          var name, notReady, process, _ref;
          notReady = false;
          _ref = _this.network.processes;
          for (name in _ref) {
            process = _ref[name];
            if (!_this.checkComponent(name, process)) {
              notReady = true;
            }
          }
          if (!notReady) {
            return _this.setToReady();
          }
        });
      };
    })(this), true);
  };

  Graph.prototype.start = function() {
    if (!this.isReady()) {
      this.on('ready', (function(_this) {
        return function() {
          return _this.start();
        };
      })(this));
      return;
    }
    if (!this.network) {
      return;
    }
    this.started = true;
    return this.network.start();
  };

  Graph.prototype.checkComponent = function(name, process) {
    if (!process.component.isReady()) {
      process.component.once("ready", (function(_this) {
        return function() {
          _this.checkComponent(name, process);
          return _this.setToReady();
        };
      })(this));
      return false;
    }
    this.findEdgePorts(name, process);
    return true;
  };

  Graph.prototype.isExportedInport = function(port, nodeName, portName) {
    var exported, priv, pub, _i, _len, _ref, _ref1;
    _ref = this.network.graph.inports;
    for (pub in _ref) {
      priv = _ref[pub];
      if (!(priv.process === nodeName && priv.port === portName)) {
        continue;
      }
      return pub;
    }
    _ref1 = this.network.graph.exports;
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      exported = _ref1[_i];
      if (!(exported.process === nodeName && exported.port === portName)) {
        continue;
      }
      this.network.graph.checkTransactionStart();
      this.network.graph.removeExport(exported["public"]);
      this.network.graph.addInport(exported["public"], exported.process, exported.port, exported.metadata);
      this.network.graph.checkTransactionEnd();
      return exported["public"];
    }
    return false;
  };

  Graph.prototype.isExportedOutport = function(port, nodeName, portName) {
    var exported, priv, pub, _i, _len, _ref, _ref1;
    _ref = this.network.graph.outports;
    for (pub in _ref) {
      priv = _ref[pub];
      if (!(priv.process === nodeName && priv.port === portName)) {
        continue;
      }
      return pub;
    }
    _ref1 = this.network.graph.exports;
    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {
      exported = _ref1[_i];
      if (!(exported.process === nodeName && exported.port === portName)) {
        continue;
      }
      this.network.graph.checkTransactionStart();
      this.network.graph.removeExport(exported["public"]);
      this.network.graph.addOutport(exported["public"], exported.process, exported.port, exported.metadata);
      this.network.graph.checkTransactionEnd();
      return exported["public"];
    }
    return false;
  };

  Graph.prototype.setToReady = function() {
    if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {
      return process.nextTick((function(_this) {
        return function() {
          _this.ready = true;
          return _this.emit('ready');
        };
      })(this));
    } else {
      return setTimeout((function(_this) {
        return function() {
          _this.ready = true;
          return _this.emit('ready');
        };
      })(this), 0);
    }
  };

  Graph.prototype.findEdgePorts = function(name, process) {
    var port, portName, targetPortName, _ref, _ref1;
    _ref = process.component.inPorts;
    for (portName in _ref) {
      port = _ref[portName];
      if (!port || typeof port === 'function' || !port.canAttach) {
        continue;
      }
      targetPortName = this.isExportedInport(port, name, portName);
      if (targetPortName === false) {
        continue;
      }
      this.inPorts.add(targetPortName, port);
      this.inPorts[targetPortName].once('connect', (function(_this) {
        return function() {
          if (_this.isStarted()) {
            return;
          }
          return _this.start();
        };
      })(this));
    }
    _ref1 = process.component.outPorts;
    for (portName in _ref1) {
      port = _ref1[portName];
      if (!port || typeof port === 'function' || !port.canAttach) {
        continue;
      }
      targetPortName = this.isExportedOutport(port, name, portName);
      if (targetPortName === false) {
        continue;
      }
      this.outPorts.add(targetPortName, port);
    }
    return true;
  };

  Graph.prototype.isReady = function() {
    return this.ready;
  };

  Graph.prototype.isSubgraph = function() {
    return true;
  };

  Graph.prototype.shutdown = function() {
    if (!this.network) {
      return;
    }
    return this.network.stop();
  };

  return Graph;

})(noflo.Component);

exports.getComponent = function(metadata) {
  return new Graph(metadata);
};

});
require.register("noflo-noflo-dom/index.js", function(exports, require, module){
/*
 * This file can be used for general library features that are exposed as CommonJS modules
 * that the components then utilize
 */

});
require.register("noflo-noflo-dom/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo-dom","description":"Document Object Model components for NoFlo","author":"Henri Bergius <henri.bergius@iki.fi>","repo":"noflo/noflo-dom","version":"0.0.1","keywords":[],"dependencies":{"noflo/noflo":"*"},"scripts":["components/AddClass.js","components/AppendChild.js","components/CreateElement.js","components/CreateFragment.js","components/GetAttribute.js","components/GetElement.js","components/HasClass.js","components/Listen.js","components/ReadHtml.js","components/RemoveElement.js","components/SetAttribute.js","components/WriteHtml.js","components/RemoveClass.js","components/RequestAnimationFrame.js","index.js"],"json":["component.json"],"noflo":{"icon":"html5","components":{"AddClass":"components/AddClass.js","AppendChild":"components/AppendChild.js","CreateElement":"components/CreateElement.js","CreateFragment":"components/CreateFragment.js","GetAttribute":"components/GetAttribute.js","GetElement":"components/GetElement.js","HasClass":"components/HasClass.js","Listen":"components/Listen.js","ReadHtml":"components/ReadHtml.js","RemoveClass":"components/RemoveClass.js","RemoveElement":"components/RemoveElement.js","RequestAnimationFrame":"components/RequestAnimationFrame.js","SetAttribute":"components/SetAttribute.js","WriteHtml":"components/WriteHtml.js"}}}');
});
require.register("noflo-noflo-dom/components/AddClass.js", function(exports, require, module){
var AddClass, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

AddClass = (function(_super) {
  __extends(AddClass, _super);

  AddClass.prototype.description = 'Add a class to an element';

  function AddClass() {
    this.element = null;
    this["class"] = null;
    this.inPorts = {
      element: new noflo.Port('object'),
      "class": new noflo.Port('string')
    };
    this.outPorts = {};
    this.inPorts.element.on('data', (function(_this) {
      return function(data) {
        _this.element = data;
        if (_this["class"]) {
          return _this.addClass();
        }
      };
    })(this));
    this.inPorts["class"].on('data', (function(_this) {
      return function(data) {
        _this["class"] = data;
        if (_this.element) {
          return _this.addClass();
        }
      };
    })(this));
  }

  AddClass.prototype.addClass = function() {
    return this.element.classList.add(this["class"]);
  };

  return AddClass;

})(noflo.Component);

exports.getComponent = function() {
  return new AddClass;
};

});
require.register("noflo-noflo-dom/components/AppendChild.js", function(exports, require, module){
var AppendChild, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

AppendChild = (function(_super) {
  __extends(AppendChild, _super);

  AppendChild.prototype.description = 'Append elements as children of a parent element';

  function AppendChild() {
    this.parent = null;
    this.children = [];
    this.inPorts = {
      parent: new noflo.Port('object'),
      child: new noflo.Port('object')
    };
    this.outPorts = {};
    this.inPorts.parent.on('data', (function(_this) {
      return function(data) {
        _this.parent = data;
        if (_this.children.length) {
          return _this.append();
        }
      };
    })(this));
    this.inPorts.child.on('data', (function(_this) {
      return function(data) {
        if (!_this.parent) {
          _this.children.push(data);
          return;
        }
        return _this.parent.appendChild(data);
      };
    })(this));
  }

  AppendChild.prototype.append = function() {
    var child, _i, _len, _ref;
    _ref = this.children;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      child = _ref[_i];
      this.parent.appendChild(child);
    }
    return this.children = [];
  };

  return AppendChild;

})(noflo.Component);

exports.getComponent = function() {
  return new AppendChild;
};

});
require.register("noflo-noflo-dom/components/CreateElement.js", function(exports, require, module){
var CreateElement, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

CreateElement = (function(_super) {
  __extends(CreateElement, _super);

  CreateElement.prototype.description = 'Create a new DOM Element';

  function CreateElement() {
    this.tagName = null;
    this.container = null;
    this.inPorts = {
      tagname: new noflo.Port('string'),
      container: new noflo.Port('object')
    };
    this.outPorts = {
      element: new noflo.Port('object')
    };
    this.inPorts.tagname.on('data', (function(_this) {
      return function(tagName) {
        _this.tagName = tagName;
        return _this.createElement();
      };
    })(this));
    this.inPorts.tagname.on('disconnect', (function(_this) {
      return function() {
        if (!_this.inPorts.container.isAttached()) {
          return _this.outPorts.element.disconnect();
        }
      };
    })(this));
    this.inPorts.container.on('data', (function(_this) {
      return function(container) {
        _this.container = container;
        return _this.createElement();
      };
    })(this));
    this.inPorts.container.on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.element.disconnect();
      };
    })(this));
  }

  CreateElement.prototype.createElement = function() {
    var el;
    if (!this.tagName) {
      return;
    }
    if (this.inPorts.container.isAttached()) {
      if (!this.container) {
        return;
      }
    }
    el = document.createElement(this.tagName);
    if (this.container) {
      this.container.appendChild(el);
    }
    return this.outPorts.element.send(el);
  };

  return CreateElement;

})(noflo.Component);

exports.getComponent = function() {
  return new CreateElement;
};

});
require.register("noflo-noflo-dom/components/CreateFragment.js", function(exports, require, module){
var CreateFragment, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

CreateFragment = (function(_super) {
  __extends(CreateFragment, _super);

  CreateFragment.prototype.description = 'Create a new DOM DocumentFragment';

  function CreateFragment() {
    this.inPorts = {
      "in": new noflo.Port('bang')
    };
    this.outPorts = {
      fragment: new noflo.Port('object')
    };
    this.inPorts["in"].on('data', (function(_this) {
      return function() {
        return _this.outPorts.fragment.send(document.createDocumentFragment());
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.fragment.disconnect();
      };
    })(this));
  }

  return CreateFragment;

})(noflo.Component);

exports.getComponent = function() {
  return new CreateFragment;
};

});
require.register("noflo-noflo-dom/components/GetAttribute.js", function(exports, require, module){
'use strict';
var noflo;

noflo = require('noflo');

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.description = "Reads the given attribute from the DOM element on the in port.";
  c.inPorts.add('element', {
    datatype: 'object',
    description: 'The element from which to read the attribute from.',
    required: true
  });
  c.inPorts.add('attribute', {
    datatype: 'string',
    description: 'The attribute which is read from the DOM element.',
    required: true
  });
  c.outPorts.add('out', {
    datatype: 'string',
    description: 'Value of the attribute being read.'
  });
  return noflo.helpers.WirePattern(c, {
    "in": ['element'],
    out: ['out'],
    params: ['attribute'],
    forwardGroups: true
  }, function(data, groups, out) {
    var attr, value;
    attr = c.params.attribute;
    value = data.getAttribute(attr);
    return out.send(value);
  });
};

});
require.register("noflo-noflo-dom/components/GetElement.js", function(exports, require, module){
var GetElement, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

GetElement = (function(_super) {
  __extends(GetElement, _super);

  GetElement.prototype.description = 'Get a DOM element matching a query';

  function GetElement() {
    this.container = null;
    this.inPorts = {
      "in": new noflo.Port('object'),
      selector: new noflo.Port('string')
    };
    this.outPorts = {
      element: new noflo.Port('object'),
      error: new noflo.Port('object')
    };
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (typeof data.querySelector !== 'function') {
          _this.error('Given container doesn\'t support querySelectors');
          return;
        }
        return _this.container = data;
      };
    })(this));
    this.inPorts.selector.on('data', (function(_this) {
      return function(data) {
        return _this.select(data);
      };
    })(this));
  }

  GetElement.prototype.select = function(selector) {
    var el, element, _i, _len;
    if (this.container) {
      el = this.container.querySelectorAll(selector);
    } else {
      el = document.querySelectorAll(selector);
    }
    if (!el.length) {
      this.error("No element matching '" + selector + "' found");
      return;
    }
    for (_i = 0, _len = el.length; _i < _len; _i++) {
      element = el[_i];
      this.outPorts.element.send(element);
    }
    return this.outPorts.element.disconnect();
  };

  GetElement.prototype.error = function(msg) {
    if (this.outPorts.error.isAttached()) {
      this.outPorts.error.send(new Error(msg));
      this.outPorts.error.disconnect();
      return;
    }
    throw new Error(msg);
  };

  return GetElement;

})(noflo.Component);

exports.getComponent = function() {
  return new GetElement;
};

});
require.register("noflo-noflo-dom/components/HasClass.js", function(exports, require, module){
var HasClass, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

HasClass = (function(_super) {
  __extends(HasClass, _super);

  HasClass.prototype.description = 'Check if an element has a given class';

  function HasClass() {
    this.element = null;
    this["class"] = null;
    this.inPorts = {
      element: new noflo.Port('object'),
      "class": new noflo.Port('string')
    };
    this.outPorts = {
      element: new noflo.Port('object'),
      missed: new noflo.Port('object')
    };
    this.inPorts.element.on('data', (function(_this) {
      return function(data) {
        _this.element = data;
        if (_this["class"]) {
          return _this.checkClass();
        }
      };
    })(this));
    this.inPorts.element.on('disconnect', (function(_this) {
      return function() {
        _this.outPorts.element.disconnect();
        if (!_this.outPorts.missed.isAttached()) {
          return;
        }
        return _this.outPorts.missed.disconnect();
      };
    })(this));
    this.inPorts["class"].on('data', (function(_this) {
      return function(data) {
        _this["class"] = data;
        if (_this.element) {
          return _this.checkClass();
        }
      };
    })(this));
  }

  HasClass.prototype.checkClass = function() {
    if (this.element.classList.contains(this["class"])) {
      this.outPorts.element.send(this.element);
      return;
    }
    if (!this.outPorts.missed.isAttached()) {
      return;
    }
    return this.outPorts.missed.send(this.element);
  };

  return HasClass;

})(noflo.Component);

exports.getComponent = function() {
  return new HasClass;
};

});
require.register("noflo-noflo-dom/components/Listen.js", function(exports, require, module){
var Listen, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Listen = (function(_super) {
  __extends(Listen, _super);

  Listen.prototype.description = 'addEventListener for specified event type';

  Listen.prototype.icon = 'stethoscope';

  function Listen() {
    this.change = __bind(this.change, this);
    this.element = null;
    this.type = null;
    this.inPorts = {
      element: new noflo.Port('object'),
      type: new noflo.Port('string')
    };
    this.outPorts = {
      element: new noflo.Port('object'),
      event: new noflo.Port('object')
    };
    this.inPorts.element.on('data', (function(_this) {
      return function(data) {
        if (_this.element && _this.type) {
          _this.unsubscribe(_this.element, _this.type);
        }
        _this.element = data;
        if (_this.type) {
          return _this.subscribe(_this.element, _this.type);
        }
      };
    })(this));
    this.inPorts.type.on('data', (function(_this) {
      return function(data) {
        if (_this.element && _this.type) {
          _this.unsubscribe(_this.element, _this.type);
        }
        _this.type = data;
        if (_this.element) {
          return _this.subscribe(_this.element, _this.type);
        }
      };
    })(this));
  }

  Listen.prototype.unsubscribe = function(element, type) {
    return element.removeEventListener(type, this.change);
  };

  Listen.prototype.subscribe = function(element, type) {
    return element.addEventListener(type, this.change);
  };

  Listen.prototype.change = function(event) {
    if (this.outPorts.element.isAttached()) {
      this.outPorts.element.send(this.element);
    }
    if (this.outPorts.event.isAttached()) {
      return this.outPorts.event.send(event);
    }
  };

  return Listen;

})(noflo.Component);

exports.getComponent = function() {
  return new Listen;
};

});
require.register("noflo-noflo-dom/components/ReadHtml.js", function(exports, require, module){
var ReadHtml, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ReadHtml = (function(_super) {
  __extends(ReadHtml, _super);

  ReadHtml.prototype.description = 'Read HTML from an existing element';

  function ReadHtml() {
    this.inPorts = {
      container: new noflo.Port('object')
    };
    this.outPorts = {
      html: new noflo.Port('string')
    };
    this.inPorts.container.on('data', (function(_this) {
      return function(data) {
        _this.outPorts.html.send(data.innerHTML);
        return _this.outPorts.html.disconnect();
      };
    })(this));
  }

  return ReadHtml;

})(noflo.Component);

exports.getComponent = function() {
  return new ReadHtml;
};

});
require.register("noflo-noflo-dom/components/RemoveElement.js", function(exports, require, module){
var RemoveElement, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

RemoveElement = (function(_super) {
  __extends(RemoveElement, _super);

  RemoveElement.prototype.description = 'Remove an element from DOM';

  function RemoveElement() {
    this.inPorts = {
      element: new noflo.Port('object')
    };
    this.inPorts.element.on('data', (function(_this) {
      return function(element) {
        if (!element.parentNode) {
          return;
        }
        return element.parentNode.removeChild(element);
      };
    })(this));
  }

  return RemoveElement;

})(noflo.Component);

exports.getComponent = function() {
  return new RemoveElement;
};

});
require.register("noflo-noflo-dom/components/SetAttribute.js", function(exports, require, module){
var SetAttribute, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SetAttribute = (function(_super) {
  __extends(SetAttribute, _super);

  function SetAttribute() {
    this.attribute = null;
    this.value = null;
    this.element = null;
    this.inPorts = {
      element: new noflo.Port('object'),
      attribute: new noflo.Port('string'),
      value: new noflo.Port('string')
    };
    this.outPorts = {
      element: new noflo.Port('object')
    };
    this.inPorts.element.on('data', (function(_this) {
      return function(element) {
        _this.element = element;
        if (_this.attribute && _this.value) {
          return _this.setAttribute();
        }
      };
    })(this));
    this.inPorts.attribute.on('data', (function(_this) {
      return function(attribute) {
        _this.attribute = attribute;
        if (_this.element && _this.value) {
          return _this.setAttribute();
        }
      };
    })(this));
    this.inPorts.value.on('data', (function(_this) {
      return function(value) {
        _this.value = _this.normalizeValue(value);
        if (_this.attribute && _this.element) {
          return _this.setAttribute();
        }
      };
    })(this));
  }

  SetAttribute.prototype.setAttribute = function() {
    this.element.setAttribute(this.attribute, this.value);
    this.value = null;
    if (this.outPorts.element.isAttached()) {
      this.outPorts.element.send(this.element);
      return this.outPorts.element.disconnect();
    }
  };

  SetAttribute.prototype.normalizeValue = function(value) {
    var key, newVal, val;
    if (typeof value === 'object') {
      if (toString.call(value) !== '[object Array]') {
        newVal = [];
        for (key in value) {
          val = value[key];
          newVal.push(val);
        }
        value = newVal;
      }
      return value.join(' ');
    }
    return value;
  };

  return SetAttribute;

})(noflo.Component);

exports.getComponent = function() {
  return new SetAttribute;
};

});
require.register("noflo-noflo-dom/components/WriteHtml.js", function(exports, require, module){
var WriteHtml, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

WriteHtml = (function(_super) {
  __extends(WriteHtml, _super);

  WriteHtml.prototype.description = 'Write HTML inside an existing element';

  function WriteHtml() {
    this.container = null;
    this.html = null;
    this.inPorts = {
      html: new noflo.Port('string'),
      container: new noflo.Port('object')
    };
    this.outPorts = {
      container: new noflo.Port('object')
    };
    this.inPorts.html.on('data', (function(_this) {
      return function(data) {
        _this.html = data;
        if (_this.container) {
          return _this.writeHtml();
        }
      };
    })(this));
    this.inPorts.container.on('data', (function(_this) {
      return function(data) {
        _this.container = data;
        if (_this.html !== null) {
          return _this.writeHtml();
        }
      };
    })(this));
  }

  WriteHtml.prototype.writeHtml = function() {
    this.container.innerHTML = this.html;
    this.html = null;
    if (this.outPorts.container.isAttached()) {
      this.outPorts.container.send(this.container);
      return this.outPorts.container.disconnect();
    }
  };

  return WriteHtml;

})(noflo.Component);

exports.getComponent = function() {
  return new WriteHtml;
};

});
require.register("noflo-noflo-dom/components/RemoveClass.js", function(exports, require, module){
var RemoveClass, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

RemoveClass = (function(_super) {
  __extends(RemoveClass, _super);

  RemoveClass.prototype.description = 'Remove a class from an element';

  function RemoveClass() {
    this.element = null;
    this["class"] = null;
    this.inPorts = {
      element: new noflo.Port('object'),
      "class": new noflo.Port('string')
    };
    this.outPorts = {};
    this.inPorts.element.on('data', (function(_this) {
      return function(data) {
        _this.element = data;
        if (_this["class"]) {
          return _this.removeClass();
        }
      };
    })(this));
    this.inPorts["class"].on('data', (function(_this) {
      return function(data) {
        _this["class"] = data;
        if (_this.element) {
          return _this.removeClass();
        }
      };
    })(this));
  }

  RemoveClass.prototype.removeClass = function() {
    return this.element.classList.remove(this["class"]);
  };

  return RemoveClass;

})(noflo.Component);

exports.getComponent = function() {
  return new RemoveClass;
};

});
require.register("noflo-noflo-dom/components/RequestAnimationFrame.js", function(exports, require, module){
var RequestAnimationFrame, noflo, requestAnimationFrame,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback, element) {
  return window.setTimeout(function() {
    return callback(+new Date());
  }, 1000 / 60);
};

RequestAnimationFrame = (function(_super) {
  __extends(RequestAnimationFrame, _super);

  RequestAnimationFrame.prototype.description = 'Sends bangs that correspond with screen refresh rate.';

  RequestAnimationFrame.prototype.icon = 'film';

  function RequestAnimationFrame() {
    this.running = false;
    this.inPorts = {
      start: new noflo.Port('bang'),
      stop: new noflo.Port('bang')
    };
    this.outPorts = {
      out: new noflo.Port('bang')
    };
    this.inPorts.start.on('data', (function(_this) {
      return function(data) {
        _this.running = true;
        return _this.animate();
      };
    })(this));
    this.inPorts.stop.on('data', (function(_this) {
      return function(data) {
        return _this.running = false;
      };
    })(this));
  }

  RequestAnimationFrame.prototype.animate = function() {
    if (this.running) {
      requestAnimationFrame(this.animate.bind(this));
      return this.outPorts.out.send(true);
    }
  };

  RequestAnimationFrame.prototype.shutdown = function() {
    return this.running = false;
  };

  return RequestAnimationFrame;

})(noflo.Component);

exports.getComponent = function() {
  return new RequestAnimationFrame;
};

});
require.register("noflo-noflo-core/index.js", function(exports, require, module){
/*
 * This file can be used for general library features of core.
 *
 * The library features can be made available as CommonJS modules that the
 * components in this project utilize.
 */

});
require.register("noflo-noflo-core/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo-core","description":"NoFlo Essentials","repo":"noflo/noflo-core","version":"0.1.8","author":{"name":"Henri Bergius","email":"henri.bergius@iki.fi"},"contributors":[{"name":"Kenneth Kan","email":"kenhkan@gmail.com"},{"name":"Ryan Shaw","email":"ryanshaw@unc.edu"}],"keywords":[],"dependencies":{"noflo/noflo":"*","jashkenas/underscore":"*"},"remotes":["https://raw.githubusercontent.com"],"scripts":["components/Callback.js","components/DisconnectAfterPacket.js","components/Drop.js","components/Group.js","components/Kick.js","components/Merge.js","components/Output.js","components/Repeat.js","components/RepeatAsync.js","components/RepeatDelayed.js","components/SendNext.js","components/Split.js","components/RunInterval.js","components/RunTimeout.js","components/MakeFunction.js","index.js","components/ReadGlobal.js"],"json":["component.json"],"noflo":{"components":{"Callback":"components/Callback.js","DisconnectAfterPacket":"components/DisconnectAfterPacket.js","Drop":"components/Drop.js","Group":"components/Group.js","Kick":"components/Kick.js","MakeFunction":"components/MakeFunction.js","Merge":"components/Merge.js","Output":"components/Output.js","ReadGlobal":"components/ReadGlobal.js","Repeat":"components/Repeat.js","RepeatAsync":"components/RepeatAsync.js","RepeatDelayed":"components/RepeatDelayed.js","RunInterval":"components/RunInterval.js","RunTimeout":"components/RunTimeout.js","SendNext":"components/SendNext.js","Split":"components/Split.js"}}}');
});
require.register("noflo-noflo-core/components/Callback.js", function(exports, require, module){
var Callback, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

_ = require('underscore')._;

Callback = (function(_super) {
  __extends(Callback, _super);

  Callback.prototype.description = 'This component calls a given callback function for each IP it receives.  The Callback component is typically used to connect NoFlo with external Node.js code.';

  Callback.prototype.icon = 'sign-out';

  function Callback() {
    this.callback = null;
    this.inPorts = new noflo.InPorts({
      "in": {
        description: 'Object passed as argument of the callback',
        datatype: 'all'
      },
      callback: {
        description: 'Callback to invoke',
        datatype: 'function'
      }
    });
    this.outPorts = new noflo.OutPorts({
      error: {
        datatype: 'object'
      }
    });
    this.inPorts.callback.on('data', (function(_this) {
      return function(data) {
        if (!_.isFunction(data)) {
          _this.error('The provided callback must be a function');
          return;
        }
        return _this.callback = data;
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (!_this.callback) {
          _this.error('No callback provided');
          return;
        }
        return _this.callback(data);
      };
    })(this));
  }

  Callback.prototype.error = function(msg) {
    if (this.outPorts.error.isAttached()) {
      this.outPorts.error.send(new Error(msg));
      this.outPorts.error.disconnect();
      return;
    }
    throw new Error(msg);
  };

  return Callback;

})(noflo.Component);

exports.getComponent = function() {
  return new Callback;
};

});
require.register("noflo-noflo-core/components/DisconnectAfterPacket.js", function(exports, require, module){
var DisconnectAfterPacket, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

DisconnectAfterPacket = (function(_super) {
  __extends(DisconnectAfterPacket, _super);

  DisconnectAfterPacket.prototype.description = 'Forwards any packets, but also sends a disconnect after each of them';

  DisconnectAfterPacket.prototype.icon = 'pause';

  function DisconnectAfterPacket() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'Packet to be forward with disconnection'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        _this.outPorts.out.send(data);
        return _this.outPorts.out.disconnect();
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
  }

  return DisconnectAfterPacket;

})(noflo.Component);

exports.getComponent = function() {
  return new DisconnectAfterPacket;
};

});
require.register("noflo-noflo-core/components/Drop.js", function(exports, require, module){
var Drop, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Drop = (function(_super) {
  __extends(Drop, _super);

  Drop.prototype.description = 'This component drops every packet it receives with no action';

  Drop.prototype.icon = 'trash-o';

  function Drop() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatypes: 'all',
        description: 'Packet to be dropped'
      }
    });
    this.outPorts = new noflo.OutPorts;
  }

  return Drop;

})(noflo.Component);

exports.getComponent = function() {
  return new Drop;
};

});
require.register("noflo-noflo-core/components/Group.js", function(exports, require, module){
var Group, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Group = (function(_super) {
  __extends(Group, _super);

  Group.prototype.description = 'Adds a set of groups around the packets received at each connection';

  Group.prototype.icon = 'tags';

  function Group() {
    this.groups = [];
    this.newGroups = [];
    this.threshold = null;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all'
      },
      group: {
        datatype: 'string',
        description: 'The group to add around forwarded packets'
      },
      threshold: {
        datatype: 'int',
        description: 'Maximum number of groups kept around',
        required: false
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all',
        required: false
      }
    });
    this.inPorts["in"].on('connect', (function(_this) {
      return function() {
        var group, _i, _len, _ref, _results;
        _ref = _this.newGroups;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          group = _ref[_i];
          _results.push(_this.outPorts.out.beginGroup(group));
        }
        return _results;
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        var group, _i, _len, _ref;
        _ref = _this.newGroups;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          group = _ref[_i];
          _this.outPorts.out.endGroup();
        }
        _this.outPorts.out.disconnect();
        return _this.groups = [];
      };
    })(this));
    this.inPorts.group.on('data', (function(_this) {
      return function(data) {
        var diff;
        if (_this.threshold) {
          diff = _this.newGroups.length - _this.threshold + 1;
          if (diff > 0) {
            _this.newGroups = _this.newGroups.slice(diff);
          }
        }
        return _this.newGroups.push(data);
      };
    })(this));
    this.inPorts.threshold.on('data', (function(_this) {
      return function(threshold) {
        _this.threshold = threshold;
      };
    })(this));
  }

  return Group;

})(noflo.Component);

exports.getComponent = function() {
  return new Group;
};

});
require.register("noflo-noflo-core/components/Kick.js", function(exports, require, module){
var Kick, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Kick = (function(_super) {
  __extends(Kick, _super);

  Kick.prototype.description = 'This component generates a single packet and sends it to the output port. Mostly usable for debugging, but can also be useful for starting up networks.';

  Kick.prototype.icon = 'share';

  function Kick() {
    this.data = {
      packet: null,
      group: []
    };
    this.groups = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'bang',
        description: 'Signal to send the data packet'
      },
      data: {
        datatype: 'all',
        description: 'Packet to be sent'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.groups.push(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function() {
        return _this.data.group = _this.groups.slice(0);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function(group) {
        return _this.groups.pop();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        _this.sendKick(_this.data);
        return _this.groups = [];
      };
    })(this));
    this.inPorts.data.on('data', (function(_this) {
      return function(data) {
        return _this.data.packet = data;
      };
    })(this));
  }

  Kick.prototype.sendKick = function(kick) {
    var group, _i, _j, _len, _len1, _ref, _ref1;
    _ref = kick.group;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      group = _ref[_i];
      this.outPorts.out.beginGroup(group);
    }
    this.outPorts.out.send(kick.packet);
    _ref1 = kick.group;
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      group = _ref1[_j];
      this.outPorts.out.endGroup();
    }
    return this.outPorts.out.disconnect();
  };

  return Kick;

})(noflo.Component);

exports.getComponent = function() {
  return new Kick;
};

});
require.register("noflo-noflo-core/components/Merge.js", function(exports, require, module){
var Merge, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Merge = (function(_super) {
  __extends(Merge, _super);

  Merge.prototype.description = 'This component receives data on multiple input ports and sends the same data out to the connected output port';

  Merge.prototype.icon = 'compress';

  function Merge() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'Packet to be forwarded'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts["in"].on('connect', (function(_this) {
      return function() {
        return _this.outPorts.out.connect();
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        var socket, _i, _len, _ref;
        _ref = _this.inPorts["in"].sockets;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          socket = _ref[_i];
          if (socket.connected) {
            return;
          }
        }
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Merge;

})(noflo.Component);

exports.getComponent = function() {
  return new Merge;
};

});
require.register("noflo-noflo-core/components/Output.js", function(exports, require, module){
var Output, noflo, util,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

if (!noflo.isBrowser()) {
  util = require('util');
} else {
  util = {
    inspect: function(data) {
      return data;
    }
  };
}

Output = (function(_super) {
  __extends(Output, _super);

  Output.prototype.description = 'This component receives input on a single inport, and sends the data items directly to console.log';

  Output.prototype.icon = 'bug';

  function Output() {
    this.options = null;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'Packet to be printed through console.log'
      },
      options: {
        datatype: 'object',
        description: 'Options to be passed to console.log'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        _this.log(data);
        if (_this.outPorts.out.isAttached()) {
          return _this.outPorts.out.send(data);
        }
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        if (_this.outPorts.out.isAttached()) {
          return _this.outPorts.out.disconnect();
        }
      };
    })(this));
    this.inPorts.options.on('data', (function(_this) {
      return function(data) {
        return _this.setOptions(data);
      };
    })(this));
  }

  Output.prototype.setOptions = function(options) {
    var key, value, _results;
    if (typeof options !== 'object') {
      throw new Error('Options is not an object');
    }
    if (this.options == null) {
      this.options = {};
    }
    _results = [];
    for (key in options) {
      if (!__hasProp.call(options, key)) continue;
      value = options[key];
      _results.push(this.options[key] = value);
    }
    return _results;
  };

  Output.prototype.log = function(data) {
    if (this.options != null) {
      return console.log(util.inspect(data, this.options.showHidden, this.options.depth, this.options.colors));
    } else {
      return console.log(data);
    }
  };

  return Output;

})(noflo.Component);

exports.getComponent = function() {
  return new Output();
};

});
require.register("noflo-noflo-core/components/Repeat.js", function(exports, require, module){
var noflo;

noflo = require('noflo');

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.description = 'Forwards packets and metadata in the same way it receives them';
  c.icon = 'forward';
  c.inPorts.add('in', {
    datatype: 'all',
    description: 'Packet to forward'
  });
  c.outPorts.add('out', {
    datatype: 'all'
  });
  noflo.helpers.WirePattern(c, {
    "in": ['in'],
    out: 'out',
    forwardGroups: true
  }, function(data, groups, out) {
    return out.send(data);
  });
  return c;
};

});
require.register("noflo-noflo-core/components/RepeatAsync.js", function(exports, require, module){
var noflo;

noflo = require('noflo');

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.description = "Like 'Repeat', except repeat on next tick";
  c.icon = 'step-forward';
  c.inPorts.add('in', {
    datatype: 'all',
    description: 'Packet to forward'
  });
  c.outPorts.add('out', {
    datatype: 'all'
  });
  noflo.helpers.WirePattern(c, {
    "in": ['in'],
    out: 'out',
    forwardGroups: true,
    async: true
  }, function(data, groups, out, callback) {
    return setTimeout(function() {
      out.send(data);
      return callback();
    }, 0);
  });
  return c;
};

});
require.register("noflo-noflo-core/components/RepeatDelayed.js", function(exports, require, module){
var RepeatDelayed, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

RepeatDelayed = (function(_super) {
  __extends(RepeatDelayed, _super);

  RepeatDelayed.prototype.description = 'Forward packet after a set delay';

  RepeatDelayed.prototype.icon = 'clock-o';

  function RepeatDelayed() {
    this.timers = [];
    this.delay = 0;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'Packet to be forwarded with a delay'
      },
      delay: {
        datatype: 'number',
        description: 'How much to delay',
        "default": 500
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts.delay.on('data', (function(_this) {
      return function(delay) {
        _this.delay = delay;
      };
    })(this));
    RepeatDelayed.__super__.constructor.call(this);
  }

  RepeatDelayed.prototype.doAsync = function(packet, callback) {
    var timer;
    timer = setTimeout((function(_this) {
      return function() {
        _this.outPorts.out.send(packet);
        callback();
        return _this.timers.splice(_this.timers.indexOf(timer), 1);
      };
    })(this), this.delay);
    return this.timers.push(timer);
  };

  RepeatDelayed.prototype.shutdown = function() {
    var timer, _i, _len, _ref;
    _ref = this.timers;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      timer = _ref[_i];
      clearTimeout(timer);
    }
    return this.timers = [];
  };

  return RepeatDelayed;

})(noflo.AsyncComponent);

exports.getComponent = function() {
  return new RepeatDelayed;
};

});
require.register("noflo-noflo-core/components/SendNext.js", function(exports, require, module){
var SendNext, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SendNext = (function(_super) {
  __extends(SendNext, _super);

  SendNext.prototype.description = 'Sends next packet in buffer when receiving a bang';

  SendNext.prototype.icon = 'forward';

  function SendNext() {
    this.inPorts = new noflo.InPorts({
      data: {
        datatype: 'all',
        buffered: true
      },
      "in": {
        datatype: 'bang'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      },
      empty: {
        datatype: 'bang',
        required: false
      }
    });
    this.inPorts["in"].on('data', (function(_this) {
      return function() {
        return _this.sendNext();
      };
    })(this));
  }

  SendNext.prototype.sendNext = function() {
    var groups, packet, sent;
    sent = false;
    while (true) {
      packet = this.inPorts.data.receive();
      if (!packet) {
        this.outPorts.empty.send(true);
        this.outPorts.empty.disconnect();
        break;
      }
      groups = [];
      switch (packet.event) {
        case 'begingroup':
          this.outPorts.out.beginGroup(packet.payload);
          groups.push(packet.payload);
          break;
        case 'data':
          if (sent) {
            this.inPorts.data.buffer.unshift(packet);
            return;
          }
          this.outPorts.out.send(packet.payload);
          sent = true;
          break;
        case 'endgroup':
          this.outPorts.out.endGroup();
          groups.pop();
          if (groups.length === 0) {
            return;
          }
          break;
        case 'disconnect':
          this.outPorts.out.disconnect();
          return;
      }
    }
  };

  return SendNext;

})(noflo.Component);

exports.getComponent = function() {
  return new SendNext;
};

});
require.register("noflo-noflo-core/components/Split.js", function(exports, require, module){
var Split, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Split = (function(_super) {
  __extends(Split, _super);

  Split.prototype.description = 'This component receives data on a single input port and sends the same data out to all connected output ports';

  Split.prototype.icon = 'expand';

  function Split() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'Packet to be forwarded'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts["in"].on('connect', (function(_this) {
      return function() {
        return _this.outPorts.out.connect();
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Split;

})(noflo.Component);

exports.getComponent = function() {
  return new Split;
};

});
require.register("noflo-noflo-core/components/RunInterval.js", function(exports, require, module){
var RunInterval, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

RunInterval = (function(_super) {
  __extends(RunInterval, _super);

  RunInterval.prototype.description = 'Send a packet at the given interval';

  RunInterval.prototype.icon = 'clock-o';

  function RunInterval() {
    this.timer = null;
    this.interval = null;
    this.inPorts = new noflo.InPorts({
      interval: {
        datatype: 'number',
        description: 'Interval at which output packets are emitted (ms)'
      },
      start: {
        datatype: 'bang',
        description: 'Start the emission'
      },
      stop: {
        datatype: 'bang',
        description: 'Stop the emission'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'bang'
      }
    });
    this.inPorts.interval.on('data', (function(_this) {
      return function(interval) {
        _this.interval = interval;
        if (_this.timer != null) {
          clearInterval(_this.timer);
          return _this.start();
        }
      };
    })(this));
    this.inPorts.start.on('data', (function(_this) {
      return function() {
        if (_this.timer != null) {
          clearInterval(_this.timer);
        }
        _this.outPorts.out.connect();
        return _this.start();
      };
    })(this));
    this.inPorts.stop.on('data', (function(_this) {
      return function() {
        if (!_this.timer) {
          return;
        }
        clearInterval(_this.timer);
        _this.timer = null;
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  RunInterval.prototype.start = function() {
    var out;
    out = this.outPorts.out;
    return this.timer = setInterval(function() {
      return out.send(true);
    }, this.interval);
  };

  RunInterval.prototype.shutdown = function() {
    if (this.timer != null) {
      return clearInterval(this.timer);
    }
  };

  return RunInterval;

})(noflo.Component);

exports.getComponent = function() {
  return new RunInterval;
};

});
require.register("noflo-noflo-core/components/RunTimeout.js", function(exports, require, module){
var RunTimeout, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

RunTimeout = (function(_super) {
  __extends(RunTimeout, _super);

  RunTimeout.prototype.description = 'Send a packet after the given time in ms';

  RunTimeout.prototype.icon = 'clock-o';

  function RunTimeout() {
    this.timer = null;
    this.time = null;
    this.inPorts = new noflo.InPorts({
      time: {
        datatype: 'number',
        description: 'Time after which a packet will be sent'
      },
      start: {
        datatype: 'bang',
        description: 'Start the timeout before sending a packet'
      },
      clear: {
        datatype: 'bang',
        description: 'Clear the timeout',
        required: false
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'bang'
      }
    });
    this.inPorts.time.on('data', (function(_this) {
      return function(time) {
        _this.time = time;
        return _this.startTimer();
      };
    })(this));
    this.inPorts.start.on('data', (function(_this) {
      return function() {
        return _this.startTimer();
      };
    })(this));
    this.inPorts.clear.on('data', (function(_this) {
      return function() {
        if (_this.timer) {
          return _this.stopTimer();
        }
      };
    })(this));
  }

  RunTimeout.prototype.startTimer = function() {
    if (this.timer) {
      this.stopTimer();
    }
    this.outPorts.out.connect();
    return this.timer = setTimeout((function(_this) {
      return function() {
        _this.outPorts.out.send(true);
        _this.outPorts.out.disconnect();
        return _this.timer = null;
      };
    })(this), this.time);
  };

  RunTimeout.prototype.stopTimer = function() {
    if (!this.timer) {
      return;
    }
    clearTimeout(this.timer);
    this.timer = null;
    return this.outPorts.out.disconnect();
  };

  RunTimeout.prototype.shutdown = function() {
    if (this.timer) {
      return this.stopTimer();
    }
  };

  return RunTimeout;

})(noflo.Component);

exports.getComponent = function() {
  return new RunTimeout;
};

});
require.register("noflo-noflo-core/components/MakeFunction.js", function(exports, require, module){
var MakeFunction, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeFunction = (function(_super) {
  __extends(MakeFunction, _super);

  MakeFunction.prototype.description = 'Evaluates a function each time data hits the "in" port and sends the return value to "out". Within the function "x" will be the variable from the in port. For example, to make a ^2 function input "return x*x;" to the function port.';

  MakeFunction.prototype.icon = 'code';

  function MakeFunction() {
    this.f = null;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'Packet to be processed'
      },
      "function": {
        datatype: 'string',
        description: 'Function to evaluate'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      },
      "function": {
        datatype: 'function'
      },
      error: {
        datatype: 'object'
      }
    });
    this.inPorts["function"].on('data', (function(_this) {
      return function(data) {
        var error;
        if (typeof data === "function") {
          _this.f = data;
        } else {
          try {
            _this.f = Function("x", data);
          } catch (_error) {
            error = _error;
            _this.error('Error creating function: ' + data);
          }
        }
        if (_this.f && _this.outPorts["function"].isAttached()) {
          return _this.outPorts["function"].send(_this.f);
        }
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        var error;
        if (!_this.f) {
          _this.error('No function defined');
          return;
        }
        try {
          return _this.outPorts.out.send(_this.f(data));
        } catch (_error) {
          error = _error;
          return _this.error('Error evaluating function.');
        }
      };
    })(this));
  }

  MakeFunction.prototype.error = function(msg) {
    if (this.outPorts.error.isAttached()) {
      this.outPorts.error.send(new Error(msg));
      this.outPorts.error.disconnect();
      return;
    }
    throw new Error(msg);
  };

  return MakeFunction;

})(noflo.Component);

exports.getComponent = function() {
  return new MakeFunction;
};

});
require.register("noflo-noflo-core/components/ReadGlobal.js", function(exports, require, module){
var noflo;

noflo = require('noflo');

exports.getComponent = function() {
  var c, isNode;
  isNode = typeof window === 'undefined';
  c = new noflo.Component;
  c.description = 'Returns the value of a global variable.';
  c.icon = 'usd';
  c.inPorts.add('name', {
    description: 'The name of the global variable.',
    required: true
  });
  c.outPorts.add('value', {
    description: 'The value of the variable.',
    required: false
  });
  c.outPorts.add('error', {
    description: 'Any errors that occured reading the variables value.',
    required: false
  });
  noflo.helpers.WirePattern(c, {
    "in": ['name'],
    out: ['value'],
    forwardGroups: true
  }, function(data, groups, out) {
    var err, value;
    value = isNode ? global[data] : window[data];
    if (typeof value === 'undefined') {
      err = new Error("\"" + data + "\" is undefined on the global object.");
      if (c.outPorts.error.isAttached()) {
        return c.outPorts.error.send(err);
      } else {
        throw err;
      }
    } else {
      return out.send(value);
    }
  });
  return c;
};

});
require.register("noflo-noflo-interaction/index.js", function(exports, require, module){
/*
 * This file can be used for general library features that are exposed as CommonJS modules
 * that the components then utilize
 */

});
require.register("noflo-noflo-interaction/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo-interaction","description":"User interaction components for NoFlo","author":"Henri Bergius <henri.bergius@iki.fi>","repo":"noflo/noflo-interaction","version":"0.0.1","keywords":[],"dependencies":{"noflo/noflo":"*"},"scripts":["components/ListenChange.js","components/ListenDrag.js","components/ListenHash.js","components/ListenKeyboard.js","components/ListenKeyboardShortcuts.js","components/ListenMouse.js","components/ListenPointer.js","components/ListenResize.js","components/ListenScroll.js","components/ListenSpeech.js","components/ListenTouch.js","components/SetHash.js","components/ReadCoordinates.js","index.js","components/ReadGamepad.js"],"json":["component.json"],"noflo":{"icon":"user","components":{"ListenChange":"components/ListenChange.js","ListenDrag":"components/ListenDrag.js","ListenHash":"components/ListenHash.js","ListenKeyboard":"components/ListenKeyboard.js","ListenKeyboardShortcuts":"components/ListenKeyboardShortcuts.js","ListenMouse":"components/ListenMouse.js","ListenPointer":"components/ListenPointer.js","ListenResize":"components/ListenResize.js","ListenScroll":"components/ListenScroll.js","ListenSpeech":"components/ListenSpeech.js","ListenTouch":"components/ListenTouch.js","ReadCoordinates":"components/ReadCoordinates.js","ReadGamepad":"components/ReadGamepad.js","SetHash":"components/SetHash.js"}}}');
});
require.register("noflo-noflo-interaction/components/ListenChange.js", function(exports, require, module){
var ListenChange, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ListenChange = (function(_super) {
  __extends(ListenChange, _super);

  ListenChange.prototype.description = 'Listen to mouse events on a DOM element';

  function ListenChange() {
    this.change = __bind(this.change, this);
    this.elements = [];
    this.inPorts = {
      element: new noflo.Port('object')
    };
    this.outPorts = {
      value: new noflo.ArrayPort('all')
    };
    this.inPorts.element.on('data', (function(_this) {
      return function(element) {
        return _this.subscribe(element);
      };
    })(this));
  }

  ListenChange.prototype.subscribe = function(element) {
    element.addEventListener('change', this.change, false);
    return this.elements.push(element);
  };

  ListenChange.prototype.unsubscribe = function() {
    var element, _i, _len, _ref;
    _ref = this.elements;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      element = _ref[_i];
      element.removeEventListener('change', this.change, false);
    }
    return this.elements = [];
  };

  ListenChange.prototype.change = function(event) {
    if (!this.outPorts.value.sockets.length) {
      return;
    }
    event.preventDefault();
    event.stopPropagation();
    this.outPorts.value.send(event.target.value);
    return this.outPorts.value.disconnect();
  };

  ListenChange.prototype.shutdown = function() {
    return this.unsubscribe();
  };

  return ListenChange;

})(noflo.Component);

exports.getComponent = function() {
  return new ListenChange;
};

});
require.register("noflo-noflo-interaction/components/ListenDrag.js", function(exports, require, module){
var ListenDrag, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ListenDrag = (function(_super) {
  __extends(ListenDrag, _super);

  ListenDrag.prototype.description = 'Listen to drag events on a DOM element';

  ListenDrag.prototype.icon = 'arrows';

  function ListenDrag() {
    this.dragend = __bind(this.dragend, this);
    this.dragmove = __bind(this.dragmove, this);
    this.dragstart = __bind(this.dragstart, this);
    this.inPorts = {
      element: new noflo.Port('object')
    };
    this.outPorts = {
      start: new noflo.ArrayPort('object'),
      movex: new noflo.ArrayPort('number'),
      movey: new noflo.ArrayPort('number'),
      end: new noflo.ArrayPort('object')
    };
    this.inPorts.element.on('data', (function(_this) {
      return function(element) {
        return _this.subscribe(element);
      };
    })(this));
  }

  ListenDrag.prototype.subscribe = function(element) {
    element.addEventListener('dragstart', this.dragstart, false);
    element.addEventListener('drag', this.dragmove, false);
    return element.addEventListener('dragend', this.dragend, false);
  };

  ListenDrag.prototype.dragstart = function(event) {
    event.preventDefault();
    event.stopPropagation();
    this.outPorts.start.send(event);
    return this.outPorts.start.disconnect();
  };

  ListenDrag.prototype.dragmove = function(event) {
    event.preventDefault();
    event.stopPropagation();
    this.outPorts.movex.send(event.clientX);
    return this.outPorts.movey.send(event.clientY);
  };

  ListenDrag.prototype.dragend = function(event) {
    event.preventDefault();
    event.stopPropagation();
    if (this.outPorts.movex.isConnected()) {
      this.outPorts.movex.disconnect();
    }
    if (this.outPorts.movey.isConnected()) {
      this.outPorts.movey.disconnect();
    }
    this.outPorts.end.send(event);
    return this.outPorts.end.disconnect();
  };

  return ListenDrag;

})(noflo.Component);

exports.getComponent = function() {
  return new ListenDrag;
};

});
require.register("noflo-noflo-interaction/components/ListenHash.js", function(exports, require, module){
var ListenHash, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ListenHash = (function(_super) {
  __extends(ListenHash, _super);

  ListenHash.prototype.description = 'Listen for hash changes in browser\'s URL bar';

  ListenHash.prototype.icon = 'slack';

  function ListenHash() {
    this.hashChange = __bind(this.hashChange, this);
    this.current = null;
    this.inPorts = new noflo.InPorts({
      start: {
        datatype: 'bang',
        description: 'Start listening for hash changes'
      },
      stop: {
        datatype: 'bang',
        description: 'Stop listening for hash changes'
      }
    });
    this.outPorts = new noflo.OutPorts({
      initial: {
        datatype: 'string',
        required: false
      },
      change: {
        datatype: 'string',
        required: false
      }
    });
    this.inPorts.start.on('data', (function(_this) {
      return function() {
        return _this.subscribe();
      };
    })(this));
    this.inPorts.stop.on('data', (function(_this) {
      return function() {
        return _this.unsubscribe();
      };
    })(this));
  }

  ListenHash.prototype.subscribe = function() {
    this.current = this.getHash();
    window.addEventListener('hashchange', this.hashChange, false);
    this.outPorts.initial.send(this.current);
    return this.outPorts.initial.disconnect();
  };

  ListenHash.prototype.unsubscribe = function() {
    window.removeEventListener('hashchange', this.hashChange, false);
    return this.outPorts.change.disconnect();
  };

  ListenHash.prototype.hashChange = function(event) {
    var oldHash;
    oldHash = this.current;
    this.current = this.getHash();
    if (oldHash) {
      this.outPorts.change.beginGroup(oldHash);
    }
    this.outPorts.change.send(this.current);
    if (oldHash) {
      return this.outPorts.change.endGroup(oldHash);
    }
  };

  ListenHash.prototype.getHash = function() {
    return window.location.href.split('#')[1] || '';
  };

  ListenHash.prototype.shutdown = function() {
    return this.unsubscribe();
  };

  return ListenHash;

})(noflo.Component);

exports.getComponent = function() {
  return new ListenHash;
};

});
require.register("noflo-noflo-interaction/components/ListenKeyboard.js", function(exports, require, module){
var ListenKeyboard, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ListenKeyboard = (function(_super) {
  __extends(ListenKeyboard, _super);

  ListenKeyboard.prototype.description = 'Listen for key presses on a given DOM element';

  ListenKeyboard.prototype.icon = 'keyboard-o';

  function ListenKeyboard() {
    this.keypress = __bind(this.keypress, this);
    this.elements = [];
    this.inPorts = {
      element: new noflo.Port('object'),
      stop: new noflo.Port('object')
    };
    this.outPorts = {
      keypress: new noflo.Port('int')
    };
    this.inPorts.element.on('data', (function(_this) {
      return function(element) {
        return _this.subscribe(element);
      };
    })(this));
    this.inPorts.stop.on('data', (function(_this) {
      return function(element) {
        return _this.unsubscribe(element);
      };
    })(this));
  }

  ListenKeyboard.prototype.subscribe = function(element) {
    element.addEventListener('keypress', this.keypress, false);
    return this.elements.push(element);
  };

  ListenKeyboard.prototype.unsubscribe = function(element) {
    if (-1 === this.elements.indexOf(element)) {
      return;
    }
    element.removeEventListener('keypress', this.keypress, false);
    return this.elements.splice(this.elements.indexOf(element), 1);
  };

  ListenKeyboard.prototype.keypress = function(event) {
    if (!this.outPorts.keypress.isAttached()) {
      return;
    }
    this.outPorts.keypress.send(event.keyCode);
    return this.outPorts.keypress.disconnect();
  };

  ListenKeyboard.prototype.shutdown = function() {
    var element, _i, _len, _ref, _results;
    _ref = this.elements;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      element = _ref[_i];
      _results.push(this.unsubscribe(element));
    }
    return _results;
  };

  return ListenKeyboard;

})(noflo.Component);

exports.getComponent = function() {
  return new ListenKeyboard;
};

});
require.register("noflo-noflo-interaction/components/ListenKeyboardShortcuts.js", function(exports, require, module){
var ListenKeyboardShortcuts, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ListenKeyboardShortcuts = (function(_super) {
  __extends(ListenKeyboardShortcuts, _super);

  ListenKeyboardShortcuts.prototype.description = 'Listen for keyboard shortcuts and route them';

  ListenKeyboardShortcuts.prototype.icon = 'keyboard-o';

  function ListenKeyboardShortcuts() {
    this.keypress = __bind(this.keypress, this);
    this.keys = [];
    this.ignoreInput = true;
    this.inPorts = {
      keys: new noflo.Port('string'),
      ignoreinput: new noflo.Port('boolean'),
      stop: new noflo.Port('bang')
    };
    this.outPorts = {
      shortcut: new noflo.ArrayPort('bang'),
      missed: new noflo.Port('int')
    };
    this.inPorts.keys.on('data', (function(_this) {
      return function(data) {
        _this.keys = _this.normalizeKeys(data);
        return _this.subscribe();
      };
    })(this));
    this.inPorts.ignoreinput.on('data', (function(_this) {
      return function(data) {
        return _this.ignoreInput = String(data) === 'true';
      };
    })(this));
    this.inPorts.stop.on('data', (function(_this) {
      return function() {
        return _this.unsubscribe();
      };
    })(this));
  }

  ListenKeyboardShortcuts.prototype.subscribe = function() {
    return document.addEventListener('keydown', this.keypress, false);
  };

  ListenKeyboardShortcuts.prototype.unsubscribe = function() {
    return document.removeEventListener('keydown', this.keypress, false);
  };

  ListenKeyboardShortcuts.prototype.normalizeKeys = function(data) {
    var index, key, keys, _i, _len;
    keys = data.split(',');
    for (index = _i = 0, _len = keys.length; _i < _len; index = ++_i) {
      key = keys[index];
      switch (key) {
        case '-':
          keys[index] = 189;
          break;
        case '=':
          keys[index] = 187;
          break;
        case '0':
          keys[index] = 48;
          break;
        case 'a':
          keys[index] = 65;
          break;
        case 'x':
          keys[index] = 88;
          break;
        case 'c':
          keys[index] = 67;
          break;
        case 'v':
          keys[index] = 86;
          break;
        case 'z':
          keys[index] = 90;
          break;
        case 'r':
          keys[index] = 82;
          break;
        case 's':
          keys[index] = 83;
      }
    }
    return keys;
  };

  ListenKeyboardShortcuts.prototype.validateTarget = function(event) {
    if (!this.ignoreInput) {
      return true;
    }
    if (event.target.tagName === 'TEXTAREA') {
      return false;
    }
    if (event.target.tagName === 'INPUT') {
      return false;
    }
    if (String(event.target.contentEditable) === 'true') {
      return false;
    }
    return true;
  };

  ListenKeyboardShortcuts.prototype.keypress = function(event) {
    var route;
    if (!(event.ctrlKey || event.metaKey)) {
      return;
    }
    if (!this.validateTarget(event)) {
      return;
    }
    route = this.keys.indexOf(event.keyCode);
    if (route === -1) {
      if (this.outPorts.missed.isAttached()) {
        this.outPorts.missed.send(event.keyCode);
        this.outPorts.missed.disconnect();
      }
      return;
    }
    event.preventDefault();
    event.stopPropagation();
    this.outPorts.shortcut.send(event.keyCode, route);
    return this.outPorts.shortcut.disconnect();
  };

  ListenKeyboardShortcuts.prototype.shutdown = function() {
    return this.unsubscribe();
  };

  return ListenKeyboardShortcuts;

})(noflo.Component);

exports.getComponent = function() {
  return new ListenKeyboardShortcuts;
};

});
require.register("noflo-noflo-interaction/components/ListenMouse.js", function(exports, require, module){
var ListenMouse, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ListenMouse = (function(_super) {
  __extends(ListenMouse, _super);

  ListenMouse.prototype.description = 'Listen to mouse events on a DOM element';

  function ListenMouse() {
    this.dblclick = __bind(this.dblclick, this);
    this.click = __bind(this.click, this);
    this.elements = [];
    this.inPorts = {
      element: new noflo.Port('object')
    };
    this.outPorts = {
      click: new noflo.ArrayPort('object'),
      dblclick: new noflo.ArrayPort('object')
    };
    this.inPorts.element.on('data', (function(_this) {
      return function(element) {
        return _this.subscribe(element);
      };
    })(this));
  }

  ListenMouse.prototype.subscribe = function(element) {
    element.addEventListener('click', this.click, false);
    element.addEventListener('dblclick', this.dblclick, false);
    return this.elements.push(element);
  };

  ListenMouse.prototype.unsubscribe = function() {
    var element, _i, _len, _ref;
    _ref = this.elements;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      element = _ref[_i];
      element.removeEventListener('click', this.click, false);
      element.removeEventListener('dblclick', this.dblclick, false);
    }
    return this.elements = [];
  };

  ListenMouse.prototype.click = function(event) {
    if (!this.outPorts.click.sockets.length) {
      return;
    }
    event.preventDefault();
    event.stopPropagation();
    this.outPorts.click.send(event);
    this.outPorts.click.disconnect();
    return this.updateIcon();
  };

  ListenMouse.prototype.dblclick = function(event) {
    if (!this.outPorts.dblclick.sockets.length) {
      return;
    }
    event.preventDefault();
    event.stopPropagation();
    this.outPorts.dblclick.send(event);
    this.outPorts.dblclick.disconnect();
    return this.updateIcon();
  };

  ListenMouse.prototype.updateIcon = function() {
    if (!this.setIcon) {
      return;
    }
    if (this.timeout) {
      return;
    }
    this.originalIcon = this.getIcon();
    this.setIcon('exclamation-circle');
    return this.timeout = setTimeout((function(_this) {
      return function() {
        _this.setIcon(_this.originalIcon);
        return _this.timeout = null;
      };
    })(this), 200);
  };

  ListenMouse.prototype.shutdown = function() {
    return this.unsubscribe();
  };

  return ListenMouse;

})(noflo.Component);

exports.getComponent = function() {
  return new ListenMouse;
};

});
require.register("noflo-noflo-interaction/components/ListenPointer.js", function(exports, require, module){
var ListenPointer, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ListenPointer = (function(_super) {
  __extends(ListenPointer, _super);

  ListenPointer.prototype.description = 'Listen to pointer events on a DOM element';

  function ListenPointer() {
    this.pointerLeave = __bind(this.pointerLeave, this);
    this.pointerEnter = __bind(this.pointerEnter, this);
    this.pointerOut = __bind(this.pointerOut, this);
    this.pointerOver = __bind(this.pointerOver, this);
    this.pointerMove = __bind(this.pointerMove, this);
    this.pointerCancel = __bind(this.pointerCancel, this);
    this.pointerUp = __bind(this.pointerUp, this);
    this.pointerDown = __bind(this.pointerDown, this);
    this.action = 'none';
    this.capture = false;
    this.propagate = false;
    this.elements = [];
    this.inPorts = {
      element: new noflo.Port('object'),
      action: new noflo.Port('string'),
      capture: new noflo.Port('boolean'),
      propagate: new noflo.Port('boolean')
    };
    this.outPorts = {
      down: new noflo.Port('object'),
      up: new noflo.Port('object'),
      cancel: new noflo.Port('object'),
      move: new noflo.Port('object'),
      over: new noflo.Port('object'),
      out: new noflo.Port('object'),
      enter: new noflo.Port('object'),
      leave: new noflo.Port('object')
    };
    this.inPorts.element.on('data', (function(_this) {
      return function(element) {
        return _this.subscribe(element);
      };
    })(this));
    this.inPorts.action.on('data', (function(_this) {
      return function(action) {
        _this.action = action;
      };
    })(this));
    this.inPorts.capture.on('data', (function(_this) {
      return function(capture) {
        _this.capture = capture;
      };
    })(this));
    this.inPorts.propagate.on('data', (function(_this) {
      return function(propagate) {
        _this.propagate = propagate;
      };
    })(this));
  }

  ListenPointer.prototype.subscribe = function(element) {
    if (element.setAttribute) {
      element.setAttribute('touch-action', this.action);
    }
    element.addEventListener('pointerdown', this.pointerDown, this.capture);
    element.addEventListener('pointerup', this.pointerUp, this.capture);
    element.addEventListener('pointercancel', this.pointerCancel, this.capture);
    element.addEventListener('pointermove', this.pointerMove, this.capture);
    element.addEventListener('pointerover', this.pointerOver, this.capture);
    element.addEventListener('pointerout', this.pointerOut, this.capture);
    element.addEventListener('pointerenter', this.pointerEnter, this.capture);
    element.addEventListener('pointerleave', this.pointerLeave, this.capture);
    return this.elements.push(element);
  };

  ListenPointer.prototype.unsubscribe = function(element) {
    var name, port, _ref, _results;
    if (element.removeAttribute) {
      element.removeAttribute('touch-action');
    }
    element.removeEventListener('pointerdown', this.pointerDown, this.capture);
    element.removeEventListener('pointerup', this.pointerUp, this.capture);
    element.removeEventListener('pointercancel', this.pointerCancel, this.capture);
    element.removeEventListener('pointermove', this.pointerMove, this.capture);
    element.removeEventListener('pointerover', this.pointerOver, this.capture);
    element.removeEventListener('pointerout', this.pointerOut, this.capture);
    element.removeEventListener('pointerenter', this.pointerEnter, this.capture);
    element.removeEventListener('pointerleave', this.pointerLeave, this.capture);
    _ref = this.outPorts;
    _results = [];
    for (name in _ref) {
      port = _ref[name];
      if (!port.isAttached()) {
        continue;
      }
      _results.push(port.disconnect());
    }
    return _results;
  };

  ListenPointer.prototype.shutdown = function() {
    var element, _i, _len, _ref;
    _ref = this.elements;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      element = _ref[_i];
      this.unsubscribe(element);
    }
    return this.elements = [];
  };

  ListenPointer.prototype.pointerDown = function(event) {
    return this.handle(event, 'down');
  };

  ListenPointer.prototype.pointerUp = function(event) {
    return this.handle(event, 'up');
  };

  ListenPointer.prototype.pointerCancel = function(event) {
    return this.handle(event, 'cancel');
  };

  ListenPointer.prototype.pointerMove = function(event) {
    return this.handle(event, 'move');
  };

  ListenPointer.prototype.pointerOver = function(event) {
    return this.handle(event, 'over');
  };

  ListenPointer.prototype.pointerOut = function(event) {
    return this.handle(event, 'out');
  };

  ListenPointer.prototype.pointerEnter = function(event) {
    return this.handle(event, 'enter');
  };

  ListenPointer.prototype.pointerLeave = function(event) {
    return this.handle(event, 'leave');
  };

  ListenPointer.prototype.handle = function(event, type) {
    var name, port, _ref, _results;
    event.preventDefault();
    if (!this.propagate) {
      event.stopPropagation();
    }
    if (!this.outPorts[type].isAttached()) {
      return;
    }
    this.outPorts[type].beginGroup(event.pointerId);
    this.outPorts[type].send(event);
    this.outPorts[type].endGroup();
    if (type === 'up' || type === 'cancel' || type === 'leave') {
      _ref = this.outPorts;
      _results = [];
      for (name in _ref) {
        port = _ref[name];
        if (!port.isAttached()) {
          continue;
        }
        _results.push(port.disconnect());
      }
      return _results;
    }
  };

  return ListenPointer;

})(noflo.Component);

exports.getComponent = function() {
  return new ListenPointer;
};

});
require.register("noflo-noflo-interaction/components/ListenResize.js", function(exports, require, module){
var ListenResize, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ListenResize = (function(_super) {
  __extends(ListenResize, _super);

  ListenResize.prototype.description = 'Listen to window resize events';

  ListenResize.prototype.icon = 'desktop';

  function ListenResize() {
    this.sendSize = __bind(this.sendSize, this);
    this.inPorts = {
      start: new noflo.Port('bang'),
      stop: new noflo.Port('bang')
    };
    this.outPorts = {
      width: new noflo.Port('number'),
      height: new noflo.Port('number')
    };
    this.inPorts.start.on('data', (function(_this) {
      return function() {
        _this.sendSize();
        return _this.subscribe();
      };
    })(this));
    this.inPorts.stop.on('data', (function(_this) {
      return function() {
        return _this.unsubscribe();
      };
    })(this));
  }

  ListenResize.prototype.subscribe = function() {
    return window.addEventListener('resize', this.sendSize, false);
  };

  ListenResize.prototype.unsubscribe = function() {
    return window.removeEventListener('resize', this.sendSize, false);
  };

  ListenResize.prototype.sendSize = function() {
    if (this.outPorts.width.isAttached()) {
      this.outPorts.width.send(window.innerWidth);
      this.outPorts.width.disconnect();
    }
    if (this.outPorts.height.isAttached()) {
      this.outPorts.height.send(window.innerHeight);
      return this.outPorts.height.disconnect();
    }
  };

  ListenResize.prototype.shutdown = function() {
    return this.unsubscribe();
  };

  return ListenResize;

})(noflo.Component);

exports.getComponent = function() {
  return new ListenResize;
};

});
require.register("noflo-noflo-interaction/components/ListenScroll.js", function(exports, require, module){
var ListenScroll, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ListenScroll = (function(_super) {
  __extends(ListenScroll, _super);

  ListenScroll.prototype.description = 'Listen to scroll events on the browser window';

  ListenScroll.prototype.icon = 'arrows-v';

  function ListenScroll() {
    this.scroll = __bind(this.scroll, this);
    this.inPorts = {
      start: new noflo.Port('bang'),
      stop: new noflo.Port('bang')
    };
    this.outPorts = {
      top: new noflo.Port('number'),
      bottom: new noflo.Port('number'),
      left: new noflo.Port('number'),
      right: new noflo.Port('number')
    };
    this.inPorts.start.on('data', (function(_this) {
      return function() {
        return _this.subscribe();
      };
    })(this));
    this.inPorts.stop.on('data', (function(_this) {
      return function() {
        return _this.unsubscribe();
      };
    })(this));
  }

  ListenScroll.prototype.subscribe = function() {
    return window.addEventListener('scroll', this.scroll, false);
  };

  ListenScroll.prototype.unsubscribe = function() {
    return window.removeEventListenr('scroll', this.scroll, false);
  };

  ListenScroll.prototype.scroll = function(event) {
    var bottom, left, right, top;
    top = window.scrollY;
    left = window.scrollX;
    if (this.outPorts.top.isAttached()) {
      this.outPorts.top.send(top);
      this.outPorts.top.disconnect();
    }
    if (this.outPorts.bottom.isAttached()) {
      bottom = top + window.innerHeight;
      this.outPorts.bottom.send(bottom);
      this.outPorts.bottom.disconnect();
    }
    if (this.outPorts.left.isAttached()) {
      this.outPorts.left.send(left);
      this.outPorts.left.disconnect();
    }
    if (this.outPorts.right.isAttached()) {
      right = left + window.innerWidth;
      this.outPorts.right.send(right);
      return this.outPorts.right.disconnect();
    }
  };

  ListenScroll.prototype.shutdown = function() {
    return this.unsubscribe();
  };

  return ListenScroll;

})(noflo.Component);

exports.getComponent = function() {
  return new ListenScroll;
};

});
require.register("noflo-noflo-interaction/components/ListenSpeech.js", function(exports, require, module){
var ListenSpeech, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ListenSpeech = (function(_super) {
  __extends(ListenSpeech, _super);

  ListenSpeech.prototype.description = 'Listen for user\'s microphone and recognize phrases';

  ListenSpeech.prototype.icon = 'microphone';

  function ListenSpeech() {
    this.handleError = __bind(this.handleError, this);
    this.handleResult = __bind(this.handleResult, this);
    this.recognition = false;
    this.sent = [];
    this.inPorts = {
      start: new noflo.Port('bang'),
      stop: new noflo.Port('bang')
    };
    this.outPorts = {
      result: new noflo.Port('string'),
      error: new noflo.Port('object')
    };
    this.inPorts.start.on('data', (function(_this) {
      return function() {
        return _this.startListening();
      };
    })(this));
    this.inPorts.stop.on('data', (function(_this) {
      return function() {
        return _this.stopListening();
      };
    })(this));
  }

  ListenSpeech.prototype.startListening = function() {
    if (!window.webkitSpeechRecognition) {
      this.handleError(new Error('Speech recognition support not available'));
    }
    this.recognition = new window.webkitSpeechRecognition;
    this.recognition.continuous = true;
    this.recognition.start();
    this.outPorts.result.connect();
    this.recognition.onresult = this.handleResult;
    return this.recognition.onerror = this.handleError;
  };

  ListenSpeech.prototype.handleResult = function(event) {
    var idx, result, _i, _len, _ref, _results;
    _ref = event.results;
    _results = [];
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      result = _ref[idx];
      if (!result.isFinal) {
        continue;
      }
      if (this.sent.indexOf(idx) !== -1) {
        continue;
      }
      this.outPorts.result.send(result[0].transcript);
      _results.push(this.sent.push(idx));
    }
    return _results;
  };

  ListenSpeech.prototype.handleError = function(error) {
    if (this.outPorts.error.isAttached()) {
      this.outPorts.error.send(error);
      this.outPorts.error.disconnect();
      return;
    }
    throw error;
  };

  ListenSpeech.prototype.stopListening = function() {
    if (!this.recognition) {
      return;
    }
    this.outPorts.result.disconnect();
    this.recognition.stop();
    this.recognition = null;
    return this.sent = [];
  };

  ListenSpeech.prototype.shutdown = function() {
    return this.stopListening();
  };

  return ListenSpeech;

})(noflo.Component);

exports.getComponent = function() {
  return new ListenSpeech;
};

});
require.register("noflo-noflo-interaction/components/ListenTouch.js", function(exports, require, module){
var ListenTouch, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ListenTouch = (function(_super) {
  __extends(ListenTouch, _super);

  ListenTouch.prototype.description = 'Listen to touch events on a DOM element';

  ListenTouch.prototype.icon = 'hand-o-up';

  function ListenTouch() {
    this.touchend = __bind(this.touchend, this);
    this.touchmove = __bind(this.touchmove, this);
    this.touchstart = __bind(this.touchstart, this);
    this.elements = [];
    this.inPorts = {
      element: new noflo.Port('object')
    };
    this.outPorts = {
      start: new noflo.ArrayPort('object'),
      movex: new noflo.ArrayPort('number'),
      movey: new noflo.ArrayPort('number'),
      end: new noflo.ArrayPort('object')
    };
    this.inPorts.element.on('data', (function(_this) {
      return function(element) {
        return _this.subscribe(element);
      };
    })(this));
  }

  ListenTouch.prototype.subscribe = function(element) {
    element.addEventListener('touchstart', this.touchstart, false);
    element.addEventListener('touchmove', this.touchmove, false);
    element.addEventListener('touchend', this.touchend, false);
    return this.elements.push(element);
  };

  ListenTouch.prototype.unsubscribe = function() {
    var element, _i, _len, _ref;
    _ref = this.elements;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      element = _ref[_i];
      element.removeEventListener('touchstart', this.touchstart, false);
      element.removeEventListener('touchmove', this.touchmove, false);
      element.removeEventListener('touchend', this.touchend, false);
    }
    return this.elements = [];
  };

  ListenTouch.prototype.touchstart = function(event) {
    var idx, touch, _i, _len, _ref;
    event.preventDefault();
    event.stopPropagation();
    if (!event.changedTouches) {
      return;
    }
    if (!event.changedTouches.length) {
      return;
    }
    _ref = event.changedTouches;
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      touch = _ref[idx];
      this.outPorts.start.beginGroup(idx);
      this.outPorts.start.send(event);
      this.outPorts.start.endGroup();
    }
    return this.outPorts.start.disconnect();
  };

  ListenTouch.prototype.touchmove = function(event) {
    var idx, touch, _i, _len, _ref, _results;
    event.preventDefault();
    event.stopPropagation();
    if (!event.changedTouches) {
      return;
    }
    if (!event.changedTouches.length) {
      return;
    }
    _ref = event.changedTouches;
    _results = [];
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      touch = _ref[idx];
      this.outPorts.movex.beginGroup(idx);
      this.outPorts.movex.send(touch.pageX);
      this.outPorts.movex.endGroup();
      this.outPorts.movey.beginGroup(idx);
      this.outPorts.movey.send(touch.pageY);
      _results.push(this.outPorts.movey.endGroup());
    }
    return _results;
  };

  ListenTouch.prototype.touchend = function(event) {
    var idx, touch, _i, _len, _ref;
    event.preventDefault();
    event.stopPropagation();
    if (!event.changedTouches) {
      return;
    }
    if (!event.changedTouches.length) {
      return;
    }
    if (this.outPorts.movex.isConnected()) {
      this.outPorts.movex.disconnect();
    }
    if (this.outPorts.movey.isConnected()) {
      this.outPorts.movey.disconnect();
    }
    _ref = event.changedTouches;
    for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
      touch = _ref[idx];
      this.outPorts.end.beginGroup(idx);
      this.outPorts.end.send(event);
      this.outPorts.end.endGroup();
    }
    return this.outPorts.end.disconnect();
  };

  ListenTouch.prototype.shutdown = function() {
    return this.unsubscribe();
  };

  return ListenTouch;

})(noflo.Component);

exports.getComponent = function() {
  return new ListenTouch;
};

});
require.register("noflo-noflo-interaction/components/SetHash.js", function(exports, require, module){
var SetHash, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SetHash = (function(_super) {
  __extends(SetHash, _super);

  SetHash.prototype.description = 'Set the hash in browser\'s URL bar';

  SetHash.prototype.icon = 'slack';

  function SetHash() {
    this.inPorts = {
      hash: new noflo.ArrayPort('string')
    };
    this.outPorts = {
      out: new noflo.Port('string')
    };
    this.inPorts.hash.on('data', (function(_this) {
      return function(data) {
        window.location.hash = "#" + data;
        if (_this.outPorts.out.isAttached()) {
          return _this.outPorts.out.send(data);
        }
      };
    })(this));
    this.inPorts.hash.on('disconnect', (function(_this) {
      return function() {
        if (_this.outPorts.out.isAttached()) {
          return _this.outPorts.out.disconnect();
        }
      };
    })(this));
  }

  return SetHash;

})(noflo.Component);

exports.getComponent = function() {
  return new SetHash;
};

});
require.register("noflo-noflo-interaction/components/ReadCoordinates.js", function(exports, require, module){
var ReadCoordinates, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ReadCoordinates = (function(_super) {
  __extends(ReadCoordinates, _super);

  ReadCoordinates.prototype.description = 'Read the coordinates from a DOM event';

  function ReadCoordinates() {
    this.inPorts = {
      event: new noflo.Port('object')
    };
    this.outPorts = {
      screen: new noflo.Port('object'),
      client: new noflo.Port('object'),
      page: new noflo.Port('object')
    };
    this.inPorts.event.on('begingroup', (function(_this) {
      return function(group) {
        if (_this.outPorts.screen.isAttached()) {
          _this.outPorts.screen.beginGroup(group);
        }
        if (_this.outPorts.client.isAttached()) {
          _this.outPorts.client.beginGroup(group);
        }
        if (_this.outPorts.page.isAttached()) {
          return _this.outPorts.page.beginGroup(group);
        }
      };
    })(this));
    this.inPorts.event.on('data', (function(_this) {
      return function(data) {
        return _this.read(data);
      };
    })(this));
    this.inPorts.event.on('endgroup', (function(_this) {
      return function() {
        if (_this.outPorts.screen.isAttached()) {
          _this.outPorts.screen.endGroup();
        }
        if (_this.outPorts.client.isAttached()) {
          _this.outPorts.client.endGroup();
        }
        if (_this.outPorts.page.isAttached()) {
          return _this.outPorts.page.endGroup();
        }
      };
    })(this));
    this.inPorts.event.on('disconnect', (function(_this) {
      return function() {
        if (_this.outPorts.screen.isAttached()) {
          _this.outPorts.screen.disconnect();
        }
        if (_this.outPorts.client.isAttached()) {
          _this.outPorts.client.disconnect();
        }
        if (_this.outPorts.page.isAttached()) {
          return _this.outPorts.page.disconnect();
        }
      };
    })(this));
  }

  ReadCoordinates.prototype.read = function(event) {
    if (!event) {
      return;
    }
    if (this.outPorts.screen.isAttached() && event.screenX !== void 0) {
      this.outPorts.screen.send({
        x: event.screenX,
        y: event.screenY
      });
    }
    if (this.outPorts.client.isAttached() && event.clientX !== void 0) {
      this.outPorts.client.send({
        x: event.clientX,
        y: event.clientY
      });
    }
    if (this.outPorts.page.isAttached() && event.pageX !== void 0) {
      return this.outPorts.page.send({
        x: event.pageX,
        y: event.pageY
      });
    }
  };

  return ReadCoordinates;

})(noflo.Component);

exports.getComponent = function() {
  return new ReadCoordinates;
};

});
require.register("noflo-noflo-interaction/components/ReadGamepad.js", function(exports, require, module){
var ReadGamepad, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ReadGamepad = (function(_super) {
  __extends(ReadGamepad, _super);

  ReadGamepad.prototype.description = 'Read the state of a gamepad';

  ReadGamepad.prototype.icon = 'gamepad';

  function ReadGamepad() {
    this.lastTimestamp;
    this.inPorts = {
      gamepad: new noflo.Port('int')
    };
    this.outPorts = {
      out: new noflo.Port('object'),
      error: new noflo.Port('string')
    };
    this.inPorts.gamepad.on('data', (function(_this) {
      return function(number) {
        return _this.readGamepad(number);
      };
    })(this));
  }

  ReadGamepad.prototype.readGamepad = function(number) {
    var gamepadState, msg;
    if (!navigator.webkitGetGamepads) {
      msg = "no webkit gamepad api available";
      if (this.outPorts.error.isAttached()) {
        this.outPorts.error.send(msg);
        this.outPorts.error.disconnect();
        return;
      } else {
        throw new Error(msg);
      }
    }
    gamepadState = navigator.webkitGetGamepads()[number];
    if (!gamepadState) {
      msg = "state for gamepad '" + number + "' could not been read";
      if (this.outPorts.error.isAttached()) {
        this.outPorts.error.send(msg);
        this.outPorts.error.disconnect();
        return;
      } else {
        throw new Error(msg);
      }
    }
    if (this.lastTimestamp !== gamepadState.timestamp) {
      this.lastTimestamp = gamepadState.timestamp;
      return this.outPorts.out.send(gamepadState);
    }
  };

  return ReadGamepad;

})(noflo.Component);

exports.getComponent = function() {
  return new ReadGamepad;
};

});
require.register("noflo-noflo-runtime-base/src/Base.js", function(exports, require, module){
var BaseTransport, protocols;

protocols = {
  Runtime: require('./protocol/Runtime'),
  Graph: require('./protocol/Graph'),
  Network: require('./protocol/Network'),
  Component: require('./protocol/Component')
};

BaseTransport = (function() {
  function BaseTransport(options) {
    var path;
    this.options = options;
    if (!this.options) {
      this.options = {};
    }
    this.version = '0.4';
    this.component = new protocols.Component(this);
    this.graph = new protocols.Graph(this);
    this.network = new protocols.Network(this);
    this.runtime = new protocols.Runtime(this);
    this.context = null;
    if (this.options.defaultGraph != null) {
      this.options.defaultGraph.baseDir = this.options.baseDir;
      path = 'default/main';
      this.context = 'none';
      this.graph.registerGraph(path, this.options.defaultGraph);
      this.network.initNetwork(this.options.defaultGraph, {
        graph: path
      }, this.context);
    }
    if ((this.options.captureOutput != null) && this.options.captureOutput) {
      this.startCapture();
    }
  }

  BaseTransport.prototype.send = function(protocol, topic, payload, context) {};

  BaseTransport.prototype.sendAll = function(protocol, topic, payload, context) {};

  BaseTransport.prototype.receive = function(protocol, topic, payload, context) {
    this.context = context;
    switch (protocol) {
      case 'runtime':
        return this.runtime.receive(topic, payload, context);
      case 'graph':
        return this.graph.receive(topic, payload, context);
      case 'network':
        return this.network.receive(topic, payload, context);
      case 'component':
        return this.component.receive(topic, payload, context);
    }
  };

  return BaseTransport;

})();

module.exports = BaseTransport;

});
require.register("noflo-noflo-runtime-base/src/protocol/Graph.js", function(exports, require, module){
var GraphProtocol, noflo;

noflo = require('noflo');

GraphProtocol = (function() {
  function GraphProtocol(transport) {
    this.transport = transport;
    this.graphs = {};
  }

  GraphProtocol.prototype.send = function(topic, payload, context) {
    return this.transport.send('graph', topic, payload, context);
  };

  GraphProtocol.prototype.sendAll = function(topic, payload) {
    return this.transport.sendAll('graph', topic, payload);
  };

  GraphProtocol.prototype.receive = function(topic, payload, context) {
    var graph;
    if (topic !== 'clear') {
      graph = this.resolveGraph(payload, context);
      if (!graph) {
        return;
      }
    }
    switch (topic) {
      case 'clear':
        return this.initGraph(payload, context);
      case 'addnode':
        return this.addNode(graph, payload, context);
      case 'removenode':
        return this.removeNode(graph, payload, context);
      case 'renamenode':
        return this.renameNode(graph, payload, context);
      case 'changenode':
        return this.changeNode(graph, payload, context);
      case 'addedge':
        return this.addEdge(graph, payload, context);
      case 'removeedge':
        return this.removeEdge(graph, payload, context);
      case 'changeedge':
        return this.changeEdge(graph, payload, context);
      case 'addinitial':
        return this.addInitial(graph, payload, context);
      case 'removeinitial':
        return this.removeInitial(graph, payload, context);
      case 'addinport':
        return this.addInport(graph, payload, context);
      case 'removeinport':
        return this.removeInport(graph, payload, context);
      case 'renameinport':
        return this.renameInport(graph, payload, context);
      case 'addoutport':
        return this.addOutport(graph, payload, context);
      case 'removeoutport':
        return this.removeOutport(graph, payload, context);
      case 'renameoutport':
        return this.renameOutport(graph, payload, context);
      case 'addgroup':
        return this.addGroup(graph, payload, context);
      case 'removegroup':
        return this.removeGroup(graph, payload, context);
      case 'renamegroup':
        return this.renameGroup(graph, payload, context);
      case 'changegroup':
        return this.changeGroup(graph, payload, context);
    }
  };

  GraphProtocol.prototype.resolveGraph = function(payload, context) {
    if (!payload.graph) {
      this.send('error', new Error('No graph specified'), context);
      return;
    }
    if (!this.graphs[payload.graph]) {
      this.send('error', new Error('Requested graph not found'), context);
      return;
    }
    return this.graphs[payload.graph];
  };

  GraphProtocol.prototype.getLoader = function(baseDir) {
    if (!this.loaders[baseDir]) {
      this.loaders[baseDir] = new noflo.ComponentLoader(baseDir);
    }
    return this.loaders[baseDir];
  };

  GraphProtocol.prototype.sendGraph = function(id, graph, context) {
    var payload;
    payload = {
      graph: id,
      description: graph.toJSON()
    };
    return this.send('graph', payload, context);
  };

  GraphProtocol.prototype.initGraph = function(payload, context) {
    var fullName, graph;
    if (!payload.id) {
      this.send('error', new Error('No graph ID provided'), context);
      return;
    }
    if (!payload.name) {
      payload.name = 'NoFlo runtime';
    }
    graph = new noflo.Graph(payload.name);
    fullName = payload.id;
    if (payload.library) {
      payload.library = payload.library.replace('noflo-', '');
      graph.properties.library = payload.library;
      fullName = "" + payload.library + "/" + fullName;
    }
    if (payload.icon) {
      graph.properties.icon = payload.icon;
    }
    if (payload.description) {
      graph.properties.description = payload.description;
    }
    graph.baseDir = this.transport.options.baseDir;
    this.subscribeGraph(payload.id, graph, context);
    if (payload.main) {
      this.transport.runtime.setMainGraph(fullName, graph, context);
    } else {
      this.transport.component.registerGraph(fullName, graph, context);
    }
    this.graphs[payload.id] = graph;
    return this.sendAll('clear', payload, context);
  };

  GraphProtocol.prototype.registerGraph = function(id, graph) {
    if (id === 'default/main') {
      this.transport.runtime.setMainGraph(id, graph);
    }
    this.subscribeGraph(id, graph, '');
    return this.graphs[id] = graph;
  };

  GraphProtocol.prototype.subscribeGraph = function(id, graph, context) {
    graph.on('addNode', (function(_this) {
      return function(node) {
        node.graph = id;
        return _this.sendAll('addnode', node, context);
      };
    })(this));
    graph.on('removeNode', (function(_this) {
      return function(node) {
        node.graph = id;
        return _this.sendAll('removenode', node, context);
      };
    })(this));
    graph.on('renameNode', (function(_this) {
      return function(oldId, newId) {
        return _this.sendAll('renamenode', {
          from: oldId,
          to: newId,
          graph: id
        }, context);
      };
    })(this));
    graph.on('changeNode', (function(_this) {
      return function(node, before) {
        return _this.sendAll('changenode', {
          id: node.id,
          metadata: node.metadata,
          graph: id
        }, context);
      };
    })(this));
    graph.on('addEdge', (function(_this) {
      return function(edge) {
        var edgeData;
        if (typeof edge.from.index !== 'number') {
          delete edge.from.index;
        }
        if (typeof edge.to.index !== 'number') {
          delete edge.to.index;
        }
        edgeData = {
          src: edge.from,
          tgt: edge.to,
          metadata: edge.metadata,
          graph: id
        };
        return _this.sendAll('addedge', edgeData, context);
      };
    })(this));
    graph.on('removeEdge', (function(_this) {
      return function(edge) {
        var edgeData;
        edgeData = {
          src: edge.from,
          tgt: edge.to,
          metadata: edge.metadata,
          graph: id
        };
        return _this.sendAll('removeedge', edgeData, context);
      };
    })(this));
    graph.on('changeEdge', (function(_this) {
      return function(edge) {
        var edgeData;
        edgeData = {
          src: edge.from,
          tgt: edge.to,
          metadata: edge.metadata,
          graph: id
        };
        return _this.sendAll('changeedge', edgeData, context);
      };
    })(this));
    graph.on('addInitial', (function(_this) {
      return function(iip) {
        var iipData;
        iipData = {
          src: iip.from,
          tgt: iip.to,
          metadata: iip.metadata,
          graph: id
        };
        return _this.sendAll('addinitial', iipData, context);
      };
    })(this));
    graph.on('removeInitial', (function(_this) {
      return function(iip) {
        var iipData;
        iipData = {
          src: iip.from,
          tgt: iip.to,
          metadata: iip.metadata,
          graph: id
        };
        return _this.sendAll('removeinitial', iipData, context);
      };
    })(this));
    graph.on('addGroup', (function(_this) {
      return function(group) {
        var groupData;
        groupData = {
          name: group.name,
          nodes: group.nodes,
          metadata: group.metadata,
          graph: id
        };
        return _this.sendAll('addgroup', groupData, context);
      };
    })(this));
    graph.on('removeGroup', (function(_this) {
      return function(group) {
        var groupData;
        groupData = {
          name: group.name,
          graph: id
        };
        return _this.sendAll('removegroup', groupData, context);
      };
    })(this));
    graph.on('renameGroup', (function(_this) {
      return function(oldName, newName) {
        var groupData;
        groupData = {
          from: oldName,
          to: newName,
          graph: id
        };
        return _this.sendAll('renamegroup', groupData, context);
      };
    })(this));
    return graph.on('changeGroup', (function(_this) {
      return function(group) {
        var groupData;
        groupData = {
          name: group.name,
          metadata: group.metadata,
          graph: id
        };
        return _this.sendAll('changegroup', groupData, context);
      };
    })(this));
  };

  GraphProtocol.prototype.addNode = function(graph, node, context) {
    if (!(node.id || node.component)) {
      this.send('error', new Error('No ID or component supplied'), context);
      return;
    }
    return graph.addNode(node.id, node.component, node.metadata);
  };

  GraphProtocol.prototype.removeNode = function(graph, payload, context) {
    if (!payload.id) {
      this.send('error', new Error('No ID supplied'), context);
      return;
    }
    return graph.removeNode(payload.id);
  };

  GraphProtocol.prototype.renameNode = function(graph, payload, context) {
    if (!(payload.from || payload.to)) {
      this.send('error', new Error('No from or to supplied'), context);
      return;
    }
    return graph.renameNode(payload.from, payload.to);
  };

  GraphProtocol.prototype.changeNode = function(graph, payload, context) {
    if (!(payload.id || payload.metadata)) {
      this.send('error', new Error('No id or metadata supplied'), context);
      return;
    }
    return graph.setNodeMetadata(payload.id, payload.metadata);
  };

  GraphProtocol.prototype.addEdge = function(graph, edge, context) {
    if (!(edge.src || edge.tgt)) {
      this.send('error', new Error('No src or tgt supplied'), context);
      return;
    }
    if (typeof edge.src.index === 'number' || typeof edge.tgt.index === 'number') {
      if (graph.addEdgeIndex) {
        graph.addEdgeIndex(edge.src.node, edge.src.port, edge.src.index, edge.tgt.node, edge.tgt.port, edge.tgt.index, edge.metadata);
        return;
      }
    }
    return graph.addEdge(edge.src.node, edge.src.port, edge.tgt.node, edge.tgt.port, edge.metadata);
  };

  GraphProtocol.prototype.removeEdge = function(graph, edge, context) {
    if (!(edge.src || edge.tgt)) {
      this.send('error', new Error('No src or tgt supplied'), context);
      return;
    }
    return graph.removeEdge(edge.src.node, edge.src.port, edge.tgt.node, edge.tgt.port);
  };

  GraphProtocol.prototype.changeEdge = function(graph, edge, context) {
    if (!(edge.src || edge.tgt)) {
      this.send('error', new Error('No src or tgt supplied'), context);
      return;
    }
    return graph.setEdgeMetadata(edge.src.node, edge.src.port, edge.tgt.node, edge.tgt.port, edge.metadata);
  };

  GraphProtocol.prototype.addInitial = function(graph, payload, context) {
    if (!(payload.src || payload.tgt)) {
      this.send('error', new Error('No src or tgt supplied'), context);
      return;
    }
    if (graph.addInitialIndex && typeof payload.tgt.index === 'number') {
      graph.addInitialIndex(payload.src.data, payload.tgt.node, payload.tgt.port, payload.tgt.index, payload.metadata);
      return;
    }
    return graph.addInitial(payload.src.data, payload.tgt.node, payload.tgt.port, payload.metadata);
  };

  GraphProtocol.prototype.removeInitial = function(graph, payload, context) {
    if (!payload.tgt) {
      this.send('error', new Error('No tgt supplied'), context);
      return;
    }
    return graph.removeInitial(payload.tgt.node, payload.tgt.port);
  };

  GraphProtocol.prototype.addInport = function(graph, payload, context) {
    if (!(payload["public"] || payload.node || payload.port)) {
      this.send('error', new Error('Missing exported inport information'), context);
      return;
    }
    return graph.addInport(payload["public"], payload.node, payload.port, payload.metadata);
  };

  GraphProtocol.prototype.removeInport = function(graph, payload, context) {
    if (!payload["public"]) {
      this.send('error', new Error('Missing exported inport name'), context);
      return;
    }
    return graph.removeInport(payload["public"]);
  };

  GraphProtocol.prototype.renameInport = function(graph, payload, context) {
    if (!(payload.from || payload.to)) {
      this.send('error', new Error('No from or to supplied'), context);
      return;
    }
    return graph.renameInport(payload.from, payload.to);
  };

  GraphProtocol.prototype.addOutport = function(graph, payload, context) {
    if (!(payload["public"] || payload.node || payload.port)) {
      this.send('error', new Error('Missing exported outport information'), context);
      return;
    }
    return graph.addOutport(payload["public"], payload.node, payload.port, payload.metadata);
  };

  GraphProtocol.prototype.removeOutport = function(graph, payload, context) {
    if (!payload["public"]) {
      this.send('error', new Error('Missing exported outport name'), context);
      return;
    }
    return graph.removeOutport(payload["public"]);
  };

  GraphProtocol.prototype.renameOutport = function(graph, payload, context) {
    if (!(payload.from || payload.to)) {
      this.send('error', new Error('No from or to supplied'), context);
      return;
    }
    return graph.renameOutport(payload.from, payload.to);
  };

  GraphProtocol.prototype.addGroup = function(graph, payload, context) {
    if (!(payload.name || payload.nodes || payload.metadata)) {
      this.send('error', new Error('No name or nodes or metadata supplied'), context);
      return;
    }
    return graph.addGroup(payload.name, payload.nodes, payload.metadata);
  };

  GraphProtocol.prototype.removeGroup = function(graph, payload, context) {
    if (!payload.name) {
      this.send('error', new Error('No name supplied'), context);
      return;
    }
    return graph.removeGroup(payload.name);
  };

  GraphProtocol.prototype.renameGroup = function(graph, payload, context) {
    if (!(payload.from || payload.to)) {
      this.send('error', new Error('No from or to supplied'), context);
      return;
    }
    return graph.renameGroup(payload.from, payload.to);
  };

  GraphProtocol.prototype.changeGroup = function(graph, payload, context) {
    if (!(payload.name || payload.metadata)) {
      this.send('error', new Error('No name or metadata supplied'), context);
      return;
    }
    return graph.setEdgeMetadata(payload.name, payload.metadata);
  };

  return GraphProtocol;

})();

module.exports = GraphProtocol;

});
require.register("noflo-noflo-runtime-base/src/protocol/Network.js", function(exports, require, module){
var EventEmitter, NetworkProtocol, getConnectionSignature, getEdgeSignature, getPortSignature, getSocketSignature, noflo, prepareSocketEvent,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

EventEmitter = require('events').EventEmitter;

prepareSocketEvent = function(event, req) {
  var payload;
  payload = {
    id: event.id,
    graph: req.graph
  };
  if (event.socket.from) {
    payload.src = {
      node: event.socket.from.process.id,
      port: event.socket.from.port
    };
  }
  if (event.socket.to) {
    payload.tgt = {
      node: event.socket.to.process.id,
      port: event.socket.to.port
    };
  }
  if (event.subgraph) {
    payload.subgraph = event.subgraph;
  }
  if (event.group) {
    payload.group = event.group;
  }
  if (event.data) {
    if (!noflo.isBrowser()) {
      if (Buffer.isBuffer(event.data)) {
        event.data = event.data.slice(0, 20);
      }
    }
    if (event.data.toJSON) {
      payload.data = event.data.toJSON();
    }
    if (event.data.toString) {
      payload.data = event.data.toString();
      if (payload.data === '[object Object]') {
        try {
          payload.data = JSON.parse(JSON.stringify(event.data));
        } catch (_error) {}
      }
    } else {
      payload.data = event.data;
    }
  }
  if (event.subgraph) {
    payload.subgraph = event.subgraph;
  }
  return payload;
};

getPortSignature = function(item) {
  if (!item) {
    return '';
  }
  return item.process + '(' + item.port + ')';
};

getEdgeSignature = function(edge) {
  return getPortSignature(edge.src) + ' -> ' + getPortSignature(edge.tgt);
};

getConnectionSignature = function(connection) {
  if (!connection) {
    return '';
  }
  return connection.process.id + '(' + connection.port + ')';
};

getSocketSignature = function(socket) {
  return getConnectionSignature(socket.from) + ' -> ' + getConnectionSignature(socket.to);
};

NetworkProtocol = (function(_super) {
  __extends(NetworkProtocol, _super);

  function NetworkProtocol(transport) {
    this.transport = transport;
    this.networks = {};
  }

  NetworkProtocol.prototype.send = function(topic, payload, context) {
    return this.transport.send('network', topic, payload, context);
  };

  NetworkProtocol.prototype.sendAll = function(topic, payload) {
    return this.transport.sendAll('network', topic, payload);
  };

  NetworkProtocol.prototype.receive = function(topic, payload, context) {
    var graph;
    if (topic !== 'list') {
      graph = this.resolveGraph(payload, context);
      if (!graph) {
        return;
      }
    }
    switch (topic) {
      case 'start':
        return this.startNetwork(graph, payload, context);
      case 'stop':
        return this.stopNetwork(graph, payload, context);
      case 'edges':
        return this.updateEdgesFilter(graph, payload, context);
      case 'debug':
        return this.debugNetwork(graph, payload, context);
      case 'getstatus':
        return this.getStatus(graph, payload, context);
    }
  };

  NetworkProtocol.prototype.resolveGraph = function(payload, context) {
    if (!payload.graph) {
      this.send('error', new Error('No graph specified'), context);
      return;
    }
    if (!this.transport.graph.graphs[payload.graph]) {
      this.send('error', new Error('Requested graph not found'), context);
      return;
    }
    return this.transport.graph.graphs[payload.graph];
  };

  NetworkProtocol.prototype.updateEdgesFilter = function(graph, payload, context) {
    var edge, network, signature, _i, _len, _ref, _results;
    network = this.networks[payload.graph];
    if (network) {
      network.filters = {};
    } else {
      network = {
        network: null,
        filters: {}
      };
      this.networks[payload.graph] = network;
    }
    _ref = payload.edges;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      edge = _ref[_i];
      signature = getEdgeSignature(edge);
      _results.push(network.filters[signature] = true);
    }
    return _results;
  };

  NetworkProtocol.prototype.eventFiltered = function(graph, event) {
    var sign;
    if (!this.transport.options.filterData) {
      return true;
    }
    sign = getSocketSignature(event.socket);
    return this.networks[graph].filters[sign];
  };

  NetworkProtocol.prototype.initNetwork = function(graph, payload, context) {
    var network;
    if (this.networks[payload.graph]) {
      network = this.networks[payload.graph].network;
      network.stop();
      delete this.networks[payload.graph];
      this.emit('removenetwork', network, this.networks);
    }
    graph.componentLoader = this.transport.component.getLoader(graph.baseDir);
    return noflo.createNetwork(graph, (function(_this) {
      return function(network) {
        if (_this.networks[payload.graph]) {
          _this.networks[payload.graph].network = network;
        } else {
          _this.networks[payload.graph] = {
            network: network,
            filters: {}
          };
        }
        _this.emit('addnetwork', network, _this.networks);
        _this.subscribeNetwork(network, payload, context);
        return network.connect(function() {
          return network.start();
        });
      };
    })(this), true);
  };

  NetworkProtocol.prototype.subscribeNetwork = function(network, payload, context) {
    network.on('start', (function(_this) {
      return function(event) {
        return _this.sendAll('started', {
          time: event.start,
          graph: payload.graph,
          running: true,
          started: network.isStarted()
        }, context);
      };
    })(this));
    network.on('end', (function(_this) {
      return function(event) {
        return _this.sendAll('stopped', {
          time: new Date,
          uptime: event.uptime,
          graph: payload.graph,
          running: false,
          started: network.isStarted()
        }, context);
      };
    })(this));
    network.on('icon', (function(_this) {
      return function(event) {
        event.graph = payload.graph;
        return _this.sendAll('icon', event, context);
      };
    })(this));
    network.on('connect', (function(_this) {
      return function(event) {
        return _this.sendAll('connect', prepareSocketEvent(event, payload), context);
      };
    })(this));
    network.on('begingroup', (function(_this) {
      return function(event) {
        return _this.sendAll('begingroup', prepareSocketEvent(event, payload), context);
      };
    })(this));
    network.on('data', (function(_this) {
      return function(event) {
        if (!_this.eventFiltered(payload.graph, event)) {
          return;
        }
        return _this.sendAll('data', prepareSocketEvent(event, payload), context);
      };
    })(this));
    network.on('endgroup', (function(_this) {
      return function(event) {
        return _this.sendAll('endgroup', prepareSocketEvent(event, payload), context);
      };
    })(this));
    network.on('disconnect', (function(_this) {
      return function(event) {
        return _this.sendAll('disconnect', prepareSocketEvent(event, payload), context);
      };
    })(this));
    return network.on('process-error', (function(_this) {
      return function(event) {
        var bt, error, i, _i, _ref;
        error = event.error.message;
        if (event.error.stack) {
          bt = event.error.stack.split('\n');
          for (i = _i = 0, _ref = Math.min(bt.length, 3); 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
            error += "\n" + bt[i];
          }
        }
        return _this.sendAll('processerror', {
          id: event.id,
          error: error,
          graph: payload.graph
        }, context);
      };
    })(this));
  };

  NetworkProtocol.prototype.startNetwork = function(graph, payload, context) {
    var network;
    network = this.networks[payload.graph];
    if (network) {
      return network.network.start();
    } else {
      return this.initNetwork(graph, payload, context);
    }
  };

  NetworkProtocol.prototype.stopNetwork = function(graph, payload, context) {
    if (!this.networks[payload.graph]) {
      return;
    }
    return this.networks[payload.graph].network.stop();
  };

  NetworkProtocol.prototype.debugNetwork = function(graph, payload, context) {
    var net;
    if (!this.networks[payload.graph]) {
      return;
    }
    net = this.networks[payload.graph].network;
    if (net.setDebug != null) {
      return net.setDebug(payload.enable);
    } else {
      return console.log('Warning: Network.setDebug not supported. Update to newer NoFlo');
    }
  };

  NetworkProtocol.prototype.getStatus = function(graph, payload, context) {
    var isRunning, network;
    network = this.networks[payload.graph];
    if (!network) {
      return;
    }
    if (network.network.isRunning) {
      isRunning = network.network.isRunning();
    } else {
      isRunning = network.network.isStarted() && network.network.connectionCount > 0;
    }
    return this.send('status', {
      graph: payload.graph,
      running: isRunning,
      started: network.network.isStarted()
    }, context);
  };

  return NetworkProtocol;

})(EventEmitter);

module.exports = NetworkProtocol;

});
require.register("noflo-noflo-runtime-base/src/protocol/Component.js", function(exports, require, module){
var ComponentProtocol, noflo, _;

noflo = require('noflo');

_ = require('underscore');

ComponentProtocol = (function() {
  ComponentProtocol.prototype.loaders = {};

  function ComponentProtocol(transport) {
    this.transport = transport;
  }

  ComponentProtocol.prototype.send = function(topic, payload, context) {
    return this.transport.send('component', topic, payload, context);
  };

  ComponentProtocol.prototype.receive = function(topic, payload, context) {
    switch (topic) {
      case 'list':
        return this.listComponents(payload, context);
      case 'getsource':
        return this.getSource(payload, context);
      case 'source':
        return this.setSource(payload, context);
    }
  };

  ComponentProtocol.prototype.getLoader = function(baseDir) {
    if (!this.loaders[baseDir]) {
      this.loaders[baseDir] = new noflo.ComponentLoader(baseDir);
    }
    return this.loaders[baseDir];
  };

  ComponentProtocol.prototype.listComponents = function(payload, context) {
    var baseDir, loader;
    baseDir = this.transport.options.baseDir;
    loader = this.getLoader(baseDir);
    return loader.listComponents((function(_this) {
      return function(components) {
        return Object.keys(components).forEach(function(component) {
          return _this.processComponent(loader, component, context);
        });
      };
    })(this));
  };

  ComponentProtocol.prototype.getSource = function(payload, context) {
    var baseDir, loader;
    baseDir = this.transport.options.baseDir;
    loader = this.getLoader(baseDir);
    return loader.getSource(payload.name, (function(_this) {
      return function(err, component) {
        var graph, nameParts;
        if (err) {
          graph = _this.transport.graph.graphs[payload.name];
          if (graph == null) {
            _this.send('error', err, context);
            return;
          }
          nameParts = payload.name.split('/');
          return _this.send('source', {
            name: nameParts[1],
            library: nameParts[0],
            code: JSON.stringify(graph.toJSON()),
            language: 'json'
          }, context);
        } else {
          return _this.send('source', component, context);
        }
      };
    })(this));
  };

  ComponentProtocol.prototype.setSource = function(payload, context) {
    var baseDir, loader;
    baseDir = this.transport.options.baseDir;
    loader = this.getLoader(baseDir);
    return loader.setSource(payload.library, payload.name, payload.code, payload.language, (function(_this) {
      return function(err) {
        if (err) {
          _this.send('error', err, context);
          return;
        }
        return _this.processComponent(loader, loader.normalizeName(payload.library, payload.name), context);
      };
    })(this));
  };

  ComponentProtocol.prototype.processComponent = function(loader, component, context) {
    return loader.load(component, (function(_this) {
      return function(err, instance) {
        if (!instance) {
          if (err instanceof Error) {
            _this.send('error', err, context);
            return;
          }
          instance = err;
        }
        if (!instance.isReady()) {
          instance.once('ready', function() {
            return _this.sendComponent(component, instance, context);
          });
          return;
        }
        return _this.sendComponent(component, instance, context);
      };
    })(this), true);
  };

  ComponentProtocol.prototype.sendComponent = function(component, instance, context) {
    var icon, inPorts, outPorts, port, portName, _ref, _ref1;
    inPorts = [];
    outPorts = [];
    _ref = instance.inPorts;
    for (portName in _ref) {
      port = _ref[portName];
      if (!port || typeof port === 'function' || !port.canAttach) {
        continue;
      }
      inPorts.push({
        id: portName,
        type: port.getDataType ? port.getDataType() : void 0,
        required: port.isRequired ? port.isRequired() : void 0,
        addressable: port.isAddressable ? port.isAddressable() : void 0,
        description: port.getDescription ? port.getDescription() : void 0,
        values: port.options && port.options.values ? port.options.values : void 0,
        "default": port.options && port.options["default"] ? port.options["default"] : void 0
      });
    }
    _ref1 = instance.outPorts;
    for (portName in _ref1) {
      port = _ref1[portName];
      if (!port || typeof port === 'function' || !port.canAttach) {
        continue;
      }
      outPorts.push({
        id: portName,
        type: port.getDataType ? port.getDataType() : void 0,
        required: port.isRequired ? port.isRequired() : void 0,
        addressable: port.isAddressable ? port.isAddressable() : void 0,
        description: port.getDescription ? port.getDescription() : void 0
      });
    }
    icon = instance.getIcon ? instance.getIcon() : 'blank';
    return this.send('component', {
      name: component,
      description: instance.description,
      subgraph: instance.isSubgraph(),
      icon: icon,
      inPorts: inPorts,
      outPorts: outPorts
    }, context);
  };

  ComponentProtocol.prototype.registerGraph = function(id, graph, context) {
    var loader, send, sender;
    sender = (function(_this) {
      return function() {
        return _this.processComponent(loader, id, context);
      };
    })(this);
    send = _.debounce(sender, 10);
    loader = this.getLoader(graph.baseDir);
    loader.listComponents((function(_this) {
      return function(components) {
        loader.registerComponent('', id, graph);
        return send();
      };
    })(this));
    graph.on('addNode', send);
    graph.on('removeNode', send);
    graph.on('renameNode', send);
    graph.on('addEdge', send);
    graph.on('removeEdge', send);
    graph.on('addInitial', send);
    graph.on('removeInitial', send);
    graph.on('addInport', send);
    graph.on('removeInport', send);
    graph.on('renameInport', send);
    graph.on('addOutport', send);
    graph.on('removeOutport', send);
    return graph.on('renameOutport', send);
  };

  return ComponentProtocol;

})();

module.exports = ComponentProtocol;

});
require.register("noflo-noflo-runtime-base/src/protocol/Runtime.js", function(exports, require, module){
var RuntimeProtocol, noflo;

noflo = require('noflo');

RuntimeProtocol = (function() {
  function RuntimeProtocol(transport) {
    this.transport = transport;
    this.mainGraph = null;
    this.outputSockets = {};
    this.transport.network.on('addnetwork', (function(_this) {
      return function(network) {
        network.on('start', function() {
          network = _this.getMainNetwork();
          return _this.updateOutportSubscription(network);
        });
        return network.on('data', function(event) {});
      };
    })(this));
    this.transport.network.on('removenetwork', (function(_this) {
      return function() {
        var network;
        network = _this.getMainNetwork();
        return _this.updateOutportSubscription(network);
      };
    })(this));
  }

  RuntimeProtocol.prototype.send = function(topic, payload, context) {
    return this.transport.send('runtime', topic, payload, context);
  };

  RuntimeProtocol.prototype.sendAll = function(topic, payload) {
    return this.transport.sendAll('runtime', topic, payload);
  };

  RuntimeProtocol.prototype.receive = function(topic, payload, context) {
    switch (topic) {
      case 'getruntime':
        return this.getRuntime(payload, context);
      case 'packet':
        return this.receivePacket(payload, context);
    }
  };

  RuntimeProtocol.prototype.getRuntime = function(payload, context) {
    var capabilities, graph, graphInstance, k, type, v, _ref;
    type = this.transport.options.type;
    if (!type) {
      if (noflo.isBrowser()) {
        type = 'noflo-browser';
      } else {
        type = 'noflo-nodejs';
      }
    }
    capabilities = this.transport.options.capabilities;
    if (!capabilities) {
      capabilities = ['protocol:graph', 'protocol:component', 'protocol:network', 'protocol:runtime', 'component:setsource', 'component:getsource'];
    }
    graph = void 0;
    _ref = this.transport.network.networks;
    for (k in _ref) {
      v = _ref[k];
      graph = k;
      break;
    }
    this.send('runtime', {
      type: type,
      version: this.transport.version,
      capabilities: capabilities,
      graph: graph
    }, context);
    graphInstance = this.transport.graph.graphs[graph];
    return this.sendPorts(graph, graphInstance, context);
  };

  RuntimeProtocol.prototype.sendPorts = function(name, graph, context) {
    var inports, internal, outports, pub, _ref, _ref1, _ref2, _ref3;
    inports = [];
    outports = [];
    if (graph) {
      _ref = graph.inports;
      for (pub in _ref) {
        internal = _ref[pub];
        inports.push({
          id: pub,
          type: 'any',
          description: (_ref1 = internal.metadata) != null ? _ref1.description : void 0,
          addressable: false,
          required: false
        });
      }
      _ref2 = graph.outports;
      for (pub in _ref2) {
        internal = _ref2[pub];
        outports.push({
          id: pub,
          type: 'any',
          description: (_ref3 = internal.metadata) != null ? _ref3.description : void 0,
          addressable: false,
          required: false
        });
      }
    }
    return this.sendAll('ports', {
      graph: name,
      inPorts: inports,
      outPorts: outports
    }, context);
  };

  RuntimeProtocol.prototype.getMainNetwork = function() {
    var network;
    network = this.transport.network.networks['echoNoflo'];
    if (!network) {
      return null;
    }
    network = network.network;
    return network;
  };

  RuntimeProtocol.prototype.setMainGraph = function(id, graph, context) {
    var checkExportedPorts, d, dependencies, _i, _j, _len, _len1, _results;
    checkExportedPorts = (function(_this) {
      return function(name, process, port, metadata) {
        _this.sendPorts(id, graph, context);
        return _this.updateOutportSubscription(_this.getMainNetwork());
      };
    })(this);
    dependencies = ['addInport', 'addOutport', 'removeInport', 'removeOutport'];
    if (this.mainGraph) {
      for (_i = 0, _len = dependencies.length; _i < _len; _i++) {
        d = dependencies[_i];
        this.mainGraph.removeListener(d, checkExportedPorts);
      }
    }
    this.mainGraph = graph;
    _results = [];
    for (_j = 0, _len1 = dependencies.length; _j < _len1; _j++) {
      d = dependencies[_j];
      _results.push(this.mainGraph.on(d, checkExportedPorts));
    }
    return _results;
  };

  RuntimeProtocol.prototype.updateOutportSubscription = function(network) {
    var component, event, events, graphName, internal, pub, sendFunc, socket, _i, _len, _ref, _ref1, _results;
    if (!network) {
      return;
    }
    events = ['data', 'begingroup', 'endgroup', 'connect', 'disconnect'];
    _ref = this.outputSockets;
    for (pub in _ref) {
      socket = _ref[pub];
      for (_i = 0, _len = events.length; _i < _len; _i++) {
        event = events[_i];
        socket.removeAllListeners(event);
      }
    }
    this.outputSockets = {};
    graphName = network.graph.name || network.graph.properties.id;
    _ref1 = network.graph.outports;
    _results = [];
    for (pub in _ref1) {
      internal = _ref1[pub];
      socket = noflo.internalSocket.createSocket();
      this.outputSockets[pub] = socket;
      component = network.processes[internal.process].component;
      component.outPorts[internal.port].attach(socket);
      sendFunc = (function(_this) {
        return function(event) {
          return function(payload) {
            return _this.sendAll('runtime', 'packet', {
              port: pub,
              event: event,
              graph: graphName,
              payload: payload
            });
          };
        };
      })(this);
      _results.push((function() {
        var _j, _len1, _results1;
        _results1 = [];
        for (_j = 0, _len1 = events.length; _j < _len1; _j++) {
          event = events[_j];
          _results1.push(socket.on(event, sendFunc(event)));
        }
        return _results1;
      })());
    }
    return _results;
  };

  RuntimeProtocol.prototype.receivePacket = function(payload, context) {
    var component, graphName, internal, network, port, socket;
    if (!this.mainGraph) {
      return this.send('error', new Error('No main graph'), context);
    }
    graphName = this.mainGraph.name || this.mainGraph.properties.id;
    network = this.getMainNetwork();
    internal = this.mainGraph.inports[payload.port];
    component = network.processes[internal.process].component;
    socket = noflo.internalSocket.createSocket();
    port = component.inPorts[internal.port];
    port.attach(socket);
    switch (payload.event) {
      case 'connect':
        socket.connect();
        break;
      case 'disconnect':
        socket.disconnect();
        break;
      case 'begingroup':
        socket.beginGroup(payload.payload);
        break;
      case 'endgroup':
        socket.endGroup(payload.payload);
        break;
      case 'data':
        socket.send(payload.payload);
    }
    return port.detach(socket);
  };

  return RuntimeProtocol;

})();

module.exports = RuntimeProtocol;

});
require.register("broofa-node-uuid/uuid.js", function(exports, require, module){
//     uuid.js
//
//     Copyright (c) 2010-2012 Robert Kieffer
//     MIT License - http://opensource.org/licenses/mit-license.php

(function() {
  var _global = this;

  // Unique ID creation requires a high quality random # generator.  We feature
  // detect to determine the best RNG source, normalizing to a function that
  // returns 128-bits of randomness, since that's what's usually required
  var _rng;

  // Node.js crypto-based RNG - http://nodejs.org/docs/v0.6.2/api/crypto.html
  //
  // Moderately fast, high quality
  if (typeof(_global.require) == 'function') {
    try {
      var _rb = _global.require('crypto').randomBytes;
      _rng = _rb && function() {return _rb(16);};
    } catch(e) {}
  }

  if (!_rng && _global.crypto && crypto.getRandomValues) {
    // WHATWG crypto-based RNG - http://wiki.whatwg.org/wiki/Crypto
    //
    // Moderately fast, high quality
    var _rnds8 = new Uint8Array(16);
    _rng = function whatwgRNG() {
      crypto.getRandomValues(_rnds8);
      return _rnds8;
    };
  }

  if (!_rng) {
    // Math.random()-based (RNG)
    //
    // If all else fails, use Math.random().  It's fast, but is of unspecified
    // quality.
    var  _rnds = new Array(16);
    _rng = function() {
      for (var i = 0, r; i < 16; i++) {
        if ((i & 0x03) === 0) r = Math.random() * 0x100000000;
        _rnds[i] = r >>> ((i & 0x03) << 3) & 0xff;
      }

      return _rnds;
    };
  }

  // Buffer class to use
  var BufferClass = typeof(_global.Buffer) == 'function' ? _global.Buffer : Array;

  // Maps for number <-> hex string conversion
  var _byteToHex = [];
  var _hexToByte = {};
  for (var i = 0; i < 256; i++) {
    _byteToHex[i] = (i + 0x100).toString(16).substr(1);
    _hexToByte[_byteToHex[i]] = i;
  }

  // **`parse()` - Parse a UUID into it's component bytes**
  function parse(s, buf, offset) {
    var i = (buf && offset) || 0, ii = 0;

    buf = buf || [];
    s.toLowerCase().replace(/[0-9a-f]{2}/g, function(oct) {
      if (ii < 16) { // Don't overflow!
        buf[i + ii++] = _hexToByte[oct];
      }
    });

    // Zero out remaining bytes if string was short
    while (ii < 16) {
      buf[i + ii++] = 0;
    }

    return buf;
  }

  // **`unparse()` - Convert UUID byte array (ala parse()) into a string**
  function unparse(buf, offset) {
    var i = offset || 0, bth = _byteToHex;
    return  bth[buf[i++]] + bth[buf[i++]] +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] + '-' +
            bth[buf[i++]] + bth[buf[i++]] +
            bth[buf[i++]] + bth[buf[i++]] +
            bth[buf[i++]] + bth[buf[i++]];
  }

  // **`v1()` - Generate time-based UUID**
  //
  // Inspired by https://github.com/LiosK/UUID.js
  // and http://docs.python.org/library/uuid.html

  // random #'s we need to init node and clockseq
  var _seedBytes = _rng();

  // Per 4.5, create and 48-bit node id, (47 random bits + multicast bit = 1)
  var _nodeId = [
    _seedBytes[0] | 0x01,
    _seedBytes[1], _seedBytes[2], _seedBytes[3], _seedBytes[4], _seedBytes[5]
  ];

  // Per 4.2.2, randomize (14 bit) clockseq
  var _clockseq = (_seedBytes[6] << 8 | _seedBytes[7]) & 0x3fff;

  // Previous uuid creation time
  var _lastMSecs = 0, _lastNSecs = 0;

  // See https://github.com/broofa/node-uuid for API details
  function v1(options, buf, offset) {
    var i = buf && offset || 0;
    var b = buf || [];

    options = options || {};

    var clockseq = options.clockseq != null ? options.clockseq : _clockseq;

    // UUID timestamps are 100 nano-second units since the Gregorian epoch,
    // (1582-10-15 00:00).  JSNumbers aren't precise enough for this, so
    // time is handled internally as 'msecs' (integer milliseconds) and 'nsecs'
    // (100-nanoseconds offset from msecs) since unix epoch, 1970-01-01 00:00.
    var msecs = options.msecs != null ? options.msecs : new Date().getTime();

    // Per 4.2.1.2, use count of uuid's generated during the current clock
    // cycle to simulate higher resolution clock
    var nsecs = options.nsecs != null ? options.nsecs : _lastNSecs + 1;

    // Time since last uuid creation (in msecs)
    var dt = (msecs - _lastMSecs) + (nsecs - _lastNSecs)/10000;

    // Per 4.2.1.2, Bump clockseq on clock regression
    if (dt < 0 && options.clockseq == null) {
      clockseq = clockseq + 1 & 0x3fff;
    }

    // Reset nsecs if clock regresses (new clockseq) or we've moved onto a new
    // time interval
    if ((dt < 0 || msecs > _lastMSecs) && options.nsecs == null) {
      nsecs = 0;
    }

    // Per 4.2.1.2 Throw error if too many uuids are requested
    if (nsecs >= 10000) {
      throw new Error('uuid.v1(): Can\'t create more than 10M uuids/sec');
    }

    _lastMSecs = msecs;
    _lastNSecs = nsecs;
    _clockseq = clockseq;

    // Per 4.1.4 - Convert from unix epoch to Gregorian epoch
    msecs += 12219292800000;

    // `time_low`
    var tl = ((msecs & 0xfffffff) * 10000 + nsecs) % 0x100000000;
    b[i++] = tl >>> 24 & 0xff;
    b[i++] = tl >>> 16 & 0xff;
    b[i++] = tl >>> 8 & 0xff;
    b[i++] = tl & 0xff;

    // `time_mid`
    var tmh = (msecs / 0x100000000 * 10000) & 0xfffffff;
    b[i++] = tmh >>> 8 & 0xff;
    b[i++] = tmh & 0xff;

    // `time_high_and_version`
    b[i++] = tmh >>> 24 & 0xf | 0x10; // include version
    b[i++] = tmh >>> 16 & 0xff;

    // `clock_seq_hi_and_reserved` (Per 4.2.2 - include variant)
    b[i++] = clockseq >>> 8 | 0x80;

    // `clock_seq_low`
    b[i++] = clockseq & 0xff;

    // `node`
    var node = options.node || _nodeId;
    for (var n = 0; n < 6; n++) {
      b[i + n] = node[n];
    }

    return buf ? buf : unparse(b);
  }

  // **`v4()` - Generate random UUID**

  // See https://github.com/broofa/node-uuid for API details
  function v4(options, buf, offset) {
    // Deprecated - 'format' argument, as supported in v1.2
    var i = buf && offset || 0;

    if (typeof(options) == 'string') {
      buf = options == 'binary' ? new BufferClass(16) : null;
      options = null;
    }
    options = options || {};

    var rnds = options.random || (options.rng || _rng)();

    // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
    rnds[6] = (rnds[6] & 0x0f) | 0x40;
    rnds[8] = (rnds[8] & 0x3f) | 0x80;

    // Copy bytes to buffer, if provided
    if (buf) {
      for (var ii = 0; ii < 16; ii++) {
        buf[i + ii] = rnds[ii];
      }
    }

    return buf || unparse(rnds);
  }

  // Export public API
  var uuid = v4;
  uuid.v1 = v1;
  uuid.v4 = v4;
  uuid.parse = parse;
  uuid.unparse = unparse;
  uuid.BufferClass = BufferClass;

  if (typeof define === 'function' && define.amd) {
    // Publish as AMD module
    define(function() {return uuid;});
  } else if (typeof(module) != 'undefined' && module.exports) {
    // Publish as node.js module
    module.exports = uuid;
  } else {
    // Publish as global (in browsers)
    var _previousRoot = _global.uuid;

    // **`noConflict()` - (browser only) to reset global 'uuid' var**
    uuid.noConflict = function() {
      _global.uuid = _previousRoot;
      return uuid;
    };

    _global.uuid = uuid;
  }
}).call(this);

});
require.register("noflo-noflo-runtime-webrtc/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo-runtime-webrtc","description":"WebRTC runtime transport support for NoFlo","keywords":["fbp","webrtc","flowhub","noflo"],"repo":"noflo/noflo-runtime-webrtc","version":"0.0.5","dependencies":{"noflo/noflo-runtime-base":"*","bergie/emitter":"*","broofa/node-uuid":"*","noflo/noflo":"*","noflo/noflo-core":"*"},"remotes":["https://raw.githubusercontent.com"],"development":{},"license":"MIT","main":"runtime/network.js","scripts":["runtime/network.js"],"json":["component.json"]}');
});
require.register("noflo-noflo-runtime-webrtc/runtime/network.js", function(exports, require, module){
var Base, WebRTCRuntime, isBrowser, uuid,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

isBrowser = function() {
  return !(typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1);
};

Base = require('noflo-runtime-base');

if (isBrowser()) {
  uuid = require('node-uuid');
} else {
  uuid = require('uuid');
}

WebRTCRuntime = (function(_super) {
  __extends(WebRTCRuntime, _super);

  function WebRTCRuntime(address, options, dontstart) {
    WebRTCRuntime.__super__.constructor.call(this, options);
    this.channels = [];
    this.debug = false;
    if (address && address.indexOf('#') !== -1) {
      this.signaller = address.split('#')[0];
      this.id = address.split('#')[1];
    } else {
      this.signaller = 'https://api.flowhub.io';
      this.id = address;
    }
    if (!this.id) {
      this.id = uuid.v4();
    }
    if (!dontstart) {
      this.start();
    }
  }

  WebRTCRuntime.prototype.start = function() {
    var peer, rtcOptions;
    rtcOptions = {
      room: this.id,
      debug: true,
      channels: {
        chat: true
      },
      signaller: this.signaller,
      capture: false,
      constraints: false,
      expectedLocalStreams: 0
    };
    peer = RTC(rtcOptions);
    peer.on('channel:opened:chat', (function(_this) {
      return function(id, dc) {
        _this.channels.push(dc);
        return dc.onmessage = function(data) {
          var context, msg;
          context = {
            channel: dc
          };
          msg = JSON.parse(data.data);
          if (_this.debug) {
            console.log('message', msg);
          }
          return _this.receive(msg.protocol, msg.command, msg.payload, context);
        };
      };
    })(this));
    return peer.on('channel:closed:chat', (function(_this) {
      return function(id, dc) {
        dc.onmessage = null;
        if (_this.channels.indexOf(dc) === -1) {
          return;
        }
        return _this.channels.splice(_this.channels.indexOf(dc), 1);
      };
    })(this));
  };

  WebRTCRuntime.prototype.send = function(protocol, topic, payload, context) {
    var m, msg;
    if (!context.channel) {
      return;
    }
    msg = {
      protocol: protocol,
      command: topic,
      payload: payload
    };
    m = JSON.stringify(msg);
    if (this.debug) {
      console.log('send', msg);
    }
    return context.channel.send(m);
  };

  WebRTCRuntime.prototype.sendAll = function(protocol, topic, payload) {
    var channel, e, m, msg, _i, _len, _ref, _results;
    msg = {
      protocol: protocol,
      command: topic,
      payload: payload
    };
    m = JSON.stringify(msg);
    if (this.debug) {
      console.log('sendAll', msg);
    }
    _ref = this.channels;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      channel = _ref[_i];
      try {
        _results.push(channel.send(m));
      } catch (_error) {
        e = _error;
      }
    }
    return _results;
  };

  return WebRTCRuntime;

})(Base);

module.exports = function(address, options, dontstart) {
  var runtime;
  runtime = new WebRTCRuntime(address, options, dontstart);
  return runtime;
};

});
require.register("component-emitter/index.js", function(exports, require, module){

/**
 * Expose `Emitter`.
 */

module.exports = Emitter;

/**
 * Initialize a new `Emitter`.
 *
 * @api public
 */

function Emitter(obj) {
  if (obj) return mixin(obj);
};

/**
 * Mixin the emitter properties.
 *
 * @param {Object} obj
 * @return {Object}
 * @api private
 */

function mixin(obj) {
  for (var key in Emitter.prototype) {
    obj[key] = Emitter.prototype[key];
  }
  return obj;
}

/**
 * Listen on the given `event` with `fn`.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.on =
Emitter.prototype.addEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};
  (this._callbacks[event] = this._callbacks[event] || [])
    .push(fn);
  return this;
};

/**
 * Adds an `event` listener that will be invoked a single
 * time then automatically removed.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.once = function(event, fn){
  var self = this;
  this._callbacks = this._callbacks || {};

  function on() {
    self.off(event, on);
    fn.apply(this, arguments);
  }

  on.fn = fn;
  this.on(event, on);
  return this;
};

/**
 * Remove the given callback for `event` or all
 * registered callbacks.
 *
 * @param {String} event
 * @param {Function} fn
 * @return {Emitter}
 * @api public
 */

Emitter.prototype.off =
Emitter.prototype.removeListener =
Emitter.prototype.removeAllListeners =
Emitter.prototype.removeEventListener = function(event, fn){
  this._callbacks = this._callbacks || {};

  // all
  if (0 == arguments.length) {
    this._callbacks = {};
    return this;
  }

  // specific event
  var callbacks = this._callbacks[event];
  if (!callbacks) return this;

  // remove all handlers
  if (1 == arguments.length) {
    delete this._callbacks[event];
    return this;
  }

  // remove specific handler
  var cb;
  for (var i = 0; i < callbacks.length; i++) {
    cb = callbacks[i];
    if (cb === fn || cb.fn === fn) {
      callbacks.splice(i, 1);
      break;
    }
  }
  return this;
};

/**
 * Emit `event` with the given args.
 *
 * @param {String} event
 * @param {Mixed} ...
 * @return {Emitter}
 */

Emitter.prototype.emit = function(event){
  this._callbacks = this._callbacks || {};
  var args = [].slice.call(arguments, 1)
    , callbacks = this._callbacks[event];

  if (callbacks) {
    callbacks = callbacks.slice(0);
    for (var i = 0, len = callbacks.length; i < len; ++i) {
      callbacks[i].apply(this, args);
    }
  }

  return this;
};

/**
 * Return array of callbacks for `event`.
 *
 * @param {String} event
 * @return {Array}
 * @api public
 */

Emitter.prototype.listeners = function(event){
  this._callbacks = this._callbacks || {};
  return this._callbacks[event] || [];
};

/**
 * Check if this emitter has `event` handlers.
 *
 * @param {String} event
 * @return {Boolean}
 * @api public
 */

Emitter.prototype.hasListeners = function(event){
  return !! this.listeners(event).length;
};

});
require.register("component-reduce/index.js", function(exports, require, module){

/**
 * Reduce `arr` with `fn`.
 *
 * @param {Array} arr
 * @param {Function} fn
 * @param {Mixed} initial
 *
 * TODO: combatible error handling?
 */

module.exports = function(arr, fn, initial){  
  var idx = 0;
  var len = arr.length;
  var curr = arguments.length == 3
    ? initial
    : arr[idx++];

  while (idx < len) {
    curr = fn.call(null, curr, arr[idx], ++idx, arr);
  }
  
  return curr;
};
});
require.register("visionmedia-superagent/lib/client.js", function(exports, require, module){
/**
 * Module dependencies.
 */

var Emitter = require('emitter');
var reduce = require('reduce');

/**
 * Root reference for iframes.
 */

var root = 'undefined' == typeof window
  ? this
  : window;

/**
 * Noop.
 */

function noop(){};

/**
 * Check if `obj` is a host object,
 * we don't want to serialize these :)
 *
 * TODO: future proof, move to compoent land
 *
 * @param {Object} obj
 * @return {Boolean}
 * @api private
 */

function isHost(obj) {
  var str = {}.toString.call(obj);

  switch (str) {
    case '[object File]':
    case '[object Blob]':
    case '[object FormData]':
      return true;
    default:
      return false;
  }
}

/**
 * Determine XHR.
 */

function getXHR() {
  if (root.XMLHttpRequest
    && ('file:' != root.location.protocol || !root.ActiveXObject)) {
    return new XMLHttpRequest;
  } else {
    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}
    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}
    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}
    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}
  }
  return false;
}

/**
 * Removes leading and trailing whitespace, added to support IE.
 *
 * @param {String} s
 * @return {String}
 * @api private
 */

var trim = ''.trim
  ? function(s) { return s.trim(); }
  : function(s) { return s.replace(/(^\s*|\s*$)/g, ''); };

/**
 * Check if `obj` is an object.
 *
 * @param {Object} obj
 * @return {Boolean}
 * @api private
 */

function isObject(obj) {
  return obj === Object(obj);
}

/**
 * Serialize the given `obj`.
 *
 * @param {Object} obj
 * @return {String}
 * @api private
 */

function serialize(obj) {
  if (!isObject(obj)) return obj;
  var pairs = [];
  for (var key in obj) {
    if (null != obj[key]) {
      pairs.push(encodeURIComponent(key)
        + '=' + encodeURIComponent(obj[key]));
    }
  }
  return pairs.join('&');
}

/**
 * Expose serialization method.
 */

 request.serializeObject = serialize;

 /**
  * Parse the given x-www-form-urlencoded `str`.
  *
  * @param {String} str
  * @return {Object}
  * @api private
  */

function parseString(str) {
  var obj = {};
  var pairs = str.split('&');
  var parts;
  var pair;

  for (var i = 0, len = pairs.length; i < len; ++i) {
    pair = pairs[i];
    parts = pair.split('=');
    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);
  }

  return obj;
}

/**
 * Expose parser.
 */

request.parseString = parseString;

/**
 * Default MIME type map.
 *
 *     superagent.types.xml = 'application/xml';
 *
 */

request.types = {
  html: 'text/html',
  json: 'application/json',
  xml: 'application/xml',
  urlencoded: 'application/x-www-form-urlencoded',
  'form': 'application/x-www-form-urlencoded',
  'form-data': 'application/x-www-form-urlencoded'
};

/**
 * Default serialization map.
 *
 *     superagent.serialize['application/xml'] = function(obj){
 *       return 'generated xml here';
 *     };
 *
 */

 request.serialize = {
   'application/x-www-form-urlencoded': serialize,
   'application/json': JSON.stringify
 };

 /**
  * Default parsers.
  *
  *     superagent.parse['application/xml'] = function(str){
  *       return { object parsed from str };
  *     };
  *
  */

request.parse = {
  'application/x-www-form-urlencoded': parseString,
  'application/json': JSON.parse
};

/**
 * Parse the given header `str` into
 * an object containing the mapped fields.
 *
 * @param {String} str
 * @return {Object}
 * @api private
 */

function parseHeader(str) {
  var lines = str.split(/\r?\n/);
  var fields = {};
  var index;
  var line;
  var field;
  var val;

  lines.pop(); // trailing CRLF

  for (var i = 0, len = lines.length; i < len; ++i) {
    line = lines[i];
    index = line.indexOf(':');
    field = line.slice(0, index).toLowerCase();
    val = trim(line.slice(index + 1));
    fields[field] = val;
  }

  return fields;
}

/**
 * Return the mime type for the given `str`.
 *
 * @param {String} str
 * @return {String}
 * @api private
 */

function type(str){
  return str.split(/ *; */).shift();
};

/**
 * Return header field parameters.
 *
 * @param {String} str
 * @return {Object}
 * @api private
 */

function params(str){
  return reduce(str.split(/ *; */), function(obj, str){
    var parts = str.split(/ *= */)
      , key = parts.shift()
      , val = parts.shift();

    if (key && val) obj[key] = val;
    return obj;
  }, {});
};

/**
 * Initialize a new `Response` with the given `xhr`.
 *
 *  - set flags (.ok, .error, etc)
 *  - parse header
 *
 * Examples:
 *
 *  Aliasing `superagent` as `request` is nice:
 *
 *      request = superagent;
 *
 *  We can use the promise-like API, or pass callbacks:
 *
 *      request.get('/').end(function(res){});
 *      request.get('/', function(res){});
 *
 *  Sending data can be chained:
 *
 *      request
 *        .post('/user')
 *        .send({ name: 'tj' })
 *        .end(function(res){});
 *
 *  Or passed to `.send()`:
 *
 *      request
 *        .post('/user')
 *        .send({ name: 'tj' }, function(res){});
 *
 *  Or passed to `.post()`:
 *
 *      request
 *        .post('/user', { name: 'tj' })
 *        .end(function(res){});
 *
 * Or further reduced to a single call for simple cases:
 *
 *      request
 *        .post('/user', { name: 'tj' }, function(res){});
 *
 * @param {XMLHTTPRequest} xhr
 * @param {Object} options
 * @api private
 */

function Response(req, options) {
  options = options || {};
  this.req = req;
  this.xhr = this.req.xhr;
  this.text = this.xhr.responseText;
  this.setStatusProperties(this.xhr.status);
  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());
  // getAllResponseHeaders sometimes falsely returns "" for CORS requests, but
  // getResponseHeader still works. so we get content-type even if getting
  // other headers fails.
  this.header['content-type'] = this.xhr.getResponseHeader('content-type');
  this.setHeaderProperties(this.header);
  this.body = this.req.method != 'HEAD'
    ? this.parseBody(this.text)
    : null;
}

/**
 * Get case-insensitive `field` value.
 *
 * @param {String} field
 * @return {String}
 * @api public
 */

Response.prototype.get = function(field){
  return this.header[field.toLowerCase()];
};

/**
 * Set header related properties:
 *
 *   - `.type` the content type without params
 *
 * A response of "Content-Type: text/plain; charset=utf-8"
 * will provide you with a `.type` of "text/plain".
 *
 * @param {Object} header
 * @api private
 */

Response.prototype.setHeaderProperties = function(header){
  // content-type
  var ct = this.header['content-type'] || '';
  this.type = type(ct);

  // params
  var obj = params(ct);
  for (var key in obj) this[key] = obj[key];
};

/**
 * Parse the given body `str`.
 *
 * Used for auto-parsing of bodies. Parsers
 * are defined on the `superagent.parse` object.
 *
 * @param {String} str
 * @return {Mixed}
 * @api private
 */

Response.prototype.parseBody = function(str){
  var parse = request.parse[this.type];
  return parse && str && str.length
    ? parse(str)
    : null;
};

/**
 * Set flags such as `.ok` based on `status`.
 *
 * For example a 2xx response will give you a `.ok` of __true__
 * whereas 5xx will be __false__ and `.error` will be __true__. The
 * `.clientError` and `.serverError` are also available to be more
 * specific, and `.statusType` is the class of error ranging from 1..5
 * sometimes useful for mapping respond colors etc.
 *
 * "sugar" properties are also defined for common cases. Currently providing:
 *
 *   - .noContent
 *   - .badRequest
 *   - .unauthorized
 *   - .notAcceptable
 *   - .notFound
 *
 * @param {Number} status
 * @api private
 */

Response.prototype.setStatusProperties = function(status){
  var type = status / 100 | 0;

  // status / class
  this.status = status;
  this.statusType = type;

  // basics
  this.info = 1 == type;
  this.ok = 2 == type;
  this.clientError = 4 == type;
  this.serverError = 5 == type;
  this.error = (4 == type || 5 == type)
    ? this.toError()
    : false;

  // sugar
  this.accepted = 202 == status;
  this.noContent = 204 == status || 1223 == status;
  this.badRequest = 400 == status;
  this.unauthorized = 401 == status;
  this.notAcceptable = 406 == status;
  this.notFound = 404 == status;
  this.forbidden = 403 == status;
};

/**
 * Return an `Error` representative of this response.
 *
 * @return {Error}
 * @api public
 */

Response.prototype.toError = function(){
  var req = this.req;
  var method = req.method;
  var url = req.url;

  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';
  var err = new Error(msg);
  err.status = this.status;
  err.method = method;
  err.url = url;

  return err;
};

/**
 * Expose `Response`.
 */

request.Response = Response;

/**
 * Initialize a new `Request` with the given `method` and `url`.
 *
 * @param {String} method
 * @param {String} url
 * @api public
 */

function Request(method, url) {
  var self = this;
  Emitter.call(this);
  this._query = this._query || [];
  this.method = method;
  this.url = url;
  this.header = {};
  this._header = {};
  this.on('end', function(){
    try {
      var res = new Response(self);
      if ('HEAD' == method) res.text = null;
      self.callback(null, res);
    } catch(e) {
      var err = new Error('Parser is unable to parse the response');
      err.parse = true;
      err.original = e;
      self.callback(err);
    }
  });
}

/**
 * Mixin `Emitter`.
 */

Emitter(Request.prototype);

/**
 * Allow for extension
 */

Request.prototype.use = function(fn) {
  fn(this);
  return this;
}

/**
 * Set timeout to `ms`.
 *
 * @param {Number} ms
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.timeout = function(ms){
  this._timeout = ms;
  return this;
};

/**
 * Clear previous timeout.
 *
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.clearTimeout = function(){
  this._timeout = 0;
  clearTimeout(this._timer);
  return this;
};

/**
 * Abort the request, and clear potential timeout.
 *
 * @return {Request}
 * @api public
 */

Request.prototype.abort = function(){
  if (this.aborted) return;
  this.aborted = true;
  this.xhr.abort();
  this.clearTimeout();
  this.emit('abort');
  return this;
};

/**
 * Set header `field` to `val`, or multiple fields with one object.
 *
 * Examples:
 *
 *      req.get('/')
 *        .set('Accept', 'application/json')
 *        .set('X-API-Key', 'foobar')
 *        .end(callback);
 *
 *      req.get('/')
 *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })
 *        .end(callback);
 *
 * @param {String|Object} field
 * @param {String} val
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.set = function(field, val){
  if (isObject(field)) {
    for (var key in field) {
      this.set(key, field[key]);
    }
    return this;
  }
  this._header[field.toLowerCase()] = val;
  this.header[field] = val;
  return this;
};

/**
 * Remove header `field`.
 *
 * Example:
 *
 *      req.get('/')
 *        .unset('User-Agent')
 *        .end(callback);
 *
 * @param {String} field
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.unset = function(field){
  delete this._header[field.toLowerCase()];
  delete this.header[field];
  return this;
};

/**
 * Get case-insensitive header `field` value.
 *
 * @param {String} field
 * @return {String}
 * @api private
 */

Request.prototype.getHeader = function(field){
  return this._header[field.toLowerCase()];
};

/**
 * Set Content-Type to `type`, mapping values from `request.types`.
 *
 * Examples:
 *
 *      superagent.types.xml = 'application/xml';
 *
 *      request.post('/')
 *        .type('xml')
 *        .send(xmlstring)
 *        .end(callback);
 *
 *      request.post('/')
 *        .type('application/xml')
 *        .send(xmlstring)
 *        .end(callback);
 *
 * @param {String} type
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.type = function(type){
  this.set('Content-Type', request.types[type] || type);
  return this;
};

/**
 * Set Accept to `type`, mapping values from `request.types`.
 *
 * Examples:
 *
 *      superagent.types.json = 'application/json';
 *
 *      request.get('/agent')
 *        .accept('json')
 *        .end(callback);
 *
 *      request.get('/agent')
 *        .accept('application/json')
 *        .end(callback);
 *
 * @param {String} accept
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.accept = function(type){
  this.set('Accept', request.types[type] || type);
  return this;
};

/**
 * Set Authorization field value with `user` and `pass`.
 *
 * @param {String} user
 * @param {String} pass
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.auth = function(user, pass){
  var str = btoa(user + ':' + pass);
  this.set('Authorization', 'Basic ' + str);
  return this;
};

/**
* Add query-string `val`.
*
* Examples:
*
*   request.get('/shoes')
*     .query('size=10')
*     .query({ color: 'blue' })
*
* @param {Object|String} val
* @return {Request} for chaining
* @api public
*/

Request.prototype.query = function(val){
  if ('string' != typeof val) val = serialize(val);
  if (val) this._query.push(val);
  return this;
};

/**
 * Write the field `name` and `val` for "multipart/form-data"
 * request bodies.
 *
 * ``` js
 * request.post('/upload')
 *   .field('foo', 'bar')
 *   .end(callback);
 * ```
 *
 * @param {String} name
 * @param {String|Blob|File} val
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.field = function(name, val){
  if (!this._formData) this._formData = new FormData();
  this._formData.append(name, val);
  return this;
};

/**
 * Queue the given `file` as an attachment to the specified `field`,
 * with optional `filename`.
 *
 * ``` js
 * request.post('/upload')
 *   .attach(new Blob(['<a id="a"><b id="b">hey!</b></a>'], { type: "text/html"}))
 *   .end(callback);
 * ```
 *
 * @param {String} field
 * @param {Blob|File} file
 * @param {String} filename
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.attach = function(field, file, filename){
  if (!this._formData) this._formData = new FormData();
  this._formData.append(field, file, filename);
  return this;
};

/**
 * Send `data`, defaulting the `.type()` to "json" when
 * an object is given.
 *
 * Examples:
 *
 *       // querystring
 *       request.get('/search')
 *         .end(callback)
 *
 *       // multiple data "writes"
 *       request.get('/search')
 *         .send({ search: 'query' })
 *         .send({ range: '1..5' })
 *         .send({ order: 'desc' })
 *         .end(callback)
 *
 *       // manual json
 *       request.post('/user')
 *         .type('json')
 *         .send('{"name":"tj"})
 *         .end(callback)
 *
 *       // auto json
 *       request.post('/user')
 *         .send({ name: 'tj' })
 *         .end(callback)
 *
 *       // manual x-www-form-urlencoded
 *       request.post('/user')
 *         .type('form')
 *         .send('name=tj')
 *         .end(callback)
 *
 *       // auto x-www-form-urlencoded
 *       request.post('/user')
 *         .type('form')
 *         .send({ name: 'tj' })
 *         .end(callback)
 *
 *       // defaults to x-www-form-urlencoded
  *      request.post('/user')
  *        .send('name=tobi')
  *        .send('species=ferret')
  *        .end(callback)
 *
 * @param {String|Object} data
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.send = function(data){
  var obj = isObject(data);
  var type = this.getHeader('Content-Type');

  // merge
  if (obj && isObject(this._data)) {
    for (var key in data) {
      this._data[key] = data[key];
    }
  } else if ('string' == typeof data) {
    if (!type) this.type('form');
    type = this.getHeader('Content-Type');
    if ('application/x-www-form-urlencoded' == type) {
      this._data = this._data
        ? this._data + '&' + data
        : data;
    } else {
      this._data = (this._data || '') + data;
    }
  } else {
    this._data = data;
  }

  if (!obj) return this;
  if (!type) this.type('json');
  return this;
};

/**
 * Invoke the callback with `err` and `res`
 * and handle arity check.
 *
 * @param {Error} err
 * @param {Response} res
 * @api private
 */

Request.prototype.callback = function(err, res){
  var fn = this._callback;
  if (2 == fn.length) return fn(err, res);
  if (err) return this.emit('error', err);
  fn(res);
};

/**
 * Invoke callback with x-domain error.
 *
 * @api private
 */

Request.prototype.crossDomainError = function(){
  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');
  err.crossDomain = true;
  this.callback(err);
};

/**
 * Invoke callback with timeout error.
 *
 * @api private
 */

Request.prototype.timeoutError = function(){
  var timeout = this._timeout;
  var err = new Error('timeout of ' + timeout + 'ms exceeded');
  err.timeout = timeout;
  this.callback(err);
};

/**
 * Enable transmission of cookies with x-domain requests.
 *
 * Note that for this to work the origin must not be
 * using "Access-Control-Allow-Origin" with a wildcard,
 * and also must set "Access-Control-Allow-Credentials"
 * to "true".
 *
 * @api public
 */

Request.prototype.withCredentials = function(){
  this._withCredentials = true;
  return this;
};

/**
 * Initiate request, invoking callback `fn(res)`
 * with an instanceof `Response`.
 *
 * @param {Function} fn
 * @return {Request} for chaining
 * @api public
 */

Request.prototype.end = function(fn){
  var self = this;
  var xhr = this.xhr = getXHR();
  var query = this._query.join('&');
  var timeout = this._timeout;
  var data = this._formData || this._data;

  // store callback
  this._callback = fn || noop;

  // state change
  xhr.onreadystatechange = function(){
    if (4 != xhr.readyState) return;
    if (0 == xhr.status) {
      if (self.aborted) return self.timeoutError();
      return self.crossDomainError();
    }
    self.emit('end');
  };

  // progress
  if (xhr.upload) {
    xhr.upload.onprogress = function(e){
      e.percent = e.loaded / e.total * 100;
      self.emit('progress', e);
    };
  }

  // timeout
  if (timeout && !this._timer) {
    this._timer = setTimeout(function(){
      self.abort();
    }, timeout);
  }

  // querystring
  if (query) {
    query = request.serializeObject(query);
    this.url += ~this.url.indexOf('?')
      ? '&' + query
      : '?' + query;
  }

  // initiate request
  xhr.open(this.method, this.url, true);

  // CORS
  if (this._withCredentials) xhr.withCredentials = true;

  // body
  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {
    // serialize stuff
    var serialize = request.serialize[this.getHeader('Content-Type')];
    if (serialize) data = serialize(data);
  }

  // set header fields
  for (var field in this.header) {
    if (null == this.header[field]) continue;
    xhr.setRequestHeader(field, this.header[field]);
  }

  // send stuff
  this.emit('request', this);
  xhr.send(data);
  return this;
};

/**
 * Expose `Request`.
 */

request.Request = Request;

/**
 * Issue a request:
 *
 * Examples:
 *
 *    request('GET', '/users').end(callback)
 *    request('/users').end(callback)
 *    request('/users', callback)
 *
 * @param {String} method
 * @param {String|Function} url or callback
 * @return {Request}
 * @api public
 */

function request(method, url) {
  // callback
  if ('function' == typeof url) {
    return new Request('GET', method).end(url);
  }

  // url first
  if (1 == arguments.length) {
    return new Request('GET', method);
  }

  return new Request(method, url);
}

/**
 * GET `url` with optional callback `fn(res)`.
 *
 * @param {String} url
 * @param {Mixed|Function} data or fn
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.get = function(url, data, fn){
  var req = request('GET', url);
  if ('function' == typeof data) fn = data, data = null;
  if (data) req.query(data);
  if (fn) req.end(fn);
  return req;
};

/**
 * HEAD `url` with optional callback `fn(res)`.
 *
 * @param {String} url
 * @param {Mixed|Function} data or fn
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.head = function(url, data, fn){
  var req = request('HEAD', url);
  if ('function' == typeof data) fn = data, data = null;
  if (data) req.send(data);
  if (fn) req.end(fn);
  return req;
};

/**
 * DELETE `url` with optional callback `fn(res)`.
 *
 * @param {String} url
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.del = function(url, fn){
  var req = request('DELETE', url);
  if (fn) req.end(fn);
  return req;
};

/**
 * PATCH `url` with optional `data` and callback `fn(res)`.
 *
 * @param {String} url
 * @param {Mixed} data
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.patch = function(url, data, fn){
  var req = request('PATCH', url);
  if ('function' == typeof data) fn = data, data = null;
  if (data) req.send(data);
  if (fn) req.end(fn);
  return req;
};

/**
 * POST `url` with optional `data` and callback `fn(res)`.
 *
 * @param {String} url
 * @param {Mixed} data
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.post = function(url, data, fn){
  var req = request('POST', url);
  if ('function' == typeof data) fn = data, data = null;
  if (data) req.send(data);
  if (fn) req.end(fn);
  return req;
};

/**
 * PUT `url` with optional `data` and callback `fn(res)`.
 *
 * @param {String} url
 * @param {Mixed|Function} data or fn
 * @param {Function} fn
 * @return {Request}
 * @api public
 */

request.put = function(url, data, fn){
  var req = request('PUT', url);
  if ('function' == typeof data) fn = data, data = null;
  if (data) req.send(data);
  if (fn) req.end(fn);
  return req;
};

/**
 * Expose `request`.
 */

module.exports = request;

});
require.register("noflo-noflo-canvas/index.js", function(exports, require, module){
/*
 * This file can be used for general library features of noflo-canvas.
 *
 * The library features can be made available as CommonJS modules that the
 * components in this project utilize.
 */

});
require.register("noflo-noflo-canvas/graphs/PointFromObject.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"PointFromObject","id":"PointFromObject","environment":{"type":"all","content":""}},"inports":{"in":{"process":"core/Split_2l54n","port":"in","metadata":{"x":36,"y":36}}},"outports":{"point":{"process":"canvas/MakePoint_h7co8","port":"point","metadata":{"x":792,"y":36}}},"groups":[],"processes":{"core/Split_2l54n":{"component":"core/Split","metadata":{"label":"core/Split","x":180,"y":36}},"x":{"component":"objects/ExtractProperty","metadata":{"label":"x","x":324,"y":144}},"y":{"component":"objects/ExtractProperty","metadata":{"label":"y","x":324,"y":36}},"adapters/PacketsToArray_7a90h":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":468,"y":144}},"adapters/PacketsToArray_xtzm":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":468,"y":36}},"canvas/MakePoint_h7co8":{"component":"canvas/MakePoint","metadata":{"label":"canvas/MakePoint","x":648,"y":36}}},"connections":[{"src":{"process":"x","port":"out"},"tgt":{"process":"adapters/PacketsToArray_7a90h","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_7a90h","port":"out"},"tgt":{"process":"canvas/MakePoint_h7co8","port":"x"},"metadata":{}},{"src":{"process":"y","port":"out"},"tgt":{"process":"adapters/PacketsToArray_xtzm","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_xtzm","port":"out"},"tgt":{"process":"canvas/MakePoint_h7co8","port":"y"},"metadata":{}},{"src":{"process":"core/Split_2l54n","port":"out"},"tgt":{"process":"x","port":"in"},"metadata":{}},{"src":{"process":"core/Split_2l54n","port":"out"},"tgt":{"process":"y","port":"in"},"metadata":{"route":0}},{"data":"x","tgt":{"process":"x","port":"key"}},{"data":"y","tgt":{"process":"y","port":"key"}}]}');
});
require.register("noflo-noflo-canvas/graphs/RectangleFromObject.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"RectangleFromObject","id":"RectangleFromObject","environment":{"type":"all","content":""}},"inports":{"in":{"process":"core/Split_xvdlb","port":"in","metadata":{"x":540,"y":-288}}},"outports":{"rectangle":{"process":"canvas/MakeRectangle_v3sfl","port":"rectangle","metadata":{"x":1296,"y":-252}}},"groups":[],"processes":{"width":{"component":"objects/ExtractProperty","metadata":{"label":"width","x":828,"y":-288}},"adapters/PacketsToArray_smxrx":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":972,"y":-288}},"adapters/PacketsToArray_gysu3":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":972,"y":-180}},"height":{"component":"objects/ExtractProperty","metadata":{"label":"height","x":828,"y":-180}},"core/Split_xvdlb":{"component":"core/Split","metadata":{"label":"core/Split","x":684,"y":-288}},"canvas/MakeRectangle_v3sfl":{"component":"canvas/MakeRectangle","metadata":{"label":"canvas/MakeRectangle","x":1152,"y":-252}},"canvas/PointFromObject_l1e2e":{"component":"canvas/PointFromObject","metadata":{"label":"canvas/PointFromObject","x":828,"y":-396}}},"connections":[{"src":{"process":"core/Split_xvdlb","port":"out"},"tgt":{"process":"width","port":"in"},"metadata":{"route":0}},{"src":{"process":"core/Split_xvdlb","port":"out"},"tgt":{"process":"height","port":"in"},"metadata":{"route":0}},{"src":{"process":"width","port":"out"},"tgt":{"process":"adapters/PacketsToArray_smxrx","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_smxrx","port":"out"},"tgt":{"process":"canvas/MakeRectangle_v3sfl","port":"width"},"metadata":{}},{"src":{"process":"height","port":"out"},"tgt":{"process":"adapters/PacketsToArray_gysu3","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_gysu3","port":"out"},"tgt":{"process":"canvas/MakeRectangle_v3sfl","port":"height"},"metadata":{}},{"src":{"process":"core/Split_xvdlb","port":"out"},"tgt":{"process":"canvas/PointFromObject_l1e2e","port":"in"},"metadata":{"route":0}},{"src":{"process":"canvas/PointFromObject_l1e2e","port":"point"},"tgt":{"process":"canvas/MakeRectangle_v3sfl","port":"point"},"metadata":{}},{"data":"width","tgt":{"process":"width","port":"key"}},{"data":"height","tgt":{"process":"height","port":"key"}}]}');
});
require.register("noflo-noflo-canvas/graphs/CopyCanvas.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"CopyCanvas","id":"CopyCanvas","environment":{"type":"noflo-browser"}},"inports":{"canvas":{"process":"core/Repeat_wuue3","port":"in","metadata":{"x":0,"y":36}}},"outports":{"canvas_copy":{"process":"Draw","port":"canvas","metadata":{"x":828,"y":72}}},"groups":[{"name":"create","nodes":["CreateCanvas","getHeight","getWidth"],"metadata":{"description":"make new canvas with original dimensions"}},{"name":"copy","nodes":["DrawImage","Draw"],"metadata":{"description":"draw original to new"}}],"processes":{"CreateCanvas":{"component":"canvas/CreateCanvas","metadata":{"label":"CreateCanvas","x":396,"y":252}},"DrawImage":{"component":"canvas/DrawImage","metadata":{"label":"DrawImage","x":576,"y":72}},"Draw":{"component":"canvas/Draw","metadata":{"label":"Draw","x":684,"y":72}},"core/Repeat_wuue3":{"component":"core/Repeat","metadata":{"label":"core/Repeat","x":144,"y":36}},"getHeight":{"component":"dom/GetAttribute","metadata":{"label":"getHeight","x":288,"y":252}},"getWidth":{"component":"dom/GetAttribute","metadata":{"label":"getWidth","x":288,"y":144}}},"connections":[{"src":{"process":"core/Repeat_wuue3","port":"out"},"tgt":{"process":"getWidth","port":"element"},"metadata":{}},{"src":{"process":"core/Repeat_wuue3","port":"out"},"tgt":{"process":"getHeight","port":"element"},"metadata":{"route":0}},{"src":{"process":"getWidth","port":"out"},"tgt":{"process":"CreateCanvas","port":"width"},"metadata":{}},{"src":{"process":"getHeight","port":"out"},"tgt":{"process":"CreateCanvas","port":"height"},"metadata":{}},{"src":{"process":"DrawImage","port":"drawimage"},"tgt":{"process":"Draw","port":"commands"},"metadata":{}},{"src":{"process":"CreateCanvas","port":"canvas"},"tgt":{"process":"Draw","port":"canvas"},"metadata":{}},{"src":{"process":"core/Repeat_wuue3","port":"out"},"tgt":{"process":"DrawImage","port":"image"},"metadata":{"route":0}},{"data":"width","tgt":{"process":"getWidth","port":"attribute"}},{"data":"height","tgt":{"process":"getHeight","port":"attribute"}},{"data":{"x":0,"y":0},"tgt":{"process":"DrawImage","port":"destpoint"}},{"data":true,"tgt":{"process":"Draw","port":"drawevery"}}]}');
});
require.register("noflo-noflo-canvas/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo-canvas","description":"Canvas 2D components for NoFlo","author":"Forrest Oliphant <http://forresto.com/>, Vilson Vieira <vilson@void.cc>","repo":"noflo/noflo-canvas","version":"0.1.11","keywords":[],"dependencies":{"noflo/noflo":"*"},"remotes":["https://raw.githubusercontent.com"],"scripts":["index.js","lib/MakeCanvasPrimative.js","components/CreateCanvas.js","components/MakeColor.js","components/MakeRange.js","components/MakeIncrement.js","components/MakeRandom.js","components/MakePoint.js","components/MakeGrid.js","components/MakeRectangle.js","components/MakeCircle.js","components/MakeBezierCurve.js","components/MakeArc.js","components/MakePath.js","components/Transform.js","components/Group.js","components/Recurse.js","components/StrokeStyle.js","components/LineWidth.js","components/FillStyle.js","components/Stroke.js","components/Fill.js","components/StrokeRect.js","components/FillRect.js","components/ClearRect.js","components/DrawImage.js","components/Draw.js","components/CreateCanvas-node.js","components/ColorArrayToCss.js","components/SavePNG.js","components/MakeRGBColor.js","graphs/PointFromObject.json","graphs/RectangleFromObject.json","graphs/CopyCanvas.json"],"json":["component.json","graphs/PointFromObject.json","graphs/RectangleFromObject.json","graphs/CopyCanvas.json"],"noflo":{"components":{"ClearRect":"components/ClearRect.js","ColorArrayToCss":"components/ColorArrayToCss.js","CreateCanvas":"components/CreateCanvas.js","Draw":"components/Draw.js","DrawImage":"components/DrawImage.js","Fill":"components/Fill.js","FillRect":"components/FillRect.js","FillStyle":"components/FillStyle.js","Group":"components/Group.js","LineWidth":"components/LineWidth.js","MakeArc":"components/MakeArc.js","MakeBezierCurve":"components/MakeBezierCurve.js","MakeCircle":"components/MakeCircle.js","MakeColor":"components/MakeColor.js","MakeGrid":"components/MakeGrid.js","MakeIncrement":"components/MakeIncrement.js","MakePath":"components/MakePath.js","MakePoint":"components/MakePoint.js","MakeRGBColor":"components/MakeRGBColor.js","MakeRandom":"components/MakeRandom.js","MakeRange":"components/MakeRange.js","MakeRectangle":"components/MakeRectangle.js","Recurse":"components/Recurse.js","SavePNG":"components/SavePNG.js","Stroke":"components/Stroke.js","StrokeRect":"components/StrokeRect.js","StrokeStyle":"components/StrokeStyle.js","Transform":"components/Transform.js"},"graphs":{"CopyCanvas":"graphs/CopyCanvas.json","PointFromObject":"graphs/PointFromObject.json","RectangleFromObject":"graphs/RectangleFromObject.json"}}}');
});
require.register("noflo-noflo-canvas/graphs/PointFromObject.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"PointFromObject","id":"PointFromObject","environment":{"type":"all","content":""}},"inports":{"in":{"process":"core/Split_2l54n","port":"in","metadata":{"x":36,"y":36}}},"outports":{"point":{"process":"canvas/MakePoint_h7co8","port":"point","metadata":{"x":792,"y":36}}},"groups":[],"processes":{"core/Split_2l54n":{"component":"core/Split","metadata":{"label":"core/Split","x":180,"y":36}},"x":{"component":"objects/ExtractProperty","metadata":{"label":"x","x":324,"y":144}},"y":{"component":"objects/ExtractProperty","metadata":{"label":"y","x":324,"y":36}},"adapters/PacketsToArray_7a90h":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":468,"y":144}},"adapters/PacketsToArray_xtzm":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":468,"y":36}},"canvas/MakePoint_h7co8":{"component":"canvas/MakePoint","metadata":{"label":"canvas/MakePoint","x":648,"y":36}}},"connections":[{"src":{"process":"x","port":"out"},"tgt":{"process":"adapters/PacketsToArray_7a90h","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_7a90h","port":"out"},"tgt":{"process":"canvas/MakePoint_h7co8","port":"x"},"metadata":{}},{"src":{"process":"y","port":"out"},"tgt":{"process":"adapters/PacketsToArray_xtzm","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_xtzm","port":"out"},"tgt":{"process":"canvas/MakePoint_h7co8","port":"y"},"metadata":{}},{"src":{"process":"core/Split_2l54n","port":"out"},"tgt":{"process":"x","port":"in"},"metadata":{}},{"src":{"process":"core/Split_2l54n","port":"out"},"tgt":{"process":"y","port":"in"},"metadata":{"route":0}},{"data":"x","tgt":{"process":"x","port":"key"}},{"data":"y","tgt":{"process":"y","port":"key"}}]}');
});
require.register("noflo-noflo-canvas/graphs/RectangleFromObject.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"RectangleFromObject","id":"RectangleFromObject","environment":{"type":"all","content":""}},"inports":{"in":{"process":"core/Split_xvdlb","port":"in","metadata":{"x":540,"y":-288}}},"outports":{"rectangle":{"process":"canvas/MakeRectangle_v3sfl","port":"rectangle","metadata":{"x":1296,"y":-252}}},"groups":[],"processes":{"width":{"component":"objects/ExtractProperty","metadata":{"label":"width","x":828,"y":-288}},"adapters/PacketsToArray_smxrx":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":972,"y":-288}},"adapters/PacketsToArray_gysu3":{"component":"adapters/PacketsToArray","metadata":{"label":"adapters/PacketsToArray","x":972,"y":-180}},"height":{"component":"objects/ExtractProperty","metadata":{"label":"height","x":828,"y":-180}},"core/Split_xvdlb":{"component":"core/Split","metadata":{"label":"core/Split","x":684,"y":-288}},"canvas/MakeRectangle_v3sfl":{"component":"canvas/MakeRectangle","metadata":{"label":"canvas/MakeRectangle","x":1152,"y":-252}},"canvas/PointFromObject_l1e2e":{"component":"canvas/PointFromObject","metadata":{"label":"canvas/PointFromObject","x":828,"y":-396}}},"connections":[{"src":{"process":"core/Split_xvdlb","port":"out"},"tgt":{"process":"width","port":"in"},"metadata":{"route":0}},{"src":{"process":"core/Split_xvdlb","port":"out"},"tgt":{"process":"height","port":"in"},"metadata":{"route":0}},{"src":{"process":"width","port":"out"},"tgt":{"process":"adapters/PacketsToArray_smxrx","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_smxrx","port":"out"},"tgt":{"process":"canvas/MakeRectangle_v3sfl","port":"width"},"metadata":{}},{"src":{"process":"height","port":"out"},"tgt":{"process":"adapters/PacketsToArray_gysu3","port":"in"},"metadata":{"route":null}},{"src":{"process":"adapters/PacketsToArray_gysu3","port":"out"},"tgt":{"process":"canvas/MakeRectangle_v3sfl","port":"height"},"metadata":{}},{"src":{"process":"core/Split_xvdlb","port":"out"},"tgt":{"process":"canvas/PointFromObject_l1e2e","port":"in"},"metadata":{"route":0}},{"src":{"process":"canvas/PointFromObject_l1e2e","port":"point"},"tgt":{"process":"canvas/MakeRectangle_v3sfl","port":"point"},"metadata":{}},{"data":"width","tgt":{"process":"width","port":"key"}},{"data":"height","tgt":{"process":"height","port":"key"}}]}');
});
require.register("noflo-noflo-canvas/graphs/CopyCanvas.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"CopyCanvas","id":"CopyCanvas","environment":{"type":"noflo-browser"}},"inports":{"canvas":{"process":"core/Repeat_wuue3","port":"in","metadata":{"x":0,"y":36}}},"outports":{"canvas_copy":{"process":"Draw","port":"canvas","metadata":{"x":828,"y":72}}},"groups":[{"name":"create","nodes":["CreateCanvas","getHeight","getWidth"],"metadata":{"description":"make new canvas with original dimensions"}},{"name":"copy","nodes":["DrawImage","Draw"],"metadata":{"description":"draw original to new"}}],"processes":{"CreateCanvas":{"component":"canvas/CreateCanvas","metadata":{"label":"CreateCanvas","x":396,"y":252}},"DrawImage":{"component":"canvas/DrawImage","metadata":{"label":"DrawImage","x":576,"y":72}},"Draw":{"component":"canvas/Draw","metadata":{"label":"Draw","x":684,"y":72}},"core/Repeat_wuue3":{"component":"core/Repeat","metadata":{"label":"core/Repeat","x":144,"y":36}},"getHeight":{"component":"dom/GetAttribute","metadata":{"label":"getHeight","x":288,"y":252}},"getWidth":{"component":"dom/GetAttribute","metadata":{"label":"getWidth","x":288,"y":144}}},"connections":[{"src":{"process":"core/Repeat_wuue3","port":"out"},"tgt":{"process":"getWidth","port":"element"},"metadata":{}},{"src":{"process":"core/Repeat_wuue3","port":"out"},"tgt":{"process":"getHeight","port":"element"},"metadata":{"route":0}},{"src":{"process":"getWidth","port":"out"},"tgt":{"process":"CreateCanvas","port":"width"},"metadata":{}},{"src":{"process":"getHeight","port":"out"},"tgt":{"process":"CreateCanvas","port":"height"},"metadata":{}},{"src":{"process":"DrawImage","port":"drawimage"},"tgt":{"process":"Draw","port":"commands"},"metadata":{}},{"src":{"process":"CreateCanvas","port":"canvas"},"tgt":{"process":"Draw","port":"canvas"},"metadata":{}},{"src":{"process":"core/Repeat_wuue3","port":"out"},"tgt":{"process":"DrawImage","port":"image"},"metadata":{"route":0}},{"data":"width","tgt":{"process":"getWidth","port":"attribute"}},{"data":"height","tgt":{"process":"getHeight","port":"attribute"}},{"data":{"x":0,"y":0},"tgt":{"process":"DrawImage","port":"destpoint"}},{"data":true,"tgt":{"process":"Draw","port":"drawevery"}}]}');
});
require.register("noflo-noflo-canvas/lib/MakeCanvasPrimative.js", function(exports, require, module){
var noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

exports.MakeCanvasPrimative = (function(_super) {
  __extends(MakeCanvasPrimative, _super);

  function MakeCanvasPrimative(type, ports) {
    this.compute = __bind(this.compute, this);
    var name, port;
    this.type = type;
    this.props = {};
    this.props.type = type;
    this.inPorts = new noflo.InPorts(ports);
    this.outPorts = new noflo.OutPorts();
    this.outPorts[type] = new noflo.OutPort({
      name: type,
      datatype: 'object',
      type: "noflo-canvas/" + type
    });
    this.outPorts[type].on('attach', this.compute.bind(this));
    for (name in ports) {
      if (!__hasProp.call(ports, name)) continue;
      port = ports[name];
      if (port.addressable === true) {
        this.props[name] = [];
        this.inPorts[name].on('data', this.setPropertyIndexed.bind(this, name));
      } else {
        if ((port.value != null) || port.required !== false) {
          this.props[name] = port.value;
        }
        this.inPorts[name].on('data', this.setProperty.bind(this, name));
      }
    }
  }

  MakeCanvasPrimative.prototype.setProperty = function(name, data) {
    this.props[name] = data;
    return this.compute();
  };

  MakeCanvasPrimative.prototype.setPropertyIndexed = function(name, data, i) {
    this.props[name][i] = data;
    return this.compute();
  };

  MakeCanvasPrimative.prototype.compute = function() {
    var name, out, prop, _ref;
    if (this.outPorts[this.type].isAttached()) {
      out = {};
      _ref = this.props;
      for (name in _ref) {
        if (!__hasProp.call(_ref, name)) continue;
        prop = _ref[name];
        if ((this.inPorts[name] != null) && this.inPorts[name].options.addressable) {
          out[name] = this.expandToArray(prop);
        } else {
          out[name] = prop;
        }
      }
      out = this.expandToArray(out);
      if (out) {
        return this.outPorts[this.type].send(out);
      }
    }
  };

  MakeCanvasPrimative.prototype.expandToArray = function(props) {
    var arr, i, keys, length, name, obj, prop, _i, _j, _k, _len, _len1, _ref;
    length = 0;
    keys = Object.keys(props);
    for (_i = 0, _len = keys.length; _i < _len; _i++) {
      name = keys[_i];
      prop = props[name];
      if (prop == null) {
        return null;
      }
      if (prop instanceof Array) {
        if (!(prop.length > 0)) {
          return null;
        }
        if (length < prop.length) {
          length = prop.length;
        }
      }
    }
    if (length === 0) {
      return props;
    }
    if (length > 0) {
      arr = [];
      for (i = _j = 0, _ref = length - 1; 0 <= _ref ? _j <= _ref : _j >= _ref; i = 0 <= _ref ? ++_j : --_j) {
        if (props instanceof Array) {
          obj = [];
        } else {
          obj = {};
          obj.type = props.type;
        }
        keys = Object.keys(props);
        for (_k = 0, _len1 = keys.length; _k < _len1; _k++) {
          name = keys[_k];
          prop = props[name];
          if (prop instanceof Array) {
            obj[name] = prop[i] != null ? prop[i] : prop[i % prop.length];
          } else {
            obj[name] = prop;
          }
        }
        arr.push(obj);
      }
      return arr;
    }
  };

  return MakeCanvasPrimative;

})(noflo.Component);

});
require.register("noflo-noflo-canvas/components/CreateCanvas.js", function(exports, require, module){
var CreateCanvas, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

CreateCanvas = (function(_super) {
  __extends(CreateCanvas, _super);

  CreateCanvas.prototype.description = 'Makes a Canvas with given dimensions';

  CreateCanvas.prototype.icon = 'pencil-square';

  function CreateCanvas() {
    this.create = __bind(this.create, this);
    this.width = null;
    this.height = null;
    this.inPorts = new noflo.InPorts({
      width: {
        datatype: "int"
      },
      height: {
        datatype: "int"
      }
    });
    this.outPorts = new noflo.OutPorts({
      canvas: {
        datatype: 'object'
      }
    });
    this.inPorts.width.on('data', (function(_this) {
      return function(data) {
        _this.width = data;
        return _this.create();
      };
    })(this));
    this.inPorts.height.on('data', (function(_this) {
      return function(data) {
        _this.height = data;
        return _this.create();
      };
    })(this));
  }

  CreateCanvas.prototype.create = function() {
    var canvas;
    if (!(this.width > 0 && this.height > 0)) {
      return;
    }
    canvas = document.createElement('canvas');
    canvas.width = this.width;
    canvas.height = this.height;
    if (this.outPorts.canvas.isAttached()) {
      return this.outPorts.canvas.send(canvas);
    }
  };

  return CreateCanvas;

})(noflo.Component);

exports.getComponent = function() {
  return new CreateCanvas;
};

});
require.register("noflo-noflo-canvas/components/MakeColor.js", function(exports, require, module){
var MakeCanvasPrimative, MakeColor, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

MakeColor = (function(_super) {
  __extends(MakeColor, _super);

  MakeColor.prototype.description = 'Creates HSL or HSLA color or colors';

  MakeColor.prototype.icon = 'tint';

  function MakeColor() {
    var ports;
    ports = {
      hue: {
        datatype: 'number',
        description: 'from 0 to 360',
        required: true
      },
      saturation: {
        datatype: 'number',
        description: 'from 0 to 100',
        required: true
      },
      lightness: {
        datatype: 'number',
        description: 'from 0 to 100',
        required: true
      },
      alpha: {
        datatype: 'number',
        description: 'from 0 to 1.0',
        required: false
      }
    };
    MakeColor.__super__.constructor.call(this, 'color', ports);
  }

  MakeColor.prototype.compute = function() {
    var color;
    if (!this.outPorts.color.isAttached()) {
      return;
    }
    if (!((this.props.hue != null) && (this.props.saturation != null) && (this.props.lightness != null))) {
      return;
    }
    color = this.props;
    if (this.props.hue instanceof Array || this.props.saturation instanceof Array || this.props.lightness instanceof Array || this.props.alpha instanceof Array) {
      color = this.expandToArray(this.props);
      color = color.map(this.colorToString);
    } else {
      color = this.colorToString(this.props);
    }
    return this.outPorts.color.send(color);
  };

  MakeColor.prototype.colorToString = function(color) {
    if (color.alpha != null) {
      return "hsla(" + color.hue + ", " + color.saturation + "%, " + color.lightness + "%, " + color.alpha + ")";
    }
    return "hsl(" + color.hue + ", " + color.saturation + "%, " + color.lightness + "%)";
  };

  return MakeColor;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new MakeColor;
};

});
require.register("noflo-noflo-canvas/components/MakeRange.js", function(exports, require, module){
var MakeRange, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeRange = (function(_super) {
  __extends(MakeRange, _super);

  MakeRange.prototype.description = 'Make an array of evenly-spaced numbers';

  MakeRange.prototype.icon = 'folder-o';

  function MakeRange() {
    this.from = null;
    this.to = null;
    this.count = 2;
    this.inPorts = new noflo.InPorts({
      from: {
        datatype: 'number',
        required: true
      },
      to: {
        datatype: 'number',
        required: true
      },
      count: {
        datatype: 'int',
        required: true
      }
    });
    this.outPorts = new noflo.OutPorts({
      range: {
        datatype: 'array'
      }
    });
    this.inPorts.from.on('data', (function(_this) {
      return function(data) {
        _this.from = data;
        return _this.compute();
      };
    })(this));
    this.inPorts.to.on('data', (function(_this) {
      return function(data) {
        _this.to = data;
        return _this.compute();
      };
    })(this));
    this.inPorts.count.on('data', (function(_this) {
      return function(data) {
        _this.count = data;
        return _this.compute();
      };
    })(this));
  }

  MakeRange.prototype.compute = function() {
    var f, i, increment, range, spread, _i, _ref;
    if (!this.outPorts.range.isAttached()) {
      return;
    }
    if ((this.from != null) && (this.to != null) && (this.count != null) && this.count > 1) {
      range = [];
      f = this.from;
      spread = this.to - this.from;
      increment = spread / (this.count - 1);
      for (i = _i = 0, _ref = this.count - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        range[i] = this.from + increment * i;
      }
      return this.outPorts.range.send(range);
    } else if ((this.from != null) && this.count === 1) {
      return this.outPorts.range.send(this.from);
    }
  };

  return MakeRange;

})(noflo.Component);

exports.getComponent = function() {
  return new MakeRange;
};

});
require.register("noflo-noflo-canvas/components/MakeIncrement.js", function(exports, require, module){
var MakeIncrement, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeIncrement = (function(_super) {
  __extends(MakeIncrement, _super);

  MakeIncrement.prototype.description = 'Make an array of numbers by increment';

  MakeIncrement.prototype.icon = 'folder-o';

  function MakeIncrement() {
    this.from = null;
    this.to = null;
    this.increment = 1;
    this.inPorts = new noflo.InPorts({
      from: {
        datatype: 'number'
      },
      to: {
        datatype: 'number'
      },
      increment: {
        datatype: 'int',
        description: 'defaults to 1'
      }
    });
    this.outPorts = new noflo.OutPorts({
      range: {
        datatype: 'array'
      }
    });
    this.inPorts.from.on('data', (function(_this) {
      return function(data) {
        _this.from = data;
        return _this.compute();
      };
    })(this));
    this.inPorts.to.on('data', (function(_this) {
      return function(data) {
        _this.to = data;
        return _this.compute();
      };
    })(this));
    this.inPorts.increment.on('data', (function(_this) {
      return function(data) {
        _this.increment = data;
        return _this.compute();
      };
    })(this));
  }

  MakeIncrement.prototype.compute = function() {
    var f, range;
    if (!this.outPorts.range.isAttached()) {
      return;
    }
    if (!((this.from != null) && (this.to != null) && (this.increment != null))) {
      return;
    }
    range = [];
    f = this.from;
    if (this.from <= this.to) {
      while (f <= this.to) {
        range.push(f);
        f += this.increment;
      }
    } else {
      while (f >= this.to) {
        range.push(f);
        f -= this.increment;
      }
    }
    return this.outPorts.range.send(range);
  };

  return MakeIncrement;

})(noflo.Component);

exports.getComponent = function() {
  return new MakeIncrement;
};

});
require.register("noflo-noflo-canvas/components/MakeRandom.js", function(exports, require, module){
var MakeRandom, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeRandom = (function(_super) {
  __extends(MakeRandom, _super);

  MakeRandom.prototype.description = 'Make an array of random numbers';

  MakeRandom.prototype.icon = 'random';

  function MakeRandom() {
    this.min = null;
    this.max = null;
    this.count = null;
    this.inPorts = new noflo.InPorts({
      min: {
        datatype: 'number',
        required: true
      },
      max: {
        datatype: 'number',
        required: true
      },
      count: {
        datatype: 'int',
        required: true
      }
    });
    this.outPorts = new noflo.OutPorts({
      numbers: {
        datatype: 'array'
      }
    });
    this.inPorts.min.on('data', (function(_this) {
      return function(data) {
        _this.min = data;
        return _this.compute();
      };
    })(this));
    this.inPorts.max.on('data', (function(_this) {
      return function(data) {
        _this.max = data;
        return _this.compute();
      };
    })(this));
    this.inPorts.count.on('data', (function(_this) {
      return function(data) {
        _this.count = data;
        return _this.compute();
      };
    })(this));
  }

  MakeRandom.prototype.compute = function() {
    var i, number, numbers, spread, _i, _ref;
    if (!this.outPorts.numbers.isAttached()) {
      return;
    }
    if (!((this.min != null) && (this.max != null) && (this.count != null) && this.count >= 1)) {
      return;
    }
    spread = this.max - this.min;
    if (this.count === 1) {
      number = this.min + Math.random() * spread;
      this.outPorts.numbers.send(number);
    } else {
      numbers = [];
      for (i = _i = 0, _ref = this.count - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        numbers[i] = this.min + Math.random() * spread;
      }
      this.outPorts.numbers.send(numbers);
    }
    return this.outPorts.numbers.disconnect();
  };

  return MakeRandom;

})(noflo.Component);

exports.getComponent = function() {
  return new MakeRandom;
};

});
require.register("noflo-noflo-canvas/components/MakePoint.js", function(exports, require, module){
var MakeCanvasPrimative, MakePoint, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

MakePoint = (function(_super) {
  __extends(MakePoint, _super);

  MakePoint.prototype.description = 'Creates a point or points';

  MakePoint.prototype.icon = 'crosshairs';

  function MakePoint() {
    var ports;
    ports = {
      x: {
        datatype: 'number',
        required: true
      },
      y: {
        datatype: 'number',
        required: true
      }
    };
    MakePoint.__super__.constructor.call(this, 'point', ports);
  }

  return MakePoint;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new MakePoint;
};

});
require.register("noflo-noflo-canvas/components/MakeGrid.js", function(exports, require, module){
var MakeCanvasPrimative, MakeGrid, expandToArray, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

MakeGrid = (function(_super) {
  __extends(MakeGrid, _super);

  MakeGrid.prototype.description = 'Creates a grid or line of points';

  MakeGrid.prototype.icon = 'crosshairs';

  function MakeGrid() {
    var ports;
    ports = {
      x: {
        datatype: 'number',
        required: true
      },
      y: {
        datatype: 'number',
        required: true
      }
    };
    MakeGrid.__super__.constructor.call(this, 'point', ports);
  }

  MakeGrid.prototype.compute = function() {
    var props;
    if (this.outPorts.point.isAttached()) {
      props = this.props;
      if (!((this.props.x != null) && (this.props.y != null))) {
        return;
      }
      if (this.props.x instanceof Array || this.props.y instanceof Array) {
        props = expandToArray(this.props);
      }
      return this.outPorts.point.send(props);
    }
  };

  return MakeGrid;

})(MakeCanvasPrimative);

expandToArray = function(props) {
  var arr, length, obj, x, xLen, y, yLen, _i, _j, _ref, _ref1;
  length = 0;
  xLen = 1;
  yLen = 1;
  if (props.x instanceof Array) {
    xLen = props.x.length;
  }
  if (props.y instanceof Array) {
    yLen = props.y.length;
  }
  length = xLen * yLen;
  arr = [];
  for (y = _i = 0, _ref = yLen - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; y = 0 <= _ref ? ++_i : --_i) {
    for (x = _j = 0, _ref1 = xLen - 1; 0 <= _ref1 ? _j <= _ref1 : _j >= _ref1; x = 0 <= _ref1 ? ++_j : --_j) {
      obj = {};
      obj.type = 'point';
      if (props.x instanceof Array) {
        obj.x = props.x[x] != null ? props.x[x] : props.x[xLen - 1];
      } else {
        obj.x = props.x;
      }
      if (props.y instanceof Array) {
        obj.y = props.y[y] != null ? props.y[y] : props.y[yLen - 1];
      } else {
        obj.y = props.y;
      }
      if ((obj.x != null) && (obj.y != null)) {
        arr.push(obj);
      }
    }
  }
  return arr;
};

exports.getComponent = function() {
  return new MakeGrid;
};

});
require.register("noflo-noflo-canvas/components/MakeRectangle.js", function(exports, require, module){
var MakeCanvasPrimative, MakeRectangle, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

MakeRectangle = (function(_super) {
  __extends(MakeRectangle, _super);

  MakeRectangle.prototype.description = 'Creates a rectangle or rectangles';

  MakeRectangle.prototype.icon = 'square-o';

  function MakeRectangle() {
    var ports;
    ports = {
      point: {
        datatype: 'object',
        description: 'top left point',
        required: true
      },
      width: {
        datatype: 'number',
        required: true
      },
      height: {
        datatype: 'number',
        required: true
      }
    };
    MakeRectangle.__super__.constructor.call(this, 'rectangle', ports);
  }

  return MakeRectangle;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new MakeRectangle;
};

});
require.register("noflo-noflo-canvas/components/MakeCircle.js", function(exports, require, module){
var MakeCanvasPrimative, MakeCircle, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

MakeCircle = (function(_super) {
  __extends(MakeCircle, _super);

  MakeCircle.prototype.description = 'Creates a circle or circles';

  MakeCircle.prototype.icon = 'circle-o';

  function MakeCircle() {
    var ports;
    ports = {
      center: {
        datatype: 'object',
        type: 'noflo-canvas/point',
        description: 'center point',
        required: true
      },
      radius: {
        datatype: 'number',
        required: true
      }
    };
    MakeCircle.__super__.constructor.call(this, 'circle', ports);
  }

  return MakeCircle;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new MakeCircle;
};

});
require.register("noflo-noflo-canvas/components/MakeBezierCurve.js", function(exports, require, module){
var MakeBezierCurve, MakeCanvasPrimative, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

MakeBezierCurve = (function(_super) {
  __extends(MakeBezierCurve, _super);

  MakeBezierCurve.prototype.description = 'Creates a Bezier curve';

  MakeBezierCurve.prototype.icon = 'pencil-square';

  function MakeBezierCurve() {
    var ports;
    ports = {
      control1: {
        datatype: 'object',
        type: 'noflo-canvas/point',
        description: 'control point 1',
        required: true
      },
      control2: {
        datatype: 'object',
        type: 'noflo-canvas/point',
        description: 'control point 2',
        required: true
      },
      end: {
        datatype: 'object',
        type: 'noflo-canvas/point',
        description: 'end point',
        required: true
      }
    };
    MakeBezierCurve.__super__.constructor.call(this, 'beziercurve', ports);
  }

  return MakeBezierCurve;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new MakeBezierCurve;
};

});
require.register("noflo-noflo-canvas/components/MakeArc.js", function(exports, require, module){
var MakeArc, MakeCanvasPrimative, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

MakeArc = (function(_super) {
  __extends(MakeArc, _super);

  MakeArc.prototype.description = 'Creates an arc or arcs';

  MakeArc.prototype.icon = 'power-off';

  function MakeArc() {
    var ports;
    ports = {
      center: {
        datatype: 'object',
        description: 'point for center',
        required: true
      },
      radius: {
        datatype: 'number',
        required: true
      },
      start: {
        datatype: 'number',
        description: 'start angle in radians',
        required: true
      },
      end: {
        datatype: 'number',
        description: 'end angle in radians',
        required: true
      },
      reverse: {
        datatype: 'boolean',
        required: true,
        "default": false
      }
    };
    MakeArc.__super__.constructor.call(this, 'arc', ports);
  }

  return MakeArc;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new MakeArc;
};

});
require.register("noflo-noflo-canvas/components/MakePath.js", function(exports, require, module){
var MakeCanvasPrimative, MakePath, noflo, typeIsArray,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

typeIsArray = Array.isArray || function(value) {
  return Object.toString.call(value) === '[object Array]';
};

MakePath = (function(_super) {
  __extends(MakePath, _super);

  MakePath.prototype.description = 'Makes a path given a number of points, curves, etc';

  MakePath.prototype.icon = 'star-o';

  function MakePath() {
    this.compute = __bind(this.compute, this);
    var ports;
    ports = {
      items: {
        datatype: 'object',
        description: 'points, arcs, and curves to combine to make path',
        addressable: true,
        required: true
      }
    };
    MakePath.__super__.constructor.call(this, 'path', ports);
  }

  MakePath.prototype.compute = function() {
    var arrayCount, item, out, _i, _len, _ref;
    if (!this.outPorts['path'].isAttached()) {
      return;
    }
    out = {
      type: 'path',
      items: []
    };
    arrayCount = 0;
    _ref = this.props.items;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      item = _ref[_i];
      if (item == null) {
        return;
      }
      if (typeIsArray(item)) {
        arrayCount++;
      }
    }
    if (arrayCount === 0) {
      out.items = this.props.items;
    } else if (this.props.items.length === 1 && arrayCount === 1) {
      out.items = this.props.items[0];
    } else {
      out.items = this.expandToArray(this.props.items);
      out = this.expandToArray(out);
    }
    if (out) {
      return this.outPorts[this.type].send(out);
    }
  };

  return MakePath;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new MakePath;
};

});
require.register("noflo-noflo-canvas/components/Transform.js", function(exports, require, module){
var MakeCanvasPrimative, Transform, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

Transform = (function(_super) {
  __extends(Transform, _super);

  Transform.prototype.description = 'Translate, rotate, and/or scale passed drawing commands.';

  Transform.prototype.icon = 'arrows';

  function Transform() {
    var ports;
    ports = {
      items: {
        datatype: 'object',
        description: 'fill and stroke commands to transform',
        addressable: true,
        required: true
      },
      translate: {
        datatype: 'object',
        type: 'noflo-canvas/point',
        description: 'translate by this vector',
        required: false
      },
      scale: {
        datatype: 'object',
        type: 'noflo-canvas/point',
        description: 'stretch or mirror',
        required: false
      },
      scaleboth: {
        datatype: 'number',
        description: 'scale both x and y',
        required: false
      },
      rotate: {
        datatype: 'number',
        type: 'noflo-canvas/angle',
        description: 'angle in radians',
        required: false
      }
    };
    Transform.__super__.constructor.call(this, 'transform', ports);
  }

  return Transform;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new Transform;
};

});
require.register("noflo-noflo-canvas/components/Group.js", function(exports, require, module){
var Group, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Group = (function(_super) {
  __extends(Group, _super);

  Group.prototype.description = 'Group drawing commands or primatives into a flattened array.';

  Group.prototype.icon = 'folder-o';

  function Group() {
    this.group = [];
    this.inPorts = {
      items: new noflo.ArrayPort('object')
    };
    this.outPorts = {
      group: new noflo.Port('array')
    };
    this.inPorts.items.on('data', (function(_this) {
      return function(data, i) {
        var child, g, grandchild, _i, _j, _len, _len1, _ref;
        _this.group[i] = data;
        if (_this.outPorts.group.isAttached()) {
          g = [];
          _ref = _this.group;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            child = _ref[_i];
            if (child instanceof Array) {
              for (_j = 0, _len1 = child.length; _j < _len1; _j++) {
                grandchild = child[_j];
                g.push(grandchild);
              }
            } else {
              g.push(child);
            }
          }
          return _this.outPorts.group.send(g);
        }
      };
    })(this));
  }

  return Group;

})(noflo.Component);

exports.getComponent = function() {
  return new Group;
};

});
require.register("noflo-noflo-canvas/components/Recurse.js", function(exports, require, module){
var Recurse, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Recurse = (function(_super) {
  __extends(Recurse, _super);

  Recurse.prototype.description = 'Makes a translation recursive.';

  Recurse.prototype.icon = 'retweet';

  function Recurse() {
    this.recurse = {
      type: 'recurse',
      recursables: [],
      count: null
    };
    this.inPorts = {
      recursables: new noflo.ArrayPort('object'),
      count: new noflo.Port('number')
    };
    this.outPorts = {
      recurse: new noflo.Port('object')
    };
    this.inPorts.recursables.on('data', (function(_this) {
      return function(data, i) {
        _this.recurse.recursables[i] = data;
        return _this.compute();
      };
    })(this));
    this.inPorts.recursables.description = 'Only translate is recursable';
    this.inPorts.count.on('data', (function(_this) {
      return function(data) {
        _this.recurse.count = data;
        return _this.compute();
      };
    })(this));
  }

  Recurse.prototype.compute = function() {
    if (this.outPorts.recurse.isAttached() && this.recurse.recursables.length > 0) {
      return this.outPorts.recurse.send(this.recurse);
    }
  };

  return Recurse;

})(noflo.Component);

exports.getComponent = function() {
  return new Recurse;
};

});
require.register("noflo-noflo-canvas/components/StrokeStyle.js", function(exports, require, module){
var StrokeStyle, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

StrokeStyle = (function(_super) {
  __extends(StrokeStyle, _super);

  StrokeStyle.prototype.description = 'Sets the global stroke style';

  StrokeStyle.prototype.icon = 'pencil-square-o';

  function StrokeStyle() {
    this.strokestyle = {
      type: 'strokeStyle',
      value: null
    };
    this.inPorts = {
      style: new noflo.Port('string')
    };
    this.outPorts = {
      strokestyle: new noflo.Port('object')
    };
    this.inPorts.style.on('data', (function(_this) {
      return function(data) {
        _this.strokestyle.value = data;
        if (_this.outPorts.strokestyle.isAttached()) {
          return _this.outPorts.strokestyle.send(_this.strokestyle);
        }
      };
    })(this));
  }

  return StrokeStyle;

})(noflo.Component);

exports.getComponent = function() {
  return new StrokeStyle;
};

});
require.register("noflo-noflo-canvas/components/LineWidth.js", function(exports, require, module){
var LineWidth, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

LineWidth = (function(_super) {
  __extends(LineWidth, _super);

  LineWidth.prototype.description = 'Sets the line width';

  LineWidth.prototype.icon = 'pencil-square';

  function LineWidth() {
    this.linewidth = {
      type: 'lineWidth',
      value: null
    };
    this.inPorts = {
      width: new noflo.Port('number')
    };
    this.outPorts = {
      linewidth: new noflo.Port('object')
    };
    this.inPorts.width.on('data', (function(_this) {
      return function(width) {
        _this.linewidth.value = width;
        if (_this.outPorts.linewidth.isAttached()) {
          return _this.outPorts.linewidth.send(_this.linewidth);
        }
      };
    })(this));
  }

  return LineWidth;

})(noflo.Component);

exports.getComponent = function() {
  return new LineWidth;
};

});
require.register("noflo-noflo-canvas/components/FillStyle.js", function(exports, require, module){
var FillStyle, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

FillStyle = (function(_super) {
  __extends(FillStyle, _super);

  FillStyle.prototype.description = 'Sets the global fill style';

  FillStyle.prototype.icon = 'pencil-square';

  function FillStyle() {
    this.fillstyle = {
      type: 'fillStyle',
      value: null
    };
    this.inPorts = {
      style: new noflo.Port('string')
    };
    this.outPorts = {
      fillstyle: new noflo.Port('object')
    };
    this.inPorts.style.on('data', (function(_this) {
      return function(data) {
        _this.fillstyle.value = data;
        if (_this.outPorts.fillstyle.isAttached()) {
          return _this.outPorts.fillstyle.send(_this.fillstyle);
        }
      };
    })(this));
  }

  return FillStyle;

})(noflo.Component);

exports.getComponent = function() {
  return new FillStyle;
};

});
require.register("noflo-noflo-canvas/components/Stroke.js", function(exports, require, module){
var MakeCanvasPrimative, Stroke, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

Stroke = (function(_super) {
  __extends(Stroke, _super);

  Stroke.prototype.description = 'Strokes lines for paths, rectangles, circles, and arcs';

  Stroke.prototype.icon = 'square-o';

  function Stroke() {
    var ports;
    ports = {
      items: {
        datatype: 'object',
        description: 'shapes (paths, circles, and rectangles) to stroke',
        addressable: true,
        required: true
      },
      strokestyle: {
        datatype: 'string',
        description: 'css color string or canvas style',
        required: false
      },
      linewidth: {
        datatype: 'number',
        description: 'stroke width in pixels',
        required: false
      },
      closepath: {
        datatype: 'boolean',
        description: 'draw line back to start point',
        value: false
      }
    };
    Stroke.__super__.constructor.call(this, 'stroke', ports);
  }

  return Stroke;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new Stroke;
};

});
require.register("noflo-noflo-canvas/components/Fill.js", function(exports, require, module){
var Fill, MakeCanvasPrimative, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

Fill = (function(_super) {
  __extends(Fill, _super);

  Fill.prototype.description = 'Fills the received paths, rectangles, circles, and arcs';

  Fill.prototype.icon = 'square';

  function Fill() {
    var ports;
    ports = {
      items: {
        datatype: 'object',
        description: 'shapes (paths, circles, and rectangles) to fill',
        addressable: true,
        required: true
      },
      fillstyle: {
        datatype: 'string',
        description: 'css color string',
        required: false
      }
    };
    Fill.__super__.constructor.call(this, 'fill', ports);
  }

  return Fill;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new Fill;
};

});
require.register("noflo-noflo-canvas/components/StrokeRect.js", function(exports, require, module){
var MakeCanvasPrimative, StrokeRect, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

StrokeRect = (function(_super) {
  __extends(StrokeRect, _super);

  StrokeRect.prototype.description = 'Strokes a rectangle';

  StrokeRect.prototype.icon = 'pencil-square-o';

  function StrokeRect() {
    var ports;
    ports = {
      point: {
        datatype: 'object',
        description: 'top left point',
        required: true
      },
      width: {
        datatype: 'number',
        required: true
      },
      height: {
        datatype: 'number',
        required: true
      }
    };
    StrokeRect.__super__.constructor.call(this, 'strokeRect', ports);
  }

  exports.getComponent = function() {
    return new StrokeRect;
  };

  return StrokeRect;

})(MakeCanvasPrimative);

});
require.register("noflo-noflo-canvas/components/FillRect.js", function(exports, require, module){
var FillRect, MakeCanvasPrimative, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

FillRect = (function(_super) {
  __extends(FillRect, _super);

  FillRect.prototype.description = 'Fills a rectangle';

  FillRect.prototype.icon = 'pencil-square';

  function FillRect() {
    var ports;
    ports = {
      point: {
        datatype: 'object',
        description: 'top left point',
        required: true
      },
      width: {
        datatype: 'number',
        required: true
      },
      height: {
        datatype: 'number',
        required: true
      }
    };
    FillRect.__super__.constructor.call(this, 'fillRect', ports);
  }

  exports.getComponent = function() {
    return new FillRect;
  };

  return FillRect;

})(MakeCanvasPrimative);

});
require.register("noflo-noflo-canvas/components/ClearRect.js", function(exports, require, module){
var ClearRect, MakeCanvasPrimative, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

ClearRect = (function(_super) {
  __extends(ClearRect, _super);

  ClearRect.prototype.description = 'Clear rectangle';

  ClearRect.prototype.icon = 'eraser';

  function ClearRect() {
    var ports;
    ports = {
      point: {
        datatype: 'object',
        description: 'top left point',
        required: true
      },
      width: {
        datatype: 'number',
        required: true
      },
      height: {
        datatype: 'number',
        required: true
      }
    };
    ClearRect.__super__.constructor.call(this, 'clearRect', ports);
  }

  return ClearRect;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new ClearRect;
};

});
require.register("noflo-noflo-canvas/components/DrawImage.js", function(exports, require, module){
var DrawImage, MakeCanvasPrimative, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

DrawImage = (function(_super) {
  __extends(DrawImage, _super);

  DrawImage.prototype.description = 'Draws the specified image';

  DrawImage.prototype.icon = 'pencil-square';

  function DrawImage() {
    var ports;
    ports = {
      image: {
        description: 'canvas, img, or video to draw',
        datatype: 'object',
        required: true
      },
      destpoint: {
        description: 'destination point (full size)',
        datatype: 'object',
        type: 'noflo-canvas/point',
        "default": {
          x: 0,
          y: 0
        },
        required: false
      },
      destrect: {
        description: 'destination rect, to scale',
        datatype: 'object',
        type: 'noflo-canvas/rectangle',
        required: false
      },
      sourcerect: {
        description: 'source rect, to scale',
        datatype: 'object',
        type: 'noflo-canvas/rectangle',
        required: false
      }
    };
    DrawImage.__super__.constructor.call(this, 'drawimage', ports);
  }

  return DrawImage;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new DrawImage;
};

});
require.register("noflo-noflo-canvas/components/Draw.js", function(exports, require, module){
var Draw, TAU, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

TAU = Math.PI * 2;

Draw = (function(_super) {
  __extends(Draw, _super);

  Draw.prototype.description = 'Draws received drawing commands';

  Draw.prototype.icon = 'pencil';

  function Draw() {
    this.drawimage = __bind(this.drawimage, this);
    this.circle = __bind(this.circle, this);
    this.arc = __bind(this.arc, this);
    this.strokeRect = __bind(this.strokeRect, this);
    this.fillRect = __bind(this.fillRect, this);
    this.rectangle = __bind(this.rectangle, this);
    this.recurse = __bind(this.recurse, this);
    this.transform = __bind(this.transform, this);
    this.group = __bind(this.group, this);
    this.path = __bind(this.path, this);
    this.pathItem = __bind(this.pathItem, this);
    this.bezierCurve = __bind(this.bezierCurve, this);
    this.fill = __bind(this.fill, this);
    this.stroke = __bind(this.stroke, this);
    this.fillStyle = __bind(this.fillStyle, this);
    this.lineWidth = __bind(this.lineWidth, this);
    this.strokeStyle = __bind(this.strokeStyle, this);
    this.clearRect = __bind(this.clearRect, this);
    this.parseThing = __bind(this.parseThing, this);
    this.parse = __bind(this.parse, this);
    this.drawevery = false;
    this.clearevery = false;
    this.canvas = null;
    this.context = null;
    this.commands = [];
    this.inPorts = {
      tick: new noflo.Port('bang'),
      drawevery: new noflo.Port('boolean'),
      clearevery: new noflo.Port('boolean'),
      canvas: new noflo.Port('object'),
      commands: new noflo.ArrayPort('object')
    };
    this.outPorts = new noflo.OutPorts({
      canvas: {
        datatype: 'object',
        required: false
      }
    });
    this.inPorts.tick.on('data', (function(_this) {
      return function(tick) {
        if (_this.context) {
          _this.parse(_this.commands);
          return;
        }
        return _this.sendLog({
          loglevel: 'error',
          message: 'Received commands but there is not 2d context attached.'
        });
      };
    })(this));
    this.inPorts.tick.on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.canvas.beginGroup(group);
      };
    })(this));
    this.inPorts.tick.on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.canvas.endGroup();
      };
    })(this));
    this.inPorts.tick.on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.canvas.disconnect();
      };
    })(this));
    this.inPorts.drawevery.on('data', (function(_this) {
      return function(data) {
        return _this.drawevery = data;
      };
    })(this));
    this.inPorts.clearevery.on('data', (function(_this) {
      return function(data) {
        return _this.clearevery = data;
      };
    })(this));
    this.inPorts.canvas.on('data', (function(_this) {
      return function(canvas) {
        _this.canvas = canvas;
        return _this.context = canvas.getContext('2d');
      };
    })(this));
    this.inPorts.commands.on('data', (function(_this) {
      return function(commands, i) {
        _this.commands[i] = commands;
        if (_this.drawevery) {
          return _this.parse(_this.commands);
        }
      };
    })(this));
  }

  Draw.prototype.parse = function(commands) {
    if (!this.context) {
      return;
    }
    if (this.clearevery) {
      this.context.clearRect(0, 0, this.canvas.width, this.canvas.height);
    }
    this.parseThing(commands);
    return this.outPorts.canvas.send(this.canvas);
  };

  Draw.prototype.parseThing = function(thing, before, after) {
    var item, _i, _len, _results;
    if ((thing != null) && (thing.type != null) && (this[thing.type] != null)) {
      if (before != null) {
        before();
      }
      this[thing.type](thing);
      if (after != null) {
        return after();
      }
    } else if (thing instanceof Array) {
      _results = [];
      for (_i = 0, _len = thing.length; _i < _len; _i++) {
        item = thing[_i];
        if (item == null) {
          continue;
        }
        _results.push(this.parseThing(item, before, after));
      }
      return _results;
    }
  };

  Draw.prototype.clearRect = function(clearRect) {
    var h, w, x, y;
    x = clearRect.point.x;
    y = clearRect.point.y;
    w = clearRect.width;
    h = clearRect.height;
    return this.context.clearRect(x, y, w, h);
  };

  Draw.prototype.strokeStyle = function(data) {
    return this.context.strokeStyle = data.value;
  };

  Draw.prototype.lineWidth = function(data) {
    return this.context.lineWidth = data.value;
  };

  Draw.prototype.fillStyle = function(data) {
    return this.context.fillStyle = data.value;
  };

  Draw.prototype.stroke = function(stroke) {
    var after, before, oldStyle, oldWidth;
    if (stroke.strokestyle != null) {
      oldStyle = this.context.strokeStyle;
      this.context.strokeStyle = stroke.strokestyle;
    }
    if (stroke.linewidth != null) {
      oldWidth = this.context.linewidth;
      this.context.lineWidth = stroke.linewidth;
    }
    before = function() {
      return this.context.beginPath();
    };
    after = function() {
      if (stroke.closepath) {
        this.context.closePath();
      }
      return this.context.stroke();
    };
    this.parseThing(stroke.items, before.bind(this), after.bind(this));
    if (oldStyle != null) {
      this.context.strokeStyle = oldStyle;
    }
    if (oldWidth != null) {
      return this.context.lineWidth = oldWidth;
    }
  };

  Draw.prototype.fill = function(fill) {
    var after, before, oldStyle;
    if (fill.fillstyle != null) {
      oldStyle = this.context.fillStyle;
      this.context.fillStyle = fill.fillstyle;
    }
    before = function() {
      return this.context.beginPath();
    };
    after = function() {
      this.context.closePath();
      return this.context.fill();
    };
    this.parseThing(fill.items, before.bind(this), after.bind(this));
    if (oldStyle != null) {
      return this.context.fillStyle = oldStyle;
    }
  };

  Draw.prototype.bezierCurve = function(curve) {
    return this.context.bezierCurveTo(curve.control1.x, curve.control1.y, curve.control2.x, curve.control2.y, curve.end.x, curve.end.y);
  };

  Draw.prototype.pathItem = function(thing, i) {
    var child, j, _i, _len;
    if (thing instanceof Array) {
      for (j = _i = 0, _len = thing.length; _i < _len; j = ++_i) {
        child = thing[j];
        this.pathItem(child, j);
      }
      return;
    }
    if (thing.type != null) {
      switch (thing.type) {
        case 'point':
          if (i === 0) {
            return this.context.moveTo(thing.x, thing.y);
          } else {
            return this.context.lineTo(thing.x, thing.y);
          }
          break;
        case 'beziercurve':
          return this.bezierCurve(thing);
        case 'arc':
          return this.arc(thing);
      }
    }
  };

  Draw.prototype.path = function(path) {
    var i, thing, _i, _len, _ref, _results;
    _ref = path.items;
    _results = [];
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      thing = _ref[i];
      if (thing == null) {
        continue;
      }
      _results.push(this.pathItem(thing, i));
    }
    return _results;
  };

  Draw.prototype.group = function(group) {
    var thing, _i, _len, _ref, _results;
    _ref = group.groupables;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      thing = _ref[_i];
      if (!((thing != null) && (thing.type != null) && (this[thing.type] != null))) {
        continue;
      }
      _results.push(this[thing.type].call(this, thing));
    }
    return _results;
  };

  Draw.prototype.transform = function(transform, recurse) {
    if (transform.translate != null) {
      this.context.translate(transform.translate.x, transform.translate.y);
    }
    if (transform.rotate != null) {
      this.context.rotate(transform.rotate);
    }
    if (transform.scaleboth) {
      this.context.scale(transform.scaleboth, transform.scaleboth);
    } else if ((transform.scale != null) && transform.scale.x && transform.scale.y) {
      this.context.scale(transform.scale.x, transform.scale.y);
    }
    this.parseThing(transform.items);
    if ((recurse != null) && recurse > 0) {
      this.transform(transform, recurse - 1);
    }
    if (transform.scaleboth) {
      this.context.scale(1 / transform.scaleboth, 1 / transform.scaleboth);
    } else if ((transform.scale != null) && transform.scale.x && transform.scale.y) {
      this.context.scale(1 / transform.scale.x, 1 / transform.scale.y);
    }
    if (transform.rotate != null) {
      this.context.rotate(0 - transform.rotate);
    }
    if (transform.translate != null) {
      return this.context.translate(0 - transform.translate.x, 0 - transform.translate.y);
    }
  };

  Draw.prototype.recurse = function(recurse) {
    var thing, _i, _len, _ref, _results;
    _ref = recurse.recursables;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      thing = _ref[_i];
      if (thing == null) {
        continue;
      }
      if (thing.type === 'transform') {
        _results.push(this.transform(thing, recurse.count));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  Draw.prototype.rectangle = function(rect) {
    var h, w, x, y;
    x = rect.point.x;
    y = rect.point.y;
    w = rect.width;
    h = rect.height;
    this.context.moveTo(x, y);
    this.context.lineTo(x + w, y);
    this.context.lineTo(x + w, y + h);
    this.context.lineTo(x, y + h);
    return this.context.lineTo(x, y);
  };

  Draw.prototype.fillRect = function(fillrect) {
    var h, w, x, y;
    x = fillrect.point.x;
    y = fillrect.point.y;
    w = fillrect.width;
    h = fillrect.height;
    return this.context.fillRect(x, y, w, h);
  };

  Draw.prototype.strokeRect = function(strokerect) {
    var h, w, x, y;
    x = strokerect.point.x;
    y = strokerect.point.y;
    w = strokerect.width;
    h = strokerect.height;
    return this.context.strokeRect(x, y, w, h);
  };

  Draw.prototype.arc = function(arc) {
    return this.context.arc(arc.center.x, arc.center.y, arc.radius, arc.start, arc.end, arc.reverse);
  };

  Draw.prototype.circle = function(circle) {
    return this.context.arc(circle.center.x, circle.center.y, circle.radius, 0, TAU);
  };

  Draw.prototype.drawimage = function(drawimage) {
    var d, p, s;
    if (drawimage.image == null) {
      return;
    }
    if ((drawimage.sourcerect != null) && (drawimage.destrect != null)) {
      d = drawimage.destrect;
      s = drawimage.sourcerect;
      this.context.drawImage(drawimage.image, d.point.x, d.point.y, d.width, d.height, s.point.x, s.point.y, s.width, s.height);
      return;
    }
    if (drawimage.destrect != null) {
      d = drawimage.destrect;
      this.context.drawImage(drawimage.image, d.point.x, d.point.y, d.width, d.height);
      return;
    }
    if (drawimage.destpoint != null) {
      p = drawimage.destpoint;
      this.context.drawImage(drawimage.image, p.x, p.y);
      return;
    }
    return this.context.drawImage(drawimage.image, 0, 0);
  };

  return Draw;

})(noflo.LoggingComponent);

exports.getComponent = function() {
  return new Draw;
};

});
require.register("noflo-noflo-canvas/components/CreateCanvas-node.js", function(exports, require, module){
var Canvas, CreateCanvas, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Canvas = require('canvas');

CreateCanvas = (function(_super) {
  __extends(CreateCanvas, _super);

  CreateCanvas.prototype.description = 'Makes a Canvas with given dimensions';

  CreateCanvas.prototype.icon = 'pencil-square';

  function CreateCanvas() {
    this.create = __bind(this.create, this);
    this.width = null;
    this.height = null;
    this.inPorts = new noflo.InPorts({
      width: {
        datatype: "int"
      },
      height: {
        datatype: "int"
      }
    });
    this.outPorts = new noflo.OutPorts({
      canvas: {
        datatype: 'object'
      }
    });
    this.inPorts.width.on('data', (function(_this) {
      return function(data) {
        _this.width = data;
        return _this.create();
      };
    })(this));
    this.inPorts.height.on('data', (function(_this) {
      return function(data) {
        _this.height = data;
        return _this.create();
      };
    })(this));
  }

  CreateCanvas.prototype.create = function() {
    var canvas;
    if (!(this.width > 0 && this.height > 0)) {
      return;
    }
    canvas = new Canvas(this.width, this.height);
    if (this.outPorts.canvas.isAttached()) {
      return this.outPorts.canvas.send(canvas);
    }
  };

  return CreateCanvas;

})(noflo.Component);

exports.getComponent = function() {
  return new CreateCanvas;
};

});
require.register("noflo-noflo-canvas/components/ColorArrayToCss.js", function(exports, require, module){
var noflo;

noflo = require('noflo');

exports.getComponent = function() {
  var c, hex;
  c = new noflo.Component;
  hex = function(n) {
    var s;
    s = n.toString(16);
    if (s.length === 1) {
      s = "0" + s;
    }
    return s;
  };
  c.inPorts.add('in', function(event, payload) {
    var out, rgb;
    if (event === 'disconnect') {
      c.outPorts.out.disconnect();
    }
    if (event !== 'data') {
      return;
    }
    rgb = payload;
    out = "#" + hex(rgb[0]) + hex(rgb[1]) + hex(rgb[2]);
    return c.outPorts.out.send(out);
  });
  c.outPorts.add('out');
  return c;
};

});
require.register("noflo-noflo-canvas/components/SavePNG.js", function(exports, require, module){
var SavePNG, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SavePNG = (function(_super) {
  __extends(SavePNG, _super);

  SavePNG.prototype.description = 'Exports a canvas to PNG';

  SavePNG.prototype.icon = 'file-image-o';

  function SavePNG() {
    this.inPorts = {
      canvas: new noflo.Port('object')
    };
    this.outPorts = {
      png: new noflo.Port('object')
    };
    this.inPorts.canvas.on('data', (function(_this) {
      return function(canvas) {
        var img;
        img = canvas.toDataURL('image/png');
        if (_this.outPorts.png.isAttached()) {
          return _this.outPorts.png.send(img);
        }
      };
    })(this));
  }

  return SavePNG;

})(noflo.Component);

exports.getComponent = function() {
  return new SavePNG;
};

});
require.register("noflo-noflo-canvas/components/MakeRGBColor.js", function(exports, require, module){
var MakeCanvasPrimative, MakeRGBColor, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MakeCanvasPrimative = require('../lib/MakeCanvasPrimative').MakeCanvasPrimative;

MakeRGBColor = (function(_super) {
  __extends(MakeRGBColor, _super);

  MakeRGBColor.prototype.description = 'Creates RGA or RGBA color or colors';

  MakeRGBColor.prototype.icon = 'tint';

  function MakeRGBColor() {
    var ports;
    ports = {
      red: {
        datatype: 'int',
        description: 'from 0 to 255',
        required: true
      },
      green: {
        datatype: 'int',
        description: 'from 0 to 255',
        required: true
      },
      blue: {
        datatype: 'int',
        description: 'from 0 to 255',
        required: true
      },
      alpha: {
        datatype: 'number',
        description: 'optional, from 0 to 1.0',
        required: false
      }
    };
    MakeRGBColor.__super__.constructor.call(this, 'color', ports);
  }

  MakeRGBColor.prototype.compute = function() {
    var color;
    if (!this.outPorts.color.isAttached()) {
      return;
    }
    if (!((this.props.red != null) && (this.props.green != null) && (this.props.blue != null))) {
      return;
    }
    color = this.props;
    if (this.props.red instanceof Array || this.props.green instanceof Array || this.props.blue instanceof Array || this.props.alpha instanceof Array) {
      color = this.expandToArray(this.props);
      color = color.map(this.colorToString);
    } else {
      color = this.colorToString(this.props);
    }
    return this.outPorts.color.send(color);
  };

  MakeRGBColor.prototype.colorToString = function(color) {
    var a, b, g, r;
    console.log('ha!');
    r = Math.round(color.red);
    g = Math.round(color.green);
    b = Math.round(color.blue);
    if (color.alpha != null) {
      a = color.alpha;
      return "rgba(" + r + ", " + g + ", " + b + ", " + a + ")";
    } else {
      return "rgb(" + r + ", " + g + ", " + b + ")";
    }
  };

  return MakeRGBColor;

})(MakeCanvasPrimative);

exports.getComponent = function() {
  return new MakeRGBColor;
};

});
require.register("mrluc-owl-deepcopy/deep_copy.js", function(exports, require, module){
/* This file is part of OWL JavaScript Utilities.

OWL JavaScript Utilities is free software: you can redistribute it and/or 
modify it under the terms of the GNU Lesser General Public License
as published by the Free Software Foundation, either version 3 of
the License, or (at your option) any later version.

OWL JavaScript Utilities is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public 
License along with OWL JavaScript Utilities.  If not, see 
<http://www.gnu.org/licenses/>.
*/

/*
  Hey, so, this deep copy is still the only attempt at a truly
  comprehensive approach, even years later. Kudos to the original
  author, one 'Oran Looney' (or, at least, that's what his blog
  sez'.

  All I did was lift it out of the closure wrapper to make it
  CommonJS requireable.
*/


function Clone() {}

// clone objects, skip other types.
function clone(target) {
  if ( typeof target == 'object' ) {
    Clone.prototype = target;
    return new Clone();
  } else {
    return target;
  }
}


// Shallow Copy 
function copy(target) {
  if (typeof target !== 'object' ) {
    return target;  // non-object have value sematics, so target is already a copy.
  } else {
    var value = target.valueOf();
    if (target != value) { 
      // the object is a standard object wrapper for a native type, say String.
      // we can make a copy by instantiating a new object around the value.
      return new target.constructor(value);
    } else {
      // ok, we have a normal object. If possible, we'll clone the original's prototype 
      // (not the original) to get an empty object with the same prototype chain as
      // the original.  If just copy the instance properties.  Otherwise, we have to 
      // copy the whole thing, property-by-property.
      if ( target instanceof target.constructor && target.constructor !== Object ) { 
	var c = clone(target.constructor.prototype);
	
	// give the copy all the instance properties of target.  It has the same
	// prototype as target, so inherited properties are already there.
	for ( var property in target) { 
	  if (target.hasOwnProperty(property)) {
	    c[property] = target[property];
	  } 
	}
      } else {
	var c = {};
	for ( var property in target ) c[property] = target[property];
      }
      
      return c;
    }
  }
}

// Deep Copy
var deepCopiers = [];

function DeepCopier(config) {
  for ( var key in config ) this[key] = config[key];
}
DeepCopier.prototype = {
  constructor: DeepCopier,
  
  // determines if this DeepCopier can handle the given object.
  canCopy: function(source) { return false; },
  
  // starts the deep copying process by creating the copy object.  You
  // can initialize any properties you want, but you can't call recursively
  // into the DeeopCopyAlgorithm.
  create: function(source) { },
  
  // Completes the deep copy of the source object by populating any properties
  // that need to be recursively deep copied.  You can do this by using the
  // provided deepCopyAlgorithm instance's deepCopy() method.  This will handle
  // cyclic references for objects already deepCopied, including the source object
  // itself.  The "result" passed in is the object returned from create().
  populate: function(deepCopyAlgorithm, source, result) {}
};

function DeepCopyAlgorithm() {
  // copiedObjects keeps track of objects already copied by this
  // deepCopy operation, so we can correctly handle cyclic references.
  this.copiedObjects = [];
  var thisPass = this;
  this.recursiveDeepCopy = function(source) {
    return thisPass.deepCopy(source);
  }
  this.depth = 0;
}
DeepCopyAlgorithm.prototype = {
  constructor: DeepCopyAlgorithm,
  
  maxDepth: 256,
  
  // add an object to the cache.  No attempt is made to filter duplicates;
  // we always check getCachedResult() before calling it.
  cacheResult: function(source, result) {
    this.copiedObjects.push([source, result]);
  },
  
  // Returns the cached copy of a given object, or undefined if it's an
  // object we haven't seen before.
  getCachedResult: function(source) {
    var copiedObjects = this.copiedObjects;
    var length = copiedObjects.length;
    for ( var i=0; i<length; i++ ) {
      if ( copiedObjects[i][0] === source ) {
	return copiedObjects[i][1];
      }
    }
    return undefined;
  },
  
  // deepCopy handles the simple cases itself: non-objects and object's we've seen before.
  // For complex cases, it first identifies an appropriate DeepCopier, then calls
  // applyDeepCopier() to delegate the details of copying the object to that DeepCopier.
  deepCopy: function(source) {
    // null is a special case: it's the only value of type 'object' without properties.
    if ( source === null ) return null;
    
    // All non-objects use value semantics and don't need explict copying.
    if ( typeof source !== 'object' ) return source;
    
    var cachedResult = this.getCachedResult(source);
    
    // we've already seen this object during this deep copy operation
    // so can immediately return the result.  This preserves the cyclic
    // reference structure and protects us from infinite recursion.
    if ( cachedResult ) return cachedResult;
    
    // objects may need special handling depending on their class.  There is
    // a class of handlers call "DeepCopiers"  that know how to copy certain
    // objects.  There is also a final, generic deep copier that can handle any object.
    for ( var i=0; i<deepCopiers.length; i++ ) {
      var deepCopier = deepCopiers[i];
      if ( deepCopier.canCopy(source) ) {
	return this.applyDeepCopier(deepCopier, source);
      }
    }
    // the generic copier can handle anything, so we should never reach this line.
    throw new Error("no DeepCopier is able to copy " + source);
  },
  
  // once we've identified which DeepCopier to use, we need to call it in a very
  // particular order: create, cache, populate.  This is the key to detecting cycles.
  // We also keep track of recursion depth when calling the potentially recursive
  // populate(): this is a fail-fast to prevent an infinite loop from consuming all
  // available memory and crashing or slowing down the browser.
  applyDeepCopier: function(deepCopier, source) {
    // Start by creating a stub object that represents the copy.
    var result = deepCopier.create(source);
    
    // we now know the deep copy of source should always be result, so if we encounter
    // source again during this deep copy we can immediately use result instead of
    // descending into it recursively.  
    this.cacheResult(source, result);
    
    // only DeepCopier::populate() can recursively deep copy.  So, to keep track
    // of recursion depth, we increment this shared counter before calling it,
    // and decrement it afterwards.
    this.depth++;
    if ( this.depth > this.maxDepth ) {
      throw new Error("Exceeded max recursion depth in deep copy.");
    }
    
    // It's now safe to let the deepCopier recursively deep copy its properties.
    deepCopier.populate(this.recursiveDeepCopy, source, result);
    
    this.depth--;
    
    return result;
  }
};

// entry point for deep copy.
//   source is the object to be deep copied.
//   maxDepth is an optional recursion limit. Defaults to 256.
function deepCopy(source, maxDepth) {
  var deepCopyAlgorithm = new DeepCopyAlgorithm();
  if ( maxDepth ) deepCopyAlgorithm.maxDepth = maxDepth;
  return deepCopyAlgorithm.deepCopy(source);
}

// publicly expose the DeepCopier class.
deepCopy.DeepCopier = DeepCopier;

// publicly expose the list of deepCopiers.
deepCopy.deepCopiers = deepCopiers;

// make deepCopy() extensible by allowing others to 
// register their own custom DeepCopiers.
deepCopy.register = function(deepCopier) {
  if ( !(deepCopier instanceof DeepCopier) ) {
    deepCopier = new DeepCopier(deepCopier);
  }
  deepCopiers.unshift(deepCopier);
}

// Generic Object copier
// the ultimate fallback DeepCopier, which tries to handle the generic case.  This
// should work for base Objects and many user-defined classes.
deepCopy.register({
  canCopy: function(source) { return true; },
  
  create: function(source) {
    if ( source instanceof source.constructor ) {
      return clone(source.constructor.prototype);
    } else {
      return {};
    }
  },
  
  populate: function(deepCopy, source, result) {
    for ( var key in source ) {
      if ( source.hasOwnProperty(key) ) {
	result[key] = deepCopy(source[key]);
      }
    }
    return result;
  }
});

// Array copier
deepCopy.register({
  canCopy: function(source) {
    return ( source instanceof Array );
  },
  
  create: function(source) {
    return new source.constructor();
  },
  
  populate: function(deepCopy, source, result) {
    for ( var i=0; i<source.length; i++) {
      result.push( deepCopy(source[i]) );
    }
    return result;
  }
});

// Date copier
deepCopy.register({
  canCopy: function(source) {
    return ( source instanceof Date );
  },
  
  create: function(source) {
    return new Date(source);
  }
});

// HTML DOM Node

// utility function to detect Nodes.  In particular, we're looking
// for the cloneNode method.  The global document is also defined to
// be a Node, but is a special case in many ways.
function isNode(source) {
  return false; // LJF change here -- I don't care that I am breaking
  // this for the browser. at all.
  if ( window.Node ) {
    return source instanceof Node;
  } else {
    // the document is a special Node and doesn't have many of
    // the common properties so we use an identity check instead.
    if ( source === document ) return true;
    return (
      typeof source.nodeType === 'number' &&
	source.attributes &&
	source.childNodes &&
	source.cloneNode
    );
  }
}

// Node copier
deepCopy.register({
  canCopy: function(source) { return isNode(source); },
  
  create: function(source) {
    // there can only be one (document).
    if ( source === document ) return document;
    
    // start with a shallow copy.  We'll handle the deep copy of
    // its children ourselves.
    return source.cloneNode(false);
  },
  
  populate: function(deepCopy, source, result) {
    // we're not copying the global document, so don't have to populate it either.
    if ( source === document ) return document;
    
    // if this Node has children, deep copy them one-by-one.
    if ( source.childNodes && source.childNodes.length ) {
      for ( var i=0; i<source.childNodes.length; i++ ) {
	var childCopy = deepCopy(source.childNodes[i]);
	result.appendChild(childCopy);
      }
    }
  }
});

exports.DeepCopyAlgorithm = DeepCopyAlgorithm;
exports.copy = copy;
exports.clone = clone;
exports.deepCopy = deepCopy;


});
require.register("mrluc-owl-deepcopy/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"owl-deepcopy","version":"0.0.2","description":"Packaged http://oranlooney.com/deep-copy-javascript/ for npm","author":"Oran Looney","repo":"mrluc/owl-deepcopy","main":"deep_copy.js","scripts":["deep_copy.js"],"json":["component.json"]}');
});
require.register("noflo-noflo-objects/index.js", function(exports, require, module){
/*
 * This file can be used for general library features of objects.
 *
 * The library features can be made available as CommonJS modules that the
 * components in this project utilize.
 */

});
require.register("noflo-noflo-objects/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo-objects","description":"Object Utilities for NoFlo","version":"0.1.10","keywords":["noflo","objects","utilities"],"author":"Kenneth Kan <kenhkan@gmail.com>","repo":"noflo/objects","dependencies":{"noflo/noflo":"*","jashkenas/underscore":"*","mrluc/owl-deepcopy":"*"},"scripts":["components/Extend.js","components/MergeObjects.js","components/SplitObject.js","components/ReplaceKey.js","components/Keys.js","components/Size.js","components/Values.js","components/Join.js","components/ExtractProperty.js","components/InsertProperty.js","components/SliceArray.js","components/SplitArray.js","components/FilterPropertyValue.js","components/FlattenObject.js","components/MapProperty.js","components/RemoveProperty.js","components/MapPropertyValue.js","components/GetObjectKey.js","components/UniqueArray.js","components/SetProperty.js","components/SimplifyObject.js","components/DuplicateProperty.js","components/CreateObject.js","components/CreateDate.js","components/SetPropertyValue.js","components/CallMethod.js","index.js","components/GetCurrentTimestamp.js","components/FilterProperty.js","components/CreateError.js"],"json":["component.json"],"noflo":{"icon":"list","components":{"CallMethod":"components/CallMethod.js","CreateDate":"components/CreateDate.js","CreateError":"components/CreateError.js","CreateObject":"components/CreateObject.js","DuplicateProperty":"components/DuplicateProperty.js","Extend":"components/Extend.js","ExtractProperty":"components/ExtractProperty.js","FilterProperty":"components/FilterProperty.js","FilterPropertyValue":"components/FilterPropertyValue.js","FlattenObject":"components/FlattenObject.js","GetCurrentTimestamp":"components/GetCurrentTimestamp.js","GetObjectKey":"components/GetObjectKey.js","InsertProperty":"components/InsertProperty.js","Join":"components/Join.js","Keys":"components/Keys.js","MapProperty":"components/MapProperty.js","MapPropertyValue":"components/MapPropertyValue.js","MergeObjects":"components/MergeObjects.js","RemoveProperty":"components/RemoveProperty.js","ReplaceKey":"components/ReplaceKey.js","SetProperty":"components/SetProperty.js","SetPropertyValue":"components/SetPropertyValue.js","SimplifyObject":"components/SimplifyObject.js","Size":"components/Size.js","SliceArray":"components/SliceArray.js","SplitArray":"components/SplitArray.js","SplitObject":"components/SplitObject.js","UniqueArray":"components/UniqueArray.js","Values":"components/Values.js"}}}');
});
require.register("noflo-noflo-objects/components/Extend.js", function(exports, require, module){
var Extend, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require("underscore");

noflo = require("noflo");

Extend = (function(_super) {
  __extends(Extend, _super);

  Extend.prototype.description = "Extend an incoming object to some predefined objects, optionally by a certain property";

  function Extend() {
    this.bases = [];
    this.mergedBase = {};
    this.key = null;
    this.reverse = false;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Object to extend'
      },
      base: {
        datatype: 'object',
        description: 'Objects to extend with (one object per IP)'
      },
      key: {
        datatype: 'string',
        description: 'Property name to extend with'
      },
      reverse: {
        datatype: 'string',
        description: 'A string equal "true" if you want to reverse the order of extension algorithm'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object',
        description: 'The object received on port "in" extended'
      }
    });
    this.inPorts.base.on("connect", (function(_this) {
      return function() {
        return _this.bases = [];
      };
    })(this));
    this.inPorts.base.on("data", (function(_this) {
      return function(base) {
        if (base != null) {
          return _this.bases.push(base);
        }
      };
    })(this));
    this.inPorts.key.on("data", (function(_this) {
      return function(key) {
        _this.key = key;
      };
    })(this));
    this.inPorts.reverse.on("data", (function(_this) {
      return function(reverse) {
        return _this.reverse = reverse === 'true';
      };
    })(this));
    this.inPorts["in"].on("connect", (function(_this) {
      return function(group) {};
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(incoming) {
        var base, out, _i, _len, _ref;
        out = {};
        _ref = _this.bases;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          base = _ref[_i];
          if ((_this.key == null) || (incoming[_this.key] != null) && incoming[_this.key] === base[_this.key]) {
            _.extend(out, base);
          }
        }
        if (_this.reverse) {
          return _this.outPorts.out.send(_.extend({}, incoming, out));
        } else {
          return _this.outPorts.out.send(_.extend(out, incoming));
        }
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Extend;

})(noflo.Component);

exports.getComponent = function() {
  return new Extend;
};

});
require.register("noflo-noflo-objects/components/MergeObjects.js", function(exports, require, module){
var MergeObjects, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require("underscore");

noflo = require("noflo");

MergeObjects = (function(_super) {
  __extends(MergeObjects, _super);

  MergeObjects.prototype.description = "merges all incoming objects into one";

  function MergeObjects() {
    this.merge = _.bind(this.merge, this);
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Objects to merge (one per IP)'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object',
        description: 'A new object containing the merge of input objects'
      }
    });
    this.inPorts["in"].on("connect", (function(_this) {
      return function() {
        _this.groups = [];
        return _this.objects = [];
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.groups.push(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(object) {
        return _this.objects.push(object);
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.groups.pop();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        _this.outPorts.out.send(_.reduce(_this.objects, _this.merge, {}));
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  MergeObjects.prototype.merge = function(origin, object) {
    var key, oValue, value;
    for (key in object) {
      value = object[key];
      oValue = origin[key];
      if (oValue != null) {
        switch (toString.call(oValue)) {
          case "[object Array]":
            origin[key].push.apply(origin[key], value);
            break;
          case "[object Object]":
            origin[key] = this.merge(oValue, value);
            break;
          default:
            origin[key] = value;
        }
      } else {
        origin[key] = value;
      }
    }
    return origin;
  };

  return MergeObjects;

})(noflo.Component);

exports.getComponent = function() {
  return new MergeObjects;
};

});
require.register("noflo-noflo-objects/components/SplitObject.js", function(exports, require, module){
var SplitObject, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

SplitObject = (function(_super) {
  __extends(SplitObject, _super);

  SplitObject.prototype.description = "splits a single object into multiple IPs, wrapped with the key as the group";

  function SplitObject() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Object to split key/values from'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all',
        description: 'Values from the input object (one value per IP and its key sent as group)'
      }
    });
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        var key, value, _results;
        _results = [];
        for (key in data) {
          value = data[key];
          _this.outPorts.out.beginGroup(key);
          _this.outPorts.out.send(value);
          _results.push(_this.outPorts.out.endGroup());
        }
        return _results;
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return SplitObject;

})(noflo.Component);

exports.getComponent = function() {
  return new SplitObject;
};

});
require.register("noflo-noflo-objects/components/ReplaceKey.js", function(exports, require, module){
var ReplaceKey, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

ReplaceKey = (function(_super) {
  __extends(ReplaceKey, _super);

  ReplaceKey.prototype.description = "given a regexp matching any key of an incoming object as a data IP, replace the key with the provided string";

  function ReplaceKey() {
    this.patterns = {};
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Object to replace a key from'
      },
      pattern: {
        datatype: 'all'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object',
        description: 'Object forwared from input'
      }
    });
    this.inPorts.pattern.on("data", (function(_this) {
      return function(patterns) {
        _this.patterns = patterns;
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        var key, newKey, pattern, replace, value, _ref;
        newKey = null;
        for (key in data) {
          value = data[key];
          _ref = _this.patterns;
          for (pattern in _ref) {
            replace = _ref[pattern];
            pattern = new RegExp(pattern);
            if (key.match(pattern) != null) {
              newKey = key.replace(pattern, replace);
              data[newKey] = value;
              delete data[key];
            }
          }
        }
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        _this.pattern = null;
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return ReplaceKey;

})(noflo.Component);

exports.getComponent = function() {
  return new ReplaceKey;
};

});
require.register("noflo-noflo-objects/components/Keys.js", function(exports, require, module){
var Keys, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

_ = require("underscore");

Keys = (function(_super) {
  __extends(Keys, _super);

  Keys.prototype.description = "gets only the keys of an object and forward them as an array";

  function Keys() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Object to get keys from'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string',
        description: 'Keys from the incoming object (one per IP)'
      }
    });
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        var key, _i, _len, _ref, _results;
        _ref = _.keys(data);
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          key = _ref[_i];
          _results.push(_this.outPorts.out.send(key));
        }
        return _results;
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Keys;

})(noflo.Component);

exports.getComponent = function() {
  return new Keys;
};

});
require.register("noflo-noflo-objects/components/Size.js", function(exports, require, module){
var Size, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

_ = require("underscore");

Size = (function(_super) {
  __extends(Size, _super);

  Size.prototype.description = "gets the size of an object and sends that out as a number";

  function Size() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Object to measure the size of'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'int',
        description: 'Size of the input object'
      }
    });
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(_.size(data));
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Size;

})(noflo.Component);

exports.getComponent = function() {
  return new Size;
};

});
require.register("noflo-noflo-objects/components/Values.js", function(exports, require, module){
var Values, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

_ = require("underscore");

Values = (function(_super) {
  __extends(Values, _super);

  Values.prototype.description = "gets only the values of an object and forward them as an array";

  function Values() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'Object to extract values from'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all',
        description: 'Values extracted from the input object (one value per IP)'
      }
    });
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        var value, _i, _len, _ref, _results;
        _ref = _.values(data);
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          value = _ref[_i];
          _results.push(_this.outPorts.out.send(value));
        }
        return _results;
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Values;

})(noflo.Component);

exports.getComponent = function() {
  return new Values;
};

});
require.register("noflo-noflo-objects/components/Join.js", function(exports, require, module){
var Join, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

_ = require("underscore");

noflo = require("noflo");

Join = (function(_super) {
  __extends(Join, _super);

  Join.prototype.description = "Join all values of a passed packet together as a string with a predefined delimiter";

  function Join() {
    this.delimiter = ",";
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Object to join values from'
      },
      delimiter: {
        datatype: 'string',
        description: 'Delimiter to join values'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string',
        description: 'String conversion of all values joined with delimiter into one string'
      }
    });
    this.inPorts.delimiter.on("data", (function(_this) {
      return function(delimiter) {
        _this.delimiter = delimiter;
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(object) {
        if (_.isObject(object)) {
          return _this.outPorts.out.send(_.values(object).join(_this.delimiter));
        }
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Join;

})(noflo.Component);

exports.getComponent = function() {
  return new Join;
};

});
require.register("noflo-noflo-objects/components/ExtractProperty.js", function(exports, require, module){
var ExtractProperty, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

_ = require("underscore");

ExtractProperty = (function(_super) {
  __extends(ExtractProperty, _super);

  ExtractProperty.prototype.description = "Given a key, return only the value matching that key in the incoming object";

  function ExtractProperty() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'An object to extract property from'
      },
      key: {
        datatype: 'string',
        description: 'Property names to extract (one property per IP)'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all',
        description: 'Values of the property extracted (each value sent as a separate IP)'
      }
    });
    this.inPorts.key.on("connect", (function(_this) {
      return function() {
        return _this.keys = [];
      };
    })(this));
    this.inPorts.key.on("data", (function(_this) {
      return function(key) {
        return _this.keys.push(key);
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        var key, value, _i, _len, _ref;
        if ((_this.keys != null) && _.isObject(data)) {
          value = data;
          _ref = _this.keys;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            key = _ref[_i];
            value = value[key];
          }
          return _this.outPorts.out.send(value);
        }
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return ExtractProperty;

})(noflo.Component);

exports.getComponent = function() {
  return new ExtractProperty;
};

});
require.register("noflo-noflo-objects/components/InsertProperty.js", function(exports, require, module){
var noflo, _;

noflo = require('noflo');

_ = require('underscore');

exports.getComponent = function() {
  var c, key;
  key = null;
  c = new noflo.Component;
  c.description = 'Insert a property into incoming objects.';
  c.inPorts.add('in', {
    datatype: 'object',
    description: 'Object to insert property into'
  });
  c.inPorts.add('property', {
    datatype: 'all',
    description: 'Property to insert (property sent as group, value sent as IP)',
    required: true
  });
  c.outPorts.add('out', {
    datatype: 'object',
    description: 'Object received as input with added properties'
  });
  c.inPorts.property.on('begingroup', function(group) {
    return key = group;
  });
  noflo.helpers.WirePattern(c, {
    "in": ['in'],
    params: ['property'],
    out: ['out'],
    forwardGroups: false
  }, function(data, groups, out) {
    if (!(data instanceof Object)) {
      data = {};
    }
    data[key] = c.params.property;
    return out.send(data);
  });
  return c;
};

});
require.register("noflo-noflo-objects/components/SliceArray.js", function(exports, require, module){
var SliceArray, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SliceArray = (function(_super) {
  __extends(SliceArray, _super);

  function SliceArray() {
    this.begin = 0;
    this.end = null;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'array',
        description: 'Array to slice'
      },
      begin: {
        datatype: 'number',
        description: 'Beginning of the slicing'
      },
      end: {
        datatype: 'number',
        description: 'End of the slicing'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'array',
        description: 'Result of the slice operation'
      },
      error: {
        datatype: 'string'
      }
    });
    this.inPorts.begin.on('data', (function(_this) {
      return function(data) {
        return _this.begin = data;
      };
    })(this));
    this.inPorts.end.on('data', (function(_this) {
      return function(data) {
        return _this.end = data;
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.sliceData(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  SliceArray.prototype.sliceData = function(data) {
    var sliced;
    if (!data.slice) {
      return this.outPorts.error.send("Data " + (typeof data) + " cannot be sliced");
    }
    if (this.end !== null) {
      sliced = data.slice(this.begin, this.end);
    }
    if (this.end === null) {
      sliced = data.slice(this.begin);
    }
    return this.outPorts.out.send(sliced);
  };

  return SliceArray;

})(noflo.Component);

exports.getComponent = function() {
  return new SliceArray;
};

});
require.register("noflo-noflo-objects/components/SplitArray.js", function(exports, require, module){
var SplitArray, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SplitArray = (function(_super) {
  __extends(SplitArray, _super);

  function SplitArray() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'array'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        var item, key, _i, _len, _results;
        if (toString.call(data) !== '[object Array]') {
          for (key in data) {
            item = data[key];
            _this.outPorts.out.beginGroup(key);
            _this.outPorts.out.send(item);
            _this.outPorts.out.endGroup();
          }
          return;
        }
        _results = [];
        for (_i = 0, _len = data.length; _i < _len; _i++) {
          item = data[_i];
          _results.push(_this.outPorts.out.send(item));
        }
        return _results;
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function(data) {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return SplitArray;

})(noflo.Component);

exports.getComponent = function() {
  return new SplitArray;
};

});
require.register("noflo-noflo-objects/components/FilterPropertyValue.js", function(exports, require, module){
var FilterPropertyValue, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

FilterPropertyValue = (function(_super) {
  __extends(FilterPropertyValue, _super);

  FilterPropertyValue.prototype.icon = 'filter';

  function FilterPropertyValue() {
    this.accepts = {};
    this.regexps = {};
    this.inPorts = new noflo.InPorts({
      accept: {
        datatype: 'all',
        description: ''
      },
      regexp: {
        datatype: 'string',
        description: ''
      },
      "in": {
        datatype: 'object',
        description: 'Object to filter properties from'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object',
        description: 'Object including the filtered properties'
      },
      missed: {
        datatype: 'object',
        description: 'Object received as input if no key have been matched'
      }
    });
    this.inPorts.accept.on('data', (function(_this) {
      return function(data) {
        return _this.prepareAccept(data);
      };
    })(this));
    this.inPorts.regexp.on('data', (function(_this) {
      return function(data) {
        return _this.prepareRegExp(data);
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (_this.filtering()) {
          return _this.filterData(data);
        }
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  FilterPropertyValue.prototype.filtering = function() {
    return (Object.keys(this.accepts)).length > 0 || (Object.keys(this.regexps)).length > 0;
  };

  FilterPropertyValue.prototype.prepareAccept = function(map) {
    var e, mapParts;
    if (typeof map === 'object') {
      this.accepts = map;
      return;
    }
    mapParts = map.split('=');
    try {
      return this.accepts[mapParts[0]] = eval(mapParts[1]);
    } catch (_error) {
      e = _error;
      if (e instanceof ReferenceError) {
        return this.accepts[mapParts[0]] = mapParts[1];
      } else {
        throw e;
      }
    }
  };

  FilterPropertyValue.prototype.prepareRegExp = function(map) {
    var mapParts;
    mapParts = map.split('=');
    return this.regexps[mapParts[0]] = mapParts[1];
  };

  FilterPropertyValue.prototype.filterData = function(object) {
    var match, newData, property, regexp, value;
    newData = {};
    match = false;
    for (property in object) {
      value = object[property];
      if (this.accepts[property]) {
        if (this.accepts[property] !== value) {
          continue;
        }
        match = true;
      }
      if (this.regexps[property]) {
        regexp = new RegExp(this.regexps[property]);
        if (!regexp.exec(value)) {
          continue;
        }
        match = true;
      }
      newData[property] = value;
      continue;
    }
    if (!match) {
      if (!this.outPorts.missed.isAttached()) {
        return;
      }
      this.outPorts.missed.send(object);
      this.outPorts.missed.disconnect();
      return;
    }
    return this.outPorts.out.send(newData);
  };

  return FilterPropertyValue;

})(noflo.Component);

exports.getComponent = function() {
  return new FilterPropertyValue;
};

});
require.register("noflo-noflo-objects/components/FlattenObject.js", function(exports, require, module){
var FlattenObject, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

FlattenObject = (function(_super) {
  __extends(FlattenObject, _super);

  function FlattenObject() {
    this.map = {};
    this.inPorts = new noflo.InPorts({
      map: {
        datatype: 'all'
      },
      "in": {
        datatype: 'object',
        description: 'Object to flatten'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'array'
      }
    });
    this.inPorts.map.on('data', (function(_this) {
      return function(data) {
        return _this.prepareMap(data);
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        var object, _i, _len, _ref, _results;
        _ref = _this.flattenObject(data);
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          object = _ref[_i];
          _results.push(_this.outPorts.out.send(_this.mapKeys(object)));
        }
        return _results;
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  FlattenObject.prototype.prepareMap = function(map) {
    var mapParts;
    if (typeof map === 'object') {
      this.map = map;
      return;
    }
    mapParts = map.split('=');
    return this.map[mapParts[0]] = mapParts[1];
  };

  FlattenObject.prototype.mapKeys = function(object) {
    var key, map, _ref;
    _ref = this.map;
    for (key in _ref) {
      map = _ref[key];
      object[map] = object.flattenedKeys[key];
    }
    delete object.flattenedKeys;
    return object;
  };

  FlattenObject.prototype.flattenObject = function(object) {
    var flattened, flattenedValue, key, val, value, _i, _len;
    flattened = [];
    for (key in object) {
      value = object[key];
      if (typeof value === 'object') {
        flattenedValue = this.flattenObject(value);
        for (_i = 0, _len = flattenedValue.length; _i < _len; _i++) {
          val = flattenedValue[_i];
          val.flattenedKeys.push(key);
          flattened.push(val);
        }
        continue;
      }
      flattened.push({
        flattenedKeys: [key],
        value: value
      });
    }
    return flattened;
  };

  return FlattenObject;

})(noflo.Component);

exports.getComponent = function() {
  return new FlattenObject;
};

});
require.register("noflo-noflo-objects/components/MapProperty.js", function(exports, require, module){
var MapProperty, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MapProperty = (function(_super) {
  __extends(MapProperty, _super);

  function MapProperty() {
    this.map = {};
    this.regexps = {};
    this.inPorts = new noflo.InPorts({
      map: {
        datatype: 'all'
      },
      regexp: {
        datatype: 'string'
      },
      "in": {
        datatype: 'object'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object'
      }
    });
    this.inPorts.map.on('data', (function(_this) {
      return function(data) {
        return _this.prepareMap(data);
      };
    })(this));
    this.inPorts.regexp.on('data', (function(_this) {
      return function(data) {
        return _this.prepareRegExp(data);
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.mapData(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  MapProperty.prototype.prepareMap = function(map) {
    var mapParts;
    if (typeof map === 'object') {
      this.map = map;
      return;
    }
    mapParts = map.split('=');
    return this.map[mapParts[0]] = mapParts[1];
  };

  MapProperty.prototype.prepareRegExp = function(map) {
    var mapParts;
    mapParts = map.split('=');
    return this.regexps[mapParts[0]] = mapParts[1];
  };

  MapProperty.prototype.mapData = function(data) {
    var expression, matched, newData, property, regexp, replacement, value, _ref;
    newData = {};
    for (property in data) {
      value = data[property];
      if (property in this.map) {
        property = this.map[property];
      }
      _ref = this.regexps;
      for (expression in _ref) {
        replacement = _ref[expression];
        regexp = new RegExp(expression);
        matched = regexp.exec(property);
        if (!matched) {
          continue;
        }
        property = property.replace(regexp, replacement);
      }
      if (property in newData) {
        if (Array.isArray(newData[property])) {
          newData[property].push(value);
        } else {
          newData[property] = [newData[property], value];
        }
      } else {
        newData[property] = value;
      }
    }
    return this.outPorts.out.send(newData);
  };

  return MapProperty;

})(noflo.Component);

exports.getComponent = function() {
  return new MapProperty;
};

});
require.register("noflo-noflo-objects/components/RemoveProperty.js", function(exports, require, module){
var RemoveProperty, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

_ = require('underscore');

RemoveProperty = (function(_super) {
  __extends(RemoveProperty, _super);

  RemoveProperty.prototype.icon = 'ban';

  function RemoveProperty() {
    this.properties = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Object to remove properties from'
      },
      property: {
        datatype: 'string',
        description: 'Properties to remove (one per IP)'
      },
      reset: {
        datatype: 'bang',
        description: 'Clear the list of properties to remove'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object',
        description: 'Object forwarded from input'
      }
    });
    this.inPorts.property.on('data', (function(_this) {
      return function(data) {
        return _this.properties.push(data);
      };
    })(this));
    this.inPorts.reset.on('data', (function(_this) {
      return function() {
        return _this.properties = [];
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (!_this.properties.length) {
          return;
        }
        return _this.outPorts.out.send(_this.removeProperties(data));
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  RemoveProperty.prototype.removeProperties = function(object) {
    var property, _i, _len, _ref;
    object = _.clone(object);
    _ref = this.properties;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      property = _ref[_i];
      delete object[property];
    }
    return object;
  };

  return RemoveProperty;

})(noflo.Component);

exports.getComponent = function() {
  return new RemoveProperty;
};

});
require.register("noflo-noflo-objects/components/MapPropertyValue.js", function(exports, require, module){
var MapPropertyValue, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MapPropertyValue = (function(_super) {
  __extends(MapPropertyValue, _super);

  function MapPropertyValue() {
    this.mapAny = {};
    this.map = {};
    this.regexpAny = {};
    this.regexp = {};
    this.inPorts = new noflo.InPorts({
      map: {
        datatype: 'all'
      },
      regexp: {
        datatype: 'string'
      },
      "in": {
        datatype: 'object'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object'
      }
    });
    this.inPorts.map.on('data', (function(_this) {
      return function(data) {
        return _this.prepareMap(data);
      };
    })(this));
    this.inPorts.regexp.on('data', (function(_this) {
      return function(data) {
        return _this.prepareRegExp(data);
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.mapData(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  MapPropertyValue.prototype.prepareMap = function(map) {
    var mapParts;
    if (typeof map === 'object') {
      this.mapAny = map;
      return;
    }
    mapParts = map.split('=');
    if (mapParts.length === 3) {
      this.map[mapParts[0]] = {
        from: mapParts[1],
        to: mapParts[2]
      };
      return;
    }
    return this.mapAny[mapParts[0]] = mapParts[1];
  };

  MapPropertyValue.prototype.prepareRegExp = function(map) {
    var mapParts;
    mapParts = map.split('=');
    if (mapParts.length === 3) {
      this.regexp[mapParts[0]] = {
        from: mapParts[1],
        to: mapParts[2]
      };
      return;
    }
    return this.regexpAny[mapParts[0]] = mapParts[1];
  };

  MapPropertyValue.prototype.mapData = function(data) {
    var expression, matched, property, regexp, replacement, value, _ref;
    for (property in data) {
      value = data[property];
      if (this.map[property] && this.map[property].from === value) {
        data[property] = this.map[property].to;
      }
      if (this.mapAny[value]) {
        data[property] = this.mapAny[value];
      }
      if (this.regexp[property]) {
        regexp = new RegExp(this.regexp[property].from);
        matched = regexp.exec(value);
        if (matched) {
          data[property] = value.replace(regexp, this.regexp[property].to);
        }
      }
      _ref = this.regexpAny;
      for (expression in _ref) {
        replacement = _ref[expression];
        regexp = new RegExp(expression);
        matched = regexp.exec(value);
        if (!matched) {
          continue;
        }
        data[property] = value.replace(regexp, replacement);
      }
    }
    return this.outPorts.out.send(data);
  };

  return MapPropertyValue;

})(noflo.Component);

exports.getComponent = function() {
  return new MapPropertyValue;
};

});
require.register("noflo-noflo-objects/components/GetObjectKey.js", function(exports, require, module){
var GetObjectKey, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

GetObjectKey = (function(_super) {
  __extends(GetObjectKey, _super);

  GetObjectKey.prototype.icon = 'indent';

  function GetObjectKey() {
    this.sendGroup = true;
    this.groups = [];
    this.data = [];
    this.key = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Object to get keys from'
      },
      key: {
        datatype: 'string',
        description: 'Keys to extract from the object (one key per IP)'
      },
      sendgroup: {
        datatype: 'boolean',
        description: 'true to send keys as groups around value IPs, false otherwise'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all',
        description: 'Values extracts from the input object given the input keys (one value per IP, potentially grouped using the key names)'
      },
      object: {
        datatype: 'object',
        description: 'Object forwarded from input if at least one property matches the input keys',
        required: false
      },
      missed: {
        datatype: 'object',
        description: 'Object forwarded from input if no property matches the input keys',
        required: false
      }
    });
    this.inPorts["in"].on('connect', (function(_this) {
      return function() {
        return _this.data = [];
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.groups.push(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (_this.key.length) {
          _this.getKey({
            data: data,
            groups: _this.groups
          });
          return;
        }
        return _this.data.push({
          data: data,
          groups: _this.groups.slice(0)
        });
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.groups.pop();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        var data, _i, _len, _ref;
        if (!_this.data.length) {
          _this.outPorts.out.disconnect();
          _this.outPorts.object.disconnect();
          return;
        }
        if (!_this.key.length) {
          return;
        }
        _ref = _this.data;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          data = _ref[_i];
          _this.getKey(data);
        }
        _this.outPorts.out.disconnect();
        return _this.outPorts.object.disconnect();
      };
    })(this));
    this.inPorts.key.on('data', (function(_this) {
      return function(data) {
        return _this.key.push(data);
      };
    })(this));
    this.inPorts.key.on('disconnect', (function(_this) {
      return function() {
        var data, _i, _len, _ref;
        if (!_this.data.length) {
          return;
        }
        _ref = _this.data;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          data = _ref[_i];
          _this.getKey(data);
        }
        _this.data = [];
        _this.outPorts.out.disconnect();
        return _this.outPorts.object.disconnect();
      };
    })(this));
    this.inPorts.sendgroup.on('data', (function(_this) {
      return function(data) {
        return _this.sendGroup = String(data) === 'true';
      };
    })(this));
  }

  GetObjectKey.prototype.error = function(data, error) {
    this.outPorts.missed.send(data);
    return this.outPorts.missed.disconnect();
  };

  GetObjectKey.prototype.getKey = function(_arg) {
    var data, group, groups, key, _i, _j, _k, _l, _len, _len1, _len2, _len3, _len4, _m, _ref, _results;
    data = _arg.data, groups = _arg.groups;
    if (!this.key.length) {
      this.error(data, new Error('Key not defined'));
      return;
    }
    if (typeof data !== 'object') {
      this.error(data, new Error('Data is not an object'));
      return;
    }
    if (data === null) {
      this.error(data, new Error('Data is NULL'));
      return;
    }
    _ref = this.key;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      key = _ref[_i];
      if (data[key] === void 0) {
        this.error(data, new Error("Object has no key " + key));
        continue;
      }
      for (_j = 0, _len1 = groups.length; _j < _len1; _j++) {
        group = groups[_j];
        this.outPorts.out.beginGroup(group);
      }
      if (this.sendGroup) {
        this.outPorts.out.beginGroup(key);
      }
      this.outPorts.out.send(data[key]);
      if (this.sendGroup) {
        this.outPorts.out.endGroup();
      }
      for (_k = 0, _len2 = groups.length; _k < _len2; _k++) {
        group = groups[_k];
        this.outPorts.out.endGroup();
      }
    }
    for (_l = 0, _len3 = groups.length; _l < _len3; _l++) {
      group = groups[_l];
      this.outPorts.object.beginGroup(group);
    }
    this.outPorts.object.send(data);
    _results = [];
    for (_m = 0, _len4 = groups.length; _m < _len4; _m++) {
      group = groups[_m];
      _results.push(this.outPorts.object.endGroup());
    }
    return _results;
  };

  return GetObjectKey;

})(noflo.Component);

exports.getComponent = function() {
  return new GetObjectKey;
};

});
require.register("noflo-noflo-objects/components/UniqueArray.js", function(exports, require, module){
var noflo;

noflo = require('noflo');

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.icon = 'empire';
  c.inPorts.add('in', {
    datatype: 'array',
    description: 'Array to get unique values from'
  });
  c.outPorts.add('out', {
    datatype: 'array',
    description: 'Array containing only unique values from the input array'
  });
  noflo.helpers.WirePattern(c, {
    "in": 'in',
    out: 'out',
    forwardGroups: true
  }, function(array, groups, out) {
    var member, newArray, seen, _i, _len;
    seen = {};
    newArray = [];
    for (_i = 0, _len = array.length; _i < _len; _i++) {
      member = array[_i];
      seen[member] = member;
    }
    for (member in seen) {
      newArray.push(member);
    }
    return out.send(newArray);
  });
  return c;
};

});
require.register("noflo-noflo-objects/components/SetProperty.js", function(exports, require, module){
var SetProperty, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SetProperty = (function(_super) {
  __extends(SetProperty, _super);

  function SetProperty() {
    this.properties = {};
    this.inPorts = new noflo.InPorts({
      property: {
        datatype: 'all'
      },
      "in": {
        datatype: 'object',
        description: 'Object to set property on'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object',
        description: 'Object forwared from input'
      }
    });
    this.inPorts.property.on('data', (function(_this) {
      return function(data) {
        return _this.setProperty(data);
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.addProperties(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  SetProperty.prototype.setProperty = function(prop) {
    var propParts;
    if (typeof prop === 'object') {
      this.prop = prop;
      return;
    }
    propParts = prop.split('=');
    return this.properties[propParts[0]] = propParts[1];
  };

  SetProperty.prototype.addProperties = function(object) {
    var property, value, _ref;
    _ref = this.properties;
    for (property in _ref) {
      value = _ref[property];
      object[property] = value;
    }
    return this.outPorts.out.send(object);
  };

  return SetProperty;

})(noflo.Component);

exports.getComponent = function() {
  return new SetProperty;
};

});
require.register("noflo-noflo-objects/components/SimplifyObject.js", function(exports, require, module){
var SimplifyObject, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

_ = require('underscore')._;

SimplifyObject = (function(_super) {
  __extends(SimplifyObject, _super);

  function SimplifyObject() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'Object to simplify'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all',
        description: 'Simplified object'
      }
    });
    this.inPorts["in"].on('beginGroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(_this.simplify(data));
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  SimplifyObject.prototype.simplify = function(data) {
    if (_.isArray(data)) {
      if (data.length === 1) {
        return data[0];
      }
      return data;
    }
    if (!_.isObject(data)) {
      return data;
    }
    return this.simplifyObject(data);
  };

  SimplifyObject.prototype.simplifyObject = function(data) {
    var keys, simplified;
    keys = _.keys(data);
    if (keys.length === 1 && keys[0] === '$data') {
      return this.simplify(data['$data']);
    }
    simplified = {};
    _.each(data, (function(_this) {
      return function(value, key) {
        return simplified[key] = _this.simplify(value);
      };
    })(this));
    return simplified;
  };

  return SimplifyObject;

})(noflo.Component);

exports.getComponent = function() {
  return new SimplifyObject;
};

});
require.register("noflo-noflo-objects/components/DuplicateProperty.js", function(exports, require, module){
var DuplicateProperty, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

DuplicateProperty = (function(_super) {
  __extends(DuplicateProperty, _super);

  function DuplicateProperty() {
    this.properties = {};
    this.separator = '/';
    this.inPorts = new noflo.InPorts({
      property: {
        datatype: 'all'
      },
      separator: {
        datatype: 'string'
      },
      "in": {
        datatype: 'object'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object'
      }
    });
    this.inPorts.property.on('data', (function(_this) {
      return function(data) {
        return _this.setProperty(data);
      };
    })(this));
    this.inPorts.separator.on('data', (function(_this) {
      return function(data) {
        return _this.separator = data;
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.addProperties(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  DuplicateProperty.prototype.setProperty = function(prop) {
    var propParts;
    if (typeof prop === 'object') {
      this.prop = prop;
      return;
    }
    propParts = prop.split('=');
    if (propParts.length > 2) {
      this.properties[propParts.pop()] = propParts;
      return;
    }
    return this.properties[propParts[1]] = propParts[0];
  };

  DuplicateProperty.prototype.addProperties = function(object) {
    var newValues, newprop, original, originalProp, _i, _len, _ref;
    _ref = this.properties;
    for (newprop in _ref) {
      original = _ref[newprop];
      if (typeof original === 'string') {
        object[newprop] = object[original];
        continue;
      }
      newValues = [];
      for (_i = 0, _len = original.length; _i < _len; _i++) {
        originalProp = original[_i];
        newValues.push(object[originalProp]);
      }
      object[newprop] = newValues.join(this.separator);
    }
    return this.outPorts.out.send(object);
  };

  return DuplicateProperty;

})(noflo.Component);

exports.getComponent = function() {
  return new DuplicateProperty;
};

});
require.register("noflo-noflo-objects/components/CreateObject.js", function(exports, require, module){
var CreateObject, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

CreateObject = (function(_super) {
  __extends(CreateObject, _super);

  function CreateObject() {
    this.inPorts = new noflo.InPorts({
      start: {
        datatype: 'bang',
        description: 'Signal to create a new object'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object',
        description: 'A new empty object'
      }
    });
    this.inPorts.start.on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts.start.on("data", (function(_this) {
      return function() {
        return _this.outPorts.out.send({});
      };
    })(this));
    this.inPorts.start.on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts.start.on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return CreateObject;

})(noflo.Component);

exports.getComponent = function() {
  return new CreateObject;
};

});
require.register("noflo-noflo-objects/components/CreateDate.js", function(exports, require, module){
var CreateDate, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

CreateDate = (function(_super) {
  __extends(CreateDate, _super);

  CreateDate.prototype.description = 'Create a new Date object from string';

  CreateDate.prototype.icon = 'clock-o';

  function CreateDate() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'string',
        description: 'A string representation of a date in RFC2822/IETF/ISO8601 format'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object',
        description: 'A new Date object'
      }
    });
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        var date;
        if (data === "now" || data === null || data === true) {
          date = new Date;
        } else {
          date = new Date(data);
        }
        return _this.outPorts.out.send(date);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return CreateDate;

})(noflo.Component);

exports.getComponent = function() {
  return new CreateDate;
};

});
require.register("noflo-noflo-objects/components/SetPropertyValue.js", function(exports, require, module){
var SetPropertyValue, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SetPropertyValue = (function(_super) {
  __extends(SetPropertyValue, _super);

  function SetPropertyValue() {
    this.property = null;
    this.data = [];
    this.groups = [];
    this.keep = false;
    this.inPorts = new noflo.InPorts({
      property: {
        datatype: 'string',
        description: 'Property name to set value on'
      },
      value: {
        datatype: 'all',
        description: 'Property value to set'
      },
      "in": {
        datatype: 'object',
        description: 'Object to set property value on'
      },
      keep: {
        datatype: 'boolean',
        description: 'true if input value must be kept around, false to drop it after the value is set'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object',
        description: 'Object forwarded from the input'
      }
    });
    this.inPorts.keep.on('data', (function(_this) {
      return function(keep) {
        return _this.keep = String(keep) === 'true';
      };
    })(this));
    this.inPorts.property.on('data', (function(_this) {
      return function(data) {
        _this.property = data;
        if (_this.value !== void 0 && _this.data.length) {
          return _this.addProperties();
        }
      };
    })(this));
    this.inPorts.value.on('data', (function(_this) {
      return function(data) {
        _this.value = data;
        if (_this.property && _this.data.length) {
          return _this.addProperties();
        }
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.groups.push(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (_this.property && _this.value !== void 0) {
          _this.addProperty({
            data: data,
            group: _this.groups.slice(0)
          });
          return;
        }
        return _this.data.push({
          data: data,
          group: _this.groups.slice(0)
        });
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.groups.pop();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        if (_this.property && _this.value !== void 0) {
          _this.outPorts.out.disconnect();
        }
        if (!_this.keep) {
          return delete _this.value;
        }
      };
    })(this));
  }

  SetPropertyValue.prototype.addProperty = function(object) {
    var group, _i, _j, _len, _len1, _ref, _ref1, _results;
    object.data[this.property] = this.value;
    _ref = object.group;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      group = _ref[_i];
      this.outPorts.out.beginGroup(group);
    }
    this.outPorts.out.send(object.data);
    _ref1 = object.group;
    _results = [];
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      group = _ref1[_j];
      _results.push(this.outPorts.out.endGroup());
    }
    return _results;
  };

  SetPropertyValue.prototype.addProperties = function() {
    var object, _i, _len, _ref;
    _ref = this.data;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      object = _ref[_i];
      this.addProperty(object);
    }
    this.data = [];
    return this.outPorts.out.disconnect();
  };

  return SetPropertyValue;

})(noflo.Component);

exports.getComponent = function() {
  return new SetPropertyValue;
};

});
require.register("noflo-noflo-objects/components/CallMethod.js", function(exports, require, module){
var CallMethod, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

CallMethod = (function(_super) {
  __extends(CallMethod, _super);

  CallMethod.prototype.description = "call a method on an object";

  CallMethod.prototype.icon = 'gear';

  function CallMethod() {
    this.method = null;
    this.args = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Object on which a method will be called'
      },
      method: {
        datatype: 'string',
        description: 'Name of the method to call'
      },
      "arguments": {
        datatype: 'all',
        description: 'Arguments given to the method (one argument per IP)'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all',
        description: 'Value returned by the method call'
      },
      error: {
        datatype: 'object'
      }
    });
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        var msg;
        if (!_this.method) {
          return;
        }
        if (!data[_this.method]) {
          msg = "Method '" + _this.method + "' not available";
          if (_this.outPorts.error.isAttached()) {
            _this.outPorts.error.send(msg);
            _this.outPorts.error.disconnect();
            return;
          }
          throw new Error(msg);
        }
        _this.outPorts.out.send(data[_this.method].apply(data, _this.args));
        return _this.args = [];
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
    this.inPorts.method.on("data", (function(_this) {
      return function(data) {
        return _this.method = data;
      };
    })(this));
    this.inPorts["arguments"].on('connect', (function(_this) {
      return function() {
        return _this.args = [];
      };
    })(this));
    this.inPorts["arguments"].on('data', (function(_this) {
      return function(data) {
        return _this.args.push(data);
      };
    })(this));
  }

  return CallMethod;

})(noflo.Component);

exports.getComponent = function() {
  return new CallMethod;
};

});
require.register("noflo-noflo-objects/components/GetCurrentTimestamp.js", function(exports, require, module){
var noflo;

noflo = require('noflo');

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.icon = 'clock-o';
  c.description = 'Send out the current timestamp';
  c.inPorts.add('in', {
    datatype: 'bang',
    description: 'Causes the current timestamp to be sent out',
    process: function(event) {
      switch (event) {
        case 'data':
          return c.outPorts.out.send(Date.now());
        case 'disconnect':
          return c.outPorts.out.disconnect();
      }
    }
  });
  c.outPorts.add('out', {
    datatype: 'int'
  });
  return c;
};

});
require.register("noflo-noflo-objects/components/FilterProperty.js", function(exports, require, module){
var FilterProperty, deepCopy, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

_ = require("underscore");

deepCopy = require("owl-deepcopy").deepCopy;

FilterProperty = (function(_super) {
  __extends(FilterProperty, _super);

  FilterProperty.prototype.icon = 'filter';

  FilterProperty.prototype.description = "Filter out some properties by matching RegExps against the keys of incoming objects";

  function FilterProperty() {
    this.keys = [];
    this.recurse = false;
    this.keep = false;
    this.legacy = false;
    this.accepts = [];
    this.regexps = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Object to filter properties from'
      },
      key: {
        datatype: 'string',
        description: 'Keys to filter (one key per IP)'
      },
      recurse: {
        datatype: 'string',
        description: '"true" to recurse on the object\'s values'
      },
      keep: {
        datatype: 'string',
        description: '"true" if matching properties must be kept, otherwise removed'
      },
      accept: {
        datatype: 'all'
      },
      regexp: {
        datatype: 'all'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object'
      }
    });
    this.inPorts.keep.on("data", (function(_this) {
      return function(keep) {
        if (keep === "true") {
          return _this.keep = true;
        }
      };
    })(this));
    this.inPorts.recurse.on("data", (function(_this) {
      return function(data) {
        if (data === "true") {
          return _this.recurse = true;
        }
      };
    })(this));
    this.inPorts.key.on("connect", (function(_this) {
      return function() {
        return _this.keys = [];
      };
    })(this));
    this.inPorts.key.on("data", (function(_this) {
      return function(key) {
        return _this.keys.push(new RegExp(key, "g"));
      };
    })(this));
    this.inPorts.accept.on("data", (function(_this) {
      return function(data) {
        _this.legacy = true;
        return _this.accepts.push(data);
      };
    })(this));
    this.inPorts.regexp.on("data", (function(_this) {
      return function(data) {
        _this.legacy = true;
        return _this.regexps.push(data);
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        if (_this.legacy) {
          return _this.filterData(data);
        } else {
          if (_.isObject(data)) {
            data = deepCopy(data);
            _this.filter(data);
            return _this.outPorts.out.send(data);
          }
        }
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  FilterProperty.prototype.filter = function(object) {
    var filter, isMatched, key, match, value, _i, _len, _ref, _results;
    if (_.isEmpty(object)) {
      return;
    }
    _results = [];
    for (key in object) {
      value = object[key];
      isMatched = false;
      _ref = this.keys;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        filter = _ref[_i];
        match = key.match(filter);
        if (!this.keep && match || this.keep && !match) {
          delete object[key];
          isMatched = true;
          break;
        }
      }
      if (!isMatched && _.isObject(value) && this.recurse) {
        _results.push(this.filter(value));
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  FilterProperty.prototype.filterData = function(object) {
    var expression, match, newData, property, regexp, value, _i, _len, _ref;
    newData = {};
    match = false;
    for (property in object) {
      value = object[property];
      if (this.accepts.indexOf(property) !== -1) {
        newData[property] = value;
        match = true;
        continue;
      }
      _ref = this.regexps;
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        expression = _ref[_i];
        regexp = new RegExp(expression);
        if (regexp.exec(property)) {
          newData[property] = value;
          match = true;
        }
      }
    }
    if (!match) {
      return;
    }
    return this.outPorts.out.send(newData);
  };

  return FilterProperty;

})(noflo.Component);

exports.getComponent = function() {
  return new FilterProperty;
};

});
require.register("noflo-noflo-objects/components/CreateError.js", function(exports, require, module){
var noflo;

noflo = require('noflo');

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.icon = 'bug';
  c.description = 'Create an Error object';
  c.inPorts.add('start', {
    datatype: 'string'
  });
  c.outPorts.add('out', {
    datatype: 'object'
  });
  noflo.helpers.WirePattern(c, {
    "in": 'start',
    out: 'out',
    forwardGroups: true
  }, function(data, groups, out) {
    var err;
    if (typeof data === 'string') {
      err = new Error(data);
    } else {
      err = new Error('Error');
      err.context = data;
    }
    return out.send(err);
  });
  return c;
};

});
require.register("noflo-noflo-groups/graphs/ObjectifyByGroup.fbp", function(exports, require, module){
module.exports = JSON.parse('{"processes":{"Regexp":{"component":"core/Split"},"Objectify":{"component":"groups/Objectify"},"Remove":{"component":"groups/RemoveGroups"}},"connections":[{"src":{"process":"Regexp","port":"out"},"tgt":{"process":"Objectify","port":"regexp"}},{"src":{"process":"Objectify","port":"out"},"tgt":{"process":"Remove","port":"in"}},{"src":{"process":"Regexp","port":"out"},"tgt":{"process":"Remove","port":"regexp"}}],"exports":[{"private":"objectify.in","public":"in"},{"private":"remove.out","public":"out"},{"private":"regexp.in","public":"regexp"}]}');
});
require.register("noflo-noflo-groups/index.js", function(exports, require, module){
/*
 * This file can be used for general library features of groups.
 *
 * The library features can be made available as CommonJS modules that the
 * components in this project utilize.
 */

});
require.register("noflo-noflo-groups/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo-groups","description":"Group Utilities for NoFlo","keywords":["noflo","groups","utilities"],"author":"Kenneth Kan <kenhkan@gmail.com>","version":"0.1.0","repo":"kenhkan/groups","dependencies":{"jashkenas/underscore":"*","noflo/noflo":"*","noflo/noflo-core":"*","broofa/node-uuid":"*"},"scripts":["components/ReadGroups.js","components/RemoveGroups.js","components/Regroup.js","components/Group.js","components/GroupZip.js","components/FilterByGroup.js","components/Objectify.js","components/ReadGroup.js","components/SendByGroup.js","components/CollectGroups.js","components/CollectObject.js","components/CollectTree.js","components/FirstGroup.js","components/LastGroup.js","components/MapGroup.js","components/MergeGroups.js","components/GroupByObjectKey.js","graphs/ObjectifyByGroup.fbp","components/GenerateGroup.js","index.js"],"json":["component.json"],"noflo":{"icon":"tags","components":{"CollectGroups":"components/CollectGroups.js","CollectObject":"components/CollectObject.js","CollectTree":"components/CollectTree.js","FilterByGroup":"components/FilterByGroup.js","FirstGroup":"components/FirstGroup.js","GenerateGroup":"components/GenerateGroup.js","Group":"components/Group.js","GroupByObjectKey":"components/GroupByObjectKey.js","GroupZip":"components/GroupZip.js","LastGroup":"components/LastGroup.js","MapGroup":"components/MapGroup.js","MergeGroups":"components/MergeGroups.js","Objectify":"components/Objectify.js","ReadGroup":"components/ReadGroup.js","ReadGroups":"components/ReadGroups.js","Regroup":"components/Regroup.js","RemoveGroups":"components/RemoveGroups.js","SendByGroup":"components/SendByGroup.js"},"graphs":{"ObjectifyByGroup":"graphs/ObjectifyByGroup.fbp"}},"fbp":["graphs/ObjectifyByGroup.fbp"]}');
});
require.register("noflo-noflo-groups/components/ReadGroups.js", function(exports, require, module){
var ReadGroups, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

_ = require('underscore');

ReadGroups = (function(_super) {
  __extends(ReadGroups, _super);

  function ReadGroups() {
    this.strip = false;
    this.threshold = Infinity;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all'
      },
      strip: {
        datatype: 'string'
      },
      threshold: {
        datatype: 'all'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      },
      group: {
        datatype: 'string'
      }
    });
    this.inPorts.threshold.on('data', (function(_this) {
      return function(threshold) {
        return _this.threshold = parseInt(threshold);
      };
    })(this));
    this.inPorts.strip.on('data', (function(_this) {
      return function(strip) {
        return _this.strip = strip === 'true';
      };
    })(this));
    this.inPorts["in"].on('connect', (function(_this) {
      return function() {
        _this.count = 0;
        return _this.groups = [];
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        var beginGroup;
        beginGroup = function() {
          _this.groups.push(group);
          if (_this.outPorts.out.isAttached()) {
            return _this.outPorts.out.beginGroup(group);
          }
        };
        if (_this.count >= _this.threshold) {
          return beginGroup(group);
        } else {
          _this.outPorts.group.send(group);
          if (!_this.strip) {
            beginGroup(group);
          }
          return _this.count++;
        }
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function(group) {
        if (group === _.last(_this.groups)) {
          _this.groups.pop();
          if (_this.outPorts.out.isAttached()) {
            return _this.outPorts.out.endGroup();
          }
        }
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (_this.outPorts.out.isAttached()) {
          return _this.outPorts.out.send(data);
        }
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        if (_this.outPorts.out.isAttached()) {
          _this.outPorts.out.disconnect();
        }
        return _this.outPorts.group.disconnect();
      };
    })(this));
  }

  return ReadGroups;

})(noflo.Component);

exports.getComponent = function() {
  return new ReadGroups;
};

});
require.register("noflo-noflo-groups/components/RemoveGroups.js", function(exports, require, module){
var RemoveGroups, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

RemoveGroups = (function(_super) {
  __extends(RemoveGroups, _super);

  RemoveGroups.prototype.description = "Remove a group given a string or a regex string";

  function RemoveGroups() {
    this.regexp = null;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'IPs to forward'
      },
      regexp: {
        datatype: 'string',
        description: 'Regexp used to remove groups'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts.regexp.on("data", (function(_this) {
      return function(regexp) {
        return _this.regexp = new RegExp(regexp);
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        if ((_this.regexp != null) && (group.match(_this.regexp) == null)) {
          return _this.outPorts.out.beginGroup(group);
        }
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        if ((_this.regexp != null) && (group.match(_this.regexp) == null)) {
          return _this.outPorts.out.endGroup();
        }
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return RemoveGroups;

})(noflo.Component);

exports.getComponent = function() {
  return new RemoveGroups;
};

});
require.register("noflo-noflo-groups/components/Regroup.js", function(exports, require, module){
var Regroup, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

Regroup = (function(_super) {
  __extends(Regroup, _super);

  Regroup.prototype.description = "Forward all the data IPs, strip all groups, and replace them with groups from another connection";

  function Regroup() {
    this.groups = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all'
      },
      group: {
        datatype: ''
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts.group.on("connect", (function(_this) {
      return function() {
        return _this.groups = [];
      };
    })(this));
    this.inPorts.group.on("data", (function(_this) {
      return function(group) {
        return _this.groups.push(group);
      };
    })(this));
    this.inPorts["in"].on("connect", (function(_this) {
      return function() {
        var group, _i, _len, _ref, _results;
        _ref = _this.groups;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          group = _ref[_i];
          _results.push(_this.outPorts.out.beginGroup(group));
        }
        return _results;
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        var group, _i, _len, _ref;
        _ref = _this.groups;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          group = _ref[_i];
          _this.outPorts.out.endGroup();
        }
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Regroup;

})(noflo.Component);

exports.getComponent = function() {
  return new Regroup;
};

});
require.register("noflo-noflo-groups/components/Group.js", function(exports, require, module){
var Group, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

Group = (function(_super) {
  __extends(Group, _super);

  Group.prototype.description = 'Add groups to a packet';

  function Group() {
    this.newGroups = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'IPs to forward'
      },
      group: {
        datatype: 'string',
        description: 'Groups to encapsulate incoming packets into'
      },
      clear: {
        datatype: 'bang',
        description: 'Clear encapsulating groups'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all',
        description: 'Forwarded IPs with encapsulating groups'
      }
    });
    this.inPorts["in"].on("connect", (function(_this) {
      return function() {
        var group, _i, _len, _ref, _results;
        _ref = _this.newGroups;
        _results = [];
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          group = _ref[_i];
          _results.push(_this.outPorts.out.beginGroup(group));
        }
        return _results;
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        var group, _i, _len, _ref;
        _ref = _this.newGroups;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          group = _ref[_i];
          _this.outPorts.out.endGroup();
        }
        return _this.outPorts.out.disconnect();
      };
    })(this));
    this.inPorts.group.on("connect", (function(_this) {
      return function() {
        return _this.newGroups = [];
      };
    })(this));
    this.inPorts.group.on("data", (function(_this) {
      return function(group) {
        var groups, _i, _len, _results;
        groups = group.split(':');
        _results = [];
        for (_i = 0, _len = groups.length; _i < _len; _i++) {
          group = groups[_i];
          _results.push(_this.newGroups.push(group));
        }
        return _results;
      };
    })(this));
  }

  return Group;

})(noflo.Component);

exports.getComponent = function() {
  return new Group;
};

});
require.register("noflo-noflo-groups/components/GroupZip.js", function(exports, require, module){
var GroupZip, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

GroupZip = (function(_super) {
  __extends(GroupZip, _super);

  function GroupZip() {
    this.newGroups = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all'
      },
      group: {
        datatype: 'string'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts["in"].on("connect", (function(_this) {
      return function() {
        return _this.count = 0;
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        _this.outPorts.out.beginGroup(_this.newGroups[_this.count++]);
        _this.outPorts.out.send(data);
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
    this.inPorts.group.on("connect", (function(_this) {
      return function() {
        return _this.newGroups = [];
      };
    })(this));
    this.inPorts.group.on("data", (function(_this) {
      return function(group) {
        return _this.newGroups.push(group);
      };
    })(this));
  }

  return GroupZip;

})(noflo.Component);

exports.getComponent = function() {
  return new GroupZip;
};

});
require.register("noflo-noflo-groups/components/FilterByGroup.js", function(exports, require, module){
var FilterByGroup, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

FilterByGroup = (function(_super) {
  __extends(FilterByGroup, _super);

  FilterByGroup.prototype.description = "Given a RegExp string, filter out groups that do not match and their children data packets/groups. Forward only the content of the matching group.";

  function FilterByGroup() {
    this.regexp = null;
    this.matchedLevel = null;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'IPs to filter groups from'
      },
      regexp: {
        datatype: 'string',
        description: 'Regexp use as a filter for IPs'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      },
      group: {
        datatype: 'string'
      },
      empty: {
        datatype: 'bang'
      }
    });
    this.inPorts.regexp.on("data", (function(_this) {
      return function(regexp) {
        return _this.regexp = new RegExp(regexp);
      };
    })(this));
    this.inPorts["in"].on("connect", (function(_this) {
      return function() {
        _this.level = 0;
        return _this.hasContent = false;
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        if (_this.matchedLevel != null) {
          _this.outPorts.out.beginGroup(group);
        }
        _this.level++;
        if ((_this.matchedLevel == null) && (_this.regexp != null) && (group.match(_this.regexp) != null)) {
          _this.matchedLevel = _this.level;
          if (_this.outPorts.group.isAttached()) {
            return _this.outPorts.group.send(group);
          }
        }
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        if (_this.matchedLevel != null) {
          _this.hasContent = true;
          return _this.outPorts.out.send(data);
        }
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        if (_this.matchedLevel === _this.level) {
          _this.matchedLevel = null;
        }
        if (_this.matchedLevel != null) {
          _this.outPorts.out.endGroup();
        }
        return _this.level--;
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        if (!_this.hasContent && _this.outPorts.empty.isAttached()) {
          _this.outPorts.empty.send(null);
          _this.outPorts.empty.disconnect();
        }
        if (_this.outPorts.group.isAttached()) {
          _this.outPorts.group.disconnect();
        }
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return FilterByGroup;

})(noflo.Component);

exports.getComponent = function() {
  return new FilterByGroup;
};

});
require.register("noflo-noflo-groups/components/Objectify.js", function(exports, require, module){
var Objectify, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

_ = require("underscore");

Objectify = (function(_super) {
  __extends(Objectify, _super);

  Objectify.prototype.description = "specify a regexp string, use the first match as the key of an object containing the data";

  function Objectify() {
    this.regexp = null;
    this.match = null;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all'
      },
      regexp: {
        datatype: 'string'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts.regexp.on("data", (function(_this) {
      return function(regexp) {
        return _this.regexp = new RegExp(regexp);
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        if ((_this.regexp != null) && (group.match(_this.regexp) != null)) {
          _this.match = _.first(group.match(_this.regexp));
        }
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        var d;
        if (_this.match != null) {
          d = data;
          data = {};
          data[_this.match] = d;
        }
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Objectify;

})(noflo.Component);

exports.getComponent = function() {
  return new Objectify;
};

});
require.register("noflo-noflo-groups/components/ReadGroup.js", function(exports, require, module){
var ReadGroup, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ReadGroup = (function(_super) {
  __extends(ReadGroup, _super);

  function ReadGroup() {
    this.groups = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      },
      group: {
        datatype: 'string'
      }
    });
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        _this.groups.push(group);
        _this.outPorts.group.beginGroup(group);
        if (_this.outPorts.out.isAttached()) {
          return _this.outPorts.out.beginGroup(group);
        }
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (_this.outPorts.out.isAttached()) {
          _this.outPorts.out.send(data);
        }
        if (!_this.groups.length) {
          return;
        }
        return _this.outPorts.group.send(_this.groups.join(':'));
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        _this.groups.pop();
        _this.outPorts.group.endGroup();
        if (_this.outPorts.out.isAttached()) {
          return _this.outPorts.out.endGroup();
        }
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        _this.outPorts.out.disconnect();
        return _this.outPorts.group.disconnect();
      };
    })(this));
  }

  return ReadGroup;

})(noflo.Component);

exports.getComponent = function() {
  return new ReadGroup;
};

});
require.register("noflo-noflo-groups/components/SendByGroup.js", function(exports, require, module){
var SendByGroup, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SendByGroup = (function(_super) {
  __extends(SendByGroup, _super);

  SendByGroup.prototype.description = 'Send packet held in "data" when receiving matching set of groups in "in"';

  SendByGroup.prototype.icon = 'share-square';

  function SendByGroup() {
    this.data = {};
    this.ungrouped = null;
    this.dataGroups = [];
    this.inGroups = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'bang',
        description: 'Signal to release IPs associated with the emitted group'
      },
      data: {
        datatype: 'all',
        description: 'IPs to store by group'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all',
        description: 'IP associated with a group received on the in port'
      }
    });
    this.inPorts.data.on('begingroup', (function(_this) {
      return function(group) {
        return _this.dataGroups.push(group);
      };
    })(this));
    this.inPorts.data.on('data', (function(_this) {
      return function(data) {
        if (!_this.dataGroups.length) {
          _this.ungrouped = data;
          return;
        }
        return _this.data[_this.groupId(_this.dataGroups)] = data;
      };
    })(this));
    this.inPorts.data.on('endgroup', (function(_this) {
      return function() {
        return _this.dataGroups.pop();
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.inGroups.push(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        var id;
        if (!_this.inGroups.length) {
          if (_this.ungrouped !== null) {
            _this.send(_this.ungrouped);
          }
          return;
        }
        id = _this.groupId(_this.inGroups);
        if (!_this.data[id]) {
          return;
        }
        return _this.send(_this.data[id]);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.inGroups.pop();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  SendByGroup.prototype.groupId = function(groups) {
    return groups.join(':');
  };

  SendByGroup.prototype.send = function(data) {
    var group, _i, _j, _len, _len1, _ref, _ref1, _results;
    _ref = this.inGroups;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      group = _ref[_i];
      this.outPorts.out.beginGroup(group);
    }
    this.outPorts.out.send(data);
    _ref1 = this.inGroups;
    _results = [];
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      group = _ref1[_j];
      _results.push(this.outPorts.out.endGroup());
    }
    return _results;
  };

  return SendByGroup;

})(noflo.Component);

exports.getComponent = function() {
  return new SendByGroup;
};

});
require.register("noflo-noflo-groups/components/CollectGroups.js", function(exports, require, module){
var CollectGroups, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

CollectGroups = (function(_super) {
  __extends(CollectGroups, _super);

  CollectGroups.prototype.description = 'Collect packets into object keyed by its groups';

  function CollectGroups() {
    this.data = {};
    this.groups = [];
    this.parents = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'IPs to collect'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object',
        description: 'An object containing input IPs sorted by their group names'
      },
      error: {
        datatype: 'object'
      }
    });
    this.inPorts["in"].on('connect', (function(_this) {
      return function() {
        return _this.data = {};
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        if (group === '$data') {
          _this.error('groups cannot be named \'$data\'');
          return;
        }
        _this.parents.push(_this.data);
        _this.groups.push(group);
        return _this.data = {};
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.setData(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        var data;
        data = _this.data;
        _this.data = _this.parents.pop();
        return _this.addChild(_this.data, _this.groups.pop(), data);
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        _this.outPorts.out.send(_this.data);
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  CollectGroups.prototype.addChild = function(parent, child, data) {
    if (!(child in parent)) {
      return parent[child] = data;
    }
    if (Array.isArray(parent[child])) {
      return parent[child].push(data);
    }
    return parent[child] = [parent[child], data];
  };

  CollectGroups.prototype.setData = function(data) {
    var _base;
    if ((_base = this.data).$data == null) {
      _base.$data = [];
    }
    return this.data.$data.push(data);
  };

  CollectGroups.prototype.error = function(msg) {
    if (this.outPorts.error.isAttached()) {
      this.outPorts.error.send(new Error(msg));
      this.outPorts.error.disconnect();
      return;
    }
    throw new Error(msg);
  };

  return CollectGroups;

})(noflo.Component);

exports.getComponent = function() {
  return new CollectGroups;
};

});
require.register("noflo-noflo-groups/components/CollectObject.js", function(exports, require, module){
var CollectObject, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

CollectObject = (function(_super) {
  __extends(CollectObject, _super);

  CollectObject.prototype.description = 'Collect packets to an object identified by keys organized by connection';

  function CollectObject() {
    this.keys = [];
    this.allpackets = [];
    this.data = {};
    this.groups = {};
    this.inPorts = new noflo.InPorts({
      keys: {
        datatype: 'string'
      },
      allpackets: {
        datatype: 'string'
      },
      collect: {
        datatype: 'all'
      },
      release: {
        datatype: 'bang'
      },
      clear: {
        datatype: 'bang'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object'
      }
    });
    this.inPorts.keys.on('data', (function(_this) {
      return function(key) {
        var keys, _i, _len, _results;
        keys = key.split(',');
        if (keys.length > 1) {
          _this.keys = [];
        }
        _results = [];
        for (_i = 0, _len = keys.length; _i < _len; _i++) {
          key = keys[_i];
          _results.push(_this.keys.push(key));
        }
        return _results;
      };
    })(this));
    this.inPorts.allpackets.on('data', (function(_this) {
      return function(key) {
        var allpackets, _i, _len, _results;
        allpackets = key.split(',');
        if (allpackets.length > 1) {
          _this.keys = [];
        }
        _results = [];
        for (_i = 0, _len = allpackets.length; _i < _len; _i++) {
          key = allpackets[_i];
          _results.push(_this.allpackets.push(key));
        }
        return _results;
      };
    })(this));
    this.inPorts.collect.once('connect', (function(_this) {
      return function() {
        return _this.subscribeSockets();
      };
    })(this));
    this.inPorts.release.on('data', (function(_this) {
      return function() {
        return _this.release();
      };
    })(this));
    this.inPorts.release.on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
    this.inPorts.clear.on('data', (function(_this) {
      return function() {
        return _this.clear();
      };
    })(this));
  }

  CollectObject.prototype.release = function() {
    this.outPorts.out.send(this.data);
    return this.data = this.clone(this.data);
  };

  CollectObject.prototype.subscribeSockets = function() {
    return this.inPorts.collect.sockets.forEach((function(_this) {
      return function(socket, idx) {
        return _this.subscribeSocket(socket, idx);
      };
    })(this));
  };

  CollectObject.prototype.subscribeSocket = function(socket, id) {
    socket.on('begingroup', (function(_this) {
      return function(group) {
        if (!_this.groups[id]) {
          _this.groups[id] = [];
        }
        return _this.groups[id].push(group);
      };
    })(this));
    socket.on('data', (function(_this) {
      return function(data) {
        var groupId;
        if (!_this.keys[id]) {
          return;
        }
        groupId = _this.groupId(_this.groups[id]);
        if (!_this.data[groupId]) {
          _this.data[groupId] = {};
        }
        if (_this.allpackets.indexOf(_this.keys[id]) !== -1) {
          if (!_this.data[groupId][_this.keys[id]]) {
            _this.data[groupId][_this.keys[id]] = [];
          }
          _this.data[groupId][_this.keys[id]].push(data);
          return;
        }
        return _this.data[groupId][_this.keys[id]] = data;
      };
    })(this));
    return socket.on('endgroup', (function(_this) {
      return function() {
        if (!_this.groups[id]) {
          return;
        }
        return _this.groups[id].pop();
      };
    })(this));
  };

  CollectObject.prototype.groupId = function(groups) {
    if (!groups.length) {
      return 'ungrouped';
    }
    return groups[0];
  };

  CollectObject.prototype.clone = function(data) {
    var groupName, groupedData, name, newData, value;
    newData = {};
    for (groupName in data) {
      groupedData = data[groupName];
      newData[groupName] = {};
      for (name in groupedData) {
        value = groupedData[name];
        if (!groupedData.hasOwnProperty(name)) {
          continue;
        }
        newData[groupName][name] = value;
      }
    }
    return newData;
  };

  CollectObject.prototype.clear = function() {
    this.data = {};
    return this.groups = {};
  };

  return CollectObject;

})(noflo.Component);

exports.getComponent = function() {
  return new CollectObject;
};

});
require.register("noflo-noflo-groups/components/CollectTree.js", function(exports, require, module){
var CollectTree, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

CollectTree = (function(_super) {
  __extends(CollectTree, _super);

  CollectTree.prototype.description = 'Collect grouped packets into a simple tree structure and send on disconnect';

  function CollectTree() {
    this.data = null;
    this.collectGroups = [];
    this.forwardGroups = [];
    this.level = 0;
    this.currentLevel = 0;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all'
      },
      level: {
        datatype: 'integer',
        "default": 0,
        description: 'Number of groups (from outermost) to skip collection of'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      },
      error: {
        datatype: 'object'
      }
    });
    this.inPorts.level.on('data', (function(_this) {
      return function(data) {
        return _this.level = data;
      };
    })(this));
    this.inPorts["in"].on('connect', (function(_this) {
      return function() {
        return _this.data = {};
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        if (_this.currentLevel < _this.level) {
          _this.forwardGroups.push(group);
        } else {
          _this.collectGroups.push(group);
        }
        return _this.currentLevel += 1;
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        var d, g, idx, _i, _len, _ref;
        if (!_this.collectGroups.length) {
          return;
        }
        d = _this.data;
        _ref = _this.collectGroups;
        for (idx = _i = 0, _len = _ref.length; _i < _len; idx = ++_i) {
          g = _ref[idx];
          if (idx < _this.collectGroups.length - 1) {
            if (!d[g]) {
              d[g] = {};
            }
            d = d[g];
            continue;
          }
        }
        if (!d[g]) {
          d[g] = data;
          return;
        }
        if (!Array.isArray(d[g])) {
          d[g] = [d[g]];
        }
        return d[g].push(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function(group) {
        if (_this.currentLevel < _this.level) {

        } else {
          _this.collectGroups.pop();
        }
        return _this.currentLevel -= 1;
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        var err, group, _i, _j, _len, _len1, _ref, _ref1;
        _this.collectGroups = [];
        if (Object.keys(_this.data).length) {
          _ref = _this.forwardGroups;
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            group = _ref[_i];
            _this.outPorts.out.beginGroup(group);
          }
          _this.outPorts.out.send(_this.data);
          _ref1 = _this.forwardGroups;
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            group = _ref1[_j];
            _this.outPorts.out.endGroup();
          }
          _this.outPorts.out.disconnect();
          _this.forwardGroups = [];
          _this.data = null;
          return;
        }
        _this.data = null;
        err = new Error('No tree information was collected');
        if (_this.outPorts.error.isAttached()) {
          _this.outPorts.error.send(err);
          _this.outPorts.error.disconnect();
          return;
        }
        throw err;
      };
    })(this));
  }

  return CollectTree;

})(noflo.Component);

exports.getComponent = function() {
  return new CollectTree;
};

});
require.register("noflo-noflo-groups/components/FirstGroup.js", function(exports, require, module){
var FirstGroup, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

FirstGroup = (function(_super) {
  __extends(FirstGroup, _super);

  FirstGroup.prototype.description = 'Forward incoming IPs and filter groups except the first one';

  function FirstGroup() {
    this.depth = 0;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'IPs to forward'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        if (_this.depth === 0) {
          _this.outPorts.out.beginGroup(group);
        }
        return _this.depth++;
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function(group) {
        _this.depth--;
        if (_this.depth === 0) {
          return _this.outPorts.out.endGroup();
        }
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        _this.depth = 0;
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return FirstGroup;

})(noflo.Component);

exports.getComponent = function() {
  return new FirstGroup;
};

});
require.register("noflo-noflo-groups/components/LastGroup.js", function(exports, require, module){
var LastGroup, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

LastGroup = (function(_super) {
  __extends(LastGroup, _super);

  LastGroup.prototype.description = 'Forward packets wrapped only using the latest emitted group';

  function LastGroup() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'IPs to forward'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.groups = [];
    this.groupSent = 0;
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.storeGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        _this.sendBeginGroup();
        if (_this.outPorts.out.isAttached()) {
          return _this.outPorts.out.send(data);
        }
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function(group) {
        return _this.sendEndGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        if (_this.outPorts.out.isConnected()) {
          return _this.outPorts.out.disconnect();
        }
      };
    })(this));
  }

  LastGroup.prototype.storeGroup = function(group) {
    return this.groups.push({
      name: group,
      emitted: false
    });
  };

  LastGroup.prototype.sendBeginGroup = function() {
    var group;
    if (!(this.groups.length > 0)) {
      return;
    }
    group = this.groups[this.groups.length - 1];
    if (group.emitted) {
      return;
    }
    group.emitted = true;
    if (this.outPorts.out.isAttached()) {
      return this.outPorts.out.beginGroup(group.name);
    }
  };

  LastGroup.prototype.sendEndGroup = function() {
    var group;
    group = this.groups.pop();
    if (!group.emitted) {
      return;
    }
    if (this.outPorts.out.isAttached()) {
      return this.outPorts.out.endGroup();
    }
  };

  LastGroup.prototype.clearGroups = function() {
    return this.groups = [];
  };

  return LastGroup;

})(noflo.Component);

exports.getComponent = function() {
  return new LastGroup;
};

});
require.register("noflo-noflo-groups/components/MapGroup.js", function(exports, require, module){
var MapGroup, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

MapGroup = (function(_super) {
  __extends(MapGroup, _super);

  function MapGroup() {
    this.map = {};
    this.regexps = {};
    this.inPorts = new noflo.InPorts({
      map: {
        datatype: 'all'
      },
      regexp: {
        datatype: 'all'
      },
      "in": {
        datatype: 'all'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts.map.on('data', (function(_this) {
      return function(data) {
        return _this.prepareMap(data);
      };
    })(this));
    this.inPorts.regexp.on('data', (function(_this) {
      return function(data) {
        return _this.prepareRegExp(data);
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.mapGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  MapGroup.prototype.prepareMap = function(map) {
    var mapParts;
    if (typeof map === 'object') {
      this.map = map;
      return;
    }
    mapParts = map.split('=');
    return this.map[mapParts[0]] = mapParts[1];
  };

  MapGroup.prototype.prepareRegExp = function(map) {
    var mapParts;
    mapParts = map.split('=');
    return this.regexps[mapParts[0]] = mapParts[1];
  };

  MapGroup.prototype.mapGroup = function(group) {
    var expression, matched, regexp, replacement, _ref;
    if (this.map[group]) {
      this.outPorts.out.beginGroup(this.map[group]);
      return;
    }
    _ref = this.regexps;
    for (expression in _ref) {
      replacement = _ref[expression];
      regexp = new RegExp(expression);
      matched = regexp.exec(group);
      if (!matched) {
        continue;
      }
      group = group.replace(regexp, replacement);
    }
    return this.outPorts.out.beginGroup(group);
  };

  return MapGroup;

})(noflo.Component);

exports.getComponent = function() {
  return new MapGroup;
};

});
require.register("noflo-noflo-groups/components/MergeGroups.js", function(exports, require, module){
var MergeGroups, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

_ = require('underscore')._;

MergeGroups = (function(_super) {
  __extends(MergeGroups, _super);

  function MergeGroups() {
    this.groups = {};
    this.data = {};
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group, socket) {
        return _this.addGroup(socket, group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data, socket) {
        _this.registerData(socket, data);
        return _this.checkBuffer(socket);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function(group, socket) {
        _this.checkBuffer(socket);
        return _this.removeGroup(socket);
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function(socket, socketId) {
        return _this.checkBuffer(socketId);
      };
    })(this));
  }

  MergeGroups.prototype.addGroup = function(socket, group) {
    if (!this.groups[socket]) {
      this.groups[socket] = [];
    }
    return this.groups[socket].push(group);
  };

  MergeGroups.prototype.removeGroup = function(socket) {
    return this.groups[socket].pop();
  };

  MergeGroups.prototype.groupId = function(socket) {
    if (!this.groups[socket]) {
      return null;
    }
    return this.groups[socket].join(':');
  };

  MergeGroups.prototype.registerData = function(socket, data) {
    var id;
    id = this.groupId(socket);
    if (!id) {
      return;
    }
    if (!this.data[id]) {
      this.data[id] = {};
    }
    return this.data[id][socket] = data;
  };

  MergeGroups.prototype.checkBuffer = function(socket) {
    var id, socketId, _i, _len, _ref;
    id = this.groupId(socket);
    if (!id) {
      return;
    }
    if (!this.data[id]) {
      return;
    }
    _ref = this.inPorts["in"].sockets;
    for (socketId = _i = 0, _len = _ref.length; _i < _len; socketId = ++_i) {
      socket = _ref[socketId];
      if (!this.data[id][socketId]) {
        return;
      }
    }
    this.outPorts.out.beginGroup(id);
    this.outPorts.out.send(this.data[id]);
    this.outPorts.out.endGroup();
    this.outPorts.out.disconnect();
    return delete this.data[id];
  };

  return MergeGroups;

})(noflo.Component);

exports.getComponent = function() {
  return new MergeGroups;
};

});
require.register("noflo-noflo-groups/components/GroupByObjectKey.js", function(exports, require, module){
var GroupByObjectKey, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

GroupByObjectKey = (function(_super) {
  __extends(GroupByObjectKey, _super);

  function GroupByObjectKey() {
    this.data = [];
    this.key = null;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all'
      },
      key: {
        datatype: 'string'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts["in"].on('connect', (function(_this) {
      return function() {
        return _this.data = [];
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (_this.key) {
          return _this.getKey(data);
        }
        return _this.data.push(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        var data, _i, _len, _ref;
        if (!_this.data.length) {
          _this.outPorts.out.disconnect();
          return;
        }
        if (!_this.key) {
          return;
        }
        _ref = _this.data;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          data = _ref[_i];
          _this.getKey(data);
        }
        return _this.outPorts.out.disconnect();
      };
    })(this));
    this.inPorts.key.on('data', (function(_this) {
      return function(data) {
        return _this.key = data;
      };
    })(this));
    this.inPorts.key.on('disconnect', (function(_this) {
      return function() {
        var data, _i, _len, _ref;
        if (!_this.data.length) {
          return;
        }
        _ref = _this.data;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          data = _ref[_i];
          _this.getKey(data);
        }
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  GroupByObjectKey.prototype.getKey = function(data) {
    var group;
    if (!this.key) {
      throw new Error('Key not defined');
    }
    if (typeof data !== 'object') {
      throw new Error('Data is not an object');
    }
    group = data[this.key];
    if (typeof data[this.key] !== 'string') {
      group = 'undefined';
    }
    if (typeof data[this.key] === 'boolean') {
      if (data[this.key]) {
        group = this.key;
      }
    }
    this.outPorts.out.beginGroup(group);
    this.outPorts.out.send(data);
    return this.outPorts.out.endGroup();
  };

  return GroupByObjectKey;

})(noflo.Component);

exports.getComponent = function() {
  return new GroupByObjectKey;
};

});
require.register("noflo-noflo-groups/components/GenerateGroup.js", function(exports, require, module){
var GenerateGroup, noflo, uuid,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

uuid = require('node-uuid');

GenerateGroup = (function(_super) {
  __extends(GenerateGroup, _super);

  GenerateGroup.prototype.description = 'Wrap IPs into a random uuid generated group';

  function GenerateGroup() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'IPs to forward'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.groups = [];
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.pushGeneratedGroup(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        _this.popGeneratedGroup();
        return _this.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        _this.popGeneratedGroup();
        _this.clearGroups();
        if (_this.outPorts.out.isConnected()) {
          return _this.outPorts.out.disconnect();
        }
      };
    })(this));
  }

  GenerateGroup.prototype.beginGroup = function(group) {
    this.groups.push({
      group: group,
      generated: false
    });
    if (this.outPorts.out.isAttached()) {
      return this.outPorts.out.beginGroup(group);
    }
  };

  GenerateGroup.prototype.endGroup = function() {
    this.groups.pop();
    if (this.outPorts.out.isAttached()) {
      return this.outPorts.out.endGroup();
    }
  };

  GenerateGroup.prototype.pushGeneratedGroup = function(data) {
    var generated;
    if (this.groups.length < 1 || (this.groups.length > 0 && !this.groups[this.groups.length - 1].generated)) {
      generated = {
        group: uuid(),
        generated: true
      };
      this.groups.push(generated);
      if (this.outPorts.out.isAttached()) {
        this.outPorts.out.beginGroup(generated.group);
      }
    }
    if (this.outPorts.out.isAttached()) {
      return this.outPorts.out.send(data);
    }
  };

  GenerateGroup.prototype.popGeneratedGroup = function() {
    if (this.groups.length < 1) {
      return;
    }
    if (!this.groups[this.groups.length - 1].generated) {
      return;
    }
    this.groups.pop();
    if (this.outPorts.out.isAttached()) {
      return this.outPorts.out.endGroup();
    }
  };

  GenerateGroup.prototype.clearGroups = function() {
    return this.groups = [];
  };

  return GenerateGroup;

})(noflo.Component);

exports.getComponent = function() {
  return new GenerateGroup;
};

});
require.register("noflo-noflo-groups/graphs/ObjectifyByGroup.fbp", function(exports, require, module){
module.exports = JSON.parse('{"processes":{"Regexp":{"component":"core/Split"},"Objectify":{"component":"groups/Objectify"},"Remove":{"component":"groups/RemoveGroups"}},"connections":[{"src":{"process":"Regexp","port":"out"},"tgt":{"process":"Objectify","port":"regexp"}},{"src":{"process":"Objectify","port":"out"},"tgt":{"process":"Remove","port":"in"}},{"src":{"process":"Regexp","port":"out"},"tgt":{"process":"Remove","port":"regexp"}}],"exports":[{"private":"objectify.in","public":"in"},{"private":"remove.out","public":"out"},{"private":"regexp.in","public":"regexp"}]}');
});
require.register("noflo-noflo-strings/index.js", function(exports, require, module){
/*
 * This file can be used for general library features that are exposed as CommonJS modules
 * that the components then utilize
 */

});
require.register("noflo-noflo-strings/graphs/SendJson.fbp", function(exports, require, module){
module.exports = JSON.parse('{"processes":{"SendString":{"component":"strings/SendString"},"ParseJson":{"component":"strings/ParseJson"}},"connections":[{"src":{"process":"SendString","port":"out"},"tgt":{"process":"ParseJson","port":"in"}}],"exports":[{"private":"sendstring.string","public":"json"},{"private":"sendstring.in","public":"in"},{"private":"parsejson.out","public":"out"}]}');
});
require.register("noflo-noflo-strings/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo-strings","description":"String Utilities for NoFlo","author":"Henri Bergius <henri.bergius@iki.fi>","repo":"noflo/noflo-strings","version":"0.0.1","keywords":[],"dependencies":{"noflo/noflo":"*","jashkenas/underscore":"*"},"scripts":["components/CompileString.js","components/Filter.js","components/SendString.js","components/SplitStr.js","components/StringTemplate.js","components/Replace.js","components/Jsonify.js","components/ParseFloat.js","components/ParseInt.js","components/ParseJson.js","index.js","components/Base64Encode.js","components/EscapeQuotes.js","components/LowerCaseString.js","components/MatchReplace.js","components/Quote.js","components/Splice.js","components/SubStr.js","components/TemplateReplace.js","components/ToString.js","graphs/SendJson.fbp"],"json":["component.json"],"noflo":{"icon":"font","components":{"Base64Encode":"components/Base64Encode.js","CompileString":"components/CompileString.js","EscapeQuotes":"components/EscapeQuotes.js","Filter":"components/Filter.js","Jsonify":"components/Jsonify.js","LowerCaseString":"components/LowerCaseString.js","MatchReplace":"components/MatchReplace.js","ParseFloat":"components/ParseFloat.js","ParseInt":"components/ParseInt.js","ParseJson":"components/ParseJson.js","Quote":"components/Quote.js","Replace":"components/Replace.js","SendString":"components/SendString.js","Splice":"components/Splice.js","SplitStr":"components/SplitStr.js","StringTemplate":"components/StringTemplate.js","SubStr":"components/SubStr.js","TemplateReplace":"components/TemplateReplace.js","ToString":"components/ToString.js"},"graphs":{"SendJson":"graphs/SendJson.fbp"}},"fbp":["graphs/SendJson.fbp"]}');
});
require.register("noflo-noflo-strings/components/CompileString.js", function(exports, require, module){
var CompileString, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

CompileString = (function(_super) {
  __extends(CompileString, _super);

  function CompileString() {
    this.delimiter = "\n";
    this.data = [];
    this.onGroupEnd = true;
    this.inPorts = new noflo.InPorts({
      delimiter: {
        datatype: 'string',
        description: 'String used to concatenate input strings'
      },
      "in": {
        dataype: 'string',
        description: 'Strings to concatenate (one per IP)'
      },
      ongroup: {
        datatype: 'boolean',
        description: 'true to release the concatened strings when a endgroup event happens'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string',
        description: 'Concatenation of input strings'
      }
    });
    this.inPorts.delimiter.on('data', (function(_this) {
      return function(data) {
        return _this.delimiter = data;
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.data.push(data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        if (_this.data.length && _this.onGroupEnd) {
          _this.outPorts.out.send(_this.data.join(_this.delimiter));
        }
        _this.outPorts.out.endGroup();
        return _this.data = [];
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        if (_this.data.length) {
          _this.outPorts.out.send(_this.data.join(_this.delimiter));
        }
        _this.data = [];
        return _this.outPorts.out.disconnect();
      };
    })(this));
    this.inPorts.ongroup.on("data", (function(_this) {
      return function(data) {
        return _this.onGroupEnd = String(data) === 'true';
      };
    })(this));
  }

  return CompileString;

})(noflo.Component);

exports.getComponent = function() {
  return new CompileString;
};

});
require.register("noflo-noflo-strings/components/Filter.js", function(exports, require, module){
var Filter, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

Filter = (function(_super) {
  __extends(Filter, _super);

  Filter.prototype.description = "filters an IP which is a string using a regex";

  function Filter() {
    this.regex = null;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'string',
        description: 'String to filter'
      },
      pattern: {
        datatype: 'string',
        description: 'String representation of a regexp used as filter'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string',
        description: 'String passing the filter'
      },
      missed: {
        datatype: 'string',
        description: 'String failing the filter'
      }
    });
    this.inPorts.pattern.on("data", (function(_this) {
      return function(data) {
        return _this.regex = new RegExp(data);
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        if (typeof data !== 'string') {
          data = data.toString();
        }
        if ((_this.regex != null) && ((data != null ? typeof data.match === "function" ? data.match(_this.regex) : void 0 : void 0) != null)) {
          _this.outPorts.out.send(data);
          return;
        }
        if (_this.outPorts.missed.isAttached()) {
          return _this.outPorts.missed.send(data);
        }
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        _this.outPorts.out.disconnect();
        if (_this.outPorts.missed.isAttached()) {
          return _this.outPorts.missed.disconnect();
        }
      };
    })(this));
  }

  return Filter;

})(noflo.Component);

exports.getComponent = function() {
  return new Filter;
};

});
require.register("noflo-noflo-strings/components/SendString.js", function(exports, require, module){
var SendString, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SendString = (function(_super) {
  __extends(SendString, _super);

  function SendString() {
    this.data = {
      string: null,
      group: []
    };
    this.groups = [];
    this.inPorts = new noflo.InPorts({
      string: {
        datatype: 'string'
      },
      "in": {
        datatype: 'bang'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string'
      }
    });
    this.inPorts.string.on('data', (function(_this) {
      return function(data) {
        return _this.data.string = data;
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.groups.push(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (_this.data.string === null) {
          return;
        }
        _this.data.group = _this.groups.slice(0);
        return _this.sendString(_this.data);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function(group) {
        return _this.groups.pop();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  SendString.prototype.sendString = function(data) {
    var group, _i, _j, _len, _len1, _ref, _ref1, _results;
    _ref = data.group;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      group = _ref[_i];
      this.outPorts.out.beginGroup(group);
    }
    this.outPorts.out.send(data.string);
    _ref1 = data.group;
    _results = [];
    for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
      group = _ref1[_j];
      _results.push(this.outPorts.out.endGroup());
    }
    return _results;
  };

  return SendString;

})(noflo.Component);

exports.getComponent = function() {
  return new SendString;
};

});
require.register("noflo-noflo-strings/components/SplitStr.js", function(exports, require, module){
var SplitStr, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SplitStr = (function(_super) {
  __extends(SplitStr, _super);

  SplitStr.prototype.description = ' The SplitStr component receives a string in the in port, splits it by string specified in the delimiter port, and send each part as a separate packet to the out port';

  function SplitStr() {
    this.delimiterString = "\n";
    this.strings = [];
    this.groups = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'string',
        description: 'String to split'
      },
      delimiter: {
        datatype: 'string',
        description: 'Delimiter used to split'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string',
        description: 'Split off elements from the input string (one element per IP)'
      }
    });
    this.inPorts.delimiter.on('data', (function(_this) {
      return function(data) {
        var first, last;
        first = data.substr(0, 1);
        last = data.substr(data.length - 1, 1);
        if (first === '/' && last === '/' && data.length > 1) {
          data = new RegExp(data.substr(1, data.length - 2));
        }
        return _this.delimiterString = data;
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.groups.push(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.strings.push(data);
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function(data) {
        var group, _i, _j, _len, _len1, _ref, _ref1;
        if (_this.strings.length === 0) {
          return _this.outPorts.out.disconnect();
        }
        _ref = _this.groups;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          group = _ref[_i];
          _this.outPorts.out.beginGroup(group);
        }
        _this.strings.join(_this.delimiterString).split(_this.delimiterString).forEach(function(line) {
          return _this.outPorts.out.send(line);
        });
        _ref1 = _this.groups;
        for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
          group = _ref1[_j];
          _this.outPorts.out.endGroup();
        }
        _this.outPorts.out.disconnect();
        _this.strings = [];
        return _this.groups = [];
      };
    })(this));
  }

  return SplitStr;

})(noflo.Component);

exports.getComponent = function() {
  return new SplitStr();
};

});
require.register("noflo-noflo-strings/components/StringTemplate.js", function(exports, require, module){
var StringTemplate, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

_ = require('underscore');

StringTemplate = (function(_super) {
  __extends(StringTemplate, _super);

  function StringTemplate() {
    this.template = null;
    this.inPorts = new noflo.InPorts({
      template: {
        datatype: 'string',
        description: 'Templating string'
      },
      "in": {
        datatype: 'object',
        description: 'Object containing key/value set used to run the template'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string'
      }
    });
    this.inPorts.template.on('data', (function(_this) {
      return function(data) {
        return _this.template = _.template(data);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(_this.template(data));
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return StringTemplate;

})(noflo.Component);

exports.getComponent = function() {
  return new StringTemplate;
};

});
require.register("noflo-noflo-strings/components/Replace.js", function(exports, require, module){
var Replace, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Replace = (function(_super) {
  __extends(Replace, _super);

  Replace.prototype.description = 'Given a fixed pattern and its replacement, replace all occurrences in the incoming template.';

  function Replace() {
    this.pattern = null;
    this.replacement = '';
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'string',
        description: 'String to replace pattern in'
      },
      pattern: {
        datatype: 'string',
        description: 'Pattern to replace'
      },
      replacement: {
        datatype: 'string',
        description: 'Replacement for the pattern'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string'
      }
    });
    this.inPorts.pattern.on('data', (function(_this) {
      return function(data) {
        return _this.pattern = new RegExp(data, 'g');
      };
    })(this));
    this.inPorts.replacement.on('data', (function(_this) {
      return function(data) {
        return _this.replacement = data.replace('\\\\n', "\n");
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        var string;
        string = data;
        if (_this.pattern != null) {
          string = ("" + data).replace(_this.pattern, _this.replacement);
        }
        return _this.outPorts.out.send(string);
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Replace;

})(noflo.Component);

exports.getComponent = function() {
  return new Replace;
};

});
require.register("noflo-noflo-strings/components/Jsonify.js", function(exports, require, module){
var Jsonify, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

_ = require('underscore');

Jsonify = (function(_super) {
  __extends(Jsonify, _super);

  Jsonify.prototype.description = "JSONify all incoming, unless a raw flag is set to exclude data packets that are pure strings";

  function Jsonify() {
    this.raw = false;
    this.pretty = false;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object',
        description: 'Object to convert into a JSON representation'
      },
      raw: {
        datatype: 'boolean',
        description: 'Whether to send strings as is'
      },
      pretty: {
        datatype: 'boolean',
        description: 'Make JSON output pretty'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string',
        description: 'JSON representation of the input object'
      }
    });
    this.inPorts.raw.on('data', (function(_this) {
      return function(raw) {
        return _this.raw = String(raw) === 'true';
      };
    })(this));
    this.inPorts.pretty.on('data', (function(_this) {
      return function(pretty) {
        return _this.pretty = String(pretty) === 'true';
      };
    })(this));
    this.inPorts["in"].on('begingroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (_this.raw && _.isString(data)) {
          _this.outPorts.out.send(data);
          return;
        }
        if (_this.pretty) {
          _this.outPorts.out.send(JSON.stringify(data, null, 4));
          return;
        }
        return _this.outPorts.out.send(JSON.stringify(data));
      };
    })(this));
    this.inPorts["in"].on('endgroup', (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Jsonify;

})(noflo.Component);

exports.getComponent = function() {
  return new Jsonify;
};

});
require.register("noflo-noflo-strings/components/ParseFloat.js", function(exports, require, module){
var ParseFloat, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

ParseFloat = (function(_super) {
  __extends(ParseFloat, _super);

  function ParseFloat() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'string',
        description: 'String to parse as Float representation'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'number',
        description: 'Parsed number'
      }
    });
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        if (!_this.outPorts.out.isAttached()) {
          return;
        }
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        if (!_this.outPorts.out.isAttached()) {
          return;
        }
        return _this.outPorts.out.send(parseFloat(data));
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function() {
        if (!_this.outPorts.out.isAttached()) {
          return;
        }
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        if (!_this.outPorts.out.isAttached()) {
          return;
        }
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return ParseFloat;

})(noflo.Component);

exports.getComponent = function() {
  return new ParseFloat;
};

});
require.register("noflo-noflo-strings/components/ParseInt.js", function(exports, require, module){
var ParseInt, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

ParseInt = (function(_super) {
  __extends(ParseInt, _super);

  function ParseInt() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'string',
        description: 'Strings to parse as an integer representation'
      },
      base: {
        datatype: 'number',
        description: 'Base used to parse the string representation'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'number',
        description: 'Parsed number'
      }
    });
    this.base = 10;
    this.inPorts.base.on("data", (function(_this) {
      return function(base) {
        return _this.base = base;
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        if (!_this.outPorts.out.isAttached()) {
          return;
        }
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        if (!_this.outPorts.out.isAttached()) {
          return;
        }
        return _this.outPorts.out.send(parseInt(data, _this.base));
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function() {
        if (!_this.outPorts.out.isAttached()) {
          return;
        }
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        if (!_this.outPorts.out.isAttached()) {
          return;
        }
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return ParseInt;

})(noflo.Component);

exports.getComponent = function() {
  return new ParseInt;
};

});
require.register("noflo-noflo-strings/components/ParseJson.js", function(exports, require, module){
var ParseJson, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

ParseJson = (function(_super) {
  __extends(ParseJson, _super);

  function ParseJson() {
    this["try"] = false;
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'string',
        description: 'JSON description to parse'
      },
      "try": {
        datatype: 'all'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'object',
        description: 'Parsed object'
      }
    });
    this.inPorts["try"].on("data", (function(_this) {
      return function(data) {
        if (data === "true") {
          return _this["try"] = true;
        }
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        var e;
        try {
          data = JSON.parse(data);
        } catch (_error) {
          e = _error;
          if (!_this["try"]) {
            data = JSON.parse(data);
          }
        }
        return _this.outPorts.out.send(data);
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return ParseJson;

})(noflo.Component);

exports.getComponent = function() {
  return new ParseJson;
};

});
require.register("noflo-noflo-strings/components/Base64Encode.js", function(exports, require, module){
var Base64Encode, btoa, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

if (!noflo.isBrowser()) {
  btoa = require('btoa');
} else {
  btoa = window.btoa;
}

Base64Encode = (function(_super) {
  __extends(Base64Encode, _super);

  Base64Encode.prototype.description = 'This component receives strings or Buffers and sends them out Base64-encoded';

  function Base64Encode() {
    this.data = null;
    this.encodedData = '';
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all',
        description: 'Buffer or string to encode'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string',
        description: 'Encoded input'
      }
    });
    this.inPorts["in"].on('connect', (function(_this) {
      return function() {
        return _this.data = '';
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        if (!noflo.isBrowser() && data instanceof Buffer) {
          _this.encodedData += btoa(data);
          return;
        }
        return _this.data += data;
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        _this.outPorts.out.send(_this.encodeData());
        _this.outPorts.out.disconnect();
        _this.data = null;
        return _this.encodedData = '';
      };
    })(this));
  }

  Base64Encode.prototype.encodeData = function() {
    if (this.encodedData !== '') {
      return this.encodedData;
    }
    return btoa(this.data);
  };

  return Base64Encode;

})(noflo.Component);

exports.getComponent = function() {
  return new Base64Encode;
};

});
require.register("noflo-noflo-strings/components/EscapeQuotes.js", function(exports, require, module){
var EscapeQuotes, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

_ = require("underscore");

EscapeQuotes = (function(_super) {
  __extends(EscapeQuotes, _super);

  EscapeQuotes.prototype.description = "Escape all quotes in a string";

  function EscapeQuotes() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'string',
        description: 'String to escape quotes from'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string',
        description: 'Escaped string'
      }
    });
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(data.replace(/\"/g, "\\\""));
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return EscapeQuotes;

})(noflo.Component);

exports.getComponent = function() {
  return new EscapeQuotes;
};

});
require.register("noflo-noflo-strings/components/LowerCaseString.js", function(exports, require, module){
var LowerCaseString, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

LowerCaseString = (function(_super) {
  __extends(LowerCaseString, _super);

  LowerCaseString.prototype.description = "toLowerCase on all incoming IPs (assuming they are strings)";

  function LowerCaseString() {
    this.inPorts = {
      "in": new noflo.Port("string")
    };
    this.outPorts = {
      out: new noflo.Port
    };
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(data.toLowerCase());
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return LowerCaseString;

})(noflo.Component);

exports.getComponent = function() {
  return new LowerCaseString;
};

});
require.register("noflo-noflo-strings/components/MatchReplace.js", function(exports, require, module){
var MatchReplace, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

_ = require("underscore");

MatchReplace = (function(_super) {
  __extends(MatchReplace, _super);

  function MatchReplace() {
    this.matches = {};
    this.matchKeys = [];
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'all'
      },
      match: {
        datatype: 'object',
        description: 'Dictionnary object with key matching the input object and value being the replacement item'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'all'
      }
    });
    this.inPorts.match.on("connect", (function(_this) {
      return function() {
        _this.matches = {};
        return _this.matchKeys = [];
      };
    })(this));
    this.inPorts.match.on("data", (function(_this) {
      return function(match) {
        var from, to;
        if (!_.isObject(match)) {
          return;
        }
        for (from in match) {
          to = match[from];
          _this.matches[from.toString()] = to.toString();
        }
        return _this.matchKeys = _.keys(_this.matches);
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(string) {
        var matchKeyIndex;
        matchKeyIndex = _this.matchKeys.indexOf(string.toString());
        if (matchKeyIndex > -1) {
          string = _this.matches[_this.matchKeys[matchKeyIndex]];
        }
        return _this.outPorts.out.send(string);
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return MatchReplace;

})(noflo.Component);

exports.getComponent = function() {
  return new MatchReplace;
};

});
require.register("noflo-noflo-strings/components/Quote.js", function(exports, require, module){
var Quote, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

_ = require("underscore");

Quote = (function(_super) {
  __extends(Quote, _super);

  Quote.prototype.description = "quote the incoming string IPs";

  function Quote() {
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'string',
        description: 'String to put quote around'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string',
        description: 'Quoted input string'
      }
    });
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        return _this.outPorts.out.send("'" + data + "'");
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return Quote;

})(noflo.Component);

exports.getComponent = function() {
  return new Quote;
};

});
require.register("noflo-noflo-strings/components/Splice.js", function(exports, require, module){
var SpliceString, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

_ = require("underscore");

SpliceString = (function(_super) {
  __extends(SpliceString, _super);

  SpliceString.prototype.description = "interlaces two arrays of string into a string";

  function SpliceString() {
    this.strings = null;
    this.groups = [];
    this.assoc = ":";
    this.delim = ",";
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'array',
        description: 'Array to interlace (2 consecutive IPs)'
      },
      assoc: {
        datatype: 'string'
      },
      delim: {
        datatype: 'string'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string'
      }
    });
    this.inPorts.assoc.on("data", (function(_this) {
      return function(assoc) {
        _this.assoc = assoc;
      };
    })(this));
    this.inPorts.delim.on("data", (function(_this) {
      return function(delim) {
        _this.delim = delim;
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.groups.push(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        var group, groups, out, paired, strings, _i, _j, _len, _len1;
        if (_this.strings != null) {
          paired = _.zip(_this.strings, data);
          strings = _.map(paired, (function(pair) {
            return pair.join(_this.assoc);
          }));
          out = strings.join(_this.delim);
          groups = _.uniq(_this.groups);
          for (_i = 0, _len = groups.length; _i < _len; _i++) {
            group = groups[_i];
            _this.outPorts.out.beginGroup(group);
          }
          _this.outPorts.out.send(out);
          for (_j = 0, _len1 = groups.length; _j < _len1; _j++) {
            group = groups[_j];
            _this.outPorts.out.endGroup(group);
          }
          _this.outPorts.out.disconnect();
          _this.groups = [];
          return _this.strings = null;
        } else {
          return _this.strings = data;
        }
      };
    })(this));
  }

  return SpliceString;

})(noflo.Component);

exports.getComponent = function() {
  return new SpliceString;
};

});
require.register("noflo-noflo-strings/components/SubStr.js", function(exports, require, module){
var SubStr, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

SubStr = (function(_super) {
  __extends(SubStr, _super);

  function SubStr() {
    this.index = 0;
    this.limit = void 0;
    this.inPorts = new noflo.InPorts({
      index: {
        datatype: 'int',
        description: 'Index of the sub part '
      },
      limit: {
        datatype: 'int',
        description: 'Limit of the sub part'
      },
      "in": {
        datatype: 'string',
        description: 'String to extract a sub part from'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string'
      }
    });
    this.inPorts.index.on('data', (function(_this) {
      return function(data) {
        return _this.index = data;
      };
    })(this));
    this.inPorts.limit.on('data', (function(_this) {
      return function(data) {
        return _this.limit = data;
      };
    })(this));
    this.inPorts["in"].on('data', (function(_this) {
      return function(data) {
        return _this.outPorts.out.send(data.substr(_this.index, _this.limit));
      };
    })(this));
    this.inPorts["in"].on('disconnect', (function(_this) {
      return function() {
        return _this.outPorts.out.disconnect();
      };
    })(this));
  }

  return SubStr;

})(noflo.Component);

exports.getComponent = function() {
  return new SubStr;
};

});
require.register("noflo-noflo-strings/components/TemplateReplace.js", function(exports, require, module){
var TemplateReplace, noflo, _,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require("noflo");

_ = require("underscore");

TemplateReplace = (function(_super) {
  __extends(TemplateReplace, _super);

  TemplateReplace.prototype.description = "The inverse of 'Replace': fix the template and pass in an object of patterns and replacements.";

  function TemplateReplace() {
    this.template = null;
    this["default"] = '';
    this.inPorts = new noflo.InPorts({
      "in": {
        datatype: 'object'
      },
      template: {
        datatype: 'string'
      },
      token: {
        datatype: 'string'
      },
      "default": {
        datatype: 'string'
      }
    });
    this.outPorts = new noflo.OutPorts({
      out: {
        datatype: 'string'
      }
    });
    this.inPorts["default"].on("data", (function(_this) {
      return function(_default) {
        _this["default"] = _default;
      };
    })(this));
    this.inPorts.template.on("data", (function(_this) {
      return function(template) {
        if (_.isString(template)) {
          return _this.template = template;
        }
      };
    })(this));
    this.inPorts.token.on("connect", (function(_this) {
      return function() {
        return _this.tokens = [];
      };
    })(this));
    this.inPorts.token.on("data", (function(_this) {
      return function(token) {
        return _this.tokens.push(token);
      };
    })(this));
    this.inPorts["in"].on("connect", (function(_this) {
      return function() {
        _this.output = _this.template || "";
        return _this.tokenPos = 0;
      };
    })(this));
    this.inPorts["in"].on("begingroup", (function(_this) {
      return function(group) {
        return _this.outPorts.out.beginGroup(group);
      };
    })(this));
    this.inPorts["in"].on("data", (function(_this) {
      return function(data) {
        var pattern, replacement, token;
        if (_this.output == null) {
          return;
        }
        if (_.isObject(data)) {
          for (pattern in data) {
            replacement = data[pattern];
            pattern = new RegExp(pattern, "g");
            _this.output = _this.output.replace(pattern, replacement);
          }
          _this.outPorts.out.send(_this.output);
          delete _this.output;
          return;
        }
        if (_this.tokens == null) {
          return;
        }
        token = _this.tokens[_this.tokenPos++];
        pattern = new RegExp(token, 'g');
        replacement = _.isString(data) ? data : _this["default"];
        return _this.output = _this.output.replace(pattern, replacement);
      };
    })(this));
    this.inPorts["in"].on("endgroup", (function(_this) {
      return function() {
        return _this.outPorts.out.endGroup();
      };
    })(this));
    this.inPorts["in"].on("disconnect", (function(_this) {
      return function() {
        if (_this.output != null) {
          _this.outPorts.out.send(_this.output);
        }
        _this.outPorts.out.disconnect();
        return delete _this.output;
      };
    })(this));
  }

  return TemplateReplace;

})(noflo.Component);

exports.getComponent = function() {
  return new TemplateReplace;
};

});
require.register("noflo-noflo-strings/components/ToString.js", function(exports, require, module){
var noflo;

noflo = require('noflo');

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.description = 'Convert the input into a string using toString()';
  c.inPorts.add('in', {
    datatype: 'all'
  });
  c.outPorts.add('out', {
    datatype: 'string'
  });
  noflo.helpers.MapComponent(c, function(data, groups, out) {
    return out.send(data.toString());
  });
  return c;
};

});
require.register("noflo-noflo-strings/graphs/SendJson.fbp", function(exports, require, module){
module.exports = JSON.parse('{"processes":{"SendString":{"component":"strings/SendString"},"ParseJson":{"component":"strings/ParseJson"}},"connections":[{"src":{"process":"SendString","port":"out"},"tgt":{"process":"ParseJson","port":"in"}}],"exports":[{"private":"sendstring.string","public":"json"},{"private":"sendstring.in","public":"in"},{"private":"parsejson.out","public":"out"}]}');
});
require.register("noflo-noflo-ajax/index.js", function(exports, require, module){
/*
 * This file can be used for general library features of noflo-ajax.
 *
 * The library features can be made available as CommonJS modules that the
 * components in this project utilize.
 */

});
require.register("noflo-noflo-ajax/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo-ajax","description":"AJAX components for NoFlo","author":"Henri Bergius <henri.bergius@iki.fi>","repo":"noflo/noflo-ajax","version":"0.1.3","keywords":[],"dependencies":{"noflo/noflo":"*"},"scripts":["components/Get.js","components/GetJsonP.js","index.js","components/CorsProxy.js"],"json":["component.json"],"noflo":{"icon":"globe","components":{"CorsProxy":"components/CorsProxy.js","Get":"components/Get.js","GetJsonP":"components/GetJsonP.js"}}}');
});
require.register("noflo-noflo-ajax/components/Get.js", function(exports, require, module){
var Get, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Get = (function(_super) {
  __extends(Get, _super);

  function Get() {
    this.inPorts = {
      url: new noflo.Port('string')
    };
    this.outPorts = {
      out: new noflo.Port('string'),
      error: new noflo.Port('object')
    };
    Get.__super__.constructor.call(this, 'url');
  }

  Get.prototype.doAsync = function(url, callback) {
    var req;
    req = new XMLHttpRequest;
    req.onreadystatechange = (function(_this) {
      return function() {
        if (req.readyState === 4) {
          if (req.status === 200) {
            _this.outPorts.out.beginGroup(url);
            _this.outPorts.out.send(req.responseText);
            _this.outPorts.out.endGroup();
            return callback();
          } else {
            return callback(new Error("Error loading " + url));
          }
        }
      };
    })(this);
    req.open('GET', url, true);
    return req.send(null);
  };

  return Get;

})(noflo.AsyncComponent);

exports.getComponent = function() {
  return new Get;
};

});
require.register("noflo-noflo-ajax/components/GetJsonP.js", function(exports, require, module){
var GetJsonP, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

GetJsonP = (function(_super) {
  __extends(GetJsonP, _super);

  function GetJsonP() {
    this.inPorts = {
      url: new noflo.Port('string')
    };
    this.outPorts = {
      out: new noflo.Port('string'),
      error: new noflo.Port('object')
    };
    GetJsonP.__super__.constructor.call(this, 'url');
  }

  GetJsonP.prototype.doAsync = function(url, callback) {
    var body, id, s;
    id = 'noflo' + (Math.random() * 100).toString().replace(/\./g, '');
    body = document.querySelector('body');
    s = document.createElement('script');
    s.onerror = function(e) {
      delete window[id];
      body.removeChild(s);
      return callback(e);
    };
    window[id] = (function(_this) {
      return function(data) {
        delete window[id];
        body.removeChild(s);
        if (data && data.meta && data.meta.status === 404) {
          return callback(new Error("" + url + " not found}"));
        }
        _this.outPorts.out.beginGroup(url);
        _this.outPorts.out.send(data);
        _this.outPorts.out.endGroup();
        return callback();
      };
    })(this);
    s.type = 'application/javascript';
    if (url.indexOf('?') === -1) {
      url = "" + url + "?callback=?";
    }
    s.src = url.replace('callback=?', "callback=" + id);
    return body.appendChild(s);
  };

  return GetJsonP;

})(noflo.AsyncComponent);

exports.getComponent = function() {
  return new GetJsonP;
};

});
require.register("noflo-noflo-ajax/components/CorsProxy.js", function(exports, require, module){
var isExternal, noflo;

noflo = require('noflo');

isExternal = function(url) {
  return location.href.replace("http://", "").replace("https://", "").split("/")[0] !== url.replace("http://", "").replace("https://", "").split("/")[0];
};

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.service = 'http://www.corsproxy.com/';
  c.inPorts.add('in', function(event, payload) {
    var match_http, out, path;
    if (event === 'begingroup') {
      c.outPorts.out.beginGroup(payload);
    }
    if (event === 'endgroup') {
      c.outPorts.out.endGroup();
    }
    if (event === 'disconnect') {
      c.outPorts.out.disconnect();
    }
    if (event !== 'data') {
      return;
    }
    out = payload;
    if (noflo.isBrowser() && isExternal(payload)) {
      match_http = /^(https?):\/\//;
      path = payload.replace(match_http, '');
      out = c.service + path;
    }
    c.outPorts.out.beginGroup(payload);
    c.outPorts.out.send(out);
    return c.outPorts.out.endGroup();
  });
  c.outPorts.add('out');
  return c;
};

});
require.register("jonnor-jsfeat/build/jsfeat.js", function(exports, require, module){
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 */

// namespace ?
var jsfeat = jsfeat || { REVISION: 'ALPHA' };
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 */

(function(global) {
    "use strict";
    //

    // CONSTANTS
    var EPSILON = 0.0000001192092896;
    var FLT_MIN = 1E-37;

    // implementation from CCV project
    // currently working only with u8,s32,f32
    var U8_t = 0x0100,
        S32_t = 0x0200,
        F32_t = 0x0400,
        S64_t = 0x0800,
        F64_t = 0x1000;

    var C1_t = 0x01,
        C2_t = 0x02,
        C3_t = 0x03,
        C4_t = 0x04;

    var _data_type_size = new Int32Array([ -1, 1, 4, -1, 4, -1, -1, -1, 8, -1, -1, -1, -1, -1, -1, -1, 8 ]);

    var get_data_type = (function () {
        return function(type) {
            return (type & 0xFF00);
        }
    })();

    var get_channel = (function () {
        return function(type) {
            return (type & 0xFF);
        }
    })();

    var get_data_type_size = (function () {
        return function(type) {
            return _data_type_size[(type & 0xFF00) >> 8];
        }
    })();

    // box blur option
    var BOX_BLUR_NOSCALE = 0x01;
    // svd options
    var SVD_U_T = 0x01;
    var SVD_V_T = 0x02;

    var data_t = (function () {
        function data_t(size_in_bytes, buffer) {
            // we need align size to multiple of 8
            this.size = ((size_in_bytes + 7) | 0) & -8;
            if (typeof buffer === "undefined") { 
                this.buffer = new ArrayBuffer(this.size);
            } else {
                this.buffer = buffer;
                this.size = buffer.length;
            }
            this.u8 = new Uint8Array(this.buffer);
            this.i32 = new Int32Array(this.buffer);
            this.f32 = new Float32Array(this.buffer);
            this.f64 = new Float64Array(this.buffer);
        }
        return data_t;
    })();

    var matrix_t = (function () {
        // columns, rows, data_type
        function matrix_t(c, r, data_type, data_buffer) {
            this.type = get_data_type(data_type)|0;
            this.channel = get_channel(data_type)|0;
            this.cols = c|0;
            this.rows = r|0;
            if (typeof data_buffer === "undefined") { 
                this.allocate();
            } else {
                this.buffer = data_buffer;
                // data user asked for
                this.data = this.type&U8_t ? this.buffer.u8 : (this.type&S32_t ? this.buffer.i32 : (this.type&F32_t ? this.buffer.f32 : this.buffer.f64));
            }
        }
        matrix_t.prototype.allocate = function() {
            // clear references
            delete this.data;
            delete this.buffer;
            //
            this.buffer = new data_t((this.cols * get_data_type_size(this.type) * this.channel) * this.rows);
            this.data = this.type&U8_t ? this.buffer.u8 : (this.type&S32_t ? this.buffer.i32 : (this.type&F32_t ? this.buffer.f32 : this.buffer.f64));
        }
        matrix_t.prototype.copy_to = function(other) {
            var od = other.data, td = this.data;
            var i = 0, n = (this.cols*this.rows*this.channel)|0;
            for(; i < n-4; i+=4) {
                od[i] = td[i];
                od[i+1] = td[i+1];
                od[i+2] = td[i+2];
                od[i+3] = td[i+3];
            }
            for(; i < n; ++i) {
                od[i] = td[i];
            }
        }
        matrix_t.prototype.resize = function(c, r, ch) {
            if (typeof ch === "undefined") { ch = this.channel; }
            // change buffer only if new size doesnt fit
            var new_size = (c * ch) * r;
            if(new_size > this.rows*this.cols*this.channel) {
                this.cols = c;
                this.rows = r;
                this.channel = ch;
                this.allocate();
            } else {
                this.cols = c;
                this.rows = r;
                this.channel = ch;
            }
        }

        return matrix_t;
    })();

    var pyramid_t = (function () {

        function pyramid_t(levels) {
            this.levels = levels|0;
            this.data = new Array(levels);
            this.pyrdown = jsfeat.imgproc.pyrdown;
        }

        pyramid_t.prototype.allocate = function(start_w, start_h, data_type) {
            var i = this.levels;
            while(--i >= 0) {
                this.data[i] = new matrix_t(start_w >> i, start_h >> i, data_type);
            }
        }

        pyramid_t.prototype.build = function(input, skip_first_level) {
            if (typeof skip_first_level === "undefined") { skip_first_level = true; }
            // just copy data to first level
            var i = 2, a = input, b = this.data[0];
            if(!skip_first_level) {
                var j=input.cols*input.rows;
                while(--j >= 0) {
                    b.data[j] = input.data[j];
                }
            }
            b = this.data[1];
            this.pyrdown(a, b);
            for(; i < this.levels; ++i) {
                a = b;
                b = this.data[i];
                this.pyrdown(a, b);
            }
        }

        return pyramid_t;
    })();

    var point2d_t = (function () {
        function point2d_t(x,y,score,level) {
            if (typeof x === "undefined") { x=0; }
            if (typeof y === "undefined") { y=0; }
            if (typeof score === "undefined") { score=0; }
            if (typeof level === "undefined") { level=0; }

            this.x = x;
            this.y = y;
            this.score = score;
            this.level = level;
        }
        return point2d_t;
    })();


    // data types
    global.U8_t = U8_t;
    global.S32_t = S32_t;
    global.F32_t = F32_t;
    global.S64_t = S64_t;
    global.F64_t = F64_t;
    // data channels
    global.C1_t = C1_t;
    global.C2_t = C2_t;
    global.C3_t = C3_t;
    global.C4_t = C4_t;

    // popular formats
    global.U8C1_t = U8_t | C1_t;
    global.U8C3_t = U8_t | C3_t;
    global.U8C4_t = U8_t | C4_t;

    global.F32C1_t = F32_t | C1_t;
    global.F32C2_t = F32_t | C2_t;
    global.S32C1_t = S32_t | C1_t;
    global.S32C2_t = S32_t | C2_t;

    // constants
    global.EPSILON = EPSILON;
    global.FLT_MIN = FLT_MIN;

    // options
    global.BOX_BLUR_NOSCALE = BOX_BLUR_NOSCALE;
    global.SVD_U_T = SVD_U_T;
    global.SVD_V_T = SVD_V_T;

    global.get_data_type = get_data_type;
    global.get_channel = get_channel;
    global.get_data_type_size = get_data_type_size;

    global.data_t = data_t;
    global.matrix_t = matrix_t;
    global.pyramid_t = pyramid_t;
    global.point2d_t = point2d_t;

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 */

(function(global) {
    "use strict";
    //

    var cache = (function() {

        // very primitive array cache, still need testing if it helps
        // of course V8 has its own powerful cache sys but i'm not sure
        // it caches several multichannel 640x480 buffer creations each frame

        var _pool_node_t = (function () {
            function _pool_node_t(size_in_bytes) {
                this.next = null;
                this.data = new jsfeat.data_t(size_in_bytes);
                this.size = this.data.size;
                this.buffer = this.data.buffer;
                this.u8 = this.data.u8;
                this.i32 = this.data.i32;
                this.f32 = this.data.f32;
                this.f64 = this.data.f64;
            }
            _pool_node_t.prototype.resize = function(size_in_bytes) {
                delete this.data;
                this.data = new jsfeat.data_t(size_in_bytes);
                this.size = this.data.size;
                this.buffer = this.data.buffer;
                this.u8 = this.data.u8;
                this.i32 = this.data.i32;
                this.f32 = this.data.f32;
                this.f64 = this.data.f64;
            }
            return _pool_node_t;
        })();

        var _pool_head, _pool_tail;
        var _pool_size = 0;

        return {

            allocate: function(capacity, data_size) {
                _pool_head = _pool_tail = new _pool_node_t(data_size);
                for (var i = 0; i < capacity; ++i) {
                    var node = new _pool_node_t(data_size);
                    _pool_tail = _pool_tail.next = node;

                    _pool_size++;
                }
            },

            get_buffer: function(size_in_bytes) {
                // assume we have enough free nodes
                var node = _pool_head;
                _pool_head = _pool_head.next;
                _pool_size--;

                if(size_in_bytes > node.size) {
                    node.resize(size_in_bytes);
                }

                return node;
            },

            put_buffer: function(node) {
                _pool_tail = _pool_tail.next = node;
                _pool_size++;
            }
        };
    })();

    global.cache = cache;
    // for now we dont need more than 30 buffers
    // if having cache sys really helps we can add auto extending sys
    cache.allocate(30, 640*4);

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 */

(function(global) {
    "use strict";
    //

    var math = (function() {

        var qsort_stack = new Int32Array(48*2);

        return {
            get_gaussian_kernel: function(size, sigma, kernel, data_type) {
                var i=0,x=0.0,t=0.0,sigma_x=0.0,scale_2x=0.0;
                var sum = 0.0;
                var kern_node = jsfeat.cache.get_buffer(size<<2);
                var _kernel = kern_node.f32;//new Float32Array(size);

                if((size&1) == 1 && size <= 7 && sigma <= 0) {
                    switch(size>>1) {
                        case 0:
                        _kernel[0] = 1.0;
                        sum = 1.0;
                        break;
                        case 1:
                        _kernel[0] = 0.25, _kernel[1] = 0.5, _kernel[2] = 0.25;
                        sum = 0.25+0.5+0.25;
                        break;
                        case 2:
                        _kernel[0] = 0.0625, _kernel[1] = 0.25, _kernel[2] = 0.375, 
                        _kernel[3] = 0.25, _kernel[4] = 0.0625;
                        sum = 0.0625+0.25+0.375+0.25+0.0625;
                        break;
                        case 3:
                        _kernel[0] = 0.03125, _kernel[1] = 0.109375, _kernel[2] = 0.21875, 
                        _kernel[3] = 0.28125, _kernel[4] = 0.21875, _kernel[5] = 0.109375, _kernel[6] = 0.03125;
                        sum = 0.03125+0.109375+0.21875+0.28125+0.21875+0.109375+0.03125;
                        break;
                    }
                } else {
                    sigma_x = sigma > 0 ? sigma : ((size-1)*0.5 - 1.0)*0.3 + 0.8;
                    scale_2x = -0.5/(sigma_x*sigma_x);

                    for( ; i < size; ++i )
                    {
                        x = i - (size-1)*0.5;
                        t = Math.exp(scale_2x*x*x);

                        _kernel[i] = t;
                        sum += t;
                    }
                }

                if(data_type & jsfeat.U8_t) {
                    // int based kernel
                    sum = 256.0/sum;
                    for (i = 0; i < size; ++i) {
                        kernel[i] = (_kernel[i] * sum + 0.5)|0;
                    }
                } else {
                    // classic kernel
                    sum = 1.0/sum;
                    for (i = 0; i < size; ++i) {
                        kernel[i] = _kernel[i] * sum;
                    }
                }

                jsfeat.cache.put_buffer(kern_node);
            },

            // model is 3x3 matrix_t
            perspective_4point_transform: function(model, src_x0, src_y0, dst_x0, dst_y0,
                                                        src_x1, src_y1, dst_x1, dst_y1,
                                                        src_x2, src_y2, dst_x2, dst_y2,
                                                        src_x3, src_y3, dst_x3, dst_y3) {
                var t1 = src_x0;
                var t2 = src_x2;
                var t4 = src_y1;
                var t5 = t1 * t2 * t4;
                var t6 = src_y3;
                var t7 = t1 * t6;
                var t8 = t2 * t7;
                var t9 = src_y2;
                var t10 = t1 * t9;
                var t11 = src_x1;
                var t14 = src_y0;
                var t15 = src_x3;
                var t16 = t14 * t15;
                var t18 = t16 * t11;
                var t20 = t15 * t11 * t9;
                var t21 = t15 * t4;
                var t24 = t15 * t9;
                var t25 = t2 * t4;
                var t26 = t6 * t2;
                var t27 = t6 * t11;
                var t28 = t9 * t11;
                var t30 = 1.0 / (t21-t24 - t25 + t26 - t27 + t28);
                var t32 = t1 * t15;
                var t35 = t14 * t11;
                var t41 = t4 * t1;
                var t42 = t6 * t41;
                var t43 = t14 * t2;
                var t46 = t16 * t9;
                var t48 = t14 * t9 * t11;
                var t51 = t4 * t6 * t2;
                var t55 = t6 * t14;
                var Hr0 = -(t8-t5 + t10 * t11 - t11 * t7 - t16 * t2 + t18 - t20 + t21 * t2) * t30;
                var Hr1 = (t5 - t8 - t32 * t4 + t32 * t9 + t18 - t2 * t35 + t27 * t2 - t20) * t30;
                var Hr2 = t1;
                var Hr3 = (-t9 * t7 + t42 + t43 * t4 - t16 * t4 + t46 - t48 + t27 * t9 - t51) * t30;
                var Hr4 = (-t42 + t41 * t9 - t55 * t2 + t46 - t48 + t55 * t11 + t51 - t21 * t9) * t30;
                var Hr5 = t14;
                var Hr6 = (-t10 + t41 + t43 - t35 + t24 - t21 - t26 + t27) * t30;
                var Hr7 = (-t7 + t10 + t16 - t43 + t27 - t28 - t21 + t25) * t30;
                
                t1 = dst_x0;
                t2 = dst_x2;
                t4 = dst_y1;
                t5 = t1 * t2 * t4;
                t6 = dst_y3;
                t7 = t1 * t6;
                t8 = t2 * t7;
                t9 = dst_y2;
                t10 = t1 * t9;
                t11 = dst_x1;
                t14 = dst_y0;
                t15 = dst_x3;
                t16 = t14 * t15;
                t18 = t16 * t11;
                t20 = t15 * t11 * t9;
                t21 = t15 * t4;
                t24 = t15 * t9;
                t25 = t2 * t4;
                t26 = t6 * t2;
                t27 = t6 * t11;
                t28 = t9 * t11;
                t30 = 1.0 / (t21-t24 - t25 + t26 - t27 + t28);
                t32 = t1 * t15;
                t35 = t14 * t11;
                t41 = t4 * t1;
                t42 = t6 * t41;
                t43 = t14 * t2;
                t46 = t16 * t9;
                t48 = t14 * t9 * t11;
                t51 = t4 * t6 * t2;
                t55 = t6 * t14;
                var Hl0 = -(t8-t5 + t10 * t11 - t11 * t7 - t16 * t2 + t18 - t20 + t21 * t2) * t30;
                var Hl1 = (t5 - t8 - t32 * t4 + t32 * t9 + t18 - t2 * t35 + t27 * t2 - t20) * t30;
                var Hl2 = t1;
                var Hl3 = (-t9 * t7 + t42 + t43 * t4 - t16 * t4 + t46 - t48 + t27 * t9 - t51) * t30;
                var Hl4 = (-t42 + t41 * t9 - t55 * t2 + t46 - t48 + t55 * t11 + t51 - t21 * t9) * t30;
                var Hl5 = t14;
                var Hl6 = (-t10 + t41 + t43 - t35 + t24 - t21 - t26 + t27) * t30;
                var Hl7 = (-t7 + t10 + t16 - t43 + t27 - t28 - t21 + t25) * t30;

                // the following code computes R = Hl * inverse Hr
                t2 = Hr4-Hr7*Hr5;
                t4 = Hr0*Hr4;
                t5 = Hr0*Hr5;
                t7 = Hr3*Hr1;
                t8 = Hr2*Hr3;
                t10 = Hr1*Hr6;
                var t12 = Hr2*Hr6;
                t15 = 1.0 / (t4-t5*Hr7-t7+t8*Hr7+t10*Hr5-t12*Hr4);
                t18 = -Hr3+Hr5*Hr6;
                var t23 = -Hr3*Hr7+Hr4*Hr6;
                t28 = -Hr1+Hr2*Hr7;
                var t31 = Hr0-t12;
                t35 = Hr0*Hr7-t10;
                t41 = -Hr1*Hr5+Hr2*Hr4;
                var t44 = t5-t8;
                var t47 = t4-t7;
                t48 = t2*t15;
                var t49 = t28*t15;
                var t50 = t41*t15;
                var mat = model.data;
                mat[0] = Hl0*t48+Hl1*(t18*t15)-Hl2*(t23*t15);
                mat[1] = Hl0*t49+Hl1*(t31*t15)-Hl2*(t35*t15);
                mat[2] = -Hl0*t50-Hl1*(t44*t15)+Hl2*(t47*t15);
                mat[3] = Hl3*t48+Hl4*(t18*t15)-Hl5*(t23*t15);
                mat[4] = Hl3*t49+Hl4*(t31*t15)-Hl5*(t35*t15);
                mat[5] = -Hl3*t50-Hl4*(t44*t15)+Hl5*(t47*t15);
                mat[6] = Hl6*t48+Hl7*(t18*t15)-t23*t15;
                mat[7] = Hl6*t49+Hl7*(t31*t15)-t35*t15;
                mat[8] = -Hl6*t50-Hl7*(t44*t15)+t47*t15;
            },

            // The current implementation was derived from *BSD system qsort():
            // Copyright (c) 1992, 1993
            // The Regents of the University of California.  All rights reserved.
            qsort: function(array, low, high, cmp) {
                var isort_thresh = 7;
                var t,ta,tb,tc;
                var sp = 0,left=0,right=0,i=0,n=0,m=0,ptr=0,ptr2=0,d=0;
                var left0=0,left1=0,right0=0,right1=0,pivot=0,a=0,b=0,c=0,swap_cnt=0;

                var stack = qsort_stack;

                if( (high-low+1) <= 1 ) return;

                stack[0] = low;
                stack[1] = high;

                while( sp >= 0 ) {
                
                    left = stack[sp<<1];
                    right = stack[(sp<<1)+1];
                    sp--;

                    for(;;) {
                        n = (right - left) + 1;

                        if( n <= isort_thresh ) {
                        //insert_sort:
                            for( ptr = left + 1; ptr <= right; ptr++ ) {
                                for( ptr2 = ptr; ptr2 > left && cmp(array[ptr2],array[ptr2-1]); ptr2--) {
                                    t = array[ptr2];
                                    array[ptr2] = array[ptr2-1];
                                    array[ptr2-1] = t;
                                }
                            }
                            break;
                        } else {
                            swap_cnt = 0;

                            left0 = left;
                            right0 = right;
                            pivot = left + (n>>1);

                            if( n > 40 ) {
                                d = n >> 3;
                                a = left, b = left + d, c = left + (d<<1);
                                ta = array[a],tb = array[b],tc = array[c];
                                left = cmp(ta, tb) ? (cmp(tb, tc) ? b : (cmp(ta, tc) ? c : a))
                                                  : (cmp(tc, tb) ? b : (cmp(ta, tc) ? a : c));

                                a = pivot - d, b = pivot, c = pivot + d;
                                ta = array[a],tb = array[b],tc = array[c];
                                pivot = cmp(ta, tb) ? (cmp(tb, tc) ? b : (cmp(ta, tc) ? c : a))
                                                  : (cmp(tc, tb) ? b : (cmp(ta, tc) ? a : c));

                                a = right - (d<<1), b = right - d, c = right;
                                ta = array[a],tb = array[b],tc = array[c];
                                right = cmp(ta, tb) ? (cmp(tb, tc) ? b : (cmp(ta, tc) ? c : a))
                                                  : (cmp(tc, tb) ? b : (cmp(ta, tc) ? a : c));
                            }

                            a = left, b = pivot, c = right;
                            ta = array[a],tb = array[b],tc = array[c];
                            pivot = cmp(ta, tb) ? (cmp(tb, tc) ? b : (cmp(ta, tc) ? c : a))   
                                               : (cmp(tc, tb) ? b : (cmp(ta, tc) ? a : c));
                            if( pivot != left0 ) {
                                t = array[pivot];
                                array[pivot] = array[left0];
                                array[left0] = t;
                                pivot = left0;
                            }
                            left = left1 = left0 + 1;
                            right = right1 = right0;

                            ta = array[pivot];
                            for(;;) {
                                while( left <= right && !cmp(ta, array[left]) ) {
                                    if( !cmp(array[left], ta) ) {
                                        if( left > left1 ) {
                                            t = array[left1];
                                            array[left1] = array[left];
                                            array[left] = t;
                                        }
                                        swap_cnt = 1;
                                        left1++;
                                    }
                                    left++;
                                }

                                while( left <= right && !cmp(array[right], ta) ) {
                                    if( !cmp(ta, array[right]) ) {
                                        if( right < right1 ) {
                                            t = array[right1];
                                            array[right1] = array[right];
                                            array[right] = t;
                                        }
                                        swap_cnt = 1;
                                        right1--;
                                    }
                                    right--;
                                }

                                if( left > right ) break;
                                
                                t = array[left];
                                array[left] = array[right];
                                array[right] = t;
                                swap_cnt = 1;
                                left++;
                                right--;
                            }

                            if( swap_cnt == 0 ) {
                                left = left0, right = right0;
                                //goto insert_sort;
                                for( ptr = left + 1; ptr <= right; ptr++ ) {
                                    for( ptr2 = ptr; ptr2 > left && cmp(array[ptr2],array[ptr2-1]); ptr2--) {
                                        t = array[ptr2];
                                        array[ptr2] = array[ptr2-1];
                                        array[ptr2-1] = t;
                                    }
                                }
                                break;
                            }

                            n = Math.min( (left1 - left0), (left - left1) );
                            m = (left-n)|0;
                            for( i = 0; i < n; ++i,++m ) {
                                t = array[left0+i];
                                array[left0+i] = array[m];
                                array[m] = t;
                            }

                            n = Math.min( (right0 - right1), (right1 - right) );
                            m = (right0-n+1)|0;
                            for( i = 0; i < n; ++i,++m ) {
                                t = array[left+i];
                                array[left+i] = array[m];
                                array[m] = t;
                            }
                            n = (left - left1);
                            m = (right1 - right);
                            if( n > 1 ) {
                                if( m > 1 ) {
                                    if( n > m ) {
                                        ++sp;
                                        stack[sp<<1] = left0;
                                        stack[(sp<<1)+1] = left0 + n - 1;
                                        left = right0 - m + 1, right = right0;
                                    } else {
                                        ++sp;
                                        stack[sp<<1] = right0 - m + 1;
                                        stack[(sp<<1)+1] = right0;
                                        left = left0, right = left0 + n - 1;
                                    }
                                } else {
                                    left = left0, right = left0 + n - 1;
                                }
                            }
                            else if( m > 1 )
                                left = right0 - m + 1, right = right0;
                            else
                                break;
                        }
                    }
                }
            },

            median: function(array, low, high) {
                var w;
                var middle=0,ll=0,hh=0,median=(low+high)>>1;
                for (;;) {
                    if (high <= low) return array[median];
                    if (high == (low + 1)) {
                        if (array[low] > array[high]) {
                            w = array[low];
                            array[low] = array[high];
                            array[high] = w;
                        }
                        return array[median];
                    }
                    middle = ((low + high) >> 1);
                    if (array[middle] > array[high]) {
                        w = array[middle];
                        array[middle] = array[high];
                        array[high] = w;
                    }
                    if (array[low] > array[high]) {
                        w = array[low];
                        array[low] = array[high];
                        array[high] = w;
                    }
                    if (array[middle] > array[low]) {
                        w = array[middle];
                        array[middle] = array[low];
                        array[low] = w;
                    }
                    ll = (low + 1);
                    w = array[middle];
                    array[middle] = array[ll];
                    array[ll] = w;
                    hh = high;
                    for (;;) {
                        do ++ll; while (array[low] > array[ll]);
                        do --hh; while (array[hh] > array[low]);
                        if (hh < ll) break;
                        w = array[ll];
                        array[ll] = array[hh];
                        array[hh] = w;
                    }
                    w = array[low];
                    array[low] = array[hh];
                    array[hh] = w;
                    if (hh <= median)
                        low = ll;
                    else if (hh >= median)
                        high = (hh - 1);
                }
                return 0;
            }
        };

    })();

    global.math = math;

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 *
 */

(function(global) {
    "use strict";
    //

    var matmath = (function() {
        
        return {
            identity: function(M, value) {
                if (typeof value === "undefined") { value=1; }
                var src=M.data;
                var rows=M.rows, cols=M.cols, cols_1=(cols+1)|0;
                var len = rows * cols;
                var k = len;
                while(--len >= 0) src[len] = 0.0;
                len = k;
                k = 0;
                while(k < len)  {
                    src[k] = value;
                    k = k + cols_1;
                }
            },

            transpose: function(At, A) {
                var i=0,j=0,nrows=A.rows,ncols=A.cols;
                var Ai=0,Ati=0,pAt=0;
                var ad=A.data,atd=At.data;

                for (; i < nrows; Ati += 1, Ai += ncols, i++) {
                    pAt = Ati;
                    for (j = 0; j < ncols; pAt += nrows, j++) atd[pAt] = ad[Ai+j];
                }
            },

            // C = A * B
            multiply: function(C, A, B) {
                var i=0,j=0,k=0;
                var Ap=0,pA=0,pB=0,p_B=0,Cp=0;
                var ncols=A.cols,nrows=A.rows,mcols=B.cols;
                var ad=A.data,bd=B.data,cd=C.data;
                var sum=0.0;

                for (; i < nrows; Ap += ncols, i++) {
                    for (p_B = 0, j = 0; j < mcols; Cp++, p_B++, j++) {
                        pB = p_B;
                        pA = Ap;
                        sum = 0.0;
                        for (k = 0; k < ncols; pA++, pB += mcols, k++) {
                            sum += ad[pA] * bd[pB];
                        }
                        cd[Cp] = sum;
                    }
                }
            },

            // C = A * B'
            multiply_ABt: function(C, A, B) {
                var i=0,j=0,k=0;
                var Ap=0,pA=0,pB=0,Cp=0;
                var ncols=A.cols,nrows=A.rows,mrows=B.rows;
                var ad=A.data,bd=B.data,cd=C.data;
                var sum=0.0;

                for (; i < nrows; Ap += ncols, i++) {
                    for (pB = 0, j = 0; j < mrows; Cp++, j++) {
                        pA = Ap;
                        sum = 0.0;
                        for (k = 0; k < ncols; pA++, pB++, k++) {
                            sum += ad[pA] * bd[pB];
                        }
                        cd[Cp] = sum;
                    }
                }
            },

            // C = A' * B
            multiply_AtB: function(C, A, B) {
                var i=0,j=0,k=0;
                var Ap=0,pA=0,pB=0,p_B=0,Cp=0;
                var ncols=A.cols,nrows=A.rows,mcols=B.cols;
                var ad=A.data,bd=B.data,cd=C.data;
                var sum=0.0;

                for (; i < ncols; Ap++, i++) {
                    for (p_B = 0, j = 0; j < mcols; Cp++, p_B++, j++) {
                        pB = p_B;
                        pA = Ap;
                        sum = 0.0;
                        for (k = 0; k < nrows; pA += ncols, pB += mcols, k++) {
                            sum += ad[pA] * bd[pB];
                        }
                        cd[Cp] = sum;
                    }
                }
            },

            // C = A * A'
            multiply_AAt: function(C, A) {
                var i=0,j=0,k=0;
                var pCdiag=0,p_A=0,pA=0,pB=0,pC=0,pCt=0;
                var ncols=A.cols,nrows=A.rows;
                var ad=A.data,cd=C.data;
                var sum=0.0;

                for (; i < nrows; pCdiag += nrows + 1, p_A = pA, i++) {
                    pC = pCdiag;
                    pCt = pCdiag;
                    pB = p_A; 
                    for (j = i; j < nrows; pC++, pCt += nrows, j++) {
                        pA = p_A;
                        sum = 0.0;
                        for (k = 0; k < ncols; k++) {
                            sum += ad[pA++] * ad[pB++];
                        }
                        cd[pC] = sum
                        cd[pCt] = sum;
                    }
                }
            },

            // C = A' * A
            multiply_AtA: function(C, A) {
                var i=0,j=0,k=0;
                var p_A=0,pA=0,pB=0,p_C=0,pC=0,p_CC=0;
                var ncols=A.cols,nrows=A.rows;
                var ad=A.data,cd=C.data;
                var sum=0.0;

                for (; i < ncols; p_C += ncols, i++) {
                    p_A = i;
                    p_CC = p_C + i;
                    pC = p_CC;
                    for (j = i; j < ncols; pC++, p_CC += ncols, j++) {
                        pA = p_A;
                        pB = j;
                        sum = 0.0;
                        for (k = 0; k < nrows; pA += ncols, pB += ncols, k++) {
                            sum += ad[pA] * ad[pB];
                        }
                        cd[pC] = sum
                        cd[p_CC] = sum;
                    }
                }
            },

            // various small matrix operations
            identity_3x3: function(M, value) {
                if (typeof value === "undefined") { value=1; }
                var dt=M.data;
                dt[0] = dt[4] = dt[8] = value;
                dt[1] = dt[2] = dt[3] = 0;
                dt[5] = dt[6] = dt[7] = 0;
            },

            invert_3x3: function(from, to) {
                var A = from.data, invA = to.data;
                var t1 = A[4];
                var t2 = A[8];
                var t4 = A[5];
                var t5 = A[7];
                var t8 = A[0];

                var t9 = t8*t1;
                var t11 = t8*t4;
                var t13 = A[3];
                var t14 = A[1];
                var t15 = t13*t14;
                var t17 = A[2];
                var t18 = t13*t17;
                var t20 = A[6];
                var t21 = t20*t14;
                var t23 = t20*t17;
                var t26 = 1.0/(t9*t2-t11*t5-t15*t2+t18*t5+t21*t4-t23*t1);
                invA[0] = (t1*t2-t4*t5)*t26;
                invA[1] = -(t14*t2-t17*t5)*t26;
                invA[2] = -(-t14*t4+t17*t1)*t26;
                invA[3] = -(t13*t2-t4*t20)*t26;
                invA[4] = (t8*t2-t23)*t26;
                invA[5] = -(t11-t18)*t26;
                invA[6] = -(-t13*t5+t1*t20)*t26;
                invA[7] = -(t8*t5-t21)*t26;
                invA[8] = (t9-t15)*t26;
            },
            // C = A * B
            multiply_3x3: function(C, A, B) {
                var Cd=C.data, Ad=A.data, Bd=B.data;
                var m1_0 = Ad[0], m1_1 = Ad[1], m1_2 = Ad[2];
                var m1_3 = Ad[3], m1_4 = Ad[4], m1_5 = Ad[5];
                var m1_6 = Ad[6], m1_7 = Ad[7], m1_8 = Ad[8];

                var m2_0 = Bd[0], m2_1 = Bd[1], m2_2 = Bd[2];
                var m2_3 = Bd[3], m2_4 = Bd[4], m2_5 = Bd[5];
                var m2_6 = Bd[6], m2_7 = Bd[7], m2_8 = Bd[8];

                Cd[0] = m1_0 * m2_0 + m1_1 * m2_3 + m1_2 * m2_6;
                Cd[1] = m1_0 * m2_1 + m1_1 * m2_4 + m1_2 * m2_7;
                Cd[2] = m1_0 * m2_2 + m1_1 * m2_5 + m1_2 * m2_8;
                Cd[3] = m1_3 * m2_0 + m1_4 * m2_3 + m1_5 * m2_6;
                Cd[4] = m1_3 * m2_1 + m1_4 * m2_4 + m1_5 * m2_7;
                Cd[5] = m1_3 * m2_2 + m1_4 * m2_5 + m1_5 * m2_8;
                Cd[6] = m1_6 * m2_0 + m1_7 * m2_3 + m1_8 * m2_6;
                Cd[7] = m1_6 * m2_1 + m1_7 * m2_4 + m1_8 * m2_7;
                Cd[8] = m1_6 * m2_2 + m1_7 * m2_5 + m1_8 * m2_8;
            },

            mat3x3_determinant: function(M) {
                var md=M.data;
                return  md[0] * md[4] * md[8] -
                        md[0] * md[5] * md[7] -
                        md[3] * md[1] * md[8] +
                        md[3] * md[2] * md[7] +
                        md[6] * md[1] * md[5] -
                        md[6] * md[2] * md[4];
            },

            determinant_3x3: function(M11, M12, M13, 
                                      M21, M22, M23, 
                                      M31, M32, M33) {
                return  M11 * M22 * M33 - M11 * M23 * M32 -
                          M21 * M12 * M33 + M21 * M13 * M32 +
                          M31 * M12 * M23 - M31 * M13 * M22;
            }
        };

    })();

    global.matmath = matmath;

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 *
 */

(function(global) {
    "use strict";
    //

    var linalg = (function() {

        var swap = function(A, i0, i1, t) {
            t = A[i0];
            A[i0] = A[i1];
            A[i1] = t;
        }

        var hypot = function(a, b) {
            a = Math.abs(a);
            b = Math.abs(b);
            if( a > b ) {
                b /= a;
                return a*Math.sqrt(1.0 + b*b);
            }
            if( b > 0 ) {
                a /= b;
                return b*Math.sqrt(1.0 + a*a);
            }
            return 0.0;
        }

        var JacobiImpl = function(A, astep, W, V, vstep, n) {
            var eps = jsfeat.EPSILON;
            var i=0,j=0,k=0,m=0,l=0,idx=0,_in=0,_in2=0;
            var iters=0,max_iter=n*n*30;
            var mv=0.0,val=0.0,p=0.0,y=0.0,t=0.0,s=0.0,c=0.0,a0=0.0,b0=0.0;

            var indR_buff = jsfeat.cache.get_buffer(n<<2);
            var indC_buff = jsfeat.cache.get_buffer(n<<2);
            var indR = indR_buff.i32;
            var indC = indC_buff.i32;

            if(V) {
                for(; i < n; i++) {
                    k = i*vstep;
                    for(j = 0; j < n; j++) {
                        V[k + j] = 0.0;
                    }
                    V[k + i] = 1.0;
                }
            }

            for(k = 0; k < n; k++) {
                W[k] = A[(astep + 1)*k];
                if(k < n - 1) {
                    for(m = k+1, mv = Math.abs(A[astep*k + m]), i = k+2; i < n; i++) {
                        val = Math.abs(A[astep*k+i]);
                        if(mv < val)
                            mv = val, m = i;
                    }
                    indR[k] = m;
                }
                if(k > 0) {
                    for(m = 0, mv = Math.abs(A[k]), i = 1; i < k; i++) {
                        val = Math.abs(A[astep*i+k]);
                        if(mv < val)
                            mv = val, m = i;
                    }
                    indC[k] = m;
                }
            }

            if(n > 1) for( ; iters < max_iter; iters++) {
                // find index (k,l) of pivot p
                for(k = 0, mv = Math.abs(A[indR[0]]), i = 1; i < n-1; i++) {
                    val = Math.abs(A[astep*i + indR[i]]);
                    if( mv < val )
                        mv = val, k = i;
                }
                l = indR[k];
                for(i = 1; i < n; i++) {
                    val = Math.abs(A[astep*indC[i] + i]);
                    if( mv < val )
                        mv = val, k = indC[i], l = i;
                }
                
                p = A[astep*k + l];

                if(Math.abs(p) <= eps) break;

                y = (W[l] - W[k])*0.5;
                t = Math.abs(y) + hypot(p, y);
                s = hypot(p, t);
                c = t/s;
                s = p/s; t = (p/t)*p;
                if(y < 0)
                    s = -s, t = -t;
                A[astep*k + l] = 0;
                
                W[k] -= t;
                W[l] += t;
                
                // rotate rows and columns k and l
                for (i = 0; i < k; i++) {
                    _in = (astep * i + k);
                    _in2 = (astep * i + l);
                    a0 = A[_in];
                    b0 = A[_in2];
                    A[_in] = a0 * c - b0 * s;
                    A[_in2] = a0 * s + b0 * c;
                }
                for (i = (k + 1); i < l; i++) {
                    _in = (astep * k + i);
                    _in2 = (astep * i + l);
                    a0 = A[_in];
                    b0 = A[_in2];
                    A[_in] = a0 * c - b0 * s;
                    A[_in2] = a0 * s + b0 * c;
                }
                i = l + 1;
                _in = (astep * k + i);
                _in2 = (astep * l + i);
                for (; i < n; i++, _in++, _in2++) {
                    a0 = A[_in];
                    b0 = A[_in2];
                    A[_in] = a0 * c - b0 * s;
                    A[_in2] = a0 * s + b0 * c;
                }
                
                // rotate eigenvectors
                if (V) {
                    _in = vstep * k;
                    _in2 = vstep * l;
                    for (i = 0; i < n; i++, _in++, _in2++) {
                        a0 = V[_in];
                        b0 = V[_in2];
                        V[_in] = a0 * c - b0 * s;
                        V[_in2] = a0 * s + b0 * c;
                    }
                }
                
                for(j = 0; j < 2; j++) {
                    idx = j == 0 ? k : l;
                    if(idx < n - 1) {
                        for(m = idx+1, mv = Math.abs(A[astep*idx + m]), i = idx+2; i < n; i++) {
                            val = Math.abs(A[astep*idx+i]);
                            if( mv < val )
                                mv = val, m = i;
                        }
                        indR[idx] = m;
                    }
                    if(idx > 0) {
                        for(m = 0, mv = Math.abs(A[idx]), i = 1; i < idx; i++) {
                            val = Math.abs(A[astep*i+idx]);
                            if( mv < val )
                                mv = val, m = i;
                        }
                        indC[idx] = m;
                    }
                }
            }

            // sort eigenvalues & eigenvectors
            for(k = 0; k < n-1; k++) {
                m = k;
                for(i = k+1; i < n; i++) {
                    if(W[m] < W[i])
                        m = i;
                }
                if(k != m) {
                    swap(W, m, k, mv);
                    if(V) {
                        for(i = 0; i < n; i++) {
                            swap(V, vstep*m + i, vstep*k + i, mv);
                        }
                    }
                }
            }


            jsfeat.cache.put_buffer(indR_buff);
            jsfeat.cache.put_buffer(indC_buff);
        }

        var JacobiSVDImpl = function(At, astep, _W, Vt, vstep, m, n, n1) {
            var eps = jsfeat.EPSILON * 2.0;
            var minval = jsfeat.FLT_MIN;
            var i=0,j=0,k=0,iter=0,max_iter=Math.max(m, 30);
            var Ai=0,Aj=0,Vi=0,Vj=0,changed=0;
            var c=0.0, s=0.0, t=0.0;
            var t0=0.0,t1=0.0,sd=0.0,beta=0.0,gamma=0.0,delta=0.0,a=0.0,p=0.0,b=0.0;
            var seed = 0x1234;
            var val=0.0,val0=0.0,asum=0.0;

            var W_buff = jsfeat.cache.get_buffer(n<<3);
            var W = W_buff.f64;
            
            for(; i < n; i++) {
                for(k = 0, sd = 0; k < m; k++) {
                    t = At[i*astep + k];
                    sd += t*t;
                }
                W[i] = sd;
                
                if(Vt) {
                    for(k = 0; k < n; k++) {
                        Vt[i*vstep + k] = 0;
                    }
                    Vt[i*vstep + i] = 1;
                }
            }
            
            for(; iter < max_iter; iter++) {
                changed = 0;
                
                for(i = 0; i < n-1; i++) {
                    for(j = i+1; j < n; j++) {
                        Ai = (i*astep)|0, Aj = (j*astep)|0;
                        a = W[i], p = 0, b = W[j];
                        
                        k = 2;
                        p += At[Ai]*At[Aj];
                        p += At[Ai+1]*At[Aj+1];

                        for(; k < m; k++)
                            p += At[Ai+k]*At[Aj+k];
                        
                        if(Math.abs(p) <= eps*Math.sqrt(a*b)) continue;
                        
                        p *= 2.0;
                        beta = a - b, gamma = hypot(p, beta);
                        if( beta < 0 ) {
                            delta = (gamma - beta)*0.5;
                            s = Math.sqrt(delta/gamma);
                            c = (p/(gamma*s*2.0));
                        } else {
                            c = Math.sqrt((gamma + beta)/(gamma*2.0));
                            s = (p/(gamma*c*2.0));
                        }
                        
                        a=0.0, b=0.0;
                        
                        k = 2; // unroll
                        t0 = c*At[Ai] + s*At[Aj];
                        t1 = -s*At[Ai] + c*At[Aj];
                        At[Ai] = t0; At[Aj] = t1;
                        a += t0*t0; b += t1*t1;

                        t0 = c*At[Ai+1] + s*At[Aj+1];
                        t1 = -s*At[Ai+1] + c*At[Aj+1];
                        At[Ai+1] = t0; At[Aj+1] = t1;
                        a += t0*t0; b += t1*t1;

                        for( ; k < m; k++ )
                        {
                            t0 = c*At[Ai+k] + s*At[Aj+k];
                            t1 = -s*At[Ai+k] + c*At[Aj+k];
                            At[Ai+k] = t0; At[Aj+k] = t1;
                            
                            a += t0*t0; b += t1*t1;
                        }
                        
                        W[i] = a; W[j] = b;
                        
                        changed = 1;
                        
                        if(Vt) {
                            Vi = (i*vstep)|0, Vj = (j*vstep)|0;

                            k = 2;
                            t0 = c*Vt[Vi] + s*Vt[Vj];
                            t1 = -s*Vt[Vi] + c*Vt[Vj];
                            Vt[Vi] = t0; Vt[Vj] = t1;

                            t0 = c*Vt[Vi+1] + s*Vt[Vj+1];
                            t1 = -s*Vt[Vi+1] + c*Vt[Vj+1];
                            Vt[Vi+1] = t0; Vt[Vj+1] = t1;

                            for(; k < n; k++) {
                                t0 = c*Vt[Vi+k] + s*Vt[Vj+k];
                                t1 = -s*Vt[Vi+k] + c*Vt[Vj+k];
                                Vt[Vi+k] = t0; Vt[Vj+k] = t1;
                            }
                        }
                    }
                }
                if(changed == 0) break;
            }
            
            for(i = 0; i < n; i++) {
                for(k = 0, sd = 0; k < m; k++) {
                    t = At[i*astep + k];
                    sd += t*t;
                }
                W[i] = Math.sqrt(sd);
            }
            
            for(i = 0; i < n-1; i++) {
                j = i;
                for(k = i+1; k < n; k++) {
                    if(W[j] < W[k])
                        j = k;
                }
                if(i != j) {
                    swap(W, i, j, sd);
                    if(Vt) {
                        for(k = 0; k < m; k++) {
                            swap(At, i*astep + k, j*astep + k, t);
                        }
                        
                        for(k = 0; k < n; k++) {
                            swap(Vt, i*vstep + k, j*vstep + k, t);
                        }
                    }
                }
            }
            
            for(i = 0; i < n; i++) {
                _W[i] = W[i];
            }
            
            if(!Vt) {
                jsfeat.cache.put_buffer(W_buff);
                return;
            }

            for(i = 0; i < n1; i++) {

                sd = i < n ? W[i] : 0;
                
                while(sd <= minval) {
                    // if we got a zero singular value, then in order to get the corresponding left singular vector
                    // we generate a random vector, project it to the previously computed left singular vectors,
                    // subtract the projection and normalize the difference.
                    val0 = (1.0/m);
                    for(k = 0; k < m; k++) {
                        seed = (seed * 214013 + 2531011);
                        val = (((seed >> 16) & 0x7fff) & 256) != 0 ? val0 : -val0;
                        At[i*astep + k] = val;
                    }
                    for(iter = 0; iter < 2; iter++) {
                        for(j = 0; j < i; j++) {
                            sd = 0;
                            for(k = 0; k < m; k++) {
                                sd += At[i*astep + k]*At[j*astep + k];
                            }
                            asum = 0.0;
                            for(k = 0; k < m; k++) {
                                t = (At[i*astep + k] - sd*At[j*astep + k]);
                                At[i*astep + k] = t;
                                asum += Math.abs(t);
                            }
                            asum = asum ? 1.0/asum : 0;
                            for(k = 0; k < m; k++) {
                                At[i*astep + k] *= asum;
                            }
                        }
                    }
                    sd = 0;
                    for(k = 0; k < m; k++) {
                        t = At[i*astep + k];
                        sd += t*t;
                    }
                    sd = Math.sqrt(sd);
                }
                
                s = (1.0/sd);
                for(k = 0; k < m; k++) {
                    At[i*astep + k] *= s;
                }
            }

            jsfeat.cache.put_buffer(W_buff);
        }
        
        return {

            lu_solve: function(A, B) {
                var i=0,j=0,k=0,p=1,astep=A.cols;
                var ad=A.data, bd=B.data;
                var t,alpha,d,s;

                for(i = 0; i < astep; i++) {
                    k = i;                    
                    for(j = i+1; j < astep; j++) {
                        if(Math.abs(ad[j*astep + i]) > Math.abs(ad[k*astep+i])) {
                            k = j;
                        }
                    }
                    
                    if(Math.abs(ad[k*astep+i]) < jsfeat.EPSILON) {
                        return 0; // FAILED
                    }
                    
                    if(k != i) {
                        for(j = i; j < astep; j++ ) {
                            swap(ad, i*astep+j, k*astep+j, t);
                        }
                        
                        swap(bd, i, k, t);
                        p = -p;
                    }
                    
                    d = -1.0/ad[i*astep+i];
                    
                    for(j = i+1; j < astep; j++) {
                        alpha = ad[j*astep+i]*d;
                        
                        for(k = i+1; k < astep; k++) {
                            ad[j*astep+k] += alpha*ad[i*astep+k];
                        }
                        
                        bd[j] += alpha*bd[i];
                    }
                    
                    ad[i*astep+i] = -d;
                }
                
                for(i = astep-1; i >= 0; i--) {
                    s = bd[i];
                    for(k = i+1; k < astep; k++) {
                        s -= ad[i*astep+k]*bd[k];
                    }
                    bd[i] = s*ad[i*astep+i];
                }

                return 1; // OK
            },

            cholesky_solve: function(A, B) {
                var col=0,row=0,col2=0,cs=0,rs=0,i=0,j=0;
                var size = A.cols;
                var ad=A.data, bd=B.data;
                var val,inv_diag;

                for (col = 0; col < size; col++) {
                    inv_diag = 1.0;
                    cs = (col * size);
                    rs = cs;
                    for (row = col; row < size; row++)
                    {
                        // correct for the parts of cholesky already computed
                        val = ad[(rs+col)];
                        for (col2 = 0; col2 < col; col2++) {
                            val -= ad[(col2*size+col)] * ad[(rs+col2)];
                        }
                        if (row == col) {
                            // this is the diagonal element so don't divide
                            ad[(rs+col)] = val;
                            if(val == 0) {
                                return 0;
                            }
                            inv_diag = 1.0 / val;
                        } else {
                            // cache the value without division in the upper half
                            ad[(cs+row)] = val;
                            // divide my the diagonal element for all others
                            ad[(rs+col)] = val * inv_diag;
                        }
                        rs = (rs + size);
                    }
                }

                // first backsub through L
                cs = 0;
                for (i = 0; i < size; i++) {
                    val = bd[i];
                    for (j = 0; j < i; j++) {
                        val -= ad[(cs+j)] * bd[j];
                    }
                    bd[i] = val;
                    cs = (cs + size);
                }
                // backsub through diagonal
                cs = 0;
                for (i = 0; i < size; i++) {
                    bd[i] /= ad[(cs + i)];
                    cs = (cs + size);
                }
                // backsub through L Transpose
                i = (size-1);
                for (; i >= 0; i--) {
                    val = bd[i];
                    j = (i + 1);
                    cs = (j * size);
                    for (; j < size; j++) {
                        val -= ad[(cs + i)] * bd[j];
                        cs = (cs + size);
                    }
                    bd[i] = val;
                }

                return 1;
            },

            svd_decompose: function(A, W, U, V, options) {
                if (typeof options === "undefined") { options = 0; };
                var at=0,i=0,j=0,_m=A.rows,_n=A.cols,m=_m,n=_n;
                var dt = A.type | jsfeat.C1_t; // we only work with single channel

                if(m < n) {
                    at = 1;
                    i = m;
                    m = n;
                    n = i;
                }

                var a_buff = jsfeat.cache.get_buffer((m*m)<<3);
                var w_buff = jsfeat.cache.get_buffer(n<<3);
                var v_buff = jsfeat.cache.get_buffer((n*n)<<3);

                var a_mt = new jsfeat.matrix_t(m, m, dt, a_buff.data);
                var w_mt = new jsfeat.matrix_t(1, n, dt, w_buff.data);
                var v_mt = new jsfeat.matrix_t(n, n, dt, v_buff.data);

                if(at == 0) {
                    // transpose
                    jsfeat.matmath.transpose(a_mt, A);
                } else {
                    for(i = 0; i < _n*_m; i++) {
                        a_mt.data[i] = A.data[i];
                    }
                    for(; i < n*m; i++) {
                        a_mt.data[i] = 0;
                    }
                }

                JacobiSVDImpl(a_mt.data, m, w_mt.data, v_mt.data, n, m, n, m);

                if(W) {
                    for(i=0; i < n; i++) {
                        W.data[i] = w_mt.data[i];
                    }
                    for(; i < _n; i++) {
                        W.data[i] = 0;
                    }
                }

                if (at == 0) {
                    if(U && (options & jsfeat.SVD_U_T)) {
                        i = m*m;
                        while(--i >= 0) {
                            U.data[i] = a_mt.data[i];
                        }
                    } else if(U) {
                        jsfeat.matmath.transpose(U, a_mt);
                    }

                    if(V && (options & jsfeat.SVD_V_T)) {
                        i = n*n;
                        while(--i >= 0) {
                            V.data[i] = v_mt.data[i];
                        }
                    } else if(V) {
                        jsfeat.matmath.transpose(V, v_mt);
                    }
                } else {
                    if(U && (options & jsfeat.SVD_U_T)) {
                        i = n*n;
                        while(--i >= 0) {
                            U.data[i] = v_mt.data[i];
                        }
                    } else if(U) {
                        jsfeat.matmath.transpose(U, v_mt);
                    }

                    if(V && (options & jsfeat.SVD_V_T)) {
                        i = m*m;
                        while(--i >= 0) {
                            V.data[i] = a_mt.data[i];
                        }
                    } else if(V) {
                        jsfeat.matmath.transpose(V, a_mt);
                    }
                }

                jsfeat.cache.put_buffer(a_buff);
                jsfeat.cache.put_buffer(w_buff);
                jsfeat.cache.put_buffer(v_buff);

            },

            svd_solve: function(A, X, B) {
                var i=0,j=0,k=0;
                var pu=0,pv=0;
                var nrows=A.rows,ncols=A.cols;
                var sum=0.0,xsum=0.0,tol=0.0;
                var dt = A.type | jsfeat.C1_t;

                var u_buff = jsfeat.cache.get_buffer((nrows*nrows)<<3);
                var w_buff = jsfeat.cache.get_buffer(ncols<<3);
                var v_buff = jsfeat.cache.get_buffer((ncols*ncols)<<3);

                var u_mt = new jsfeat.matrix_t(nrows, nrows, dt, u_buff.data);
                var w_mt = new jsfeat.matrix_t(1, ncols, dt, w_buff.data);
                var v_mt = new jsfeat.matrix_t(ncols, ncols, dt, v_buff.data);

                var bd = B.data, ud = u_mt.data, wd = w_mt.data, vd = v_mt.data;

                this.svd_decompose(A, w_mt, u_mt, v_mt, 0);

                tol = jsfeat.EPSILON * wd[0] * ncols;

                for (; i < ncols; i++, pv += ncols) {
                    xsum = 0.0;
                    for(j = 0; j < ncols; j++) {
                        if(wd[j] > tol) {
                            for(k = 0, sum = 0.0, pu = 0; k < nrows; k++, pu += ncols) {
                                sum += ud[pu + j] * bd[k];
                            }
                            xsum += sum * vd[pv + j] / wd[j];
                        }
                    }
                    X.data[i] = xsum;
                }

                jsfeat.cache.put_buffer(u_buff);
                jsfeat.cache.put_buffer(w_buff);
                jsfeat.cache.put_buffer(v_buff);
            },

            svd_invert: function(Ai, A) {
                var i=0,j=0,k=0;
                var pu=0,pv=0,pa=0;
                var nrows=A.rows,ncols=A.cols;
                var sum=0.0,tol=0.0;
                var dt = A.type | jsfeat.C1_t;

                var u_buff = jsfeat.cache.get_buffer((nrows*nrows)<<3);
                var w_buff = jsfeat.cache.get_buffer(ncols<<3);
                var v_buff = jsfeat.cache.get_buffer((ncols*ncols)<<3);

                var u_mt = new jsfeat.matrix_t(nrows, nrows, dt, u_buff.data);
                var w_mt = new jsfeat.matrix_t(1, ncols, dt, w_buff.data);
                var v_mt = new jsfeat.matrix_t(ncols, ncols, dt, v_buff.data);

                var id = Ai.data, ud = u_mt.data, wd = w_mt.data, vd = v_mt.data;

                this.svd_decompose(A, w_mt, u_mt, v_mt, 0);

                tol = jsfeat.EPSILON * wd[0] * ncols;

                for (; i < ncols; i++, pv += ncols) {
                    for (j = 0, pu = 0; j < nrows; j++, pa++) {
                        for (k = 0, sum = 0.0; k < ncols; k++, pu++) {
                            if (wd[k] > tol) sum += vd[pv + k] * ud[pu] / wd[k];
                        }
                        id[pa] = sum;
                    }
                }

                jsfeat.cache.put_buffer(u_buff);
                jsfeat.cache.put_buffer(w_buff);
                jsfeat.cache.put_buffer(v_buff);
            },

            eigenVV: function(A, vects, vals) {
                var n=A.cols,i=n*n;
                var dt = A.type | jsfeat.C1_t;

                var a_buff = jsfeat.cache.get_buffer((n*n)<<3);
                var w_buff = jsfeat.cache.get_buffer(n<<3);
                var a_mt = new jsfeat.matrix_t(n, n, dt, a_buff.data);
                var w_mt = new jsfeat.matrix_t(1, n, dt, w_buff.data);

                while(--i >= 0) {
                    a_mt.data[i] = A.data[i];
                }

                JacobiImpl(a_mt.data, n, w_mt.data, vects ? vects.data : null, n, n);

                if(vals) {
                    while(--n >= 0) {
                        vals.data[n] = w_mt.data[n];
                    }
                }

                jsfeat.cache.put_buffer(a_buff);
                jsfeat.cache.put_buffer(w_buff);
            }

        };

    })();

    global.linalg = linalg;

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 *
 */

(function(global) {
    "use strict";
    //

    var motion_model = (function() {

    	var sqr = function(x) {
    		return x*x;
    	}

    	// does isotropic normalization
    	var iso_normalize_points = function(from, to, T0, T1, count) {
			var i=0;
		    var cx0=0.0, cy0=0.0, d0=0.0, s0=0.0;
		    var cx1=0.0, cy1=0.0, d1=0.0, s1=0.0;
		    var dx=0.0,dy=0.0;

		    for (; i < count; ++i) {
		        cx0 += from[i].x;
		        cy0 += from[i].y;
		        cx1 += to[i].x;
		        cy1 += to[i].y;
		    }

		    cx0 /= count; cy0 /= count;
		    cx1 /= count; cy1 /= count;

		    for (i = 0; i < count; ++i) {
		        dx = from[i].x - cx0;
		        dy = from[i].y - cy0;
		        d0 += Math.sqrt(dx*dx + dy*dy);
		        dx = to[i].x - cx1;
		        dy = to[i].y - cy1;
		        d1 += Math.sqrt(dx*dx + dy*dy);
		    }

		    d0 /= count; d1 /= count;

		    s0 = Math.SQRT2 / d0; s1 = Math.SQRT2 / d1;

		    T0[0] = T0[4] = s0;
		    T0[2] = -cx0*s0;
		    T0[5] = -cy0*s0;
		    T0[1] = T0[3] = T0[6] = T0[7] = 0.0;
		    T0[8] = 1.0;

		    T1[0] = T1[4] = s1;
		    T1[2] = -cx1*s1;
		    T1[5] = -cy1*s1;
		    T1[1] = T1[3] = T1[6] = T1[7] = 0.0;
		    T1[8] = 1.0;
		}

		var have_collinear_points = function(points, count) {
		    var j=0,k=0,i=(count-1)|0;
		    var dx1=0.0,dy1=0.0,dx2=0.0,dy2=0.0;

		    // check that the i-th selected point does not belong
		    // to a line connecting some previously selected points
		    for(; j < i; ++j) {
		        dx1 = points[j].x - points[i].x;
		        dy1 = points[j].y - points[i].y;
		        for(k = 0; k < j; ++k) {
		            dx2 = points[k].x - points[i].x;
		            dy2 = points[k].y - points[i].y;
		            if( Math.abs(dx2*dy1 - dy2*dx1) <= jsfeat.EPSILON*(Math.abs(dx1) + Math.abs(dy1) + Math.abs(dx2) + Math.abs(dy2)))
		                return true;
		        }
		    }
		    return false;
		}

		var T0 = new jsfeat.matrix_t(3, 3, jsfeat.F32_t|jsfeat.C1_t);
    	var T1 = new jsfeat.matrix_t(3, 3, jsfeat.F32_t|jsfeat.C1_t);
    	var AtA = new jsfeat.matrix_t(6, 6, jsfeat.F32_t|jsfeat.C1_t);
    	var AtB = new jsfeat.matrix_t(6, 1, jsfeat.F32_t|jsfeat.C1_t);
    	
    	var affine2d = (function () {

	        function affine2d() {
	        	// empty constructor
	        }

	        affine2d.prototype.run = function(from, to, model, count) {
	        	var i=0,j=0;
	        	var dt=model.type|jsfeat.C1_t;
	        	var md=model.data, t0d=T0.data, t1d=T1.data;
	        	var pt0,pt1,px=0.0,py=0.0;

	            iso_normalize_points(from, to, t0d, t1d, count);

	            var a_buff = jsfeat.cache.get_buffer((2*count*6)<<3);
                var b_buff = jsfeat.cache.get_buffer((2*count)<<3);

                var a_mt = new jsfeat.matrix_t(6, 2*count, dt, a_buff.data);
                var b_mt = new jsfeat.matrix_t(1, 2*count, dt, b_buff.data);
                var ad=a_mt.data, bd=b_mt.data;

			    for (; i < count; ++i) {
			    	pt0 = from[i];
			        pt1 = to[i];

			        px = t0d[0]*pt0.x + t0d[1]*pt0.y + t0d[2];
			        py = t0d[3]*pt0.x + t0d[4]*pt0.y + t0d[5];

			        j = i*2*6;
			        ad[j]=px, ad[j+1]=py, ad[j+2]=1.0, ad[j+3]=0.0, ad[j+4]=0.0, ad[j+5]=0.0;

			        j += 6;
			        ad[j]=0.0, ad[j+1]=0.0, ad[j+2]=0.0, ad[j+3]=px, ad[j+4]=py, ad[j+5]=1.0;

			        bd[i<<1] = t1d[0]*pt1.x + t1d[1]*pt1.y + t1d[2];
			        bd[(i<<1)+1] = t1d[3]*pt1.x + t1d[4]*pt1.y + t1d[5];
			    }

			    jsfeat.matmath.multiply_AtA(AtA, a_mt);
			    jsfeat.matmath.multiply_AtB(AtB, a_mt, b_mt);

			    jsfeat.linalg.lu_solve(AtA, AtB);

			    md[0] = AtB.data[0], md[1]=AtB.data[1], md[2]=AtB.data[2];
			    md[3] = AtB.data[3], md[4]=AtB.data[4], md[5]=AtB.data[5];
			    md[6] = 0.0, md[7] = 0.0, md[8] = 1.0; // fill last row

			    // denormalize
			    jsfeat.matmath.invert_3x3(T1, T1);
			    jsfeat.matmath.multiply_3x3(model, T1, model);
			    jsfeat.matmath.multiply_3x3(model, model, T0);

			    // free buffer
			    jsfeat.cache.put_buffer(a_buff);
			    jsfeat.cache.put_buffer(b_buff);

			    return 1;
	        }

	        affine2d.prototype.error = function(from, to, model, err, count) {
	        	var i=0;
	        	var pt0,pt1;
	        	var m=model.data;

			    for (; i < count; ++i) {
			        pt0 = from[i];
			        pt1 = to[i];

			        err[i] = sqr(pt1.x - m[0]*pt0.x - m[1]*pt0.y - m[2]) +
			                 sqr(pt1.y - m[3]*pt0.x - m[4]*pt0.y - m[5]);
			    }
	        }

	        affine2d.prototype.check_subset = function(from, to, count) {
	            return true; // all good
	        }

	        return affine2d;
	    })();

	    var mLtL = new jsfeat.matrix_t(9, 9, jsfeat.F32_t|jsfeat.C1_t);
	    var Evec = new jsfeat.matrix_t(9, 9, jsfeat.F32_t|jsfeat.C1_t);

	    var homography2d = (function () {

	        function homography2d() {
	        	// empty constructor
	        	//this.T0 = new jsfeat.matrix_t(3, 3, jsfeat.F32_t|jsfeat.C1_t);
	        	//this.T1 = new jsfeat.matrix_t(3, 3, jsfeat.F32_t|jsfeat.C1_t);
	        	//this.mLtL = new jsfeat.matrix_t(9, 9, jsfeat.F32_t|jsfeat.C1_t);
	        	//this.Evec = new jsfeat.matrix_t(9, 9, jsfeat.F32_t|jsfeat.C1_t);
	        }

	        homography2d.prototype.run = function(from, to, model, count) {
	        	var i=0,j=0;
	        	var md=model.data, t0d=T0.data, t1d=T1.data;
	        	var LtL=mLtL.data, evd=Evec.data;
	        	var x=0.0,y=0.0,X=0.0,Y=0.0;

			    // norm
				var smx=0.0, smy=0.0, cmx=0.0, cmy=0.0, sMx=0.0, sMy=0.0, cMx=0.0, cMy=0.0;

				for(; i < count; ++i) {
				    cmx += to[i].x;
				    cmy += to[i].y;
				    cMx += from[i].x;
				    cMy += from[i].y;
				}

			    cmx /= count; cmy /= count;
			    cMx /= count; cMy /= count;

			    for(i = 0; i < count; ++i)
			    {
				    smx += Math.abs(to[i].x - cmx);
				    smy += Math.abs(to[i].y - cmy);
				    sMx += Math.abs(from[i].x - cMx);
				    sMy += Math.abs(from[i].y - cMy);
				}

			    if( Math.abs(smx) < jsfeat.EPSILON 
			    	|| Math.abs(smy) < jsfeat.EPSILON 
			    	|| Math.abs(sMx) < jsfeat.EPSILON 
			    	|| Math.abs(sMy) < jsfeat.EPSILON ) return 0;

			    smx = count/smx; smy = count/smy;
			    sMx = count/sMx; sMy = count/sMy;

			    t0d[0] = sMx; 	t0d[1] = 0; 	t0d[2] = -cMx*sMx; 
			    t0d[3] = 0; 	t0d[4] = sMy; 	t0d[5] = -cMy*sMy; 
			    t0d[6] = 0; 	t0d[7] = 0; 	t0d[8] = 1;

				t1d[0] = 1.0/smx; 	t1d[1] = 0; 		t1d[2] = cmx;
				t1d[3] = 0; 		t1d[4] = 1.0/smy; 	t1d[5] = cmy;
				t1d[6] = 0; 		t1d[7] = 0; 		t1d[8] = 1;
				//

				// construct system
				i = 81;
				while(--i >= 0) {
					LtL[i] = 0.0;
				}
				for(i = 0; i < count; ++i) {
					x = (to[i].x - cmx) * smx;
					y = (to[i].y - cmy) * smy;
					X = (from[i].x - cMx) * sMx;
					Y = (from[i].y - cMy) * sMy;

					LtL[0] += X*X;
					LtL[1] += X*Y;
					LtL[2] += X;

					LtL[6] += X*-x*X;
					LtL[7] += X*-x*Y;
					LtL[8] += X*-x;
					LtL[10] += Y*Y;
					LtL[11] += Y;

					LtL[15] += Y*-x*X;
					LtL[16] += Y*-x*Y;
					LtL[17] += Y*-x;
					LtL[20] += 1.0;

					LtL[24] += -x*X;
					LtL[25] += -x*Y;
					LtL[26] += -x;
					LtL[30] += X*X;
					LtL[31] += X*Y;
					LtL[32] += X;
					LtL[33] += X*-y*X;
					LtL[34] += X*-y*Y;
					LtL[35] += X*-y;
					LtL[40] += Y*Y;
					LtL[41] += Y;
					LtL[42] += Y*-y*X;
					LtL[43] += Y*-y*Y;
					LtL[44] += Y*-y;
					LtL[50] += 1.0;
					LtL[51] += -y*X;
					LtL[52] += -y*Y;
					LtL[53] += -y;
					LtL[60] += -x*X*-x*X + -y*X*-y*X;
					LtL[61] += -x*X*-x*Y + -y*X*-y*Y;
					LtL[62] += -x*X*-x + -y*X*-y;
					LtL[70] += -x*Y*-x*Y + -y*Y*-y*Y;
					LtL[71] += -x*Y*-x + -y*Y*-y;
					LtL[80] += -x*-x + -y*-y;
				}
				//

				// symmetry
			    for(i = 0; i < 9; ++i) {
			        for(j = 0; j < i; ++j)
			            LtL[i*9+j] = LtL[j*9+i];
			    }

				jsfeat.linalg.eigenVV(mLtL, Evec);

				md[0]=evd[72], md[1]=evd[73], md[2]=evd[74];
			    md[3]=evd[75], md[4]=evd[76], md[5]=evd[77];
			    md[6]=evd[78], md[7]=evd[79], md[8]=evd[80];

				// denormalize
			    jsfeat.matmath.multiply_3x3(model, T1, model);
			    jsfeat.matmath.multiply_3x3(model, model, T0);

			    // set bottom right to 1.0
			    x = 1.0/md[8];
			    md[0] *= x; md[1] *= x; md[2] *= x;
			    md[3] *= x; md[4] *= x; md[5] *= x;
			    md[6] *= x; md[7] *= x; md[8] = 1.0;

			    return 1;
	        }

	        homography2d.prototype.error = function(from, to, model, err, count) {
	        	var i=0;
	        	var pt0,pt1,ww=0.0,dx=0.0,dy=0.0;
	        	var m=model.data;

			    for (; i < count; ++i) {
			        pt0 = from[i];
			        pt1 = to[i];

			        ww = 1.0/(m[6]*pt0.x + m[7]*pt0.y + 1.0);
			        dx = (m[0]*pt0.x + m[1]*pt0.y + m[2])*ww - pt1.x;
			        dy = (m[3]*pt0.x + m[4]*pt0.y + m[5])*ww - pt1.y;
			        err[i] = (dx*dx + dy*dy);
			    }
	        }

	        homography2d.prototype.check_subset = function(from, to, count) {
	        	if( have_collinear_points(from, count) || have_collinear_points(to, count) ) {
        			return false;
        		}
        		if( count == 4 ) {
			        var negative = 0;

			        var fp0=from[0],fp1=from[1],fp2=from[2],fp3=from[3];
			        var tp0=to[0],tp1=to[1],tp2=to[2],tp3=to[3];

			        // set1
			        var A11=fp0.x, A12=fp0.y, A13=1.0;
			        var A21=fp1.x, A22=fp1.y, A23=1.0;
			        var A31=fp2.x, A32=fp2.y, A33=1.0;

			        var B11=tp0.x, B12=tp0.y, B13=1.0;
			        var B21=tp1.x, B22=tp1.y, B23=1.0;
			        var B31=tp2.x, B32=tp2.y, B33=1.0;

			        var detA = jsfeat.matmath.determinant_3x3(A11,A12,A13, A21,A22,A23, A31,A32,A33);
					var detB = jsfeat.matmath.determinant_3x3(B11,B12,B13, B21,B22,B23, B31,B32,B33);

					if(detA*detB < 0) negative++;

					// set2
					A11=fp1.x, A12=fp1.y;
			        A21=fp2.x, A22=fp2.y;
			        A31=fp3.x, A32=fp3.y;

			        B11=tp1.x, B12=tp1.y;
			        B21=tp2.x, B22=tp2.y;
			        B31=tp3.x, B32=tp3.y;

			        detA = jsfeat.matmath.determinant_3x3(A11,A12,A13, A21,A22,A23, A31,A32,A33);
					detB = jsfeat.matmath.determinant_3x3(B11,B12,B13, B21,B22,B23, B31,B32,B33);

					if(detA*detB < 0) negative++;

					// set3
					A11=fp0.x, A12=fp0.y;
			        A21=fp2.x, A22=fp2.y;
			        A31=fp3.x, A32=fp3.y;

			        B11=tp0.x, B12=tp0.y;
			        B21=tp2.x, B22=tp2.y;
			        B31=tp3.x, B32=tp3.y;

			        detA = jsfeat.matmath.determinant_3x3(A11,A12,A13, A21,A22,A23, A31,A32,A33);
					detB = jsfeat.matmath.determinant_3x3(B11,B12,B13, B21,B22,B23, B31,B32,B33);

					if(detA*detB < 0) negative++;

					// set4
					A11=fp0.x, A12=fp0.y;
			        A21=fp1.x, A22=fp1.y;
			        A31=fp3.x, A32=fp3.y;

			        B11=tp0.x, B12=tp0.y;
			        B21=tp1.x, B22=tp1.y;
			        B31=tp3.x, B32=tp3.y;

			        detA = jsfeat.matmath.determinant_3x3(A11,A12,A13, A21,A22,A23, A31,A32,A33);
					detB = jsfeat.matmath.determinant_3x3(B11,B12,B13, B21,B22,B23, B31,B32,B33);

					if(detA*detB < 0) negative++;

			        if(negative != 0 && negative != 4) {
			        	return false;
			        }
			    }
	            return true; // all good
	        }

	        return homography2d;
	    })();

	    return {

    		affine2d:affine2d,
    		homography2d:homography2d

    	};

    })();

    var ransac_params_t = (function () {
        function ransac_params_t(size, thresh, eps, prob) {
            if (typeof size === "undefined") { size=0; }
            if (typeof thresh === "undefined") { thresh=0.5; }
            if (typeof eps === "undefined") { eps=0.5; }
            if (typeof prob === "undefined") { prob=0.99; }

            this.size = size;
            this.thresh = thresh;
            this.eps = eps;
            this.prob = prob;
        };
        ransac_params_t.prototype.update_iters = function(_eps, max_iters) {
	        var num = Math.log(1 - this.prob);
	        var denom = Math.log(1 - Math.pow(1 - _eps, this.size));
	        return (denom >= 0 || -num >= max_iters*(-denom) ? max_iters : Math.round(num/denom))|0;
        };
        return ransac_params_t;
    })();

    var motion_estimator = (function() {

    	var get_subset = function(kernel, from, to, need_cnt, max_cnt, from_sub, to_sub) {
    		var max_try = 1000;
    		var indices = [];
		    var i=0, j=0, ssiter=0, idx_i=0, ok=false;
		    for(; ssiter < max_try; ++ssiter)  {
		        i = 0;
		        for (; i < need_cnt && ssiter < max_try;) {
		            ok = false;
		            idx_i = 0;
		            while (!ok) {
		                ok = true;
		                idx_i = indices[i] = Math.floor(Math.random() * max_cnt)|0;
		                for (j = 0; j < i; ++j) {
		                    if (idx_i == indices[j])
		                    { ok = false; break; }
		                }
		            }
		            from_sub[i] = from[idx_i];
		            to_sub[i] = to[idx_i];
		            if( !kernel.check_subset( from_sub, to_sub, i+1 ) ) {
		                ssiter++;
		                continue;
		            }
		            ++i;
		        }
		        break;
		    }

		    return (i == need_cnt && ssiter < max_try);
    	}

    	var find_inliers = function(kernel, model, from, to, count, thresh, err, mask) {
    		var numinliers = 0, i=0, f=0;
    		var t = thresh*thresh;

    		kernel.error(from, to, model, err, count);

		    for(; i < count; ++i) {
		        f = err[i] <= t;
		        mask[i] = f;
		        numinliers += f;
		    }
		    return numinliers;
    	}

    	return {

    		ransac: function(params, kernel, from, to, count, model, mask, max_iters) {
    			if (typeof max_iters === "undefined") { max_iters=1000; }

    			if(count < params.size) return false;

    			var model_points = params.size;
			    var niters = max_iters, iter=0;
			    var result = false;

			    var subset0 = [];
			    var subset1 = [];
			    var found = false;

			    var mc=model.cols,mr=model.rows;
                var dt = model.type | jsfeat.C1_t;

			    var m_buff = jsfeat.cache.get_buffer((mc*mr)<<3);
			    var ms_buff = jsfeat.cache.get_buffer(count);
			    var err_buff = jsfeat.cache.get_buffer(count<<2);
			    var M = new jsfeat.matrix_t(mc, mr, dt, m_buff.data);
			    var curr_mask = new jsfeat.matrix_t(count, 1, jsfeat.U8C1_t, ms_buff.data);

			    var inliers_max = -1, numinliers=0;
			    var nmodels = 0;

			    var err = err_buff.f32;

			    // special case
			    if(count == model_points) {
			        if(kernel.run(from, to, M, count) <= 0) {
			        	jsfeat.cache.put_buffer(m_buff);
			        	jsfeat.cache.put_buffer(ms_buff);
			        	jsfeat.cache.put_buffer(err_buff);
			        	return false;
			        }

			        M.copy_to(model);
			        if(mask) {
			        	while(--count >= 0) {
			        		mask.data[count] = 1;
			        	}
			        }
			        jsfeat.cache.put_buffer(m_buff);
			        jsfeat.cache.put_buffer(ms_buff);
			        jsfeat.cache.put_buffer(err_buff);
			        return true;
			    }

			    for (; iter < niters; ++iter) {
			        // generate subset
			        found = get_subset(kernel, from, to, model_points, count, subset0, subset1);
			        if(!found) {
			            if(iter == 0) {
			            	jsfeat.cache.put_buffer(m_buff);
			            	jsfeat.cache.put_buffer(ms_buff);
			            	jsfeat.cache.put_buffer(err_buff);
			                return false;
			            }
			            break;
			        }

			        nmodels = kernel.run( subset0, subset1, M, model_points );
			        if(nmodels <= 0)
			            continue;

			        // TODO handle multimodel output

			        numinliers = find_inliers(kernel, M, from, to, count, params.thresh, err, curr_mask.data);

			        if( numinliers > Math.max(inliers_max, model_points-1) ) {
			            M.copy_to(model);
			            inliers_max = numinliers;
			            if(mask) curr_mask.copy_to(mask);
			            niters = params.update_iters((count - numinliers)/count, niters);
			            result = true;
			        }
			    }

			    jsfeat.cache.put_buffer(m_buff);
			    jsfeat.cache.put_buffer(ms_buff);
			    jsfeat.cache.put_buffer(err_buff);

			    return result;
    		},

    		lmeds: function(params, kernel, from, to, count, model, mask, max_iters) {
    			if (typeof max_iters === "undefined") { max_iters=1000; }

    			if(count < params.size) return false;

    			var model_points = params.size;
			    var niters = max_iters, iter=0;
			    var result = false;

			    var subset0 = [];
			    var subset1 = [];
			    var found = false;

			    var mc=model.cols,mr=model.rows;
                var dt = model.type | jsfeat.C1_t;

			    var m_buff = jsfeat.cache.get_buffer((mc*mr)<<3);
			    var ms_buff = jsfeat.cache.get_buffer(count);
			    var err_buff = jsfeat.cache.get_buffer(count<<2);
			    var M = new jsfeat.matrix_t(mc, mr, dt, m_buff.data);
			    var curr_mask = new jsfeat.matrix_t(count, 1, jsfeat.U8_t|jsfeat.C1_t, ms_buff.data);

			    var numinliers=0;
			    var nmodels = 0;

			    var err = err_buff.f32;
			    var min_median = 1000000000.0, sigma=0.0, median=0.0;

			    params.eps = 0.45;
			    niters = params.update_iters(params.eps, niters);

			    // special case
			    if(count == model_points) {
			        if(kernel.run(from, to, M, count) <= 0) {
			        	jsfeat.cache.put_buffer(m_buff);
			        	jsfeat.cache.put_buffer(ms_buff);
			        	jsfeat.cache.put_buffer(err_buff);
			        	return false;
			        }

			        M.copy_to(model);
			        if(mask) {
			        	while(--count >= 0) {
			        		mask.data[count] = 1;
			        	}
			        }
			        jsfeat.cache.put_buffer(m_buff);
			        jsfeat.cache.put_buffer(ms_buff);
			        jsfeat.cache.put_buffer(err_buff);
			        return true;
			    }

			    for (; iter < niters; ++iter) {
			        // generate subset
			        found = get_subset(kernel, from, to, model_points, count, subset0, subset1);
			        if(!found) {
			            if(iter == 0) {
			            	jsfeat.cache.put_buffer(m_buff);
			            	jsfeat.cache.put_buffer(ms_buff);
			            	jsfeat.cache.put_buffer(err_buff);
			                return false;
			            }
			            break;
			        }

			        nmodels = kernel.run( subset0, subset1, M, model_points );
			        if(nmodels <= 0)
			            continue;

			        // TODO handle multimodel output

			        kernel.error(from, to, M, err, count);
			        median = jsfeat.math.median(err, 0, count-1);

			        if(median < min_median) {
			            min_median = median;
			            M.copy_to(model);
			            result = true;
			        }
			    }

			    if(result) {
			        sigma = 2.5*1.4826*(1 + 5.0/(count - model_points))*Math.sqrt(min_median);
			        sigma = Math.max(sigma, 0.001);

			        numinliers = find_inliers(kernel, model, from, to, count, sigma, err, curr_mask.data);
			        if(mask) curr_mask.copy_to(mask);
			        
			        result = numinliers >= model_points;
			    }

			    jsfeat.cache.put_buffer(m_buff);
			    jsfeat.cache.put_buffer(ms_buff);
			    jsfeat.cache.put_buffer(err_buff);

			    return result;
    		}

    	};

    })();

    global.ransac_params_t = ransac_params_t;
    global.motion_model = motion_model;
    global.motion_estimator = motion_estimator;

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 */

(function(global) {
    "use strict";
    //

    var imgproc = (function() {

        var _resample_u8 = function(src, dst, nw, nh) {
            var xofs_count=0;
            var ch=src.channel,w=src.cols,h=src.rows;
            var src_d=src.data,dst_d=dst.data;
            var scale_x = w / nw, scale_y = h / nh;
            var inv_scale_256 = (scale_x * scale_y * 0x10000)|0;
            var dx=0,dy=0,sx=0,sy=0,sx1=0,sx2=0,i=0,k=0,fsx1=0.0,fsx2=0.0;
            var a=0,b=0,dxn=0,alpha=0,beta=0,beta1=0;

            var buf_node = jsfeat.cache.get_buffer((nw*ch)<<2);
            var sum_node = jsfeat.cache.get_buffer((nw*ch)<<2);
            var xofs_node = jsfeat.cache.get_buffer((w*2*3)<<2);

            var buf = buf_node.i32;
            var sum = sum_node.i32;
            var xofs = xofs_node.i32;

            for (; dx < nw; dx++) {
                fsx1 = dx * scale_x, fsx2 = fsx1 + scale_x;
                sx1 = (fsx1 + 1.0 - 1e-6)|0, sx2 = fsx2|0;
                sx1 = Math.min(sx1, w - 1);
                sx2 = Math.min(sx2, w - 1);

                if(sx1 > fsx1) {
                    xofs[k++] = (dx * ch)|0;
                    xofs[k++] = ((sx1 - 1)*ch)|0; 
                    xofs[k++] = ((sx1 - fsx1) * 0x100)|0;
                    xofs_count++;
                }
                for(sx = sx1; sx < sx2; sx++){
                    xofs_count++;
                    xofs[k++] = (dx * ch)|0;
                    xofs[k++] = (sx * ch)|0;
                    xofs[k++] = 256;
                }
                if(fsx2 - sx2 > 1e-3) {
                    xofs_count++;
                    xofs[k++] = (dx * ch)|0;
                    xofs[k++] = (sx2 * ch)|0;
                    xofs[k++] = ((fsx2 - sx2) * 256)|0;
                }
            }

            for (dx = 0; dx < nw * ch; dx++) {
                buf[dx] = sum[dx] = 0;
            }
            dy = 0;
            for (sy = 0; sy < h; sy++) {
                a = w * sy;
                for (k = 0; k < xofs_count; k++) {
                    dxn = xofs[k*3];
                    sx1 = xofs[k*3+1];
                    alpha = xofs[k*3+2];
                    for (i = 0; i < ch; i++) {
                        buf[dxn + i] += src_d[a+sx1+i] * alpha;
                    }
                }
                if ((dy + 1) * scale_y <= sy + 1 || sy == h - 1) {
                    beta = (Math.max(sy + 1 - (dy + 1) * scale_y, 0.0) * 256)|0;
                    beta1 = 256 - beta;
                    b = nw * dy;
                    if (beta <= 0) {
                        for (dx = 0; dx < nw * ch; dx++) {
                            dst_d[b+dx] = Math.min(Math.max((sum[dx] + buf[dx] * 256) / inv_scale_256, 0), 255);
                            sum[dx] = buf[dx] = 0;
                        }
                    } else {
                        for (dx = 0; dx < nw * ch; dx++) {
                            dst_d[b+dx] = Math.min(Math.max((sum[dx] + buf[dx] * beta1) / inv_scale_256, 0), 255);
                            sum[dx] = buf[dx] * beta;
                            buf[dx] = 0;
                        }
                    }
                    dy++;
                } else {
                    for(dx = 0; dx < nw * ch; dx++) {
                        sum[dx] += buf[dx] * 256;
                        buf[dx] = 0;
                    }
                }
            }

            jsfeat.cache.put_buffer(sum_node);
            jsfeat.cache.put_buffer(buf_node);
            jsfeat.cache.put_buffer(xofs_node);
        }

        var _resample = function(src, dst, nw, nh) {
            var xofs_count=0;
            var ch=src.channel,w=src.cols,h=src.rows;
            var src_d=src.data,dst_d=dst.data;
            var scale_x = w / nw, scale_y = h / nh;
            var scale = 1.0 / (scale_x * scale_y);
            var dx=0,dy=0,sx=0,sy=0,sx1=0,sx2=0,i=0,k=0,fsx1=0.0,fsx2=0.0;
            var a=0,b=0,dxn=0,alpha=0.0,beta=0.0,beta1=0.0;

            var buf_node = jsfeat.cache.get_buffer((nw*ch)<<2);
            var sum_node = jsfeat.cache.get_buffer((nw*ch)<<2);
            var xofs_node = jsfeat.cache.get_buffer((w*2*3)<<2);

            var buf = buf_node.f32;
            var sum = sum_node.f32;
            var xofs = xofs_node.f32;

            for (; dx < nw; dx++) {
                fsx1 = dx * scale_x, fsx2 = fsx1 + scale_x;
                sx1 = (fsx1 + 1.0 - 1e-6)|0, sx2 = fsx2|0;
                sx1 = Math.min(sx1, w - 1);
                sx2 = Math.min(sx2, w - 1);

                if(sx1 > fsx1) {
                    xofs_count++;
                    xofs[k++] = ((sx1 - 1)*ch)|0;
                    xofs[k++] = (dx * ch)|0;
                    xofs[k++] = (sx1 - fsx1) * scale;
                }
                for(sx = sx1; sx < sx2; sx++){
                    xofs_count++;
                    xofs[k++] = (sx * ch)|0;
                    xofs[k++] = (dx * ch)|0; 
                    xofs[k++] = scale;
                }
                if(fsx2 - sx2 > 1e-3) {
                    xofs_count++;
                    xofs[k++] = (sx2 * ch)|0;
                    xofs[k++] = (dx * ch)|0;
                    xofs[k++] = (fsx2 - sx2) * scale;
                }
            }

            for (dx = 0; dx < nw * ch; dx++) {
                buf[dx] = sum[dx] = 0;
            }
            dy = 0;
            for (sy = 0; sy < h; sy++) {
                a = w * sy;
                for (k = 0; k < xofs_count; k++) {
                    sx1 = xofs[k*3]|0;
                    dxn = xofs[k*3+1]|0;
                    alpha = xofs[k*3+2];
                    for (i = 0; i < ch; i++) {
                        buf[dxn + i] += src_d[a+sx1+i] * alpha;
                    }
                }
                if ((dy + 1) * scale_y <= sy + 1 || sy == h - 1) {
                    beta = Math.max(sy + 1 - (dy + 1) * scale_y, 0.0);
                    beta1 = 1.0 - beta;
                    b = nw * dy;
                    if (Math.abs(beta) < 1e-3) {
                        for (dx = 0; dx < nw * ch; dx++) {
                            dst_d[b+dx] = sum[dx] + buf[dx];
                            sum[dx] = buf[dx] = 0;
                        }
                    } else {
                        for (dx = 0; dx < nw * ch; dx++) {
                            dst_d[b+dx] = sum[dx] + buf[dx] * beta1;
                            sum[dx] = buf[dx] * beta;
                            buf[dx] = 0;
                        }
                    }
                    dy++;
                } else {
                    for(dx = 0; dx < nw * ch; dx++) {
                        sum[dx] += buf[dx]; 
                        buf[dx] = 0;
                    }
                }
            }
            jsfeat.cache.put_buffer(sum_node);
            jsfeat.cache.put_buffer(buf_node);
            jsfeat.cache.put_buffer(xofs_node);
        }

        var _convol_u8 = function(buf, src_d, dst_d, w, h, filter, kernel_size, half_kernel) {
            var i=0,j=0,k=0,sp=0,dp=0,sum=0,sum1=0,sum2=0,sum3=0,f0=filter[0],fk=0;
            var w2=w<<1,w3=w*3,w4=w<<2;
            // hor pass
            for (; i < h; ++i) { 
                sum = src_d[sp];
                for (j = 0; j < half_kernel; ++j) {
                    buf[j] = sum;
                }
                for (j = 0; j <= w-2; j+=2) {
                    buf[j + half_kernel] = src_d[sp+j];
                    buf[j + half_kernel+1] = src_d[sp+j+1];
                }
                for (; j < w; ++j) {
                    buf[j + half_kernel] = src_d[sp+j];
                }
                sum = src_d[sp+w-1];
                for (j = w; j < half_kernel + w; ++j) {
                    buf[j + half_kernel] = sum;
                }
                for (j = 0; j <= w-4; j+=4) {
                    sum = buf[j] * f0, 
                    sum1 = buf[j+1] * f0,
                    sum2 = buf[j+2] * f0,
                    sum3 = buf[j+3] * f0;
                    for (k = 1; k < kernel_size; ++k) {
                        fk = filter[k];
                        sum += buf[k + j] * fk;
                        sum1 += buf[k + j+1] * fk;
                        sum2 += buf[k + j+2] * fk;
                        sum3 += buf[k + j+3] * fk;
                    }
                    dst_d[dp+j] = Math.min(sum >> 8, 255);
                    dst_d[dp+j+1] = Math.min(sum1 >> 8, 255);
                    dst_d[dp+j+2] = Math.min(sum2 >> 8, 255);
                    dst_d[dp+j+3] = Math.min(sum3 >> 8, 255);
                }
                for (; j < w; ++j) {
                    sum = buf[j] * f0;
                    for (k = 1; k < kernel_size; ++k) {
                        sum += buf[k + j] * filter[k];
                    }
                    dst_d[dp+j] = Math.min(sum >> 8, 255);
                }
                sp += w;
                dp += w;
            }

            // vert pass
            for (i = 0; i < w; ++i) {
                sum = dst_d[i];
                for (j = 0; j < half_kernel; ++j) {
                    buf[j] = sum;
                }
                k = i;
                for (j = 0; j <= h-2; j+=2, k+=w2) {
                    buf[j+half_kernel] = dst_d[k];
                    buf[j+half_kernel+1] = dst_d[k+w];
                }
                for (; j < h; ++j, k+=w) {
                    buf[j+half_kernel] = dst_d[k];
                }
                sum = dst_d[(h-1)*w + i];
                for (j = h; j < half_kernel + h; ++j) {
                    buf[j + half_kernel] = sum;
                }
                dp = i;
                for (j = 0; j <= h-4; j+=4, dp+=w4) { 
                    sum = buf[j] * f0, 
                    sum1 = buf[j+1] * f0,
                    sum2 = buf[j+2] * f0,
                    sum3 = buf[j+3] * f0;
                    for (k = 1; k < kernel_size; ++k) {
                        fk = filter[k];
                        sum += buf[k + j] * fk;
                        sum1 += buf[k + j+1] * fk;
                        sum2 += buf[k + j+2] * fk;
                        sum3 += buf[k + j+3] * fk;
                    }
                    dst_d[dp] = Math.min(sum >> 8, 255);
                    dst_d[dp+w] = Math.min(sum1 >> 8, 255);
                    dst_d[dp+w2] = Math.min(sum2 >> 8, 255);
                    dst_d[dp+w3] = Math.min(sum3 >> 8, 255);
                }
                for (; j < h; ++j, dp+=w) {
                    sum = buf[j] * f0;
                    for (k = 1; k < kernel_size; ++k) {
                        sum += buf[k + j] * filter[k];
                    }
                    dst_d[dp] = Math.min(sum >> 8, 255);
                }
            }
        }

        var _convol = function(buf, src_d, dst_d, w, h, filter, kernel_size, half_kernel) {
            var i=0,j=0,k=0,sp=0,dp=0,sum=0.0,sum1=0.0,sum2=0.0,sum3=0.0,f0=filter[0],fk=0.0;
            var w2=w<<1,w3=w*3,w4=w<<2;
            // hor pass
            for (; i < h; ++i) { 
                sum = src_d[sp];
                for (j = 0; j < half_kernel; ++j) {
                    buf[j] = sum;
                }
                for (j = 0; j <= w-2; j+=2) {
                    buf[j + half_kernel] = src_d[sp+j];
                    buf[j + half_kernel+1] = src_d[sp+j+1];
                }
                for (; j < w; ++j) {
                    buf[j + half_kernel] = src_d[sp+j];
                }
                sum = src_d[sp+w-1];
                for (j = w; j < half_kernel + w; ++j) {
                    buf[j + half_kernel] = sum;
                }
                for (j = 0; j <= w-4; j+=4) {
                    sum = buf[j] * f0, 
                    sum1 = buf[j+1] * f0,
                    sum2 = buf[j+2] * f0,
                    sum3 = buf[j+3] * f0;
                    for (k = 1; k < kernel_size; ++k) {
                        fk = filter[k];
                        sum += buf[k + j] * fk;
                        sum1 += buf[k + j+1] * fk;
                        sum2 += buf[k + j+2] * fk;
                        sum3 += buf[k + j+3] * fk;
                    }
                    dst_d[dp+j] = sum;
                    dst_d[dp+j+1] = sum1;
                    dst_d[dp+j+2] = sum2;
                    dst_d[dp+j+3] = sum3;
                }
                for (; j < w; ++j) {
                    sum = buf[j] * f0;
                    for (k = 1; k < kernel_size; ++k) {
                        sum += buf[k + j] * filter[k];
                    }
                    dst_d[dp+j] = sum;
                }
                sp += w;
                dp += w;
            }

            // vert pass
            for (i = 0; i < w; ++i) {
                sum = dst_d[i];
                for (j = 0; j < half_kernel; ++j) {
                    buf[j] = sum;
                }
                k = i;
                for (j = 0; j <= h-2; j+=2, k+=w2) {
                    buf[j+half_kernel] = dst_d[k];
                    buf[j+half_kernel+1] = dst_d[k+w];
                }
                for (; j < h; ++j, k+=w) {
                    buf[j+half_kernel] = dst_d[k];
                }
                sum = dst_d[(h-1)*w + i];
                for (j = h; j < half_kernel + h; ++j) {
                    buf[j + half_kernel] = sum;
                }
                dp = i;
                for (j = 0; j <= h-4; j+=4, dp+=w4) { 
                    sum = buf[j] * f0, 
                    sum1 = buf[j+1] * f0,
                    sum2 = buf[j+2] * f0,
                    sum3 = buf[j+3] * f0;
                    for (k = 1; k < kernel_size; ++k) {
                        fk = filter[k];
                        sum += buf[k + j] * fk;
                        sum1 += buf[k + j+1] * fk;
                        sum2 += buf[k + j+2] * fk;
                        sum3 += buf[k + j+3] * fk;
                    }
                    dst_d[dp] = sum;
                    dst_d[dp+w] = sum1;
                    dst_d[dp+w2] = sum2;
                    dst_d[dp+w3] = sum3;
                }
                for (; j < h; ++j, dp+=w) {
                    sum = buf[j] * f0;
                    for (k = 1; k < kernel_size; ++k) {
                        sum += buf[k + j] * filter[k];
                    }
                    dst_d[dp] = sum;
                }
            }
        }

        return {
            // TODO: add support for RGB/BGR order
            // for raw arrays
            grayscale: function(src, dst) {
                var srcLength = src.length|0, srcLength_16 = (srcLength - 16)|0;
                var j = 0;
                var coeff_r = 4899, coeff_g = 9617, coeff_b = 1868;

                for (var i = 0; i <= srcLength_16; i += 16, j += 4) {
                    dst[j]     = (src[i] * coeff_r + src[i+1] * coeff_g + src[i+2] * coeff_b + 8192) >> 14;
                    dst[j + 1] = (src[i+4] * coeff_r + src[i+5] * coeff_g + src[i+6] * coeff_b + 8192) >> 14;
                    dst[j + 2] = (src[i+8] * coeff_r + src[i+9] * coeff_g + src[i+10] * coeff_b + 8192) >> 14;
                    dst[j + 3] = (src[i+12] * coeff_r + src[i+13] * coeff_g + src[i+14] * coeff_b + 8192) >> 14;
                }
                for (; i < srcLength; i += 4, ++j) {
                    dst[j] = (src[i] * coeff_r + src[i+1] * coeff_g + src[i+2] * coeff_b + 8192) >> 14;
                }
            },
            // derived from CCV library
            resample: function(src, dst, nw, nh) {
                var h=src.rows,w=src.cols;
                if (h > nh && w > nw) {
                    // using the fast alternative (fix point scale, 0x100 to avoid overflow)
                    if (src.type&jsfeat.U8_t && dst.type&jsfeat.U8_t && h * w / (nh * nw) < 0x100) {
                        _resample_u8(src, dst, nw, nh);
                    } else {
                        _resample(src, dst, nw, nh);
                    }
                }
            },

            box_blur_gray: function(src, dst, radius, options) {
                if (typeof options === "undefined") { options = 0; }
                var w=src.cols, h=src.rows, h2=h<<1, w2=w<<1;
                var i=0,x=0,y=0,end=0;
                var windowSize = ((radius << 1) + 1)|0;
                var radiusPlusOne = (radius + 1)|0, radiusPlus2 = (radiusPlusOne+1)|0;
                var scale = options&jsfeat.BOX_BLUR_NOSCALE ? 1 : (1.0 / (windowSize*windowSize));

                var tmp_buff = jsfeat.cache.get_buffer((w*h)<<2);

                var sum=0, dstIndex=0, srcIndex = 0, nextPixelIndex=0, previousPixelIndex=0;
                var data_i32 = tmp_buff.i32; // to prevent overflow
                var data_u8 = src.data;
                var hold=0;

                // first pass
                // no need to scale 
                //data_u8 = src.data;
                //data_i32 = tmp;
                for (y = 0; y < h; ++y) {
                    dstIndex = y;
                    sum = radiusPlusOne * data_u8[srcIndex];

                    for(i = (srcIndex+1)|0, end=(srcIndex+radius)|0; i <= end; ++i) {
                        sum += data_u8[i];
                    }

                    nextPixelIndex = (srcIndex + radiusPlusOne)|0;
                    previousPixelIndex = srcIndex;
                    hold = data_u8[previousPixelIndex];
                    for(x = 0; x < radius; ++x, dstIndex += h) {
                        data_i32[dstIndex] = sum;
                        sum += data_u8[nextPixelIndex]- hold;
                        nextPixelIndex ++;
                    }
                    for(; x < w-radiusPlus2; x+=2, dstIndex += h2) {
                        data_i32[dstIndex] = sum;
                        sum += data_u8[nextPixelIndex]- data_u8[previousPixelIndex];

                        data_i32[dstIndex+h] = sum;
                        sum += data_u8[nextPixelIndex+1]- data_u8[previousPixelIndex+1];

                        nextPixelIndex +=2;
                        previousPixelIndex +=2;
                    }
                    for(; x < w-radiusPlusOne; ++x, dstIndex += h) {
                        data_i32[dstIndex] = sum;
                        sum += data_u8[nextPixelIndex]- data_u8[previousPixelIndex];

                        nextPixelIndex ++;
                        previousPixelIndex ++;
                    }
                    
                    hold = data_u8[nextPixelIndex-1];
                    for(; x < w; ++x, dstIndex += h) {
                        data_i32[dstIndex] = sum;

                        sum += hold- data_u8[previousPixelIndex];
                        previousPixelIndex ++;
                    }

                    srcIndex += w;
                }
                //
                // second pass
                srcIndex = 0;
                //data_i32 = tmp; // this is a transpose
                data_u8 = dst.data;

                // dont scale result
                if(scale == 1) {
                    for (y = 0; y < w; ++y) {
                        dstIndex = y;
                        sum = radiusPlusOne * data_i32[srcIndex];

                        for(i = (srcIndex+1)|0, end=(srcIndex+radius)|0; i <= end; ++i) {
                            sum += data_i32[i];
                        }

                        nextPixelIndex = srcIndex + radiusPlusOne;
                        previousPixelIndex = srcIndex;
                        hold = data_i32[previousPixelIndex];

                        for(x = 0; x < radius; ++x, dstIndex += w) {
                            data_u8[dstIndex] = sum;
                            sum += data_i32[nextPixelIndex]- hold;
                            nextPixelIndex ++;
                        }
                        for(; x < h-radiusPlus2; x+=2, dstIndex += w2) {
                            data_u8[dstIndex] = sum;
                            sum += data_i32[nextPixelIndex]- data_i32[previousPixelIndex];

                            data_u8[dstIndex+w] = sum;
                            sum += data_i32[nextPixelIndex+1]- data_i32[previousPixelIndex+1];

                            nextPixelIndex +=2;
                            previousPixelIndex +=2;
                        }
                        for(; x < h-radiusPlusOne; ++x, dstIndex += w) {
                            data_u8[dstIndex] = sum;

                            sum += data_i32[nextPixelIndex]- data_i32[previousPixelIndex];
                            nextPixelIndex ++;
                            previousPixelIndex ++;
                        }
                        hold = data_i32[nextPixelIndex-1];
                        for(; x < h; ++x, dstIndex += w) {
                            data_u8[dstIndex] = sum;

                            sum += hold- data_i32[previousPixelIndex];
                            previousPixelIndex ++;
                        }

                        srcIndex += h;
                    }
                } else {
                    for (y = 0; y < w; ++y) {
                        dstIndex = y;
                        sum = radiusPlusOne * data_i32[srcIndex];

                        for(i = (srcIndex+1)|0, end=(srcIndex+radius)|0; i <= end; ++i) {
                            sum += data_i32[i];
                        }

                        nextPixelIndex = srcIndex + radiusPlusOne;
                        previousPixelIndex = srcIndex;
                        hold = data_i32[previousPixelIndex];

                        for(x = 0; x < radius; ++x, dstIndex += w) {
                            data_u8[dstIndex] = sum*scale;
                            sum += data_i32[nextPixelIndex]- hold;
                            nextPixelIndex ++;
                        }
                        for(; x < h-radiusPlus2; x+=2, dstIndex += w2) {
                            data_u8[dstIndex] = sum*scale;
                            sum += data_i32[nextPixelIndex]- data_i32[previousPixelIndex];

                            data_u8[dstIndex+w] = sum*scale;
                            sum += data_i32[nextPixelIndex+1]- data_i32[previousPixelIndex+1];

                            nextPixelIndex +=2;
                            previousPixelIndex +=2;
                        }
                        for(; x < h-radiusPlusOne; ++x, dstIndex += w) {
                            data_u8[dstIndex] = sum*scale;

                            sum += data_i32[nextPixelIndex]- data_i32[previousPixelIndex];
                            nextPixelIndex ++;
                            previousPixelIndex ++;
                        }
                        hold = data_i32[nextPixelIndex-1];
                        for(; x < h; ++x, dstIndex += w) {
                            data_u8[dstIndex] = sum*scale;

                            sum += hold- data_i32[previousPixelIndex];
                            previousPixelIndex ++;
                        }

                        srcIndex += h;
                    }
                }

                jsfeat.cache.put_buffer(tmp_buff);
            },

            gaussian_blur: function(src, dst, kernel_size, sigma) {
                if (typeof sigma === "undefined") { sigma = 0.0; }
                if (typeof kernel_size === "undefined") { kernel_size = 0; }
                kernel_size = kernel_size == 0 ? (Math.max(1, (4.0 * sigma + 1.0 - 1e-8)) * 2 + 1)|0 : kernel_size;
                var half_kernel = kernel_size >> 1;
                var w = src.cols, h = src.rows;
                var data_type = src.type, is_u8 = data_type&jsfeat.U8_t;
                var src_d = src.data, dst_d = dst.data;
                var buf,filter,buf_sz=(kernel_size + Math.max(h, w))|0;

                var buf_node = jsfeat.cache.get_buffer(buf_sz<<2);
                var filt_node = jsfeat.cache.get_buffer(kernel_size<<2);

                if(is_u8) {
                    buf = buf_node.i32;
                    filter = filt_node.i32;
                } else if(data_type&jsfeat.S32_t) {
                    buf = buf_node.i32;
                    filter = filt_node.f32;
                } else {
                    buf = buf_node.f32;
                    filter = filt_node.f32;
                }

                jsfeat.math.get_gaussian_kernel(kernel_size, sigma, filter, data_type);

                if(is_u8) {
                    _convol_u8(buf, src_d, dst_d, w, h, filter, kernel_size, half_kernel);
                } else {
                    _convol(buf, src_d, dst_d, w, h, filter, kernel_size, half_kernel);
                }

                jsfeat.cache.put_buffer(buf_node);
                jsfeat.cache.put_buffer(filt_node);
            },
            // assume we always need it for u8 image
            pyrdown: function(src, dst, sx, sy) {
                // this is needed for bbf
                if (typeof sx === "undefined") { sx = 0; }
                if (typeof sy === "undefined") { sy = 0; }

                var w = src.cols, h = src.rows;
                var w2 = w >> 1, h2 = h >> 1;
                var _w2 = w2 - (sx << 1), _h2 = h2 - (sy << 1);
                var x=0,y=0,sptr=sx+sy*w,sline=0,dptr=0,dline=0;
                var src_d = src.data, dst_d = dst.data;

                for(y = 0; y < _h2; ++y) {
                    sline = sptr;
                    dline = dptr;
                    for(x = 0; x <= _w2-2; x+=2, dline+=2, sline += 4) {
                        dst_d[dline] = (src_d[sline] + src_d[sline+1] +
                                            src_d[sline+w] + src_d[sline+w+1] + 2) >> 2;
                        dst_d[dline+1] = (src_d[sline+2] + src_d[sline+3] +
                                            src_d[sline+w+2] + src_d[sline+w+3] + 2) >> 2;
                    }
                    for(; x < _w2; ++x, ++dline, sline += 2) {
                        dst_d[dline] = (src_d[sline] + src_d[sline+1] +
                                            src_d[sline+w] + src_d[sline+w+1] + 2) >> 2;
                    }
                    sptr += w << 1;
                    dptr += w2;
                }
            },

            // dst: [gx,gy,...]
            scharr_derivatives: function(src, dst) {
                var w = src.cols, h = src.rows;
                var dstep = w<<1,x=0,y=0,x1=0,a,b,c,d,e,f;
                var srow0=0,srow1=0,srow2=0,drow=0;
                var trow0,trow1;
                var img = src.data, gxgy=dst.data;

                var buf0_node = jsfeat.cache.get_buffer((w+2)<<2);
                var buf1_node = jsfeat.cache.get_buffer((w+2)<<2);

                if(src.type&jsfeat.U8_t || src.type&jsfeat.S32_t) {
                    trow0 = buf0_node.i32;
                    trow1 = buf1_node.i32;
                } else {
                    trow0 = buf0_node.f32;
                    trow1 = buf1_node.f32;
                }

                for(; y < h; ++y, srow1+=w) {
                    srow0 = ((y > 0 ? y-1 : 1)*w)|0;
                    srow2 = ((y < h-1 ? y+1 : h-2)*w)|0;
                    drow = (y*dstep)|0;
                    // do vertical convolution
                    for(x = 0, x1 = 1; x <= w-2; x+=2, x1+=2) {
                        a = img[srow0+x], b = img[srow2+x];
                        trow0[x1] = ( (a + b)*3 + (img[srow1+x])*10 );
                        trow1[x1] = ( b - a );
                        //
                        a = img[srow0+x+1], b = img[srow2+x+1];
                        trow0[x1+1] = ( (a + b)*3 + (img[srow1+x+1])*10 );
                        trow1[x1+1] = ( b - a );
                    }
                    for(; x < w; ++x, ++x1) {
                        a = img[srow0+x], b = img[srow2+x];
                        trow0[x1] = ( (a + b)*3 + (img[srow1+x])*10 );
                        trow1[x1] = ( b - a );
                    }
                    // make border
                    x = (w + 1)|0;
                    trow0[0] = trow0[1]; trow0[x] = trow0[w];
                    trow1[0] = trow1[1]; trow1[x] = trow1[w];
                    // do horizontal convolution, interleave the results and store them
                    for(x = 0; x <= w-4; x+=4) {
                        a = trow1[x+2], b = trow1[x+1], c = trow1[x+3], d = trow1[x+4],
                        e = trow0[x+2], f = trow0[x+3];
                        gxgy[drow++] = ( e - trow0[x] );
                        gxgy[drow++] = ( (a + trow1[x])*3 + b*10 );
                        gxgy[drow++] = ( f - trow0[x+1] );
                        gxgy[drow++] = ( (c + b)*3 + a*10 );

                        gxgy[drow++] = ( (trow0[x+4] - e) );
                        gxgy[drow++] = ( ((d + a)*3 + c*10) );
                        gxgy[drow++] = ( (trow0[x+5] - f) );
                        gxgy[drow++] = ( ((trow1[x+5] + c)*3 + d*10) );
                    }
                    for(; x < w; ++x) {
                        gxgy[drow++] = ( (trow0[x+2] - trow0[x]) );
                        gxgy[drow++] = ( ((trow1[x+2] + trow1[x])*3 + trow1[x+1]*10) );
                    }
                }
                jsfeat.cache.put_buffer(buf0_node);
                jsfeat.cache.put_buffer(buf1_node);
            },

            // compute gradient using Sobel kernel [1 2 1] * [-1 0 1]^T
            // dst: [gx,gy,...]
            sobel_derivatives: function(src, dst) {
                var w = src.cols, h = src.rows;
                var dstep = w<<1,x=0,y=0,x1=0,a,b,c,d,e,f;
                var srow0=0,srow1=0,srow2=0,drow=0;
                var trow0,trow1;
                var img = src.data, gxgy=dst.data;

                var buf0_node = jsfeat.cache.get_buffer((w+2)<<2);
                var buf1_node = jsfeat.cache.get_buffer((w+2)<<2);

                if(src.type&jsfeat.U8_t || src.type&jsfeat.S32_t) {
                    trow0 = buf0_node.i32;
                    trow1 = buf1_node.i32;
                } else {
                    trow0 = buf0_node.f32;
                    trow1 = buf1_node.f32;
                }

                for(; y < h; ++y, srow1+=w) {
                    srow0 = ((y > 0 ? y-1 : 1)*w)|0;
                    srow2 = ((y < h-1 ? y+1 : h-2)*w)|0;
                    drow = (y*dstep)|0;
                    // do vertical convolution
                    for(x = 0, x1 = 1; x <= w-2; x+=2, x1+=2) {
                        a = img[srow0+x], b = img[srow2+x];
                        trow0[x1] = ( (a + b) + (img[srow1+x]*2) );
                        trow1[x1] = ( b - a );
                        //
                        a = img[srow0+x+1], b = img[srow2+x+1];
                        trow0[x1+1] = ( (a + b) + (img[srow1+x+1]*2) );
                        trow1[x1+1] = ( b - a );
                    }
                    for(; x < w; ++x, ++x1) {
                        a = img[srow0+x], b = img[srow2+x];
                        trow0[x1] = ( (a + b) + (img[srow1+x]*2) );
                        trow1[x1] = ( b - a );
                    }
                    // make border
                    x = (w + 1)|0;
                    trow0[0] = trow0[1]; trow0[x] = trow0[w];
                    trow1[0] = trow1[1]; trow1[x] = trow1[w];
                    // do horizontal convolution, interleave the results and store them
                    for(x = 0; x <= w-4; x+=4) {
                        a = trow1[x+2], b = trow1[x+1], c = trow1[x+3], d = trow1[x+4],
                        e = trow0[x+2], f = trow0[x+3];
                        gxgy[drow++] = ( e - trow0[x] );
                        gxgy[drow++] = ( a + trow1[x] + b*2 );
                        gxgy[drow++] = ( f - trow0[x+1] );
                        gxgy[drow++] = ( c + b + a*2 );

                        gxgy[drow++] = ( trow0[x+4] - e );
                        gxgy[drow++] = ( d + a + c*2 );
                        gxgy[drow++] = ( trow0[x+5] - f );
                        gxgy[drow++] = ( trow1[x+5] + c + d*2 );
                    }
                    for(; x < w; ++x) {
                        gxgy[drow++] = ( trow0[x+2] - trow0[x] );
                        gxgy[drow++] = ( trow1[x+2] + trow1[x] + trow1[x+1]*2 );
                    }
                }
                jsfeat.cache.put_buffer(buf0_node);
                jsfeat.cache.put_buffer(buf1_node);
            },

            // please note: 
            // dst_(type) size should be cols = src.cols+1, rows = src.rows+1
            compute_integral_image: function(src, dst_sum, dst_sqsum, dst_tilted) {
                var w0=src.cols|0,h0=src.rows|0,src_d=src.data;
                var w1=(w0+1)|0;
                var s=0,s2=0,p=0,pup=0,i=0,j=0,v=0,k=0;

                if(dst_sum && dst_sqsum) {
                    // fill first row with zeros
                    for(; i < w1; ++i) {
                        dst_sum[i] = 0, dst_sqsum[i] = 0;
                    }
                    p = (w1+1)|0, pup = 1;
                    for(i = 0, k = 0; i < h0; ++i, ++p, ++pup) {
                        s = s2 = 0;
                        for(j = 0; j <= w0-2; j+=2, k+=2, p+=2, pup+=2) {
                            v = src_d[k];
                            s += v, s2 += v*v;
                            dst_sum[p] = dst_sum[pup] + s;
                            dst_sqsum[p] = dst_sqsum[pup] + s2;

                            v = src_d[k+1];
                            s += v, s2 += v*v;
                            dst_sum[p+1] = dst_sum[pup+1] + s;
                            dst_sqsum[p+1] = dst_sqsum[pup+1] + s2;
                        }
                        for(; j < w0; ++j, ++k, ++p, ++pup) {
                            v = src_d[k];
                            s += v, s2 += v*v;
                            dst_sum[p] = dst_sum[pup] + s;
                            dst_sqsum[p] = dst_sqsum[pup] + s2;
                        }
                    }
                } else if(dst_sum) {
                    // fill first row with zeros
                    for(; i < w1; ++i) {
                        dst_sum[i] = 0;
                    }
                    p = (w1+1)|0, pup = 1;
                    for(i = 0, k = 0; i < h0; ++i, ++p, ++pup) {
                        s = 0;
                        for(j = 0; j <= w0-2; j+=2, k+=2, p+=2, pup+=2) {
                            s += src_d[k];
                            dst_sum[p] = dst_sum[pup] + s;
                            s += src_d[k+1];
                            dst_sum[p+1] = dst_sum[pup+1] + s;
                        }
                        for(; j < w0; ++j, ++k, ++p, ++pup) {
                            s += src_d[k];
                            dst_sum[p] = dst_sum[pup] + s;
                        }
                    }
                } else if(dst_sqsum) {
                    // fill first row with zeros
                    for(; i < w1; ++i) {
                        dst_sqsum[i] = 0;
                    }
                    p = (w1+1)|0, pup = 1;
                    for(i = 0, k = 0; i < h0; ++i, ++p, ++pup) {
                        s2 = 0;
                        for(j = 0; j <= w0-2; j+=2, k+=2, p+=2, pup+=2) {
                            v = src_d[k];
                            s2 += v*v;
                            dst_sqsum[p] = dst_sqsum[pup] + s2;
                            v = src_d[k+1];
                            s2 += v*v;
                            dst_sqsum[p+1] = dst_sqsum[pup+1] + s2;
                        }
                        for(; j < w0; ++j, ++k, ++p, ++pup) {
                            v = src_d[k];
                            s2 += v*v;
                            dst_sqsum[p] = dst_sqsum[pup] + s2;
                        }
                    }
                }

                if(dst_tilted) {
                    // fill first row with zeros
                    for(i = 0; i < w1; ++i) {
                        dst_tilted[i] = 0;
                    }
                    // diagonal
                    p = (w1+1)|0, pup = 0;
                    for(i = 0, k = 0; i < h0; ++i, ++p, ++pup) {
                        for(j = 0; j <= w0-2; j+=2, k+=2, p+=2, pup+=2) {
                            dst_tilted[p] = src_d[k] + dst_tilted[pup];
                            dst_tilted[p+1] = src_d[k+1] + dst_tilted[pup+1];
                        }
                        for(; j < w0; ++j, ++k, ++p, ++pup) {
                            dst_tilted[p] = src_d[k] + dst_tilted[pup];
                        }
                    }
                    // diagonal
                    p = (w1+w0)|0, pup = w0;
                    for(i = 0; i < h0; ++i, p+=w1, pup+=w1) {
                        dst_tilted[p] += dst_tilted[pup];
                    }

                    for(j = w0-1; j > 0; --j) {
                        p = j+h0*w1, pup=p-w1;
                        for(i = h0; i > 0; --i, p-=w1, pup-=w1) {
                            dst_tilted[p] += dst_tilted[pup] + dst_tilted[pup+1];
                        }
                    }
                }
            },
            equalize_histogram: function(src, dst) {
                var w=src.cols,h=src.rows,src_d=src.data,dst_d=dst.data,size=w*h;
                var i=0,prev=0,hist0,norm;

                var hist0_node = jsfeat.cache.get_buffer(256<<2);
                hist0 = hist0_node.i32;
                for(; i < 256; ++i) hist0[i] = 0;
                for (i = 0; i < size; ++i) {
                    ++hist0[src_d[i]];
                }

                prev = hist0[0];
                for (i = 1; i < 256; ++i) {
                    prev = hist0[i] += prev;
                }

                norm = 255 / size;
                for (i = 0; i < size; ++i) {
                    dst_d[i] = (hist0[src_d[i]] * norm + 0.5)|0;
                }
                jsfeat.cache.put_buffer(hist0_node);
            },

            canny: function(src, dst, low_thresh, high_thresh) {
                var w=src.cols,h=src.rows,src_d=src.data,dst_d=dst.data;
                var i=0,j=0,grad=0,w2=w<<1,_grad=0,suppress=0,f=0,x=0,y=0,s=0;
                var tg22x=0,tg67x=0;

                // cache buffers
                var dxdy_node = jsfeat.cache.get_buffer((h * w2)<<2);
                var buf_node = jsfeat.cache.get_buffer((3 * (w + 2))<<2);
                var map_node = jsfeat.cache.get_buffer(((h+2) * (w + 2))<<2);
                var stack_node = jsfeat.cache.get_buffer((h * w)<<2);
                

                var buf = buf_node.i32;
                var map = map_node.i32;
                var stack = stack_node.i32;
                var dxdy = dxdy_node.i32;
                var dxdy_m = new jsfeat.matrix_t(w, h, jsfeat.S32C2_t, dxdy_node.data);
                var row0=1,row1=(w+2+1)|0,row2=(2*(w+2)+1)|0,map_w=(w+2)|0,map_i=(map_w+1)|0,stack_i=0;

                this.sobel_derivatives(src, dxdy_m);

                if(low_thresh > high_thresh) {
                    i = low_thresh;
                    low_thresh = high_thresh;
                    high_thresh = i;
                }

                i = (3 * (w + 2))|0;
                while(--i>=0) {
                    buf[i] = 0;
                }

                i = ((h+2) * (w + 2))|0;
                while(--i>=0) {
                    map[i] = 0;
                }

                for (; j < w; ++j, grad+=2) {
                    //buf[row1+j] = Math.abs(dxdy[grad]) + Math.abs(dxdy[grad+1]);
                    x = dxdy[grad], y = dxdy[grad+1];
                    //buf[row1+j] = x*x + y*y;
                    buf[row1+j] = ((x ^ (x >> 31)) - (x >> 31)) + ((y ^ (y >> 31)) - (y >> 31));
                }

                for(i=1; i <= h; ++i, grad+=w2) {
                    if(i == h) {
                        j = row2+w;
                        while(--j>=row2) {
                            buf[j] = 0;
                        }
                    } else {
                        for (j = 0; j < w; j++) {
                            //buf[row2+j] =  Math.abs(dxdy[grad+(j<<1)]) + Math.abs(dxdy[grad+(j<<1)+1]);
                            x = dxdy[grad+(j<<1)], y = dxdy[grad+(j<<1)+1];
                            //buf[row2+j] = x*x + y*y;
                            buf[row2+j] = ((x ^ (x >> 31)) - (x >> 31)) + ((y ^ (y >> 31)) - (y >> 31));
                        }
                    }
                    _grad = (grad - w2)|0;
                    map[map_i-1] = 0;
                    suppress = 0;
                    for(j = 0; j < w; ++j, _grad+=2) {
                        f = buf[row1+j];
                        if (f > low_thresh) {
                            x = dxdy[_grad];
                            y = dxdy[_grad+1];
                            s = x ^ y;
                            // seems ot be faster than Math.abs
                            x = ((x ^ (x >> 31)) - (x >> 31))|0;
                            y = ((y ^ (y >> 31)) - (y >> 31))|0;
                            //x * tan(22.5) x * tan(67.5) == 2 * x + x * tan(22.5)
                            tg22x = x * 13573;
                            tg67x = tg22x + ((x + x) << 15);
                            y <<= 15;
                            if (y < tg22x) {
                                if (f > buf[row1+j-1] && f >= buf[row1+j+1]) {
                                    if (f > high_thresh && !suppress && map[map_i+j-map_w] != 2) {
                                        map[map_i+j] = 2;
                                        suppress = 1;
                                        stack[stack_i++] = map_i + j;
                                    } else {
                                        map[map_i+j] = 1;
                                    }
                                    continue;
                                }
                            } else if (y > tg67x) {
                                if (f > buf[row0+j] && f >= buf[row2+j]) {
                                    if (f > high_thresh && !suppress && map[map_i+j-map_w] != 2) {
                                        map[map_i+j] = 2;
                                        suppress = 1;
                                        stack[stack_i++] = map_i + j;
                                    } else {
                                        map[map_i+j] = 1;
                                    }
                                    continue;
                                }
                            } else {
                                s = s < 0 ? -1 : 1;
                                if (f > buf[row0+j-s] && f > buf[row2+j+s]) {
                                    if (f > high_thresh && !suppress && map[map_i+j-map_w] != 2) {
                                        map[map_i+j] = 2;
                                        suppress = 1;
                                        stack[stack_i++] = map_i + j;
                                    } else {
                                        map[map_i+j] = 1;
                                    }
                                    continue;
                                }
                            }
                        }
                        map[map_i+j] = 0;
                        suppress = 0;
                    }
                    map[map_i+w] = 0;
                    map_i += map_w;
                    j = row0;
                    row0 = row1;
                    row1 = row2;
                    row2 = j;
                }

                j = map_i - map_w - 1;
                for(i = 0; i < map_w; ++i, ++j) {
                    map[j] = 0;
                }
                // path following
                while(stack_i > 0) {
                    map_i = stack[--stack_i];
                    map_i -= map_w+1;
                    if(map[map_i] == 1) map[map_i] = 2, stack[stack_i++] = map_i;
                    map_i += 1;
                    if(map[map_i] == 1) map[map_i] = 2, stack[stack_i++] = map_i;
                    map_i += 1;
                    if(map[map_i] == 1) map[map_i] = 2, stack[stack_i++] = map_i;
                    map_i += map_w;
                    if(map[map_i] == 1) map[map_i] = 2, stack[stack_i++] = map_i;
                    map_i -= 2;
                    if(map[map_i] == 1) map[map_i] = 2, stack[stack_i++] = map_i;
                    map_i += map_w;
                    if(map[map_i] == 1) map[map_i] = 2, stack[stack_i++] = map_i;
                    map_i += 1;
                    if(map[map_i] == 1) map[map_i] = 2, stack[stack_i++] = map_i;
                    map_i += 1;
                    if(map[map_i] == 1) map[map_i] = 2, stack[stack_i++] = map_i;
                }

                map_i = map_w + 1;
                row0 = 0;
                for(i = 0; i < h; ++i, map_i+=map_w) {
                    for(j = 0; j < w; ++j) {
                        dst_d[row0++] = (map[map_i+j] == 2) * 0xff;
                    }
                }

                // free buffers
                jsfeat.cache.put_buffer(dxdy_node);
                jsfeat.cache.put_buffer(buf_node);
                jsfeat.cache.put_buffer(map_node);
                jsfeat.cache.put_buffer(stack_node);
            },
            // transform is 3x3 matrix_t
            warp_perspective: function(src, dst, transform, fill_value) {
                if (typeof fill_value === "undefined") { fill_value = 0; }
                var src_width=src.cols|0, src_height=src.rows|0, dst_width=dst.cols|0, dst_height=dst.rows|0;
                var src_d=src.data, dst_d=dst.data;
                var x=0,y=0,off=0,ixs=0,iys=0,xs=0.0,ys=0.0,xs0=0.0,ys0=0.0,ws=0.0,sc=0.0,a=0.0,b=0.0,p0=0.0,p1=0.0;
                var td=transform.data;
                var m00=td[0],m01=td[1],m02=td[2],
                    m10=td[3],m11=td[4],m12=td[5],
                    m20=td[6],m21=td[7],m22=td[8];

                for(var dptr = 0; y < dst_height; ++y) {
                    xs0 = m01 * y + m02,
                    ys0 = m11 * y + m12,
                    ws  = m21 * y + m22;
                    for(x = 0; x < dst_width; ++x, ++dptr, xs0+=m00, ys0+=m10, ws+=m20) {
                        sc = 1.0 / ws;
                        xs = xs0 * sc, ys = ys0 * sc;
                        ixs = xs | 0, iys = ys | 0;

                        if(xs > 0 && ys > 0 && ixs < (src_width - 1) && iys < (src_height - 1)) {
                            a = Math.max(xs - ixs, 0.0);
                            b = Math.max(ys - iys, 0.0);
                            off = (src_width*iys + ixs)|0;

                            p0 = src_d[off] +  a * (src_d[off+1] - src_d[off]);
                            p1 = src_d[off+src_width] + a * (src_d[off+src_width+1] - src_d[off+src_width]);

                            dst_d[dptr] = p0 + b * (p1 - p0);
                        }
                        else dst_d[dptr] = fill_value;
                    }
                }
            },
            // transform is 3x3 or 2x3 matrix_t only first 6 values referenced
            warp_affine: function(src, dst, transform, fill_value) {
                if (typeof fill_value === "undefined") { fill_value = 0; }
                var src_width=src.cols, src_height=src.rows, dst_width=dst.cols, dst_height=dst.rows;
                var src_d=src.data, dst_d=dst.data;
                var x=0,y=0,off=0,ixs=0,iys=0,xs=0.0,ys=0.0,a=0.0,b=0.0,p0=0.0,p1=0.0;
                var td=transform.data;
                var m00=td[0],m01=td[1],m02=td[2],
                    m10=td[3],m11=td[4],m12=td[5];

                for(var dptr = 0; y < dst_height; ++y) {
                    xs = m01 * y + m02;
                    ys = m11 * y + m12;
                    for(x = 0; x < dst_width; ++x, ++dptr, xs+=m00, ys+=m10) {
                        ixs = xs | 0; iys = ys | 0;

                        if(xs > 0 && ys > 0 && ixs < (src_width - 1) && iys < (src_height - 1)) {
                            a = Math.max(xs - ixs, 0.0);
                            b = Math.max(ys - iys, 0.0);
                            off = src_width*iys + ixs;

                            p0 = src_d[off] +  a * (src_d[off+1] - src_d[off]);
                            p1 = src_d[off+src_width] + a * (src_d[off+src_width+1] - src_d[off+src_width]);

                            dst_d[dptr] = p0 + b * (p1 - p0);
                        }
                        else dst_d[dptr] = fill_value;
                    }
                }
            },
            
            // Basic RGB Skin detection filter
            // from http://popscan.blogspot.fr/2012/08/skin-detection-in-digital-images.html
            skindetector: function(src,dst) {
                var r,g,b,j;
                var i = src.width*src.height;
                while(i--){
                    j = i*4;
                    r = src.data[j];
                    g = src.data[j+1];
                    b = src.data[j+2];
                    if((r>95)&&(g>40)&&(b>20)
                     &&(r>g)&&(r>b)
                     &&(r-Math.min(g,b)>15)
                     &&(Math.abs(r-g)>15)){
                         dst[i] = 255;
                    } else {
                        dst[i] = 0;
                    }
                }                
            }
        };
    })();

    global.imgproc = imgproc;

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 *
 * This is FAST corner detector, contributed to OpenCV by the author, Edward Rosten.
 */

/*
The references are:
 * Machine learning for high-speed corner detection,
   E. Rosten and T. Drummond, ECCV 2006
 * Faster and better: A machine learning approach to corner detection
   E. Rosten, R. Porter and T. Drummond, PAMI, 2009  
*/

(function(global) {
    "use strict";
    //
    var fast_corners = (function() {

        var offsets16 = new Int32Array([0, 3, 1, 3, 2, 2, 3, 1, 3, 0, 3, -1, 2, -2, 1, -3, 0, -3, -1, -3, -2, -2, -3, -1, -3, 0, -3, 1, -2, 2, -1, 3]);

        // decided to switch it off since other pattern sizes return quite poor points
        //var offsets12 = new Int32Array([0, 2, 1, 2, 2, 1, 2, 0, 2, -1, 1, -2, 0, -2, -1, -2, -2, -1, -2, 0, -2, 1, -1, 2]);
        //var offsets8 = new Int32Array([0, 1, 1, 1, 1, 0, 1, -1, 0, -1, -1, -1, -1, 0, -1, 1]);

        var threshold_tab = new Uint8Array(512);
        var pixel_off = new Int32Array(25);
        var score_diff = new Int32Array(25);

        // private functions
        var _cmp_offsets = function(pixel, step, pattern_size) {
            var k = 0;
            //var offsets = pattern_size == 16 ? offsets16 : (pattern_size == 12 ? offsets12 : offsets8);
            var offsets = offsets16;
            for( ; k < pattern_size; ++k ) {
                pixel[k] = offsets[k<<1] + offsets[(k<<1)+1] * step;
            }
            for( ; k < 25; ++k ) {
                pixel[k] = pixel[k - pattern_size];
            }
        },
/*
        _cmp_score_8 = function(src, off, pixel, d, threshold) {
            var N = 13, k = 0, v = src[off];
            var a0 = threshold,a=0,b0=0,b=0;

            for( ; k < N; ++k ) {
                d[k] = v - src[off+pixel[k]];
            }

            for( k = 0; k < 8; k += 2 ) {
                a = Math.min(d[k+1], d[k+2]);

                if( a <= a0 ) continue;

                a = Math.min(a, d[k+3]);
                a = Math.min(a, d[k+4]);
                a0 = Math.max(a0, Math.min(a, d[k]));
                a0 = Math.max(a0, Math.min(a, d[k+5]));
            }

            b0 = -a0;
            for( k = 0; k < 8; k += 2 ) {
                b = Math.max(d[k+1], d[k+2]);
                b = Math.max(b, d[k+3]);

                if( b >= b0 ) continue;

                b = Math.max(b, d[k+4]);
                b0 = Math.min(b0, Math.max(b, d[k]));
                b0 = Math.min(b0, Math.max(b, d[k+5]));
            }

            return -b0-1;
        },

        _cmp_score_12 = function(src, off, pixel, d, threshold) {
            var N = 19, k = 0, v = src[off];
            var a0 = threshold,a=0,b0=0,b=0;

            for( ; k < N; ++k ) {
                d[k] = v - src[off+pixel[k]];
            }

            for( k = 0; k < 12; k += 2 ) {
                a = Math.min(d[k+1], d[k+2]);

                if( a <= a0 ) continue;

                a = Math.min(a, d[k+3]);
                a = Math.min(a, d[k+4]);
                a = Math.min(a, d[k+5]);
                a = Math.min(a, d[k+6]);
                a0 = Math.max(a0, Math.min(a, d[k]));
                a0 = Math.max(a0, Math.min(a, d[k+7]));
            }

            b0 = -a0;
            for( k = 0; k < 12; k += 2 ) {
                b = Math.max(d[k+1], d[k+2]);
                b = Math.max(b, d[k+3]);
                b = Math.max(b, d[k+4]);

                if( b >= b0 ) continue;

                b = Math.max(b, d[k+5]);
                b = Math.max(b, d[k+6]);
                b0 = Math.min(b0, Math.max(b, d[k]));
                b0 = Math.min(b0, Math.max(b, d[k+7]));
            }

            return -b0-1;
        },
*/
        _cmp_score_16 = function(src, off, pixel, d, threshold) {
            var N = 25, k = 0, v = src[off];
            var a0 = threshold,a=0,b0=0,b=0;

            for( ; k < N; ++k ) {
                d[k] = v - src[off+pixel[k]];
            }

            for( k = 0; k < 16; k += 2 ) {
                a = Math.min(d[k+1], d[k+2]);
                a = Math.min(a, d[k+3]);

                if( a <= a0 ) continue;

                a = Math.min(a, d[k+4]);
                a = Math.min(a, d[k+5]);
                a = Math.min(a, d[k+6]);
                a = Math.min(a, d[k+7]);
                a = Math.min(a, d[k+8]);
                a0 = Math.max(a0, Math.min(a, d[k]));
                a0 = Math.max(a0, Math.min(a, d[k+9]));
            }

            b0 = -a0;
            for( k = 0; k < 16; k += 2 ) {
                b = Math.max(d[k+1], d[k+2]);
                b = Math.max(b, d[k+3]);
                b = Math.max(b, d[k+4]);
                b = Math.max(b, d[k+5]);

                if( b >= b0 ) continue;
                b = Math.max(b, d[k+6]);
                b = Math.max(b, d[k+7]);
                b = Math.max(b, d[k+8]);
                b0 = Math.min(b0, Math.max(b, d[k]));
                b0 = Math.min(b0, Math.max(b, d[k+9]));
            }

            return -b0-1;
        };

        var _threshold = 20;

        return {
            set_threshold: function(threshold) {
                _threshold = Math.min(Math.max(threshold, 0), 255);
                for (var i = -255; i <= 255; ++i) {
                    threshold_tab[(i + 255)] = (i < -_threshold ? 1 : (i > _threshold ? 2 : 0));
                }
                return _threshold;
            },
            
            detect: function(src, corners, border) {
                /*
                if (typeof pattern_size === "undefined") { 
                    pattern_size = 16; 
                } else if(pattern_size != 16 && pattern_size!=12 && pattern_size!=8) {
                    pattern_size = 16;
                }
                */
                if (typeof border === "undefined") { border = 3; }

                var K = 8, N = 25;
                var img = src.data, w = src.cols, h = src.rows;
                var i=0, j=0, k=0, vt=0, x=0, m3=0;
                var buf_node = jsfeat.cache.get_buffer(3 * w);
                var cpbuf_node = jsfeat.cache.get_buffer(((w+1)*3)<<2);
                var buf = buf_node.u8;
                var cpbuf = cpbuf_node.i32;
                var pixel = pixel_off;
                var sd = score_diff;
                var sy = Math.max(3, border);
                var ey = Math.min((h-2), (h-border));
                var sx = Math.max(3, border);
                var ex = Math.min((w - 3), (w - border));
                var _count = 0, corners_cnt = 0, pt;
                //var score_func = pattern_size == 16 ? _cmp_score_16 : (pattern_size == 12 ? _cmp_score_12 : _cmp_score_8);
                var score_func = _cmp_score_16;
                var thresh_tab = threshold_tab;
                var threshold = _threshold;

                var v=0,tab=0,d=0,ncorners=0,cornerpos=0,curr=0,ptr=0,prev=0,pprev=0;
                var jp1=0,jm1=0,score=0;

                _cmp_offsets(pixel, w, 16);

                // local vars are faster?
                var pixel0 = pixel[0];
                var pixel1 = pixel[1];
                var pixel2 = pixel[2];
                var pixel3 = pixel[3];
                var pixel4 = pixel[4];
                var pixel5 = pixel[5];
                var pixel6 = pixel[6];
                var pixel7 = pixel[7];
                var pixel8 = pixel[8];
                var pixel9 = pixel[9];
                var pixel10 = pixel[10];
                var pixel11 = pixel[11];
                var pixel12 = pixel[12];
                var pixel13 = pixel[13];
                var pixel14 = pixel[14];
                var pixel15 = pixel[15];

                for(i = 0; i < w*3; ++i) {
                    buf[i] = 0;
                }

                for(i = sy; i < ey; ++i) {
                    ptr = ((i * w) + sx)|0;
                    m3 = (i - 3)%3;
                    curr = (m3*w)|0;
                    cornerpos = (m3*(w+1))|0;
                    for (j = 0; j < w; ++j) buf[curr+j] = 0;
                    ncorners = 0;
                    
                    if( i < (ey - 1) ) {
                        j = sx;
                        
                        for( ; j < ex; ++j, ++ptr ) {
                            v = img[ptr];
                            tab = ( - v + 255 );
                            d = ( thresh_tab[tab+img[ptr+pixel0]] | thresh_tab[tab+img[ptr+pixel8]] );
                            
                            if( d == 0 ) {
                                continue;
                            }
                            
                            d &= ( thresh_tab[tab+img[ptr+pixel2]] | thresh_tab[tab+img[ptr+pixel10]] );
                            d &= ( thresh_tab[tab+img[ptr+pixel4]] | thresh_tab[tab+img[ptr+pixel12]] );
                            d &= ( thresh_tab[tab+img[ptr+pixel6]] | thresh_tab[tab+img[ptr+pixel14]] );
                            
                            if( d == 0 ) {
                                continue;
                            }
                            
                            d &= ( thresh_tab[tab+img[ptr+pixel1]] | thresh_tab[tab+img[ptr+pixel9]] );
                            d &= ( thresh_tab[tab+img[ptr+pixel3]] | thresh_tab[tab+img[ptr+pixel11]] );
                            d &= ( thresh_tab[tab+img[ptr+pixel5]] | thresh_tab[tab+img[ptr+pixel13]] );
                            d &= ( thresh_tab[tab+img[ptr+pixel7]] | thresh_tab[tab+img[ptr+pixel15]] );
                            
                            if( d & 1 ) {
                                vt = (v - threshold);
                                _count = 0;
                                
                                for( k = 0; k < N; ++k ) {
                                    x = img[(ptr+pixel[k])];
                                    if(x < vt) {
                                        ++_count;
                                        if( _count > K ) {
                                            ++ncorners;
                                            cpbuf[cornerpos+ncorners] = j;
                                            buf[curr+j] = score_func(img, ptr, pixel, sd, threshold);
                                            break;
                                        }
                                    }
                                    else {
                                        _count = 0;
                                    }
                                }
                            }
                            
                            if( d & 2 ) {
                                vt = (v + threshold);
                                _count = 0;
                                
                                for( k = 0; k < N; ++k ) {
                                    x = img[(ptr+pixel[k])];
                                    if(x > vt) {
                                        ++_count;
                                        if( _count > K ) {
                                            ++ncorners;
                                            cpbuf[cornerpos+ncorners] = j;
                                            buf[curr+j] = score_func(img, ptr, pixel, sd, threshold);
                                            break;
                                        }
                                    }
                                    else {
                                        _count = 0;
                                    }
                                }
                            }
                        }
                    }
                    
                    cpbuf[cornerpos+w] = ncorners;
            
                    if ( i == sy ) {
                        continue;
                    }
                    
                    m3 = (i - 4 + 3)%3;
                    prev = (m3*w)|0;
                    cornerpos = (m3*(w+1))|0;
                    m3 = (i - 5 + 3)%3;
                    pprev = (m3*w)|0;

                    ncorners = cpbuf[cornerpos+w];
                    
                    for( k = 0; k < ncorners; ++k ) {
                        j = cpbuf[cornerpos+k];
                        jp1 = (j+1)|0;
                        jm1 = (j-1)|0;
                        score = buf[prev+j];
                        if( (score > buf[prev+jp1] && score > buf[prev+jm1] &&
                            score > buf[pprev+jm1] && score > buf[pprev+j] && score > buf[pprev+jp1] &&
                            score > buf[curr+jm1] && score > buf[curr+j] && score > buf[curr+jp1]) ) {
                            // save corner
                            pt = corners[corners_cnt];
                            pt.x = j, pt.y = (i-1), pt.score = score;
                            corners_cnt++;
                        }
                    }
                } // y loop
                jsfeat.cache.put_buffer(buf_node);
                jsfeat.cache.put_buffer(cpbuf_node);
                return corners_cnt;
            }
        };
    })();

    global.fast_corners = fast_corners;
    fast_corners.set_threshold(20); // set default

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 *
 * Copyright 2007 Computer Vision Lab,
 * Ecole Polytechnique Federale de Lausanne (EPFL), Switzerland.
 * @author Vincent Lepetit (http://cvlab.epfl.ch/~lepetit)
 */

(function(global) {
    "use strict";
    //

    var yape06 = (function() {
        
        var compute_laplacian = function(src, dst, w, h, Dxx, Dyy) {
            var y=0,x=0,yrow=(Dxx*w)|0,row=yrow;

            for(y = Dxx; y < h - Dxx; ++y, yrow+=w, row = yrow) {
                for(x = w - Dxx; x >= Dxx; --x) {
                    dst[row] = -4 * src[row] + src[row+Dxx] + src[row-Dxx] + src[row+Dyy] + src[row-Dyy];
                    ++row;
                }
            }
        }

        var hessian_min_eigen_value = function(src, off, tr, Dxx, Dyy, Dxy, Dyx) {
            var Ixx = -2 * src[off] + src[off + Dxx] + src[off - Dxx];
            var Iyy = -2 * src[off] + src[off + Dyy] + src[off - Dyy];
            var Ixy = src[off + Dxy] + src[off - Dxy] - src[off + Dyx] - src[off - Dyx];
            var sqrt_delta = ( Math.sqrt(((Ixx - Iyy) * (Ixx - Iyy) + 4 * Ixy * Ixy) ) )|0;

            return Math.min(Math.abs(tr - sqrt_delta), Math.abs(-(tr + sqrt_delta)));
        }

        return {

            laplacian_threshold: 30,
            min_eigen_value_threshold: 25,

            detect: function(src, points) {
                var x=0,y=0;
                var w=src.cols, h=src.rows, srd_d=src.data;
                var Dxx = 5, Dyy = (5 * w)|0;
                var Dxy = (3 + 3 * w)|0, Dyx = (3 - 3 * w)|0;
                var lap_buf = jsfeat.cache.get_buffer((w*h)<<2);
                var laplacian = lap_buf.i32;
                var lv=0, row=0,rowx=0,min_eigen_value=0,pt;
                var number_of_points = 0;
                var lap_thresh = this.laplacian_threshold;
                var eigen_thresh = this.min_eigen_value_threshold;

                x = w*h;
                while(--x>=0) {laplacian[x]=0;}
                compute_laplacian(srd_d, laplacian, w, h, Dxx, Dyy);

                row = (w+1)|0;
                for(y = 1; y < h-1; ++y, row += w) {
                    for(x = 1, rowx=row; x < w-1; ++x, ++rowx) {

                        lv = laplacian[rowx];
                        if ((lv < -lap_thresh &&
                            lv < laplacian[rowx - 1]      && lv < laplacian[rowx + 1] &&
                            lv < laplacian[rowx - w]     && lv < laplacian[rowx + w] &&
                            lv < laplacian[rowx - w - 1] && lv < laplacian[rowx + w - 1] &&
                            lv < laplacian[rowx - w + 1] && lv < laplacian[rowx + w + 1])
                            ||
                            (lv > lap_thresh &&
                            lv > laplacian[rowx - 1]      && lv > laplacian[rowx + 1] &&
                            lv > laplacian[rowx - w]     && lv > laplacian[rowx + w] &&
                            lv > laplacian[rowx - w - 1] && lv > laplacian[rowx + w - 1] &&
                            lv > laplacian[rowx - w + 1] && lv > laplacian[rowx + w + 1])
                            ) {

                            min_eigen_value = hessian_min_eigen_value(srd_d, rowx, lv, Dxx, Dyy, Dxy, Dyx);
                            if (min_eigen_value > eigen_thresh) {
                                pt = points[number_of_points];
                                pt.x = x, pt.y = y, pt.score = min_eigen_value;
                                ++number_of_points;
                                ++x, ++rowx;
                            }
                        }
                    }
                }

                jsfeat.cache.put_buffer(lap_buf);

                return number_of_points;
            }

        };
    })();

    global.yape06 = yape06;

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 *
 * Copyright 2007 Computer Vision Lab,
 * Ecole Polytechnique Federale de Lausanne (EPFL), Switzerland.
 */

(function(global) {
    "use strict";
    //

    var yape = (function() {

        var precompute_directions = function(step, dirs, R) {
            var i = 0;
            var x, y;

            x = R;
            for(y = 0; y < x; y++, i++)
            {
                x = (Math.sqrt((R * R - y * y)) + 0.5)|0;
                dirs[i] = (x + step * y);
            }
            for(x-- ; x < y && x >= 0; x--, i++)
            {
                y = (Math.sqrt((R * R - x * x)) + 0.5)|0;
                dirs[i] = (x + step * y);
            }
            for( ; -x < y; x--, i++)
            {
                y = (Math.sqrt((R * R - x * x)) + 0.5)|0;
                dirs[i] = (x + step * y);
            }
            for(y-- ; y >= 0; y--, i++)
            {
                x = (-Math.sqrt((R * R - y * y)) - 0.5)|0;
                dirs[i] = (x + step * y);
            }
            for(; y > x; y--, i++)
            {
                x = (-Math.sqrt((R * R - y * y)) - 0.5)|0;
                dirs[i] = (x + step * y);
            }
            for(x++ ; x <= 0; x++, i++)
            {
                y = (-Math.sqrt((R * R - x * x)) - 0.5)|0;
                dirs[i] = (x + step * y);
            }
            for( ; x < -y; x++, i++)
            {
                y = (-Math.sqrt((R * R - x * x)) - 0.5)|0;
                dirs[i] = (x + step * y);
            }
            for(y++ ; y < 0; y++, i++)
            {
                x = (Math.sqrt((R * R - y * y)) + 0.5)|0;
                dirs[i] = (x + step * y);
            }

            dirs[i] = dirs[0];
            dirs[i + 1] = dirs[1];
            return i;
        }

        var third_check = function (Sb, off, step) {
            var n = 0;
            if(Sb[off+1]   != 0) n++;
            if(Sb[off-1]   != 0) n++;
            if(Sb[off+step]   != 0) n++;
            if(Sb[off+step+1] != 0) n++;
            if(Sb[off+step-1] != 0) n++;
            if(Sb[off-step]   != 0) n++;
            if(Sb[off-step+1] != 0) n++;
            if(Sb[off-step-1] != 0) n++;

            return n;
        }

        var is_local_maxima = function(p, off, v, step, neighborhood) {
            var x, y;

            if (v > 0) {
                off -= step*neighborhood;
                for (y= -neighborhood; y<=neighborhood; ++y) {
                    for (x= -neighborhood; x<=neighborhood; ++x) {
                        if (p[off+x] > v) return false;
                    }
                    off += step;
                }
            } else {
                off -= step*neighborhood;
                for (y= -neighborhood; y<=neighborhood; ++y) {
                    for (x= -neighborhood; x<=neighborhood; ++x) {
                        if (p[off+x] < v) return false;
                    }
                    off += step;
                }
            }
            return true;
        }

        var perform_one_point = function(I, x, Scores, Im, Ip, dirs, opposite, dirs_nb) {
          var score = 0;
          var a = 0, b = (opposite - 1)|0;
          var A=0, B0=0, B1=0, B2=0;
          var state=0;

          // WE KNOW THAT NOT(A ~ I0 & B1 ~ I0):
          A = I[x+dirs[a]];
          if ((A <= Ip)) {
            if ((A >= Im)) { // A ~ I0
              B0 = I[x+dirs[b]];
              if ((B0 <= Ip)) {
                if ((B0 >= Im)) { Scores[x] = 0; return; }
                else {
                  b++; B1 = I[x+dirs[b]];
                  if ((B1 > Ip)) {
                    b++; B2 = I[x+dirs[b]];
                    if ((B2 > Ip)) state = 3;
                    else if ((B2 < Im)) state = 6;
                    else { Scores[x] = 0; return; } // A ~ I0, B2 ~ I0
                  }
                  else/* if ((B1 < Im))*/ {
                    b++; B2 = I[x+dirs[b]];
                    if ((B2 > Ip)) state = 7;
                    else if ((B2 < Im)) state = 2;
                    else { Scores[x] = 0; return; } // A ~ I0, B2 ~ I0
                  }
                  //else { Scores[x] = 0; return; } // A ~ I0, B1 ~ I0
                }
              }
              else { // B0 < I0
                b++; B1 = I[x+dirs[b]];
                if ((B1 > Ip)) {
                  b++; B2 = I[x+dirs[b]];
                  if ((B2 > Ip)) state = 3;
                  else if ((B2 < Im)) state = 6;
                  else { Scores[x] = 0; return; } // A ~ I0, B2 ~ I0
                }
                else if ((B1 < Im)) {
                  b++; B2 = I[x+dirs[b]];
                  if ((B2 > Ip)) state = 7;
                  else if ((B2 < Im)) state = 2;
                  else { Scores[x] = 0; return; } // A ~ I0, B2 ~ I0
                }
                else { Scores[x] = 0; return; } // A ~ I0, B1 ~ I0
              }
            }
            else { // A > I0
              B0 = I[x+dirs[b]];
              if ((B0 > Ip)) { Scores[x] = 0; return; }
                b++; B1 = I[x+dirs[b]];
              if ((B1 > Ip)) { Scores[x] = 0; return; }
                b++; B2 = I[x+dirs[b]];
              if ((B2 > Ip)) { Scores[x] = 0; return; }
                state = 1;
            }
          }
          else // A < I0
          {
            B0 = I[x+dirs[b]];
            if ((B0 < Im)) { Scores[x] = 0; return; }
              b++; B1 = I[x+dirs[b]];
            if ((B1 < Im)) { Scores[x] = 0; return; }
              b++; B2 = I[x+dirs[b]];
            if ((B2 < Im)) { Scores[x] = 0; return; }
              state = 0;
          }

          for(a = 1; a <= opposite; a++)
          {
            A = I[x+dirs[a]];

            switch(state)
            {
            case 0:
              if ((A > Ip)) {
                B1 = B2; b++; B2 = I[x+dirs[b]];
                if ((B2 < Im)) { Scores[x] = 0; return; }
                  { score -= A + B1; state = 0; break; };
              }
              if ((A < Im)) {
                if ((B1 > Ip)) { Scores[x] = 0; return; }
                  if ((B2 > Ip)) { Scores[x] = 0; return; }
                    B1 = B2; b++; B2 = I[x+dirs[b]];
                if ((B2 > Ip)) { Scores[x] = 0; return; }
                  { score -= A + B1; state = 8; break; };
              } 
              // A ~ I0
              if ((B1 <= Ip)) { Scores[x] = 0; return; }
                if ((B2 <= Ip)) { Scores[x] = 0; return; }
                  B1 = B2; b++; B2 = I[x+dirs[b]];
              if ((B2 > Ip)) { score -= A + B1; state = 3; break; };
              if ((B2 < Im)) { score -= A + B1; state = 6; break; };
              { Scores[x] = 0; return; }

            case 1:
              if ((A < Im)) {
                B1 = B2; b++; B2 = I[x+dirs[b]];
                if ((B2 > Ip)) { Scores[x] = 0; return; }
                  { score -= A + B1; state = 1; break; };
              }
              if ((A > Ip)) {
                if ((B1 < Im)) { Scores[x] = 0; return; }
                  if ((B2 < Im)) { Scores[x] = 0; return; }
                    B1 = B2; b++; B2 = I[x+dirs[b]];
                if ((B2 < Im)) { Scores[x] = 0; return; }
                  { score -= A + B1; state = 9; break; };
              }
              // A ~ I0
              if ((B1 >= Im)) { Scores[x] = 0; return; }
                if ((B2 >= Im)) { Scores[x] = 0; return; }
                  B1 = B2; b++; B2 = I[x+dirs[b]];
              if ((B2 < Im)) { score -= A + B1; state = 2; break; };
              if ((B2 > Ip)) { score -= A + B1; state = 7; break; };
              { Scores[x] = 0; return; }

            case 2:
              if ((A > Ip)) { Scores[x] = 0; return; }
                B1 = B2; b++; B2 = I[x+dirs[b]];
              if ((A < Im))
              {
                if ((B2 > Ip)) { Scores[x] = 0; return; }
                  { score -= A + B1; state = 4; break; };
              } 
              // A ~ I0
              if ((B2 > Ip)) { score -= A + B1; state = 7; break; };
              if ((B2 < Im)) { score -= A + B1; state = 2; break; };
              { Scores[x] = 0; return; } // A ~ I0, B2 ~ I0

            case 3:
              if ((A < Im)) { Scores[x] = 0; return; }
                B1 = B2; b++; B2 = I[x+dirs[b]];
              if ((A > Ip)) {
                if ((B2 < Im)) { Scores[x] = 0; return; }
                  { score -= A + B1; state = 5; break; };
              }
              // A ~ I0
              if ((B2 > Ip)) { score -= A + B1; state = 3; break; };
              if ((B2 < Im)) { score -= A + B1; state = 6; break; };
              { Scores[x] = 0; return; }

            case 4:
              if ((A > Ip)) { Scores[x] = 0; return; }
                if ((A < Im)) {
                  B1 = B2; b++; B2 = I[x+dirs[b]];
                  if ((B2 > Ip)) { Scores[x] = 0; return; }
                    { score -= A + B1; state = 1; break; };
                }
                if ((B2 >= Im)) { Scores[x] = 0; return; }
                  B1 = B2; b++; B2 = I[x+dirs[b]];
                if ((B2 < Im)) { score -= A + B1; state = 2; break; };
                if ((B2 > Ip)) { score -= A + B1; state = 7; break; };
                { Scores[x] = 0; return; }

            case 5:
              if ((A < Im)) { Scores[x] = 0; return; }
                if ((A > Ip)) {
                  B1 = B2; b++; B2 = I[x+dirs[b]];
                  if ((B2 < Im)) { Scores[x] = 0; return; }
                    { score -= A + B1; state = 0; break; };
                }
                // A ~ I0
                if ((B2 <= Ip)) { Scores[x] = 0; return; }
                  B1 = B2; b++; B2 = I[x+dirs[b]];
                if ((B2 > Ip)) { score -= A + B1; state = 3; break; };
                if ((B2 < Im)) { score -= A + B1; state = 6; break; };
                { Scores[x] = 0; return; }

            case 7:
              if ((A > Ip)) { Scores[x] = 0; return; }
                if ((A < Im)) { Scores[x] = 0; return; }
                  B1 = B2; b++; B2 = I[x+dirs[b]];
              // A ~ I0
              if ((B2 > Ip)) { score -= A + B1; state = 3; break; };
              if ((B2 < Im)) { score -= A + B1; state = 6; break; };
              { Scores[x] = 0; return; } // A ~ I0, B2 ~ I0

            case 6:
              if ((A > Ip)) { Scores[x] = 0; return; }
                if ((A < Im)) { Scores[x] = 0; return; }
                  B1 = B2; b++; B2 = I[x+dirs[b]];
              // A ~ I0
              if ((B2 < Im)) { score -= A + B1; state = 2; break; };
              if ((B2 > Ip)) { score -= A + B1; state = 7; break; };
              { Scores[x] = 0; return; } // A ~ I0, B2 ~ I0

            case 8:
              if ((A > Ip)) {
                if ((B2 < Im)) { Scores[x] = 0; return; }
                  B1 = B2; b++; B2 = I[x+dirs[b]];
                if ((B2 < Im)) { Scores[x] = 0; return; }
                  { score -= A + B1; state = 9; break; };
              }
              if ((A < Im)) {
                B1 = B2; b++; B2 = I[x+dirs[b]];
                if ((B2 > Ip)) { Scores[x] = 0; return; }
                  { score -= A + B1; state = 1; break; };
              }
              { Scores[x] = 0; return; }

            case 9:
              if ((A < Im)) {
                if ((B2 > Ip)) { Scores[x] = 0; return; }
                  B1 = B2; b++; B2 = I[x+dirs[b]];
                if ((B2 > Ip)) { Scores[x] = 0; return; }
                  { score -= A + B1; state = 8; break; };
              }
              if ((A > Ip)) {
                B1 = B2; b++; B2 = I[x+dirs[b]];
                if ((B2 < Im)) { Scores[x] = 0; return; }
                  { score -= A + B1; state = 0; break; };
              }
              { Scores[x] = 0; return; }

            default:
              //"PB default";
              break;
            } // switch(state)
          } // for(a...)

          Scores[x] = (score + dirs_nb * I[x]);
        }

        var lev_table_t = (function () {
            function lev_table_t(w, h, r) {
                this.dirs = new Int32Array(1024);
                this.dirs_count = precompute_directions(w, this.dirs, r)|0;
                this.scores = new Int32Array(w*h);
                this.radius = r|0;
            }
            return lev_table_t;
        })();
        
        return {

            level_tables: [],
            tau: 7,

            init: function(width, height, radius, pyramid_levels) {
                if (typeof pyramid_levels === "undefined") { pyramid_levels = 1; }
                var i;
                radius = Math.min(radius, 7);
                radius = Math.max(radius, 3);
                for(i = 0; i < pyramid_levels; ++i) {
                    this.level_tables[i] = new lev_table_t(width>>i, height>>i, radius);
                }
            },

            detect: function(src, points, border) {
                if (typeof border === "undefined") { border = 4; }
                var t = this.level_tables[0];
                var R = t.radius|0, Rm1 = (R-1)|0;
                var dirs = t.dirs;
                var dirs_count = t.dirs_count|0;
                var opposite = dirs_count >> 1;
                var img = src.data, w=src.cols|0, h=src.rows|0,hw=w>>1;
                var scores = t.scores;
                var x=0,y=0,row=0,rowx=0,ip=0,im=0,abs_score=0, score=0;
                var tau = this.tau|0;
                var number_of_points = 0, pt;

                var sx = Math.max(R+1, border)|0;
                var sy = Math.max(R+1, border)|0;
                var ex = Math.min(w-R-2, w-border)|0;
                var ey = Math.min(h-R-2, h-border)|0;

                row = (sy*w+sx)|0;
                for(y = sy; y < ey; ++y, row+=w) {
                    for(x = sx, rowx = row; x < ex; ++x, ++rowx) {
                        ip = img[rowx] + tau, im = img[rowx] - tau;

                        if (im<img[rowx+R] && img[rowx+R]<ip && im<img[rowx-R] && img[rowx-R]<ip) {
                            scores[rowx] = 0;
                        } else {
                            perform_one_point(img, rowx, scores, im, ip, dirs, opposite, dirs_count);
                        }
                    }
                }

                // local maxima
                row = (sy*w+sx)|0;
                for(y = sy; y < ey; ++y, row+=w) {
                    for(x = sx, rowx = row; x < ex; ++x, ++rowx) {
                        score = scores[rowx];
                        abs_score = Math.abs(score);
                        if(abs_score < 5) {
                            // if this pixel is 0, the next one will not be good enough. Skip it.
                            ++x, ++rowx;
                        } else {
                            if(third_check(scores, rowx, w) >= 3 && is_local_maxima(scores, rowx, score, hw, R)) {
                                pt = points[number_of_points];
                                pt.x = x, pt.y = y, pt.score = abs_score;
                                ++number_of_points;

                                x += Rm1, rowx += Rm1;
                            }
                        }
                    }
                }

                return number_of_points;
            }
        };

    })();

    global.yape = yape;

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 *
 * this code is a rewrite from OpenCV's Lucas-Kanade optical flow implementation
 */

(function(global) {
    "use strict";
    //
    var optical_flow_lk = (function() {

        // short link to shar deriv
        var scharr_deriv = jsfeat.imgproc.scharr_derivatives;

        return {
            track: function(prev_pyr, curr_pyr, prev_xy, curr_xy, count, win_size, max_iter, status, eps, min_eigen_threshold) {
                if (typeof max_iter === "undefined") { max_iter = 30; }
                if (typeof status === "undefined") { status = new Uint8Array(count); }
                if (typeof eps === "undefined") { eps = 0.01; }
                if (typeof min_eigen_threshold === "undefined") { min_eigen_threshold = 0.0001; }

                var half_win = (win_size-1)*0.5;
                var win_area = (win_size*win_size)|0;
                var win_area2 = win_area << 1;
                var prev_imgs = prev_pyr.data, next_imgs = curr_pyr.data;
                var img_prev=prev_imgs[0].data,img_next=next_imgs[0].data;
                var w0 = prev_imgs[0].cols, h0 = prev_imgs[0].rows,lw=0,lh=0;

                var iwin_node = jsfeat.cache.get_buffer(win_area<<2);
                var deriv_iwin_node = jsfeat.cache.get_buffer(win_area2<<2);
                var deriv_lev_node = jsfeat.cache.get_buffer((h0*(w0<<1))<<2);

                var deriv_m = new jsfeat.matrix_t(w0, h0, jsfeat.S32C2_t, deriv_lev_node.data);

                var iwin_buf = iwin_node.i32;
                var deriv_iwin = deriv_iwin_node.i32;
                var deriv_lev = deriv_lev_node.i32;

                var dstep=0,src=0,dsrc=0,iptr=0,diptr=0,jptr=0;
                var lev_sc=0.0,prev_x=0.0,prev_y=0.0,next_x=0.0,next_y=0.0;
                var prev_delta_x=0.0,prev_delta_y=0.0,delta_x=0.0,delta_y=0.0;
                var iprev_x=0,iprev_y=0,inext_x=0,inext_y=0;
                var i=0,j=0,x=0,y=0,level=0,ptid=0,iter=0;
                var brd_tl=0,brd_r=0,brd_b=0;
                var a=0.0,b=0.0,b1=0.0,b2=0.0;

                // fixed point math
                var W_BITS14 = 14;
                var W_BITS4 = 14;
                var W_BITS1m5 = W_BITS4 - 5;
                var W_BITS1m51 = (1 << ((W_BITS1m5) - 1));
                var W_BITS14_ = (1 << W_BITS14);
                var W_BITS41 = (1 << ((W_BITS4) - 1));
                var FLT_SCALE = 1.0/(1 << 20);
                var iw00=0,iw01=0,iw10=0,iw11=0,ival=0,ixval=0,iyval=0;
                var A11=0.0,A12=0.0,A22=0.0,D=0.0,min_eig=0.0;

                var FLT_EPSILON = 0.00000011920929;
                eps *= eps;

                // reset status
                for(; i < count; ++i) {
                    status[i] = 1;
                }

                var max_level = (prev_pyr.levels - 1)|0;
                level = max_level;

                for(; level >= 0; --level) {
                    lev_sc = (1.0/(1 << level));
                    lw = w0 >> level;
                    lh = h0 >> level;
                    dstep = lw << 1;
                    img_prev = prev_imgs[level].data;
                    img_next = next_imgs[level].data;
                    
                    brd_r = (lw - win_size)|0;
                    brd_b = (lh - win_size)|0;

                    // calculate level derivatives
                    scharr_deriv(prev_imgs[level], deriv_m);

                    // iterate through points
                    for(ptid = 0; ptid < count; ++ptid) {
                        i = ptid << 1;
                        j = i + 1;
                        prev_x = prev_xy[i]*lev_sc;
                        prev_y = prev_xy[j]*lev_sc;

                        if( level == max_level ) {
                            next_x = prev_x;
                            next_y = prev_y;
                        } else {
                            next_x = curr_xy[i]*2.0;
                            next_y = curr_xy[j]*2.0;
                        }
                        curr_xy[i] = next_x;
                        curr_xy[j] = next_y;

                        prev_x -= half_win;
                        prev_y -= half_win;
                        iprev_x = prev_x|0;
                        iprev_y = prev_y|0;

                        // border check
                        x = (iprev_x <= brd_tl)|(iprev_x >= brd_r)|(iprev_y <= brd_tl)|(iprev_y >= brd_b);
                        if( x != 0 ) {
                            if( level == 0 ) {
                                status[ptid] = 0;
                            }
                            continue;
                        }

                        a = prev_x - iprev_x;
                        b = prev_y - iprev_y;
                        iw00 = (((1.0 - a)*(1.0 - b)*W_BITS14_) + 0.5)|0;
                        iw01 = ((a*(1.0 - b)*W_BITS14_) + 0.5)|0;
                        iw10 = (((1.0 - a)*b*W_BITS14_) + 0.5)|0;
                        iw11 = (W_BITS14_ - iw00 - iw01 - iw10);

                        A11 = 0.0, A12 = 0.0, A22 = 0.0;

                        // extract the patch from the first image, compute covariation matrix of derivatives
                        for( y = 0; y < win_size; ++y ) {
                            src = ( (y + iprev_y)*lw + iprev_x )|0;
                            dsrc = src << 1;

                            iptr = (y*win_size)|0;
                            diptr = iptr << 1;
                            for(x = 0 ; x < win_size; ++x, ++src, ++iptr, dsrc += 2) {
                                ival = ( (img_prev[src])*iw00 + (img_prev[src+1])*iw01 +
                                        (img_prev[src+lw])*iw10 + (img_prev[src+lw+1])*iw11 );
                                ival = (((ival) + W_BITS1m51) >> (W_BITS1m5));

                                ixval = ( deriv_lev[dsrc]*iw00 + deriv_lev[dsrc+2]*iw01 +
                                        deriv_lev[dsrc+dstep]*iw10 + deriv_lev[dsrc+dstep+2]*iw11 );
                                ixval = (((ixval) + W_BITS41) >> (W_BITS4));

                                iyval = ( deriv_lev[dsrc+1]*iw00 + deriv_lev[dsrc+3]*iw01 + deriv_lev[dsrc+dstep+1]*iw10 +
                                        deriv_lev[dsrc+dstep+3]*iw11 );
                                iyval = (((iyval) + W_BITS41) >> (W_BITS4));

                                iwin_buf[iptr] = ival;
                                deriv_iwin[diptr++] = ixval;
                                deriv_iwin[diptr++] = iyval;

                                A11 += ixval*ixval;
                                A12 += ixval*iyval;
                                A22 += iyval*iyval;
                            }
                        }

                        A11 *= FLT_SCALE; A12 *= FLT_SCALE; A22 *= FLT_SCALE;

                        D = A11*A22 - A12*A12;
                        min_eig = (A22 + A11 - Math.sqrt((A11-A22)*(A11-A22) + 4.0*A12*A12)) / win_area2;

                        if( min_eig < min_eigen_threshold || D < FLT_EPSILON )
                        {
                            if( level == 0 ) {
                                status[ptid] = 0;
                            }
                            continue;
                        }

                        D = 1.0/D;

                        next_x -= half_win;
                        next_y -= half_win;
                        prev_delta_x = 0.0;
                        prev_delta_y = 0.0;

                        for( iter = 0; iter < max_iter; ++iter ) {
                            inext_x = next_x|0;
                            inext_y = next_y|0;

                            x = (inext_x <= brd_tl)|(inext_x >= brd_r)|(inext_y <= brd_tl)|(inext_y >= brd_b);
                            if( x != 0 ) {
                                if( level == 0 ) {
                                    status[ptid] = 0;
                                }
                                break;
                            }

                            a = next_x - inext_x;
                            b = next_y - inext_y;
                            iw00 = (((1.0 - a)*(1.0 - b)*W_BITS14_) + 0.5)|0;
                            iw01 = ((a*(1.0 - b)*W_BITS14_) + 0.5)|0;
                            iw10 = (((1.0 - a)*b*W_BITS14_) + 0.5)|0;
                            iw11 = (W_BITS14_ - iw00 - iw01 - iw10);
                            b1 = 0.0, b2 = 0.0;

                            for( y = 0; y < win_size; ++y ) {
                                jptr = ( (y + inext_y)*lw + inext_x )|0;

                                iptr = (y*win_size)|0;
                                diptr = iptr << 1;
                                for( x = 0 ; x < win_size; ++x, ++jptr, ++iptr ) {
                                    ival = ( (img_next[jptr])*iw00 + (img_next[jptr+1])*iw01 +
                                            (img_next[jptr+lw])*iw10 + (img_next[jptr+lw+1])*iw11 );
                                    ival = (((ival) + W_BITS1m51) >> (W_BITS1m5));
                                    ival = (ival - iwin_buf[iptr]);

                                    b1 += ival * deriv_iwin[diptr++];
                                    b2 += ival * deriv_iwin[diptr++];
                                }
                            }

                            b1 *= FLT_SCALE;
                            b2 *= FLT_SCALE;

                            delta_x = ((A12*b2 - A22*b1) * D);
                            delta_y = ((A12*b1 - A11*b2) * D);

                            next_x += delta_x;
                            next_y += delta_y;
                            curr_xy[i] = next_x + half_win;
                            curr_xy[j] = next_y + half_win;

                            if( delta_x*delta_x + delta_y*delta_y <= eps ) {
                                break;
                            }

                            if( iter > 0 && Math.abs(delta_x + prev_delta_x) < 0.01 &&
                                            Math.abs(delta_y + prev_delta_y) < 0.01 ) {
                                curr_xy[i] -= delta_x*0.5;
                                curr_xy[j] -= delta_y*0.5;
                                break;
                            }

                            prev_delta_x = delta_x;
                            prev_delta_y = delta_y;
                        }
                    } // points loop
                } // levels loop

                jsfeat.cache.put_buffer(iwin_node);
                jsfeat.cache.put_buffer(deriv_iwin_node);
                jsfeat.cache.put_buffer(deriv_lev_node);
            }
        };
    })();

    global.optical_flow_lk = optical_flow_lk;

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 *
 * this code is a rewrite from https://github.com/mtschirs/js-objectdetect implementation
 * @author Martin Tschirsich / http://www.tu-darmstadt.de/~m_t
 */

(function(global) {
    "use strict";
    //
    var haar = (function() {

        var _group_func = function(r1, r2) {
            var distance = (r1.width * 0.25 + 0.5)|0;

            return r2.x <= r1.x + distance &&
                   r2.x >= r1.x - distance &&
                   r2.y <= r1.y + distance &&
                   r2.y >= r1.y - distance &&
                   r2.width <= (r1.width * 1.5 + 0.5)|0 &&
                   (r2.width * 1.5 + 0.5)|0 >= r1.width;
        }
        
        return {

            edges_density: 0.07,

            detect_single_scale: function(int_sum, int_sqsum, int_tilted, int_canny_sum, width, height, scale, classifier) {
                var win_w = (classifier.size[0] * scale)|0,
                    win_h = (classifier.size[1] * scale)|0,
                    step_x = (0.5 * scale + 1.5)|0,
                    step_y = step_x;
                var i,j,k,x,y,ex=(width-win_w)|0,ey=(height-win_h)|0;
                var w1=(width+1)|0,edge_dens,mean,variance,std;
                var inv_area = 1.0 / (win_w * win_h);
                var stages,stage,trees,tree,sn,tn,fn,found=true,stage_thresh,stage_sum,tree_sum,feature,features;
                var fi_a,fi_b,fi_c,fi_d,fw,fh;

                var ii_a=0,ii_b=win_w,ii_c=win_h*w1,ii_d=ii_c+win_w;
                var edges_thresh = ((win_w*win_h) * 0xff * this.edges_density)|0;
                // if too much gradient we also can skip
                //var edges_thresh_high = ((win_w*win_h) * 0xff * 0.3)|0;

                var rects = [];
                for(y = 0; y < ey; y += step_y) {
                    ii_a = y * w1;
                    for(x = 0; x < ex; x += step_x, ii_a += step_x) {

                        mean =    int_sum[ii_a] 
                                - int_sum[ii_a+ii_b]
                                - int_sum[ii_a+ii_c]
                                + int_sum[ii_a+ii_d];

                        // canny prune
                        if(int_canny_sum) {
                            edge_dens = (int_canny_sum[ii_a] 
                                        - int_canny_sum[ii_a+ii_b]
                                        - int_canny_sum[ii_a+ii_c]
                                        + int_canny_sum[ii_a+ii_d]);
                            if(edge_dens < edges_thresh || mean < 20) {
                                x += step_x, ii_a += step_x;
                                continue;
                            }
                        }

                        mean *= inv_area;
                        variance = (int_sqsum[ii_a] 
                                    - int_sqsum[ii_a+ii_b]
                                    - int_sqsum[ii_a+ii_c]
                                    + int_sqsum[ii_a+ii_d]) * inv_area - mean * mean;

                        std = variance > 0. ? Math.sqrt(variance) : 1;

                        stages = classifier.complexClassifiers;
                        sn = stages.length;
                        found =  true;
                        for(i = 0; i < sn; ++i) {
                            stage = stages[i];
                            stage_thresh = stage.threshold;
                            trees = stage.simpleClassifiers;
                            tn = trees.length;
                            stage_sum = 0;
                            for(j = 0; j < tn; ++j) {
                                tree = trees[j];
                                tree_sum = 0;
                                features = tree.features;
                                fn = features.length;
                                if(tree.tilted === 1) {
                                    for(k=0; k < fn; ++k) {
                                        feature = features[k];
                                        fi_a = ~~(x + feature[0] * scale) + ~~(y + feature[1] * scale) * w1;
                                        fw = ~~(feature[2] * scale);
                                        fh = ~~(feature[3] * scale);
                                        fi_b = fw * w1;
                                        fi_c =  fh * w1;

                                        tree_sum += (int_tilted[fi_a]
                                                    - int_tilted[fi_a + fw + fi_b]
                                                    - int_tilted[fi_a - fh + fi_c]
                                                    + int_tilted[fi_a + fw - fh + fi_b + fi_c]) * feature[4];
                                    }
                                } else {
                                    for(k=0; k < fn; ++k) {
                                        feature = features[k];
                                        fi_a = ~~(x + feature[0] * scale) + ~~(y + feature[1] * scale) * w1;
                                        fw = ~~(feature[2] * scale);
                                        fh = ~~(feature[3] * scale);
                                        fi_c = fh * w1;

                                        tree_sum += (int_sum[fi_a] 
                                                    - int_sum[fi_a+fw]
                                                    - int_sum[fi_a+fi_c]
                                                    + int_sum[fi_a+fi_c+fw]) * feature[4];
                                    }
                                }
                                stage_sum += (tree_sum * inv_area < tree.threshold * std) ? tree.left_val : tree.right_val;
                            }
                            if (stage_sum < stage_thresh) {
                                found = false;
                                break;
                            }
                        }
                        
                        if(found) {
                            rects.push({"x" : x,
                                        "y" : y,
                                        "width" : win_w,
                                        "height" : win_h,
                                        "neighbor" : 1,
                                        "confidence" : stage_sum});
                            x += step_x, ii_a += step_x;
                        }
                    }
                }
                return rects;
            },

            detect_multi_scale: function(int_sum, int_sqsum, int_tilted, int_canny_sum, width, height, classifier, scale_factor, scale_min) {
                if (typeof scale_factor === "undefined") { scale_factor = 1.2; }
                if (typeof scale_min === "undefined") { scale_min = 1.0; }
                var win_w = classifier.size[0];
                var win_h = classifier.size[1];
                var rects = [];
                while (scale_min * win_w < width && scale_min * win_h < height) {
                    rects = rects.concat(this.detect_single_scale(int_sum, int_sqsum, int_tilted, int_canny_sum, width, height, scale_min, classifier));
                    scale_min *= scale_factor;
                }
                return rects;
            },

            // OpenCV method to group detected rectangles
            group_rectangles: function(rects, min_neighbors) {
                if (typeof min_neighbors === "undefined") { min_neighbors = 1; }
                var i, j, n = rects.length;
                var node = [];
                for (i = 0; i < n; ++i) {
                    node[i] = {"parent" : -1,
                               "element" : rects[i],
                               "rank" : 0};
                }
                for (i = 0; i < n; ++i) {
                    if (!node[i].element)
                        continue;
                    var root = i;
                    while (node[root].parent != -1)
                        root = node[root].parent;
                    for (j = 0; j < n; ++j) {
                        if( i != j && node[j].element && _group_func(node[i].element, node[j].element)) {
                            var root2 = j;

                            while (node[root2].parent != -1)
                                root2 = node[root2].parent;

                            if(root2 != root) {
                                if(node[root].rank > node[root2].rank)
                                    node[root2].parent = root;
                                else {
                                    node[root].parent = root2;
                                    if (node[root].rank == node[root2].rank)
                                    node[root2].rank++;
                                    root = root2;
                                }

                                /* compress path from node2 to the root: */
                                var temp, node2 = j;
                                while (node[node2].parent != -1) {
                                    temp = node2;
                                    node2 = node[node2].parent;
                                    node[temp].parent = root;
                                }

                                /* compress path from node to the root: */
                                node2 = i;
                                while (node[node2].parent != -1) {
                                    temp = node2;
                                    node2 = node[node2].parent;
                                    node[temp].parent = root;
                                }
                            }
                        }
                    }
                }
                var idx_seq = [];
                var class_idx = 0;
                for(i = 0; i < n; i++) {
                    j = -1;
                    var node1 = i;
                    if(node[node1].element) {
                        while (node[node1].parent != -1)
                            node1 = node[node1].parent;
                        if(node[node1].rank >= 0)
                            node[node1].rank = ~class_idx++;
                        j = ~node[node1].rank;
                    }
                    idx_seq[i] = j;
                }
                
                var comps = [];
                for (i = 0; i < class_idx+1; ++i) {
                    comps[i] = {"neighbors" : 0,
                                "x" : 0,
                                "y" : 0,
                                "width" : 0,
                                "height" : 0,
                                "confidence" : 0};
                }

                // count number of neighbors
                for(i = 0; i < n; ++i) {
                    var r1 = rects[i];
                    var idx = idx_seq[i];

                    if (comps[idx].neighbors == 0)
                        comps[idx].confidence = r1.confidence;

                    ++comps[idx].neighbors;

                    comps[idx].x += r1.x;
                    comps[idx].y += r1.y;
                    comps[idx].width += r1.width;
                    comps[idx].height += r1.height;
                    comps[idx].confidence = Math.max(comps[idx].confidence, r1.confidence);
                }

                var seq2 = [];
                // calculate average bounding box
                for(i = 0; i < class_idx; ++i) {
                    n = comps[i].neighbors;
                    if (n >= min_neighbors)
                        seq2.push({"x" : (comps[i].x * 2 + n) / (2 * n),
                                   "y" : (comps[i].y * 2 + n) / (2 * n),
                                   "width" : (comps[i].width * 2 + n) / (2 * n),
                                   "height" : (comps[i].height * 2 + n) / (2 * n),
                                   "neighbors" : comps[i].neighbors,
                                   "confidence" : comps[i].confidence});
                }

                var result_seq = [];
                n = seq2.length;
                // filter out small face rectangles inside large face rectangles
                for(i = 0; i < n; ++i) {
                    var r1 = seq2[i];
                    var flag = true;
                    for(j = 0; j < n; ++j) {
                        var r2 = seq2[j];
                        var distance = (r2.width * 0.25 + 0.5)|0;

                        if(i != j &&
                           r1.x >= r2.x - distance &&
                           r1.y >= r2.y - distance &&
                           r1.x + r1.width <= r2.x + r2.width + distance &&
                           r1.y + r1.height <= r2.y + r2.height + distance &&
                           (r2.neighbors > Math.max(3, r1.neighbors) || r1.neighbors < 3)) {
                            flag = false;
                            break;
                        }
                    }

                    if(flag)
                        result_seq.push(r1);
                }
                return result_seq;
            }
        };

    })();

    global.haar = haar;

})(jsfeat);
/**
 * BBF: Brightness Binary Feature
 *
 * @author Eugene Zatepyakin / http://inspirit.ru/
 *
 * this code is a rewrite from https://github.com/liuliu/ccv implementation
 * @author Liu Liu / http://liuliu.me/
 *
 * The original paper refers to: YEFâˆ— Real-Time Object Detection, Yotam Abramson and Bruno Steux
 */

(function(global) {
    "use strict";
    //
    var bbf = (function() {

        var _group_func = function(r1, r2) {
            var distance = (r1.width * 0.25 + 0.5)|0;

            return r2.x <= r1.x + distance &&
                   r2.x >= r1.x - distance &&
                   r2.y <= r1.y + distance &&
                   r2.y >= r1.y - distance &&
                   r2.width <= (r1.width * 1.5 + 0.5)|0 &&
                   (r2.width * 1.5 + 0.5)|0 >= r1.width;
        }

        var img_pyr = new jsfeat.pyramid_t(1);

        return {

            interval: 4,
            scale: 1.1486,
            next: 5,
            scale_to: 1,

            // make features local copy
            // to avoid array allocation with each scale
            // this is strange but array works faster than Int32 version???
            prepare_cascade: function(cascade) {
                var sn = cascade.stage_classifier.length;
                for (var j = 0; j < sn; j++) {
                    var orig_feature = cascade.stage_classifier[j].feature;
                    var f_cnt = cascade.stage_classifier[j].count;
                    var feature = cascade.stage_classifier[j]._feature = new Array(f_cnt);
                    for (var k = 0; k < f_cnt; k++) {
                        feature[k] = {"size" : orig_feature[k].size,
                                      "px" : new Array(orig_feature[k].size),
                                      "pz" : new Array(orig_feature[k].size),
                                      "nx" : new Array(orig_feature[k].size),
                                      "nz" : new Array(orig_feature[k].size)};
                    }
                }
            },

            build_pyramid: function(src, min_width, min_height, interval) {
                if (typeof interval === "undefined") { interval = 4; }

                var sw=src.cols,sh=src.rows;
                var i=0,nw=0,nh=0;
                var new_pyr=false;
                var src0=src,src1=src;
                var data_type = jsfeat.U8_t | jsfeat.C1_t;

                this.interval = interval;
                this.scale = Math.pow(2, 1 / (this.interval + 1));
                this.next = (this.interval + 1)|0;
                this.scale_to = (Math.log(Math.min(sw / min_width, sh / min_height)) / Math.log(this.scale))|0;

                var pyr_l = ((this.scale_to + this.next * 2) * 4) | 0;
                if(img_pyr.levels != pyr_l) {
                    img_pyr.levels = pyr_l;
                    img_pyr.data = new Array(pyr_l);
                    new_pyr = true;
                    img_pyr.data[0] = src; // first is src
                }

                for (i = 1; i <= this.interval; ++i) {
                    nw = (sw / Math.pow(this.scale, i))|0;
                    nh = (sh / Math.pow(this.scale, i))|0;
                    src0 = img_pyr.data[i<<2];
                    if(new_pyr || nw != src0.cols || nh != src0.rows) {
                        img_pyr.data[i<<2] = new jsfeat.matrix_t(nw, nh, data_type);
                        src0 = img_pyr.data[i<<2];
                    }
                    jsfeat.imgproc.resample(src, src0, nw, nh);
                }
                for (i = this.next; i < this.scale_to + this.next * 2; ++i) {
                    src1 = img_pyr.data[(i << 2) - (this.next << 2)];
                    src0 = img_pyr.data[i<<2];
                    nw = src1.cols >> 1;
                    nh = src1.rows >> 1;
                    if(new_pyr || nw != src0.cols || nh != src0.rows) {
                        img_pyr.data[i<<2] = new jsfeat.matrix_t(nw, nh, data_type);
                        src0 = img_pyr.data[i<<2];
                    }
                    jsfeat.imgproc.pyrdown(src1, src0);
                }
                for (i = this.next * 2; i < this.scale_to + this.next * 2; ++i) {
                    src1 = img_pyr.data[(i << 2) - (this.next << 2)];
                    nw = src1.cols >> 1;
                    nh = src1.rows >> 1;
                    src0 = img_pyr.data[(i<<2)+1];
                    if(new_pyr || nw != src0.cols || nh != src0.rows) {
                        img_pyr.data[(i<<2)+1] = new jsfeat.matrix_t(nw, nh, data_type);
                        src0 = img_pyr.data[(i<<2)+1];
                    }
                    jsfeat.imgproc.pyrdown(src1, src0, 1, 0);
                    //
                    src0 = img_pyr.data[(i<<2)+2];
                    if(new_pyr || nw != src0.cols || nh != src0.rows) {
                        img_pyr.data[(i<<2)+2] = new jsfeat.matrix_t(nw, nh, data_type);
                        src0 = img_pyr.data[(i<<2)+2];
                    }
                    jsfeat.imgproc.pyrdown(src1, src0, 0, 1);
                    //
                    src0 = img_pyr.data[(i<<2)+3];
                    if(new_pyr || nw != src0.cols || nh != src0.rows) {
                        img_pyr.data[(i<<2)+3] = new jsfeat.matrix_t(nw, nh, data_type);
                        src0 = img_pyr.data[(i<<2)+3];
                    }
                    jsfeat.imgproc.pyrdown(src1, src0, 1, 1);
                }
                return img_pyr;
            },

            detect: function(pyramid, cascade) {
                var interval = this.interval;
                var scale = this.scale;
                var next = this.next;
                var scale_upto = this.scale_to;
                var i=0,j=0,k=0,n=0,x=0,y=0,q=0,sn=0,f_cnt=0,q_cnt=0,p=0,pmin=0,nmax=0,f=0,i4=0,qw=0,qh=0;
                var sum=0.0, alpha, feature, orig_feature, feature_k, feature_o, flag = true, shortcut=true;
                var scale_x = 1.0, scale_y = 1.0;
                var dx = [0, 1, 0, 1];
                var dy = [0, 0, 1, 1];
                var seq = [];
                var pyr=pyramid.data, bpp = 1, bpp2 = 2, bpp4 = 4;

                var u8 = [], u8o = [0,0,0];
                var step = [0,0,0];
                var paddings = [0,0,0];

                for (i = 0; i < scale_upto; i++) {
                    i4 = (i<<2);
                    qw = pyr[i4 + (next << 3)].cols - (cascade.width >> 2);
                    qh = pyr[i4 + (next << 3)].rows - (cascade.height >> 2);
                    step[0] = pyr[i4].cols * bpp;
                    step[1] = pyr[i4 + (next << 2)].cols * bpp;
                    step[2] = pyr[i4 + (next << 3)].cols * bpp;
                    paddings[0] = (pyr[i4].cols * bpp4) - (qw * bpp4);
                    paddings[1] = (pyr[i4 + (next << 2)].cols * bpp2) - (qw * bpp2);
                    paddings[2] = (pyr[i4 + (next << 3)].cols * bpp) - (qw * bpp);
                    sn = cascade.stage_classifier.length;
                    for (j = 0; j < sn; j++) {
                        orig_feature = cascade.stage_classifier[j].feature;
                        feature = cascade.stage_classifier[j]._feature;
                        f_cnt = cascade.stage_classifier[j].count;
                        for (k = 0; k < f_cnt; k++) {
                            feature_k = feature[k];
                            feature_o = orig_feature[k];
                            q_cnt = feature_o.size|0;
                            for (q = 0; q < q_cnt; q++) {
                                feature_k.px[q] = (feature_o.px[q] * bpp) + feature_o.py[q] * step[feature_o.pz[q]];
                                feature_k.pz[q] = feature_o.pz[q];
                                feature_k.nx[q] = (feature_o.nx[q] * bpp) + feature_o.ny[q] * step[feature_o.nz[q]];
                                feature_k.nz[q] = feature_o.nz[q];
                            }
                        }
                    }
                    u8[0] = pyr[i4].data; u8[1] = pyr[i4 + (next<<2)].data;
                    for (q = 0; q < 4; q++) {
                        u8[2] = pyr[i4 + (next<<3) + q].data;
                        u8o[0] = (dx[q]*bpp2) + dy[q] * (pyr[i4].cols*bpp2); 
                        u8o[1] = (dx[q]*bpp) + dy[q] * (pyr[i4 + (next<<2)].cols*bpp); 
                        u8o[2] = 0;
                        for (y = 0; y < qh; y++) {
                            for (x = 0; x < qw; x++) {
                                sum = 0;
                                flag = true;
                                sn = cascade.stage_classifier.length;
                                for (j = 0; j < sn; j++) {
                                    sum = 0;
                                    alpha = cascade.stage_classifier[j].alpha;
                                    feature = cascade.stage_classifier[j]._feature;
                                    f_cnt = cascade.stage_classifier[j].count;
                                    for (k = 0; k < f_cnt; k++) {
                                        feature_k = feature[k];
                                        pmin = u8[feature_k.pz[0]][u8o[feature_k.pz[0]] + feature_k.px[0]];
                                        nmax = u8[feature_k.nz[0]][u8o[feature_k.nz[0]] + feature_k.nx[0]];
                                        if (pmin <= nmax) {
                                            sum += alpha[k << 1];
                                        } else {
                                            shortcut = true;
                                            q_cnt = feature_k.size;
                                            for (f = 1; f < q_cnt; f++) {
                                                if (feature_k.pz[f] >= 0) {
                                                    p = u8[feature_k.pz[f]][u8o[feature_k.pz[f]] + feature_k.px[f]];
                                                    if (p < pmin) {
                                                        if (p <= nmax) {
                                                            shortcut = false;
                                                            break;
                                                        }
                                                        pmin = p;
                                                    }
                                                }
                                                if (feature_k.nz[f] >= 0) {
                                                    n = u8[feature_k.nz[f]][u8o[feature_k.nz[f]] + feature_k.nx[f]];
                                                    if (n > nmax) {
                                                        if (pmin <= n) {
                                                            shortcut = false;
                                                            break;
                                                        }
                                                        nmax = n;
                                                    }
                                                }
                                            }
                                            sum += (shortcut) ? alpha[(k << 1) + 1] : alpha[k << 1];
                                        }
                                    }
                                    if (sum < cascade.stage_classifier[j].threshold) {
                                        flag = false;
                                        break;
                                    }
                                }
                                if (flag) {
                                    seq.push({"x" : (x * 4 + dx[q] * 2) * scale_x,
                                              "y" : (y * 4 + dy[q] * 2) * scale_y,
                                              "width" : cascade.width * scale_x,
                                              "height" : cascade.height * scale_y,
                                              "neighbor" : 1,
                                              "confidence" : sum});
                                    ++x;
                                    u8o[0] += bpp4;
                                    u8o[1] += bpp2;
                                    u8o[2] += bpp;
                                }
                                u8o[0] += bpp4;
                                u8o[1] += bpp2;
                                u8o[2] += bpp;
                            }
                            u8o[0] += paddings[0];
                            u8o[1] += paddings[1];
                            u8o[2] += paddings[2];
                        }
                    }
                    scale_x *= scale;
                    scale_y *= scale;
                }

                return seq;
            },

            // OpenCV method to group detected rectangles
            group_rectangles: function(rects, min_neighbors) {
                if (typeof min_neighbors === "undefined") { min_neighbors = 1; }
                var i, j, n = rects.length;
                var node = [];
                for (i = 0; i < n; ++i) {
                    node[i] = {"parent" : -1,
                               "element" : rects[i],
                               "rank" : 0};
                }
                for (i = 0; i < n; ++i) {
                    if (!node[i].element)
                        continue;
                    var root = i;
                    while (node[root].parent != -1)
                        root = node[root].parent;
                    for (j = 0; j < n; ++j) {
                        if( i != j && node[j].element && _group_func(node[i].element, node[j].element)) {
                            var root2 = j;

                            while (node[root2].parent != -1)
                                root2 = node[root2].parent;

                            if(root2 != root) {
                                if(node[root].rank > node[root2].rank)
                                    node[root2].parent = root;
                                else {
                                    node[root].parent = root2;
                                    if (node[root].rank == node[root2].rank)
                                    node[root2].rank++;
                                    root = root2;
                                }

                                /* compress path from node2 to the root: */
                                var temp, node2 = j;
                                while (node[node2].parent != -1) {
                                    temp = node2;
                                    node2 = node[node2].parent;
                                    node[temp].parent = root;
                                }

                                /* compress path from node to the root: */
                                node2 = i;
                                while (node[node2].parent != -1) {
                                    temp = node2;
                                    node2 = node[node2].parent;
                                    node[temp].parent = root;
                                }
                            }
                        }
                    }
                }
                var idx_seq = [];
                var class_idx = 0;
                for(i = 0; i < n; i++) {
                    j = -1;
                    var node1 = i;
                    if(node[node1].element) {
                        while (node[node1].parent != -1)
                            node1 = node[node1].parent;
                        if(node[node1].rank >= 0)
                            node[node1].rank = ~class_idx++;
                        j = ~node[node1].rank;
                    }
                    idx_seq[i] = j;
                }
                
                var comps = [];
                for (i = 0; i < class_idx+1; ++i) {
                    comps[i] = {"neighbors" : 0,
                                "x" : 0,
                                "y" : 0,
                                "width" : 0,
                                "height" : 0,
                                "confidence" : 0};
                }

                // count number of neighbors
                for(i = 0; i < n; ++i) {
                    var r1 = rects[i];
                    var idx = idx_seq[i];

                    if (comps[idx].neighbors == 0)
                        comps[idx].confidence = r1.confidence;

                    ++comps[idx].neighbors;

                    comps[idx].x += r1.x;
                    comps[idx].y += r1.y;
                    comps[idx].width += r1.width;
                    comps[idx].height += r1.height;
                    comps[idx].confidence = Math.max(comps[idx].confidence, r1.confidence);
                }

                var seq2 = [];
                // calculate average bounding box
                for(i = 0; i < class_idx; ++i) {
                    n = comps[i].neighbors;
                    if (n >= min_neighbors)
                        seq2.push({"x" : (comps[i].x * 2 + n) / (2 * n),
                                   "y" : (comps[i].y * 2 + n) / (2 * n),
                                   "width" : (comps[i].width * 2 + n) / (2 * n),
                                   "height" : (comps[i].height * 2 + n) / (2 * n),
                                   "neighbors" : comps[i].neighbors,
                                   "confidence" : comps[i].confidence});
                }

                var result_seq = [];
                n = seq2.length;
                // filter out small face rectangles inside large face rectangles
                for(i = 0; i < n; ++i) {
                    var r1 = seq2[i];
                    var flag = true;
                    for(j = 0; j < n; ++j) {
                        var r2 = seq2[j];
                        var distance = (r2.width * 0.25 + 0.5)|0;

                        if(i != j &&
                           r1.x >= r2.x - distance &&
                           r1.y >= r2.y - distance &&
                           r1.x + r1.width <= r2.x + r2.width + distance &&
                           r1.y + r1.height <= r2.y + r2.height + distance &&
                           (r2.neighbors > Math.max(3, r1.neighbors) || r1.neighbors < 3)) {
                            flag = false;
                            break;
                        }
                    }

                    if(flag)
                        result_seq.push(r1);
                }
                return result_seq;
            }

        };

    })();

    global.bbf = bbf;

})(jsfeat);
/**
 * @author Eugene Zatepyakin / http://inspirit.ru/
 */

(function(lib) {
    "use strict";

    if (typeof module === "undefined" || typeof module.exports === "undefined") {
        // in a browser, define its namespaces in global
        window.jsfeat = lib;
    } else {
        // in commonjs, or when AMD wrapping has been applied, define its namespaces as exports
        module.exports = lib;
    }
})(jsfeat);

});
require.register("jonnor-color-thief/js/color-thief.js", function(exports, require, module){
/*
 * Color Thief v2.0
 * by Lokesh Dhakar - http://www.lokeshdhakar.com
 *
 * License
 * -------
 * Creative Commons Attribution 2.5 License:
 * http://creativecommons.org/licenses/by/2.5/
 *
 * Thanks
 * ------
 * Nick Rabinowitz - For creating quantize.js.
 * John Schulz - For clean up and optimization. @JFSIII
 * Nathan Spady - For adding drag and drop support to the demo page.
 *
 */


/*
  CanvasImage Class
  Class that wraps the html image element and canvas.
  It also simplifies some of the canvas context manipulation
  with a set of helper functions.
*/

var iAmOnNode = false;
if (typeof process !== 'undefined' && process.execPath && process.execPath.indexOf('node') !== -1) {
    iAmOnNode = true;
}
if (iAmOnNode) {
  var Canvas = require('canvas');
  var Image = Canvas.Image;
  var fs = require('fs');
}

var CanvasImage = function (image) {
    // in node we use strings as path to an image
    // whereas in the browser we use an image element
    if (iAmOnNode) {
      this.canvas = new Canvas()
      var img = new Image;

      if(image instanceof Buffer) {
        img.src = image
      }else{
        img.src = fs.readFileSync(image);
      }

    } else {
      this.canvas = document.createElement('canvas');
      document.body.appendChild(this.canvas);
      var img = image;
    }
    
    this.context = this.canvas.getContext('2d');

    this.width  = this.canvas.width  = img.width;
    this.height = this.canvas.height = img.height;

    this.context.drawImage(img, 0, 0, this.width, this.height);
};

CanvasImage.prototype.clear = function () {
    this.context.clearRect(0, 0, this.width, this.height);
};

CanvasImage.prototype.update = function (imageData) {
    this.context.putImageData(imageData, 0, 0);
};

CanvasImage.prototype.getPixelCount = function () {
    return this.width * this.height;
};

CanvasImage.prototype.getImageData = function () {
    return this.context.getImageData(0, 0, this.width, this.height);
};

CanvasImage.prototype.removeCanvas = function () {
  if (this.canvas.parentNode) {
    this.canvas.parentNode.removeChild(this.canvas);
  }
};


var ColorThief = function () {};

/*
 * getColor(sourceImage[, quality])
 * returns {r: num, g: num, b: num}
 *
 * Use the median cut algorithm provided by quantize.js to cluster similar
 * colors and return the base color from the largest cluster.
 *
 * Quality is an optional argument. It needs to be an integer. 0 is the highest quality settings.
 * 10 is the default. There is a trade-off between quality and speed. The bigger the number, the
 * faster a color will be returned but the greater the likelihood that it will not be the visually
 * most dominant color.
 *
 * */
ColorThief.prototype.getColor = function(sourceImage, quality) {
    var palette       = this.getPalette(sourceImage, 5, quality);
    var dominantColor = palette[0];
    return dominantColor;
};


/*
 * getPalette(sourceImage[, colorCount, quality])
 * returns array[ {r: num, g: num, b: num}, {r: num, g: num, b: num}, ...]
 *
 * Use the median cut algorithm provided by quantize.js to cluster similar colors.
 *
 * colorCount determines the size of the palette; the number of colors returned. If not set, it
 * defaults to 10.
 *
 * BUGGY: Function does not always return the requested amount of colors. It can be +/- 2.
 *
 * quality is an optional argument. It needs to be an integer. 0 is the highest quality settings.
 * 10 is the default. There is a trade-off between quality and speed. The bigger the number, the
 * faster the palette generation but the greater the likelihood that colors will be missed.
 *
 *
 */
ColorThief.prototype.getPalette = function(sourceImage, colorCount, quality) {

    if (typeof colorCount === 'undefined') {
        colorCount = 10;
    };
    if (typeof quality === 'undefined') {
        quality = 10;
    };

    // Create custom CanvasImage object
    var image      = new CanvasImage(sourceImage);
    var imageData  = image.getImageData();
    var pixels     = imageData.data;
    var pixelCount = image.getPixelCount();
    var palette    = this.getPaletteFromPixels(pixels, pixelCount, colorCount, quality);

    // Clean up
    image.removeCanvas();

    return palette;
};

/*
 * getPaletteFromPixels(pixels, pixelCount, colorCount, quality)
 * returns array[ {r: num, g: num, b: num}, {r: num, g: num, b: num}, ...]
 *
 * Low-level function that takes pixels and computes color palette.
 * Used by getPalette() and getColor()
 *
 */
ColorThief.prototype.getPaletteFromPixels = function(pixels, pixelCount, colorCount, quality) {

    // Store the RGB values in an array format suitable for quantize function
    var pixelArray = [];
    for (var i = 0, offset, r, g, b, a; i < pixelCount; i = i + quality) {
        offset = i * 4;
        r = pixels[offset + 0];
        g = pixels[offset + 1];
        b = pixels[offset + 2];
        a = pixels[offset + 3];
        // If pixel is mostly opaque and not white
        if (a >= 125) {
            if (!(r > 250 && g > 250 && b > 250)) {
                pixelArray.push([r, g, b]);
            }
        }
    }

    // Send array to quantize function which clusters values
    // using median cut algorithm
    var cmap    = MMCQ.quantize(pixelArray, colorCount);
    var palette = cmap.palette();

    return palette;
}

/*!
 * quantize.js Copyright 2008 Nick Rabinowitz.
 * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
 */

// fill out a couple protovis dependencies
/*!
 * Block below copied from Protovis: http://mbostock.github.com/protovis/
 * Copyright 2010 Stanford Visualization Group
 * Licensed under the BSD License: http://www.opensource.org/licenses/bsd-license.php
 */
if (!pv) {
    var pv = {
        map: function(array, f) {
          var o = {};
          return f
              ? array.map(function(d, i) { o.index = i; return f.call(o, d); })
              : array.slice();
        },
        naturalOrder: function(a, b) {
            return (a < b) ? -1 : ((a > b) ? 1 : 0);
        },
        sum: function(array, f) {
          var o = {};
          return array.reduce(f
              ? function(p, d, i) { o.index = i; return p + f.call(o, d); }
              : function(p, d) { return p + d; }, 0);
        },
        max: function(array, f) {
          return Math.max.apply(null, f ? pv.map(array, f) : array);
        }
    };
}



/**
 * Basic Javascript port of the MMCQ (modified median cut quantization)
 * algorithm from the Leptonica library (http://www.leptonica.com/).
 * Returns a color map you can use to map original pixels to the reduced
 * palette. Still a work in progress.
 *
 * @author Nick Rabinowitz
 * @example

// array of pixels as [R,G,B] arrays
var myPixels = [[190,197,190], [202,204,200], [207,214,210], [211,214,211], [205,207,207]
                // etc
                ];
var maxColors = 4;

var cmap = MMCQ.quantize(myPixels, maxColors);
var newPalette = cmap.palette();
var newPixels = myPixels.map(function(p) {
    return cmap.map(p);
});

 */
var MMCQ = (function() {
    // private constants
    var sigbits = 5,
        rshift = 8 - sigbits,
        maxIterations = 1000,
        fractByPopulations = 0.75;

    // get reduced-space color index for a pixel
    function getColorIndex(r, g, b) {
        return (r << (2 * sigbits)) + (g << sigbits) + b;
    }

    // Simple priority queue
    function PQueue(comparator) {
        var contents = [],
            sorted = false;

        function sort() {
            contents.sort(comparator);
            sorted = true;
        }

        return {
            push: function(o) {
                contents.push(o);
                sorted = false;
            },
            peek: function(index) {
                if (!sorted) sort();
                if (index===undefined) index = contents.length - 1;
                return contents[index];
            },
            pop: function() {
                if (!sorted) sort();
                return contents.pop();
            },
            size: function() {
                return contents.length;
            },
            map: function(f) {
                return contents.map(f);
            },
            debug: function() {
                if (!sorted) sort();
                return contents;
            }
        };
    }

    // 3d color space box
    function VBox(r1, r2, g1, g2, b1, b2, histo) {
        var vbox = this;
        vbox.r1 = r1;
        vbox.r2 = r2;
        vbox.g1 = g1;
        vbox.g2 = g2;
        vbox.b1 = b1;
        vbox.b2 = b2;
        vbox.histo = histo;
    }
    VBox.prototype = {
        volume: function(force) {
            var vbox = this;
            if (!vbox._volume || force) {
                vbox._volume = ((vbox.r2 - vbox.r1 + 1) * (vbox.g2 - vbox.g1 + 1) * (vbox.b2 - vbox.b1 + 1));
            }
            return vbox._volume;
        },
        count: function(force) {
            var vbox = this,
                histo = vbox.histo;
            if (!vbox._count_set || force) {
                var npix = 0,
                    i, j, k;
                for (i = vbox.r1; i <= vbox.r2; i++) {
                    for (j = vbox.g1; j <= vbox.g2; j++) {
                        for (k = vbox.b1; k <= vbox.b2; k++) {
                             var index = getColorIndex(i,j,k);
                             npix += (histo[index] || 0);
                        }
                    }
                }
                vbox._count = npix;
                vbox._count_set = true;
            }
            return vbox._count;
        },
        copy: function() {
            var vbox = this;
            return new VBox(vbox.r1, vbox.r2, vbox.g1, vbox.g2, vbox.b1, vbox.b2, vbox.histo);
        },
        avg: function(force) {
            var vbox = this,
                histo = vbox.histo;
            if (!vbox._avg || force) {
                var ntot = 0,
                    mult = 1 << (8 - sigbits),
                    rsum = 0,
                    gsum = 0,
                    bsum = 0,
                    hval,
                    i, j, k, histoindex;
                for (i = vbox.r1; i <= vbox.r2; i++) {
                    for (j = vbox.g1; j <= vbox.g2; j++) {
                        for (k = vbox.b1; k <= vbox.b2; k++) {
                             histoindex = getColorIndex(i,j,k);
                             hval = histo[histoindex] || 0;
                             ntot += hval;
                             rsum += (hval * (i + 0.5) * mult);
                             gsum += (hval * (j + 0.5) * mult);
                             bsum += (hval * (k + 0.5) * mult);
                        }
                    }
                }
                if (ntot) {
                    vbox._avg = [~~(rsum/ntot), ~~(gsum/ntot), ~~(bsum/ntot)];
                } else {
//                    console.log('empty box');
                    vbox._avg = [
                        ~~(mult * (vbox.r1 + vbox.r2 + 1) / 2),
                        ~~(mult * (vbox.g1 + vbox.g2 + 1) / 2),
                        ~~(mult * (vbox.b1 + vbox.b2 + 1) / 2)
                    ];
                }
            }
            return vbox._avg;
        },
        contains: function(pixel) {
            var vbox = this,
                rval = pixel[0] >> rshift;
                gval = pixel[1] >> rshift;
                bval = pixel[2] >> rshift;
            return (rval >= vbox.r1 && rval <= vbox.r2 &&
                    gval >= vbox.g1 && gval <= vbox.g2 &&
                    bval >= vbox.b1 && bval <= vbox.b2);
        }
    };

    // Color map
    function CMap() {
        this.vboxes = new PQueue(function(a,b) {
            return pv.naturalOrder(
                a.vbox.count()*a.vbox.volume(),
                b.vbox.count()*b.vbox.volume()
            )
        });;
    }
    CMap.prototype = {
        push: function(vbox) {
            this.vboxes.push({
                vbox: vbox,
                color: vbox.avg()
            });
        },
        palette: function() {
            return this.vboxes.map(function(vb) { return vb.color });
        },
        size: function() {
            return this.vboxes.size();
        },
        map: function(color) {
            var vboxes = this.vboxes;
            for (var i=0; i<vboxes.size(); i++) {
                if (vboxes.peek(i).vbox.contains(color)) {
                    return vboxes.peek(i).color;
                }
            }
            return this.nearest(color);
        },
        nearest: function(color) {
            var vboxes = this.vboxes,
                d1, d2, pColor;
            for (var i=0; i<vboxes.size(); i++) {
                d2 = Math.sqrt(
                    Math.pow(color[0] - vboxes.peek(i).color[0], 2) +
                    Math.pow(color[1] - vboxes.peek(i).color[1], 2) +
                    Math.pow(color[2] - vboxes.peek(i).color[2], 2)
                );
                if (d2 < d1 || d1 === undefined) {
                    d1 = d2;
                    pColor = vboxes.peek(i).color;
                }
            }
            return pColor;
        },
        forcebw: function() {
            // XXX: won't  work yet
            var vboxes = this.vboxes;
            vboxes.sort(function(a,b) { return pv.naturalOrder(pv.sum(a.color), pv.sum(b.color) )});

            // force darkest color to black if everything < 5
            var lowest = vboxes[0].color;
            if (lowest[0] < 5 && lowest[1] < 5 && lowest[2] < 5)
                vboxes[0].color = [0,0,0];

            // force lightest color to white if everything > 251
            var idx = vboxes.length-1,
                highest = vboxes[idx].color;
            if (highest[0] > 251 && highest[1] > 251 && highest[2] > 251)
                vboxes[idx].color = [255,255,255];
        }
    };

    // histo (1-d array, giving the number of pixels in
    // each quantized region of color space), or null on error
    function getHisto(pixels) {
        var histosize = 1 << (3 * sigbits),
            histo = new Array(histosize),
            index, rval, gval, bval;
        pixels.forEach(function(pixel) {
            rval = pixel[0] >> rshift;
            gval = pixel[1] >> rshift;
            bval = pixel[2] >> rshift;
            index = getColorIndex(rval, gval, bval);
            histo[index] = (histo[index] || 0) + 1;
        });
        return histo;
    }

    function vboxFromPixels(pixels, histo) {
        var rmin=1000000, rmax=0,
            gmin=1000000, gmax=0,
            bmin=1000000, bmax=0,
            rval, gval, bval;
        // find min/max
        pixels.forEach(function(pixel) {
            rval = pixel[0] >> rshift;
            gval = pixel[1] >> rshift;
            bval = pixel[2] >> rshift;
            if (rval < rmin) rmin = rval;
            else if (rval > rmax) rmax = rval;
            if (gval < gmin) gmin = gval;
            else if (gval > gmax) gmax = gval;
            if (bval < bmin) bmin = bval;
            else if (bval > bmax)  bmax = bval;
        });
        return new VBox(rmin, rmax, gmin, gmax, bmin, bmax, histo);
    }

    function medianCutApply(histo, vbox) {
        if (!vbox.count()) return;

        var rw = vbox.r2 - vbox.r1 + 1,
            gw = vbox.g2 - vbox.g1 + 1,
            bw = vbox.b2 - vbox.b1 + 1,
            maxw = pv.max([rw, gw, bw]);
        // only one pixel, no split
        if (vbox.count() == 1) {
            return [vbox.copy()]
        }
        /* Find the partial sum arrays along the selected axis. */
        var total = 0,
            partialsum = [],
            lookaheadsum = [],
            i, j, k, sum, index;
        if (maxw == rw) {
            for (i = vbox.r1; i <= vbox.r2; i++) {
                sum = 0;
                for (j = vbox.g1; j <= vbox.g2; j++) {
                    for (k = vbox.b1; k <= vbox.b2; k++) {
                        index = getColorIndex(i,j,k);
                        sum += (histo[index] || 0);
                    }
                }
                total += sum;
                partialsum[i] = total;
            }
        }
        else if (maxw == gw) {
            for (i = vbox.g1; i <= vbox.g2; i++) {
                sum = 0;
                for (j = vbox.r1; j <= vbox.r2; j++) {
                    for (k = vbox.b1; k <= vbox.b2; k++) {
                        index = getColorIndex(j,i,k);
                        sum += (histo[index] || 0);
                    }
                }
                total += sum;
                partialsum[i] = total;
            }
        }
        else {  /* maxw == bw */
            for (i = vbox.b1; i <= vbox.b2; i++) {
                sum = 0;
                for (j = vbox.r1; j <= vbox.r2; j++) {
                    for (k = vbox.g1; k <= vbox.g2; k++) {
                        index = getColorIndex(j,k,i);
                        sum += (histo[index] || 0);
                    }
                }
                total += sum;
                partialsum[i] = total;
            }
        }
        partialsum.forEach(function(d,i) {
            lookaheadsum[i] = total-d
        });
        function doCut(color) {
            var dim1 = color + '1',
                dim2 = color + '2',
                left, right, vbox1, vbox2, d2, count2=0;
            for (i = vbox[dim1]; i <= vbox[dim2]; i++) {
                if (partialsum[i] > total / 2) {
                    vbox1 = vbox.copy();
                    vbox2 = vbox.copy();
                    left = i - vbox[dim1];
                    right = vbox[dim2] - i;
                    if (left <= right)
                        d2 = Math.min(vbox[dim2] - 1, ~~(i + right / 2));
                    else d2 = Math.max(vbox[dim1], ~~(i - 1 - left / 2));
                    // avoid 0-count boxes
                    while (!partialsum[d2]) d2++;
                    count2 = lookaheadsum[d2];
                    while (!count2 && partialsum[d2-1]) count2 = lookaheadsum[--d2];
                    // set dimensions
                    vbox1[dim2] = d2;
                    vbox2[dim1] = vbox1[dim2] + 1;
//                    console.log('vbox counts:', vbox.count(), vbox1.count(), vbox2.count());
                    return [vbox1, vbox2];
                }
            }

        }
        // determine the cut planes
        return maxw == rw ? doCut('r') :
            maxw == gw ? doCut('g') :
            doCut('b');
    }

    function quantize(pixels, maxcolors) {
        // short-circuit
        if (!pixels.length || maxcolors < 2 || maxcolors > 256) {
//            console.log('wrong number of maxcolors');
            return false;
        }

        // XXX: check color content and convert to grayscale if insufficient

        var histo = getHisto(pixels),
            histosize = 1 << (3 * sigbits);

        // check that we aren't below maxcolors already
        var nColors = 0;
        histo.forEach(function() { nColors++ });
        if (nColors <= maxcolors) {
            // XXX: generate the new colors from the histo and return
        }

        // get the beginning vbox from the colors
        var vbox = vboxFromPixels(pixels, histo),
            pq = new PQueue(function(a,b) { return pv.naturalOrder(a.count(), b.count()) });
        pq.push(vbox);

        // inner function to do the iteration
        function iter(lh, target) {
            var ncolors = 1,
                niters = 0,
                vbox;
            while (niters < maxIterations) {
                vbox = lh.pop();
                if (!vbox.count())  { /* just put it back */
                    lh.push(vbox);
                    niters++;
                    continue;
                }
                // do the cut
                var vboxes = medianCutApply(histo, vbox),
                    vbox1 = vboxes[0],
                    vbox2 = vboxes[1];

                if (!vbox1) {
//                    console.log("vbox1 not defined; shouldn't happen!");
                    return;
                }
                lh.push(vbox1);
                if (vbox2) {  /* vbox2 can be null */
                    lh.push(vbox2);
                    ncolors++;
                }
                if (ncolors >= target) return;
                if (niters++ > maxIterations) {
//                    console.log("infinite loop; perhaps too few pixels!");
                    return;
                }
            }
        }

        // first set of colors, sorted by population
        iter(pq, fractByPopulations * maxcolors);

        // Re-sort by the product of pixel occupancy times the size in color space.
        var pq2 = new PQueue(function(a,b) {
            return pv.naturalOrder(a.count()*a.volume(), b.count()*b.volume())
        });
        while (pq.size()) {
            pq2.push(pq.pop());
        }

        // next set - generate the median cuts using the (npix * vol) sorting.
        iter(pq2, maxcolors - pq2.size());

        // calculate the actual colors
        var cmap = new CMap();
        while (pq2.size()) {
            cmap.push(pq2.pop());
        }

        return cmap;
    }

    return {
        quantize: quantize
    }
})();


if (typeof module !== 'undefined' && module.exports) {
  module.exports = ColorThief;
}

});
require.register("noflo-noflo-image/index.js", function(exports, require, module){
/*
 * This file can be used for general library features of noflo-image.
 *
 * The library features can be made available as CommonJS modules that the
 * components in this project utilize.
 */

});
require.register("noflo-noflo-image/graphs/UrlToCanvas.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"UrlToCanvas","id":"UrlToCanvas","project":"url2can","environment":{"type":"all"}},"inports":{"url":{"process":"img","port":"url","metadata":{"x":36,"y":360}},"crossorigin":{"process":"img","port":"crossorigin","metadata":{"x":36,"y":400}}},"outports":{"canvas":{"process":"canvas/Draw_n4cqh","port":"canvas","metadata":{"x":828,"y":180}},"error":{"process":"img","port":"error","metadata":{"x":828,"y":504}}},"groups":[],"processes":{"canvas/Draw_n4cqh":{"component":"canvas/Draw","metadata":{"label":"canvas/Draw","x":684,"y":180}},"drawImage":{"component":"canvas/DrawImage","metadata":{"label":"drawImage","x":504,"y":144}},"img":{"component":"image/CreateImage","metadata":{"label":"img","x":180,"y":216}},"canvas":{"component":"canvas/CreateCanvas","metadata":{"label":"canvas","x":504,"y":360}},"w":{"component":"objects/ExtractProperty","metadata":{"label":"w","x":360,"y":360}},"h":{"component":"objects/ExtractProperty","metadata":{"label":"h","x":360,"y":252}},"core/RepeatAsync_u0yan":{"component":"core/RepeatAsync","metadata":{"label":"core/RepeatAsync","x":504,"y":36}}},"connections":[{"src":{"process":"img","port":"image"},"tgt":{"process":"drawImage","port":"image"},"metadata":{}},{"src":{"process":"w","port":"out"},"tgt":{"process":"canvas","port":"width"},"metadata":{}},{"src":{"process":"h","port":"out"},"tgt":{"process":"canvas","port":"height"},"metadata":{}},{"src":{"process":"img","port":"image"},"tgt":{"process":"w","port":"in"},"metadata":{"route":0}},{"src":{"process":"img","port":"image"},"tgt":{"process":"h","port":"in"},"metadata":{"route":0}},{"src":{"process":"drawImage","port":"drawimage"},"tgt":{"process":"canvas/Draw_n4cqh","port":"commands"},"metadata":{}},{"src":{"process":"canvas","port":"canvas"},"tgt":{"process":"canvas/Draw_n4cqh","port":"canvas"},"metadata":{}},{"src":{"process":"img","port":"image"},"tgt":{"process":"core/RepeatAsync_u0yan","port":"in"},"metadata":{"route":0}},{"src":{"process":"core/RepeatAsync_u0yan","port":"out"},"tgt":{"process":"canvas/Draw_n4cqh","port":"tick"},"metadata":{}},{"data":"width","tgt":{"process":"w","port":"key"}},{"data":"height","tgt":{"process":"h","port":"key"}},{"data":{"x":0,"y":0},"tgt":{"process":"drawImage","port":"destpoint"}}]}');
});
require.register("noflo-noflo-image/spec/fixtures/textAnywhere/flickr-3178100324-original_small.jpg.corners.json", function(exports, require, module){
module.exports = JSON.parse('{"corners":[{"x":377,"y":246,"score":32,"level":0},{"x":598,"y":248,"score":56,"level":0},{"x":1276,"y":248,"score":46,"level":0},{"x":1126,"y":249,"score":88,"level":0},{"x":417,"y":250,"score":62,"level":0},{"x":1050,"y":250,"score":67,"level":0},{"x":377,"y":251,"score":200,"level":0},{"x":411,"y":251,"score":120,"level":0},{"x":435,"y":251,"score":44,"level":0},{"x":530,"y":251,"score":94,"level":0},{"x":587,"y":251,"score":78,"level":0},{"x":654,"y":251,"score":104,"level":0},{"x":675,"y":251,"score":58,"level":0},{"x":711,"y":251,"score":126,"level":0},{"x":756,"y":251,"score":109,"level":0},{"x":776,"y":251,"score":82,"level":0},{"x":785,"y":251,"score":32,"level":0},{"x":816,"y":251,"score":113,"level":0},{"x":833,"y":251,"score":60,"level":0},{"x":838,"y":251,"score":35,"level":0},{"x":840,"y":251,"score":38,"level":0},{"x":864,"y":251,"score":30,"level":0},{"x":866,"y":251,"score":58,"level":0},{"x":885,"y":251,"score":28,"level":0},{"x":892,"y":251,"score":48,"level":0},{"x":925,"y":251,"score":108,"level":0},{"x":943,"y":251,"score":43,"level":0},{"x":982,"y":251,"score":124,"level":0},{"x":1000,"y":251,"score":47,"level":0},{"x":1044,"y":251,"score":136,"level":0},{"x":1070,"y":251,"score":107,"level":0},{"x":1120,"y":251,"score":121,"level":0},{"x":1148,"y":251,"score":76,"level":0},{"x":1201,"y":251,"score":133,"level":0},{"x":1223,"y":251,"score":76,"level":0},{"x":1229,"y":251,"score":30,"level":0},{"x":1248,"y":251,"score":26,"level":0},{"x":1270,"y":251,"score":86,"level":0},{"x":1294,"y":251,"score":53,"level":0},{"x":1296,"y":251,"score":76,"level":0},{"x":1340,"y":251,"score":76,"level":0},{"x":1359,"y":251,"score":57,"level":0},{"x":1401,"y":251,"score":63,"level":0},{"x":1421,"y":251,"score":27,"level":0},{"x":1425,"y":251,"score":27,"level":0},{"x":1456,"y":251,"score":50,"level":0},{"x":1476,"y":251,"score":29,"level":0},{"x":1485,"y":251,"score":32,"level":0},{"x":510,"y":252,"score":108,"level":0},{"x":1281,"y":253,"score":35,"level":0},{"x":598,"y":254,"score":56,"level":0},{"x":1348,"y":255,"score":36,"level":0},{"x":664,"y":256,"score":48,"level":0},{"x":721,"y":256,"score":47,"level":0},{"x":992,"y":256,"score":37,"level":0},{"x":1291,"y":256,"score":30,"level":0},{"x":535,"y":257,"score":39,"level":0},{"x":610,"y":257,"score":53,"level":0},{"x":1147,"y":257,"score":52,"level":0},{"x":1155,"y":257,"score":37,"level":0},{"x":1370,"y":257,"score":33,"level":0},{"x":1471,"y":257,"score":26,"level":0},{"x":517,"y":258,"score":26,"level":0},{"x":1124,"y":258,"score":48,"level":0},{"x":416,"y":259,"score":71,"level":0},{"x":670,"y":259,"score":54,"level":0},{"x":1345,"y":259,"score":26,"level":0},{"x":1475,"y":259,"score":26,"level":0},{"x":751,"y":260,"score":30,"level":0},{"x":1070,"y":260,"score":35,"level":0},{"x":445,"y":261,"score":27,"level":0},{"x":599,"y":261,"score":27,"level":0},{"x":662,"y":261,"score":46,"level":0},{"x":792,"y":261,"score":34,"level":0},{"x":818,"y":261,"score":35,"level":0},{"x":1086,"y":261,"score":38,"level":0},{"x":1421,"y":261,"score":46,"level":0},{"x":1490,"y":261,"score":31,"level":0},{"x":519,"y":262,"score":72,"level":0},{"x":532,"y":262,"score":60,"level":0},{"x":989,"y":262,"score":46,"level":0},{"x":1297,"y":262,"score":31,"level":0},{"x":1360,"y":262,"score":54,"level":0},{"x":420,"y":263,"score":36,"level":0},{"x":643,"y":263,"score":43,"level":0},{"x":772,"y":263,"score":29,"level":0},{"x":1050,"y":263,"score":29,"level":0},{"x":1234,"y":263,"score":57,"level":0},{"x":674,"y":264,"score":56,"level":0},{"x":824,"y":264,"score":31,"level":0},{"x":1290,"y":264,"score":42,"level":0},{"x":1382,"y":264,"score":26,"level":0},{"x":778,"y":265,"score":46,"level":0},{"x":1139,"y":265,"score":28,"level":0},{"x":1214,"y":265,"score":45,"level":0},{"x":1373,"y":265,"score":33,"level":0},{"x":1480,"y":265,"score":31,"level":0},{"x":629,"y":266,"score":104,"level":0},{"x":703,"y":266,"score":39,"level":0},{"x":951,"y":266,"score":31,"level":0},{"x":1002,"y":266,"score":40,"level":0},{"x":1152,"y":266,"score":42,"level":0},{"x":530,"y":267,"score":33,"level":0},{"x":622,"y":267,"score":33,"level":0},{"x":1303,"y":267,"score":32,"level":0},{"x":435,"y":268,"score":48,"level":0},{"x":635,"y":268,"score":68,"level":0},{"x":1317,"y":268,"score":39,"level":0},{"x":1378,"y":268,"score":45,"level":0},{"x":1442,"y":268,"score":35,"level":0},{"x":540,"y":269,"score":67,"level":0},{"x":637,"y":269,"score":87,"level":0},{"x":762,"y":269,"score":26,"level":0},{"x":935,"y":269,"score":36,"level":0},{"x":1241,"y":269,"score":35,"level":0},{"x":1269,"y":269,"score":31,"level":0},{"x":697,"y":270,"score":53,"level":0},{"x":707,"y":270,"score":84,"level":0},{"x":836,"y":270,"score":35,"level":0},{"x":1137,"y":270,"score":38,"level":0},{"x":625,"y":271,"score":29,"level":0},{"x":820,"y":271,"score":32,"level":0},{"x":1145,"y":271,"score":26,"level":0},{"x":1163,"y":271,"score":27,"level":0},{"x":1171,"y":271,"score":30,"level":0},{"x":1382,"y":271,"score":35,"level":0},{"x":1426,"y":271,"score":35,"level":0},{"x":1437,"y":271,"score":26,"level":0},{"x":494,"y":272,"score":29,"level":0},{"x":534,"y":272,"score":52,"level":0},{"x":994,"y":272,"score":30,"level":0},{"x":1448,"y":272,"score":28,"level":0},{"x":528,"y":273,"score":97,"level":0},{"x":547,"y":273,"score":33,"level":0},{"x":661,"y":273,"score":27,"level":0},{"x":1022,"y":273,"score":36,"level":0},{"x":1149,"y":273,"score":60,"level":0},{"x":684,"y":274,"score":31,"level":0},{"x":1441,"y":274,"score":27,"level":0},{"x":624,"y":275,"score":85,"level":0},{"x":879,"y":275,"score":36,"level":0},{"x":1078,"y":275,"score":26,"level":0},{"x":428,"y":276,"score":63,"level":0},{"x":721,"y":276,"score":73,"level":0},{"x":938,"y":276,"score":41,"level":0},{"x":1379,"y":276,"score":28,"level":0},{"x":403,"y":277,"score":28,"level":0},{"x":519,"y":277,"score":31,"level":0},{"x":550,"y":277,"score":30,"level":0},{"x":613,"y":277,"score":32,"level":0},{"x":953,"y":277,"score":31,"level":0},{"x":1131,"y":277,"score":28,"level":0},{"x":1292,"y":277,"score":28,"level":0},{"x":1338,"y":277,"score":35,"level":0},{"x":434,"y":278,"score":27,"level":0},{"x":1235,"y":278,"score":32,"level":0},{"x":1302,"y":278,"score":33,"level":0},{"x":1394,"y":278,"score":35,"level":0},{"x":626,"y":279,"score":29,"level":0},{"x":783,"y":279,"score":27,"level":0},{"x":991,"y":279,"score":33,"level":0},{"x":647,"y":280,"score":34,"level":0},{"x":706,"y":280,"score":43,"level":0},{"x":897,"y":280,"score":56,"level":0},{"x":1246,"y":280,"score":55,"level":0},{"x":1340,"y":280,"score":38,"level":0},{"x":1397,"y":280,"score":28,"level":0},{"x":1459,"y":280,"score":46,"level":0},{"x":455,"y":281,"score":35,"level":0},{"x":731,"y":281,"score":30,"level":0},{"x":890,"y":281,"score":36,"level":0},{"x":1141,"y":281,"score":40,"level":0},{"x":1321,"y":281,"score":29,"level":0},{"x":1467,"y":281,"score":38,"level":0},{"x":644,"y":282,"score":30,"level":0},{"x":778,"y":282,"score":42,"level":0},{"x":884,"y":282,"score":33,"level":0},{"x":1087,"y":282,"score":28,"level":0},{"x":1172,"y":283,"score":38,"level":0},{"x":1010,"y":284,"score":26,"level":0},{"x":532,"y":285,"score":56,"level":0},{"x":787,"y":285,"score":58,"level":0},{"x":1302,"y":285,"score":28,"level":0},{"x":1395,"y":285,"score":31,"level":0},{"x":1473,"y":285,"score":44,"level":0},{"x":839,"y":286,"score":34,"level":0},{"x":1260,"y":286,"score":42,"level":0},{"x":1312,"y":286,"score":34,"level":0},{"x":1349,"y":286,"score":34,"level":0},{"x":1398,"y":286,"score":51,"level":0},{"x":628,"y":287,"score":68,"level":0},{"x":776,"y":287,"score":28,"level":0},{"x":1059,"y":287,"score":28,"level":0},{"x":455,"y":288,"score":43,"level":0},{"x":520,"y":288,"score":33,"level":0},{"x":823,"y":288,"score":34,"level":0},{"x":1083,"y":288,"score":30,"level":0},{"x":1161,"y":288,"score":68,"level":0},{"x":1246,"y":288,"score":34,"level":0},{"x":1344,"y":288,"score":36,"level":0},{"x":1407,"y":288,"score":64,"level":0},{"x":722,"y":289,"score":54,"level":0},{"x":1270,"y":289,"score":29,"level":0},{"x":1319,"y":289,"score":43,"level":0},{"x":454,"y":290,"score":35,"level":0},{"x":552,"y":290,"score":102,"level":0},{"x":704,"y":291,"score":48,"level":0},{"x":781,"y":291,"score":54,"level":0},{"x":787,"y":291,"score":26,"level":0},{"x":889,"y":291,"score":29,"level":0},{"x":643,"y":292,"score":102,"level":0},{"x":826,"y":292,"score":28,"level":0},{"x":1422,"y":292,"score":30,"level":0},{"x":1460,"y":292,"score":27,"level":0},{"x":710,"y":293,"score":38,"level":0},{"x":971,"y":293,"score":26,"level":0},{"x":997,"y":293,"score":62,"level":0},{"x":1238,"y":293,"score":38,"level":0},{"x":1331,"y":293,"score":28,"level":0},{"x":1475,"y":293,"score":43,"level":0},{"x":738,"y":294,"score":37,"level":0},{"x":955,"y":294,"score":40,"level":0},{"x":975,"y":294,"score":32,"level":0},{"x":1405,"y":294,"score":53,"level":0},{"x":531,"y":295,"score":38,"level":0},{"x":735,"y":295,"score":47,"level":0},{"x":983,"y":295,"score":40,"level":0},{"x":1257,"y":295,"score":31,"level":0},{"x":1333,"y":295,"score":36,"level":0},{"x":520,"y":296,"score":28,"level":0},{"x":978,"y":296,"score":59,"level":0},{"x":1184,"y":296,"score":47,"level":0},{"x":838,"y":297,"score":32,"level":0},{"x":1008,"y":297,"score":158,"level":0},{"x":1179,"y":297,"score":27,"level":0},{"x":1421,"y":297,"score":47,"level":0},{"x":421,"y":298,"score":70,"level":0},{"x":743,"y":298,"score":53,"level":0},{"x":787,"y":298,"score":112,"level":0},{"x":732,"y":299,"score":37,"level":0},{"x":1089,"y":299,"score":45,"level":0},{"x":1490,"y":299,"score":27,"level":0},{"x":516,"y":300,"score":30,"level":0},{"x":689,"y":300,"score":100,"level":0},{"x":696,"y":300,"score":78,"level":0},{"x":996,"y":300,"score":68,"level":0},{"x":999,"y":300,"score":61,"level":0},{"x":1188,"y":300,"score":40,"level":0},{"x":547,"y":301,"score":41,"level":0},{"x":984,"y":301,"score":64,"level":0},{"x":621,"y":302,"score":84,"level":0},{"x":798,"y":302,"score":77,"level":0},{"x":970,"y":302,"score":29,"level":0},{"x":1238,"y":302,"score":34,"level":0},{"x":1241,"y":302,"score":39,"level":0},{"x":1484,"y":302,"score":32,"level":0},{"x":657,"y":303,"score":28,"level":0},{"x":660,"y":303,"score":28,"level":0},{"x":837,"y":303,"score":26,"level":0},{"x":1086,"y":303,"score":53,"level":0},{"x":1402,"y":303,"score":27,"level":0},{"x":898,"y":304,"score":37,"level":0},{"x":1070,"y":304,"score":48,"level":0},{"x":420,"y":305,"score":68,"level":0},{"x":736,"y":305,"score":26,"level":0},{"x":893,"y":305,"score":27,"level":0},{"x":994,"y":305,"score":61,"level":0},{"x":1178,"y":305,"score":32,"level":0},{"x":614,"y":306,"score":37,"level":0},{"x":922,"y":306,"score":31,"level":0},{"x":1362,"y":306,"score":42,"level":0},{"x":440,"y":307,"score":76,"level":0},{"x":747,"y":307,"score":28,"level":0},{"x":1284,"y":307,"score":28,"level":0},{"x":1426,"y":307,"score":42,"level":0},{"x":730,"y":308,"score":60,"level":0},{"x":1123,"y":308,"score":26,"level":0},{"x":1174,"y":308,"score":72,"level":0},{"x":1180,"y":308,"score":40,"level":0},{"x":1480,"y":308,"score":36,"level":0},{"x":517,"y":309,"score":47,"level":0},{"x":915,"y":309,"score":52,"level":0},{"x":1270,"y":309,"score":39,"level":0},{"x":1279,"y":309,"score":36,"level":0},{"x":525,"y":310,"score":30,"level":0},{"x":966,"y":310,"score":29,"level":0},{"x":1002,"y":310,"score":62,"level":0},{"x":1197,"y":310,"score":32,"level":0},{"x":396,"y":311,"score":26,"level":0},{"x":432,"y":311,"score":34,"level":0},{"x":499,"y":311,"score":27,"level":0},{"x":623,"y":311,"score":91,"level":0},{"x":1075,"y":311,"score":29,"level":0},{"x":1413,"y":311,"score":43,"level":0},{"x":526,"y":312,"score":35,"level":0},{"x":1348,"y":312,"score":35,"level":0},{"x":1431,"y":312,"score":60,"level":0},{"x":426,"y":313,"score":100,"level":0},{"x":1013,"y":313,"score":34,"level":0},{"x":1295,"y":313,"score":37,"level":0},{"x":560,"y":314,"score":26,"level":0},{"x":997,"y":314,"score":34,"level":0},{"x":1164,"y":314,"score":43,"level":0},{"x":1433,"y":314,"score":49,"level":0},{"x":410,"y":315,"score":27,"level":0},{"x":533,"y":315,"score":58,"level":0},{"x":1270,"y":315,"score":53,"level":0},{"x":1280,"y":315,"score":26,"level":0},{"x":522,"y":316,"score":38,"level":0},{"x":792,"y":316,"score":49,"level":0},{"x":1181,"y":316,"score":53,"level":0},{"x":1201,"y":316,"score":54,"level":0},{"x":679,"y":317,"score":42,"level":0},{"x":745,"y":317,"score":33,"level":0},{"x":914,"y":317,"score":71,"level":0},{"x":436,"y":318,"score":58,"level":0},{"x":722,"y":318,"score":33,"level":0},{"x":1007,"y":318,"score":39,"level":0},{"x":1104,"y":318,"score":29,"level":0},{"x":1207,"y":318,"score":36,"level":0},{"x":400,"y":319,"score":28,"level":0},{"x":545,"y":319,"score":51,"level":0},{"x":863,"y":319,"score":35,"level":0},{"x":908,"y":319,"score":36,"level":0},{"x":987,"y":319,"score":51,"level":0},{"x":1070,"y":319,"score":34,"level":0},{"x":1169,"y":319,"score":27,"level":0},{"x":417,"y":320,"score":54,"level":0},{"x":745,"y":320,"score":35,"level":0},{"x":782,"y":320,"score":30,"level":0},{"x":994,"y":320,"score":33,"level":0},{"x":727,"y":321,"score":109,"level":0},{"x":1003,"y":321,"score":35,"level":0},{"x":1197,"y":321,"score":77,"level":0},{"x":1279,"y":321,"score":68,"level":0},{"x":1444,"y":321,"score":43,"level":0},{"x":410,"y":322,"score":44,"level":0},{"x":464,"y":322,"score":32,"level":0},{"x":478,"y":322,"score":50,"level":0},{"x":631,"y":322,"score":26,"level":0},{"x":1199,"y":322,"score":77,"level":0},{"x":1047,"y":323,"score":28,"level":0},{"x":1360,"y":323,"score":32,"level":0},{"x":475,"y":324,"score":30,"level":0},{"x":854,"y":324,"score":40,"level":0},{"x":911,"y":324,"score":73,"level":0},{"x":1102,"y":324,"score":36,"level":0},{"x":1201,"y":324,"score":39,"level":0},{"x":1437,"y":324,"score":28,"level":0},{"x":1448,"y":324,"score":36,"level":0},{"x":469,"y":325,"score":52,"level":0},{"x":681,"y":325,"score":63,"level":0},{"x":787,"y":325,"score":28,"level":0},{"x":801,"y":325,"score":42,"level":0},{"x":1007,"y":325,"score":31,"level":0},{"x":1193,"y":325,"score":52,"level":0},{"x":1212,"y":325,"score":40,"level":0},{"x":1274,"y":325,"score":26,"level":0},{"x":1450,"y":325,"score":41,"level":0},{"x":480,"y":326,"score":39,"level":0},{"x":612,"y":326,"score":28,"level":0},{"x":636,"y":326,"score":46,"level":0},{"x":729,"y":326,"score":33,"level":0},{"x":743,"y":326,"score":70,"level":0},{"x":826,"y":326,"score":29,"level":0},{"x":862,"y":326,"score":60,"level":0},{"x":918,"y":326,"score":126,"level":0},{"x":1095,"y":326,"score":46,"level":0},{"x":1282,"y":326,"score":27,"level":0},{"x":1440,"y":326,"score":29,"level":0},{"x":1473,"y":326,"score":36,"level":0},{"x":554,"y":327,"score":42,"level":0},{"x":849,"y":327,"score":30,"level":0},{"x":889,"y":327,"score":46,"level":0},{"x":996,"y":327,"score":27,"level":0},{"x":1108,"y":327,"score":27,"level":0},{"x":1185,"y":327,"score":28,"level":0},{"x":1293,"y":327,"score":55,"level":0},{"x":1376,"y":327,"score":47,"level":0},{"x":548,"y":328,"score":112,"level":0},{"x":725,"y":328,"score":30,"level":0},{"x":821,"y":328,"score":36,"level":0},{"x":872,"y":328,"score":54,"level":0},{"x":1320,"y":328,"score":31,"level":0},{"x":1454,"y":328,"score":34,"level":0},{"x":464,"y":329,"score":66,"level":0},{"x":618,"y":329,"score":55,"level":0},{"x":814,"y":329,"score":36,"level":0},{"x":1026,"y":329,"score":32,"level":0},{"x":1062,"y":329,"score":28,"level":0},{"x":1185,"y":329,"score":30,"level":0},{"x":1217,"y":329,"score":62,"level":0},{"x":1346,"y":329,"score":27,"level":0},{"x":1456,"y":329,"score":41,"level":0},{"x":554,"y":330,"score":26,"level":0},{"x":927,"y":330,"score":44,"level":0},{"x":966,"y":330,"score":30,"level":0},{"x":1088,"y":330,"score":27,"level":0},{"x":1102,"y":330,"score":130,"level":0},{"x":1308,"y":330,"score":54,"level":0},{"x":801,"y":331,"score":55,"level":0},{"x":934,"y":331,"score":55,"level":0},{"x":1140,"y":331,"score":30,"level":0},{"x":1278,"y":331,"score":26,"level":0},{"x":1382,"y":331,"score":52,"level":0},{"x":1019,"y":332,"score":30,"level":0},{"x":1108,"y":332,"score":45,"level":0},{"x":1126,"y":332,"score":36,"level":0},{"x":1213,"y":332,"score":82,"level":0},{"x":1253,"y":332,"score":34,"level":0},{"x":863,"y":333,"score":42,"level":0},{"x":871,"y":333,"score":26,"level":0},{"x":919,"y":333,"score":32,"level":0},{"x":1001,"y":333,"score":28,"level":0},{"x":1219,"y":333,"score":63,"level":0},{"x":415,"y":334,"score":29,"level":0},{"x":731,"y":334,"score":31,"level":0},{"x":1115,"y":334,"score":84,"level":0},{"x":1133,"y":334,"score":32,"level":0},{"x":1202,"y":334,"score":29,"level":0},{"x":1338,"y":334,"score":35,"level":0},{"x":1464,"y":334,"score":37,"level":0},{"x":925,"y":335,"score":104,"level":0},{"x":1315,"y":335,"score":32,"level":0},{"x":1377,"y":335,"score":32,"level":0},{"x":1140,"y":336,"score":26,"level":0},{"x":1156,"y":336,"score":32,"level":0},{"x":1444,"y":336,"score":26,"level":0},{"x":1467,"y":336,"score":44,"level":0},{"x":879,"y":337,"score":35,"level":0},{"x":1108,"y":337,"score":59,"level":0},{"x":1127,"y":337,"score":28,"level":0},{"x":1143,"y":337,"score":30,"level":0},{"x":1489,"y":337,"score":32,"level":0},{"x":458,"y":338,"score":78,"level":0},{"x":907,"y":338,"score":28,"level":0},{"x":1146,"y":338,"score":39,"level":0},{"x":1326,"y":338,"score":53,"level":0},{"x":530,"y":339,"score":34,"level":0},{"x":1263,"y":339,"score":32,"level":0},{"x":1300,"y":339,"score":63,"level":0},{"x":393,"y":340,"score":54,"level":0},{"x":456,"y":340,"score":60,"level":0},{"x":747,"y":340,"score":35,"level":0},{"x":1013,"y":340,"score":49,"level":0},{"x":1136,"y":340,"score":39,"level":0},{"x":1152,"y":340,"score":65,"level":0},{"x":1222,"y":340,"score":32,"level":0},{"x":1342,"y":340,"score":37,"level":0},{"x":1388,"y":340,"score":29,"level":0},{"x":601,"y":341,"score":67,"level":0},{"x":832,"y":341,"score":34,"level":0},{"x":891,"y":341,"score":66,"level":0},{"x":1156,"y":341,"score":32,"level":0},{"x":1324,"y":341,"score":33,"level":0},{"x":665,"y":342,"score":29,"level":0},{"x":1160,"y":342,"score":55,"level":0},{"x":1211,"y":342,"score":43,"level":0},{"x":1315,"y":342,"score":48,"level":0},{"x":1400,"y":342,"score":74,"level":0},{"x":776,"y":343,"score":32,"level":0},{"x":817,"y":343,"score":28,"level":0},{"x":947,"y":343,"score":34,"level":0},{"x":1121,"y":343,"score":38,"level":0},{"x":1147,"y":343,"score":28,"level":0},{"x":1164,"y":343,"score":55,"level":0},{"x":460,"y":344,"score":37,"level":0},{"x":480,"y":344,"score":28,"level":0},{"x":721,"y":344,"score":27,"level":0},{"x":1014,"y":344,"score":44,"level":0},{"x":1226,"y":344,"score":28,"level":0},{"x":457,"y":345,"score":64,"level":0},{"x":1086,"y":345,"score":34,"level":0},{"x":1254,"y":345,"score":46,"level":0},{"x":1273,"y":345,"score":26,"level":0},{"x":1300,"y":345,"score":41,"level":0},{"x":1395,"y":345,"score":43,"level":0},{"x":686,"y":346,"score":34,"level":0},{"x":1297,"y":346,"score":35,"level":0},{"x":1310,"y":346,"score":53,"level":0},{"x":1344,"y":346,"score":28,"level":0},{"x":1436,"y":346,"score":26,"level":0},{"x":453,"y":347,"score":26,"level":0},{"x":1126,"y":347,"score":29,"level":0},{"x":1159,"y":347,"score":68,"level":0},{"x":1176,"y":347,"score":44,"level":0},{"x":1178,"y":347,"score":28,"level":0},{"x":1208,"y":347,"score":38,"level":0},{"x":408,"y":348,"score":27,"level":0},{"x":1010,"y":348,"score":40,"level":0},{"x":1314,"y":348,"score":119,"level":0},{"x":1478,"y":348,"score":60,"level":0},{"x":377,"y":349,"score":53,"level":0},{"x":447,"y":349,"score":30,"level":0},{"x":596,"y":349,"score":32,"level":0},{"x":673,"y":349,"score":49,"level":0},{"x":681,"y":349,"score":46,"level":0},{"x":859,"y":349,"score":26,"level":0},{"x":1248,"y":349,"score":66,"level":0},{"x":1490,"y":349,"score":39,"level":0},{"x":444,"y":350,"score":47,"level":0},{"x":761,"y":350,"score":54,"level":0},{"x":962,"y":350,"score":28,"level":0},{"x":1170,"y":350,"score":27,"level":0},{"x":1188,"y":350,"score":30,"level":0},{"x":1265,"y":350,"score":39,"level":0},{"x":1267,"y":350,"score":26,"level":0},{"x":1292,"y":350,"score":76,"level":0},{"x":441,"y":351,"score":26,"level":0},{"x":521,"y":351,"score":26,"level":0},{"x":707,"y":351,"score":36,"level":0},{"x":1230,"y":351,"score":28,"level":0},{"x":1235,"y":351,"score":34,"level":0},{"x":1277,"y":351,"score":32,"level":0},{"x":1328,"y":351,"score":27,"level":0},{"x":945,"y":352,"score":56,"level":0},{"x":1148,"y":352,"score":45,"level":0},{"x":1178,"y":352,"score":41,"level":0},{"x":1192,"y":352,"score":78,"level":0},{"x":1321,"y":352,"score":37,"level":0},{"x":1402,"y":352,"score":74,"level":0},{"x":756,"y":353,"score":48,"level":0},{"x":947,"y":353,"score":41,"level":0},{"x":1104,"y":353,"score":46,"level":0},{"x":382,"y":354,"score":40,"level":0},{"x":835,"y":354,"score":52,"level":0},{"x":1015,"y":354,"score":59,"level":0},{"x":1215,"y":354,"score":44,"level":0},{"x":1339,"y":354,"score":31,"level":0},{"x":420,"y":355,"score":64,"level":0},{"x":759,"y":355,"score":37,"level":0},{"x":767,"y":355,"score":42,"level":0},{"x":845,"y":355,"score":32,"level":0},{"x":893,"y":355,"score":79,"level":0},{"x":939,"y":355,"score":50,"level":0},{"x":948,"y":355,"score":42,"level":0},{"x":1031,"y":355,"score":80,"level":0},{"x":1143,"y":355,"score":64,"level":0},{"x":1189,"y":355,"score":80,"level":0},{"x":1245,"y":355,"score":48,"level":0},{"x":1257,"y":355,"score":59,"level":0},{"x":1124,"y":356,"score":28,"level":0},{"x":1231,"y":356,"score":28,"level":0},{"x":1325,"y":356,"score":53,"level":0},{"x":889,"y":357,"score":58,"level":0},{"x":940,"y":357,"score":59,"level":0},{"x":1164,"y":357,"score":29,"level":0},{"x":1239,"y":357,"score":44,"level":0},{"x":1313,"y":357,"score":45,"level":0},{"x":671,"y":358,"score":42,"level":0},{"x":700,"y":358,"score":28,"level":0},{"x":715,"y":358,"score":26,"level":0},{"x":852,"y":358,"score":39,"level":0},{"x":384,"y":359,"score":28,"level":0},{"x":682,"y":359,"score":100,"level":0},{"x":774,"y":359,"score":92,"level":0},{"x":858,"y":359,"score":26,"level":0},{"x":960,"y":359,"score":34,"level":0},{"x":1103,"y":359,"score":45,"level":0},{"x":1141,"y":359,"score":118,"level":0},{"x":511,"y":360,"score":47,"level":0},{"x":767,"y":360,"score":44,"level":0},{"x":902,"y":360,"score":125,"level":0},{"x":1083,"y":360,"score":138,"level":0},{"x":1265,"y":360,"score":41,"level":0},{"x":1304,"y":360,"score":32,"level":0},{"x":1332,"y":360,"score":56,"level":0},{"x":1372,"y":360,"score":30,"level":0},{"x":752,"y":361,"score":30,"level":0},{"x":759,"y":361,"score":38,"level":0},{"x":793,"y":361,"score":41,"level":0},{"x":1152,"y":361,"score":29,"level":0},{"x":1216,"y":361,"score":38,"level":0},{"x":1377,"y":361,"score":31,"level":0},{"x":423,"y":362,"score":120,"level":0},{"x":791,"y":362,"score":57,"level":0},{"x":871,"y":362,"score":41,"level":0},{"x":878,"y":362,"score":27,"level":0},{"x":1237,"y":362,"score":27,"level":0},{"x":1243,"y":362,"score":95,"level":0},{"x":1333,"y":362,"score":74,"level":0},{"x":1339,"y":362,"score":179,"level":0},{"x":1419,"y":362,"score":47,"level":0},{"x":1444,"y":362,"score":29,"level":0},{"x":876,"y":363,"score":60,"level":0},{"x":887,"y":363,"score":40,"level":0},{"x":890,"y":363,"score":26,"level":0},{"x":1018,"y":363,"score":32,"level":0},{"x":1276,"y":363,"score":32,"level":0},{"x":1314,"y":363,"score":34,"level":0},{"x":1407,"y":363,"score":26,"level":0},{"x":1414,"y":363,"score":84,"level":0},{"x":1417,"y":363,"score":73,"level":0},{"x":1433,"y":363,"score":32,"level":0},{"x":418,"y":364,"score":53,"level":0},{"x":698,"y":364,"score":100,"level":0},{"x":812,"y":364,"score":33,"level":0},{"x":1075,"y":364,"score":54,"level":0},{"x":1106,"y":364,"score":33,"level":0},{"x":1262,"y":364,"score":26,"level":0},{"x":1328,"y":364,"score":60,"level":0},{"x":779,"y":365,"score":34,"level":0},{"x":883,"y":365,"score":30,"level":0},{"x":958,"y":365,"score":61,"level":0},{"x":1030,"y":365,"score":45,"level":0},{"x":1183,"y":365,"score":28,"level":0},{"x":1225,"y":365,"score":41,"level":0},{"x":1322,"y":365,"score":41,"level":0},{"x":1428,"y":365,"score":29,"level":0},{"x":530,"y":366,"score":34,"level":0},{"x":759,"y":366,"score":53,"level":0},{"x":773,"y":366,"score":31,"level":0},{"x":906,"y":366,"score":34,"level":0},{"x":947,"y":366,"score":30,"level":0},{"x":1017,"y":366,"score":58,"level":0},{"x":1125,"y":366,"score":28,"level":0},{"x":1163,"y":366,"score":66,"level":0},{"x":1180,"y":366,"score":32,"level":0},{"x":1239,"y":366,"score":36,"level":0},{"x":492,"y":367,"score":40,"level":0},{"x":703,"y":367,"score":42,"level":0},{"x":803,"y":367,"score":89,"level":0},{"x":1030,"y":367,"score":45,"level":0},{"x":1080,"y":367,"score":110,"level":0},{"x":1130,"y":367,"score":33,"level":0},{"x":1231,"y":367,"score":26,"level":0},{"x":678,"y":368,"score":26,"level":0},{"x":740,"y":368,"score":36,"level":0},{"x":794,"y":368,"score":149,"level":0},{"x":863,"y":368,"score":32,"level":0},{"x":1243,"y":368,"score":66,"level":0},{"x":1273,"y":368,"score":39,"level":0},{"x":1384,"y":368,"score":30,"level":0},{"x":616,"y":369,"score":44,"level":0},{"x":878,"y":369,"score":69,"level":0},{"x":963,"y":369,"score":48,"level":0},{"x":1112,"y":369,"score":28,"level":0},{"x":1231,"y":369,"score":27,"level":0},{"x":1402,"y":369,"score":61,"level":0},{"x":823,"y":370,"score":36,"level":0},{"x":1095,"y":370,"score":30,"level":0},{"x":1145,"y":370,"score":44,"level":0},{"x":1167,"y":370,"score":27,"level":0},{"x":1309,"y":370,"score":30,"level":0},{"x":1340,"y":370,"score":29,"level":0},{"x":1386,"y":370,"score":40,"level":0},{"x":1418,"y":370,"score":37,"level":0},{"x":430,"y":371,"score":29,"level":0},{"x":945,"y":371,"score":47,"level":0},{"x":1225,"y":371,"score":36,"level":0},{"x":1327,"y":371,"score":74,"level":0},{"x":1468,"y":371,"score":33,"level":0},{"x":523,"y":372,"score":80,"level":0},{"x":682,"y":372,"score":73,"level":0},{"x":1169,"y":372,"score":40,"level":0},{"x":1270,"y":372,"score":44,"level":0},{"x":1285,"y":372,"score":28,"level":0},{"x":1321,"y":372,"score":47,"level":0},{"x":1409,"y":372,"score":37,"level":0},{"x":1426,"y":372,"score":31,"level":0},{"x":457,"y":373,"score":32,"level":0},{"x":886,"y":373,"score":34,"level":0},{"x":896,"y":373,"score":30,"level":0},{"x":1176,"y":373,"score":40,"level":0},{"x":1341,"y":373,"score":54,"level":0},{"x":809,"y":374,"score":40,"level":0},{"x":1014,"y":374,"score":32,"level":0},{"x":1029,"y":374,"score":32,"level":0},{"x":1337,"y":374,"score":30,"level":0},{"x":1350,"y":374,"score":26,"level":0},{"x":1398,"y":374,"score":140,"level":0},{"x":1406,"y":374,"score":70,"level":0},{"x":434,"y":375,"score":45,"level":0},{"x":566,"y":375,"score":36,"level":0},{"x":801,"y":375,"score":35,"level":0},{"x":1003,"y":375,"score":33,"level":0},{"x":1276,"y":375,"score":28,"level":0},{"x":504,"y":376,"score":37,"level":0},{"x":622,"y":376,"score":32,"level":0},{"x":664,"y":376,"score":28,"level":0},{"x":751,"y":376,"score":54,"level":0},{"x":828,"y":376,"score":42,"level":0},{"x":1246,"y":376,"score":27,"level":0},{"x":1465,"y":376,"score":69,"level":0},{"x":532,"y":377,"score":28,"level":0},{"x":1145,"y":377,"score":36,"level":0},{"x":1349,"y":377,"score":32,"level":0},{"x":1421,"y":377,"score":34,"level":0},{"x":429,"y":378,"score":47,"level":0},{"x":523,"y":378,"score":29,"level":0},{"x":661,"y":378,"score":42,"level":0},{"x":863,"y":378,"score":28,"level":0},{"x":1078,"y":378,"score":47,"level":0},{"x":1152,"y":378,"score":33,"level":0},{"x":1184,"y":378,"score":36,"level":0},{"x":1325,"y":378,"score":36,"level":0},{"x":1334,"y":378,"score":57,"level":0},{"x":1403,"y":378,"score":73,"level":0},{"x":611,"y":379,"score":74,"level":0},{"x":883,"y":379,"score":56,"level":0},{"x":1272,"y":379,"score":44,"level":0},{"x":1343,"y":379,"score":33,"level":0},{"x":1356,"y":379,"score":26,"level":0},{"x":1395,"y":379,"score":30,"level":0},{"x":520,"y":380,"score":30,"level":0},{"x":605,"y":380,"score":68,"level":0},{"x":685,"y":380,"score":49,"level":0},{"x":1109,"y":380,"score":29,"level":0},{"x":1183,"y":380,"score":34,"level":0},{"x":1406,"y":380,"score":47,"level":0},{"x":551,"y":381,"score":33,"level":0},{"x":583,"y":381,"score":34,"level":0},{"x":750,"y":381,"score":27,"level":0},{"x":952,"y":381,"score":51,"level":0},{"x":1337,"y":381,"score":74,"level":0},{"x":1379,"y":381,"score":46,"level":0},{"x":378,"y":382,"score":26,"level":0},{"x":607,"y":382,"score":58,"level":0},{"x":810,"y":382,"score":31,"level":0},{"x":909,"y":382,"score":27,"level":0},{"x":1278,"y":382,"score":50,"level":0},{"x":1283,"y":382,"score":38,"level":0},{"x":509,"y":383,"score":32,"level":0},{"x":572,"y":383,"score":41,"level":0},{"x":664,"y":383,"score":28,"level":0},{"x":888,"y":383,"score":40,"level":0},{"x":1004,"y":383,"score":33,"level":0},{"x":1154,"y":383,"score":29,"level":0},{"x":1162,"y":383,"score":26,"level":0},{"x":1223,"y":383,"score":30,"level":0},{"x":1332,"y":383,"score":59,"level":0},{"x":1401,"y":383,"score":41,"level":0},{"x":1411,"y":383,"score":29,"level":0},{"x":431,"y":384,"score":74,"level":0},{"x":616,"y":384,"score":54,"level":0},{"x":1075,"y":384,"score":28,"level":0},{"x":1149,"y":384,"score":34,"level":0},{"x":1276,"y":384,"score":58,"level":0},{"x":1389,"y":384,"score":26,"level":0},{"x":1436,"y":384,"score":35,"level":0},{"x":662,"y":385,"score":85,"level":0},{"x":841,"y":385,"score":53,"level":0},{"x":964,"y":385,"score":46,"level":0},{"x":1094,"y":385,"score":40,"level":0},{"x":431,"y":386,"score":65,"level":0},{"x":576,"y":386,"score":28,"level":0},{"x":751,"y":386,"score":37,"level":0},{"x":815,"y":386,"score":38,"level":0},{"x":882,"y":386,"score":41,"level":0},{"x":902,"y":386,"score":29,"level":0},{"x":1017,"y":386,"score":28,"level":0},{"x":1157,"y":386,"score":33,"level":0},{"x":1252,"y":386,"score":40,"level":0},{"x":1470,"y":386,"score":34,"level":0},{"x":1488,"y":386,"score":27,"level":0},{"x":496,"y":387,"score":29,"level":0},{"x":1250,"y":387,"score":49,"level":0},{"x":512,"y":388,"score":34,"level":0},{"x":563,"y":388,"score":33,"level":0},{"x":713,"y":388,"score":30,"level":0},{"x":765,"y":388,"score":33,"level":0},{"x":1410,"y":388,"score":43,"level":0},{"x":1428,"y":388,"score":27,"level":0},{"x":719,"y":389,"score":26,"level":0},{"x":819,"y":389,"score":42,"level":0},{"x":975,"y":389,"score":27,"level":0},{"x":1073,"y":389,"score":28,"level":0},{"x":1079,"y":389,"score":40,"level":0},{"x":1115,"y":389,"score":30,"level":0},{"x":1249,"y":389,"score":32,"level":0},{"x":1421,"y":389,"score":27,"level":0},{"x":445,"y":390,"score":54,"level":0},{"x":1085,"y":390,"score":45,"level":0},{"x":457,"y":391,"score":36,"level":0},{"x":724,"y":391,"score":28,"level":0},{"x":843,"y":391,"score":30,"level":0},{"x":1160,"y":391,"score":50,"level":0},{"x":1415,"y":391,"score":40,"level":0},{"x":377,"y":392,"score":31,"level":0},{"x":445,"y":392,"score":58,"level":0},{"x":451,"y":392,"score":31,"level":0},{"x":546,"y":392,"score":61,"level":0},{"x":567,"y":392,"score":34,"level":0},{"x":745,"y":392,"score":43,"level":0},{"x":892,"y":392,"score":118,"level":0},{"x":1098,"y":392,"score":35,"level":0},{"x":1283,"y":392,"score":47,"level":0},{"x":1352,"y":392,"score":27,"level":0},{"x":658,"y":393,"score":30,"level":0},{"x":674,"y":393,"score":87,"level":0},{"x":776,"y":393,"score":34,"level":0},{"x":1036,"y":393,"score":26,"level":0},{"x":1276,"y":393,"score":85,"level":0},{"x":697,"y":394,"score":30,"level":0},{"x":1419,"y":394,"score":43,"level":0},{"x":835,"y":395,"score":37,"level":0},{"x":952,"y":395,"score":32,"level":0},{"x":969,"y":395,"score":51,"level":0},{"x":1019,"y":395,"score":51,"level":0},{"x":1378,"y":395,"score":33,"level":0},{"x":493,"y":396,"score":42,"level":0},{"x":632,"y":396,"score":35,"level":0},{"x":725,"y":396,"score":27,"level":0},{"x":896,"y":396,"score":67,"level":0},{"x":1025,"y":396,"score":75,"level":0},{"x":1084,"y":396,"score":38,"level":0},{"x":1163,"y":396,"score":50,"level":0},{"x":563,"y":397,"score":42,"level":0},{"x":667,"y":397,"score":95,"level":0},{"x":996,"y":397,"score":40,"level":0},{"x":1104,"y":397,"score":28,"level":0},{"x":1443,"y":397,"score":57,"level":0},{"x":407,"y":398,"score":33,"level":0},{"x":544,"y":398,"score":98,"level":0},{"x":1457,"y":398,"score":35,"level":0},{"x":1208,"y":399,"score":30,"level":0},{"x":1414,"y":399,"score":28,"level":0},{"x":899,"y":400,"score":75,"level":0},{"x":1159,"y":400,"score":26,"level":0},{"x":1213,"y":400,"score":27,"level":0},{"x":1279,"y":400,"score":38,"level":0},{"x":1430,"y":400,"score":27,"level":0},{"x":651,"y":401,"score":26,"level":0},{"x":672,"y":401,"score":40,"level":0},{"x":783,"y":401,"score":34,"level":0},{"x":815,"y":401,"score":26,"level":0},{"x":968,"y":401,"score":36,"level":0},{"x":976,"y":401,"score":41,"level":0},{"x":1259,"y":401,"score":46,"level":0},{"x":488,"y":402,"score":102,"level":0},{"x":755,"y":402,"score":39,"level":0},{"x":667,"y":403,"score":30,"level":0},{"x":1106,"y":403,"score":66,"level":0},{"x":1225,"y":403,"score":29,"level":0},{"x":1228,"y":403,"score":27,"level":0},{"x":494,"y":404,"score":80,"level":0},{"x":622,"y":404,"score":28,"level":0},{"x":1205,"y":404,"score":30,"level":0},{"x":1345,"y":404,"score":43,"level":0},{"x":1408,"y":404,"score":37,"level":0},{"x":1413,"y":404,"score":32,"level":0},{"x":1434,"y":404,"score":29,"level":0},{"x":566,"y":405,"score":32,"level":0},{"x":934,"y":405,"score":27,"level":0},{"x":1371,"y":405,"score":42,"level":0},{"x":1378,"y":405,"score":29,"level":0},{"x":543,"y":406,"score":39,"level":0},{"x":1168,"y":406,"score":48,"level":0},{"x":1449,"y":406,"score":27,"level":0},{"x":833,"y":407,"score":40,"level":0},{"x":849,"y":407,"score":28,"level":0},{"x":919,"y":407,"score":39,"level":0},{"x":994,"y":407,"score":52,"level":0},{"x":1014,"y":407,"score":45,"level":0},{"x":1281,"y":407,"score":31,"level":0},{"x":1342,"y":407,"score":36,"level":0},{"x":1458,"y":407,"score":29,"level":0},{"x":437,"y":408,"score":51,"level":0},{"x":551,"y":408,"score":70,"level":0},{"x":908,"y":408,"score":27,"level":0},{"x":1002,"y":408,"score":96,"level":0},{"x":1245,"y":408,"score":32,"level":0},{"x":709,"y":409,"score":28,"level":0},{"x":1114,"y":409,"score":32,"level":0},{"x":1177,"y":409,"score":40,"level":0},{"x":1323,"y":409,"score":38,"level":0},{"x":696,"y":410,"score":77,"level":0},{"x":1091,"y":410,"score":31,"level":0},{"x":649,"y":411,"score":58,"level":0},{"x":772,"y":411,"score":28,"level":0},{"x":888,"y":411,"score":30,"level":0},{"x":904,"y":411,"score":44,"level":0},{"x":1007,"y":411,"score":42,"level":0},{"x":1374,"y":411,"score":32,"level":0},{"x":638,"y":412,"score":80,"level":0},{"x":868,"y":412,"score":26,"level":0},{"x":1010,"y":412,"score":91,"level":0},{"x":1179,"y":412,"score":29,"level":0},{"x":1240,"y":412,"score":41,"level":0},{"x":1340,"y":412,"score":26,"level":0},{"x":546,"y":413,"score":41,"level":0},{"x":912,"y":413,"score":43,"level":0},{"x":1283,"y":413,"score":27,"level":0},{"x":1472,"y":413,"score":42,"level":0},{"x":695,"y":414,"score":74,"level":0},{"x":756,"y":414,"score":111,"level":0},{"x":906,"y":414,"score":34,"level":0},{"x":949,"y":414,"score":29,"level":0},{"x":990,"y":414,"score":27,"level":0},{"x":553,"y":415,"score":44,"level":0},{"x":569,"y":415,"score":52,"level":0},{"x":849,"y":415,"score":27,"level":0},{"x":1065,"y":415,"score":36,"level":0},{"x":1153,"y":415,"score":34,"level":0},{"x":1418,"y":415,"score":33,"level":0},{"x":426,"y":416,"score":32,"level":0},{"x":643,"y":416,"score":44,"level":0},{"x":939,"y":416,"score":38,"level":0},{"x":1103,"y":416,"score":52,"level":0},{"x":1468,"y":416,"score":50,"level":0},{"x":505,"y":417,"score":41,"level":0},{"x":508,"y":417,"score":42,"level":0},{"x":649,"y":417,"score":70,"level":0},{"x":755,"y":417,"score":42,"level":0},{"x":770,"y":417,"score":53,"level":0},{"x":780,"y":417,"score":46,"level":0},{"x":830,"y":417,"score":90,"level":0},{"x":844,"y":417,"score":77,"level":0},{"x":1206,"y":417,"score":36,"level":0},{"x":383,"y":418,"score":28,"level":0},{"x":502,"y":418,"score":68,"level":0},{"x":1179,"y":418,"score":28,"level":0},{"x":1198,"y":418,"score":42,"level":0},{"x":1256,"y":418,"score":40,"level":0},{"x":583,"y":419,"score":40,"level":0},{"x":791,"y":419,"score":60,"level":0},{"x":1117,"y":419,"score":26,"level":0},{"x":1189,"y":419,"score":64,"level":0},{"x":675,"y":420,"score":28,"level":0},{"x":1035,"y":420,"score":29,"level":0},{"x":1082,"y":420,"score":30,"level":0},{"x":1100,"y":420,"score":29,"level":0},{"x":1114,"y":420,"score":26,"level":0},{"x":1124,"y":420,"score":30,"level":0},{"x":1200,"y":420,"score":27,"level":0},{"x":1340,"y":420,"score":34,"level":0},{"x":1345,"y":420,"score":32,"level":0},{"x":506,"y":421,"score":34,"level":0},{"x":823,"y":421,"score":35,"level":0},{"x":843,"y":421,"score":61,"level":0},{"x":916,"y":421,"score":64,"level":0},{"x":923,"y":421,"score":45,"level":0},{"x":1096,"y":421,"score":28,"level":0},{"x":1243,"y":421,"score":28,"level":0},{"x":1249,"y":421,"score":27,"level":0},{"x":1335,"y":421,"score":30,"level":0},{"x":522,"y":422,"score":29,"level":0},{"x":562,"y":422,"score":62,"level":0},{"x":669,"y":422,"score":30,"level":0},{"x":692,"y":422,"score":26,"level":0},{"x":709,"y":422,"score":27,"level":0},{"x":848,"y":422,"score":40,"level":0},{"x":881,"y":422,"score":38,"level":0},{"x":954,"y":422,"score":32,"level":0},{"x":1012,"y":422,"score":31,"level":0},{"x":1135,"y":422,"score":56,"level":0},{"x":1484,"y":422,"score":33,"level":0},{"x":506,"y":423,"score":45,"level":0},{"x":511,"y":423,"score":30,"level":0},{"x":572,"y":423,"score":36,"level":0},{"x":756,"y":423,"score":36,"level":0},{"x":878,"y":423,"score":32,"level":0},{"x":1045,"y":423,"score":27,"level":0},{"x":1231,"y":423,"score":28,"level":0},{"x":1358,"y":423,"score":33,"level":0},{"x":490,"y":424,"score":48,"level":0},{"x":699,"y":424,"score":121,"level":0},{"x":886,"y":424,"score":51,"level":0},{"x":1040,"y":424,"score":26,"level":0},{"x":596,"y":425,"score":28,"level":0},{"x":768,"y":425,"score":33,"level":0},{"x":876,"y":425,"score":27,"level":0},{"x":919,"y":425,"score":27,"level":0},{"x":927,"y":425,"score":52,"level":0},{"x":992,"y":425,"score":72,"level":0},{"x":1186,"y":425,"score":28,"level":0},{"x":1366,"y":425,"score":47,"level":0},{"x":490,"y":426,"score":27,"level":0},{"x":531,"y":426,"score":37,"level":0},{"x":726,"y":426,"score":33,"level":0},{"x":1062,"y":426,"score":45,"level":0},{"x":1068,"y":426,"score":95,"level":0},{"x":496,"y":427,"score":55,"level":0},{"x":639,"y":427,"score":48,"level":0},{"x":706,"y":427,"score":37,"level":0},{"x":1016,"y":427,"score":36,"level":0},{"x":1090,"y":427,"score":32,"level":0},{"x":1141,"y":427,"score":33,"level":0},{"x":1356,"y":427,"score":34,"level":0},{"x":1084,"y":428,"score":31,"level":0},{"x":1086,"y":428,"score":42,"level":0},{"x":1123,"y":428,"score":29,"level":0},{"x":1201,"y":428,"score":39,"level":0},{"x":1206,"y":428,"score":60,"level":0},{"x":1231,"y":428,"score":36,"level":0},{"x":1345,"y":428,"score":28,"level":0},{"x":1460,"y":428,"score":26,"level":0},{"x":638,"y":429,"score":28,"level":0},{"x":696,"y":429,"score":41,"level":0},{"x":887,"y":429,"score":32,"level":0},{"x":1296,"y":429,"score":33,"level":0},{"x":495,"y":430,"score":37,"level":0},{"x":572,"y":430,"score":47,"level":0},{"x":1190,"y":430,"score":28,"level":0},{"x":848,"y":431,"score":28,"level":0},{"x":1018,"y":431,"score":27,"level":0},{"x":1367,"y":431,"score":84,"level":0},{"x":1388,"y":431,"score":33,"level":0},{"x":1431,"y":431,"score":26,"level":0},{"x":1463,"y":431,"score":29,"level":0},{"x":404,"y":432,"score":33,"level":0},{"x":827,"y":432,"score":33,"level":0},{"x":866,"y":432,"score":48,"level":0},{"x":886,"y":432,"score":27,"level":0},{"x":981,"y":432,"score":27,"level":0},{"x":1096,"y":432,"score":28,"level":0},{"x":1137,"y":432,"score":55,"level":0},{"x":1209,"y":432,"score":34,"level":0},{"x":495,"y":433,"score":42,"level":0},{"x":516,"y":433,"score":29,"level":0},{"x":567,"y":433,"score":52,"level":0},{"x":815,"y":433,"score":26,"level":0},{"x":851,"y":433,"score":30,"level":0},{"x":934,"y":433,"score":36,"level":0},{"x":1011,"y":433,"score":43,"level":0},{"x":1177,"y":433,"score":38,"level":0},{"x":1232,"y":433,"score":30,"level":0},{"x":1237,"y":433,"score":32,"level":0},{"x":403,"y":434,"score":62,"level":0},{"x":582,"y":434,"score":46,"level":0},{"x":1064,"y":434,"score":78,"level":0},{"x":1211,"y":434,"score":31,"level":0},{"x":1273,"y":434,"score":29,"level":0},{"x":1320,"y":434,"score":33,"level":0},{"x":1347,"y":434,"score":45,"level":0},{"x":1473,"y":434,"score":53,"level":0},{"x":394,"y":435,"score":50,"level":0},{"x":870,"y":435,"score":27,"level":0},{"x":1250,"y":435,"score":26,"level":0},{"x":1328,"y":435,"score":40,"level":0},{"x":1369,"y":435,"score":52,"level":0},{"x":491,"y":436,"score":28,"level":0},{"x":654,"y":436,"score":33,"level":0},{"x":660,"y":436,"score":33,"level":0},{"x":822,"y":436,"score":33,"level":0},{"x":1346,"y":436,"score":39,"level":0},{"x":1002,"y":437,"score":63,"level":0},{"x":1160,"y":437,"score":28,"level":0},{"x":1310,"y":437,"score":28,"level":0},{"x":1393,"y":437,"score":27,"level":0},{"x":442,"y":438,"score":30,"level":0},{"x":819,"y":438,"score":29,"level":0},{"x":899,"y":438,"score":26,"level":0},{"x":1128,"y":438,"score":47,"level":0},{"x":1443,"y":438,"score":28,"level":0},{"x":1470,"y":438,"score":71,"level":0},{"x":1484,"y":438,"score":30,"level":0},{"x":482,"y":439,"score":49,"level":0},{"x":669,"y":439,"score":61,"level":0},{"x":747,"y":439,"score":36,"level":0},{"x":758,"y":439,"score":34,"level":0},{"x":1165,"y":439,"score":28,"level":0},{"x":1214,"y":439,"score":38,"level":0},{"x":1292,"y":439,"score":44,"level":0},{"x":459,"y":440,"score":28,"level":0},{"x":493,"y":440,"score":111,"level":0},{"x":538,"y":440,"score":26,"level":0},{"x":675,"y":440,"score":34,"level":0},{"x":717,"y":440,"score":26,"level":0},{"x":931,"y":440,"score":42,"level":0},{"x":938,"y":440,"score":102,"level":0},{"x":944,"y":440,"score":37,"level":0},{"x":1142,"y":440,"score":56,"level":0},{"x":1227,"y":440,"score":26,"level":0},{"x":1400,"y":440,"score":48,"level":0},{"x":1415,"y":440,"score":28,"level":0},{"x":535,"y":441,"score":32,"level":0},{"x":574,"y":441,"score":71,"level":0},{"x":626,"y":441,"score":30,"level":0},{"x":1005,"y":441,"score":41,"level":0},{"x":1021,"y":441,"score":30,"level":0},{"x":1272,"y":441,"score":66,"level":0},{"x":477,"y":442,"score":41,"level":0},{"x":508,"y":442,"score":57,"level":0},{"x":810,"y":442,"score":56,"level":0},{"x":892,"y":442,"score":30,"level":0},{"x":904,"y":442,"score":32,"level":0},{"x":1029,"y":442,"score":26,"level":0},{"x":1067,"y":442,"score":39,"level":0},{"x":1373,"y":442,"score":27,"level":0},{"x":1450,"y":442,"score":35,"level":0},{"x":1217,"y":443,"score":30,"level":0},{"x":1227,"y":443,"score":36,"level":0},{"x":1368,"y":443,"score":38,"level":0},{"x":1398,"y":443,"score":41,"level":0},{"x":1408,"y":443,"score":35,"level":0},{"x":1464,"y":443,"score":31,"level":0},{"x":806,"y":444,"score":43,"level":0},{"x":943,"y":444,"score":33,"level":0},{"x":973,"y":444,"score":44,"level":0},{"x":1225,"y":444,"score":36,"level":0},{"x":1303,"y":444,"score":43,"level":0},{"x":420,"y":445,"score":38,"level":0},{"x":735,"y":445,"score":34,"level":0},{"x":897,"y":445,"score":36,"level":0},{"x":926,"y":445,"score":32,"level":0},{"x":985,"y":445,"score":79,"level":0},{"x":1205,"y":445,"score":36,"level":0},{"x":1266,"y":445,"score":33,"level":0},{"x":918,"y":446,"score":31,"level":0},{"x":1189,"y":446,"score":28,"level":0},{"x":1276,"y":446,"score":37,"level":0},{"x":1282,"y":446,"score":38,"level":0},{"x":377,"y":447,"score":35,"level":0},{"x":404,"y":447,"score":44,"level":0},{"x":414,"y":447,"score":80,"level":0},{"x":484,"y":447,"score":30,"level":0},{"x":495,"y":447,"score":40,"level":0},{"x":637,"y":447,"score":28,"level":0},{"x":970,"y":447,"score":34,"level":0},{"x":833,"y":448,"score":26,"level":0},{"x":899,"y":448,"score":29,"level":0},{"x":976,"y":448,"score":50,"level":0},{"x":991,"y":448,"score":74,"level":0},{"x":1030,"y":448,"score":34,"level":0},{"x":1073,"y":448,"score":28,"level":0},{"x":1233,"y":448,"score":28,"level":0},{"x":1299,"y":448,"score":31,"level":0},{"x":1304,"y":448,"score":27,"level":0},{"x":917,"y":449,"score":33,"level":0},{"x":1201,"y":449,"score":44,"level":0},{"x":1309,"y":449,"score":31,"level":0},{"x":1380,"y":449,"score":51,"level":0},{"x":1409,"y":449,"score":26,"level":0},{"x":541,"y":450,"score":31,"level":0},{"x":554,"y":450,"score":33,"level":0},{"x":655,"y":450,"score":26,"level":0},{"x":738,"y":450,"score":45,"level":0},{"x":1006,"y":450,"score":30,"level":0},{"x":1102,"y":450,"score":31,"level":0},{"x":1149,"y":450,"score":26,"level":0},{"x":1246,"y":450,"score":29,"level":0},{"x":1271,"y":450,"score":35,"level":0},{"x":1387,"y":450,"score":50,"level":0},{"x":1439,"y":450,"score":28,"level":0},{"x":1481,"y":450,"score":38,"level":0},{"x":625,"y":451,"score":32,"level":0},{"x":727,"y":451,"score":39,"level":0},{"x":779,"y":451,"score":31,"level":0},{"x":959,"y":451,"score":27,"level":0},{"x":1233,"y":451,"score":28,"level":0},{"x":1373,"y":451,"score":27,"level":0},{"x":1402,"y":451,"score":51,"level":0},{"x":1418,"y":451,"score":28,"level":0},{"x":410,"y":452,"score":113,"level":0},{"x":572,"y":452,"score":26,"level":0},{"x":592,"y":452,"score":42,"level":0},{"x":973,"y":452,"score":44,"level":0},{"x":1130,"y":452,"score":55,"level":0},{"x":1308,"y":452,"score":53,"level":0},{"x":418,"y":453,"score":70,"level":0},{"x":614,"y":453,"score":33,"level":0},{"x":741,"y":453,"score":45,"level":0},{"x":807,"y":453,"score":33,"level":0},{"x":854,"y":453,"score":77,"level":0},{"x":1079,"y":453,"score":29,"level":0},{"x":1224,"y":453,"score":42,"level":0},{"x":1259,"y":453,"score":45,"level":0},{"x":523,"y":454,"score":32,"level":0},{"x":638,"y":454,"score":51,"level":0},{"x":664,"y":454,"score":30,"level":0},{"x":835,"y":454,"score":33,"level":0},{"x":840,"y":454,"score":33,"level":0},{"x":883,"y":454,"score":34,"level":0},{"x":1254,"y":454,"score":28,"level":0},{"x":1305,"y":454,"score":43,"level":0},{"x":1338,"y":454,"score":36,"level":0},{"x":571,"y":455,"score":27,"level":0},{"x":795,"y":455,"score":41,"level":0},{"x":951,"y":455,"score":28,"level":0},{"x":972,"y":455,"score":61,"level":0},{"x":1187,"y":455,"score":45,"level":0},{"x":1224,"y":455,"score":53,"level":0},{"x":1357,"y":455,"score":28,"level":0},{"x":774,"y":456,"score":39,"level":0},{"x":781,"y":456,"score":40,"level":0},{"x":810,"y":456,"score":35,"level":0},{"x":847,"y":456,"score":35,"level":0},{"x":1247,"y":456,"score":30,"level":0},{"x":1362,"y":456,"score":31,"level":0},{"x":1413,"y":456,"score":26,"level":0},{"x":438,"y":457,"score":26,"level":0},{"x":718,"y":457,"score":26,"level":0},{"x":1294,"y":457,"score":46,"level":0},{"x":1410,"y":457,"score":36,"level":0},{"x":1426,"y":457,"score":34,"level":0},{"x":1441,"y":457,"score":31,"level":0},{"x":641,"y":458,"score":39,"level":0},{"x":746,"y":458,"score":27,"level":0},{"x":869,"y":458,"score":64,"level":0},{"x":1045,"y":458,"score":27,"level":0},{"x":1076,"y":458,"score":53,"level":0},{"x":1146,"y":458,"score":41,"level":0},{"x":1151,"y":458,"score":51,"level":0},{"x":1391,"y":458,"score":26,"level":0},{"x":1402,"y":458,"score":46,"level":0},{"x":1489,"y":458,"score":26,"level":0},{"x":924,"y":459,"score":37,"level":0},{"x":1220,"y":459,"score":45,"level":0},{"x":1366,"y":459,"score":39,"level":0},{"x":1049,"y":460,"score":34,"level":0},{"x":1118,"y":460,"score":29,"level":0},{"x":1131,"y":460,"score":84,"level":0},{"x":1186,"y":460,"score":29,"level":0},{"x":1188,"y":460,"score":46,"level":0},{"x":1364,"y":460,"score":29,"level":0},{"x":464,"y":461,"score":26,"level":0},{"x":517,"y":461,"score":99,"level":0},{"x":932,"y":461,"score":53,"level":0},{"x":986,"y":461,"score":50,"level":0},{"x":1026,"y":461,"score":27,"level":0},{"x":1031,"y":461,"score":32,"level":0},{"x":1051,"y":461,"score":49,"level":0},{"x":1057,"y":461,"score":43,"level":0},{"x":1201,"y":461,"score":29,"level":0},{"x":1236,"y":461,"score":35,"level":0},{"x":1379,"y":461,"score":39,"level":0},{"x":1385,"y":461,"score":53,"level":0},{"x":1395,"y":461,"score":38,"level":0},{"x":377,"y":462,"score":40,"level":0},{"x":397,"y":462,"score":28,"level":0},{"x":719,"y":462,"score":66,"level":0},{"x":775,"y":462,"score":40,"level":0},{"x":1038,"y":462,"score":46,"level":0},{"x":474,"y":463,"score":45,"level":0},{"x":477,"y":463,"score":38,"level":0},{"x":575,"y":463,"score":42,"level":0},{"x":599,"y":463,"score":33,"level":0},{"x":917,"y":463,"score":30,"level":0},{"x":934,"y":463,"score":46,"level":0},{"x":1160,"y":463,"score":36,"level":0},{"x":1477,"y":463,"score":26,"level":0},{"x":635,"y":464,"score":45,"level":0},{"x":637,"y":464,"score":33,"level":0},{"x":649,"y":464,"score":79,"level":0},{"x":1001,"y":464,"score":31,"level":0},{"x":1014,"y":464,"score":32,"level":0},{"x":591,"y":465,"score":29,"level":0},{"x":941,"y":465,"score":33,"level":0},{"x":1218,"y":465,"score":32,"level":0},{"x":1336,"y":465,"score":28,"level":0},{"x":1406,"y":465,"score":62,"level":0},{"x":1435,"y":465,"score":42,"level":0},{"x":444,"y":466,"score":46,"level":0},{"x":1285,"y":466,"score":31,"level":0},{"x":1309,"y":466,"score":31,"level":0},{"x":1341,"y":466,"score":30,"level":0},{"x":409,"y":467,"score":29,"level":0},{"x":514,"y":467,"score":51,"level":0},{"x":791,"y":467,"score":29,"level":0},{"x":1056,"y":467,"score":94,"level":0},{"x":1086,"y":467,"score":26,"level":0},{"x":1400,"y":467,"score":27,"level":0},{"x":1471,"y":467,"score":38,"level":0},{"x":707,"y":468,"score":30,"level":0},{"x":765,"y":468,"score":27,"level":0},{"x":803,"y":468,"score":31,"level":0},{"x":1247,"y":468,"score":38,"level":0},{"x":1374,"y":468,"score":40,"level":0},{"x":570,"y":469,"score":44,"level":0},{"x":591,"y":469,"score":26,"level":0},{"x":601,"y":469,"score":26,"level":0},{"x":977,"y":469,"score":28,"level":0},{"x":1040,"y":469,"score":72,"level":0},{"x":1122,"y":469,"score":34,"level":0},{"x":1132,"y":469,"score":50,"level":0},{"x":1153,"y":469,"score":30,"level":0},{"x":377,"y":470,"score":42,"level":0},{"x":910,"y":470,"score":30,"level":0},{"x":921,"y":470,"score":34,"level":0},{"x":1116,"y":470,"score":32,"level":0},{"x":1216,"y":470,"score":39,"level":0},{"x":1246,"y":470,"score":42,"level":0},{"x":1345,"y":470,"score":26,"level":0},{"x":405,"y":471,"score":28,"level":0},{"x":462,"y":471,"score":26,"level":0},{"x":512,"y":471,"score":34,"level":0},{"x":748,"y":471,"score":28,"level":0},{"x":979,"y":471,"score":48,"level":0},{"x":1019,"y":471,"score":36,"level":0},{"x":1265,"y":471,"score":29,"level":0},{"x":1312,"y":471,"score":38,"level":0},{"x":869,"y":472,"score":29,"level":0},{"x":973,"y":472,"score":71,"level":0},{"x":1078,"y":472,"score":28,"level":0},{"x":1434,"y":472,"score":33,"level":0},{"x":522,"y":473,"score":66,"level":0},{"x":587,"y":473,"score":35,"level":0},{"x":703,"y":473,"score":27,"level":0},{"x":815,"y":473,"score":28,"level":0},{"x":1040,"y":473,"score":27,"level":0},{"x":1287,"y":473,"score":27,"level":0},{"x":1300,"y":473,"score":39,"level":0},{"x":1367,"y":473,"score":28,"level":0},{"x":882,"y":474,"score":33,"level":0},{"x":1123,"y":474,"score":54,"level":0},{"x":1220,"y":474,"score":54,"level":0},{"x":1374,"y":474,"score":28,"level":0},{"x":786,"y":475,"score":31,"level":0},{"x":1154,"y":475,"score":51,"level":0},{"x":1208,"y":475,"score":26,"level":0},{"x":1345,"y":475,"score":40,"level":0},{"x":1379,"y":475,"score":51,"level":0},{"x":1386,"y":475,"score":35,"level":0},{"x":1388,"y":475,"score":43,"level":0},{"x":935,"y":476,"score":30,"level":0},{"x":976,"y":476,"score":78,"level":0},{"x":1040,"y":476,"score":54,"level":0},{"x":1439,"y":476,"score":27,"level":0},{"x":915,"y":477,"score":28,"level":0},{"x":1032,"y":477,"score":41,"level":0},{"x":1062,"y":477,"score":26,"level":0},{"x":1389,"y":477,"score":42,"level":0},{"x":605,"y":478,"score":32,"level":0},{"x":698,"y":478,"score":36,"level":0},{"x":846,"y":478,"score":44,"level":0},{"x":868,"y":478,"score":41,"level":0},{"x":1081,"y":478,"score":30,"level":0},{"x":1244,"y":478,"score":29,"level":0},{"x":1286,"y":478,"score":34,"level":0},{"x":1434,"y":478,"score":34,"level":0},{"x":484,"y":479,"score":28,"level":0},{"x":703,"y":479,"score":48,"level":0},{"x":967,"y":479,"score":29,"level":0},{"x":995,"y":479,"score":40,"level":0},{"x":1228,"y":479,"score":28,"level":0},{"x":1369,"y":479,"score":77,"level":0},{"x":617,"y":480,"score":27,"level":0},{"x":750,"y":480,"score":26,"level":0},{"x":858,"y":480,"score":45,"level":0},{"x":1024,"y":480,"score":39,"level":0},{"x":1115,"y":480,"score":34,"level":0},{"x":1359,"y":480,"score":26,"level":0},{"x":1436,"y":480,"score":48,"level":0},{"x":1455,"y":480,"score":49,"level":0},{"x":377,"y":481,"score":44,"level":0},{"x":484,"y":481,"score":32,"level":0},{"x":541,"y":481,"score":26,"level":0},{"x":876,"y":481,"score":28,"level":0},{"x":992,"y":481,"score":74,"level":0},{"x":1061,"y":481,"score":60,"level":0},{"x":1121,"y":481,"score":45,"level":0},{"x":1158,"y":481,"score":34,"level":0},{"x":1268,"y":481,"score":40,"level":0},{"x":1295,"y":481,"score":46,"level":0},{"x":1307,"y":481,"score":48,"level":0},{"x":1378,"y":481,"score":55,"level":0},{"x":1428,"y":481,"score":33,"level":0},{"x":391,"y":482,"score":32,"level":0},{"x":713,"y":482,"score":36,"level":0},{"x":865,"y":482,"score":34,"level":0},{"x":1289,"y":482,"score":28,"level":0},{"x":1315,"y":482,"score":51,"level":0},{"x":1126,"y":483,"score":26,"level":0},{"x":1233,"y":483,"score":29,"level":0},{"x":1449,"y":483,"score":41,"level":0},{"x":1451,"y":483,"score":28,"level":0},{"x":438,"y":484,"score":105,"level":0},{"x":832,"y":484,"score":35,"level":0},{"x":1244,"y":484,"score":27,"level":0},{"x":1433,"y":484,"score":37,"level":0},{"x":1465,"y":484,"score":28,"level":0},{"x":783,"y":485,"score":53,"level":0},{"x":974,"y":485,"score":34,"level":0},{"x":1024,"y":485,"score":34,"level":0},{"x":1236,"y":485,"score":46,"level":0},{"x":1253,"y":485,"score":73,"level":0},{"x":1255,"y":485,"score":63,"level":0},{"x":1327,"y":485,"score":41,"level":0},{"x":1380,"y":485,"score":29,"level":0},{"x":867,"y":486,"score":43,"level":0},{"x":976,"y":486,"score":28,"level":0},{"x":990,"y":486,"score":32,"level":0},{"x":997,"y":486,"score":28,"level":0},{"x":1266,"y":486,"score":27,"level":0},{"x":522,"y":487,"score":43,"level":0},{"x":665,"y":487,"score":28,"level":0},{"x":699,"y":487,"score":53,"level":0},{"x":741,"y":487,"score":28,"level":0},{"x":763,"y":487,"score":34,"level":0},{"x":1058,"y":487,"score":31,"level":0},{"x":1210,"y":487,"score":29,"level":0},{"x":1352,"y":487,"score":33,"level":0},{"x":1375,"y":487,"score":34,"level":0},{"x":420,"y":488,"score":28,"level":0},{"x":783,"y":488,"score":27,"level":0},{"x":867,"y":488,"score":48,"level":0},{"x":1040,"y":488,"score":37,"level":0},{"x":1047,"y":488,"score":26,"level":0},{"x":1138,"y":488,"score":26,"level":0},{"x":1242,"y":488,"score":35,"level":0},{"x":415,"y":489,"score":35,"level":0},{"x":587,"y":489,"score":78,"level":0},{"x":970,"y":489,"score":30,"level":0},{"x":1069,"y":489,"score":26,"level":0},{"x":1283,"y":489,"score":40,"level":0},{"x":607,"y":490,"score":58,"level":0},{"x":864,"y":490,"score":50,"level":0},{"x":1184,"y":490,"score":27,"level":0},{"x":1444,"y":490,"score":44,"level":0},{"x":1484,"y":490,"score":38,"level":0},{"x":588,"y":491,"score":38,"level":0},{"x":780,"y":491,"score":29,"level":0},{"x":786,"y":491,"score":32,"level":0},{"x":1171,"y":491,"score":57,"level":0},{"x":1319,"y":491,"score":30,"level":0},{"x":405,"y":492,"score":27,"level":0},{"x":1111,"y":492,"score":36,"level":0},{"x":1140,"y":492,"score":50,"level":0},{"x":1267,"y":492,"score":50,"level":0},{"x":1300,"y":492,"score":31,"level":0},{"x":1420,"y":492,"score":31,"level":0},{"x":510,"y":493,"score":38,"level":0},{"x":526,"y":493,"score":26,"level":0},{"x":610,"y":493,"score":32,"level":0},{"x":1067,"y":493,"score":32,"level":0},{"x":1292,"y":493,"score":33,"level":0},{"x":676,"y":494,"score":56,"level":0},{"x":753,"y":494,"score":34,"level":0},{"x":781,"y":494,"score":55,"level":0},{"x":846,"y":494,"score":60,"level":0},{"x":1077,"y":494,"score":40,"level":0},{"x":1117,"y":494,"score":37,"level":0},{"x":1119,"y":494,"score":30,"level":0},{"x":1229,"y":494,"score":36,"level":0},{"x":1238,"y":494,"score":29,"level":0},{"x":713,"y":495,"score":28,"level":0},{"x":982,"y":495,"score":28,"level":0},{"x":1131,"y":495,"score":27,"level":0},{"x":1250,"y":495,"score":45,"level":0},{"x":1272,"y":495,"score":27,"level":0},{"x":480,"y":496,"score":31,"level":0},{"x":1166,"y":496,"score":26,"level":0},{"x":1170,"y":496,"score":28,"level":0},{"x":1199,"y":496,"score":35,"level":0},{"x":1208,"y":496,"score":30,"level":0},{"x":1356,"y":496,"score":29,"level":0},{"x":1474,"y":496,"score":35,"level":0},{"x":759,"y":497,"score":32,"level":0},{"x":862,"y":497,"score":45,"level":0},{"x":870,"y":497,"score":26,"level":0},{"x":1055,"y":497,"score":32,"level":0},{"x":1201,"y":497,"score":33,"level":0},{"x":1367,"y":497,"score":39,"level":0},{"x":1428,"y":497,"score":36,"level":0},{"x":377,"y":498,"score":30,"level":0},{"x":448,"y":498,"score":39,"level":0},{"x":600,"y":498,"score":77,"level":0},{"x":612,"y":498,"score":26,"level":0},{"x":873,"y":498,"score":41,"level":0},{"x":961,"y":498,"score":37,"level":0},{"x":992,"y":498,"score":37,"level":0},{"x":1070,"y":498,"score":54,"level":0},{"x":1175,"y":498,"score":32,"level":0},{"x":1435,"y":498,"score":32,"level":0},{"x":506,"y":499,"score":104,"level":0},{"x":923,"y":499,"score":40,"level":0},{"x":1015,"y":499,"score":26,"level":0},{"x":1148,"y":499,"score":32,"level":0},{"x":1256,"y":499,"score":55,"level":0},{"x":1323,"y":499,"score":32,"level":0},{"x":1408,"y":499,"score":32,"level":0},{"x":1469,"y":499,"score":27,"level":0},{"x":707,"y":500,"score":33,"level":0},{"x":843,"y":500,"score":33,"level":0},{"x":868,"y":500,"score":29,"level":0},{"x":1051,"y":500,"score":26,"level":0},{"x":1084,"y":500,"score":39,"level":0},{"x":1125,"y":500,"score":29,"level":0},{"x":1143,"y":500,"score":29,"level":0},{"x":1284,"y":500,"score":28,"level":0},{"x":1362,"y":500,"score":53,"level":0},{"x":503,"y":501,"score":26,"level":0},{"x":697,"y":501,"score":38,"level":0},{"x":712,"y":501,"score":26,"level":0},{"x":1098,"y":501,"score":27,"level":0},{"x":1251,"y":501,"score":27,"level":0},{"x":1359,"y":501,"score":29,"level":0},{"x":1472,"y":501,"score":38,"level":0},{"x":1482,"y":501,"score":46,"level":0},{"x":470,"y":502,"score":44,"level":0},{"x":581,"y":502,"score":34,"level":0},{"x":606,"y":502,"score":45,"level":0},{"x":679,"y":502,"score":67,"level":0},{"x":866,"y":502,"score":48,"level":0},{"x":881,"y":502,"score":26,"level":0},{"x":1015,"y":502,"score":30,"level":0},{"x":1035,"y":502,"score":34,"level":0},{"x":1177,"y":502,"score":27,"level":0},{"x":1210,"y":502,"score":27,"level":0},{"x":1272,"y":502,"score":27,"level":0},{"x":527,"y":503,"score":48,"level":0},{"x":588,"y":503,"score":26,"level":0},{"x":751,"y":503,"score":32,"level":0},{"x":1321,"y":503,"score":26,"level":0},{"x":646,"y":504,"score":38,"level":0},{"x":680,"y":504,"score":74,"level":0},{"x":907,"y":504,"score":28,"level":0},{"x":1005,"y":504,"score":60,"level":0},{"x":1146,"y":504,"score":33,"level":0},{"x":1152,"y":504,"score":35,"level":0},{"x":1467,"y":504,"score":37,"level":0},{"x":1488,"y":504,"score":26,"level":0},{"x":579,"y":505,"score":34,"level":0},{"x":759,"y":505,"score":60,"level":0},{"x":893,"y":505,"score":30,"level":0},{"x":1022,"y":505,"score":38,"level":0},{"x":1242,"y":505,"score":47,"level":0},{"x":1280,"y":505,"score":32,"level":0},{"x":1352,"y":505,"score":31,"level":0},{"x":404,"y":506,"score":34,"level":0},{"x":489,"y":506,"score":36,"level":0},{"x":498,"y":506,"score":47,"level":0},{"x":588,"y":506,"score":26,"level":0},{"x":695,"y":506,"score":62,"level":0},{"x":928,"y":506,"score":54,"level":0},{"x":1354,"y":506,"score":40,"level":0},{"x":1490,"y":506,"score":28,"level":0},{"x":413,"y":507,"score":26,"level":0},{"x":511,"y":507,"score":30,"level":0},{"x":603,"y":507,"score":46,"level":0},{"x":829,"y":507,"score":27,"level":0},{"x":831,"y":507,"score":32,"level":0},{"x":916,"y":507,"score":37,"level":0},{"x":1119,"y":507,"score":32,"level":0},{"x":1125,"y":507,"score":35,"level":0},{"x":463,"y":508,"score":26,"level":0},{"x":569,"y":508,"score":28,"level":0},{"x":666,"y":508,"score":37,"level":0},{"x":711,"y":508,"score":36,"level":0},{"x":1006,"y":508,"score":31,"level":0},{"x":1032,"y":508,"score":32,"level":0},{"x":1143,"y":508,"score":28,"level":0},{"x":1238,"y":508,"score":26,"level":0},{"x":1454,"y":508,"score":31,"level":0},{"x":1462,"y":508,"score":35,"level":0},{"x":902,"y":509,"score":26,"level":0},{"x":947,"y":509,"score":26,"level":0},{"x":1087,"y":509,"score":39,"level":0},{"x":1252,"y":509,"score":28,"level":0},{"x":480,"y":510,"score":50,"level":0},{"x":615,"y":510,"score":30,"level":0},{"x":749,"y":510,"score":41,"level":0},{"x":804,"y":510,"score":30,"level":0},{"x":1149,"y":510,"score":75,"level":0},{"x":1388,"y":510,"score":37,"level":0},{"x":389,"y":511,"score":31,"level":0},{"x":452,"y":511,"score":52,"level":0},{"x":705,"y":511,"score":34,"level":0},{"x":845,"y":511,"score":30,"level":0},{"x":985,"y":511,"score":30,"level":0},{"x":1166,"y":511,"score":104,"level":0},{"x":1173,"y":511,"score":28,"level":0},{"x":1345,"y":511,"score":39,"level":0},{"x":468,"y":512,"score":91,"level":0},{"x":491,"y":512,"score":31,"level":0},{"x":837,"y":512,"score":37,"level":0},{"x":991,"y":512,"score":26,"level":0},{"x":1013,"y":512,"score":58,"level":0},{"x":1073,"y":512,"score":52,"level":0},{"x":1282,"y":512,"score":47,"level":0},{"x":1296,"y":512,"score":28,"level":0},{"x":500,"y":513,"score":55,"level":0},{"x":926,"y":513,"score":47,"level":0},{"x":1480,"y":513,"score":87,"level":0},{"x":504,"y":514,"score":34,"level":0},{"x":567,"y":514,"score":26,"level":0},{"x":825,"y":514,"score":30,"level":0},{"x":846,"y":514,"score":52,"level":0},{"x":864,"y":514,"score":35,"level":0},{"x":954,"y":514,"score":26,"level":0},{"x":1075,"y":514,"score":59,"level":0},{"x":1083,"y":514,"score":35,"level":0},{"x":1171,"y":514,"score":33,"level":0},{"x":1362,"y":514,"score":33,"level":0},{"x":1405,"y":514,"score":36,"level":0},{"x":1429,"y":514,"score":32,"level":0},{"x":576,"y":515,"score":36,"level":0},{"x":661,"y":515,"score":29,"level":0},{"x":1169,"y":515,"score":40,"level":0},{"x":1193,"y":515,"score":53,"level":0},{"x":1195,"y":515,"score":48,"level":0},{"x":1201,"y":515,"score":32,"level":0},{"x":1271,"y":515,"score":36,"level":0},{"x":1364,"y":515,"score":30,"level":0},{"x":1434,"y":515,"score":27,"level":0},{"x":1480,"y":515,"score":56,"level":0},{"x":484,"y":516,"score":45,"level":0},{"x":586,"y":516,"score":35,"level":0},{"x":591,"y":516,"score":26,"level":0},{"x":679,"y":516,"score":34,"level":0},{"x":701,"y":516,"score":34,"level":0},{"x":754,"y":516,"score":46,"level":0},{"x":784,"y":516,"score":26,"level":0},{"x":789,"y":516,"score":34,"level":0},{"x":863,"y":516,"score":28,"level":0},{"x":1059,"y":516,"score":54,"level":0},{"x":1113,"y":516,"score":34,"level":0},{"x":1382,"y":516,"score":27,"level":0},{"x":1472,"y":516,"score":35,"level":0},{"x":668,"y":517,"score":27,"level":0},{"x":939,"y":517,"score":29,"level":0},{"x":1273,"y":517,"score":32,"level":0},{"x":1291,"y":517,"score":64,"level":0},{"x":1399,"y":517,"score":27,"level":0},{"x":539,"y":518,"score":26,"level":0},{"x":684,"y":518,"score":72,"level":0},{"x":987,"y":518,"score":32,"level":0},{"x":1147,"y":518,"score":32,"level":0},{"x":1153,"y":518,"score":107,"level":0},{"x":1338,"y":518,"score":28,"level":0},{"x":1378,"y":518,"score":70,"level":0},{"x":1439,"y":518,"score":27,"level":0},{"x":444,"y":519,"score":28,"level":0},{"x":585,"y":519,"score":38,"level":0},{"x":780,"y":519,"score":36,"level":0},{"x":1081,"y":519,"score":36,"level":0},{"x":1158,"y":519,"score":105,"level":0},{"x":1164,"y":519,"score":79,"level":0},{"x":1174,"y":519,"score":29,"level":0},{"x":1255,"y":519,"score":42,"level":0},{"x":1268,"y":519,"score":54,"level":0},{"x":1306,"y":519,"score":47,"level":0},{"x":773,"y":520,"score":26,"level":0},{"x":922,"y":520,"score":40,"level":0},{"x":1108,"y":520,"score":36,"level":0},{"x":1219,"y":520,"score":39,"level":0},{"x":1312,"y":520,"score":32,"level":0},{"x":1362,"y":520,"score":27,"level":0},{"x":414,"y":521,"score":29,"level":0},{"x":467,"y":521,"score":53,"level":0},{"x":595,"y":521,"score":26,"level":0},{"x":819,"y":521,"score":35,"level":0},{"x":1092,"y":521,"score":65,"level":0},{"x":1192,"y":521,"score":33,"level":0},{"x":1199,"y":521,"score":117,"level":0},{"x":1314,"y":521,"score":54,"level":0},{"x":487,"y":522,"score":42,"level":0},{"x":843,"y":522,"score":47,"level":0},{"x":1102,"y":522,"score":30,"level":0},{"x":1120,"y":522,"score":40,"level":0},{"x":1244,"y":522,"score":35,"level":0},{"x":419,"y":523,"score":38,"level":0},{"x":570,"y":523,"score":29,"level":0},{"x":666,"y":523,"score":28,"level":0},{"x":704,"y":523,"score":32,"level":0},{"x":706,"y":523,"score":31,"level":0},{"x":820,"y":523,"score":37,"level":0},{"x":1206,"y":523,"score":34,"level":0},{"x":1249,"y":523,"score":36,"level":0},{"x":1272,"y":523,"score":47,"level":0},{"x":1297,"y":523,"score":30,"level":0},{"x":1370,"y":523,"score":39,"level":0},{"x":1439,"y":523,"score":28,"level":0},{"x":478,"y":524,"score":53,"level":0},{"x":588,"y":524,"score":47,"level":0},{"x":1144,"y":524,"score":50,"level":0},{"x":1215,"y":524,"score":29,"level":0},{"x":586,"y":525,"score":50,"level":0},{"x":1025,"y":525,"score":27,"level":0},{"x":1100,"y":525,"score":47,"level":0},{"x":1281,"y":525,"score":27,"level":0},{"x":1382,"y":525,"score":27,"level":0},{"x":1412,"y":525,"score":41,"level":0},{"x":1418,"y":525,"score":26,"level":0},{"x":1488,"y":525,"score":32,"level":0},{"x":600,"y":526,"score":42,"level":0},{"x":612,"y":526,"score":28,"level":0},{"x":683,"y":526,"score":81,"level":0},{"x":924,"y":526,"score":34,"level":0},{"x":985,"y":526,"score":28,"level":0},{"x":1171,"y":526,"score":38,"level":0},{"x":1173,"y":526,"score":36,"level":0},{"x":1232,"y":526,"score":32,"level":0},{"x":377,"y":527,"score":67,"level":0},{"x":494,"y":527,"score":26,"level":0},{"x":859,"y":527,"score":34,"level":0},{"x":1017,"y":527,"score":32,"level":0},{"x":1063,"y":527,"score":31,"level":0},{"x":1277,"y":527,"score":71,"level":0},{"x":1292,"y":527,"score":30,"level":0},{"x":1312,"y":527,"score":28,"level":0},{"x":1475,"y":527,"score":26,"level":0},{"x":595,"y":528,"score":105,"level":0},{"x":825,"y":528,"score":32,"level":0},{"x":1136,"y":528,"score":46,"level":0},{"x":1310,"y":528,"score":27,"level":0},{"x":1346,"y":528,"score":30,"level":0},{"x":1378,"y":528,"score":29,"level":0},{"x":1383,"y":528,"score":33,"level":0},{"x":1408,"y":528,"score":56,"level":0},{"x":1451,"y":528,"score":26,"level":0},{"x":1456,"y":528,"score":35,"level":0},{"x":1481,"y":528,"score":47,"level":0},{"x":1490,"y":528,"score":29,"level":0},{"x":447,"y":529,"score":30,"level":0},{"x":677,"y":529,"score":64,"level":0},{"x":694,"y":529,"score":70,"level":0},{"x":950,"y":529,"score":27,"level":0},{"x":1016,"y":529,"score":72,"level":0},{"x":1105,"y":529,"score":41,"level":0},{"x":1144,"y":529,"score":38,"level":0},{"x":1287,"y":529,"score":45,"level":0},{"x":1301,"y":529,"score":38,"level":0},{"x":1312,"y":529,"score":28,"level":0},{"x":472,"y":530,"score":56,"level":0},{"x":1026,"y":530,"score":37,"level":0},{"x":1074,"y":530,"score":60,"level":0},{"x":1083,"y":530,"score":43,"level":0},{"x":1161,"y":530,"score":31,"level":0},{"x":1195,"y":530,"score":50,"level":0},{"x":1272,"y":530,"score":35,"level":0},{"x":382,"y":531,"score":30,"level":0},{"x":422,"y":531,"score":29,"level":0},{"x":686,"y":531,"score":32,"level":0},{"x":780,"y":531,"score":31,"level":0},{"x":861,"y":531,"score":36,"level":0},{"x":1085,"y":531,"score":34,"level":0},{"x":1184,"y":531,"score":35,"level":0},{"x":1420,"y":531,"score":28,"level":0},{"x":1422,"y":531,"score":28,"level":0},{"x":601,"y":532,"score":39,"level":0},{"x":1165,"y":532,"score":27,"level":0},{"x":860,"y":533,"score":34,"level":0},{"x":950,"y":533,"score":26,"level":0},{"x":1133,"y":533,"score":31,"level":0},{"x":1222,"y":533,"score":46,"level":0},{"x":1238,"y":533,"score":26,"level":0},{"x":1290,"y":533,"score":41,"level":0},{"x":1378,"y":533,"score":40,"level":0},{"x":1438,"y":533,"score":30,"level":0},{"x":543,"y":534,"score":30,"level":0},{"x":938,"y":534,"score":32,"level":0},{"x":1035,"y":534,"score":38,"level":0},{"x":1105,"y":534,"score":54,"level":0},{"x":1113,"y":534,"score":28,"level":0},{"x":1209,"y":534,"score":27,"level":0},{"x":462,"y":535,"score":26,"level":0},{"x":526,"y":535,"score":43,"level":0},{"x":573,"y":535,"score":27,"level":0},{"x":1056,"y":535,"score":39,"level":0},{"x":1094,"y":535,"score":31,"level":0},{"x":1474,"y":535,"score":26,"level":0},{"x":819,"y":536,"score":44,"level":0},{"x":869,"y":536,"score":28,"level":0},{"x":1013,"y":536,"score":39,"level":0},{"x":1018,"y":536,"score":27,"level":0},{"x":1285,"y":536,"score":87,"level":0},{"x":1366,"y":536,"score":40,"level":0},{"x":1479,"y":536,"score":30,"level":0},{"x":633,"y":537,"score":30,"level":0},{"x":803,"y":537,"score":31,"level":0},{"x":856,"y":537,"score":36,"level":0},{"x":897,"y":537,"score":28,"level":0},{"x":905,"y":537,"score":33,"level":0},{"x":996,"y":537,"score":30,"level":0},{"x":393,"y":538,"score":37,"level":0},{"x":463,"y":538,"score":28,"level":0},{"x":598,"y":538,"score":50,"level":0},{"x":665,"y":538,"score":37,"level":0},{"x":797,"y":538,"score":34,"level":0},{"x":903,"y":538,"score":29,"level":0},{"x":981,"y":538,"score":35,"level":0},{"x":1082,"y":538,"score":36,"level":0},{"x":1093,"y":538,"score":43,"level":0},{"x":1122,"y":538,"score":28,"level":0},{"x":1128,"y":538,"score":37,"level":0},{"x":1157,"y":538,"score":30,"level":0},{"x":1184,"y":538,"score":26,"level":0},{"x":1216,"y":538,"score":38,"level":0},{"x":1234,"y":538,"score":26,"level":0},{"x":1261,"y":538,"score":26,"level":0},{"x":1266,"y":538,"score":28,"level":0},{"x":1286,"y":538,"score":74,"level":0},{"x":511,"y":539,"score":28,"level":0},{"x":605,"y":539,"score":61,"level":0},{"x":769,"y":539,"score":26,"level":0},{"x":914,"y":539,"score":44,"level":0},{"x":1080,"y":539,"score":40,"level":0},{"x":1098,"y":539,"score":71,"level":0},{"x":1273,"y":539,"score":33,"level":0},{"x":529,"y":540,"score":48,"level":0},{"x":909,"y":540,"score":50,"level":0},{"x":810,"y":541,"score":48,"level":0},{"x":1199,"y":541,"score":44,"level":0},{"x":1228,"y":541,"score":29,"level":0},{"x":1304,"y":541,"score":90,"level":0},{"x":1329,"y":541,"score":26,"level":0},{"x":1367,"y":541,"score":30,"level":0},{"x":529,"y":542,"score":44,"level":0},{"x":768,"y":542,"score":39,"level":0},{"x":851,"y":542,"score":37,"level":0},{"x":1194,"y":542,"score":41,"level":0},{"x":439,"y":543,"score":30,"level":0},{"x":993,"y":543,"score":29,"level":0},{"x":1132,"y":543,"score":39,"level":0},{"x":1424,"y":543,"score":38,"level":0},{"x":460,"y":544,"score":29,"level":0},{"x":817,"y":544,"score":29,"level":0},{"x":859,"y":544,"score":28,"level":0},{"x":1025,"y":544,"score":37,"level":0},{"x":1076,"y":544,"score":28,"level":0},{"x":1218,"y":544,"score":29,"level":0},{"x":1272,"y":544,"score":34,"level":0},{"x":1357,"y":544,"score":29,"level":0},{"x":1479,"y":544,"score":33,"level":0},{"x":632,"y":545,"score":32,"level":0},{"x":746,"y":545,"score":58,"level":0},{"x":910,"y":545,"score":76,"level":0},{"x":994,"y":545,"score":33,"level":0},{"x":1000,"y":545,"score":34,"level":0},{"x":1287,"y":545,"score":32,"level":0},{"x":460,"y":546,"score":46,"level":0},{"x":604,"y":546,"score":48,"level":0},{"x":979,"y":546,"score":32,"level":0},{"x":1124,"y":546,"score":28,"level":0},{"x":1343,"y":546,"score":40,"level":0},{"x":1481,"y":546,"score":49,"level":0},{"x":746,"y":547,"score":57,"level":0},{"x":1091,"y":547,"score":29,"level":0},{"x":1177,"y":547,"score":30,"level":0},{"x":1179,"y":547,"score":39,"level":0},{"x":458,"y":548,"score":39,"level":0},{"x":524,"y":548,"score":47,"level":0},{"x":543,"y":548,"score":26,"level":0},{"x":600,"y":548,"score":31,"level":0},{"x":648,"y":548,"score":26,"level":0},{"x":806,"y":548,"score":26,"level":0},{"x":1161,"y":548,"score":32,"level":0},{"x":1281,"y":548,"score":44,"level":0},{"x":1284,"y":548,"score":38,"level":0},{"x":1419,"y":548,"score":107,"level":0},{"x":438,"y":549,"score":32,"level":0},{"x":706,"y":549,"score":28,"level":0},{"x":771,"y":549,"score":32,"level":0},{"x":847,"y":549,"score":44,"level":0},{"x":379,"y":550,"score":37,"level":0},{"x":400,"y":550,"score":26,"level":0},{"x":594,"y":550,"score":32,"level":0},{"x":619,"y":550,"score":40,"level":0},{"x":763,"y":550,"score":44,"level":0},{"x":998,"y":550,"score":36,"level":0},{"x":1137,"y":550,"score":26,"level":0},{"x":1380,"y":550,"score":28,"level":0},{"x":1414,"y":550,"score":39,"level":0},{"x":443,"y":551,"score":32,"level":0},{"x":607,"y":551,"score":50,"level":0},{"x":682,"y":551,"score":48,"level":0},{"x":929,"y":551,"score":68,"level":0},{"x":1346,"y":551,"score":65,"level":0},{"x":656,"y":552,"score":36,"level":0},{"x":750,"y":552,"score":26,"level":0},{"x":927,"y":552,"score":26,"level":0},{"x":992,"y":552,"score":27,"level":0},{"x":1030,"y":552,"score":39,"level":0},{"x":1087,"y":552,"score":31,"level":0},{"x":1484,"y":552,"score":28,"level":0},{"x":391,"y":553,"score":36,"level":0},{"x":461,"y":553,"score":45,"level":0},{"x":646,"y":553,"score":30,"level":0},{"x":670,"y":553,"score":26,"level":0},{"x":728,"y":553,"score":31,"level":0},{"x":775,"y":553,"score":26,"level":0},{"x":903,"y":553,"score":35,"level":0},{"x":1125,"y":553,"score":56,"level":0},{"x":1136,"y":553,"score":26,"level":0},{"x":1180,"y":553,"score":38,"level":0},{"x":1189,"y":553,"score":50,"level":0},{"x":1201,"y":553,"score":75,"level":0},{"x":1327,"y":553,"score":34,"level":0},{"x":1379,"y":553,"score":27,"level":0},{"x":1465,"y":553,"score":26,"level":0},{"x":605,"y":554,"score":56,"level":0},{"x":607,"y":554,"score":39,"level":0},{"x":613,"y":554,"score":28,"level":0},{"x":698,"y":554,"score":29,"level":0},{"x":807,"y":554,"score":30,"level":0},{"x":910,"y":554,"score":62,"level":0},{"x":957,"y":554,"score":32,"level":0},{"x":1086,"y":554,"score":31,"level":0},{"x":1186,"y":554,"score":28,"level":0},{"x":1224,"y":554,"score":27,"level":0},{"x":1288,"y":554,"score":62,"level":0},{"x":1347,"y":554,"score":77,"level":0},{"x":1355,"y":554,"score":26,"level":0},{"x":656,"y":555,"score":26,"level":0},{"x":853,"y":555,"score":36,"level":0},{"x":931,"y":555,"score":38,"level":0},{"x":1048,"y":555,"score":27,"level":0},{"x":1296,"y":555,"score":28,"level":0},{"x":1364,"y":555,"score":32,"level":0},{"x":817,"y":556,"score":39,"level":0},{"x":819,"y":556,"score":29,"level":0},{"x":1023,"y":556,"score":80,"level":0},{"x":1361,"y":556,"score":31,"level":0},{"x":1457,"y":556,"score":26,"level":0},{"x":609,"y":557,"score":53,"level":0},{"x":680,"y":557,"score":70,"level":0},{"x":715,"y":557,"score":58,"level":0},{"x":720,"y":557,"score":62,"level":0},{"x":824,"y":557,"score":38,"level":0},{"x":941,"y":557,"score":43,"level":0},{"x":1025,"y":557,"score":49,"level":0},{"x":1104,"y":557,"score":77,"level":0},{"x":1372,"y":557,"score":32,"level":0},{"x":625,"y":558,"score":55,"level":0},{"x":628,"y":558,"score":43,"level":0},{"x":744,"y":558,"score":49,"level":0},{"x":1091,"y":558,"score":26,"level":0},{"x":1261,"y":558,"score":29,"level":0},{"x":1266,"y":558,"score":28,"level":0},{"x":1304,"y":558,"score":39,"level":0},{"x":1469,"y":558,"score":42,"level":0},{"x":1472,"y":558,"score":78,"level":0},{"x":1481,"y":558,"score":85,"level":0},{"x":1489,"y":558,"score":59,"level":0},{"x":379,"y":559,"score":47,"level":0},{"x":637,"y":559,"score":49,"level":0},{"x":777,"y":559,"score":28,"level":0},{"x":1081,"y":559,"score":26,"level":0},{"x":1111,"y":559,"score":41,"level":0},{"x":1289,"y":559,"score":43,"level":0},{"x":1340,"y":559,"score":34,"level":0},{"x":1357,"y":559,"score":67,"level":0},{"x":1421,"y":559,"score":26,"level":0},{"x":653,"y":560,"score":35,"level":0},{"x":686,"y":560,"score":30,"level":0},{"x":994,"y":560,"score":44,"level":0},{"x":1153,"y":560,"score":26,"level":0},{"x":1349,"y":560,"score":39,"level":0},{"x":1452,"y":560,"score":32,"level":0},{"x":1473,"y":560,"score":30,"level":0},{"x":1481,"y":560,"score":77,"level":0},{"x":1487,"y":560,"score":26,"level":0},{"x":377,"y":561,"score":42,"level":0},{"x":762,"y":561,"score":54,"level":0},{"x":1022,"y":561,"score":30,"level":0},{"x":1034,"y":561,"score":35,"level":0},{"x":1191,"y":561,"score":26,"level":0},{"x":1196,"y":561,"score":36,"level":0},{"x":1226,"y":561,"score":32,"level":0},{"x":1233,"y":561,"score":26,"level":0},{"x":1429,"y":561,"score":68,"level":0},{"x":475,"y":562,"score":32,"level":0},{"x":632,"y":562,"score":90,"level":0},{"x":845,"y":562,"score":45,"level":0},{"x":898,"y":562,"score":41,"level":0},{"x":933,"y":562,"score":39,"level":0},{"x":971,"y":562,"score":28,"level":0},{"x":1009,"y":562,"score":36,"level":0},{"x":1237,"y":562,"score":39,"level":0},{"x":1311,"y":562,"score":30,"level":0},{"x":1407,"y":562,"score":32,"level":0},{"x":436,"y":563,"score":32,"level":0},{"x":455,"y":563,"score":39,"level":0},{"x":770,"y":563,"score":36,"level":0},{"x":821,"y":563,"score":34,"level":0},{"x":907,"y":563,"score":40,"level":0},{"x":941,"y":563,"score":31,"level":0},{"x":1042,"y":563,"score":27,"level":0},{"x":1143,"y":563,"score":34,"level":0},{"x":1146,"y":563,"score":31,"level":0},{"x":1233,"y":563,"score":34,"level":0},{"x":1244,"y":563,"score":28,"level":0},{"x":1299,"y":563,"score":50,"level":0},{"x":1360,"y":563,"score":33,"level":0},{"x":537,"y":564,"score":31,"level":0},{"x":784,"y":564,"score":34,"level":0},{"x":1032,"y":564,"score":27,"level":0},{"x":1068,"y":564,"score":31,"level":0},{"x":1260,"y":564,"score":27,"level":0},{"x":1345,"y":564,"score":28,"level":0},{"x":1431,"y":564,"score":50,"level":0},{"x":1438,"y":564,"score":129,"level":0},{"x":499,"y":565,"score":26,"level":0},{"x":697,"y":565,"score":48,"level":0},{"x":729,"y":565,"score":34,"level":0},{"x":808,"y":565,"score":32,"level":0},{"x":845,"y":565,"score":34,"level":0},{"x":847,"y":565,"score":37,"level":0},{"x":994,"y":565,"score":29,"level":0},{"x":1105,"y":565,"score":26,"level":0},{"x":1132,"y":565,"score":49,"level":0},{"x":1185,"y":565,"score":32,"level":0},{"x":1205,"y":565,"score":29,"level":0},{"x":1289,"y":565,"score":26,"level":0},{"x":1299,"y":565,"score":30,"level":0},{"x":1331,"y":565,"score":34,"level":0},{"x":1404,"y":565,"score":34,"level":0},{"x":1452,"y":565,"score":58,"level":0},{"x":493,"y":566,"score":27,"level":0},{"x":628,"y":566,"score":50,"level":0},{"x":733,"y":566,"score":33,"level":0},{"x":1061,"y":566,"score":31,"level":0},{"x":1339,"y":566,"score":27,"level":0},{"x":1438,"y":566,"score":39,"level":0},{"x":1450,"y":566,"score":26,"level":0},{"x":392,"y":567,"score":34,"level":0},{"x":531,"y":567,"score":30,"level":0},{"x":607,"y":567,"score":76,"level":0},{"x":763,"y":567,"score":32,"level":0},{"x":952,"y":567,"score":34,"level":0},{"x":1000,"y":567,"score":36,"level":0},{"x":1002,"y":567,"score":36,"level":0},{"x":1021,"y":567,"score":30,"level":0},{"x":1346,"y":567,"score":30,"level":0},{"x":1395,"y":567,"score":30,"level":0},{"x":712,"y":568,"score":33,"level":0},{"x":809,"y":568,"score":27,"level":0},{"x":823,"y":568,"score":39,"level":0},{"x":1015,"y":568,"score":29,"level":0},{"x":1083,"y":568,"score":32,"level":0},{"x":1113,"y":568,"score":37,"level":0},{"x":1233,"y":568,"score":40,"level":0},{"x":1244,"y":568,"score":27,"level":0},{"x":1279,"y":568,"score":32,"level":0},{"x":1336,"y":568,"score":42,"level":0},{"x":380,"y":569,"score":63,"level":0},{"x":558,"y":569,"score":34,"level":0},{"x":563,"y":569,"score":28,"level":0},{"x":941,"y":569,"score":34,"level":0},{"x":1010,"y":569,"score":33,"level":0},{"x":1039,"y":569,"score":50,"level":0},{"x":1128,"y":569,"score":31,"level":0},{"x":1261,"y":569,"score":29,"level":0},{"x":1465,"y":569,"score":28,"level":0},{"x":647,"y":570,"score":30,"level":0},{"x":931,"y":570,"score":29,"level":0},{"x":1031,"y":570,"score":28,"level":0},{"x":1047,"y":570,"score":27,"level":0},{"x":1208,"y":570,"score":38,"level":0},{"x":1328,"y":570,"score":34,"level":0},{"x":1472,"y":570,"score":26,"level":0},{"x":428,"y":571,"score":42,"level":0},{"x":497,"y":571,"score":31,"level":0},{"x":682,"y":571,"score":42,"level":0},{"x":816,"y":571,"score":26,"level":0},{"x":850,"y":571,"score":26,"level":0},{"x":1055,"y":571,"score":26,"level":0},{"x":1097,"y":571,"score":26,"level":0},{"x":1110,"y":571,"score":46,"level":0},{"x":1214,"y":571,"score":29,"level":0},{"x":1348,"y":571,"score":48,"level":0},{"x":1419,"y":571,"score":29,"level":0},{"x":916,"y":572,"score":60,"level":0},{"x":1034,"y":572,"score":27,"level":0},{"x":1047,"y":572,"score":29,"level":0},{"x":1182,"y":572,"score":32,"level":0},{"x":1229,"y":572,"score":56,"level":0},{"x":714,"y":573,"score":26,"level":0},{"x":822,"y":573,"score":30,"level":0},{"x":938,"y":573,"score":66,"level":0},{"x":1059,"y":573,"score":29,"level":0},{"x":1117,"y":573,"score":54,"level":0},{"x":1206,"y":573,"score":36,"level":0},{"x":1459,"y":573,"score":54,"level":0},{"x":1481,"y":573,"score":42,"level":0},{"x":387,"y":574,"score":26,"level":0},{"x":434,"y":574,"score":33,"level":0},{"x":731,"y":574,"score":35,"level":0},{"x":1303,"y":574,"score":40,"level":0},{"x":1437,"y":574,"score":88,"level":0},{"x":1486,"y":574,"score":30,"level":0},{"x":448,"y":575,"score":26,"level":0},{"x":516,"y":575,"score":35,"level":0},{"x":636,"y":575,"score":27,"level":0},{"x":738,"y":575,"score":38,"level":0},{"x":898,"y":575,"score":28,"level":0},{"x":908,"y":575,"score":41,"level":0},{"x":1027,"y":575,"score":34,"level":0},{"x":1351,"y":575,"score":64,"level":0},{"x":1377,"y":575,"score":29,"level":0},{"x":648,"y":576,"score":46,"level":0},{"x":1021,"y":576,"score":32,"level":0},{"x":1039,"y":576,"score":46,"level":0},{"x":1059,"y":576,"score":46,"level":0},{"x":1127,"y":576,"score":36,"level":0},{"x":1149,"y":576,"score":57,"level":0},{"x":1256,"y":576,"score":26,"level":0},{"x":807,"y":577,"score":41,"level":0},{"x":844,"y":577,"score":55,"level":0},{"x":996,"y":577,"score":30,"level":0},{"x":1129,"y":577,"score":42,"level":0},{"x":1268,"y":577,"score":36,"level":0},{"x":384,"y":578,"score":61,"level":0},{"x":452,"y":578,"score":30,"level":0},{"x":960,"y":578,"score":26,"level":0},{"x":968,"y":578,"score":41,"level":0},{"x":981,"y":578,"score":27,"level":0},{"x":1045,"y":578,"score":44,"level":0},{"x":1080,"y":578,"score":36,"level":0},{"x":1136,"y":578,"score":33,"level":0},{"x":1285,"y":578,"score":36,"level":0},{"x":819,"y":579,"score":32,"level":0},{"x":824,"y":579,"score":36,"level":0},{"x":887,"y":579,"score":45,"level":0},{"x":1002,"y":579,"score":40,"level":0},{"x":1023,"y":579,"score":34,"level":0},{"x":1263,"y":579,"score":32,"level":0},{"x":1308,"y":579,"score":32,"level":0},{"x":453,"y":580,"score":37,"level":0},{"x":689,"y":580,"score":81,"level":0},{"x":892,"y":580,"score":31,"level":0},{"x":1096,"y":580,"score":30,"level":0},{"x":1187,"y":580,"score":26,"level":0},{"x":1244,"y":580,"score":32,"level":0},{"x":1290,"y":580,"score":69,"level":0},{"x":718,"y":581,"score":34,"level":0},{"x":824,"y":581,"score":37,"level":0},{"x":918,"y":581,"score":29,"level":0},{"x":936,"y":581,"score":30,"level":0},{"x":957,"y":581,"score":26,"level":0},{"x":1066,"y":581,"score":28,"level":0},{"x":1085,"y":581,"score":34,"level":0},{"x":1117,"y":581,"score":56,"level":0},{"x":379,"y":582,"score":47,"level":0},{"x":595,"y":582,"score":44,"level":0},{"x":601,"y":582,"score":30,"level":0},{"x":801,"y":582,"score":31,"level":0},{"x":907,"y":582,"score":35,"level":0},{"x":941,"y":582,"score":54,"level":0},{"x":1013,"y":582,"score":34,"level":0},{"x":1022,"y":582,"score":40,"level":0},{"x":1126,"y":582,"score":42,"level":0},{"x":1215,"y":582,"score":33,"level":0},{"x":1372,"y":582,"score":62,"level":0},{"x":1415,"y":582,"score":32,"level":0},{"x":1451,"y":582,"score":28,"level":0},{"x":1472,"y":582,"score":26,"level":0},{"x":510,"y":583,"score":41,"level":0},{"x":567,"y":583,"score":27,"level":0},{"x":573,"y":583,"score":39,"level":0},{"x":819,"y":583,"score":28,"level":0},{"x":1242,"y":583,"score":39,"level":0},{"x":1303,"y":583,"score":34,"level":0},{"x":1435,"y":583,"score":42,"level":0},{"x":384,"y":584,"score":39,"level":0},{"x":872,"y":584,"score":34,"level":0},{"x":875,"y":584,"score":43,"level":0},{"x":881,"y":584,"score":29,"level":0},{"x":919,"y":584,"score":32,"level":0},{"x":1215,"y":584,"score":49,"level":0},{"x":1221,"y":584,"score":45,"level":0},{"x":1236,"y":584,"score":31,"level":0},{"x":1239,"y":584,"score":47,"level":0},{"x":1286,"y":584,"score":68,"level":0},{"x":504,"y":585,"score":38,"level":0},{"x":810,"y":585,"score":32,"level":0},{"x":892,"y":585,"score":32,"level":0},{"x":1154,"y":585,"score":39,"level":0},{"x":1230,"y":585,"score":50,"level":0},{"x":421,"y":586,"score":52,"level":0},{"x":458,"y":586,"score":40,"level":0},{"x":482,"y":586,"score":26,"level":0},{"x":685,"y":586,"score":39,"level":0},{"x":951,"y":586,"score":28,"level":0},{"x":995,"y":586,"score":29,"level":0},{"x":1061,"y":586,"score":31,"level":0},{"x":1106,"y":586,"score":30,"level":0},{"x":1197,"y":586,"score":33,"level":0},{"x":1205,"y":586,"score":34,"level":0},{"x":1213,"y":586,"score":36,"level":0},{"x":1222,"y":586,"score":34,"level":0},{"x":1310,"y":586,"score":32,"level":0},{"x":1316,"y":586,"score":31,"level":0},{"x":418,"y":587,"score":38,"level":0},{"x":628,"y":587,"score":46,"level":0},{"x":722,"y":587,"score":30,"level":0},{"x":801,"y":587,"score":28,"level":0},{"x":821,"y":587,"score":56,"level":0},{"x":922,"y":587,"score":38,"level":0},{"x":1005,"y":587,"score":29,"level":0},{"x":1012,"y":587,"score":44,"level":0},{"x":1104,"y":587,"score":39,"level":0},{"x":1135,"y":587,"score":43,"level":0},{"x":1169,"y":587,"score":29,"level":0},{"x":377,"y":588,"score":50,"level":0},{"x":751,"y":588,"score":27,"level":0},{"x":929,"y":588,"score":41,"level":0},{"x":948,"y":588,"score":42,"level":0},{"x":1070,"y":588,"score":36,"level":0},{"x":1237,"y":588,"score":38,"level":0},{"x":1242,"y":588,"score":39,"level":0},{"x":1428,"y":588,"score":70,"level":0},{"x":1472,"y":588,"score":28,"level":0},{"x":415,"y":589,"score":31,"level":0},{"x":561,"y":589,"score":39,"level":0},{"x":841,"y":589,"score":30,"level":0},{"x":1061,"y":589,"score":36,"level":0},{"x":1219,"y":589,"score":46,"level":0},{"x":1278,"y":589,"score":27,"level":0},{"x":512,"y":590,"score":32,"level":0},{"x":553,"y":590,"score":28,"level":0},{"x":692,"y":590,"score":26,"level":0},{"x":826,"y":590,"score":33,"level":0},{"x":859,"y":590,"score":40,"level":0},{"x":968,"y":590,"score":29,"level":0},{"x":1036,"y":590,"score":40,"level":0},{"x":1209,"y":590,"score":34,"level":0},{"x":1371,"y":590,"score":48,"level":0},{"x":412,"y":591,"score":36,"level":0},{"x":426,"y":591,"score":27,"level":0},{"x":484,"y":591,"score":26,"level":0},{"x":614,"y":591,"score":95,"level":0},{"x":1055,"y":591,"score":51,"level":0},{"x":1079,"y":591,"score":30,"level":0},{"x":1377,"y":591,"score":35,"level":0},{"x":571,"y":592,"score":28,"level":0},{"x":576,"y":592,"score":27,"level":0},{"x":648,"y":592,"score":36,"level":0},{"x":709,"y":592,"score":30,"level":0},{"x":729,"y":592,"score":41,"level":0},{"x":892,"y":592,"score":27,"level":0},{"x":999,"y":592,"score":40,"level":0},{"x":1050,"y":592,"score":38,"level":0},{"x":1120,"y":592,"score":26,"level":0},{"x":1160,"y":592,"score":35,"level":0},{"x":1245,"y":592,"score":49,"level":0},{"x":1353,"y":592,"score":34,"level":0},{"x":1427,"y":592,"score":47,"level":0},{"x":587,"y":593,"score":29,"level":0},{"x":718,"y":593,"score":30,"level":0},{"x":858,"y":593,"score":35,"level":0},{"x":917,"y":593,"score":40,"level":0},{"x":1079,"y":593,"score":38,"level":0},{"x":1134,"y":593,"score":76,"level":0},{"x":1153,"y":593,"score":70,"level":0},{"x":1198,"y":593,"score":26,"level":0},{"x":1221,"y":593,"score":51,"level":0},{"x":1318,"y":593,"score":36,"level":0},{"x":1331,"y":593,"score":28,"level":0},{"x":443,"y":594,"score":27,"level":0},{"x":474,"y":594,"score":45,"level":0},{"x":632,"y":594,"score":32,"level":0},{"x":728,"y":594,"score":30,"level":0},{"x":844,"y":594,"score":62,"level":0},{"x":930,"y":594,"score":28,"level":0},{"x":1022,"y":594,"score":29,"level":0},{"x":1042,"y":594,"score":28,"level":0},{"x":1126,"y":594,"score":54,"level":0},{"x":1156,"y":594,"score":37,"level":0},{"x":1175,"y":594,"score":27,"level":0},{"x":1203,"y":594,"score":42,"level":0},{"x":1278,"y":594,"score":26,"level":0},{"x":1431,"y":594,"score":57,"level":0},{"x":428,"y":595,"score":36,"level":0},{"x":823,"y":595,"score":32,"level":0},{"x":870,"y":595,"score":36,"level":0},{"x":1108,"y":595,"score":32,"level":0},{"x":1221,"y":595,"score":59,"level":0},{"x":1268,"y":595,"score":26,"level":0},{"x":1299,"y":595,"score":29,"level":0},{"x":1318,"y":595,"score":38,"level":0},{"x":1451,"y":595,"score":38,"level":0},{"x":458,"y":596,"score":52,"level":0},{"x":463,"y":596,"score":52,"level":0},{"x":662,"y":596,"score":28,"level":0},{"x":733,"y":596,"score":58,"level":0},{"x":777,"y":596,"score":30,"level":0},{"x":786,"y":596,"score":41,"level":0},{"x":828,"y":596,"score":47,"level":0},{"x":849,"y":596,"score":79,"level":0},{"x":903,"y":596,"score":49,"level":0},{"x":975,"y":596,"score":28,"level":0},{"x":1029,"y":596,"score":31,"level":0},{"x":1218,"y":596,"score":46,"level":0},{"x":1228,"y":596,"score":45,"level":0},{"x":1310,"y":596,"score":37,"level":0},{"x":1361,"y":596,"score":30,"level":0},{"x":515,"y":597,"score":35,"level":0},{"x":651,"y":597,"score":27,"level":0},{"x":943,"y":597,"score":61,"level":0},{"x":965,"y":597,"score":35,"level":0},{"x":1115,"y":597,"score":28,"level":0},{"x":1117,"y":597,"score":41,"level":0},{"x":1243,"y":597,"score":48,"level":0},{"x":377,"y":598,"score":36,"level":0},{"x":934,"y":598,"score":41,"level":0},{"x":1008,"y":598,"score":28,"level":0},{"x":1069,"y":598,"score":30,"level":0},{"x":1169,"y":598,"score":27,"level":0},{"x":1253,"y":598,"score":26,"level":0},{"x":407,"y":599,"score":30,"level":0},{"x":557,"y":599,"score":48,"level":0},{"x":669,"y":599,"score":26,"level":0},{"x":792,"y":599,"score":31,"level":0},{"x":947,"y":599,"score":26,"level":0},{"x":999,"y":599,"score":40,"level":0},{"x":1050,"y":599,"score":49,"level":0},{"x":1296,"y":599,"score":37,"level":0},{"x":377,"y":600,"score":33,"level":0},{"x":413,"y":600,"score":47,"level":0},{"x":681,"y":600,"score":37,"level":0},{"x":696,"y":600,"score":56,"level":0},{"x":715,"y":600,"score":50,"level":0},{"x":782,"y":600,"score":31,"level":0},{"x":864,"y":600,"score":28,"level":0},{"x":897,"y":600,"score":40,"level":0},{"x":1027,"y":600,"score":28,"level":0},{"x":1132,"y":600,"score":35,"level":0},{"x":1159,"y":600,"score":26,"level":0},{"x":1242,"y":600,"score":45,"level":0},{"x":571,"y":601,"score":38,"level":0},{"x":573,"y":601,"score":30,"level":0},{"x":1069,"y":601,"score":29,"level":0},{"x":1206,"y":601,"score":66,"level":0},{"x":1223,"y":601,"score":54,"level":0},{"x":1296,"y":601,"score":44,"level":0},{"x":1431,"y":601,"score":36,"level":0},{"x":1450,"y":601,"score":35,"level":0},{"x":498,"y":602,"score":35,"level":0},{"x":582,"y":602,"score":38,"level":0},{"x":705,"y":602,"score":42,"level":0},{"x":786,"y":602,"score":26,"level":0},{"x":851,"y":602,"score":54,"level":0},{"x":887,"y":602,"score":27,"level":0},{"x":904,"y":602,"score":27,"level":0},{"x":1037,"y":602,"score":37,"level":0},{"x":1047,"y":602,"score":37,"level":0},{"x":1061,"y":602,"score":37,"level":0},{"x":1086,"y":602,"score":26,"level":0},{"x":1117,"y":602,"score":27,"level":0},{"x":1456,"y":602,"score":71,"level":0},{"x":615,"y":603,"score":56,"level":0},{"x":641,"y":603,"score":38,"level":0},{"x":826,"y":603,"score":90,"level":0},{"x":972,"y":603,"score":31,"level":0},{"x":1010,"y":603,"score":28,"level":0},{"x":1073,"y":603,"score":31,"level":0},{"x":1125,"y":603,"score":33,"level":0},{"x":1228,"y":603,"score":34,"level":0},{"x":1318,"y":603,"score":26,"level":0},{"x":377,"y":604,"score":38,"level":0},{"x":582,"y":604,"score":43,"level":0},{"x":609,"y":604,"score":42,"level":0},{"x":621,"y":604,"score":40,"level":0},{"x":858,"y":604,"score":42,"level":0},{"x":887,"y":604,"score":26,"level":0},{"x":944,"y":604,"score":34,"level":0},{"x":946,"y":604,"score":36,"level":0},{"x":986,"y":604,"score":31,"level":0},{"x":1016,"y":604,"score":32,"level":0},{"x":1066,"y":604,"score":65,"level":0},{"x":1207,"y":604,"score":47,"level":0},{"x":559,"y":605,"score":28,"level":0},{"x":569,"y":605,"score":37,"level":0},{"x":641,"y":605,"score":32,"level":0},{"x":716,"y":605,"score":72,"level":0},{"x":752,"y":605,"score":37,"level":0},{"x":757,"y":605,"score":30,"level":0},{"x":893,"y":605,"score":26,"level":0},{"x":895,"y":605,"score":26,"level":0},{"x":1042,"y":605,"score":39,"level":0},{"x":1111,"y":605,"score":39,"level":0},{"x":1213,"y":605,"score":26,"level":0},{"x":1276,"y":605,"score":27,"level":0},{"x":1365,"y":605,"score":34,"level":0},{"x":1384,"y":605,"score":43,"level":0},{"x":847,"y":606,"score":67,"level":0},{"x":940,"y":606,"score":46,"level":0},{"x":965,"y":606,"score":34,"level":0},{"x":1068,"y":606,"score":87,"level":0},{"x":1247,"y":606,"score":71,"level":0},{"x":1281,"y":606,"score":33,"level":0},{"x":428,"y":607,"score":27,"level":0},{"x":439,"y":607,"score":29,"level":0},{"x":505,"y":607,"score":26,"level":0},{"x":559,"y":607,"score":26,"level":0},{"x":576,"y":607,"score":55,"level":0},{"x":745,"y":607,"score":29,"level":0},{"x":951,"y":607,"score":30,"level":0},{"x":957,"y":607,"score":54,"level":0},{"x":1131,"y":607,"score":32,"level":0},{"x":1176,"y":607,"score":35,"level":0},{"x":1293,"y":607,"score":54,"level":0},{"x":541,"y":608,"score":55,"level":0},{"x":557,"y":608,"score":32,"level":0},{"x":920,"y":608,"score":40,"level":0},{"x":960,"y":608,"score":56,"level":0},{"x":1160,"y":608,"score":58,"level":0},{"x":1222,"y":608,"score":28,"level":0},{"x":460,"y":609,"score":31,"level":0},{"x":561,"y":609,"score":31,"level":0},{"x":678,"y":609,"score":26,"level":0},{"x":751,"y":609,"score":28,"level":0},{"x":812,"y":609,"score":32,"level":0},{"x":844,"y":609,"score":30,"level":0},{"x":858,"y":609,"score":44,"level":0},{"x":905,"y":609,"score":30,"level":0},{"x":907,"y":609,"score":39,"level":0},{"x":972,"y":609,"score":53,"level":0},{"x":1045,"y":609,"score":37,"level":0},{"x":1072,"y":609,"score":78,"level":0},{"x":1094,"y":609,"score":27,"level":0},{"x":1339,"y":609,"score":35,"level":0},{"x":1380,"y":609,"score":49,"level":0},{"x":600,"y":610,"score":81,"level":0},{"x":810,"y":610,"score":34,"level":0},{"x":928,"y":610,"score":32,"level":0},{"x":980,"y":610,"score":30,"level":0},{"x":1091,"y":610,"score":29,"level":0},{"x":1138,"y":610,"score":43,"level":0},{"x":1166,"y":610,"score":54,"level":0},{"x":1330,"y":610,"score":27,"level":0},{"x":1388,"y":610,"score":33,"level":0},{"x":391,"y":611,"score":28,"level":0},{"x":566,"y":611,"score":33,"level":0},{"x":732,"y":611,"score":26,"level":0},{"x":934,"y":611,"score":27,"level":0},{"x":948,"y":611,"score":32,"level":0},{"x":1028,"y":611,"score":68,"level":0},{"x":1034,"y":611,"score":39,"level":0},{"x":1066,"y":611,"score":50,"level":0},{"x":1353,"y":611,"score":32,"level":0},{"x":614,"y":612,"score":27,"level":0},{"x":648,"y":612,"score":30,"level":0},{"x":671,"y":612,"score":32,"level":0},{"x":801,"y":612,"score":28,"level":0},{"x":804,"y":612,"score":32,"level":0},{"x":944,"y":612,"score":37,"level":0},{"x":1090,"y":612,"score":38,"level":0},{"x":1320,"y":612,"score":46,"level":0},{"x":1369,"y":612,"score":64,"level":0},{"x":1458,"y":612,"score":26,"level":0},{"x":566,"y":613,"score":36,"level":0},{"x":690,"y":613,"score":63,"level":0},{"x":738,"y":613,"score":31,"level":0},{"x":773,"y":613,"score":33,"level":0},{"x":775,"y":613,"score":32,"level":0},{"x":812,"y":613,"score":33,"level":0},{"x":914,"y":613,"score":33,"level":0},{"x":389,"y":614,"score":33,"level":0},{"x":420,"y":614,"score":32,"level":0},{"x":507,"y":614,"score":26,"level":0},{"x":817,"y":614,"score":55,"level":0},{"x":919,"y":614,"score":27,"level":0},{"x":1027,"y":614,"score":29,"level":0},{"x":1050,"y":614,"score":41,"level":0},{"x":1052,"y":614,"score":27,"level":0},{"x":1214,"y":614,"score":34,"level":0},{"x":1241,"y":614,"score":79,"level":0},{"x":1339,"y":614,"score":28,"level":0},{"x":1416,"y":614,"score":26,"level":0},{"x":532,"y":615,"score":26,"level":0},{"x":579,"y":615,"score":26,"level":0},{"x":705,"y":615,"score":61,"level":0},{"x":712,"y":615,"score":65,"level":0},{"x":907,"y":615,"score":42,"level":0},{"x":1032,"y":615,"score":46,"level":0},{"x":1292,"y":615,"score":34,"level":0},{"x":1294,"y":615,"score":32,"level":0},{"x":1384,"y":615,"score":28,"level":0},{"x":1477,"y":615,"score":28,"level":0},{"x":435,"y":616,"score":28,"level":0},{"x":638,"y":616,"score":33,"level":0},{"x":916,"y":616,"score":40,"level":0},{"x":1151,"y":616,"score":38,"level":0},{"x":1164,"y":616,"score":56,"level":0},{"x":1215,"y":616,"score":26,"level":0},{"x":1287,"y":616,"score":26,"level":0},{"x":566,"y":617,"score":49,"level":0},{"x":824,"y":617,"score":50,"level":0},{"x":968,"y":617,"score":38,"level":0},{"x":1004,"y":617,"score":38,"level":0},{"x":1013,"y":617,"score":28,"level":0},{"x":1019,"y":617,"score":28,"level":0},{"x":1039,"y":617,"score":31,"level":0},{"x":1170,"y":617,"score":72,"level":0},{"x":1177,"y":617,"score":48,"level":0},{"x":1396,"y":617,"score":31,"level":0},{"x":1476,"y":617,"score":32,"level":0},{"x":539,"y":618,"score":27,"level":0},{"x":587,"y":618,"score":59,"level":0},{"x":620,"y":618,"score":35,"level":0},{"x":756,"y":618,"score":56,"level":0},{"x":808,"y":618,"score":27,"level":0},{"x":937,"y":618,"score":37,"level":0},{"x":943,"y":618,"score":34,"level":0},{"x":999,"y":618,"score":37,"level":0},{"x":1079,"y":618,"score":50,"level":0},{"x":1421,"y":618,"score":32,"level":0},{"x":598,"y":619,"score":42,"level":0},{"x":607,"y":619,"score":94,"level":0},{"x":735,"y":619,"score":37,"level":0},{"x":931,"y":619,"score":36,"level":0},{"x":958,"y":619,"score":27,"level":0},{"x":1022,"y":619,"score":44,"level":0},{"x":1071,"y":619,"score":53,"level":0},{"x":1152,"y":619,"score":30,"level":0},{"x":1169,"y":619,"score":102,"level":0},{"x":600,"y":620,"score":62,"level":0},{"x":823,"y":620,"score":46,"level":0},{"x":968,"y":620,"score":31,"level":0},{"x":1085,"y":620,"score":48,"level":0},{"x":1236,"y":620,"score":38,"level":0},{"x":1241,"y":620,"score":38,"level":0},{"x":1277,"y":620,"score":40,"level":0},{"x":1449,"y":620,"score":38,"level":0},{"x":475,"y":621,"score":28,"level":0},{"x":570,"y":621,"score":34,"level":0},{"x":582,"y":621,"score":34,"level":0},{"x":638,"y":621,"score":31,"level":0},{"x":767,"y":621,"score":40,"level":0},{"x":840,"y":621,"score":44,"level":0},{"x":886,"y":621,"score":44,"level":0},{"x":1147,"y":621,"score":86,"level":0},{"x":1221,"y":621,"score":27,"level":0},{"x":1289,"y":621,"score":28,"level":0},{"x":1387,"y":621,"score":47,"level":0},{"x":437,"y":622,"score":28,"level":0},{"x":644,"y":622,"score":33,"level":0},{"x":720,"y":622,"score":33,"level":0},{"x":811,"y":622,"score":28,"level":0},{"x":851,"y":622,"score":42,"level":0},{"x":980,"y":622,"score":40,"level":0},{"x":1044,"y":622,"score":30,"level":0},{"x":1297,"y":622,"score":37,"level":0},{"x":1372,"y":622,"score":29,"level":0},{"x":387,"y":623,"score":44,"level":0},{"x":393,"y":623,"score":42,"level":0},{"x":480,"y":623,"score":46,"level":0},{"x":542,"y":623,"score":34,"level":0},{"x":567,"y":623,"score":80,"level":0},{"x":601,"y":623,"score":48,"level":0},{"x":604,"y":623,"score":69,"level":0},{"x":610,"y":623,"score":59,"level":0},{"x":652,"y":623,"score":28,"level":0},{"x":829,"y":623,"score":79,"level":0},{"x":891,"y":623,"score":53,"level":0},{"x":944,"y":623,"score":33,"level":0},{"x":1004,"y":623,"score":26,"level":0},{"x":1209,"y":623,"score":38,"level":0},{"x":1270,"y":623,"score":44,"level":0},{"x":1350,"y":623,"score":29,"level":0},{"x":1366,"y":623,"score":35,"level":0},{"x":1387,"y":623,"score":47,"level":0},{"x":1401,"y":623,"score":36,"level":0},{"x":1475,"y":623,"score":31,"level":0},{"x":443,"y":624,"score":37,"level":0},{"x":619,"y":624,"score":48,"level":0},{"x":814,"y":624,"score":31,"level":0},{"x":980,"y":624,"score":28,"level":0},{"x":999,"y":624,"score":26,"level":0},{"x":1035,"y":624,"score":39,"level":0},{"x":1252,"y":624,"score":39,"level":0},{"x":1416,"y":624,"score":42,"level":0},{"x":476,"y":625,"score":29,"level":0},{"x":545,"y":625,"score":34,"level":0},{"x":591,"y":625,"score":29,"level":0},{"x":604,"y":625,"score":78,"level":0},{"x":614,"y":625,"score":40,"level":0},{"x":803,"y":625,"score":41,"level":0},{"x":1099,"y":625,"score":26,"level":0},{"x":1117,"y":625,"score":38,"level":0},{"x":1179,"y":625,"score":35,"level":0},{"x":1183,"y":625,"score":34,"level":0},{"x":1191,"y":625,"score":31,"level":0},{"x":1284,"y":625,"score":26,"level":0},{"x":1452,"y":625,"score":48,"level":0},{"x":572,"y":626,"score":38,"level":0},{"x":924,"y":626,"score":26,"level":0},{"x":955,"y":626,"score":78,"level":0},{"x":1082,"y":626,"score":26,"level":0},{"x":1123,"y":626,"score":28,"level":0},{"x":1176,"y":626,"score":50,"level":0},{"x":1289,"y":626,"score":28,"level":0},{"x":1446,"y":626,"score":31,"level":0},{"x":452,"y":627,"score":27,"level":0},{"x":481,"y":627,"score":38,"level":0},{"x":483,"y":627,"score":41,"level":0},{"x":500,"y":627,"score":32,"level":0},{"x":570,"y":627,"score":40,"level":0},{"x":723,"y":627,"score":66,"level":0},{"x":746,"y":627,"score":27,"level":0},{"x":1074,"y":627,"score":30,"level":0},{"x":1138,"y":627,"score":29,"level":0},{"x":1153,"y":627,"score":27,"level":0},{"x":504,"y":628,"score":27,"level":0},{"x":838,"y":628,"score":71,"level":0},{"x":843,"y":628,"score":41,"level":0},{"x":1059,"y":628,"score":31,"level":0},{"x":1148,"y":628,"score":30,"level":0},{"x":1189,"y":628,"score":47,"level":0},{"x":1242,"y":628,"score":37,"level":0},{"x":1312,"y":628,"score":28,"level":0},{"x":1342,"y":628,"score":32,"level":0},{"x":1436,"y":628,"score":29,"level":0},{"x":482,"y":629,"score":33,"level":0},{"x":534,"y":629,"score":27,"level":0},{"x":681,"y":629,"score":37,"level":0},{"x":703,"y":629,"score":44,"level":0},{"x":880,"y":629,"score":73,"level":0},{"x":901,"y":629,"score":31,"level":0},{"x":1015,"y":629,"score":26,"level":0},{"x":1062,"y":629,"score":32,"level":0},{"x":1093,"y":629,"score":39,"level":0},{"x":1251,"y":629,"score":79,"level":0},{"x":1330,"y":629,"score":31,"level":0},{"x":1336,"y":629,"score":34,"level":0},{"x":1355,"y":629,"score":29,"level":0},{"x":514,"y":630,"score":32,"level":0},{"x":771,"y":630,"score":28,"level":0},{"x":855,"y":630,"score":38,"level":0},{"x":1039,"y":630,"score":38,"level":0},{"x":1179,"y":630,"score":45,"level":0},{"x":1181,"y":630,"score":26,"level":0},{"x":420,"y":631,"score":34,"level":0},{"x":469,"y":631,"score":43,"level":0},{"x":681,"y":631,"score":34,"level":0},{"x":831,"y":631,"score":36,"level":0},{"x":833,"y":631,"score":58,"level":0},{"x":953,"y":631,"score":30,"level":0},{"x":959,"y":631,"score":35,"level":0},{"x":1090,"y":631,"score":42,"level":0},{"x":1187,"y":631,"score":59,"level":0},{"x":1261,"y":631,"score":101,"level":0},{"x":1386,"y":631,"score":35,"level":0},{"x":1398,"y":631,"score":58,"level":0},{"x":1434,"y":631,"score":42,"level":0},{"x":449,"y":632,"score":31,"level":0},{"x":467,"y":632,"score":27,"level":0},{"x":573,"y":632,"score":36,"level":0},{"x":576,"y":632,"score":31,"level":0},{"x":735,"y":632,"score":30,"level":0},{"x":815,"y":632,"score":38,"level":0},{"x":819,"y":632,"score":40,"level":0},{"x":1127,"y":632,"score":26,"level":0},{"x":1132,"y":632,"score":26,"level":0},{"x":1292,"y":632,"score":28,"level":0},{"x":1403,"y":632,"score":59,"level":0},{"x":1477,"y":632,"score":71,"level":0},{"x":1487,"y":632,"score":27,"level":0},{"x":835,"y":633,"score":83,"level":0},{"x":968,"y":633,"score":38,"level":0},{"x":1215,"y":633,"score":27,"level":0},{"x":1275,"y":633,"score":72,"level":0},{"x":1300,"y":633,"score":26,"level":0},{"x":1332,"y":633,"score":39,"level":0},{"x":1400,"y":633,"score":27,"level":0},{"x":1405,"y":633,"score":84,"level":0},{"x":1418,"y":633,"score":51,"level":0},{"x":1452,"y":633,"score":26,"level":0},{"x":407,"y":634,"score":30,"level":0},{"x":637,"y":634,"score":28,"level":0},{"x":698,"y":634,"score":28,"level":0},{"x":710,"y":634,"score":71,"level":0},{"x":841,"y":634,"score":84,"level":0},{"x":847,"y":634,"score":64,"level":0},{"x":1150,"y":634,"score":42,"level":0},{"x":1357,"y":634,"score":35,"level":0},{"x":1410,"y":634,"score":40,"level":0},{"x":472,"y":635,"score":40,"level":0},{"x":532,"y":635,"score":35,"level":0},{"x":602,"y":635,"score":53,"level":0},{"x":619,"y":635,"score":43,"level":0},{"x":671,"y":635,"score":34,"level":0},{"x":862,"y":635,"score":41,"level":0},{"x":991,"y":635,"score":42,"level":0},{"x":996,"y":635,"score":27,"level":0},{"x":1024,"y":635,"score":28,"level":0},{"x":1030,"y":635,"score":49,"level":0},{"x":1111,"y":635,"score":26,"level":0},{"x":1185,"y":635,"score":30,"level":0},{"x":1270,"y":635,"score":36,"level":0},{"x":1289,"y":635,"score":33,"level":0},{"x":1365,"y":635,"score":30,"level":0},{"x":1487,"y":635,"score":44,"level":0},{"x":377,"y":636,"score":64,"level":0},{"x":492,"y":636,"score":26,"level":0},{"x":730,"y":636,"score":26,"level":0},{"x":766,"y":636,"score":27,"level":0},{"x":771,"y":636,"score":52,"level":0},{"x":849,"y":636,"score":28,"level":0},{"x":896,"y":636,"score":26,"level":0},{"x":924,"y":636,"score":30,"level":0},{"x":951,"y":636,"score":36,"level":0},{"x":1005,"y":636,"score":28,"level":0},{"x":1035,"y":636,"score":36,"level":0},{"x":1177,"y":636,"score":56,"level":0},{"x":1238,"y":636,"score":49,"level":0},{"x":1261,"y":636,"score":90,"level":0},{"x":1389,"y":636,"score":34,"level":0},{"x":582,"y":637,"score":26,"level":0},{"x":715,"y":637,"score":31,"level":0},{"x":819,"y":637,"score":34,"level":0},{"x":832,"y":637,"score":32,"level":0},{"x":894,"y":637,"score":26,"level":0},{"x":920,"y":637,"score":30,"level":0},{"x":1010,"y":637,"score":28,"level":0},{"x":1414,"y":637,"score":35,"level":0},{"x":1430,"y":637,"score":95,"level":0},{"x":449,"y":638,"score":66,"level":0},{"x":813,"y":638,"score":30,"level":0},{"x":830,"y":638,"score":52,"level":0},{"x":860,"y":638,"score":62,"level":0},{"x":863,"y":638,"score":56,"level":0},{"x":1016,"y":638,"score":39,"level":0},{"x":1081,"y":638,"score":27,"level":0},{"x":1267,"y":638,"score":54,"level":0},{"x":1365,"y":638,"score":28,"level":0},{"x":1458,"y":638,"score":30,"level":0},{"x":1462,"y":638,"score":75,"level":0},{"x":540,"y":639,"score":48,"level":0},{"x":1101,"y":639,"score":28,"level":0},{"x":1255,"y":639,"score":42,"level":0},{"x":1269,"y":639,"score":43,"level":0},{"x":1346,"y":639,"score":62,"level":0},{"x":1464,"y":639,"score":85,"level":0},{"x":1481,"y":639,"score":95,"level":0},{"x":387,"y":640,"score":33,"level":0},{"x":553,"y":640,"score":29,"level":0},{"x":617,"y":640,"score":31,"level":0},{"x":635,"y":640,"score":28,"level":0},{"x":651,"y":640,"score":38,"level":0},{"x":714,"y":640,"score":37,"level":0},{"x":747,"y":640,"score":26,"level":0},{"x":807,"y":640,"score":26,"level":0},{"x":1099,"y":640,"score":36,"level":0},{"x":1271,"y":640,"score":27,"level":0},{"x":1399,"y":640,"score":28,"level":0},{"x":1466,"y":640,"score":108,"level":0},{"x":1472,"y":640,"score":28,"level":0},{"x":410,"y":641,"score":28,"level":0},{"x":412,"y":641,"score":26,"level":0},{"x":532,"y":641,"score":49,"level":0},{"x":545,"y":641,"score":34,"level":0},{"x":738,"y":641,"score":43,"level":0},{"x":802,"y":641,"score":26,"level":0},{"x":872,"y":641,"score":30,"level":0},{"x":949,"y":641,"score":30,"level":0},{"x":1025,"y":641,"score":41,"level":0},{"x":1034,"y":641,"score":39,"level":0},{"x":1077,"y":641,"score":37,"level":0},{"x":1428,"y":641,"score":43,"level":0},{"x":435,"y":642,"score":46,"level":0},{"x":617,"y":642,"score":39,"level":0},{"x":634,"y":642,"score":31,"level":0},{"x":769,"y":642,"score":29,"level":0},{"x":797,"y":642,"score":40,"level":0},{"x":939,"y":642,"score":26,"level":0},{"x":968,"y":642,"score":35,"level":0},{"x":1005,"y":642,"score":30,"level":0},{"x":1098,"y":642,"score":35,"level":0},{"x":1254,"y":642,"score":26,"level":0},{"x":1282,"y":642,"score":33,"level":0},{"x":1336,"y":642,"score":26,"level":0},{"x":1363,"y":642,"score":42,"level":0},{"x":630,"y":643,"score":30,"level":0},{"x":716,"y":643,"score":42,"level":0},{"x":762,"y":643,"score":47,"level":0},{"x":843,"y":643,"score":26,"level":0},{"x":886,"y":643,"score":50,"level":0},{"x":1284,"y":643,"score":38,"level":0},{"x":1302,"y":643,"score":186,"level":0},{"x":1321,"y":643,"score":43,"level":0},{"x":1332,"y":643,"score":65,"level":0},{"x":496,"y":644,"score":32,"level":0},{"x":600,"y":644,"score":49,"level":0},{"x":645,"y":644,"score":27,"level":0},{"x":841,"y":644,"score":32,"level":0},{"x":848,"y":644,"score":67,"level":0},{"x":866,"y":644,"score":51,"level":0},{"x":930,"y":644,"score":42,"level":0},{"x":996,"y":644,"score":28,"level":0},{"x":1091,"y":644,"score":32,"level":0},{"x":1121,"y":644,"score":30,"level":0},{"x":1129,"y":644,"score":38,"level":0},{"x":1279,"y":644,"score":71,"level":0},{"x":1346,"y":644,"score":40,"level":0},{"x":1368,"y":644,"score":30,"level":0},{"x":447,"y":645,"score":42,"level":0},{"x":528,"y":645,"score":26,"level":0},{"x":696,"y":645,"score":42,"level":0},{"x":762,"y":645,"score":48,"level":0},{"x":821,"y":645,"score":27,"level":0},{"x":895,"y":645,"score":29,"level":0},{"x":1150,"y":645,"score":26,"level":0},{"x":1207,"y":645,"score":30,"level":0},{"x":1448,"y":645,"score":32,"level":0},{"x":463,"y":646,"score":42,"level":0},{"x":626,"y":646,"score":28,"level":0},{"x":658,"y":646,"score":29,"level":0},{"x":1028,"y":646,"score":54,"level":0},{"x":1108,"y":646,"score":36,"level":0},{"x":1119,"y":646,"score":27,"level":0},{"x":1360,"y":646,"score":34,"level":0},{"x":1440,"y":646,"score":28,"level":0},{"x":417,"y":647,"score":34,"level":0},{"x":600,"y":647,"score":48,"level":0},{"x":785,"y":647,"score":33,"level":0},{"x":880,"y":647,"score":38,"level":0},{"x":1069,"y":647,"score":48,"level":0},{"x":1175,"y":647,"score":66,"level":0},{"x":1238,"y":647,"score":40,"level":0},{"x":680,"y":648,"score":30,"level":0},{"x":711,"y":648,"score":39,"level":0},{"x":870,"y":648,"score":69,"level":0},{"x":924,"y":648,"score":26,"level":0},{"x":1152,"y":648,"score":56,"level":0},{"x":1250,"y":648,"score":31,"level":0},{"x":1262,"y":648,"score":30,"level":0},{"x":1341,"y":648,"score":38,"level":0},{"x":377,"y":649,"score":26,"level":0},{"x":619,"y":649,"score":68,"level":0},{"x":691,"y":649,"score":44,"level":0},{"x":732,"y":649,"score":31,"level":0},{"x":919,"y":649,"score":31,"level":0},{"x":1296,"y":649,"score":31,"level":0},{"x":403,"y":650,"score":36,"level":0},{"x":449,"y":650,"score":104,"level":0},{"x":668,"y":650,"score":40,"level":0},{"x":811,"y":650,"score":27,"level":0},{"x":881,"y":650,"score":46,"level":0},{"x":938,"y":650,"score":41,"level":0},{"x":1015,"y":650,"score":62,"level":0},{"x":1033,"y":650,"score":32,"level":0},{"x":1332,"y":650,"score":35,"level":0},{"x":475,"y":651,"score":42,"level":0},{"x":539,"y":651,"score":58,"level":0},{"x":676,"y":651,"score":36,"level":0},{"x":1035,"y":651,"score":45,"level":0},{"x":1080,"y":651,"score":38,"level":0},{"x":1086,"y":651,"score":62,"level":0},{"x":1284,"y":651,"score":27,"level":0},{"x":1392,"y":651,"score":34,"level":0},{"x":1405,"y":651,"score":50,"level":0},{"x":377,"y":652,"score":34,"level":0},{"x":470,"y":652,"score":30,"level":0},{"x":481,"y":652,"score":33,"level":0},{"x":507,"y":652,"score":49,"level":0},{"x":560,"y":652,"score":28,"level":0},{"x":636,"y":652,"score":31,"level":0},{"x":737,"y":652,"score":47,"level":0},{"x":793,"y":652,"score":26,"level":0},{"x":948,"y":652,"score":61,"level":0},{"x":977,"y":652,"score":37,"level":0},{"x":1204,"y":652,"score":28,"level":0},{"x":1319,"y":652,"score":32,"level":0},{"x":1440,"y":652,"score":32,"level":0},{"x":1445,"y":652,"score":33,"level":0},{"x":514,"y":653,"score":30,"level":0},{"x":674,"y":653,"score":27,"level":0},{"x":909,"y":653,"score":35,"level":0},{"x":967,"y":653,"score":37,"level":0},{"x":1141,"y":653,"score":31,"level":0},{"x":1235,"y":653,"score":55,"level":0},{"x":1286,"y":653,"score":34,"level":0},{"x":1331,"y":653,"score":26,"level":0},{"x":1490,"y":653,"score":96,"level":0},{"x":459,"y":654,"score":64,"level":0},{"x":821,"y":654,"score":53,"level":0},{"x":828,"y":654,"score":36,"level":0},{"x":890,"y":654,"score":30,"level":0},{"x":1006,"y":654,"score":42,"level":0},{"x":1222,"y":654,"score":38,"level":0},{"x":1440,"y":654,"score":29,"level":0},{"x":377,"y":655,"score":29,"level":0},{"x":552,"y":655,"score":29,"level":0},{"x":597,"y":655,"score":38,"level":0},{"x":737,"y":655,"score":40,"level":0},{"x":769,"y":655,"score":46,"level":0},{"x":826,"y":655,"score":49,"level":0},{"x":1104,"y":655,"score":52,"level":0},{"x":1243,"y":655,"score":49,"level":0},{"x":1253,"y":655,"score":34,"level":0},{"x":1393,"y":655,"score":31,"level":0},{"x":411,"y":656,"score":47,"level":0},{"x":511,"y":656,"score":31,"level":0},{"x":572,"y":656,"score":28,"level":0},{"x":589,"y":656,"score":30,"level":0},{"x":771,"y":656,"score":33,"level":0},{"x":960,"y":656,"score":48,"level":0},{"x":994,"y":656,"score":33,"level":0},{"x":1056,"y":656,"score":50,"level":0},{"x":1061,"y":656,"score":27,"level":0},{"x":1076,"y":656,"score":39,"level":0},{"x":1116,"y":656,"score":34,"level":0},{"x":1192,"y":656,"score":31,"level":0},{"x":1305,"y":656,"score":35,"level":0},{"x":430,"y":657,"score":26,"level":0},{"x":490,"y":657,"score":33,"level":0},{"x":807,"y":657,"score":34,"level":0},{"x":1093,"y":657,"score":99,"level":0},{"x":1153,"y":657,"score":50,"level":0},{"x":1204,"y":657,"score":38,"level":0},{"x":1267,"y":657,"score":89,"level":0},{"x":1346,"y":657,"score":38,"level":0},{"x":421,"y":658,"score":29,"level":0},{"x":443,"y":658,"score":30,"level":0},{"x":603,"y":658,"score":60,"level":0},{"x":619,"y":658,"score":46,"level":0},{"x":780,"y":658,"score":28,"level":0},{"x":818,"y":658,"score":47,"level":0},{"x":934,"y":658,"score":37,"level":0},{"x":941,"y":658,"score":37,"level":0},{"x":962,"y":658,"score":49,"level":0},{"x":1026,"y":658,"score":62,"level":0},{"x":1102,"y":658,"score":82,"level":0},{"x":1340,"y":658,"score":32,"level":0},{"x":1389,"y":658,"score":80,"level":0},{"x":1431,"y":658,"score":35,"level":0},{"x":1436,"y":658,"score":39,"level":0},{"x":1468,"y":658,"score":32,"level":0},{"x":474,"y":659,"score":32,"level":0},{"x":640,"y":659,"score":28,"level":0},{"x":677,"y":659,"score":47,"level":0},{"x":685,"y":659,"score":31,"level":0},{"x":868,"y":659,"score":60,"level":0},{"x":1015,"y":659,"score":54,"level":0},{"x":1075,"y":659,"score":34,"level":0},{"x":1212,"y":659,"score":28,"level":0},{"x":1222,"y":659,"score":28,"level":0},{"x":1357,"y":659,"score":28,"level":0},{"x":462,"y":660,"score":28,"level":0},{"x":489,"y":660,"score":30,"level":0},{"x":687,"y":660,"score":40,"level":0},{"x":870,"y":660,"score":42,"level":0},{"x":977,"y":660,"score":27,"level":0},{"x":1048,"y":660,"score":45,"level":0},{"x":1255,"y":660,"score":33,"level":0},{"x":1467,"y":660,"score":64,"level":0},{"x":767,"y":661,"score":31,"level":0},{"x":783,"y":661,"score":26,"level":0},{"x":915,"y":661,"score":28,"level":0},{"x":979,"y":661,"score":31,"level":0},{"x":1182,"y":661,"score":27,"level":0},{"x":1193,"y":661,"score":43,"level":0},{"x":1259,"y":661,"score":36,"level":0},{"x":1261,"y":661,"score":49,"level":0},{"x":1284,"y":661,"score":59,"level":0},{"x":1331,"y":661,"score":39,"level":0},{"x":1363,"y":661,"score":56,"level":0},{"x":1392,"y":661,"score":40,"level":0},{"x":1410,"y":661,"score":28,"level":0},{"x":479,"y":662,"score":31,"level":0},{"x":484,"y":662,"score":36,"level":0},{"x":526,"y":662,"score":33,"level":0},{"x":532,"y":662,"score":35,"level":0},{"x":652,"y":662,"score":42,"level":0},{"x":679,"y":662,"score":40,"level":0},{"x":738,"y":662,"score":44,"level":0},{"x":1151,"y":662,"score":30,"level":0},{"x":1156,"y":662,"score":42,"level":0},{"x":1357,"y":662,"score":36,"level":0},{"x":1401,"y":662,"score":34,"level":0},{"x":549,"y":663,"score":38,"level":0},{"x":563,"y":663,"score":35,"level":0},{"x":814,"y":663,"score":33,"level":0},{"x":819,"y":663,"score":34,"level":0},{"x":898,"y":663,"score":33,"level":0},{"x":908,"y":663,"score":37,"level":0},{"x":1090,"y":663,"score":59,"level":0},{"x":1265,"y":663,"score":54,"level":0},{"x":1268,"y":663,"score":57,"level":0},{"x":384,"y":664,"score":29,"level":0},{"x":601,"y":664,"score":40,"level":0},{"x":860,"y":664,"score":28,"level":0},{"x":929,"y":664,"score":27,"level":0},{"x":987,"y":664,"score":34,"level":0},{"x":1017,"y":664,"score":40,"level":0},{"x":1101,"y":664,"score":61,"level":0},{"x":1242,"y":664,"score":69,"level":0},{"x":1256,"y":664,"score":56,"level":0},{"x":1271,"y":664,"score":118,"level":0},{"x":1400,"y":664,"score":31,"level":0},{"x":394,"y":665,"score":48,"level":0},{"x":533,"y":665,"score":39,"level":0},{"x":543,"y":665,"score":32,"level":0},{"x":613,"y":665,"score":54,"level":0},{"x":725,"y":665,"score":42,"level":0},{"x":777,"y":665,"score":52,"level":0},{"x":798,"y":665,"score":28,"level":0},{"x":1026,"y":665,"score":57,"level":0},{"x":1152,"y":665,"score":51,"level":0},{"x":1249,"y":665,"score":61,"level":0},{"x":377,"y":666,"score":62,"level":0},{"x":483,"y":666,"score":26,"level":0},{"x":559,"y":666,"score":38,"level":0},{"x":621,"y":666,"score":27,"level":0},{"x":878,"y":666,"score":42,"level":0},{"x":943,"y":666,"score":33,"level":0},{"x":1089,"y":666,"score":64,"level":0},{"x":1490,"y":666,"score":38,"level":0},{"x":489,"y":667,"score":34,"level":0},{"x":608,"y":667,"score":26,"level":0},{"x":756,"y":667,"score":32,"level":0},{"x":883,"y":667,"score":30,"level":0},{"x":914,"y":667,"score":36,"level":0},{"x":967,"y":667,"score":34,"level":0},{"x":1001,"y":667,"score":30,"level":0},{"x":1061,"y":667,"score":35,"level":0},{"x":1074,"y":667,"score":34,"level":0},{"x":1225,"y":667,"score":35,"level":0},{"x":1259,"y":667,"score":45,"level":0},{"x":1290,"y":667,"score":28,"level":0},{"x":1366,"y":667,"score":34,"level":0},{"x":1415,"y":667,"score":30,"level":0},{"x":1458,"y":667,"score":32,"level":0},{"x":461,"y":668,"score":38,"level":0},{"x":466,"y":668,"score":31,"level":0},{"x":534,"y":668,"score":64,"level":0},{"x":599,"y":668,"score":52,"level":0},{"x":684,"y":668,"score":46,"level":0},{"x":761,"y":668,"score":52,"level":0},{"x":770,"y":668,"score":27,"level":0},{"x":960,"y":668,"score":56,"level":0},{"x":1152,"y":668,"score":35,"level":0},{"x":1284,"y":668,"score":92,"level":0},{"x":1351,"y":668,"score":28,"level":0},{"x":1441,"y":668,"score":30,"level":0},{"x":377,"y":669,"score":37,"level":0},{"x":405,"y":669,"score":26,"level":0},{"x":433,"y":669,"score":47,"level":0},{"x":650,"y":669,"score":26,"level":0},{"x":833,"y":669,"score":45,"level":0},{"x":1125,"y":669,"score":26,"level":0},{"x":1227,"y":669,"score":34,"level":0},{"x":1232,"y":669,"score":30,"level":0},{"x":1326,"y":669,"score":52,"level":0},{"x":396,"y":670,"score":40,"level":0},{"x":455,"y":670,"score":65,"level":0},{"x":602,"y":670,"score":48,"level":0},{"x":657,"y":670,"score":37,"level":0},{"x":718,"y":670,"score":26,"level":0},{"x":738,"y":670,"score":46,"level":0},{"x":775,"y":670,"score":28,"level":0},{"x":801,"y":670,"score":55,"level":0},{"x":868,"y":670,"score":34,"level":0},{"x":1104,"y":670,"score":98,"level":0},{"x":1132,"y":670,"score":32,"level":0},{"x":1173,"y":670,"score":41,"level":0},{"x":1188,"y":670,"score":35,"level":0},{"x":1451,"y":670,"score":31,"level":0},{"x":1469,"y":670,"score":49,"level":0},{"x":446,"y":671,"score":27,"level":0},{"x":468,"y":671,"score":34,"level":0},{"x":539,"y":671,"score":28,"level":0},{"x":541,"y":671,"score":40,"level":0},{"x":600,"y":671,"score":27,"level":0},{"x":609,"y":671,"score":32,"level":0},{"x":706,"y":671,"score":32,"level":0},{"x":713,"y":671,"score":44,"level":0},{"x":773,"y":671,"score":26,"level":0},{"x":792,"y":671,"score":34,"level":0},{"x":841,"y":671,"score":34,"level":0},{"x":863,"y":671,"score":94,"level":0},{"x":1015,"y":671,"score":64,"level":0},{"x":1029,"y":671,"score":73,"level":0},{"x":1036,"y":671,"score":38,"level":0},{"x":1090,"y":671,"score":50,"level":0},{"x":1190,"y":671,"score":26,"level":0},{"x":1230,"y":671,"score":34,"level":0},{"x":1276,"y":671,"score":42,"level":0},{"x":1456,"y":671,"score":28,"level":0},{"x":398,"y":672,"score":64,"level":0},{"x":546,"y":672,"score":33,"level":0},{"x":549,"y":672,"score":35,"level":0},{"x":766,"y":672,"score":66,"level":0},{"x":1067,"y":672,"score":36,"level":0},{"x":1069,"y":672,"score":36,"level":0},{"x":1165,"y":672,"score":26,"level":0},{"x":1228,"y":672,"score":30,"level":0},{"x":1242,"y":672,"score":50,"level":0},{"x":504,"y":673,"score":29,"level":0},{"x":643,"y":673,"score":32,"level":0},{"x":687,"y":673,"score":28,"level":0},{"x":763,"y":673,"score":58,"level":0},{"x":869,"y":673,"score":42,"level":0},{"x":1001,"y":673,"score":39,"level":0},{"x":1045,"y":673,"score":39,"level":0},{"x":1054,"y":673,"score":30,"level":0},{"x":1255,"y":673,"score":64,"level":0},{"x":380,"y":674,"score":64,"level":0},{"x":400,"y":674,"score":38,"level":0},{"x":575,"y":674,"score":30,"level":0},{"x":740,"y":674,"score":34,"level":0},{"x":940,"y":674,"score":48,"level":0},{"x":999,"y":674,"score":28,"level":0},{"x":426,"y":675,"score":28,"level":0},{"x":436,"y":675,"score":45,"level":0},{"x":720,"y":675,"score":31,"level":0},{"x":884,"y":675,"score":34,"level":0},{"x":932,"y":675,"score":26,"level":0},{"x":937,"y":675,"score":52,"level":0},{"x":995,"y":675,"score":30,"level":0},{"x":1127,"y":675,"score":26,"level":0},{"x":1132,"y":675,"score":30,"level":0},{"x":1138,"y":675,"score":30,"level":0},{"x":1216,"y":675,"score":37,"level":0},{"x":539,"y":676,"score":41,"level":0},{"x":772,"y":676,"score":36,"level":0},{"x":822,"y":676,"score":34,"level":0},{"x":930,"y":676,"score":30,"level":0},{"x":991,"y":676,"score":31,"level":0},{"x":1057,"y":676,"score":29,"level":0},{"x":1059,"y":676,"score":33,"level":0},{"x":1083,"y":676,"score":26,"level":0},{"x":1207,"y":676,"score":37,"level":0},{"x":1415,"y":676,"score":31,"level":0},{"x":1420,"y":676,"score":34,"level":0},{"x":1425,"y":676,"score":28,"level":0},{"x":376,"y":677,"score":52,"level":0},{"x":385,"y":677,"score":44,"level":0},{"x":628,"y":677,"score":26,"level":0},{"x":726,"y":677,"score":37,"level":0},{"x":736,"y":677,"score":42,"level":0},{"x":777,"y":677,"score":26,"level":0},{"x":813,"y":677,"score":28,"level":0},{"x":903,"y":677,"score":30,"level":0},{"x":966,"y":677,"score":53,"level":0},{"x":1040,"y":677,"score":36,"level":0},{"x":1051,"y":677,"score":41,"level":0},{"x":1303,"y":677,"score":45,"level":0},{"x":403,"y":678,"score":37,"level":0},{"x":613,"y":678,"score":33,"level":0},{"x":648,"y":678,"score":32,"level":0},{"x":837,"y":678,"score":73,"level":0},{"x":908,"y":678,"score":34,"level":0},{"x":959,"y":678,"score":44,"level":0},{"x":987,"y":678,"score":45,"level":0},{"x":1003,"y":678,"score":60,"level":0},{"x":1013,"y":678,"score":68,"level":0},{"x":1076,"y":678,"score":35,"level":0},{"x":1150,"y":678,"score":37,"level":0},{"x":1167,"y":678,"score":32,"level":0},{"x":1180,"y":678,"score":33,"level":0},{"x":1435,"y":678,"score":26,"level":0},{"x":1468,"y":678,"score":34,"level":0},{"x":465,"y":679,"score":28,"level":0},{"x":473,"y":679,"score":26,"level":0},{"x":475,"y":679,"score":30,"level":0},{"x":526,"y":679,"score":36,"level":0},{"x":726,"y":679,"score":41,"level":0},{"x":867,"y":679,"score":45,"level":0},{"x":984,"y":679,"score":40,"level":0},{"x":1019,"y":679,"score":31,"level":0},{"x":1030,"y":679,"score":49,"level":0},{"x":1101,"y":679,"score":28,"level":0},{"x":1103,"y":679,"score":57,"level":0},{"x":1251,"y":679,"score":34,"level":0},{"x":388,"y":680,"score":35,"level":0},{"x":429,"y":680,"score":32,"level":0},{"x":489,"y":680,"score":30,"level":0},{"x":748,"y":680,"score":29,"level":0},{"x":875,"y":680,"score":44,"level":0},{"x":894,"y":680,"score":26,"level":0},{"x":925,"y":680,"score":32,"level":0},{"x":947,"y":680,"score":50,"level":0},{"x":981,"y":680,"score":58,"level":0},{"x":1270,"y":680,"score":29,"level":0},{"x":1387,"y":680,"score":32,"level":0},{"x":570,"y":681,"score":36,"level":0},{"x":583,"y":681,"score":31,"level":0},{"x":834,"y":681,"score":31,"level":0},{"x":842,"y":681,"score":44,"level":0},{"x":867,"y":681,"score":51,"level":0},{"x":920,"y":681,"score":42,"level":0},{"x":932,"y":681,"score":28,"level":0},{"x":937,"y":681,"score":62,"level":0},{"x":978,"y":681,"score":33,"level":0},{"x":1256,"y":681,"score":38,"level":0},{"x":1261,"y":681,"score":43,"level":0},{"x":1267,"y":681,"score":29,"level":0},{"x":426,"y":682,"score":34,"level":0},{"x":614,"y":682,"score":39,"level":0},{"x":619,"y":682,"score":29,"level":0},{"x":733,"y":682,"score":36,"level":0},{"x":1061,"y":682,"score":56,"level":0},{"x":1104,"y":682,"score":41,"level":0},{"x":1106,"y":682,"score":56,"level":0},{"x":1208,"y":682,"score":46,"level":0},{"x":1304,"y":682,"score":44,"level":0},{"x":1324,"y":682,"score":28,"level":0},{"x":1347,"y":682,"score":28,"level":0},{"x":1462,"y":682,"score":27,"level":0},{"x":639,"y":683,"score":34,"level":0},{"x":738,"y":683,"score":35,"level":0},{"x":1040,"y":683,"score":26,"level":0},{"x":1049,"y":683,"score":38,"level":0},{"x":1092,"y":683,"score":38,"level":0},{"x":1147,"y":683,"score":46,"level":0},{"x":1309,"y":683,"score":28,"level":0},{"x":377,"y":684,"score":51,"level":0},{"x":608,"y":684,"score":53,"level":0},{"x":676,"y":684,"score":52,"level":0},{"x":726,"y":684,"score":30,"level":0},{"x":985,"y":684,"score":29,"level":0},{"x":1090,"y":684,"score":40,"level":0},{"x":1098,"y":684,"score":28,"level":0},{"x":1172,"y":684,"score":30,"level":0},{"x":1178,"y":684,"score":27,"level":0},{"x":1183,"y":684,"score":26,"level":0},{"x":1209,"y":684,"score":30,"level":0},{"x":1435,"y":684,"score":26,"level":0},{"x":442,"y":685,"score":33,"level":0},{"x":573,"y":685,"score":27,"level":0},{"x":689,"y":685,"score":38,"level":0},{"x":900,"y":685,"score":35,"level":0},{"x":1214,"y":685,"score":46,"level":0},{"x":1318,"y":685,"score":32,"level":0},{"x":412,"y":686,"score":30,"level":0},{"x":491,"y":686,"score":44,"level":0},{"x":660,"y":686,"score":38,"level":0},{"x":706,"y":686,"score":28,"level":0},{"x":814,"y":686,"score":29,"level":0},{"x":895,"y":686,"score":36,"level":0},{"x":1019,"y":686,"score":98,"level":0},{"x":1035,"y":686,"score":44,"level":0},{"x":1043,"y":686,"score":61,"level":0},{"x":1232,"y":686,"score":48,"level":0},{"x":1396,"y":686,"score":26,"level":0},{"x":590,"y":687,"score":34,"level":0},{"x":751,"y":687,"score":27,"level":0},{"x":839,"y":687,"score":27,"level":0},{"x":902,"y":687,"score":32,"level":0},{"x":971,"y":687,"score":102,"level":0},{"x":977,"y":687,"score":183,"level":0},{"x":1037,"y":687,"score":50,"level":0},{"x":1145,"y":687,"score":34,"level":0},{"x":1282,"y":687,"score":34,"level":0},{"x":1327,"y":687,"score":50,"level":0},{"x":377,"y":688,"score":29,"level":0},{"x":700,"y":688,"score":44,"level":0},{"x":725,"y":688,"score":40,"level":0},{"x":769,"y":688,"score":28,"level":0},{"x":871,"y":688,"score":41,"level":0},{"x":911,"y":688,"score":54,"level":0},{"x":939,"y":688,"score":49,"level":0},{"x":1048,"y":688,"score":41,"level":0},{"x":1087,"y":688,"score":42,"level":0},{"x":1357,"y":688,"score":114,"level":0},{"x":1472,"y":688,"score":26,"level":0},{"x":474,"y":689,"score":33,"level":0},{"x":746,"y":689,"score":34,"level":0},{"x":824,"y":689,"score":28,"level":0},{"x":840,"y":689,"score":49,"level":0},{"x":1026,"y":689,"score":30,"level":0},{"x":1162,"y":689,"score":46,"level":0},{"x":1410,"y":689,"score":30,"level":0},{"x":1479,"y":689,"score":31,"level":0},{"x":549,"y":690,"score":53,"level":0},{"x":583,"y":690,"score":30,"level":0},{"x":772,"y":690,"score":31,"level":0},{"x":804,"y":690,"score":28,"level":0},{"x":867,"y":690,"score":45,"level":0},{"x":1002,"y":690,"score":26,"level":0},{"x":1096,"y":690,"score":64,"level":0},{"x":1165,"y":690,"score":31,"level":0},{"x":1207,"y":690,"score":28,"level":0},{"x":1443,"y":690,"score":36,"level":0},{"x":1456,"y":690,"score":26,"level":0},{"x":1461,"y":690,"score":43,"level":0},{"x":431,"y":691,"score":54,"level":0},{"x":467,"y":691,"score":38,"level":0},{"x":578,"y":691,"score":34,"level":0},{"x":834,"y":691,"score":36,"level":0},{"x":1044,"y":691,"score":50,"level":0},{"x":1378,"y":691,"score":26,"level":0},{"x":404,"y":692,"score":35,"level":0},{"x":534,"y":692,"score":31,"level":0},{"x":588,"y":692,"score":30,"level":0},{"x":678,"y":692,"score":49,"level":0},{"x":747,"y":692,"score":50,"level":0},{"x":768,"y":692,"score":39,"level":0},{"x":831,"y":692,"score":29,"level":0},{"x":895,"y":692,"score":26,"level":0},{"x":905,"y":692,"score":26,"level":0},{"x":959,"y":692,"score":46,"level":0},{"x":993,"y":692,"score":35,"level":0},{"x":1102,"y":692,"score":66,"level":0},{"x":1335,"y":692,"score":46,"level":0},{"x":656,"y":693,"score":29,"level":0},{"x":694,"y":693,"score":31,"level":0},{"x":744,"y":693,"score":32,"level":0},{"x":809,"y":693,"score":31,"level":0},{"x":816,"y":693,"score":31,"level":0},{"x":818,"y":693,"score":29,"level":0},{"x":847,"y":693,"score":35,"level":0},{"x":976,"y":693,"score":27,"level":0},{"x":1035,"y":693,"score":70,"level":0},{"x":1158,"y":693,"score":38,"level":0},{"x":1181,"y":693,"score":28,"level":0},{"x":1271,"y":693,"score":33,"level":0},{"x":1278,"y":693,"score":30,"level":0},{"x":1283,"y":693,"score":28,"level":0},{"x":1293,"y":693,"score":38,"level":0},{"x":479,"y":694,"score":31,"level":0},{"x":514,"y":694,"score":33,"level":0},{"x":961,"y":694,"score":28,"level":0},{"x":1041,"y":694,"score":68,"level":0},{"x":1194,"y":694,"score":33,"level":0},{"x":1219,"y":694,"score":32,"level":0},{"x":1416,"y":694,"score":38,"level":0},{"x":435,"y":695,"score":29,"level":0},{"x":661,"y":695,"score":51,"level":0},{"x":690,"y":695,"score":31,"level":0},{"x":971,"y":695,"score":40,"level":0},{"x":973,"y":695,"score":47,"level":0},{"x":982,"y":695,"score":30,"level":0},{"x":1111,"y":695,"score":30,"level":0},{"x":1138,"y":695,"score":55,"level":0},{"x":1383,"y":695,"score":77,"level":0},{"x":1396,"y":695,"score":50,"level":0},{"x":431,"y":696,"score":28,"level":0},{"x":571,"y":696,"score":30,"level":0},{"x":695,"y":696,"score":41,"level":0},{"x":707,"y":696,"score":30,"level":0},{"x":816,"y":696,"score":43,"level":0},{"x":923,"y":696,"score":36,"level":0},{"x":939,"y":696,"score":40,"level":0},{"x":1258,"y":696,"score":66,"level":0},{"x":1355,"y":696,"score":58,"level":0},{"x":1461,"y":696,"score":31,"level":0},{"x":444,"y":697,"score":38,"level":0},{"x":533,"y":697,"score":36,"level":0},{"x":562,"y":697,"score":29,"level":0},{"x":622,"y":697,"score":38,"level":0},{"x":729,"y":697,"score":38,"level":0},{"x":881,"y":697,"score":33,"level":0},{"x":945,"y":697,"score":31,"level":0},{"x":1060,"y":697,"score":54,"level":0},{"x":1361,"y":697,"score":29,"level":0},{"x":1468,"y":697,"score":44,"level":0},{"x":579,"y":698,"score":46,"level":0},{"x":734,"y":698,"score":28,"level":0},{"x":818,"y":698,"score":27,"level":0},{"x":869,"y":698,"score":30,"level":0},{"x":917,"y":698,"score":32,"level":0},{"x":940,"y":698,"score":32,"level":0},{"x":955,"y":698,"score":48,"level":0},{"x":1000,"y":698,"score":30,"level":0},{"x":1016,"y":698,"score":26,"level":0},{"x":1097,"y":698,"score":36,"level":0},{"x":1168,"y":698,"score":41,"level":0},{"x":1173,"y":698,"score":48,"level":0},{"x":1211,"y":698,"score":28,"level":0},{"x":1270,"y":698,"score":47,"level":0},{"x":1334,"y":698,"score":49,"level":0},{"x":1340,"y":698,"score":32,"level":0},{"x":1398,"y":698,"score":34,"level":0},{"x":1404,"y":698,"score":71,"level":0},{"x":1418,"y":698,"score":60,"level":0},{"x":1420,"y":698,"score":64,"level":0},{"x":428,"y":699,"score":33,"level":0},{"x":476,"y":699,"score":26,"level":0},{"x":838,"y":699,"score":34,"level":0},{"x":894,"y":699,"score":27,"level":0},{"x":1021,"y":699,"score":34,"level":0},{"x":1090,"y":699,"score":37,"level":0},{"x":1220,"y":699,"score":34,"level":0},{"x":402,"y":700,"score":27,"level":0},{"x":658,"y":700,"score":43,"level":0},{"x":930,"y":700,"score":31,"level":0},{"x":935,"y":700,"score":37,"level":0},{"x":956,"y":700,"score":47,"level":0},{"x":1102,"y":700,"score":34,"level":0},{"x":1309,"y":700,"score":29,"level":0},{"x":1350,"y":700,"score":28,"level":0},{"x":394,"y":701,"score":59,"level":0},{"x":487,"y":701,"score":66,"level":0},{"x":538,"y":701,"score":43,"level":0},{"x":569,"y":701,"score":44,"level":0},{"x":600,"y":701,"score":33,"level":0},{"x":664,"y":701,"score":49,"level":0},{"x":681,"y":701,"score":63,"level":0},{"x":695,"y":701,"score":36,"level":0},{"x":720,"y":701,"score":38,"level":0},{"x":889,"y":701,"score":29,"level":0},{"x":894,"y":701,"score":31,"level":0},{"x":1026,"y":701,"score":30,"level":0},{"x":1127,"y":701,"score":30,"level":0},{"x":1159,"y":701,"score":44,"level":0},{"x":1325,"y":701,"score":26,"level":0},{"x":1381,"y":701,"score":32,"level":0},{"x":1430,"y":701,"score":28,"level":0},{"x":1438,"y":701,"score":32,"level":0},{"x":492,"y":702,"score":39,"level":0},{"x":525,"y":702,"score":45,"level":0},{"x":557,"y":702,"score":29,"level":0},{"x":562,"y":702,"score":27,"level":0},{"x":615,"y":702,"score":26,"level":0},{"x":923,"y":702,"score":28,"level":0},{"x":950,"y":702,"score":26,"level":0},{"x":1188,"y":702,"score":26,"level":0},{"x":1193,"y":702,"score":29,"level":0},{"x":1201,"y":702,"score":28,"level":0},{"x":1341,"y":702,"score":28,"level":0},{"x":451,"y":703,"score":40,"level":0},{"x":631,"y":703,"score":31,"level":0},{"x":648,"y":703,"score":38,"level":0},{"x":656,"y":703,"score":66,"level":0},{"x":688,"y":703,"score":28,"level":0},{"x":702,"y":703,"score":38,"level":0},{"x":724,"y":703,"score":38,"level":0},{"x":740,"y":703,"score":28,"level":0},{"x":742,"y":703,"score":36,"level":0},{"x":804,"y":703,"score":36,"level":0},{"x":813,"y":703,"score":30,"level":0},{"x":818,"y":703,"score":28,"level":0},{"x":833,"y":703,"score":50,"level":0},{"x":1012,"y":703,"score":43,"level":0},{"x":1046,"y":703,"score":30,"level":0},{"x":1396,"y":703,"score":30,"level":0},{"x":1404,"y":703,"score":28,"level":0},{"x":1448,"y":703,"score":33,"level":0},{"x":625,"y":704,"score":32,"level":0},{"x":644,"y":704,"score":31,"level":0},{"x":727,"y":704,"score":33,"level":0},{"x":917,"y":704,"score":42,"level":0},{"x":996,"y":704,"score":30,"level":0},{"x":1092,"y":704,"score":81,"level":0},{"x":1168,"y":704,"score":31,"level":0},{"x":1346,"y":704,"score":34,"level":0},{"x":1393,"y":704,"score":49,"level":0},{"x":1398,"y":704,"score":33,"level":0},{"x":1420,"y":704,"score":30,"level":0},{"x":399,"y":705,"score":28,"level":0},{"x":553,"y":705,"score":43,"level":0},{"x":590,"y":705,"score":85,"level":0},{"x":603,"y":705,"score":40,"level":0},{"x":884,"y":705,"score":35,"level":0},{"x":936,"y":705,"score":49,"level":0},{"x":941,"y":705,"score":64,"level":0},{"x":1046,"y":705,"score":36,"level":0},{"x":1391,"y":705,"score":66,"level":0},{"x":388,"y":706,"score":38,"level":0},{"x":462,"y":706,"score":30,"level":0},{"x":927,"y":706,"score":34,"level":0},{"x":1044,"y":706,"score":30,"level":0},{"x":1101,"y":706,"score":28,"level":0},{"x":1178,"y":706,"score":27,"level":0},{"x":1464,"y":706,"score":32,"level":0},{"x":1469,"y":706,"score":27,"level":0},{"x":377,"y":707,"score":74,"level":0},{"x":488,"y":707,"score":26,"level":0},{"x":669,"y":707,"score":32,"level":0},{"x":1055,"y":707,"score":54,"level":0},{"x":1061,"y":707,"score":26,"level":0},{"x":1349,"y":707,"score":26,"level":0},{"x":1447,"y":707,"score":27,"level":0},{"x":565,"y":708,"score":36,"level":0},{"x":683,"y":708,"score":31,"level":0},{"x":688,"y":708,"score":37,"level":0},{"x":789,"y":708,"score":67,"level":0},{"x":848,"y":708,"score":90,"level":0},{"x":981,"y":708,"score":30,"level":0},{"x":1028,"y":708,"score":46,"level":0},{"x":1059,"y":708,"score":30,"level":0},{"x":1072,"y":708,"score":29,"level":0},{"x":1100,"y":708,"score":43,"level":0},{"x":1102,"y":708,"score":36,"level":0},{"x":1160,"y":708,"score":34,"level":0},{"x":1180,"y":708,"score":30,"level":0},{"x":1217,"y":708,"score":37,"level":0},{"x":1260,"y":708,"score":64,"level":0},{"x":1438,"y":708,"score":28,"level":0},{"x":394,"y":709,"score":30,"level":0},{"x":524,"y":709,"score":30,"level":0},{"x":586,"y":709,"score":45,"level":0},{"x":648,"y":709,"score":34,"level":0},{"x":654,"y":709,"score":52,"level":0},{"x":663,"y":709,"score":35,"level":0},{"x":697,"y":709,"score":50,"level":0},{"x":786,"y":709,"score":32,"level":0},{"x":836,"y":709,"score":26,"level":0},{"x":874,"y":709,"score":33,"level":0},{"x":1135,"y":709,"score":38,"level":0},{"x":1405,"y":709,"score":29,"level":0},{"x":1427,"y":709,"score":27,"level":0},{"x":612,"y":710,"score":32,"level":0},{"x":635,"y":710,"score":27,"level":0},{"x":689,"y":710,"score":39,"level":0},{"x":803,"y":710,"score":41,"level":0},{"x":840,"y":710,"score":78,"level":0},{"x":894,"y":710,"score":30,"level":0},{"x":1060,"y":710,"score":32,"level":0},{"x":1132,"y":710,"score":33,"level":0},{"x":1225,"y":710,"score":47,"level":0},{"x":515,"y":711,"score":32,"level":0},{"x":600,"y":711,"score":54,"level":0},{"x":655,"y":711,"score":57,"level":0},{"x":711,"y":711,"score":26,"level":0},{"x":716,"y":711,"score":36,"level":0},{"x":727,"y":711,"score":35,"level":0},{"x":742,"y":711,"score":38,"level":0},{"x":749,"y":711,"score":72,"level":0},{"x":826,"y":711,"score":36,"level":0},{"x":934,"y":711,"score":32,"level":0},{"x":1015,"y":711,"score":27,"level":0},{"x":1195,"y":711,"score":26,"level":0},{"x":1451,"y":711,"score":33,"level":0},{"x":417,"y":712,"score":40,"level":0},{"x":470,"y":712,"score":49,"level":0},{"x":497,"y":712,"score":68,"level":0},{"x":606,"y":712,"score":72,"level":0},{"x":650,"y":712,"score":41,"level":0},{"x":740,"y":712,"score":28,"level":0},{"x":1087,"y":712,"score":34,"level":0},{"x":464,"y":713,"score":26,"level":0},{"x":702,"y":713,"score":40,"level":0},{"x":720,"y":713,"score":32,"level":0},{"x":843,"y":713,"score":43,"level":0},{"x":846,"y":713,"score":41,"level":0},{"x":975,"y":713,"score":54,"level":0},{"x":1270,"y":713,"score":35,"level":0},{"x":1393,"y":713,"score":44,"level":0},{"x":1397,"y":713,"score":42,"level":0},{"x":1403,"y":713,"score":38,"level":0},{"x":666,"y":714,"score":48,"level":0},{"x":887,"y":714,"score":34,"level":0},{"x":1204,"y":714,"score":28,"level":0},{"x":1235,"y":714,"score":32,"level":0},{"x":1284,"y":714,"score":46,"level":0},{"x":1426,"y":714,"score":34,"level":0},{"x":1479,"y":714,"score":34,"level":0},{"x":376,"y":715,"score":32,"level":0},{"x":395,"y":715,"score":44,"level":0},{"x":488,"y":715,"score":42,"level":0},{"x":731,"y":715,"score":29,"level":0},{"x":739,"y":715,"score":31,"level":0},{"x":754,"y":715,"score":37,"level":0},{"x":770,"y":715,"score":62,"level":0},{"x":895,"y":715,"score":26,"level":0},{"x":960,"y":715,"score":72,"level":0},{"x":1005,"y":715,"score":26,"level":0},{"x":1237,"y":715,"score":35,"level":0},{"x":1458,"y":715,"score":42,"level":0},{"x":1463,"y":715,"score":39,"level":0},{"x":503,"y":716,"score":26,"level":0},{"x":521,"y":716,"score":34,"level":0},{"x":582,"y":716,"score":56,"level":0},{"x":639,"y":716,"score":36,"level":0},{"x":775,"y":716,"score":46,"level":0},{"x":946,"y":716,"score":26,"level":0},{"x":1256,"y":716,"score":32,"level":0},{"x":1276,"y":716,"score":26,"level":0},{"x":1441,"y":716,"score":37,"level":0},{"x":683,"y":717,"score":46,"level":0},{"x":711,"y":717,"score":28,"level":0},{"x":952,"y":717,"score":45,"level":0},{"x":959,"y":717,"score":43,"level":0},{"x":1024,"y":717,"score":30,"level":0},{"x":1041,"y":717,"score":70,"level":0},{"x":1182,"y":717,"score":47,"level":0},{"x":1185,"y":717,"score":52,"level":0},{"x":1190,"y":717,"score":28,"level":0},{"x":1410,"y":717,"score":34,"level":0},{"x":1417,"y":717,"score":44,"level":0},{"x":422,"y":718,"score":27,"level":0},{"x":558,"y":718,"score":31,"level":0},{"x":577,"y":718,"score":35,"level":0},{"x":650,"y":718,"score":31,"level":0},{"x":747,"y":718,"score":72,"level":0},{"x":773,"y":718,"score":40,"level":0},{"x":991,"y":718,"score":35,"level":0},{"x":997,"y":718,"score":29,"level":0},{"x":1046,"y":718,"score":36,"level":0},{"x":1121,"y":718,"score":28,"level":0},{"x":1162,"y":718,"score":28,"level":0},{"x":1168,"y":718,"score":41,"level":0},{"x":1217,"y":718,"score":30,"level":0},{"x":601,"y":719,"score":33,"level":0},{"x":713,"y":719,"score":30,"level":0},{"x":972,"y":719,"score":33,"level":0},{"x":1129,"y":719,"score":27,"level":0},{"x":1265,"y":719,"score":49,"level":0},{"x":1304,"y":719,"score":36,"level":0},{"x":1361,"y":719,"score":27,"level":0},{"x":1453,"y":719,"score":27,"level":0},{"x":385,"y":720,"score":44,"level":0},{"x":394,"y":720,"score":44,"level":0},{"x":539,"y":720,"score":58,"level":0},{"x":606,"y":720,"score":46,"level":0},{"x":684,"y":720,"score":57,"level":0},{"x":956,"y":720,"score":51,"level":0},{"x":1033,"y":720,"score":29,"level":0},{"x":1144,"y":720,"score":58,"level":0},{"x":391,"y":721,"score":40,"level":0},{"x":478,"y":721,"score":26,"level":0},{"x":487,"y":721,"score":42,"level":0},{"x":621,"y":721,"score":37,"level":0},{"x":634,"y":721,"score":44,"level":0},{"x":877,"y":721,"score":29,"level":0},{"x":999,"y":721,"score":28,"level":0},{"x":1300,"y":721,"score":27,"level":0},{"x":1453,"y":721,"score":33,"level":0},{"x":1458,"y":721,"score":27,"level":0},{"x":1464,"y":721,"score":32,"level":0},{"x":539,"y":722,"score":32,"level":0},{"x":541,"y":722,"score":33,"level":0},{"x":549,"y":722,"score":41,"level":0},{"x":555,"y":722,"score":70,"level":0},{"x":731,"y":722,"score":56,"level":0},{"x":736,"y":722,"score":44,"level":0},{"x":777,"y":722,"score":42,"level":0},{"x":796,"y":722,"score":42,"level":0},{"x":889,"y":722,"score":48,"level":0},{"x":904,"y":722,"score":26,"level":0},{"x":953,"y":722,"score":36,"level":0},{"x":1027,"y":722,"score":36,"level":0},{"x":1048,"y":722,"score":27,"level":0},{"x":1053,"y":722,"score":26,"level":0},{"x":1183,"y":722,"score":32,"level":0},{"x":1277,"y":722,"score":45,"level":0},{"x":1290,"y":722,"score":34,"level":0},{"x":1320,"y":722,"score":37,"level":0},{"x":1370,"y":722,"score":28,"level":0},{"x":1415,"y":722,"score":44,"level":0},{"x":700,"y":723,"score":32,"level":0},{"x":726,"y":723,"score":34,"level":0},{"x":742,"y":723,"score":40,"level":0},{"x":898,"y":723,"score":32,"level":0},{"x":940,"y":723,"score":39,"level":0},{"x":1211,"y":723,"score":27,"level":0},{"x":682,"y":724,"score":41,"level":0},{"x":685,"y":724,"score":38,"level":0},{"x":693,"y":724,"score":30,"level":0},{"x":736,"y":724,"score":58,"level":0},{"x":767,"y":724,"score":27,"level":0},{"x":804,"y":724,"score":33,"level":0},{"x":918,"y":724,"score":34,"level":0},{"x":1246,"y":724,"score":35,"level":0},{"x":1327,"y":724,"score":36,"level":0},{"x":415,"y":725,"score":27,"level":0},{"x":550,"y":725,"score":38,"level":0},{"x":567,"y":725,"score":29,"level":0},{"x":576,"y":725,"score":42,"level":0},{"x":581,"y":725,"score":33,"level":0},{"x":595,"y":725,"score":26,"level":0},{"x":650,"y":725,"score":31,"level":0},{"x":656,"y":725,"score":36,"level":0},{"x":747,"y":725,"score":33,"level":0},{"x":809,"y":725,"score":36,"level":0},{"x":882,"y":725,"score":40,"level":0},{"x":955,"y":725,"score":57,"level":0},{"x":1081,"y":725,"score":59,"level":0},{"x":1148,"y":725,"score":30,"level":0},{"x":1332,"y":725,"score":44,"level":0},{"x":379,"y":726,"score":48,"level":0},{"x":384,"y":726,"score":47,"level":0},{"x":390,"y":726,"score":42,"level":0},{"x":470,"y":726,"score":26,"level":0},{"x":544,"y":726,"score":28,"level":0},{"x":667,"y":726,"score":40,"level":0},{"x":850,"y":726,"score":27,"level":0},{"x":898,"y":726,"score":31,"level":0},{"x":1439,"y":726,"score":38,"level":0},{"x":1444,"y":726,"score":40,"level":0},{"x":388,"y":727,"score":43,"level":0},{"x":608,"y":727,"score":34,"level":0},{"x":631,"y":727,"score":26,"level":0},{"x":740,"y":727,"score":27,"level":0},{"x":774,"y":727,"score":27,"level":0},{"x":971,"y":727,"score":54,"level":0},{"x":1087,"y":727,"score":67,"level":0},{"x":1098,"y":727,"score":34,"level":0},{"x":1320,"y":727,"score":32,"level":0},{"x":1364,"y":727,"score":36,"level":0},{"x":1376,"y":727,"score":31,"level":0},{"x":544,"y":728,"score":28,"level":0},{"x":850,"y":728,"score":52,"level":0},{"x":936,"y":728,"score":45,"level":0},{"x":1029,"y":728,"score":46,"level":0},{"x":1044,"y":728,"score":28,"level":0},{"x":1046,"y":728,"score":28,"level":0},{"x":1170,"y":728,"score":54,"level":0},{"x":1201,"y":728,"score":39,"level":0},{"x":1207,"y":728,"score":30,"level":0},{"x":1249,"y":728,"score":34,"level":0},{"x":1404,"y":728,"score":40,"level":0},{"x":513,"y":729,"score":28,"level":0},{"x":590,"y":729,"score":36,"level":0},{"x":693,"y":729,"score":32,"level":0},{"x":708,"y":729,"score":28,"level":0},{"x":740,"y":729,"score":35,"level":0},{"x":765,"y":729,"score":41,"level":0},{"x":782,"y":729,"score":28,"level":0},{"x":877,"y":729,"score":46,"level":0},{"x":916,"y":729,"score":30,"level":0},{"x":981,"y":729,"score":32,"level":0},{"x":1006,"y":729,"score":36,"level":0},{"x":1074,"y":729,"score":26,"level":0},{"x":1096,"y":729,"score":39,"level":0},{"x":1123,"y":729,"score":27,"level":0},{"x":1144,"y":729,"score":45,"level":0},{"x":1326,"y":729,"score":32,"level":0},{"x":1427,"y":729,"score":30,"level":0},{"x":377,"y":730,"score":34,"level":0},{"x":413,"y":730,"score":26,"level":0},{"x":421,"y":730,"score":26,"level":0},{"x":436,"y":730,"score":32,"level":0},{"x":832,"y":730,"score":32,"level":0},{"x":1029,"y":730,"score":34,"level":0},{"x":1414,"y":730,"score":39,"level":0},{"x":660,"y":731,"score":41,"level":0},{"x":717,"y":731,"score":33,"level":0},{"x":821,"y":731,"score":40,"level":0},{"x":877,"y":731,"score":52,"level":0},{"x":957,"y":731,"score":53,"level":0},{"x":1168,"y":731,"score":52,"level":0},{"x":1400,"y":731,"score":36,"level":0},{"x":1486,"y":731,"score":30,"level":0},{"x":435,"y":732,"score":42,"level":0},{"x":775,"y":732,"score":33,"level":0},{"x":804,"y":732,"score":40,"level":0},{"x":810,"y":732,"score":36,"level":0},{"x":1012,"y":732,"score":40,"level":0},{"x":1025,"y":732,"score":69,"level":0},{"x":590,"y":733,"score":27,"level":0},{"x":640,"y":733,"score":30,"level":0},{"x":701,"y":733,"score":30,"level":0},{"x":821,"y":733,"score":32,"level":0},{"x":1048,"y":733,"score":26,"level":0},{"x":1115,"y":733,"score":30,"level":0},{"x":1294,"y":733,"score":29,"level":0},{"x":1426,"y":733,"score":50,"level":0},{"x":412,"y":734,"score":29,"level":0},{"x":626,"y":734,"score":51,"level":0},{"x":710,"y":734,"score":26,"level":0},{"x":846,"y":734,"score":50,"level":0},{"x":1121,"y":734,"score":32,"level":0},{"x":1179,"y":734,"score":32,"level":0},{"x":1247,"y":734,"score":81,"level":0},{"x":1288,"y":734,"score":40,"level":0},{"x":1408,"y":734,"score":55,"level":0},{"x":484,"y":735,"score":53,"level":0},{"x":570,"y":735,"score":48,"level":0},{"x":589,"y":735,"score":38,"level":0},{"x":699,"y":735,"score":35,"level":0},{"x":894,"y":735,"score":69,"level":0},{"x":899,"y":735,"score":34,"level":0},{"x":948,"y":735,"score":37,"level":0},{"x":953,"y":735,"score":57,"level":0},{"x":972,"y":735,"score":64,"level":0},{"x":1002,"y":735,"score":40,"level":0},{"x":1139,"y":735,"score":32,"level":0},{"x":1148,"y":735,"score":29,"level":0},{"x":1186,"y":735,"score":31,"level":0},{"x":1196,"y":735,"score":28,"level":0},{"x":1228,"y":735,"score":44,"level":0},{"x":1343,"y":735,"score":32,"level":0},{"x":1353,"y":735,"score":56,"level":0},{"x":1359,"y":735,"score":33,"level":0},{"x":647,"y":736,"score":29,"level":0},{"x":662,"y":736,"score":45,"level":0},{"x":677,"y":736,"score":38,"level":0},{"x":854,"y":736,"score":38,"level":0},{"x":889,"y":736,"score":40,"level":0},{"x":1271,"y":736,"score":69,"level":0},{"x":1460,"y":736,"score":39,"level":0},{"x":378,"y":737,"score":64,"level":0},{"x":391,"y":737,"score":28,"level":0},{"x":453,"y":737,"score":31,"level":0},{"x":459,"y":737,"score":63,"level":0},{"x":474,"y":737,"score":28,"level":0},{"x":482,"y":737,"score":63,"level":0},{"x":817,"y":737,"score":29,"level":0},{"x":925,"y":737,"score":32,"level":0},{"x":984,"y":737,"score":33,"level":0},{"x":1030,"y":737,"score":26,"level":0},{"x":1069,"y":737,"score":36,"level":0},{"x":1166,"y":737,"score":34,"level":0},{"x":396,"y":738,"score":32,"level":0},{"x":417,"y":738,"score":42,"level":0},{"x":437,"y":738,"score":50,"level":0},{"x":738,"y":738,"score":34,"level":0},{"x":854,"y":738,"score":44,"level":0},{"x":884,"y":738,"score":40,"level":0},{"x":915,"y":738,"score":33,"level":0},{"x":930,"y":738,"score":28,"level":0},{"x":1208,"y":738,"score":28,"level":0},{"x":513,"y":739,"score":27,"level":0},{"x":705,"y":739,"score":44,"level":0},{"x":778,"y":739,"score":40,"level":0},{"x":848,"y":739,"score":44,"level":0},{"x":895,"y":739,"score":43,"level":0},{"x":920,"y":739,"score":35,"level":0},{"x":1015,"y":739,"score":28,"level":0},{"x":1114,"y":739,"score":31,"level":0},{"x":1366,"y":739,"score":28,"level":0},{"x":1429,"y":739,"score":26,"level":0},{"x":1444,"y":739,"score":52,"level":0},{"x":418,"y":740,"score":45,"level":0},{"x":423,"y":740,"score":50,"level":0},{"x":602,"y":740,"score":30,"level":0},{"x":631,"y":740,"score":26,"level":0},{"x":679,"y":740,"score":30,"level":0},{"x":726,"y":740,"score":28,"level":0},{"x":807,"y":740,"score":26,"level":0},{"x":1039,"y":740,"score":62,"level":0},{"x":1439,"y":740,"score":60,"level":0},{"x":488,"y":741,"score":28,"level":0},{"x":533,"y":741,"score":44,"level":0},{"x":623,"y":741,"score":34,"level":0},{"x":687,"y":741,"score":26,"level":0},{"x":766,"y":741,"score":34,"level":0},{"x":856,"y":741,"score":58,"level":0},{"x":858,"y":741,"score":29,"level":0},{"x":942,"y":741,"score":32,"level":0},{"x":947,"y":741,"score":46,"level":0},{"x":1131,"y":741,"score":29,"level":0},{"x":1143,"y":741,"score":33,"level":0},{"x":1286,"y":741,"score":29,"level":0},{"x":1345,"y":741,"score":27,"level":0},{"x":1364,"y":741,"score":28,"level":0},{"x":1415,"y":741,"score":39,"level":0},{"x":1465,"y":741,"score":35,"level":0},{"x":410,"y":742,"score":42,"level":0},{"x":561,"y":742,"score":30,"level":0},{"x":950,"y":742,"score":26,"level":0},{"x":956,"y":742,"score":39,"level":0},{"x":982,"y":742,"score":41,"level":0},{"x":984,"y":742,"score":45,"level":0},{"x":1294,"y":742,"score":27,"level":0},{"x":1332,"y":742,"score":29,"level":0},{"x":1473,"y":742,"score":27,"level":0},{"x":529,"y":743,"score":39,"level":0},{"x":608,"y":743,"score":41,"level":0},{"x":655,"y":743,"score":48,"level":0},{"x":681,"y":743,"score":27,"level":0},{"x":701,"y":743,"score":31,"level":0},{"x":992,"y":743,"score":28,"level":0},{"x":1045,"y":743,"score":35,"level":0},{"x":1102,"y":743,"score":75,"level":0},{"x":1189,"y":743,"score":28,"level":0},{"x":1286,"y":743,"score":33,"level":0},{"x":1298,"y":743,"score":40,"level":0},{"x":406,"y":744,"score":26,"level":0},{"x":434,"y":744,"score":40,"level":0},{"x":771,"y":744,"score":35,"level":0},{"x":1025,"y":744,"score":26,"level":0},{"x":1085,"y":744,"score":38,"level":0},{"x":1322,"y":744,"score":27,"level":0},{"x":1327,"y":744,"score":27,"level":0},{"x":417,"y":745,"score":32,"level":0},{"x":543,"y":745,"score":48,"level":0},{"x":790,"y":745,"score":32,"level":0},{"x":819,"y":745,"score":30,"level":0},{"x":843,"y":745,"score":50,"level":0},{"x":848,"y":745,"score":40,"level":0},{"x":920,"y":745,"score":32,"level":0},{"x":938,"y":745,"score":26,"level":0},{"x":943,"y":745,"score":29,"level":0},{"x":967,"y":745,"score":35,"level":0},{"x":1307,"y":745,"score":27,"level":0},{"x":1337,"y":745,"score":30,"level":0},{"x":624,"y":746,"score":40,"level":0},{"x":678,"y":746,"score":31,"level":0},{"x":734,"y":746,"score":34,"level":0},{"x":807,"y":746,"score":33,"level":0},{"x":896,"y":746,"score":38,"level":0},{"x":1041,"y":746,"score":36,"level":0},{"x":1248,"y":746,"score":45,"level":0},{"x":1356,"y":746,"score":38,"level":0},{"x":1403,"y":746,"score":36,"level":0},{"x":1432,"y":746,"score":30,"level":0},{"x":377,"y":747,"score":56,"level":0},{"x":469,"y":747,"score":33,"level":0},{"x":476,"y":747,"score":27,"level":0},{"x":481,"y":747,"score":30,"level":0},{"x":658,"y":747,"score":37,"level":0},{"x":988,"y":747,"score":34,"level":0},{"x":1033,"y":747,"score":32,"level":0},{"x":1220,"y":747,"score":34,"level":0},{"x":1336,"y":747,"score":65,"level":0},{"x":1429,"y":747,"score":26,"level":0},{"x":1441,"y":747,"score":30,"level":0},{"x":454,"y":748,"score":26,"level":0},{"x":519,"y":748,"score":31,"level":0},{"x":586,"y":748,"score":83,"level":0},{"x":627,"y":748,"score":46,"level":0},{"x":691,"y":748,"score":32,"level":0},{"x":955,"y":748,"score":32,"level":0},{"x":1083,"y":748,"score":34,"level":0},{"x":1122,"y":748,"score":32,"level":0},{"x":1372,"y":748,"score":29,"level":0},{"x":1374,"y":748,"score":26,"level":0},{"x":475,"y":749,"score":34,"level":0},{"x":636,"y":749,"score":30,"level":0},{"x":671,"y":749,"score":37,"level":0},{"x":719,"y":749,"score":26,"level":0},{"x":846,"y":749,"score":55,"level":0},{"x":860,"y":749,"score":78,"level":0},{"x":868,"y":749,"score":67,"level":0},{"x":880,"y":749,"score":39,"level":0},{"x":1028,"y":749,"score":57,"level":0},{"x":425,"y":750,"score":54,"level":0},{"x":434,"y":750,"score":86,"level":0},{"x":553,"y":750,"score":46,"level":0},{"x":557,"y":750,"score":28,"level":0},{"x":591,"y":750,"score":33,"level":0},{"x":948,"y":750,"score":27,"level":0},{"x":984,"y":750,"score":42,"level":0},{"x":1083,"y":750,"score":34,"level":0},{"x":1132,"y":750,"score":29,"level":0},{"x":1137,"y":750,"score":38,"level":0},{"x":1154,"y":750,"score":27,"level":0},{"x":1417,"y":750,"score":26,"level":0},{"x":1423,"y":750,"score":64,"level":0},{"x":631,"y":751,"score":28,"level":0},{"x":888,"y":751,"score":32,"level":0},{"x":893,"y":751,"score":28,"level":0},{"x":970,"y":751,"score":30,"level":0},{"x":978,"y":751,"score":52,"level":0},{"x":1179,"y":751,"score":97,"level":0},{"x":417,"y":752,"score":26,"level":0},{"x":1073,"y":752,"score":31,"level":0},{"x":1114,"y":752,"score":56,"level":0},{"x":1162,"y":752,"score":55,"level":0},{"x":1344,"y":752,"score":43,"level":0},{"x":1378,"y":752,"score":26,"level":0},{"x":539,"y":753,"score":74,"level":0},{"x":598,"y":753,"score":37,"level":0},{"x":705,"y":753,"score":36,"level":0},{"x":849,"y":753,"score":34,"level":0},{"x":863,"y":753,"score":33,"level":0},{"x":946,"y":753,"score":34,"level":0},{"x":952,"y":753,"score":28,"level":0},{"x":1244,"y":753,"score":30,"level":0},{"x":1284,"y":753,"score":30,"level":0},{"x":1383,"y":753,"score":28,"level":0},{"x":1389,"y":753,"score":45,"level":0},{"x":1405,"y":753,"score":27,"level":0},{"x":1441,"y":753,"score":28,"level":0},{"x":1468,"y":753,"score":39,"level":0},{"x":463,"y":754,"score":46,"level":0},{"x":507,"y":754,"score":28,"level":0},{"x":530,"y":754,"score":30,"level":0},{"x":545,"y":754,"score":35,"level":0},{"x":579,"y":754,"score":42,"level":0},{"x":667,"y":754,"score":29,"level":0},{"x":710,"y":754,"score":30,"level":0},{"x":727,"y":754,"score":42,"level":0},{"x":772,"y":754,"score":35,"level":0},{"x":841,"y":754,"score":53,"level":0},{"x":846,"y":754,"score":31,"level":0},{"x":865,"y":754,"score":26,"level":0},{"x":885,"y":754,"score":32,"level":0},{"x":944,"y":754,"score":31,"level":0},{"x":1085,"y":754,"score":36,"level":0},{"x":1328,"y":754,"score":27,"level":0},{"x":1354,"y":754,"score":31,"level":0},{"x":1466,"y":754,"score":31,"level":0},{"x":447,"y":755,"score":58,"level":0},{"x":527,"y":755,"score":50,"level":0},{"x":807,"y":755,"score":34,"level":0},{"x":878,"y":755,"score":56,"level":0},{"x":917,"y":755,"score":34,"level":0},{"x":1249,"y":755,"score":56,"level":0},{"x":1432,"y":755,"score":61,"level":0},{"x":472,"y":756,"score":29,"level":0},{"x":572,"y":756,"score":30,"level":0},{"x":718,"y":756,"score":28,"level":0},{"x":810,"y":756,"score":30,"level":0},{"x":813,"y":756,"score":27,"level":0},{"x":871,"y":756,"score":56,"level":0},{"x":1131,"y":756,"score":27,"level":0},{"x":1317,"y":756,"score":42,"level":0},{"x":1336,"y":756,"score":37,"level":0},{"x":1416,"y":756,"score":54,"level":0},{"x":398,"y":757,"score":26,"level":0},{"x":403,"y":757,"score":32,"level":0},{"x":549,"y":757,"score":64,"level":0},{"x":864,"y":757,"score":31,"level":0},{"x":877,"y":757,"score":39,"level":0},{"x":978,"y":757,"score":33,"level":0},{"x":1035,"y":757,"score":47,"level":0},{"x":1041,"y":757,"score":28,"level":0},{"x":1186,"y":757,"score":49,"level":0},{"x":1190,"y":757,"score":32,"level":0},{"x":1276,"y":757,"score":38,"level":0},{"x":1330,"y":757,"score":27,"level":0},{"x":476,"y":758,"score":26,"level":0},{"x":557,"y":758,"score":40,"level":0},{"x":559,"y":758,"score":42,"level":0},{"x":617,"y":758,"score":30,"level":0},{"x":686,"y":758,"score":42,"level":0},{"x":705,"y":758,"score":28,"level":0},{"x":776,"y":758,"score":34,"level":0},{"x":830,"y":758,"score":50,"level":0},{"x":858,"y":758,"score":35,"level":0},{"x":927,"y":758,"score":46,"level":0},{"x":932,"y":758,"score":32,"level":0},{"x":1107,"y":758,"score":32,"level":0},{"x":1237,"y":758,"score":29,"level":0},{"x":1349,"y":758,"score":65,"level":0},{"x":1439,"y":758,"score":30,"level":0},{"x":538,"y":759,"score":39,"level":0},{"x":563,"y":759,"score":36,"level":0},{"x":608,"y":759,"score":26,"level":0},{"x":712,"y":759,"score":26,"level":0},{"x":720,"y":759,"score":32,"level":0},{"x":1029,"y":759,"score":41,"level":0},{"x":1153,"y":759,"score":29,"level":0},{"x":1195,"y":759,"score":40,"level":0},{"x":1284,"y":759,"score":44,"level":0},{"x":1292,"y":759,"score":32,"level":0},{"x":1340,"y":759,"score":27,"level":0},{"x":1358,"y":759,"score":68,"level":0},{"x":1361,"y":759,"score":29,"level":0},{"x":1464,"y":759,"score":28,"level":0},{"x":439,"y":760,"score":116,"level":0},{"x":467,"y":760,"score":36,"level":0},{"x":472,"y":760,"score":32,"level":0},{"x":505,"y":760,"score":32,"level":0},{"x":526,"y":760,"score":26,"level":0},{"x":749,"y":760,"score":30,"level":0},{"x":797,"y":760,"score":26,"level":0},{"x":873,"y":760,"score":55,"level":0},{"x":942,"y":760,"score":57,"level":0},{"x":989,"y":760,"score":32,"level":0},{"x":1182,"y":760,"score":79,"level":0},{"x":1289,"y":760,"score":30,"level":0},{"x":1375,"y":760,"score":38,"level":0},{"x":1402,"y":760,"score":29,"level":0},{"x":1474,"y":760,"score":29,"level":0},{"x":413,"y":761,"score":37,"level":0},{"x":538,"y":761,"score":44,"level":0},{"x":544,"y":761,"score":76,"level":0},{"x":677,"y":761,"score":45,"level":0},{"x":802,"y":761,"score":29,"level":0},{"x":839,"y":761,"score":29,"level":0},{"x":842,"y":761,"score":29,"level":0},{"x":1063,"y":761,"score":26,"level":0},{"x":1424,"y":761,"score":82,"level":0},{"x":1432,"y":761,"score":82,"level":0},{"x":1456,"y":761,"score":38,"level":0},{"x":1480,"y":761,"score":38,"level":0},{"x":523,"y":762,"score":30,"level":0},{"x":770,"y":762,"score":36,"level":0},{"x":873,"y":762,"score":26,"level":0},{"x":971,"y":762,"score":30,"level":0},{"x":979,"y":762,"score":68,"level":0},{"x":1107,"y":762,"score":31,"level":0},{"x":1272,"y":762,"score":41,"level":0},{"x":1411,"y":762,"score":28,"level":0},{"x":402,"y":763,"score":42,"level":0},{"x":419,"y":763,"score":44,"level":0},{"x":471,"y":763,"score":26,"level":0},{"x":541,"y":763,"score":37,"level":0},{"x":560,"y":763,"score":61,"level":0},{"x":566,"y":763,"score":26,"level":0},{"x":656,"y":763,"score":50,"level":0},{"x":823,"y":763,"score":37,"level":0},{"x":854,"y":763,"score":27,"level":0},{"x":1026,"y":763,"score":38,"level":0},{"x":1046,"y":763,"score":26,"level":0},{"x":1114,"y":763,"score":52,"level":0},{"x":1197,"y":763,"score":31,"level":0},{"x":1221,"y":763,"score":34,"level":0},{"x":1237,"y":763,"score":32,"level":0},{"x":531,"y":764,"score":50,"level":0},{"x":563,"y":764,"score":32,"level":0},{"x":616,"y":764,"score":36,"level":0},{"x":622,"y":764,"score":46,"level":0},{"x":701,"y":764,"score":26,"level":0},{"x":933,"y":764,"score":37,"level":0},{"x":940,"y":764,"score":29,"level":0},{"x":970,"y":764,"score":26,"level":0},{"x":1037,"y":764,"score":38,"level":0},{"x":1103,"y":764,"score":58,"level":0},{"x":1144,"y":764,"score":30,"level":0},{"x":1150,"y":764,"score":49,"level":0},{"x":1168,"y":764,"score":55,"level":0},{"x":1226,"y":764,"score":34,"level":0},{"x":1282,"y":764,"score":30,"level":0},{"x":1336,"y":764,"score":36,"level":0},{"x":1449,"y":764,"score":60,"level":0},{"x":413,"y":765,"score":37,"level":0},{"x":559,"y":765,"score":38,"level":0},{"x":602,"y":765,"score":50,"level":0},{"x":627,"y":765,"score":34,"level":0},{"x":656,"y":765,"score":28,"level":0},{"x":662,"y":765,"score":31,"level":0},{"x":664,"y":765,"score":56,"level":0},{"x":715,"y":765,"score":37,"level":0},{"x":720,"y":765,"score":28,"level":0},{"x":762,"y":765,"score":39,"level":0},{"x":833,"y":765,"score":31,"level":0},{"x":922,"y":765,"score":38,"level":0},{"x":1108,"y":765,"score":32,"level":0},{"x":1291,"y":765,"score":27,"level":0},{"x":1464,"y":765,"score":32,"level":0},{"x":496,"y":766,"score":40,"level":0},{"x":546,"y":766,"score":48,"level":0},{"x":725,"y":766,"score":47,"level":0},{"x":825,"y":766,"score":38,"level":0},{"x":1157,"y":766,"score":43,"level":0},{"x":1219,"y":766,"score":32,"level":0},{"x":440,"y":767,"score":64,"level":0},{"x":459,"y":767,"score":48,"level":0},{"x":505,"y":767,"score":54,"level":0},{"x":555,"y":767,"score":68,"level":0},{"x":590,"y":767,"score":33,"level":0},{"x":785,"y":767,"score":28,"level":0},{"x":883,"y":767,"score":64,"level":0},{"x":903,"y":767,"score":28,"level":0},{"x":914,"y":767,"score":35,"level":0},{"x":921,"y":767,"score":42,"level":0},{"x":926,"y":767,"score":29,"level":0},{"x":1252,"y":767,"score":30,"level":0},{"x":1317,"y":767,"score":26,"level":0},{"x":1327,"y":767,"score":29,"level":0},{"x":1435,"y":767,"score":32,"level":0},{"x":410,"y":768,"score":34,"level":0},{"x":474,"y":768,"score":28,"level":0},{"x":560,"y":768,"score":32,"level":0},{"x":706,"y":768,"score":32,"level":0},{"x":709,"y":768,"score":34,"level":0},{"x":901,"y":768,"score":28,"level":0},{"x":943,"y":768,"score":52,"level":0},{"x":981,"y":768,"score":45,"level":0},{"x":1340,"y":768,"score":67,"level":0},{"x":1359,"y":768,"score":61,"level":0},{"x":416,"y":769,"score":45,"level":0},{"x":593,"y":769,"score":30,"level":0},{"x":714,"y":769,"score":41,"level":0},{"x":863,"y":769,"score":39,"level":0},{"x":1037,"y":769,"score":29,"level":0},{"x":1209,"y":769,"score":32,"level":0},{"x":431,"y":770,"score":41,"level":0},{"x":460,"y":770,"score":76,"level":0},{"x":514,"y":770,"score":32,"level":0},{"x":580,"y":770,"score":26,"level":0},{"x":659,"y":770,"score":30,"level":0},{"x":702,"y":770,"score":30,"level":0},{"x":722,"y":770,"score":41,"level":0},{"x":796,"y":770,"score":32,"level":0},{"x":846,"y":770,"score":41,"level":0},{"x":985,"y":770,"score":30,"level":0},{"x":1080,"y":770,"score":32,"level":0},{"x":1459,"y":770,"score":89,"level":0},{"x":453,"y":771,"score":29,"level":0},{"x":497,"y":771,"score":29,"level":0},{"x":651,"y":771,"score":68,"level":0},{"x":656,"y":771,"score":60,"level":0},{"x":700,"y":771,"score":36,"level":0},{"x":832,"y":771,"score":30,"level":0},{"x":977,"y":771,"score":48,"level":0},{"x":1036,"y":771,"score":39,"level":0},{"x":1078,"y":771,"score":30,"level":0},{"x":1135,"y":771,"score":32,"level":0},{"x":1443,"y":771,"score":67,"level":0},{"x":424,"y":772,"score":33,"level":0},{"x":444,"y":772,"score":49,"level":0},{"x":481,"y":772,"score":34,"level":0},{"x":508,"y":772,"score":42,"level":0},{"x":568,"y":772,"score":38,"level":0},{"x":586,"y":772,"score":28,"level":0},{"x":649,"y":772,"score":49,"level":0},{"x":670,"y":772,"score":27,"level":0},{"x":928,"y":772,"score":31,"level":0},{"x":1156,"y":772,"score":32,"level":0},{"x":453,"y":773,"score":47,"level":0},{"x":459,"y":773,"score":60,"level":0},{"x":767,"y":773,"score":28,"level":0},{"x":801,"y":773,"score":27,"level":0},{"x":1183,"y":773,"score":42,"level":0},{"x":1188,"y":773,"score":34,"level":0},{"x":1273,"y":773,"score":86,"level":0},{"x":1346,"y":773,"score":29,"level":0},{"x":1414,"y":773,"score":28,"level":0},{"x":386,"y":774,"score":28,"level":0},{"x":897,"y":774,"score":38,"level":0},{"x":1005,"y":774,"score":48,"level":0},{"x":1305,"y":774,"score":30,"level":0},{"x":1337,"y":774,"score":26,"level":0},{"x":1468,"y":774,"score":32,"level":0},{"x":377,"y":775,"score":64,"level":0},{"x":426,"y":775,"score":36,"level":0},{"x":431,"y":775,"score":28,"level":0},{"x":436,"y":775,"score":31,"level":0},{"x":443,"y":775,"score":55,"level":0},{"x":471,"y":775,"score":37,"level":0},{"x":477,"y":775,"score":38,"level":0},{"x":774,"y":775,"score":27,"level":0},{"x":832,"y":775,"score":26,"level":0},{"x":878,"y":775,"score":30,"level":0},{"x":933,"y":775,"score":58,"level":0},{"x":938,"y":775,"score":52,"level":0},{"x":1022,"y":775,"score":36,"level":0},{"x":1225,"y":775,"score":33,"level":0},{"x":1405,"y":775,"score":28,"level":0},{"x":1433,"y":775,"score":31,"level":0},{"x":1449,"y":775,"score":34,"level":0},{"x":1457,"y":775,"score":35,"level":0},{"x":748,"y":776,"score":27,"level":0},{"x":977,"y":776,"score":68,"level":0},{"x":1069,"y":776,"score":26,"level":0},{"x":1269,"y":776,"score":43,"level":0},{"x":1379,"y":776,"score":26,"level":0},{"x":486,"y":777,"score":35,"level":0},{"x":515,"y":777,"score":28,"level":0},{"x":528,"y":777,"score":26,"level":0},{"x":579,"y":777,"score":33,"level":0},{"x":1040,"y":777,"score":37,"level":0},{"x":1165,"y":777,"score":48,"level":0},{"x":1220,"y":777,"score":37,"level":0},{"x":1233,"y":777,"score":40,"level":0},{"x":443,"y":778,"score":39,"level":0},{"x":546,"y":778,"score":38,"level":0},{"x":648,"y":778,"score":26,"level":0},{"x":829,"y":778,"score":28,"level":0},{"x":1161,"y":778,"score":27,"level":0},{"x":1264,"y":778,"score":33,"level":0},{"x":1276,"y":778,"score":28,"level":0},{"x":1398,"y":778,"score":29,"level":0},{"x":459,"y":779,"score":40,"level":0},{"x":561,"y":779,"score":37,"level":0},{"x":697,"y":779,"score":29,"level":0},{"x":840,"y":779,"score":46,"level":0},{"x":913,"y":779,"score":27,"level":0},{"x":1029,"y":779,"score":49,"level":0},{"x":1114,"y":779,"score":30,"level":0},{"x":1323,"y":779,"score":30,"level":0},{"x":1328,"y":779,"score":29,"level":0},{"x":1442,"y":779,"score":31,"level":0},{"x":1444,"y":779,"score":27,"level":0},{"x":1473,"y":779,"score":28,"level":0},{"x":403,"y":780,"score":33,"level":0},{"x":563,"y":780,"score":26,"level":0},{"x":603,"y":780,"score":41,"level":0},{"x":707,"y":780,"score":35,"level":0},{"x":717,"y":780,"score":62,"level":0},{"x":968,"y":780,"score":36,"level":0},{"x":1078,"y":780,"score":72,"level":0},{"x":1167,"y":780,"score":33,"level":0},{"x":1172,"y":780,"score":30,"level":0},{"x":1465,"y":780,"score":42,"level":0},{"x":446,"y":781,"score":70,"level":0},{"x":464,"y":781,"score":54,"level":0},{"x":554,"y":781,"score":60,"level":0},{"x":615,"y":781,"score":47,"level":0},{"x":794,"y":781,"score":30,"level":0},{"x":850,"y":781,"score":29,"level":0},{"x":865,"y":781,"score":43,"level":0},{"x":933,"y":781,"score":48,"level":0},{"x":983,"y":781,"score":26,"level":0},{"x":1014,"y":781,"score":44,"level":0},{"x":1030,"y":781,"score":43,"level":0},{"x":1045,"y":781,"score":27,"level":0},{"x":1387,"y":781,"score":35,"level":0},{"x":408,"y":782,"score":38,"level":0},{"x":503,"y":782,"score":40,"level":0},{"x":515,"y":782,"score":38,"level":0},{"x":530,"y":782,"score":32,"level":0},{"x":563,"y":782,"score":33,"level":0},{"x":684,"y":782,"score":31,"level":0},{"x":845,"y":782,"score":36,"level":0},{"x":913,"y":782,"score":35,"level":0},{"x":1188,"y":782,"score":38,"level":0},{"x":1340,"y":782,"score":34,"level":0},{"x":1359,"y":782,"score":39,"level":0},{"x":494,"y":783,"score":42,"level":0},{"x":588,"y":783,"score":28,"level":0},{"x":920,"y":783,"score":31,"level":0},{"x":941,"y":783,"score":43,"level":0},{"x":988,"y":783,"score":56,"level":0},{"x":1134,"y":783,"score":27,"level":0},{"x":1153,"y":783,"score":39,"level":0},{"x":1183,"y":783,"score":67,"level":0},{"x":1277,"y":783,"score":48,"level":0},{"x":1282,"y":783,"score":30,"level":0},{"x":1470,"y":783,"score":75,"level":0},{"x":418,"y":784,"score":34,"level":0},{"x":546,"y":784,"score":43,"level":0},{"x":1287,"y":784,"score":39,"level":0},{"x":1392,"y":784,"score":55,"level":0},{"x":1398,"y":784,"score":28,"level":0},{"x":1422,"y":784,"score":33,"level":0},{"x":617,"y":785,"score":29,"level":0},{"x":818,"y":785,"score":37,"level":0},{"x":1114,"y":785,"score":26,"level":0},{"x":1166,"y":785,"score":41,"level":0},{"x":1239,"y":785,"score":32,"level":0},{"x":1371,"y":785,"score":39,"level":0},{"x":1430,"y":785,"score":32,"level":0},{"x":485,"y":786,"score":27,"level":0},{"x":675,"y":786,"score":38,"level":0},{"x":869,"y":786,"score":45,"level":0},{"x":1008,"y":786,"score":34,"level":0},{"x":1229,"y":786,"score":32,"level":0},{"x":1339,"y":786,"score":37,"level":0},{"x":1363,"y":786,"score":62,"level":0},{"x":1382,"y":786,"score":86,"level":0},{"x":382,"y":787,"score":42,"level":0},{"x":403,"y":787,"score":35,"level":0},{"x":543,"y":787,"score":67,"level":0},{"x":549,"y":787,"score":49,"level":0},{"x":673,"y":787,"score":32,"level":0},{"x":764,"y":787,"score":36,"level":0},{"x":770,"y":787,"score":39,"level":0},{"x":772,"y":787,"score":38,"level":0},{"x":840,"y":787,"score":34,"level":0},{"x":850,"y":787,"score":31,"level":0},{"x":908,"y":787,"score":34,"level":0},{"x":1005,"y":787,"score":34,"level":0},{"x":1028,"y":787,"score":41,"level":0},{"x":1112,"y":787,"score":26,"level":0},{"x":1194,"y":787,"score":32,"level":0},{"x":1298,"y":787,"score":26,"level":0},{"x":1318,"y":787,"score":26,"level":0},{"x":1347,"y":787,"score":36,"level":0},{"x":1376,"y":787,"score":35,"level":0},{"x":1410,"y":787,"score":45,"level":0},{"x":1447,"y":787,"score":41,"level":0},{"x":1456,"y":787,"score":40,"level":0},{"x":502,"y":788,"score":30,"level":0},{"x":517,"y":788,"score":29,"level":0},{"x":662,"y":788,"score":30,"level":0},{"x":778,"y":788,"score":32,"level":0},{"x":923,"y":788,"score":54,"level":0},{"x":929,"y":788,"score":60,"level":0},{"x":971,"y":788,"score":44,"level":0},{"x":1153,"y":788,"score":31,"level":0},{"x":1242,"y":788,"score":26,"level":0},{"x":1345,"y":788,"score":39,"level":0},{"x":1389,"y":788,"score":65,"level":0},{"x":1468,"y":788,"score":49,"level":0},{"x":459,"y":789,"score":60,"level":0},{"x":464,"y":789,"score":27,"level":0},{"x":595,"y":789,"score":41,"level":0},{"x":665,"y":789,"score":27,"level":0},{"x":700,"y":789,"score":33,"level":0},{"x":736,"y":789,"score":48,"level":0},{"x":754,"y":789,"score":34,"level":0},{"x":980,"y":789,"score":37,"level":0},{"x":1139,"y":789,"score":36,"level":0},{"x":1361,"y":789,"score":40,"level":0},{"x":1401,"y":789,"score":37,"level":0},{"x":1415,"y":789,"score":30,"level":0},{"x":511,"y":790,"score":36,"level":0},{"x":604,"y":790,"score":38,"level":0},{"x":726,"y":790,"score":45,"level":0},{"x":1040,"y":790,"score":29,"level":0},{"x":1079,"y":790,"score":27,"level":0},{"x":1123,"y":790,"score":30,"level":0},{"x":1356,"y":790,"score":32,"level":0},{"x":1406,"y":790,"score":27,"level":0},{"x":492,"y":791,"score":28,"level":0},{"x":634,"y":791,"score":28,"level":0},{"x":636,"y":791,"score":50,"level":0},{"x":754,"y":791,"score":41,"level":0},{"x":851,"y":791,"score":33,"level":0},{"x":1034,"y":791,"score":30,"level":0},{"x":1280,"y":791,"score":64,"level":0},{"x":1381,"y":791,"score":48,"level":0},{"x":1463,"y":791,"score":54,"level":0},{"x":383,"y":792,"score":37,"level":0},{"x":557,"y":792,"score":40,"level":0},{"x":719,"y":792,"score":45,"level":0},{"x":728,"y":792,"score":34,"level":0},{"x":835,"y":792,"score":28,"level":0},{"x":1181,"y":792,"score":52,"level":0},{"x":1185,"y":792,"score":63,"level":0},{"x":1430,"y":792,"score":32,"level":0},{"x":405,"y":793,"score":26,"level":0},{"x":416,"y":793,"score":33,"level":0},{"x":437,"y":793,"score":33,"level":0},{"x":487,"y":793,"score":28,"level":0},{"x":520,"y":793,"score":33,"level":0},{"x":639,"y":793,"score":40,"level":0},{"x":884,"y":793,"score":30,"level":0},{"x":941,"y":793,"score":29,"level":0},{"x":990,"y":793,"score":26,"level":0},{"x":1211,"y":793,"score":34,"level":0},{"x":1376,"y":793,"score":70,"level":0},{"x":1468,"y":793,"score":26,"level":0},{"x":581,"y":794,"score":33,"level":0},{"x":647,"y":794,"score":28,"level":0},{"x":679,"y":794,"score":34,"level":0},{"x":790,"y":794,"score":37,"level":0},{"x":871,"y":794,"score":39,"level":0},{"x":979,"y":794,"score":36,"level":0},{"x":985,"y":794,"score":28,"level":0},{"x":995,"y":794,"score":30,"level":0},{"x":1206,"y":794,"score":27,"level":0},{"x":400,"y":795,"score":26,"level":0},{"x":475,"y":795,"score":27,"level":0},{"x":571,"y":795,"score":26,"level":0},{"x":827,"y":795,"score":31,"level":0},{"x":838,"y":795,"score":44,"level":0},{"x":893,"y":795,"score":40,"level":0},{"x":938,"y":795,"score":46,"level":0},{"x":1290,"y":795,"score":44,"level":0},{"x":1318,"y":795,"score":27,"level":0},{"x":458,"y":796,"score":38,"level":0},{"x":549,"y":796,"score":32,"level":0},{"x":659,"y":796,"score":29,"level":0},{"x":679,"y":796,"score":45,"level":0},{"x":690,"y":796,"score":34,"level":0},{"x":702,"y":796,"score":33,"level":0},{"x":717,"y":796,"score":27,"level":0},{"x":824,"y":796,"score":44,"level":0},{"x":1229,"y":796,"score":29,"level":0},{"x":1379,"y":796,"score":33,"level":0},{"x":1413,"y":796,"score":54,"level":0},{"x":481,"y":797,"score":29,"level":0},{"x":562,"y":797,"score":30,"level":0},{"x":639,"y":797,"score":35,"level":0},{"x":968,"y":797,"score":34,"level":0},{"x":1107,"y":797,"score":45,"level":0},{"x":1179,"y":797,"score":40,"level":0},{"x":1256,"y":797,"score":26,"level":0},{"x":1390,"y":797,"score":27,"level":0},{"x":389,"y":798,"score":38,"level":0},{"x":487,"y":798,"score":30,"level":0},{"x":598,"y":798,"score":27,"level":0},{"x":632,"y":798,"score":26,"level":0},{"x":688,"y":798,"score":27,"level":0},{"x":997,"y":798,"score":32,"level":0},{"x":1002,"y":798,"score":29,"level":0},{"x":1007,"y":798,"score":38,"level":0},{"x":1185,"y":798,"score":30,"level":0},{"x":1234,"y":798,"score":46,"level":0},{"x":1480,"y":798,"score":35,"level":0},{"x":377,"y":799,"score":51,"level":0},{"x":481,"y":799,"score":40,"level":0},{"x":492,"y":799,"score":28,"level":0},{"x":550,"y":799,"score":33,"level":0},{"x":642,"y":799,"score":46,"level":0},{"x":649,"y":799,"score":26,"level":0},{"x":723,"y":799,"score":26,"level":0},{"x":760,"y":799,"score":29,"level":0},{"x":1050,"y":799,"score":27,"level":0},{"x":1297,"y":799,"score":28,"level":0},{"x":1454,"y":799,"score":30,"level":0},{"x":1478,"y":799,"score":47,"level":0},{"x":390,"y":800,"score":28,"level":0},{"x":464,"y":800,"score":36,"level":0},{"x":472,"y":800,"score":31,"level":0},{"x":596,"y":800,"score":51,"level":0},{"x":733,"y":800,"score":31,"level":0},{"x":765,"y":800,"score":30,"level":0},{"x":783,"y":800,"score":54,"level":0},{"x":941,"y":800,"score":88,"level":0},{"x":1058,"y":800,"score":38,"level":0},{"x":1489,"y":800,"score":55,"level":0},{"x":393,"y":801,"score":28,"level":0},{"x":437,"y":801,"score":36,"level":0},{"x":771,"y":801,"score":51,"level":0},{"x":824,"y":801,"score":26,"level":0},{"x":1259,"y":801,"score":54,"level":0},{"x":1285,"y":801,"score":32,"level":0},{"x":1425,"y":801,"score":32,"level":0},{"x":431,"y":802,"score":29,"level":0},{"x":582,"y":802,"score":26,"level":0},{"x":810,"y":802,"score":30,"level":0},{"x":1070,"y":802,"score":51,"level":0},{"x":1317,"y":802,"score":38,"level":0},{"x":1440,"y":802,"score":31,"level":0},{"x":392,"y":803,"score":44,"level":0},{"x":453,"y":803,"score":36,"level":0},{"x":531,"y":803,"score":80,"level":0},{"x":552,"y":803,"score":38,"level":0},{"x":588,"y":803,"score":40,"level":0},{"x":816,"y":803,"score":38,"level":0},{"x":992,"y":803,"score":35,"level":0},{"x":997,"y":803,"score":33,"level":0},{"x":1432,"y":803,"score":52,"level":0},{"x":408,"y":804,"score":31,"level":0},{"x":557,"y":804,"score":27,"level":0},{"x":624,"y":804,"score":64,"level":0},{"x":648,"y":804,"score":30,"level":0},{"x":714,"y":804,"score":32,"level":0},{"x":884,"y":804,"score":28,"level":0},{"x":895,"y":804,"score":28,"level":0},{"x":900,"y":804,"score":34,"level":0},{"x":924,"y":804,"score":31,"level":0},{"x":1003,"y":804,"score":36,"level":0},{"x":1050,"y":804,"score":27,"level":0},{"x":1251,"y":804,"score":31,"level":0},{"x":1465,"y":804,"score":33,"level":0},{"x":413,"y":805,"score":44,"level":0},{"x":471,"y":805,"score":28,"level":0},{"x":616,"y":805,"score":34,"level":0},{"x":717,"y":805,"score":26,"level":0},{"x":937,"y":805,"score":62,"level":0},{"x":976,"y":805,"score":45,"level":0},{"x":1303,"y":805,"score":56,"level":0},{"x":1369,"y":805,"score":28,"level":0},{"x":1472,"y":805,"score":36,"level":0},{"x":383,"y":806,"score":29,"level":0},{"x":463,"y":806,"score":40,"level":0},{"x":517,"y":806,"score":26,"level":0},{"x":563,"y":806,"score":30,"level":0},{"x":587,"y":806,"score":46,"level":0},{"x":728,"y":806,"score":39,"level":0},{"x":734,"y":806,"score":30,"level":0},{"x":815,"y":806,"score":32,"level":0},{"x":847,"y":806,"score":31,"level":0},{"x":859,"y":806,"score":29,"level":0},{"x":944,"y":806,"score":29,"level":0},{"x":946,"y":806,"score":55,"level":0},{"x":1254,"y":806,"score":35,"level":0},{"x":1427,"y":806,"score":26,"level":0},{"x":584,"y":807,"score":27,"level":0},{"x":705,"y":807,"score":30,"level":0},{"x":781,"y":807,"score":63,"level":0},{"x":844,"y":807,"score":34,"level":0},{"x":891,"y":807,"score":28,"level":0},{"x":1282,"y":807,"score":27,"level":0},{"x":1440,"y":807,"score":33,"level":0},{"x":392,"y":808,"score":27,"level":0},{"x":423,"y":808,"score":36,"level":0},{"x":596,"y":808,"score":41,"level":0},{"x":696,"y":808,"score":37,"level":0},{"x":717,"y":808,"score":34,"level":0},{"x":974,"y":808,"score":64,"level":0},{"x":992,"y":808,"score":48,"level":0},{"x":1087,"y":808,"score":29,"level":0},{"x":1192,"y":808,"score":31,"level":0},{"x":1256,"y":808,"score":32,"level":0},{"x":1259,"y":808,"score":32,"level":0},{"x":1317,"y":808,"score":26,"level":0},{"x":377,"y":809,"score":44,"level":0},{"x":491,"y":809,"score":26,"level":0},{"x":549,"y":809,"score":54,"level":0},{"x":590,"y":809,"score":38,"level":0},{"x":773,"y":809,"score":30,"level":0},{"x":900,"y":809,"score":46,"level":0},{"x":987,"y":809,"score":46,"level":0},{"x":1050,"y":809,"score":28,"level":0},{"x":1057,"y":809,"score":38,"level":0},{"x":1215,"y":809,"score":30,"level":0},{"x":1389,"y":809,"score":51,"level":0},{"x":667,"y":810,"score":32,"level":0},{"x":850,"y":810,"score":39,"level":0},{"x":931,"y":810,"score":30,"level":0},{"x":937,"y":810,"score":27,"level":0},{"x":940,"y":810,"score":39,"level":0},{"x":1004,"y":810,"score":26,"level":0},{"x":1095,"y":810,"score":27,"level":0},{"x":1181,"y":810,"score":55,"level":0},{"x":1258,"y":810,"score":32,"level":0},{"x":1307,"y":810,"score":27,"level":0},{"x":531,"y":811,"score":28,"level":0},{"x":565,"y":811,"score":28,"level":0},{"x":615,"y":811,"score":61,"level":0},{"x":855,"y":811,"score":60,"level":0},{"x":882,"y":811,"score":40,"level":0},{"x":892,"y":811,"score":28,"level":0},{"x":981,"y":811,"score":30,"level":0},{"x":1030,"y":811,"score":37,"level":0},{"x":1040,"y":811,"score":28,"level":0},{"x":1137,"y":811,"score":38,"level":0},{"x":1346,"y":811,"score":28,"level":0},{"x":1464,"y":811,"score":28,"level":0},{"x":490,"y":812,"score":34,"level":0},{"x":549,"y":812,"score":35,"level":0},{"x":584,"y":812,"score":28,"level":0},{"x":718,"y":812,"score":32,"level":0},{"x":776,"y":812,"score":70,"level":0},{"x":820,"y":812,"score":50,"level":0},{"x":887,"y":812,"score":35,"level":0},{"x":1142,"y":812,"score":26,"level":0},{"x":1267,"y":812,"score":53,"level":0},{"x":1415,"y":812,"score":35,"level":0},{"x":1476,"y":812,"score":26,"level":0},{"x":377,"y":813,"score":37,"level":0},{"x":488,"y":813,"score":27,"level":0},{"x":501,"y":813,"score":37,"level":0},{"x":638,"y":813,"score":36,"level":0},{"x":698,"y":813,"score":72,"level":0},{"x":721,"y":813,"score":35,"level":0},{"x":761,"y":813,"score":29,"level":0},{"x":877,"y":813,"score":27,"level":0},{"x":1431,"y":813,"score":64,"level":0},{"x":424,"y":814,"score":46,"level":0},{"x":446,"y":814,"score":50,"level":0},{"x":496,"y":814,"score":37,"level":0},{"x":628,"y":814,"score":32,"level":0},{"x":1132,"y":814,"score":28,"level":0},{"x":1297,"y":814,"score":50,"level":0},{"x":1339,"y":814,"score":36,"level":0},{"x":1402,"y":814,"score":74,"level":0},{"x":511,"y":815,"score":73,"level":0},{"x":525,"y":815,"score":44,"level":0},{"x":677,"y":815,"score":31,"level":0},{"x":761,"y":815,"score":35,"level":0},{"x":771,"y":815,"score":30,"level":0},{"x":877,"y":815,"score":28,"level":0},{"x":1048,"y":815,"score":48,"level":0},{"x":1050,"y":815,"score":38,"level":0},{"x":1461,"y":815,"score":28,"level":0},{"x":583,"y":816,"score":32,"level":0},{"x":594,"y":816,"score":28,"level":0},{"x":892,"y":816,"score":29,"level":0},{"x":939,"y":816,"score":40,"level":0},{"x":1019,"y":816,"score":39,"level":0},{"x":1027,"y":816,"score":38,"level":0},{"x":1129,"y":816,"score":31,"level":0},{"x":1213,"y":816,"score":34,"level":0},{"x":1389,"y":816,"score":26,"level":0},{"x":418,"y":817,"score":29,"level":0},{"x":491,"y":817,"score":31,"level":0},{"x":536,"y":817,"score":28,"level":0},{"x":541,"y":817,"score":41,"level":0},{"x":588,"y":817,"score":26,"level":0},{"x":741,"y":817,"score":27,"level":0},{"x":764,"y":817,"score":73,"level":0},{"x":911,"y":817,"score":38,"level":0},{"x":1038,"y":817,"score":60,"level":0},{"x":1428,"y":817,"score":50,"level":0},{"x":389,"y":818,"score":43,"level":0},{"x":430,"y":818,"score":37,"level":0},{"x":482,"y":818,"score":36,"level":0},{"x":513,"y":818,"score":106,"level":0},{"x":924,"y":818,"score":40,"level":0},{"x":1057,"y":818,"score":51,"level":0},{"x":1084,"y":818,"score":28,"level":0},{"x":1092,"y":818,"score":52,"level":0},{"x":1130,"y":818,"score":29,"level":0},{"x":1178,"y":818,"score":69,"level":0},{"x":1266,"y":818,"score":27,"level":0},{"x":1271,"y":818,"score":32,"level":0},{"x":459,"y":819,"score":30,"level":0},{"x":566,"y":819,"score":33,"level":0},{"x":616,"y":819,"score":44,"level":0},{"x":1293,"y":819,"score":38,"level":0},{"x":1488,"y":819,"score":34,"level":0},{"x":569,"y":820,"score":39,"level":0},{"x":574,"y":820,"score":32,"level":0},{"x":577,"y":820,"score":45,"level":0},{"x":623,"y":820,"score":41,"level":0},{"x":643,"y":820,"score":26,"level":0},{"x":689,"y":820,"score":46,"level":0},{"x":1079,"y":820,"score":69,"level":0},{"x":1113,"y":820,"score":26,"level":0},{"x":1186,"y":820,"score":47,"level":0},{"x":1267,"y":820,"score":37,"level":0},{"x":1372,"y":820,"score":39,"level":0},{"x":1482,"y":820,"score":40,"level":0},{"x":493,"y":821,"score":26,"level":0},{"x":517,"y":821,"score":49,"level":0},{"x":694,"y":821,"score":36,"level":0},{"x":826,"y":821,"score":41,"level":0},{"x":856,"y":821,"score":63,"level":0},{"x":918,"y":821,"score":45,"level":0},{"x":955,"y":821,"score":67,"level":0},{"x":977,"y":821,"score":76,"level":0},{"x":1008,"y":821,"score":28,"level":0},{"x":1310,"y":821,"score":31,"level":0},{"x":1397,"y":821,"score":41,"level":0},{"x":535,"y":822,"score":33,"level":0},{"x":586,"y":822,"score":29,"level":0},{"x":719,"y":822,"score":29,"level":0},{"x":875,"y":822,"score":26,"level":0},{"x":985,"y":822,"score":48,"level":0},{"x":1024,"y":822,"score":26,"level":0},{"x":1028,"y":822,"score":32,"level":0},{"x":1038,"y":822,"score":35,"level":0},{"x":1338,"y":822,"score":50,"level":0},{"x":1344,"y":822,"score":28,"level":0},{"x":1351,"y":822,"score":27,"level":0},{"x":398,"y":823,"score":28,"level":0},{"x":444,"y":823,"score":54,"level":0},{"x":446,"y":823,"score":56,"level":0},{"x":525,"y":823,"score":79,"level":0},{"x":539,"y":823,"score":27,"level":0},{"x":550,"y":823,"score":32,"level":0},{"x":924,"y":823,"score":35,"level":0},{"x":926,"y":823,"score":29,"level":0},{"x":1301,"y":823,"score":26,"level":0},{"x":1372,"y":823,"score":27,"level":0},{"x":1382,"y":823,"score":28,"level":0},{"x":653,"y":824,"score":41,"level":0},{"x":781,"y":824,"score":53,"level":0},{"x":834,"y":824,"score":40,"level":0},{"x":864,"y":824,"score":35,"level":0},{"x":869,"y":824,"score":60,"level":0},{"x":880,"y":824,"score":26,"level":0},{"x":1130,"y":824,"score":27,"level":0},{"x":1226,"y":824,"score":26,"level":0},{"x":1325,"y":824,"score":32,"level":0},{"x":481,"y":825,"score":49,"level":0},{"x":766,"y":825,"score":30,"level":0},{"x":768,"y":825,"score":27,"level":0},{"x":796,"y":825,"score":33,"level":0},{"x":821,"y":825,"score":29,"level":0},{"x":932,"y":825,"score":30,"level":0},{"x":1189,"y":825,"score":30,"level":0},{"x":1359,"y":825,"score":26,"level":0},{"x":1486,"y":825,"score":30,"level":0},{"x":447,"y":826,"score":44,"level":0},{"x":512,"y":826,"score":103,"level":0},{"x":577,"y":826,"score":29,"level":0},{"x":582,"y":826,"score":31,"level":0},{"x":602,"y":826,"score":43,"level":0},{"x":607,"y":826,"score":69,"level":0},{"x":886,"y":826,"score":32,"level":0},{"x":939,"y":826,"score":33,"level":0},{"x":993,"y":826,"score":27,"level":0},{"x":1011,"y":826,"score":40,"level":0},{"x":1016,"y":826,"score":27,"level":0},{"x":1033,"y":826,"score":30,"level":0},{"x":1061,"y":826,"score":27,"level":0},{"x":1129,"y":826,"score":26,"level":0},{"x":1266,"y":826,"score":46,"level":0},{"x":1308,"y":826,"score":27,"level":0},{"x":1374,"y":826,"score":26,"level":0},{"x":1397,"y":826,"score":36,"level":0},{"x":1410,"y":826,"score":48,"level":0},{"x":1471,"y":826,"score":29,"level":0},{"x":384,"y":827,"score":30,"level":0},{"x":449,"y":827,"score":31,"level":0},{"x":463,"y":827,"score":27,"level":0},{"x":486,"y":827,"score":41,"level":0},{"x":612,"y":827,"score":31,"level":0},{"x":628,"y":827,"score":27,"level":0},{"x":638,"y":827,"score":28,"level":0},{"x":707,"y":827,"score":32,"level":0},{"x":783,"y":827,"score":75,"level":0},{"x":948,"y":827,"score":38,"level":0},{"x":965,"y":827,"score":33,"level":0},{"x":1074,"y":827,"score":29,"level":0},{"x":1079,"y":827,"score":63,"level":0},{"x":1271,"y":827,"score":29,"level":0},{"x":377,"y":828,"score":42,"level":0},{"x":536,"y":828,"score":52,"level":0},{"x":559,"y":828,"score":28,"level":0},{"x":724,"y":828,"score":30,"level":0},{"x":728,"y":828,"score":26,"level":0},{"x":762,"y":828,"score":36,"level":0},{"x":764,"y":828,"score":46,"level":0},{"x":812,"y":828,"score":35,"level":0},{"x":854,"y":828,"score":34,"level":0},{"x":1028,"y":828,"score":30,"level":0},{"x":1182,"y":828,"score":28,"level":0},{"x":1187,"y":828,"score":37,"level":0},{"x":1381,"y":828,"score":29,"level":0},{"x":1402,"y":828,"score":34,"level":0},{"x":1451,"y":828,"score":38,"level":0},{"x":496,"y":829,"score":33,"level":0},{"x":522,"y":829,"score":85,"level":0},{"x":634,"y":829,"score":34,"level":0},{"x":760,"y":829,"score":42,"level":0},{"x":865,"y":829,"score":38,"level":0},{"x":950,"y":829,"score":30,"level":0},{"x":1082,"y":829,"score":32,"level":0},{"x":1109,"y":829,"score":30,"level":0},{"x":1180,"y":829,"score":35,"level":0},{"x":1338,"y":829,"score":34,"level":0},{"x":1376,"y":829,"score":30,"level":0},{"x":616,"y":830,"score":36,"level":0},{"x":696,"y":830,"score":30,"level":0},{"x":736,"y":830,"score":48,"level":0},{"x":739,"y":830,"score":26,"level":0},{"x":815,"y":830,"score":26,"level":0},{"x":819,"y":830,"score":32,"level":0},{"x":860,"y":830,"score":48,"level":0},{"x":902,"y":830,"score":29,"level":0},{"x":1213,"y":830,"score":37,"level":0},{"x":1287,"y":830,"score":30,"level":0},{"x":1354,"y":830,"score":27,"level":0},{"x":1490,"y":830,"score":26,"level":0},{"x":492,"y":831,"score":30,"level":0},{"x":515,"y":831,"score":59,"level":0},{"x":589,"y":831,"score":62,"level":0},{"x":692,"y":831,"score":55,"level":0},{"x":751,"y":831,"score":53,"level":0},{"x":771,"y":831,"score":50,"level":0},{"x":793,"y":831,"score":32,"level":0},{"x":1181,"y":831,"score":54,"level":0},{"x":1190,"y":831,"score":31,"level":0},{"x":1216,"y":831,"score":30,"level":0},{"x":1282,"y":831,"score":31,"level":0},{"x":1325,"y":831,"score":50,"level":0},{"x":384,"y":832,"score":32,"level":0},{"x":414,"y":832,"score":26,"level":0},{"x":432,"y":832,"score":31,"level":0},{"x":539,"y":832,"score":32,"level":0},{"x":879,"y":832,"score":33,"level":0},{"x":1010,"y":832,"score":27,"level":0},{"x":1126,"y":832,"score":34,"level":0},{"x":1131,"y":832,"score":26,"level":0},{"x":1271,"y":832,"score":40,"level":0},{"x":537,"y":833,"score":48,"level":0},{"x":575,"y":833,"score":28,"level":0},{"x":976,"y":833,"score":52,"level":0},{"x":1001,"y":833,"score":44,"level":0},{"x":1149,"y":833,"score":38,"level":0},{"x":1254,"y":833,"score":38,"level":0},{"x":1308,"y":833,"score":58,"level":0},{"x":1409,"y":833,"score":36,"level":0},{"x":569,"y":834,"score":40,"level":0},{"x":708,"y":834,"score":26,"level":0},{"x":780,"y":834,"score":34,"level":0},{"x":809,"y":834,"score":30,"level":0},{"x":815,"y":834,"score":29,"level":0},{"x":829,"y":834,"score":41,"level":0},{"x":867,"y":834,"score":39,"level":0},{"x":872,"y":834,"score":36,"level":0},{"x":1047,"y":834,"score":26,"level":0},{"x":1204,"y":834,"score":41,"level":0},{"x":1259,"y":834,"score":30,"level":0},{"x":1284,"y":834,"score":62,"level":0},{"x":1315,"y":834,"score":33,"level":0},{"x":433,"y":835,"score":28,"level":0},{"x":578,"y":835,"score":27,"level":0},{"x":629,"y":835,"score":41,"level":0},{"x":634,"y":835,"score":28,"level":0},{"x":720,"y":835,"score":27,"level":0},{"x":739,"y":835,"score":29,"level":0},{"x":800,"y":835,"score":33,"level":0},{"x":951,"y":835,"score":36,"level":0},{"x":1303,"y":835,"score":32,"level":0},{"x":1375,"y":835,"score":29,"level":0},{"x":598,"y":836,"score":36,"level":0},{"x":611,"y":836,"score":31,"level":0},{"x":666,"y":836,"score":29,"level":0},{"x":737,"y":836,"score":26,"level":0},{"x":753,"y":836,"score":26,"level":0},{"x":985,"y":836,"score":30,"level":0},{"x":1044,"y":836,"score":32,"level":0},{"x":377,"y":837,"score":43,"level":0},{"x":464,"y":837,"score":27,"level":0},{"x":469,"y":837,"score":26,"level":0},{"x":709,"y":837,"score":36,"level":0},{"x":903,"y":837,"score":39,"level":0},{"x":1020,"y":837,"score":36,"level":0},{"x":1102,"y":837,"score":28,"level":0},{"x":1280,"y":837,"score":40,"level":0},{"x":1411,"y":837,"score":34,"level":0},{"x":533,"y":838,"score":28,"level":0},{"x":901,"y":838,"score":44,"level":0},{"x":913,"y":838,"score":32,"level":0},{"x":1197,"y":838,"score":32,"level":0},{"x":410,"y":839,"score":37,"level":0},{"x":523,"y":839,"score":36,"level":0},{"x":642,"y":839,"score":47,"level":0},{"x":652,"y":839,"score":44,"level":0},{"x":780,"y":839,"score":33,"level":0},{"x":794,"y":839,"score":30,"level":0},{"x":915,"y":839,"score":34,"level":0},{"x":1069,"y":839,"score":35,"level":0},{"x":463,"y":840,"score":27,"level":0},{"x":500,"y":840,"score":42,"level":0},{"x":505,"y":840,"score":30,"level":0},{"x":564,"y":840,"score":30,"level":0},{"x":604,"y":840,"score":27,"level":0},{"x":647,"y":840,"score":30,"level":0},{"x":887,"y":840,"score":35,"level":0},{"x":902,"y":840,"score":42,"level":0},{"x":1146,"y":840,"score":43,"level":0},{"x":434,"y":841,"score":74,"level":0},{"x":569,"y":841,"score":37,"level":0},{"x":813,"y":841,"score":29,"level":0},{"x":950,"y":841,"score":45,"level":0},{"x":979,"y":841,"score":39,"level":0},{"x":1033,"y":841,"score":64,"level":0},{"x":1073,"y":841,"score":32,"level":0},{"x":1152,"y":841,"score":48,"level":0},{"x":1192,"y":841,"score":31,"level":0},{"x":1225,"y":841,"score":29,"level":0},{"x":1309,"y":841,"score":48,"level":0},{"x":1315,"y":841,"score":37,"level":0},{"x":426,"y":842,"score":58,"level":0},{"x":571,"y":842,"score":48,"level":0},{"x":837,"y":842,"score":27,"level":0},{"x":1079,"y":842,"score":32,"level":0},{"x":1128,"y":842,"score":27,"level":0},{"x":1210,"y":842,"score":37,"level":0},{"x":1355,"y":842,"score":39,"level":0},{"x":1374,"y":842,"score":31,"level":0},{"x":1483,"y":842,"score":34,"level":0},{"x":544,"y":843,"score":35,"level":0},{"x":762,"y":843,"score":36,"level":0},{"x":922,"y":843,"score":35,"level":0},{"x":987,"y":843,"score":32,"level":0},{"x":1218,"y":843,"score":28,"level":0},{"x":1446,"y":843,"score":28,"level":0},{"x":514,"y":844,"score":31,"level":0},{"x":525,"y":844,"score":76,"level":0},{"x":571,"y":844,"score":48,"level":0},{"x":601,"y":844,"score":46,"level":0},{"x":624,"y":844,"score":46,"level":0},{"x":722,"y":844,"score":30,"level":0},{"x":751,"y":844,"score":33,"level":0},{"x":759,"y":844,"score":31,"level":0},{"x":778,"y":844,"score":28,"level":0},{"x":825,"y":844,"score":27,"level":0},{"x":981,"y":844,"score":36,"level":0},{"x":496,"y":845,"score":29,"level":0},{"x":531,"y":845,"score":32,"level":0},{"x":685,"y":845,"score":32,"level":0},{"x":697,"y":845,"score":45,"level":0},{"x":766,"y":845,"score":27,"level":0},{"x":924,"y":845,"score":54,"level":0},{"x":960,"y":845,"score":27,"level":0},{"x":1252,"y":845,"score":28,"level":0},{"x":1287,"y":845,"score":28,"level":0},{"x":1441,"y":845,"score":50,"level":0},{"x":1488,"y":845,"score":34,"level":0},{"x":486,"y":846,"score":28,"level":0},{"x":658,"y":846,"score":57,"level":0},{"x":664,"y":846,"score":39,"level":0},{"x":728,"y":846,"score":48,"level":0},{"x":784,"y":846,"score":44,"level":0},{"x":891,"y":846,"score":41,"level":0},{"x":1063,"y":846,"score":63,"level":0},{"x":1365,"y":846,"score":31,"level":0},{"x":1399,"y":846,"score":43,"level":0},{"x":1453,"y":846,"score":26,"level":0},{"x":423,"y":847,"score":41,"level":0},{"x":535,"y":847,"score":44,"level":0},{"x":540,"y":847,"score":27,"level":0},{"x":867,"y":847,"score":41,"level":0},{"x":967,"y":847,"score":49,"level":0},{"x":1006,"y":847,"score":29,"level":0},{"x":1033,"y":847,"score":34,"level":0},{"x":425,"y":848,"score":44,"level":0},{"x":463,"y":848,"score":27,"level":0},{"x":521,"y":848,"score":42,"level":0},{"x":715,"y":848,"score":29,"level":0},{"x":757,"y":848,"score":39,"level":0},{"x":762,"y":848,"score":46,"level":0},{"x":767,"y":848,"score":42,"level":0},{"x":880,"y":848,"score":54,"level":0},{"x":904,"y":848,"score":38,"level":0},{"x":985,"y":848,"score":32,"level":0},{"x":1098,"y":848,"score":38,"level":0},{"x":436,"y":849,"score":35,"level":0},{"x":443,"y":849,"score":32,"level":0},{"x":491,"y":849,"score":40,"level":0},{"x":499,"y":849,"score":30,"level":0},{"x":544,"y":849,"score":43,"level":0},{"x":549,"y":849,"score":31,"level":0},{"x":644,"y":849,"score":26,"level":0},{"x":681,"y":849,"score":45,"level":0},{"x":798,"y":849,"score":33,"level":0},{"x":954,"y":849,"score":54,"level":0},{"x":1143,"y":849,"score":34,"level":0},{"x":1145,"y":849,"score":44,"level":0},{"x":1200,"y":849,"score":28,"level":0},{"x":404,"y":850,"score":59,"level":0},{"x":817,"y":850,"score":28,"level":0},{"x":932,"y":850,"score":32,"level":0},{"x":1049,"y":850,"score":58,"level":0},{"x":1236,"y":850,"score":30,"level":0},{"x":1276,"y":850,"score":40,"level":0},{"x":1350,"y":850,"score":30,"level":0},{"x":695,"y":851,"score":26,"level":0},{"x":751,"y":851,"score":26,"level":0},{"x":757,"y":851,"score":44,"level":0},{"x":760,"y":851,"score":36,"level":0},{"x":925,"y":851,"score":30,"level":0},{"x":939,"y":851,"score":38,"level":0},{"x":1477,"y":851,"score":36,"level":0},{"x":428,"y":852,"score":48,"level":0},{"x":557,"y":852,"score":27,"level":0},{"x":575,"y":852,"score":33,"level":0},{"x":599,"y":852,"score":26,"level":0},{"x":889,"y":852,"score":28,"level":0},{"x":898,"y":852,"score":33,"level":0},{"x":1072,"y":852,"score":28,"level":0},{"x":1180,"y":852,"score":52,"level":0},{"x":1228,"y":852,"score":28,"level":0},{"x":1270,"y":852,"score":26,"level":0},{"x":450,"y":853,"score":30,"level":0},{"x":488,"y":853,"score":27,"level":0},{"x":679,"y":853,"score":26,"level":0},{"x":684,"y":853,"score":42,"level":0},{"x":999,"y":853,"score":29,"level":0},{"x":1051,"y":853,"score":47,"level":0},{"x":1108,"y":853,"score":32,"level":0},{"x":1138,"y":853,"score":38,"level":0},{"x":1247,"y":853,"score":39,"level":0},{"x":1323,"y":853,"score":40,"level":0},{"x":377,"y":854,"score":28,"level":0},{"x":401,"y":854,"score":36,"level":0},{"x":408,"y":854,"score":31,"level":0},{"x":429,"y":854,"score":49,"level":0},{"x":523,"y":854,"score":33,"level":0},{"x":528,"y":854,"score":26,"level":0},{"x":645,"y":854,"score":37,"level":0},{"x":660,"y":854,"score":52,"level":0},{"x":759,"y":854,"score":34,"level":0},{"x":877,"y":854,"score":44,"level":0},{"x":887,"y":854,"score":28,"level":0},{"x":1140,"y":854,"score":38,"level":0},{"x":1145,"y":854,"score":36,"level":0},{"x":1198,"y":854,"score":34,"level":0},{"x":421,"y":855,"score":90,"level":0},{"x":519,"y":855,"score":28,"level":0},{"x":574,"y":855,"score":33,"level":0},{"x":591,"y":855,"score":45,"level":0},{"x":597,"y":855,"score":34,"level":0},{"x":607,"y":855,"score":37,"level":0},{"x":921,"y":855,"score":30,"level":0},{"x":1115,"y":855,"score":29,"level":0},{"x":1117,"y":855,"score":30,"level":0},{"x":1414,"y":855,"score":60,"level":0},{"x":1450,"y":855,"score":32,"level":0},{"x":479,"y":856,"score":32,"level":0},{"x":558,"y":856,"score":31,"level":0},{"x":613,"y":856,"score":34,"level":0},{"x":683,"y":856,"score":44,"level":0},{"x":700,"y":856,"score":39,"level":0},{"x":833,"y":856,"score":33,"level":0},{"x":864,"y":856,"score":32,"level":0},{"x":869,"y":856,"score":45,"level":0},{"x":953,"y":856,"score":50,"level":0},{"x":958,"y":856,"score":29,"level":0},{"x":981,"y":856,"score":30,"level":0},{"x":1098,"y":856,"score":27,"level":0},{"x":1125,"y":856,"score":27,"level":0},{"x":1153,"y":856,"score":34,"level":0},{"x":1193,"y":856,"score":32,"level":0},{"x":1444,"y":856,"score":31,"level":0},{"x":482,"y":857,"score":29,"level":0},{"x":791,"y":857,"score":31,"level":0},{"x":847,"y":857,"score":35,"level":0},{"x":1084,"y":857,"score":39,"level":0},{"x":1086,"y":857,"score":37,"level":0},{"x":1169,"y":857,"score":34,"level":0},{"x":444,"y":858,"score":30,"level":0},{"x":459,"y":858,"score":40,"level":0},{"x":520,"y":858,"score":30,"level":0},{"x":579,"y":858,"score":30,"level":0},{"x":718,"y":858,"score":34,"level":0},{"x":780,"y":858,"score":30,"level":0},{"x":1065,"y":858,"score":32,"level":0},{"x":1180,"y":858,"score":28,"level":0},{"x":1292,"y":858,"score":66,"level":0},{"x":1321,"y":858,"score":46,"level":0},{"x":1409,"y":858,"score":32,"level":0},{"x":464,"y":859,"score":40,"level":0},{"x":522,"y":859,"score":38,"level":0},{"x":528,"y":859,"score":27,"level":0},{"x":544,"y":859,"score":26,"level":0},{"x":662,"y":859,"score":27,"level":0},{"x":797,"y":859,"score":39,"level":0},{"x":1041,"y":859,"score":26,"level":0},{"x":1217,"y":859,"score":26,"level":0},{"x":1279,"y":859,"score":34,"level":0},{"x":459,"y":860,"score":27,"level":0},{"x":484,"y":860,"score":37,"level":0},{"x":533,"y":860,"score":38,"level":0},{"x":572,"y":860,"score":56,"level":0},{"x":578,"y":860,"score":52,"level":0},{"x":675,"y":860,"score":28,"level":0},{"x":887,"y":860,"score":26,"level":0},{"x":905,"y":860,"score":29,"level":0},{"x":960,"y":860,"score":44,"level":0},{"x":965,"y":860,"score":27,"level":0},{"x":1047,"y":860,"score":49,"level":0},{"x":1449,"y":860,"score":32,"level":0},{"x":448,"y":861,"score":45,"level":0},{"x":604,"y":861,"score":49,"level":0},{"x":717,"y":861,"score":28,"level":0},{"x":909,"y":861,"score":33,"level":0},{"x":1013,"y":861,"score":46,"level":0},{"x":1158,"y":861,"score":38,"level":0},{"x":1257,"y":861,"score":42,"level":0},{"x":1268,"y":861,"score":42,"level":0},{"x":1397,"y":861,"score":43,"level":0},{"x":475,"y":862,"score":33,"level":0},{"x":593,"y":862,"score":44,"level":0},{"x":610,"y":862,"score":60,"level":0},{"x":618,"y":862,"score":35,"level":0},{"x":686,"y":862,"score":33,"level":0},{"x":701,"y":862,"score":30,"level":0},{"x":822,"y":862,"score":56,"level":0},{"x":868,"y":862,"score":39,"level":0},{"x":895,"y":862,"score":30,"level":0},{"x":912,"y":862,"score":28,"level":0},{"x":992,"y":862,"score":28,"level":0},{"x":1007,"y":862,"score":36,"level":0},{"x":1125,"y":862,"score":28,"level":0},{"x":1147,"y":862,"score":51,"level":0},{"x":1225,"y":862,"score":49,"level":0},{"x":1273,"y":862,"score":29,"level":0},{"x":1350,"y":862,"score":29,"level":0},{"x":1414,"y":862,"score":62,"level":0},{"x":391,"y":863,"score":26,"level":0},{"x":625,"y":863,"score":28,"level":0},{"x":754,"y":863,"score":40,"level":0},{"x":781,"y":863,"score":30,"level":0},{"x":879,"y":863,"score":26,"level":0},{"x":931,"y":863,"score":26,"level":0},{"x":1141,"y":863,"score":29,"level":0},{"x":1176,"y":863,"score":33,"level":0},{"x":1193,"y":863,"score":37,"level":0},{"x":1288,"y":863,"score":76,"level":0},{"x":448,"y":864,"score":31,"level":0},{"x":503,"y":864,"score":43,"level":0},{"x":652,"y":864,"score":34,"level":0},{"x":757,"y":864,"score":28,"level":0},{"x":902,"y":864,"score":26,"level":0},{"x":1043,"y":864,"score":67,"level":0},{"x":1166,"y":864,"score":32,"level":0},{"x":417,"y":865,"score":44,"level":0},{"x":465,"y":865,"score":28,"level":0},{"x":470,"y":865,"score":33,"level":0},{"x":718,"y":865,"score":35,"level":0},{"x":889,"y":865,"score":45,"level":0},{"x":1153,"y":865,"score":37,"level":0},{"x":1195,"y":865,"score":47,"level":0},{"x":1449,"y":865,"score":42,"level":0},{"x":456,"y":866,"score":30,"level":0},{"x":710,"y":866,"score":31,"level":0},{"x":723,"y":866,"score":36,"level":0},{"x":960,"y":866,"score":43,"level":0},{"x":993,"y":866,"score":28,"level":0},{"x":1107,"y":866,"score":29,"level":0},{"x":1391,"y":866,"score":37,"level":0},{"x":610,"y":867,"score":42,"level":0},{"x":686,"y":867,"score":41,"level":0},{"x":807,"y":867,"score":29,"level":0},{"x":812,"y":867,"score":32,"level":0},{"x":891,"y":867,"score":57,"level":0},{"x":979,"y":867,"score":28,"level":0},{"x":1212,"y":867,"score":64,"level":0},{"x":1265,"y":867,"score":33,"level":0},{"x":1409,"y":867,"score":50,"level":0},{"x":377,"y":868,"score":26,"level":0},{"x":427,"y":868,"score":29,"level":0},{"x":438,"y":868,"score":28,"level":0},{"x":594,"y":868,"score":45,"level":0},{"x":658,"y":868,"score":64,"level":0},{"x":819,"y":868,"score":26,"level":0},{"x":849,"y":868,"score":83,"level":0},{"x":851,"y":868,"score":64,"level":0},{"x":909,"y":868,"score":32,"level":0},{"x":918,"y":868,"score":38,"level":0},{"x":941,"y":868,"score":40,"level":0},{"x":943,"y":868,"score":36,"level":0},{"x":952,"y":868,"score":43,"level":0},{"x":960,"y":868,"score":46,"level":0},{"x":1090,"y":868,"score":60,"level":0},{"x":1095,"y":868,"score":26,"level":0},{"x":1197,"y":868,"score":66,"level":0},{"x":1325,"y":868,"score":31,"level":0},{"x":383,"y":869,"score":48,"level":0},{"x":562,"y":869,"score":40,"level":0},{"x":667,"y":869,"score":42,"level":0},{"x":760,"y":869,"score":42,"level":0},{"x":772,"y":869,"score":26,"level":0},{"x":791,"y":869,"score":30,"level":0},{"x":844,"y":869,"score":27,"level":0},{"x":871,"y":869,"score":32,"level":0},{"x":1040,"y":869,"score":90,"level":0},{"x":1099,"y":869,"score":30,"level":0},{"x":423,"y":870,"score":30,"level":0},{"x":463,"y":870,"score":32,"level":0},{"x":706,"y":870,"score":28,"level":0},{"x":826,"y":870,"score":38,"level":0},{"x":877,"y":870,"score":60,"level":0},{"x":963,"y":870,"score":64,"level":0},{"x":968,"y":870,"score":30,"level":0},{"x":1009,"y":870,"score":48,"level":0},{"x":1222,"y":870,"score":35,"level":0},{"x":1256,"y":870,"score":26,"level":0},{"x":1326,"y":870,"score":37,"level":0},{"x":446,"y":871,"score":35,"level":0},{"x":509,"y":871,"score":33,"level":0},{"x":515,"y":871,"score":28,"level":0},{"x":551,"y":871,"score":27,"level":0},{"x":674,"y":871,"score":30,"level":0},{"x":695,"y":871,"score":30,"level":0},{"x":1165,"y":871,"score":36,"level":0},{"x":1237,"y":871,"score":26,"level":0},{"x":1272,"y":871,"score":34,"level":0},{"x":1319,"y":871,"score":34,"level":0},{"x":385,"y":872,"score":67,"level":0},{"x":457,"y":872,"score":32,"level":0},{"x":505,"y":872,"score":35,"level":0},{"x":521,"y":872,"score":36,"level":0},{"x":617,"y":872,"score":37,"level":0},{"x":665,"y":872,"score":33,"level":0},{"x":676,"y":872,"score":55,"level":0},{"x":747,"y":872,"score":26,"level":0},{"x":798,"y":872,"score":32,"level":0},{"x":878,"y":872,"score":37,"level":0},{"x":1081,"y":872,"score":41,"level":0},{"x":1128,"y":872,"score":38,"level":0},{"x":630,"y":873,"score":48,"level":0},{"x":714,"y":873,"score":29,"level":0},{"x":753,"y":873,"score":57,"level":0},{"x":1186,"y":873,"score":34,"level":0},{"x":1287,"y":873,"score":46,"level":0},{"x":1405,"y":873,"score":33,"level":0},{"x":1456,"y":873,"score":35,"level":0},{"x":447,"y":874,"score":26,"level":0},{"x":469,"y":874,"score":26,"level":0},{"x":540,"y":874,"score":30,"level":0},{"x":545,"y":874,"score":40,"level":0},{"x":1443,"y":874,"score":36,"level":0},{"x":418,"y":875,"score":41,"level":0},{"x":424,"y":875,"score":27,"level":0},{"x":429,"y":875,"score":28,"level":0},{"x":463,"y":875,"score":42,"level":0},{"x":769,"y":875,"score":28,"level":0},{"x":778,"y":875,"score":30,"level":0},{"x":1041,"y":875,"score":49,"level":0},{"x":1171,"y":875,"score":30,"level":0},{"x":1212,"y":875,"score":37,"level":0},{"x":1247,"y":875,"score":30,"level":0},{"x":1411,"y":875,"score":35,"level":0},{"x":515,"y":876,"score":27,"level":0},{"x":551,"y":876,"score":42,"level":0},{"x":562,"y":876,"score":44,"level":0},{"x":576,"y":876,"score":51,"level":0},{"x":636,"y":876,"score":29,"level":0},{"x":725,"y":876,"score":32,"level":0},{"x":758,"y":876,"score":43,"level":0},{"x":1008,"y":876,"score":70,"level":0},{"x":1103,"y":876,"score":47,"level":0},{"x":474,"y":877,"score":36,"level":0},{"x":590,"y":877,"score":28,"level":0},{"x":597,"y":877,"score":29,"level":0},{"x":669,"y":877,"score":51,"level":0},{"x":888,"y":877,"score":44,"level":0},{"x":942,"y":877,"score":30,"level":0},{"x":989,"y":877,"score":32,"level":0},{"x":1049,"y":877,"score":33,"level":0},{"x":1109,"y":877,"score":32,"level":0},{"x":1198,"y":877,"score":40,"level":0},{"x":628,"y":878,"score":28,"level":0},{"x":790,"y":878,"score":31,"level":0},{"x":856,"y":878,"score":52,"level":0},{"x":893,"y":878,"score":33,"level":0},{"x":1193,"y":878,"score":59,"level":0},{"x":1392,"y":878,"score":30,"level":0},{"x":377,"y":879,"score":49,"level":0},{"x":410,"y":879,"score":26,"level":0},{"x":602,"y":879,"score":52,"level":0},{"x":631,"y":879,"score":29,"level":0},{"x":663,"y":879,"score":26,"level":0},{"x":672,"y":879,"score":36,"level":0},{"x":720,"y":879,"score":29,"level":0},{"x":913,"y":879,"score":30,"level":0},{"x":930,"y":879,"score":26,"level":0},{"x":1141,"y":879,"score":26,"level":0},{"x":1222,"y":879,"score":53,"level":0},{"x":1230,"y":879,"score":28,"level":0},{"x":1398,"y":879,"score":40,"level":0},{"x":1437,"y":879,"score":38,"level":0},{"x":1443,"y":879,"score":44,"level":0},{"x":512,"y":880,"score":44,"level":0},{"x":649,"y":880,"score":39,"level":0},{"x":702,"y":880,"score":43,"level":0},{"x":830,"y":880,"score":74,"level":0},{"x":882,"y":880,"score":26,"level":0},{"x":907,"y":880,"score":34,"level":0},{"x":920,"y":880,"score":44,"level":0},{"x":1062,"y":880,"score":26,"level":0},{"x":1165,"y":880,"score":26,"level":0},{"x":1250,"y":880,"score":45,"level":0},{"x":1350,"y":880,"score":28,"level":0},{"x":570,"y":881,"score":32,"level":0},{"x":586,"y":881,"score":40,"level":0},{"x":592,"y":881,"score":37,"level":0},{"x":594,"y":881,"score":33,"level":0},{"x":673,"y":881,"score":29,"level":0},{"x":834,"y":881,"score":32,"level":0},{"x":839,"y":881,"score":52,"level":0},{"x":925,"y":881,"score":34,"level":0},{"x":1103,"y":881,"score":30,"level":0},{"x":1188,"y":881,"score":35,"level":0},{"x":497,"y":882,"score":41,"level":0},{"x":502,"y":882,"score":71,"level":0},{"x":712,"y":882,"score":26,"level":0},{"x":845,"y":882,"score":28,"level":0},{"x":854,"y":882,"score":57,"level":0},{"x":1085,"y":882,"score":37,"level":0},{"x":1092,"y":882,"score":27,"level":0},{"x":1343,"y":882,"score":30,"level":0},{"x":407,"y":883,"score":30,"level":0},{"x":596,"y":883,"score":36,"level":0},{"x":676,"y":883,"score":46,"level":0},{"x":893,"y":883,"score":31,"level":0},{"x":962,"y":883,"score":42,"level":0},{"x":1006,"y":883,"score":27,"level":0},{"x":1155,"y":883,"score":36,"level":0},{"x":1165,"y":883,"score":35,"level":0},{"x":1284,"y":883,"score":42,"level":0},{"x":539,"y":884,"score":34,"level":0},{"x":607,"y":884,"score":33,"level":0},{"x":638,"y":884,"score":28,"level":0},{"x":774,"y":884,"score":30,"level":0},{"x":811,"y":884,"score":44,"level":0},{"x":813,"y":884,"score":32,"level":0},{"x":975,"y":884,"score":34,"level":0},{"x":1134,"y":884,"score":30,"level":0},{"x":1240,"y":884,"score":38,"level":0},{"x":414,"y":885,"score":39,"level":0},{"x":549,"y":885,"score":28,"level":0},{"x":555,"y":885,"score":39,"level":0},{"x":647,"y":885,"score":48,"level":0},{"x":745,"y":885,"score":35,"level":0},{"x":818,"y":885,"score":42,"level":0},{"x":820,"y":885,"score":62,"level":0},{"x":859,"y":885,"score":41,"level":0},{"x":864,"y":885,"score":70,"level":0},{"x":920,"y":885,"score":30,"level":0},{"x":1290,"y":885,"score":43,"level":0},{"x":589,"y":886,"score":31,"level":0},{"x":624,"y":886,"score":26,"level":0},{"x":638,"y":886,"score":27,"level":0},{"x":757,"y":886,"score":30,"level":0},{"x":792,"y":886,"score":36,"level":0},{"x":839,"y":886,"score":36,"level":0},{"x":1004,"y":886,"score":59,"level":0},{"x":1071,"y":886,"score":29,"level":0},{"x":1250,"y":886,"score":48,"level":0},{"x":397,"y":887,"score":30,"level":0},{"x":517,"y":887,"score":36,"level":0},{"x":523,"y":887,"score":35,"level":0},{"x":533,"y":887,"score":49,"level":0},{"x":723,"y":887,"score":61,"level":0},{"x":797,"y":887,"score":33,"level":0},{"x":886,"y":887,"score":31,"level":0},{"x":915,"y":887,"score":33,"level":0},{"x":942,"y":887,"score":28,"level":0},{"x":955,"y":887,"score":42,"level":0},{"x":1265,"y":887,"score":58,"level":0},{"x":1269,"y":887,"score":30,"level":0},{"x":473,"y":888,"score":36,"level":0},{"x":893,"y":888,"score":37,"level":0},{"x":403,"y":889,"score":36,"level":0},{"x":456,"y":889,"score":30,"level":0},{"x":539,"y":889,"score":27,"level":0},{"x":544,"y":889,"score":32,"level":0},{"x":586,"y":889,"score":40,"level":0},{"x":600,"y":889,"score":34,"level":0},{"x":756,"y":889,"score":26,"level":0},{"x":1036,"y":889,"score":40,"level":0},{"x":1041,"y":889,"score":60,"level":0},{"x":1128,"y":889,"score":26,"level":0},{"x":1188,"y":889,"score":28,"level":0},{"x":1240,"y":889,"score":30,"level":0},{"x":1436,"y":889,"score":35,"level":0},{"x":607,"y":890,"score":26,"level":0},{"x":678,"y":890,"score":32,"level":0},{"x":685,"y":890,"score":35,"level":0},{"x":795,"y":890,"score":29,"level":0},{"x":811,"y":890,"score":37,"level":0},{"x":1101,"y":890,"score":34,"level":0},{"x":1181,"y":890,"score":36,"level":0},{"x":1333,"y":890,"score":40,"level":0},{"x":1462,"y":890,"score":32,"level":0},{"x":1471,"y":890,"score":30,"level":0},{"x":408,"y":891,"score":36,"level":0},{"x":700,"y":891,"score":44,"level":0},{"x":705,"y":891,"score":54,"level":0},{"x":748,"y":891,"score":41,"level":0},{"x":864,"y":891,"score":65,"level":0},{"x":992,"y":891,"score":28,"level":0},{"x":1010,"y":891,"score":65,"level":0},{"x":1059,"y":891,"score":30,"level":0},{"x":1071,"y":891,"score":39,"level":0},{"x":1222,"y":891,"score":49,"level":0},{"x":459,"y":892,"score":35,"level":0},{"x":471,"y":892,"score":29,"level":0},{"x":494,"y":892,"score":62,"level":0},{"x":578,"y":892,"score":30,"level":0},{"x":753,"y":892,"score":36,"level":0},{"x":839,"y":892,"score":38,"level":0},{"x":1004,"y":892,"score":30,"level":0},{"x":1446,"y":892,"score":27,"level":0},{"x":508,"y":893,"score":28,"level":0},{"x":560,"y":893,"score":26,"level":0},{"x":646,"y":893,"score":44,"level":0},{"x":676,"y":893,"score":28,"level":0},{"x":697,"y":893,"score":28,"level":0},{"x":758,"y":893,"score":28,"level":0},{"x":760,"y":893,"score":36,"level":0},{"x":765,"y":893,"score":44,"level":0},{"x":927,"y":893,"score":41,"level":0},{"x":940,"y":893,"score":68,"level":0},{"x":945,"y":893,"score":45,"level":0},{"x":1010,"y":893,"score":73,"level":0},{"x":1394,"y":893,"score":30,"level":0},{"x":464,"y":894,"score":29,"level":0},{"x":466,"y":894,"score":30,"level":0},{"x":890,"y":894,"score":27,"level":0},{"x":999,"y":894,"score":30,"level":0},{"x":1030,"y":894,"score":30,"level":0},{"x":1131,"y":894,"score":39,"level":0},{"x":1401,"y":894,"score":57,"level":0},{"x":1440,"y":894,"score":34,"level":0},{"x":543,"y":895,"score":32,"level":0},{"x":581,"y":895,"score":70,"level":0},{"x":620,"y":895,"score":33,"level":0},{"x":720,"y":895,"score":30,"level":0},{"x":1191,"y":895,"score":44,"level":0},{"x":1242,"y":895,"score":33,"level":0},{"x":1290,"y":895,"score":46,"level":0},{"x":1364,"y":895,"score":37,"level":0},{"x":565,"y":896,"score":43,"level":0},{"x":594,"y":896,"score":32,"level":0},{"x":688,"y":896,"score":36,"level":0},{"x":778,"y":896,"score":26,"level":0},{"x":869,"y":896,"score":83,"level":0},{"x":912,"y":896,"score":35,"level":0},{"x":1058,"y":896,"score":34,"level":0},{"x":1254,"y":896,"score":45,"level":0},{"x":459,"y":897,"score":28,"level":0},{"x":550,"y":897,"score":30,"level":0},{"x":567,"y":897,"score":44,"level":0},{"x":599,"y":897,"score":30,"level":0},{"x":693,"y":897,"score":31,"level":0},{"x":867,"y":897,"score":45,"level":0},{"x":956,"y":897,"score":35,"level":0},{"x":1031,"y":897,"score":36,"level":0},{"x":1051,"y":897,"score":32,"level":0},{"x":1055,"y":897,"score":28,"level":0},{"x":1064,"y":897,"score":30,"level":0},{"x":1321,"y":897,"score":34,"level":0},{"x":1331,"y":897,"score":26,"level":0},{"x":1349,"y":897,"score":36,"level":0},{"x":1392,"y":897,"score":34,"level":0},{"x":1415,"y":897,"score":45,"level":0},{"x":527,"y":898,"score":43,"level":0},{"x":720,"y":898,"score":29,"level":0},{"x":817,"y":898,"score":36,"level":0},{"x":918,"y":898,"score":26,"level":0},{"x":1012,"y":898,"score":49,"level":0},{"x":1354,"y":898,"score":28,"level":0},{"x":1457,"y":898,"score":30,"level":0},{"x":423,"y":899,"score":38,"level":0},{"x":428,"y":899,"score":34,"level":0},{"x":438,"y":899,"score":27,"level":0},{"x":512,"y":899,"score":26,"level":0},{"x":695,"y":899,"score":30,"level":0},{"x":757,"y":899,"score":30,"level":0},{"x":991,"y":899,"score":33,"level":0},{"x":1164,"y":899,"score":37,"level":0},{"x":1462,"y":899,"score":30,"level":0},{"x":416,"y":900,"score":32,"level":0},{"x":510,"y":900,"score":36,"level":0},{"x":762,"y":900,"score":64,"level":0},{"x":826,"y":900,"score":26,"level":0},{"x":868,"y":900,"score":52,"level":0},{"x":1411,"y":900,"score":51,"level":0},{"x":392,"y":901,"score":40,"level":0},{"x":456,"y":901,"score":28,"level":0},{"x":498,"y":901,"score":36,"level":0},{"x":564,"y":901,"score":50,"level":0},{"x":581,"y":901,"score":27,"level":0},{"x":609,"y":901,"score":40,"level":0},{"x":709,"y":901,"score":28,"level":0},{"x":768,"y":901,"score":29,"level":0},{"x":770,"y":901,"score":30,"level":0},{"x":806,"y":901,"score":43,"level":0},{"x":837,"y":901,"score":53,"level":0},{"x":857,"y":901,"score":33,"level":0},{"x":916,"y":901,"score":38,"level":0},{"x":1045,"y":901,"score":30,"level":0},{"x":1227,"y":901,"score":46,"level":0},{"x":633,"y":902,"score":41,"level":0},{"x":750,"y":902,"score":29,"level":0},{"x":788,"y":902,"score":30,"level":0},{"x":868,"y":902,"score":35,"level":0},{"x":887,"y":902,"score":44,"level":0},{"x":893,"y":902,"score":26,"level":0},{"x":924,"y":902,"score":35,"level":0},{"x":927,"y":902,"score":36,"level":0},{"x":978,"y":902,"score":29,"level":0},{"x":1153,"y":902,"score":27,"level":0},{"x":1222,"y":902,"score":32,"level":0},{"x":1443,"y":902,"score":30,"level":0},{"x":400,"y":903,"score":44,"level":0},{"x":466,"y":903,"score":66,"level":0},{"x":531,"y":903,"score":37,"level":0},{"x":571,"y":903,"score":51,"level":0},{"x":610,"y":903,"score":40,"level":0},{"x":785,"y":903,"score":34,"level":0},{"x":903,"y":903,"score":56,"level":0},{"x":905,"y":903,"score":45,"level":0},{"x":910,"y":903,"score":58,"level":0},{"x":949,"y":903,"score":32,"level":0},{"x":1131,"y":903,"score":30,"level":0},{"x":1178,"y":903,"score":27,"level":0},{"x":1237,"y":903,"score":35,"level":0},{"x":1468,"y":903,"score":40,"level":0},{"x":1470,"y":903,"score":40,"level":0},{"x":475,"y":904,"score":43,"level":0},{"x":544,"y":904,"score":38,"level":0},{"x":561,"y":904,"score":35,"level":0},{"x":577,"y":904,"score":26,"level":0},{"x":593,"y":904,"score":38,"level":0},{"x":643,"y":904,"score":70,"level":0},{"x":747,"y":904,"score":42,"level":0},{"x":763,"y":904,"score":46,"level":0},{"x":1141,"y":904,"score":28,"level":0},{"x":1277,"y":904,"score":34,"level":0},{"x":1325,"y":904,"score":34,"level":0},{"x":1330,"y":904,"score":28,"level":0},{"x":1489,"y":904,"score":26,"level":0},{"x":525,"y":905,"score":32,"level":0},{"x":752,"y":905,"score":46,"level":0},{"x":761,"y":905,"score":41,"level":0},{"x":827,"y":905,"score":35,"level":0},{"x":920,"y":905,"score":29,"level":0},{"x":938,"y":905,"score":43,"level":0},{"x":1124,"y":905,"score":32,"level":0},{"x":1282,"y":905,"score":52,"level":0},{"x":492,"y":906,"score":33,"level":0},{"x":496,"y":906,"score":26,"level":0},{"x":771,"y":906,"score":33,"level":0},{"x":784,"y":906,"score":30,"level":0},{"x":813,"y":906,"score":28,"level":0},{"x":1032,"y":906,"score":73,"level":0},{"x":1038,"y":906,"score":29,"level":0},{"x":1042,"y":906,"score":48,"level":0},{"x":1055,"y":906,"score":29,"level":0},{"x":1060,"y":906,"score":33,"level":0},{"x":1198,"y":906,"score":61,"level":0},{"x":1250,"y":906,"score":27,"level":0},{"x":1451,"y":906,"score":26,"level":0},{"x":428,"y":907,"score":40,"level":0},{"x":586,"y":907,"score":33,"level":0},{"x":642,"y":907,"score":26,"level":0},{"x":719,"y":907,"score":52,"level":0},{"x":845,"y":907,"score":36,"level":0},{"x":870,"y":907,"score":42,"level":0},{"x":902,"y":907,"score":29,"level":0},{"x":955,"y":907,"score":30,"level":0},{"x":1030,"y":907,"score":68,"level":0},{"x":1075,"y":907,"score":26,"level":0},{"x":1288,"y":907,"score":45,"level":0},{"x":1342,"y":907,"score":40,"level":0},{"x":1414,"y":907,"score":39,"level":0},{"x":460,"y":908,"score":56,"level":0},{"x":596,"y":908,"score":36,"level":0},{"x":619,"y":908,"score":45,"level":0},{"x":724,"y":908,"score":32,"level":0},{"x":836,"y":908,"score":34,"level":0},{"x":1004,"y":908,"score":52,"level":0},{"x":1154,"y":908,"score":26,"level":0},{"x":1226,"y":908,"score":53,"level":0},{"x":1293,"y":908,"score":41,"level":0},{"x":1446,"y":908,"score":38,"level":0},{"x":418,"y":909,"score":35,"level":0},{"x":423,"y":909,"score":31,"level":0},{"x":465,"y":909,"score":45,"level":0},{"x":574,"y":909,"score":36,"level":0},{"x":867,"y":909,"score":26,"level":0},{"x":994,"y":909,"score":27,"level":0},{"x":1126,"y":909,"score":28,"level":0},{"x":1191,"y":909,"score":26,"level":0},{"x":611,"y":910,"score":30,"level":0},{"x":827,"y":910,"score":46,"level":0},{"x":861,"y":910,"score":30,"level":0},{"x":941,"y":910,"score":42,"level":0},{"x":1270,"y":910,"score":32,"level":0},{"x":383,"y":911,"score":28,"level":0},{"x":496,"y":911,"score":44,"level":0},{"x":508,"y":911,"score":27,"level":0},{"x":563,"y":911,"score":28,"level":0},{"x":763,"y":911,"score":54,"level":0},{"x":785,"y":911,"score":48,"level":0},{"x":1421,"y":911,"score":51,"level":0},{"x":1450,"y":911,"score":27,"level":0},{"x":516,"y":912,"score":34,"level":0},{"x":668,"y":912,"score":30,"level":0},{"x":776,"y":912,"score":27,"level":0},{"x":987,"y":912,"score":26,"level":0},{"x":1202,"y":912,"score":38,"level":0},{"x":1454,"y":912,"score":38,"level":0},{"x":1472,"y":912,"score":28,"level":0},{"x":1490,"y":912,"score":32,"level":0},{"x":720,"y":913,"score":28,"level":0},{"x":746,"y":913,"score":55,"level":0},{"x":755,"y":913,"score":27,"level":0},{"x":874,"y":913,"score":28,"level":0},{"x":885,"y":913,"score":54,"level":0},{"x":1041,"y":913,"score":28,"level":0},{"x":1081,"y":913,"score":29,"level":0},{"x":1122,"y":913,"score":27,"level":0},{"x":1459,"y":913,"score":43,"level":0},{"x":394,"y":914,"score":28,"level":0},{"x":417,"y":914,"score":41,"level":0},{"x":489,"y":914,"score":26,"level":0},{"x":503,"y":914,"score":41,"level":0},{"x":631,"y":914,"score":29,"level":0},{"x":650,"y":914,"score":30,"level":0},{"x":668,"y":914,"score":29,"level":0},{"x":1007,"y":914,"score":28,"level":0},{"x":1047,"y":914,"score":40,"level":0},{"x":1101,"y":914,"score":70,"level":0},{"x":1174,"y":914,"score":28,"level":0},{"x":1234,"y":914,"score":34,"level":0},{"x":1467,"y":914,"score":29,"level":0},{"x":468,"y":915,"score":31,"level":0},{"x":584,"y":915,"score":33,"level":0},{"x":655,"y":915,"score":50,"level":0},{"x":658,"y":915,"score":36,"level":0},{"x":718,"y":915,"score":35,"level":0},{"x":744,"y":915,"score":27,"level":0},{"x":832,"y":915,"score":38,"level":0},{"x":862,"y":915,"score":39,"level":0},{"x":1055,"y":915,"score":26,"level":0},{"x":1060,"y":915,"score":28,"level":0},{"x":1186,"y":915,"score":36,"level":0},{"x":1480,"y":915,"score":27,"level":0},{"x":596,"y":916,"score":36,"level":0},{"x":768,"y":916,"score":44,"level":0},{"x":777,"y":916,"score":56,"level":0},{"x":918,"y":916,"score":48,"level":0},{"x":1006,"y":916,"score":34,"level":0},{"x":1288,"y":916,"score":26,"level":0},{"x":1329,"y":916,"score":39,"level":0},{"x":550,"y":917,"score":32,"level":0},{"x":630,"y":917,"score":32,"level":0},{"x":641,"y":917,"score":36,"level":0},{"x":692,"y":917,"score":53,"level":0},{"x":694,"y":917,"score":54,"level":0},{"x":749,"y":917,"score":45,"level":0},{"x":774,"y":917,"score":27,"level":0},{"x":853,"y":917,"score":30,"level":0},{"x":899,"y":917,"score":44,"level":0},{"x":1140,"y":917,"score":31,"level":0},{"x":1451,"y":917,"score":42,"level":0},{"x":449,"y":918,"score":26,"level":0},{"x":577,"y":918,"score":36,"level":0},{"x":610,"y":918,"score":82,"level":0},{"x":613,"y":918,"score":49,"level":0},{"x":617,"y":918,"score":47,"level":0},{"x":628,"y":918,"score":31,"level":0},{"x":671,"y":918,"score":28,"level":0},{"x":825,"y":918,"score":40,"level":0},{"x":869,"y":918,"score":58,"level":0},{"x":887,"y":918,"score":29,"level":0},{"x":974,"y":918,"score":43,"level":0},{"x":1033,"y":918,"score":38,"level":0},{"x":1038,"y":918,"score":32,"level":0},{"x":1331,"y":918,"score":36,"level":0},{"x":418,"y":919,"score":33,"level":0},{"x":423,"y":919,"score":26,"level":0},{"x":431,"y":919,"score":28,"level":0},{"x":491,"y":919,"score":64,"level":0},{"x":496,"y":919,"score":34,"level":0},{"x":651,"y":919,"score":34,"level":0},{"x":680,"y":919,"score":40,"level":0},{"x":904,"y":919,"score":34,"level":0},{"x":926,"y":919,"score":30,"level":0},{"x":944,"y":919,"score":46,"level":0},{"x":1087,"y":919,"score":36,"level":0},{"x":1127,"y":919,"score":56,"level":0},{"x":1234,"y":919,"score":39,"level":0},{"x":1239,"y":919,"score":40,"level":0},{"x":460,"y":920,"score":26,"level":0},{"x":556,"y":920,"score":58,"level":0},{"x":698,"y":920,"score":32,"level":0},{"x":870,"y":920,"score":52,"level":0},{"x":1008,"y":920,"score":28,"level":0},{"x":1476,"y":920,"score":26,"level":0},{"x":768,"y":921,"score":47,"level":0},{"x":950,"y":921,"score":31,"level":0},{"x":960,"y":921,"score":38,"level":0},{"x":1170,"y":921,"score":41,"level":0},{"x":1291,"y":921,"score":26,"level":0},{"x":1354,"y":921,"score":46,"level":0},{"x":1374,"y":921,"score":32,"level":0},{"x":1379,"y":921,"score":29,"level":0},{"x":1448,"y":921,"score":28,"level":0},{"x":550,"y":922,"score":48,"level":0},{"x":552,"y":922,"score":46,"level":0},{"x":653,"y":922,"score":29,"level":0},{"x":672,"y":922,"score":32,"level":0},{"x":681,"y":922,"score":37,"level":0},{"x":750,"y":922,"score":42,"level":0},{"x":889,"y":922,"score":28,"level":0},{"x":975,"y":922,"score":33,"level":0},{"x":984,"y":922,"score":27,"level":0},{"x":1197,"y":922,"score":70,"level":0},{"x":1250,"y":922,"score":30,"level":0},{"x":520,"y":923,"score":40,"level":0},{"x":569,"y":923,"score":32,"level":0},{"x":690,"y":923,"score":31,"level":0},{"x":980,"y":923,"score":45,"level":0},{"x":1097,"y":923,"score":34,"level":0},{"x":1325,"y":923,"score":51,"level":0},{"x":1411,"y":923,"score":32,"level":0},{"x":1460,"y":923,"score":32,"level":0},{"x":380,"y":924,"score":56,"level":0},{"x":392,"y":924,"score":31,"level":0},{"x":534,"y":924,"score":31,"level":0},{"x":621,"y":924,"score":31,"level":0},{"x":628,"y":924,"score":29,"level":0},{"x":706,"y":924,"score":54,"level":0},{"x":737,"y":924,"score":40,"level":0},{"x":860,"y":924,"score":41,"level":0},{"x":1030,"y":924,"score":28,"level":0},{"x":1340,"y":924,"score":36,"level":0},{"x":537,"y":925,"score":50,"level":0},{"x":699,"y":925,"score":27,"level":0},{"x":769,"y":925,"score":35,"level":0},{"x":927,"y":925,"score":84,"level":0},{"x":944,"y":925,"score":40,"level":0},{"x":997,"y":925,"score":34,"level":0},{"x":1124,"y":925,"score":39,"level":0},{"x":402,"y":926,"score":26,"level":0},{"x":506,"y":926,"score":53,"level":0},{"x":579,"y":926,"score":28,"level":0},{"x":742,"y":926,"score":44,"level":0},{"x":844,"y":926,"score":26,"level":0},{"x":870,"y":926,"score":30,"level":0},{"x":911,"y":926,"score":30,"level":0},{"x":1027,"y":926,"score":54,"level":0},{"x":1222,"y":926,"score":50,"level":0},{"x":1373,"y":926,"score":29,"level":0},{"x":683,"y":927,"score":51,"level":0},{"x":794,"y":927,"score":88,"level":0},{"x":816,"y":927,"score":54,"level":0},{"x":821,"y":927,"score":37,"level":0},{"x":920,"y":927,"score":46,"level":0},{"x":962,"y":927,"score":28,"level":0},{"x":1289,"y":927,"score":52,"level":0},{"x":1352,"y":927,"score":46,"level":0},{"x":552,"y":928,"score":26,"level":0},{"x":668,"y":928,"score":41,"level":0},{"x":1055,"y":928,"score":30,"level":0},{"x":1262,"y":928,"score":38,"level":0},{"x":408,"y":929,"score":27,"level":0},{"x":434,"y":929,"score":33,"level":0},{"x":490,"y":929,"score":75,"level":0},{"x":622,"y":929,"score":27,"level":0},{"x":633,"y":929,"score":68,"level":0},{"x":689,"y":929,"score":40,"level":0},{"x":721,"y":929,"score":42,"level":0},{"x":737,"y":929,"score":35,"level":0},{"x":752,"y":929,"score":61,"level":0},{"x":761,"y":929,"score":40,"level":0},{"x":782,"y":929,"score":27,"level":0},{"x":952,"y":929,"score":26,"level":0},{"x":1127,"y":929,"score":56,"level":0},{"x":1325,"y":929,"score":42,"level":0},{"x":1453,"y":929,"score":58,"level":0},{"x":447,"y":930,"score":36,"level":0},{"x":498,"y":930,"score":42,"level":0},{"x":701,"y":930,"score":39,"level":0},{"x":709,"y":930,"score":114,"level":0},{"x":712,"y":930,"score":42,"level":0},{"x":727,"y":930,"score":45,"level":0},{"x":795,"y":930,"score":33,"level":0},{"x":879,"y":930,"score":79,"level":0},{"x":1098,"y":930,"score":26,"level":0},{"x":1138,"y":930,"score":26,"level":0},{"x":1254,"y":930,"score":26,"level":0},{"x":1294,"y":930,"score":27,"level":0},{"x":1321,"y":930,"score":36,"level":0},{"x":575,"y":931,"score":34,"level":0},{"x":504,"y":932,"score":42,"level":0},{"x":596,"y":932,"score":50,"level":0},{"x":634,"y":932,"score":57,"level":0},{"x":653,"y":932,"score":44,"level":0},{"x":754,"y":932,"score":38,"level":0},{"x":762,"y":932,"score":30,"level":0},{"x":847,"y":932,"score":31,"level":0},{"x":964,"y":932,"score":27,"level":0},{"x":1026,"y":932,"score":49,"level":0},{"x":1144,"y":932,"score":26,"level":0},{"x":530,"y":933,"score":43,"level":0},{"x":772,"y":933,"score":48,"level":0},{"x":843,"y":933,"score":44,"level":0},{"x":923,"y":933,"score":26,"level":0},{"x":1033,"y":933,"score":52,"level":0},{"x":1124,"y":933,"score":26,"level":0},{"x":1214,"y":933,"score":40,"level":0},{"x":382,"y":934,"score":32,"level":0},{"x":494,"y":934,"score":32,"level":0},{"x":509,"y":934,"score":26,"level":0},{"x":608,"y":934,"score":62,"level":0},{"x":854,"y":934,"score":56,"level":0},{"x":991,"y":934,"score":33,"level":0},{"x":1150,"y":934,"score":31,"level":0},{"x":1402,"y":934,"score":26,"level":0},{"x":1469,"y":934,"score":142,"level":0},{"x":1475,"y":934,"score":125,"level":0},{"x":1489,"y":934,"score":37,"level":0},{"x":482,"y":935,"score":33,"level":0},{"x":511,"y":935,"score":35,"level":0},{"x":553,"y":935,"score":30,"level":0},{"x":639,"y":935,"score":66,"level":0},{"x":673,"y":935,"score":74,"level":0},{"x":676,"y":935,"score":50,"level":0},{"x":682,"y":935,"score":37,"level":0},{"x":688,"y":935,"score":36,"level":0},{"x":732,"y":935,"score":31,"level":0},{"x":738,"y":935,"score":40,"level":0},{"x":763,"y":935,"score":38,"level":0},{"x":885,"y":935,"score":35,"level":0},{"x":929,"y":935,"score":29,"level":0},{"x":1201,"y":935,"score":50,"level":0},{"x":1242,"y":935,"score":29,"level":0},{"x":1247,"y":935,"score":34,"level":0},{"x":1345,"y":935,"score":33,"level":0},{"x":456,"y":936,"score":27,"level":0},{"x":567,"y":936,"score":29,"level":0},{"x":645,"y":936,"score":63,"level":0},{"x":693,"y":936,"score":30,"level":0},{"x":719,"y":936,"score":30,"level":0},{"x":811,"y":936,"score":26,"level":0},{"x":831,"y":936,"score":44,"level":0},{"x":900,"y":936,"score":30,"level":0},{"x":924,"y":936,"score":28,"level":0},{"x":945,"y":936,"score":55,"level":0},{"x":1073,"y":936,"score":30,"level":0},{"x":1325,"y":936,"score":31,"level":0},{"x":1422,"y":936,"score":36,"level":0},{"x":482,"y":937,"score":44,"level":0},{"x":729,"y":937,"score":52,"level":0},{"x":759,"y":937,"score":26,"level":0},{"x":804,"y":937,"score":28,"level":0},{"x":877,"y":937,"score":44,"level":0},{"x":962,"y":937,"score":26,"level":0},{"x":1179,"y":937,"score":28,"level":0},{"x":1226,"y":937,"score":42,"level":0},{"x":1320,"y":937,"score":52,"level":0},{"x":377,"y":938,"score":44,"level":0},{"x":417,"y":938,"score":29,"level":0},{"x":598,"y":938,"score":52,"level":0},{"x":688,"y":938,"score":49,"level":0},{"x":697,"y":938,"score":29,"level":0},{"x":839,"y":938,"score":34,"level":0},{"x":843,"y":938,"score":60,"level":0},{"x":884,"y":938,"score":36,"level":0},{"x":887,"y":938,"score":35,"level":0},{"x":1030,"y":938,"score":36,"level":0},{"x":1167,"y":938,"score":31,"level":0},{"x":1231,"y":938,"score":34,"level":0},{"x":1235,"y":938,"score":46,"level":0},{"x":1259,"y":938,"score":32,"level":0},{"x":435,"y":939,"score":34,"level":0},{"x":448,"y":939,"score":49,"level":0},{"x":507,"y":939,"score":34,"level":0},{"x":686,"y":939,"score":26,"level":0},{"x":694,"y":939,"score":48,"level":0},{"x":756,"y":939,"score":46,"level":0},{"x":771,"y":939,"score":27,"level":0},{"x":776,"y":939,"score":39,"level":0},{"x":1130,"y":939,"score":52,"level":0},{"x":1276,"y":939,"score":27,"level":0},{"x":427,"y":940,"score":30,"level":0},{"x":429,"y":940,"score":44,"level":0},{"x":606,"y":940,"score":62,"level":0},{"x":699,"y":940,"score":44,"level":0},{"x":712,"y":940,"score":35,"level":0},{"x":1007,"y":940,"score":60,"level":0},{"x":1082,"y":940,"score":28,"level":0},{"x":1087,"y":940,"score":31,"level":0},{"x":1112,"y":940,"score":27,"level":0},{"x":1241,"y":940,"score":29,"level":0},{"x":1326,"y":940,"score":31,"level":0},{"x":1377,"y":940,"score":28,"level":0},{"x":1390,"y":940,"score":34,"level":0},{"x":1458,"y":940,"score":66,"level":0},{"x":1470,"y":940,"score":43,"level":0},{"x":1484,"y":940,"score":139,"level":0},{"x":392,"y":941,"score":40,"level":0},{"x":462,"y":941,"score":48,"level":0},{"x":475,"y":941,"score":38,"level":0},{"x":477,"y":941,"score":57,"level":0},{"x":517,"y":941,"score":31,"level":0},{"x":553,"y":941,"score":32,"level":0},{"x":715,"y":941,"score":47,"level":0},{"x":753,"y":941,"score":47,"level":0},{"x":921,"y":941,"score":29,"level":0},{"x":1077,"y":941,"score":48,"level":0},{"x":1360,"y":941,"score":26,"level":0},{"x":1422,"y":941,"score":32,"level":0},{"x":394,"y":942,"score":32,"level":0},{"x":482,"y":942,"score":47,"level":0},{"x":487,"y":942,"score":27,"level":0},{"x":491,"y":942,"score":29,"level":0},{"x":545,"y":942,"score":29,"level":0},{"x":658,"y":942,"score":60,"level":0},{"x":664,"y":942,"score":60,"level":0},{"x":857,"y":942,"score":46,"level":0},{"x":891,"y":942,"score":49,"level":0},{"x":896,"y":942,"score":29,"level":0},{"x":1049,"y":942,"score":33,"level":0},{"x":1104,"y":942,"score":46,"level":0},{"x":383,"y":943,"score":40,"level":0},{"x":550,"y":943,"score":26,"level":0},{"x":684,"y":943,"score":62,"level":0},{"x":752,"y":943,"score":50,"level":0},{"x":764,"y":943,"score":26,"level":0},{"x":766,"y":943,"score":36,"level":0},{"x":834,"y":943,"score":33,"level":0},{"x":878,"y":943,"score":100,"level":0},{"x":1260,"y":943,"score":28,"level":0},{"x":1324,"y":943,"score":80,"level":0},{"x":1349,"y":943,"score":30,"level":0},{"x":385,"y":944,"score":35,"level":0},{"x":412,"y":944,"score":32,"level":0},{"x":636,"y":944,"score":62,"level":0},{"x":642,"y":944,"score":29,"level":0},{"x":679,"y":944,"score":42,"level":0},{"x":778,"y":944,"score":35,"level":0},{"x":803,"y":944,"score":34,"level":0},{"x":844,"y":944,"score":31,"level":0},{"x":1340,"y":944,"score":29,"level":0},{"x":1477,"y":944,"score":52,"level":0},{"x":434,"y":945,"score":26,"level":0},{"x":448,"y":945,"score":43,"level":0},{"x":722,"y":945,"score":49,"level":0},{"x":792,"y":945,"score":31,"level":0},{"x":916,"y":945,"score":36,"level":0},{"x":961,"y":945,"score":52,"level":0},{"x":1125,"y":945,"score":41,"level":0},{"x":1132,"y":945,"score":47,"level":0},{"x":1153,"y":945,"score":29,"level":0},{"x":1216,"y":945,"score":29,"level":0},{"x":385,"y":946,"score":28,"level":0},{"x":539,"y":946,"score":38,"level":0},{"x":578,"y":946,"score":64,"level":0},{"x":584,"y":946,"score":129,"level":0},{"x":668,"y":946,"score":26,"level":0},{"x":842,"y":946,"score":38,"level":0},{"x":981,"y":946,"score":32,"level":0},{"x":1119,"y":946,"score":70,"level":0},{"x":1315,"y":946,"score":35,"level":0},{"x":1327,"y":946,"score":32,"level":0},{"x":398,"y":947,"score":34,"level":0},{"x":455,"y":947,"score":45,"level":0},{"x":526,"y":947,"score":41,"level":0},{"x":532,"y":947,"score":26,"level":0},{"x":1027,"y":947,"score":46,"level":0},{"x":1194,"y":947,"score":28,"level":0},{"x":1240,"y":947,"score":31,"level":0},{"x":1289,"y":947,"score":33,"level":0},{"x":403,"y":948,"score":34,"level":0},{"x":654,"y":948,"score":31,"level":0},{"x":866,"y":948,"score":76,"level":0},{"x":891,"y":948,"score":34,"level":0},{"x":953,"y":948,"score":60,"level":0},{"x":1032,"y":948,"score":31,"level":0},{"x":1059,"y":948,"score":38,"level":0},{"x":1085,"y":948,"score":40,"level":0},{"x":1255,"y":948,"score":30,"level":0},{"x":1377,"y":948,"score":30,"level":0},{"x":1430,"y":948,"score":45,"level":0},{"x":1436,"y":948,"score":44,"level":0},{"x":652,"y":949,"score":50,"level":0},{"x":679,"y":949,"score":54,"level":0},{"x":692,"y":949,"score":34,"level":0},{"x":707,"y":949,"score":30,"level":0},{"x":1139,"y":949,"score":32,"level":0},{"x":1298,"y":949,"score":61,"level":0},{"x":473,"y":950,"score":43,"level":0},{"x":517,"y":950,"score":31,"level":0},{"x":598,"y":950,"score":82,"level":0},{"x":654,"y":950,"score":41,"level":0},{"x":697,"y":950,"score":48,"level":0},{"x":715,"y":950,"score":37,"level":0},{"x":745,"y":950,"score":40,"level":0},{"x":763,"y":950,"score":42,"level":0},{"x":858,"y":950,"score":28,"level":0},{"x":1046,"y":950,"score":28,"level":0},{"x":1172,"y":950,"score":32,"level":0},{"x":1334,"y":950,"score":28,"level":0},{"x":419,"y":951,"score":34,"level":0},{"x":652,"y":951,"score":35,"level":0},{"x":776,"y":951,"score":28,"level":0},{"x":876,"y":951,"score":72,"level":0},{"x":896,"y":951,"score":36,"level":0},{"x":904,"y":951,"score":34,"level":0},{"x":946,"y":951,"score":74,"level":0},{"x":1009,"y":951,"score":26,"level":0},{"x":1197,"y":951,"score":33,"level":0},{"x":1325,"y":951,"score":86,"level":0},{"x":1401,"y":951,"score":42,"level":0},{"x":416,"y":952,"score":54,"level":0},{"x":440,"y":952,"score":50,"level":0},{"x":642,"y":952,"score":50,"level":0},{"x":684,"y":952,"score":52,"level":0},{"x":689,"y":952,"score":39,"level":0},{"x":790,"y":952,"score":29,"level":0},{"x":887,"y":952,"score":36,"level":0},{"x":964,"y":952,"score":50,"level":0},{"x":1245,"y":952,"score":30,"level":0},{"x":1266,"y":952,"score":42,"level":0},{"x":1420,"y":952,"score":38,"level":0},{"x":378,"y":953,"score":30,"level":0},{"x":478,"y":953,"score":40,"level":0},{"x":526,"y":953,"score":57,"level":0},{"x":647,"y":953,"score":33,"level":0},{"x":713,"y":953,"score":29,"level":0},{"x":733,"y":953,"score":38,"level":0},{"x":759,"y":953,"score":57,"level":0},{"x":954,"y":953,"score":58,"level":0},{"x":996,"y":953,"score":34,"level":0},{"x":1095,"y":953,"score":43,"level":0},{"x":1241,"y":953,"score":37,"level":0},{"x":1255,"y":953,"score":32,"level":0},{"x":1264,"y":953,"score":32,"level":0},{"x":469,"y":954,"score":32,"level":0},{"x":630,"y":954,"score":87,"level":0},{"x":920,"y":954,"score":28,"level":0},{"x":929,"y":954,"score":26,"level":0},{"x":961,"y":954,"score":34,"level":0},{"x":971,"y":954,"score":36,"level":0},{"x":976,"y":954,"score":31,"level":0},{"x":1278,"y":954,"score":30,"level":0},{"x":1377,"y":954,"score":26,"level":0},{"x":529,"y":955,"score":49,"level":0},{"x":543,"y":955,"score":40,"level":0},{"x":594,"y":955,"score":34,"level":0},{"x":645,"y":955,"score":30,"level":0},{"x":903,"y":955,"score":36,"level":0},{"x":1039,"y":955,"score":34,"level":0},{"x":1217,"y":955,"score":30,"level":0},{"x":1233,"y":955,"score":34,"level":0},{"x":1284,"y":955,"score":36,"level":0},{"x":1467,"y":955,"score":32,"level":0},{"x":1471,"y":955,"score":42,"level":0},{"x":392,"y":956,"score":45,"level":0},{"x":460,"y":956,"score":33,"level":0},{"x":498,"y":956,"score":31,"level":0},{"x":705,"y":956,"score":33,"level":0},{"x":746,"y":956,"score":46,"level":0},{"x":776,"y":956,"score":32,"level":0},{"x":781,"y":956,"score":59,"level":0},{"x":847,"y":956,"score":54,"level":0},{"x":1127,"y":956,"score":78,"level":0},{"x":1276,"y":956,"score":30,"level":0},{"x":1327,"y":956,"score":55,"level":0},{"x":1334,"y":956,"score":47,"level":0},{"x":1435,"y":956,"score":43,"level":0},{"x":403,"y":957,"score":35,"level":0},{"x":442,"y":957,"score":41,"level":0},{"x":697,"y":957,"score":32,"level":0},{"x":740,"y":957,"score":28,"level":0},{"x":771,"y":957,"score":34,"level":0},{"x":1133,"y":957,"score":43,"level":0},{"x":1356,"y":957,"score":32,"level":0},{"x":1389,"y":957,"score":27,"level":0},{"x":377,"y":958,"score":28,"level":0},{"x":587,"y":958,"score":28,"level":0},{"x":678,"y":958,"score":47,"level":0},{"x":788,"y":958,"score":97,"level":0},{"x":808,"y":958,"score":29,"level":0},{"x":889,"y":958,"score":39,"level":0},{"x":1153,"y":958,"score":74,"level":0},{"x":1406,"y":958,"score":38,"level":0},{"x":1455,"y":958,"score":29,"level":0},{"x":1461,"y":958,"score":64,"level":0},{"x":552,"y":959,"score":34,"level":0},{"x":596,"y":959,"score":33,"level":0},{"x":665,"y":959,"score":28,"level":0},{"x":961,"y":959,"score":44,"level":0},{"x":1159,"y":959,"score":45,"level":0},{"x":475,"y":960,"score":27,"level":0},{"x":485,"y":960,"score":29,"level":0},{"x":557,"y":960,"score":30,"level":0},{"x":560,"y":960,"score":42,"level":0},{"x":695,"y":960,"score":37,"level":0},{"x":731,"y":960,"score":27,"level":0},{"x":794,"y":960,"score":34,"level":0},{"x":819,"y":960,"score":44,"level":0},{"x":824,"y":960,"score":29,"level":0},{"x":953,"y":960,"score":29,"level":0},{"x":1083,"y":960,"score":28,"level":0},{"x":1180,"y":960,"score":56,"level":0},{"x":1185,"y":960,"score":30,"level":0},{"x":1476,"y":960,"score":48,"level":0},{"x":503,"y":961,"score":46,"level":0},{"x":524,"y":961,"score":27,"level":0},{"x":529,"y":961,"score":44,"level":0},{"x":605,"y":961,"score":54,"level":0},{"x":636,"y":961,"score":64,"level":0},{"x":670,"y":961,"score":40,"level":0},{"x":690,"y":961,"score":48,"level":0},{"x":866,"y":961,"score":38,"level":0},{"x":892,"y":961,"score":31,"level":0},{"x":964,"y":961,"score":26,"level":0},{"x":975,"y":961,"score":30,"level":0},{"x":1174,"y":961,"score":44,"level":0},{"x":1272,"y":961,"score":34,"level":0},{"x":1275,"y":961,"score":28,"level":0},{"x":1345,"y":961,"score":38,"level":0},{"x":1413,"y":961,"score":30,"level":0},{"x":1423,"y":961,"score":37,"level":0},{"x":464,"y":962,"score":28,"level":0},{"x":631,"y":962,"score":64,"level":0},{"x":664,"y":962,"score":29,"level":0},{"x":746,"y":962,"score":63,"level":0},{"x":754,"y":962,"score":41,"level":0},{"x":933,"y":962,"score":45,"level":0},{"x":1093,"y":962,"score":31,"level":0},{"x":1198,"y":962,"score":72,"level":0},{"x":1333,"y":962,"score":32,"level":0},{"x":468,"y":963,"score":32,"level":0},{"x":544,"y":963,"score":42,"level":0},{"x":669,"y":963,"score":32,"level":0},{"x":725,"y":963,"score":28,"level":0},{"x":906,"y":963,"score":37,"level":0},{"x":979,"y":963,"score":30,"level":0},{"x":1063,"y":963,"score":30,"level":0},{"x":1100,"y":963,"score":47,"level":0},{"x":1164,"y":963,"score":48,"level":0},{"x":1221,"y":963,"score":47,"level":0},{"x":1281,"y":963,"score":37,"level":0},{"x":1454,"y":963,"score":47,"level":0},{"x":405,"y":964,"score":26,"level":0},{"x":500,"y":964,"score":51,"level":0},{"x":583,"y":964,"score":37,"level":0},{"x":603,"y":964,"score":50,"level":0},{"x":605,"y":964,"score":80,"level":0},{"x":860,"y":964,"score":67,"level":0},{"x":900,"y":964,"score":26,"level":0},{"x":1029,"y":964,"score":52,"level":0},{"x":1056,"y":964,"score":29,"level":0},{"x":1158,"y":964,"score":63,"level":0},{"x":1170,"y":964,"score":35,"level":0},{"x":1359,"y":964,"score":30,"level":0},{"x":1364,"y":964,"score":29,"level":0},{"x":492,"y":965,"score":46,"level":0},{"x":552,"y":965,"score":29,"level":0},{"x":709,"y":965,"score":30,"level":0},{"x":758,"y":965,"score":56,"level":0},{"x":850,"y":965,"score":36,"level":0},{"x":865,"y":965,"score":54,"level":0},{"x":887,"y":965,"score":31,"level":0},{"x":994,"y":965,"score":44,"level":0},{"x":1010,"y":965,"score":59,"level":0},{"x":1080,"y":965,"score":28,"level":0},{"x":1175,"y":965,"score":29,"level":0},{"x":1297,"y":965,"score":31,"level":0},{"x":1373,"y":965,"score":30,"level":0},{"x":636,"y":966,"score":38,"level":0},{"x":714,"y":966,"score":54,"level":0},{"x":719,"y":966,"score":50,"level":0},{"x":809,"y":966,"score":28,"level":0},{"x":814,"y":966,"score":32,"level":0},{"x":990,"y":966,"score":32,"level":0},{"x":1332,"y":966,"score":30,"level":0},{"x":418,"y":967,"score":43,"level":0},{"x":424,"y":967,"score":36,"level":0},{"x":458,"y":967,"score":35,"level":0},{"x":464,"y":967,"score":27,"level":0},{"x":564,"y":967,"score":35,"level":0},{"x":641,"y":967,"score":64,"level":0},{"x":678,"y":967,"score":32,"level":0},{"x":788,"y":967,"score":49,"level":0},{"x":799,"y":967,"score":28,"level":0},{"x":840,"y":967,"score":34,"level":0},{"x":893,"y":967,"score":62,"level":0},{"x":1065,"y":967,"score":28,"level":0},{"x":1124,"y":967,"score":52,"level":0},{"x":1148,"y":967,"score":29,"level":0},{"x":1213,"y":967,"score":65,"level":0},{"x":1260,"y":967,"score":29,"level":0},{"x":1265,"y":967,"score":97,"level":0},{"x":1487,"y":967,"score":28,"level":0},{"x":435,"y":968,"score":29,"level":0},{"x":601,"y":968,"score":28,"level":0},{"x":649,"y":968,"score":28,"level":0},{"x":708,"y":968,"score":48,"level":0},{"x":845,"y":968,"score":35,"level":0},{"x":1006,"y":968,"score":55,"level":0},{"x":1165,"y":968,"score":46,"level":0},{"x":1234,"y":968,"score":41,"level":0},{"x":405,"y":969,"score":26,"level":0},{"x":589,"y":969,"score":26,"level":0},{"x":630,"y":969,"score":46,"level":0},{"x":668,"y":969,"score":34,"level":0},{"x":674,"y":969,"score":30,"level":0},{"x":726,"y":969,"score":32,"level":0},{"x":765,"y":969,"score":54,"level":0},{"x":935,"y":969,"score":27,"level":0},{"x":1125,"y":969,"score":39,"level":0},{"x":1134,"y":969,"score":26,"level":0},{"x":1172,"y":969,"score":56,"level":0},{"x":1195,"y":969,"score":44,"level":0},{"x":1289,"y":969,"score":29,"level":0},{"x":1452,"y":969,"score":76,"level":0},{"x":412,"y":970,"score":33,"level":0},{"x":416,"y":970,"score":36,"level":0},{"x":547,"y":970,"score":42,"level":0},{"x":582,"y":970,"score":26,"level":0},{"x":686,"y":970,"score":37,"level":0},{"x":737,"y":970,"score":27,"level":0},{"x":742,"y":970,"score":52,"level":0},{"x":781,"y":970,"score":35,"level":0},{"x":918,"y":970,"score":28,"level":0},{"x":942,"y":970,"score":26,"level":0},{"x":1158,"y":970,"score":44,"level":0},{"x":1409,"y":970,"score":43,"level":0},{"x":525,"y":971,"score":27,"level":0},{"x":865,"y":971,"score":44,"level":0},{"x":1387,"y":971,"score":27,"level":0},{"x":1404,"y":971,"score":26,"level":0},{"x":1470,"y":971,"score":44,"level":0},{"x":463,"y":972,"score":28,"level":0},{"x":476,"y":972,"score":28,"level":0},{"x":514,"y":972,"score":50,"level":0},{"x":654,"y":972,"score":44,"level":0},{"x":713,"y":972,"score":39,"level":0},{"x":718,"y":972,"score":29,"level":0},{"x":808,"y":972,"score":35,"level":0},{"x":885,"y":972,"score":36,"level":0},{"x":460,"y":973,"score":32,"level":0},{"x":659,"y":973,"score":68,"level":0},{"x":676,"y":973,"score":28,"level":0},{"x":783,"y":973,"score":33,"level":0},{"x":826,"y":973,"score":41,"level":0},{"x":844,"y":973,"score":26,"level":0},{"x":979,"y":973,"score":32,"level":0},{"x":1162,"y":973,"score":30,"level":0},{"x":1183,"y":973,"score":44,"level":0},{"x":1219,"y":973,"score":32,"level":0},{"x":1487,"y":973,"score":35,"level":0},{"x":449,"y":974,"score":44,"level":0},{"x":454,"y":974,"score":39,"level":0},{"x":572,"y":974,"score":38,"level":0},{"x":646,"y":974,"score":36,"level":0},{"x":890,"y":974,"score":32,"level":0},{"x":970,"y":974,"score":45,"level":0},{"x":1009,"y":974,"score":35,"level":0},{"x":1199,"y":974,"score":45,"level":0},{"x":1294,"y":974,"score":53,"level":0},{"x":1321,"y":974,"score":62,"level":0},{"x":438,"y":975,"score":40,"level":0},{"x":470,"y":975,"score":30,"level":0},{"x":736,"y":975,"score":48,"level":0},{"x":788,"y":975,"score":34,"level":0},{"x":968,"y":975,"score":51,"level":0},{"x":986,"y":975,"score":26,"level":0},{"x":1056,"y":975,"score":28,"level":0},{"x":1273,"y":975,"score":36,"level":0},{"x":1474,"y":975,"score":40,"level":0},{"x":497,"y":976,"score":40,"level":0},{"x":546,"y":976,"score":27,"level":0},{"x":769,"y":976,"score":55,"level":0},{"x":790,"y":976,"score":40,"level":0},{"x":1008,"y":976,"score":28,"level":0},{"x":435,"y":977,"score":53,"level":0},{"x":585,"y":977,"score":54,"level":0},{"x":624,"y":977,"score":43,"level":0},{"x":630,"y":977,"score":54,"level":0},{"x":763,"y":977,"score":78,"level":0},{"x":899,"y":977,"score":30,"level":0},{"x":901,"y":977,"score":29,"level":0},{"x":1028,"y":977,"score":75,"level":0},{"x":1196,"y":977,"score":26,"level":0},{"x":1335,"y":977,"score":26,"level":0},{"x":400,"y":978,"score":28,"level":0},{"x":481,"y":978,"score":58,"level":0},{"x":532,"y":978,"score":38,"level":0},{"x":594,"y":978,"score":31,"level":0},{"x":603,"y":978,"score":42,"level":0},{"x":721,"y":978,"score":34,"level":0},{"x":728,"y":978,"score":37,"level":0},{"x":775,"y":978,"score":26,"level":0},{"x":801,"y":978,"score":37,"level":0},{"x":960,"y":978,"score":36,"level":0},{"x":1070,"y":978,"score":31,"level":0},{"x":1329,"y":978,"score":48,"level":0},{"x":1406,"y":978,"score":44,"level":0},{"x":385,"y":979,"score":29,"level":0},{"x":840,"y":979,"score":30,"level":0},{"x":1008,"y":979,"score":44,"level":0},{"x":1034,"y":979,"score":65,"level":0},{"x":1093,"y":979,"score":31,"level":0},{"x":1098,"y":979,"score":26,"level":0},{"x":1144,"y":979,"score":44,"level":0},{"x":1150,"y":979,"score":48,"level":0},{"x":1176,"y":979,"score":27,"level":0},{"x":1202,"y":979,"score":34,"level":0},{"x":1255,"y":979,"score":28,"level":0},{"x":1457,"y":979,"score":36,"level":0},{"x":441,"y":980,"score":46,"level":0},{"x":447,"y":980,"score":33,"level":0},{"x":711,"y":980,"score":26,"level":0},{"x":752,"y":980,"score":31,"level":0},{"x":942,"y":980,"score":31,"level":0},{"x":1022,"y":980,"score":97,"level":0},{"x":1062,"y":980,"score":35,"level":0},{"x":563,"y":981,"score":26,"level":0},{"x":701,"y":981,"score":26,"level":0},{"x":740,"y":981,"score":32,"level":0},{"x":854,"y":981,"score":29,"level":0},{"x":893,"y":981,"score":35,"level":0},{"x":1044,"y":981,"score":35,"level":0},{"x":1171,"y":981,"score":39,"level":0},{"x":1374,"y":981,"score":28,"level":0},{"x":1388,"y":981,"score":32,"level":0},{"x":1439,"y":981,"score":26,"level":0},{"x":430,"y":982,"score":37,"level":0},{"x":624,"y":982,"score":26,"level":0},{"x":731,"y":982,"score":28,"level":0},{"x":765,"y":982,"score":44,"level":0},{"x":915,"y":982,"score":32,"level":0},{"x":957,"y":982,"score":26,"level":0},{"x":1216,"y":982,"score":31,"level":0},{"x":481,"y":983,"score":26,"level":0},{"x":510,"y":983,"score":35,"level":0},{"x":726,"y":983,"score":47,"level":0},{"x":728,"y":983,"score":30,"level":0},{"x":936,"y":983,"score":27,"level":0},{"x":1019,"y":983,"score":29,"level":0},{"x":1027,"y":983,"score":262,"level":0},{"x":529,"y":984,"score":32,"level":0},{"x":681,"y":984,"score":30,"level":0},{"x":799,"y":984,"score":32,"level":0},{"x":801,"y":984,"score":33,"level":0},{"x":831,"y":984,"score":32,"level":0},{"x":863,"y":984,"score":27,"level":0},{"x":992,"y":984,"score":33,"level":0},{"x":1003,"y":984,"score":30,"level":0},{"x":1153,"y":984,"score":26,"level":0},{"x":1196,"y":984,"score":75,"level":0},{"x":1353,"y":984,"score":26,"level":0},{"x":421,"y":985,"score":26,"level":0},{"x":517,"y":985,"score":34,"level":0},{"x":523,"y":985,"score":40,"level":0},{"x":570,"y":985,"score":31,"level":0},{"x":583,"y":985,"score":37,"level":0},{"x":646,"y":985,"score":52,"level":0},{"x":1078,"y":985,"score":39,"level":0},{"x":1168,"y":985,"score":26,"level":0},{"x":1339,"y":985,"score":29,"level":0},{"x":481,"y":986,"score":42,"level":0},{"x":597,"y":986,"score":57,"level":0},{"x":685,"y":986,"score":26,"level":0},{"x":784,"y":986,"score":35,"level":0},{"x":874,"y":986,"score":35,"level":0},{"x":1034,"y":986,"score":128,"level":0},{"x":1148,"y":986,"score":34,"level":0},{"x":1163,"y":986,"score":68,"level":0},{"x":1188,"y":986,"score":36,"level":0},{"x":1438,"y":986,"score":28,"level":0},{"x":1467,"y":986,"score":30,"level":0},{"x":455,"y":987,"score":34,"level":0},{"x":458,"y":987,"score":39,"level":0},{"x":542,"y":987,"score":27,"level":0},{"x":555,"y":987,"score":54,"level":0},{"x":652,"y":987,"score":26,"level":0},{"x":752,"y":987,"score":128,"level":0},{"x":854,"y":987,"score":42,"level":0},{"x":898,"y":987,"score":42,"level":0},{"x":1040,"y":987,"score":27,"level":0},{"x":1043,"y":987,"score":56,"level":0},{"x":1317,"y":987,"score":54,"level":0},{"x":535,"y":988,"score":35,"level":0},{"x":722,"y":988,"score":35,"level":0},{"x":969,"y":988,"score":32,"level":0},{"x":1366,"y":988,"score":27,"level":0},{"x":1433,"y":988,"score":51,"level":0},{"x":427,"y":989,"score":39,"level":0},{"x":529,"y":989,"score":35,"level":0},{"x":542,"y":989,"score":26,"level":0},{"x":565,"y":989,"score":30,"level":0},{"x":747,"y":989,"score":26,"level":0},{"x":757,"y":989,"score":54,"level":0},{"x":770,"y":989,"score":27,"level":0},{"x":801,"y":989,"score":36,"level":0},{"x":814,"y":989,"score":28,"level":0},{"x":843,"y":989,"score":38,"level":0},{"x":1088,"y":989,"score":31,"level":0},{"x":1110,"y":989,"score":30,"level":0},{"x":1400,"y":989,"score":57,"level":0},{"x":402,"y":990,"score":36,"level":0},{"x":577,"y":990,"score":40,"level":0},{"x":807,"y":990,"score":27,"level":0},{"x":832,"y":990,"score":27,"level":0},{"x":890,"y":990,"score":37,"level":0},{"x":948,"y":990,"score":33,"level":0},{"x":1048,"y":990,"score":42,"level":0},{"x":1055,"y":990,"score":64,"level":0},{"x":1140,"y":990,"score":30,"level":0},{"x":1200,"y":990,"score":27,"level":0},{"x":1270,"y":990,"score":34,"level":0},{"x":1412,"y":990,"score":30,"level":0},{"x":1484,"y":990,"score":26,"level":0},{"x":399,"y":991,"score":41,"level":0},{"x":407,"y":991,"score":30,"level":0},{"x":438,"y":991,"score":64,"level":0},{"x":681,"y":991,"score":42,"level":0},{"x":717,"y":991,"score":32,"level":0},{"x":965,"y":991,"score":35,"level":0},{"x":994,"y":991,"score":44,"level":0},{"x":1031,"y":991,"score":83,"level":0},{"x":1072,"y":991,"score":48,"level":0},{"x":1239,"y":991,"score":34,"level":0},{"x":1313,"y":991,"score":57,"level":0},{"x":413,"y":992,"score":26,"level":0},{"x":492,"y":992,"score":54,"level":0},{"x":511,"y":992,"score":37,"level":0},{"x":535,"y":992,"score":31,"level":0},{"x":547,"y":992,"score":37,"level":0},{"x":592,"y":992,"score":44,"level":0},{"x":705,"y":992,"score":38,"level":0},{"x":710,"y":992,"score":28,"level":0},{"x":751,"y":992,"score":36,"level":0},{"x":773,"y":992,"score":44,"level":0},{"x":778,"y":992,"score":39,"level":0},{"x":873,"y":992,"score":38,"level":0},{"x":953,"y":992,"score":28,"level":0},{"x":982,"y":992,"score":33,"level":0},{"x":1000,"y":992,"score":42,"level":0},{"x":1002,"y":992,"score":31,"level":0},{"x":1164,"y":992,"score":32,"level":0},{"x":1233,"y":992,"score":29,"level":0},{"x":1287,"y":992,"score":62,"level":0},{"x":1329,"y":992,"score":49,"level":0},{"x":1356,"y":992,"score":28,"level":0},{"x":1412,"y":992,"score":37,"level":0}]}');
});
require.register("noflo-noflo-image/spec/fixtures/noText/flickr-8132786781-small.jpg.corners.json", function(exports, require, module){
module.exports = JSON.parse('{"corners":[{"x":377,"y":247,"score":36,"level":0},{"x":965,"y":248,"score":30,"level":0},{"x":1031,"y":248,"score":26,"level":0},{"x":869,"y":249,"score":44,"level":0},{"x":969,"y":250,"score":122,"level":0},{"x":1011,"y":251,"score":30,"level":0},{"x":1168,"y":251,"score":105,"level":0},{"x":1444,"y":251,"score":32,"level":0},{"x":372,"y":252,"score":46,"level":0},{"x":377,"y":252,"score":235,"level":0},{"x":388,"y":252,"score":33,"level":0},{"x":403,"y":252,"score":40,"level":0},{"x":435,"y":252,"score":83,"level":0},{"x":438,"y":252,"score":76,"level":0},{"x":452,"y":252,"score":127,"level":0},{"x":468,"y":252,"score":26,"level":0},{"x":476,"y":252,"score":90,"level":0},{"x":479,"y":252,"score":121,"level":0},{"x":491,"y":252,"score":114,"level":0},{"x":494,"y":252,"score":26,"level":0},{"x":507,"y":252,"score":149,"level":0},{"x":511,"y":252,"score":88,"level":0},{"x":513,"y":252,"score":95,"level":0},{"x":542,"y":252,"score":112,"level":0},{"x":559,"y":252,"score":176,"level":0},{"x":599,"y":252,"score":33,"level":0},{"x":606,"y":252,"score":88,"level":0},{"x":632,"y":252,"score":100,"level":0},{"x":659,"y":252,"score":104,"level":0},{"x":693,"y":252,"score":97,"level":0},{"x":704,"y":252,"score":81,"level":0},{"x":733,"y":252,"score":30,"level":0},{"x":735,"y":252,"score":36,"level":0},{"x":746,"y":252,"score":143,"level":0},{"x":756,"y":252,"score":61,"level":0},{"x":813,"y":252,"score":123,"level":0},{"x":826,"y":252,"score":137,"level":0},{"x":843,"y":252,"score":243,"level":0},{"x":877,"y":252,"score":197,"level":0},{"x":887,"y":252,"score":266,"level":0},{"x":908,"y":252,"score":51,"level":0},{"x":923,"y":252,"score":46,"level":0},{"x":932,"y":252,"score":76,"level":0},{"x":944,"y":252,"score":108,"level":0},{"x":953,"y":252,"score":28,"level":0},{"x":962,"y":252,"score":134,"level":0},{"x":989,"y":252,"score":79,"level":0},{"x":1017,"y":252,"score":141,"level":0},{"x":1026,"y":252,"score":80,"level":0},{"x":1051,"y":252,"score":229,"level":0},{"x":1063,"y":252,"score":274,"level":0},{"x":1075,"y":252,"score":113,"level":0},{"x":1086,"y":252,"score":124,"level":0},{"x":1093,"y":252,"score":38,"level":0},{"x":1096,"y":252,"score":34,"level":0},{"x":1113,"y":252,"score":172,"level":0},{"x":1127,"y":252,"score":54,"level":0},{"x":1130,"y":252,"score":26,"level":0},{"x":1141,"y":252,"score":145,"level":0},{"x":1152,"y":252,"score":138,"level":0},{"x":1163,"y":252,"score":223,"level":0},{"x":1173,"y":252,"score":159,"level":0},{"x":1194,"y":252,"score":35,"level":0},{"x":1206,"y":252,"score":136,"level":0},{"x":1219,"y":252,"score":68,"level":0},{"x":1228,"y":252,"score":73,"level":0},{"x":1236,"y":252,"score":74,"level":0},{"x":1255,"y":252,"score":51,"level":0},{"x":1265,"y":252,"score":132,"level":0},{"x":1275,"y":252,"score":231,"level":0},{"x":1286,"y":252,"score":29,"level":0},{"x":1293,"y":252,"score":55,"level":0},{"x":1323,"y":252,"score":94,"level":0},{"x":1334,"y":252,"score":105,"level":0},{"x":1344,"y":252,"score":70,"level":0},{"x":1352,"y":252,"score":60,"level":0},{"x":1360,"y":252,"score":28,"level":0},{"x":1366,"y":252,"score":69,"level":0},{"x":1368,"y":252,"score":145,"level":0},{"x":1391,"y":252,"score":30,"level":0},{"x":1395,"y":252,"score":27,"level":0},{"x":1397,"y":252,"score":56,"level":0},{"x":1411,"y":252,"score":112,"level":0},{"x":1424,"y":252,"score":52,"level":0},{"x":1438,"y":252,"score":34,"level":0},{"x":1453,"y":252,"score":148,"level":0},{"x":1474,"y":252,"score":80,"level":0},{"x":410,"y":253,"score":226,"level":0},{"x":415,"y":253,"score":48,"level":0},{"x":442,"y":253,"score":126,"level":0},{"x":618,"y":253,"score":69,"level":0},{"x":762,"y":253,"score":62,"level":0},{"x":1005,"y":253,"score":124,"level":0},{"x":1119,"y":253,"score":134,"level":0},{"x":1317,"y":253,"score":246,"level":0},{"x":1468,"y":253,"score":47,"level":0},{"x":1484,"y":253,"score":211,"level":0},{"x":501,"y":254,"score":253,"level":0},{"x":561,"y":254,"score":224,"level":0},{"x":900,"y":254,"score":252,"level":0},{"x":988,"y":254,"score":80,"level":0},{"x":1012,"y":254,"score":86,"level":0},{"x":1343,"y":254,"score":88,"level":0},{"x":1381,"y":254,"score":78,"level":0},{"x":1490,"y":254,"score":115,"level":0},{"x":377,"y":255,"score":142,"level":0},{"x":674,"y":255,"score":103,"level":0},{"x":868,"y":255,"score":213,"level":0},{"x":893,"y":255,"score":47,"level":0},{"x":1004,"y":255,"score":86,"level":0},{"x":1029,"y":255,"score":150,"level":0},{"x":1034,"y":255,"score":39,"level":0},{"x":1056,"y":255,"score":71,"level":0},{"x":1121,"y":255,"score":48,"level":0},{"x":1195,"y":255,"score":86,"level":0},{"x":1281,"y":255,"score":58,"level":0},{"x":1297,"y":255,"score":68,"level":0},{"x":1325,"y":255,"score":132,"level":0},{"x":1368,"y":255,"score":230,"level":0},{"x":495,"y":256,"score":44,"level":0},{"x":567,"y":256,"score":28,"level":0},{"x":679,"y":256,"score":58,"level":0},{"x":834,"y":256,"score":76,"level":0},{"x":926,"y":256,"score":30,"level":0},{"x":972,"y":256,"score":80,"level":0},{"x":994,"y":256,"score":90,"level":0},{"x":1233,"y":256,"score":39,"level":0},{"x":1337,"y":256,"score":28,"level":0},{"x":1450,"y":256,"score":141,"level":0},{"x":383,"y":257,"score":70,"level":0},{"x":486,"y":257,"score":66,"level":0},{"x":557,"y":257,"score":45,"level":0},{"x":595,"y":257,"score":44,"level":0},{"x":661,"y":257,"score":79,"level":0},{"x":718,"y":257,"score":29,"level":0},{"x":804,"y":257,"score":30,"level":0},{"x":875,"y":257,"score":149,"level":0},{"x":931,"y":257,"score":26,"level":0},{"x":953,"y":257,"score":72,"level":0},{"x":1207,"y":257,"score":97,"level":0},{"x":1281,"y":257,"score":49,"level":0},{"x":377,"y":258,"score":78,"level":0},{"x":513,"y":258,"score":41,"level":0},{"x":834,"y":258,"score":78,"level":0},{"x":936,"y":258,"score":49,"level":0},{"x":958,"y":258,"score":33,"level":0},{"x":999,"y":258,"score":36,"level":0},{"x":1116,"y":258,"score":54,"level":0},{"x":1148,"y":258,"score":87,"level":0},{"x":1174,"y":258,"score":72,"level":0},{"x":1267,"y":258,"score":155,"level":0},{"x":1395,"y":258,"score":53,"level":0},{"x":1421,"y":258,"score":48,"level":0},{"x":1435,"y":258,"score":56,"level":0},{"x":1441,"y":258,"score":30,"level":0},{"x":1458,"y":258,"score":100,"level":0},{"x":1465,"y":258,"score":89,"level":0},{"x":1468,"y":258,"score":116,"level":0},{"x":450,"y":259,"score":153,"level":0},{"x":816,"y":259,"score":34,"level":0},{"x":942,"y":259,"score":38,"level":0},{"x":963,"y":259,"score":88,"level":0},{"x":982,"y":259,"score":53,"level":0},{"x":1122,"y":259,"score":48,"level":0},{"x":1130,"y":259,"score":38,"level":0},{"x":1227,"y":259,"score":139,"level":0},{"x":1403,"y":259,"score":26,"level":0},{"x":417,"y":260,"score":30,"level":0},{"x":555,"y":260,"score":40,"level":0},{"x":619,"y":260,"score":26,"level":0},{"x":624,"y":260,"score":42,"level":0},{"x":715,"y":260,"score":45,"level":0},{"x":863,"y":260,"score":36,"level":0},{"x":888,"y":260,"score":30,"level":0},{"x":912,"y":260,"score":81,"level":0},{"x":917,"y":260,"score":115,"level":0},{"x":925,"y":260,"score":109,"level":0},{"x":1016,"y":260,"score":49,"level":0},{"x":1051,"y":260,"score":116,"level":0},{"x":1143,"y":260,"score":42,"level":0},{"x":1216,"y":260,"score":70,"level":0},{"x":1222,"y":260,"score":94,"level":0},{"x":1234,"y":260,"score":52,"level":0},{"x":1243,"y":260,"score":39,"level":0},{"x":1246,"y":260,"score":36,"level":0},{"x":1270,"y":260,"score":108,"level":0},{"x":1360,"y":260,"score":123,"level":0},{"x":444,"y":261,"score":42,"level":0},{"x":470,"y":261,"score":83,"level":0},{"x":590,"y":261,"score":30,"level":0},{"x":642,"y":261,"score":37,"level":0},{"x":721,"y":261,"score":56,"level":0},{"x":991,"y":261,"score":45,"level":0},{"x":1046,"y":261,"score":124,"level":0},{"x":1176,"y":261,"score":44,"level":0},{"x":1192,"y":261,"score":50,"level":0},{"x":1231,"y":261,"score":89,"level":0},{"x":1251,"y":261,"score":70,"level":0},{"x":1258,"y":261,"score":46,"level":0},{"x":1278,"y":261,"score":196,"level":0},{"x":1321,"y":261,"score":118,"level":0},{"x":1490,"y":261,"score":61,"level":0},{"x":412,"y":262,"score":52,"level":0},{"x":456,"y":262,"score":53,"level":0},{"x":698,"y":262,"score":46,"level":0},{"x":763,"y":262,"score":36,"level":0},{"x":823,"y":262,"score":54,"level":0},{"x":907,"y":262,"score":69,"level":0},{"x":947,"y":262,"score":66,"level":0},{"x":1061,"y":262,"score":64,"level":0},{"x":1080,"y":262,"score":77,"level":0},{"x":1094,"y":262,"score":36,"level":0},{"x":1153,"y":262,"score":58,"level":0},{"x":1161,"y":262,"score":154,"level":0},{"x":1169,"y":262,"score":84,"level":0},{"x":1237,"y":262,"score":46,"level":0},{"x":1312,"y":262,"score":34,"level":0},{"x":1345,"y":262,"score":79,"level":0},{"x":1391,"y":262,"score":28,"level":0},{"x":1414,"y":262,"score":27,"level":0},{"x":1472,"y":262,"score":64,"level":0},{"x":383,"y":263,"score":54,"level":0},{"x":463,"y":263,"score":46,"level":0},{"x":525,"y":263,"score":31,"level":0},{"x":636,"y":263,"score":68,"level":0},{"x":671,"y":263,"score":30,"level":0},{"x":740,"y":263,"score":33,"level":0},{"x":840,"y":263,"score":144,"level":0},{"x":972,"y":263,"score":73,"level":0},{"x":1012,"y":263,"score":51,"level":0},{"x":1076,"y":263,"score":51,"level":0},{"x":1085,"y":263,"score":85,"level":0},{"x":1114,"y":263,"score":48,"level":0},{"x":1174,"y":263,"score":48,"level":0},{"x":1426,"y":263,"score":44,"level":0},{"x":1443,"y":263,"score":29,"level":0},{"x":1455,"y":263,"score":31,"level":0},{"x":1490,"y":263,"score":64,"level":0},{"x":435,"y":264,"score":44,"level":0},{"x":511,"y":264,"score":121,"level":0},{"x":567,"y":264,"score":50,"level":0},{"x":611,"y":264,"score":33,"level":0},{"x":729,"y":264,"score":82,"level":0},{"x":751,"y":264,"score":36,"level":0},{"x":778,"y":264,"score":49,"level":0},{"x":811,"y":264,"score":26,"level":0},{"x":829,"y":264,"score":140,"level":0},{"x":845,"y":264,"score":56,"level":0},{"x":915,"y":264,"score":33,"level":0},{"x":1030,"y":264,"score":105,"level":0},{"x":1047,"y":264,"score":150,"level":0},{"x":1139,"y":264,"score":36,"level":0},{"x":1219,"y":264,"score":32,"level":0},{"x":1273,"y":264,"score":44,"level":0},{"x":1333,"y":264,"score":72,"level":0},{"x":1396,"y":264,"score":26,"level":0},{"x":1465,"y":264,"score":51,"level":0},{"x":412,"y":265,"score":62,"level":0},{"x":443,"y":265,"score":67,"level":0},{"x":453,"y":265,"score":110,"level":0},{"x":530,"y":265,"score":32,"level":0},{"x":562,"y":265,"score":109,"level":0},{"x":578,"y":265,"score":28,"level":0},{"x":717,"y":265,"score":28,"level":0},{"x":931,"y":265,"score":41,"level":0},{"x":975,"y":265,"score":27,"level":0},{"x":1077,"y":265,"score":52,"level":0},{"x":1095,"y":265,"score":54,"level":0},{"x":1107,"y":265,"score":37,"level":0},{"x":1120,"y":265,"score":86,"level":0},{"x":1127,"y":265,"score":39,"level":0},{"x":1132,"y":265,"score":37,"level":0},{"x":1144,"y":265,"score":37,"level":0},{"x":1149,"y":265,"score":26,"level":0},{"x":1200,"y":265,"score":72,"level":0},{"x":1210,"y":265,"score":52,"level":0},{"x":1223,"y":265,"score":28,"level":0},{"x":1246,"y":265,"score":78,"level":0},{"x":1263,"y":265,"score":73,"level":0},{"x":1381,"y":265,"score":44,"level":0},{"x":1407,"y":265,"score":74,"level":0},{"x":1432,"y":265,"score":41,"level":0},{"x":387,"y":266,"score":101,"level":0},{"x":433,"y":266,"score":52,"level":0},{"x":515,"y":266,"score":33,"level":0},{"x":520,"y":266,"score":26,"level":0},{"x":537,"y":266,"score":29,"level":0},{"x":571,"y":266,"score":43,"level":0},{"x":601,"y":266,"score":70,"level":0},{"x":669,"y":266,"score":27,"level":0},{"x":679,"y":266,"score":30,"level":0},{"x":685,"y":266,"score":58,"level":0},{"x":726,"y":266,"score":50,"level":0},{"x":801,"y":266,"score":48,"level":0},{"x":888,"y":266,"score":60,"level":0},{"x":903,"y":266,"score":58,"level":0},{"x":1001,"y":266,"score":118,"level":0},{"x":1014,"y":266,"score":32,"level":0},{"x":1019,"y":266,"score":49,"level":0},{"x":1089,"y":266,"score":28,"level":0},{"x":1191,"y":266,"score":74,"level":0},{"x":1228,"y":266,"score":110,"level":0},{"x":1365,"y":266,"score":132,"level":0},{"x":1421,"y":266,"score":32,"level":0},{"x":448,"y":267,"score":32,"level":0},{"x":472,"y":267,"score":42,"level":0},{"x":490,"y":267,"score":110,"level":0},{"x":495,"y":267,"score":85,"level":0},{"x":553,"y":267,"score":33,"level":0},{"x":690,"y":267,"score":34,"level":0},{"x":693,"y":267,"score":34,"level":0},{"x":794,"y":267,"score":26,"level":0},{"x":835,"y":267,"score":69,"level":0},{"x":883,"y":267,"score":40,"level":0},{"x":953,"y":267,"score":29,"level":0},{"x":1131,"y":267,"score":28,"level":0},{"x":1149,"y":267,"score":32,"level":0},{"x":1234,"y":267,"score":34,"level":0},{"x":377,"y":268,"score":48,"level":0},{"x":428,"y":268,"score":26,"level":0},{"x":484,"y":268,"score":58,"level":0},{"x":519,"y":268,"score":57,"level":0},{"x":555,"y":268,"score":41,"level":0},{"x":873,"y":268,"score":29,"level":0},{"x":1085,"y":268,"score":73,"level":0},{"x":1158,"y":268,"score":81,"level":0},{"x":1475,"y":268,"score":34,"level":0},{"x":521,"y":269,"score":40,"level":0},{"x":527,"y":269,"score":120,"level":0},{"x":536,"y":269,"score":70,"level":0},{"x":542,"y":269,"score":28,"level":0},{"x":568,"y":269,"score":27,"level":0},{"x":638,"y":269,"score":48,"level":0},{"x":645,"y":269,"score":52,"level":0},{"x":652,"y":269,"score":53,"level":0},{"x":701,"y":269,"score":108,"level":0},{"x":714,"y":269,"score":34,"level":0},{"x":878,"y":269,"score":32,"level":0},{"x":884,"y":269,"score":28,"level":0},{"x":897,"y":269,"score":89,"level":0},{"x":957,"y":269,"score":28,"level":0},{"x":1059,"y":269,"score":36,"level":0},{"x":1125,"y":269,"score":56,"level":0},{"x":1191,"y":269,"score":30,"level":0},{"x":1217,"y":269,"score":89,"level":0},{"x":1234,"y":269,"score":28,"level":0},{"x":1241,"y":269,"score":34,"level":0},{"x":1317,"y":269,"score":110,"level":0},{"x":1449,"y":269,"score":97,"level":0},{"x":688,"y":270,"score":26,"level":0},{"x":818,"y":270,"score":106,"level":0},{"x":841,"y":270,"score":99,"level":0},{"x":866,"y":270,"score":53,"level":0},{"x":996,"y":270,"score":78,"level":0},{"x":1016,"y":270,"score":97,"level":0},{"x":1065,"y":270,"score":78,"level":0},{"x":1109,"y":270,"score":42,"level":0},{"x":1118,"y":270,"score":74,"level":0},{"x":1275,"y":270,"score":239,"level":0},{"x":1411,"y":270,"score":33,"level":0},{"x":1429,"y":270,"score":58,"level":0},{"x":1435,"y":270,"score":107,"level":0},{"x":1441,"y":270,"score":40,"level":0},{"x":386,"y":271,"score":43,"level":0},{"x":400,"y":271,"score":40,"level":0},{"x":450,"y":271,"score":52,"level":0},{"x":612,"y":271,"score":85,"level":0},{"x":735,"y":271,"score":104,"level":0},{"x":829,"y":271,"score":138,"level":0},{"x":962,"y":271,"score":37,"level":0},{"x":974,"y":271,"score":62,"level":0},{"x":1005,"y":271,"score":91,"level":0},{"x":1096,"y":271,"score":104,"level":0},{"x":1152,"y":271,"score":100,"level":0},{"x":1209,"y":271,"score":176,"level":0},{"x":1224,"y":271,"score":67,"level":0},{"x":1280,"y":271,"score":44,"level":0},{"x":1332,"y":271,"score":112,"level":0},{"x":1466,"y":271,"score":57,"level":0},{"x":1488,"y":271,"score":103,"level":0},{"x":475,"y":272,"score":29,"level":0},{"x":563,"y":272,"score":92,"level":0},{"x":661,"y":272,"score":75,"level":0},{"x":692,"y":272,"score":78,"level":0},{"x":759,"y":272,"score":31,"level":0},{"x":988,"y":272,"score":176,"level":0},{"x":1059,"y":272,"score":48,"level":0},{"x":1078,"y":272,"score":114,"level":0},{"x":1091,"y":272,"score":51,"level":0},{"x":1102,"y":272,"score":144,"level":0},{"x":1146,"y":272,"score":34,"level":0},{"x":1154,"y":272,"score":31,"level":0},{"x":1192,"y":272,"score":50,"level":0},{"x":1194,"y":272,"score":37,"level":0},{"x":1229,"y":272,"score":43,"level":0},{"x":1256,"y":272,"score":45,"level":0},{"x":1321,"y":272,"score":91,"level":0},{"x":1327,"y":272,"score":58,"level":0},{"x":1337,"y":272,"score":26,"level":0},{"x":1365,"y":272,"score":161,"level":0},{"x":1443,"y":272,"score":70,"level":0},{"x":462,"y":273,"score":123,"level":0},{"x":468,"y":273,"score":44,"level":0},{"x":484,"y":273,"score":55,"level":0},{"x":611,"y":273,"score":72,"level":0},{"x":674,"y":273,"score":49,"level":0},{"x":685,"y":273,"score":32,"level":0},{"x":710,"y":273,"score":81,"level":0},{"x":730,"y":273,"score":89,"level":0},{"x":834,"y":273,"score":85,"level":0},{"x":922,"y":273,"score":47,"level":0},{"x":927,"y":273,"score":48,"level":0},{"x":937,"y":273,"score":66,"level":0},{"x":1028,"y":273,"score":100,"level":0},{"x":1073,"y":273,"score":136,"level":0},{"x":1083,"y":273,"score":212,"level":0},{"x":1111,"y":273,"score":71,"level":0},{"x":1162,"y":273,"score":86,"level":0},{"x":1389,"y":273,"score":76,"level":0},{"x":1403,"y":273,"score":195,"level":0},{"x":1409,"y":273,"score":55,"level":0},{"x":546,"y":274,"score":27,"level":0},{"x":554,"y":274,"score":57,"level":0},{"x":640,"y":274,"score":32,"level":0},{"x":697,"y":274,"score":62,"level":0},{"x":726,"y":274,"score":51,"level":0},{"x":732,"y":274,"score":53,"level":0},{"x":740,"y":274,"score":59,"level":0},{"x":768,"y":274,"score":56,"level":0},{"x":801,"y":274,"score":36,"level":0},{"x":804,"y":274,"score":50,"level":0},{"x":889,"y":274,"score":53,"level":0},{"x":944,"y":274,"score":72,"level":0},{"x":960,"y":274,"score":31,"level":0},{"x":1000,"y":274,"score":116,"level":0},{"x":1053,"y":274,"score":71,"level":0},{"x":1089,"y":274,"score":28,"level":0},{"x":1097,"y":274,"score":54,"level":0},{"x":1122,"y":274,"score":50,"level":0},{"x":1125,"y":274,"score":66,"level":0},{"x":1134,"y":274,"score":108,"level":0},{"x":1149,"y":274,"score":46,"level":0},{"x":1241,"y":274,"score":40,"level":0},{"x":1247,"y":274,"score":72,"level":0},{"x":1456,"y":274,"score":58,"level":0},{"x":436,"y":275,"score":60,"level":0},{"x":527,"y":275,"score":32,"level":0},{"x":619,"y":275,"score":44,"level":0},{"x":625,"y":275,"score":108,"level":0},{"x":671,"y":275,"score":33,"level":0},{"x":689,"y":275,"score":46,"level":0},{"x":734,"y":275,"score":36,"level":0},{"x":886,"y":275,"score":152,"level":0},{"x":894,"y":275,"score":26,"level":0},{"x":901,"y":275,"score":89,"level":0},{"x":931,"y":275,"score":33,"level":0},{"x":965,"y":275,"score":29,"level":0},{"x":991,"y":275,"score":37,"level":0},{"x":1041,"y":275,"score":32,"level":0},{"x":1046,"y":275,"score":81,"level":0},{"x":1058,"y":275,"score":44,"level":0},{"x":1062,"y":275,"score":62,"level":0},{"x":1179,"y":275,"score":49,"level":0},{"x":1234,"y":275,"score":94,"level":0},{"x":1303,"y":275,"score":34,"level":0},{"x":1312,"y":275,"score":48,"level":0},{"x":1358,"y":275,"score":94,"level":0},{"x":1379,"y":275,"score":27,"level":0},{"x":1381,"y":275,"score":47,"level":0},{"x":1408,"y":275,"score":58,"level":0},{"x":1425,"y":275,"score":102,"level":0},{"x":1448,"y":275,"score":36,"level":0},{"x":1469,"y":275,"score":84,"level":0},{"x":1474,"y":275,"score":46,"level":0},{"x":386,"y":276,"score":50,"level":0},{"x":400,"y":276,"score":95,"level":0},{"x":414,"y":276,"score":66,"level":0},{"x":507,"y":276,"score":135,"level":0},{"x":680,"y":276,"score":78,"level":0},{"x":751,"y":276,"score":120,"level":0},{"x":774,"y":276,"score":34,"level":0},{"x":831,"y":276,"score":126,"level":0},{"x":1168,"y":276,"score":32,"level":0},{"x":1175,"y":276,"score":56,"level":0},{"x":1185,"y":276,"score":37,"level":0},{"x":1191,"y":276,"score":30,"level":0},{"x":1199,"y":276,"score":74,"level":0},{"x":1275,"y":276,"score":43,"level":0},{"x":1277,"y":276,"score":130,"level":0},{"x":1300,"y":276,"score":36,"level":0},{"x":1317,"y":276,"score":42,"level":0},{"x":1366,"y":276,"score":185,"level":0},{"x":1465,"y":276,"score":141,"level":0},{"x":378,"y":277,"score":170,"level":0},{"x":442,"y":277,"score":36,"level":0},{"x":553,"y":277,"score":30,"level":0},{"x":651,"y":277,"score":120,"level":0},{"x":829,"y":277,"score":160,"level":0},{"x":873,"y":277,"score":41,"level":0},{"x":879,"y":277,"score":46,"level":0},{"x":1065,"y":277,"score":54,"level":0},{"x":1102,"y":277,"score":61,"level":0},{"x":1234,"y":277,"score":39,"level":0},{"x":1269,"y":277,"score":33,"level":0},{"x":1336,"y":277,"score":67,"level":0},{"x":1490,"y":277,"score":54,"level":0},{"x":395,"y":278,"score":40,"level":0},{"x":406,"y":278,"score":83,"level":0},{"x":607,"y":278,"score":110,"level":0},{"x":658,"y":278,"score":88,"level":0},{"x":673,"y":278,"score":31,"level":0},{"x":745,"y":278,"score":105,"level":0},{"x":821,"y":278,"score":74,"level":0},{"x":836,"y":278,"score":30,"level":0},{"x":911,"y":278,"score":66,"level":0},{"x":926,"y":278,"score":58,"level":0},{"x":977,"y":278,"score":72,"level":0},{"x":996,"y":278,"score":54,"level":0},{"x":1017,"y":278,"score":30,"level":0},{"x":1073,"y":278,"score":107,"level":0},{"x":1114,"y":278,"score":89,"level":0},{"x":1135,"y":278,"score":74,"level":0},{"x":1142,"y":278,"score":109,"level":0},{"x":1160,"y":278,"score":66,"level":0},{"x":1221,"y":278,"score":116,"level":0},{"x":1229,"y":278,"score":113,"level":0},{"x":1350,"y":278,"score":73,"level":0},{"x":1363,"y":278,"score":37,"level":0},{"x":1370,"y":278,"score":57,"level":0},{"x":1391,"y":278,"score":67,"level":0},{"x":435,"y":279,"score":26,"level":0},{"x":454,"y":279,"score":30,"level":0},{"x":513,"y":279,"score":26,"level":0},{"x":519,"y":279,"score":36,"level":0},{"x":564,"y":279,"score":26,"level":0},{"x":597,"y":279,"score":64,"level":0},{"x":695,"y":279,"score":55,"level":0},{"x":709,"y":279,"score":82,"level":0},{"x":763,"y":279,"score":107,"level":0},{"x":804,"y":279,"score":35,"level":0},{"x":814,"y":279,"score":60,"level":0},{"x":816,"y":279,"score":58,"level":0},{"x":941,"y":279,"score":35,"level":0},{"x":959,"y":279,"score":54,"level":0},{"x":1045,"y":279,"score":111,"level":0},{"x":1057,"y":279,"score":107,"level":0},{"x":1080,"y":279,"score":51,"level":0},{"x":1153,"y":279,"score":95,"level":0},{"x":1183,"y":279,"score":70,"level":0},{"x":1238,"y":279,"score":54,"level":0},{"x":1243,"y":279,"score":41,"level":0},{"x":1251,"y":279,"score":70,"level":0},{"x":1253,"y":279,"score":56,"level":0},{"x":1260,"y":279,"score":37,"level":0},{"x":1355,"y":279,"score":41,"level":0},{"x":1384,"y":279,"score":26,"level":0},{"x":1396,"y":279,"score":40,"level":0},{"x":612,"y":280,"score":75,"level":0},{"x":632,"y":280,"score":80,"level":0},{"x":658,"y":280,"score":59,"level":0},{"x":736,"y":280,"score":55,"level":0},{"x":771,"y":280,"score":41,"level":0},{"x":807,"y":280,"score":30,"level":0},{"x":926,"y":280,"score":43,"level":0},{"x":968,"y":280,"score":40,"level":0},{"x":1025,"y":280,"score":28,"level":0},{"x":1030,"y":280,"score":65,"level":0},{"x":1062,"y":280,"score":32,"level":0},{"x":1108,"y":280,"score":35,"level":0},{"x":1112,"y":280,"score":89,"level":0},{"x":1121,"y":280,"score":66,"level":0},{"x":1174,"y":280,"score":26,"level":0},{"x":1212,"y":280,"score":27,"level":0},{"x":1379,"y":280,"score":74,"level":0},{"x":1452,"y":280,"score":35,"level":0},{"x":1483,"y":280,"score":32,"level":0},{"x":397,"y":281,"score":56,"level":0},{"x":444,"y":281,"score":113,"level":0},{"x":449,"y":281,"score":77,"level":0},{"x":475,"y":281,"score":94,"level":0},{"x":526,"y":281,"score":56,"level":0},{"x":537,"y":281,"score":59,"level":0},{"x":548,"y":281,"score":61,"level":0},{"x":616,"y":281,"score":31,"level":0},{"x":621,"y":281,"score":49,"level":0},{"x":643,"y":281,"score":56,"level":0},{"x":698,"y":281,"score":43,"level":0},{"x":756,"y":281,"score":26,"level":0},{"x":931,"y":281,"score":95,"level":0},{"x":937,"y":281,"score":73,"level":0},{"x":960,"y":281,"score":35,"level":0},{"x":963,"y":281,"score":41,"level":0},{"x":991,"y":281,"score":38,"level":0},{"x":1045,"y":281,"score":61,"level":0},{"x":1169,"y":281,"score":41,"level":0},{"x":1192,"y":281,"score":111,"level":0},{"x":1217,"y":281,"score":50,"level":0},{"x":1226,"y":281,"score":150,"level":0},{"x":1239,"y":281,"score":95,"level":0},{"x":1244,"y":281,"score":38,"level":0},{"x":1258,"y":281,"score":39,"level":0},{"x":1283,"y":281,"score":100,"level":0},{"x":1374,"y":281,"score":29,"level":0},{"x":383,"y":282,"score":39,"level":0},{"x":455,"y":282,"score":98,"level":0},{"x":745,"y":282,"score":32,"level":0},{"x":788,"y":282,"score":90,"level":0},{"x":875,"y":282,"score":44,"level":0},{"x":885,"y":282,"score":72,"level":0},{"x":945,"y":282,"score":38,"level":0},{"x":1075,"y":282,"score":114,"level":0},{"x":1107,"y":282,"score":47,"level":0},{"x":1253,"y":282,"score":91,"level":0},{"x":1272,"y":282,"score":97,"level":0},{"x":1316,"y":282,"score":50,"level":0},{"x":1456,"y":282,"score":46,"level":0},{"x":1471,"y":282,"score":37,"level":0},{"x":1490,"y":282,"score":51,"level":0},{"x":403,"y":283,"score":78,"level":0},{"x":494,"y":283,"score":63,"level":0},{"x":637,"y":283,"score":87,"level":0},{"x":715,"y":283,"score":52,"level":0},{"x":720,"y":283,"score":46,"level":0},{"x":730,"y":283,"score":49,"level":0},{"x":776,"y":283,"score":100,"level":0},{"x":778,"y":283,"score":50,"level":0},{"x":826,"y":283,"score":85,"level":0},{"x":880,"y":283,"score":57,"level":0},{"x":919,"y":283,"score":28,"level":0},{"x":975,"y":283,"score":45,"level":0},{"x":1014,"y":283,"score":30,"level":0},{"x":1092,"y":283,"score":82,"level":0},{"x":1099,"y":283,"score":38,"level":0},{"x":1142,"y":283,"score":28,"level":0},{"x":1228,"y":283,"score":147,"level":0},{"x":1277,"y":283,"score":27,"level":0},{"x":1327,"y":283,"score":99,"level":0},{"x":1351,"y":283,"score":98,"level":0},{"x":1441,"y":283,"score":91,"level":0},{"x":1466,"y":283,"score":202,"level":0},{"x":607,"y":284,"score":50,"level":0},{"x":645,"y":284,"score":103,"level":0},{"x":652,"y":284,"score":60,"level":0},{"x":672,"y":284,"score":61,"level":0},{"x":702,"y":284,"score":46,"level":0},{"x":761,"y":284,"score":37,"level":0},{"x":864,"y":284,"score":103,"level":0},{"x":952,"y":284,"score":59,"level":0},{"x":954,"y":284,"score":51,"level":0},{"x":966,"y":284,"score":33,"level":0},{"x":1118,"y":284,"score":29,"level":0},{"x":1164,"y":284,"score":88,"level":0},{"x":1234,"y":284,"score":32,"level":0},{"x":1333,"y":284,"score":112,"level":0},{"x":1346,"y":284,"score":60,"level":0},{"x":1477,"y":284,"score":67,"level":0},{"x":477,"y":285,"score":67,"level":0},{"x":630,"y":285,"score":77,"level":0},{"x":650,"y":285,"score":61,"level":0},{"x":707,"y":285,"score":52,"level":0},{"x":715,"y":285,"score":53,"level":0},{"x":814,"y":285,"score":42,"level":0},{"x":889,"y":285,"score":58,"level":0},{"x":986,"y":285,"score":58,"level":0},{"x":1044,"y":285,"score":41,"level":0},{"x":1084,"y":285,"score":80,"level":0},{"x":1179,"y":285,"score":159,"level":0},{"x":1236,"y":285,"score":44,"level":0},{"x":1238,"y":285,"score":53,"level":0},{"x":1247,"y":285,"score":56,"level":0},{"x":1272,"y":285,"score":32,"level":0},{"x":1277,"y":285,"score":41,"level":0},{"x":1339,"y":285,"score":144,"level":0},{"x":1364,"y":285,"score":133,"level":0},{"x":1389,"y":285,"score":42,"level":0},{"x":415,"y":286,"score":218,"level":0},{"x":514,"y":286,"score":96,"level":0},{"x":537,"y":286,"score":82,"level":0},{"x":551,"y":286,"score":82,"level":0},{"x":556,"y":286,"score":62,"level":0},{"x":610,"y":286,"score":68,"level":0},{"x":668,"y":286,"score":38,"level":0},{"x":683,"y":286,"score":35,"level":0},{"x":739,"y":286,"score":45,"level":0},{"x":802,"y":286,"score":42,"level":0},{"x":915,"y":286,"score":52,"level":0},{"x":918,"y":286,"score":40,"level":0},{"x":924,"y":286,"score":37,"level":0},{"x":930,"y":286,"score":43,"level":0},{"x":959,"y":286,"score":36,"level":0},{"x":964,"y":286,"score":56,"level":0},{"x":969,"y":286,"score":66,"level":0},{"x":1023,"y":286,"score":119,"level":0},{"x":1029,"y":286,"score":143,"level":0},{"x":1146,"y":286,"score":72,"level":0},{"x":1358,"y":286,"score":147,"level":0},{"x":1398,"y":286,"score":28,"level":0},{"x":377,"y":287,"score":123,"level":0},{"x":384,"y":287,"score":29,"level":0},{"x":462,"y":287,"score":57,"level":0},{"x":470,"y":287,"score":46,"level":0},{"x":524,"y":287,"score":46,"level":0},{"x":543,"y":287,"score":26,"level":0},{"x":558,"y":287,"score":31,"level":0},{"x":597,"y":287,"score":36,"level":0},{"x":726,"y":287,"score":29,"level":0},{"x":791,"y":287,"score":36,"level":0},{"x":830,"y":287,"score":50,"level":0},{"x":910,"y":287,"score":54,"level":0},{"x":1015,"y":287,"score":49,"level":0},{"x":1117,"y":287,"score":28,"level":0},{"x":1241,"y":287,"score":50,"level":0},{"x":1258,"y":287,"score":40,"level":0},{"x":1263,"y":287,"score":76,"level":0},{"x":1439,"y":287,"score":53,"level":0},{"x":440,"y":288,"score":145,"level":0},{"x":451,"y":288,"score":42,"level":0},{"x":636,"y":288,"score":82,"level":0},{"x":663,"y":288,"score":50,"level":0},{"x":689,"y":288,"score":53,"level":0},{"x":696,"y":288,"score":65,"level":0},{"x":749,"y":288,"score":86,"level":0},{"x":764,"y":288,"score":42,"level":0},{"x":795,"y":288,"score":47,"level":0},{"x":1077,"y":288,"score":67,"level":0},{"x":1148,"y":288,"score":36,"level":0},{"x":1154,"y":288,"score":83,"level":0},{"x":1175,"y":288,"score":40,"level":0},{"x":1253,"y":288,"score":82,"level":0},{"x":1473,"y":288,"score":29,"level":0},{"x":446,"y":289,"score":108,"level":0},{"x":507,"y":289,"score":28,"level":0},{"x":538,"y":289,"score":76,"level":0},{"x":609,"y":289,"score":29,"level":0},{"x":658,"y":289,"score":52,"level":0},{"x":770,"y":289,"score":29,"level":0},{"x":785,"y":289,"score":28,"level":0},{"x":958,"y":289,"score":34,"level":0},{"x":975,"y":289,"score":111,"level":0},{"x":1017,"y":289,"score":68,"level":0},{"x":1056,"y":289,"score":98,"level":0},{"x":1062,"y":289,"score":51,"level":0},{"x":1093,"y":289,"score":30,"level":0},{"x":1095,"y":289,"score":74,"level":0},{"x":1109,"y":289,"score":30,"level":0},{"x":1169,"y":289,"score":77,"level":0},{"x":1187,"y":289,"score":56,"level":0},{"x":1217,"y":289,"score":66,"level":0},{"x":1272,"y":289,"score":69,"level":0},{"x":1335,"y":289,"score":158,"level":0},{"x":1349,"y":289,"score":52,"level":0},{"x":1381,"y":289,"score":42,"level":0},{"x":1430,"y":289,"score":76,"level":0},{"x":1437,"y":289,"score":58,"level":0},{"x":1445,"y":289,"score":34,"level":0},{"x":393,"y":290,"score":46,"level":0},{"x":404,"y":290,"score":138,"level":0},{"x":457,"y":290,"score":85,"level":0},{"x":607,"y":290,"score":76,"level":0},{"x":622,"y":290,"score":103,"level":0},{"x":631,"y":290,"score":30,"level":0},{"x":715,"y":290,"score":42,"level":0},{"x":822,"y":290,"score":32,"level":0},{"x":995,"y":290,"score":28,"level":0},{"x":1001,"y":290,"score":100,"level":0},{"x":1163,"y":290,"score":42,"level":0},{"x":1184,"y":290,"score":39,"level":0},{"x":1236,"y":290,"score":129,"level":0},{"x":1246,"y":290,"score":55,"level":0},{"x":1453,"y":290,"score":44,"level":0},{"x":397,"y":291,"score":115,"level":0},{"x":489,"y":291,"score":117,"level":0},{"x":495,"y":291,"score":64,"level":0},{"x":544,"y":291,"score":32,"level":0},{"x":668,"y":291,"score":82,"level":0},{"x":692,"y":291,"score":36,"level":0},{"x":704,"y":291,"score":36,"level":0},{"x":802,"y":291,"score":36,"level":0},{"x":925,"y":291,"score":62,"level":0},{"x":930,"y":291,"score":76,"level":0},{"x":951,"y":291,"score":58,"level":0},{"x":985,"y":291,"score":130,"level":0},{"x":1056,"y":291,"score":75,"level":0},{"x":1137,"y":291,"score":49,"level":0},{"x":1143,"y":291,"score":80,"level":0},{"x":1150,"y":291,"score":39,"level":0},{"x":1195,"y":291,"score":52,"level":0},{"x":1214,"y":291,"score":42,"level":0},{"x":1226,"y":291,"score":42,"level":0},{"x":1316,"y":291,"score":78,"level":0},{"x":1485,"y":291,"score":89,"level":0},{"x":408,"y":292,"score":32,"level":0},{"x":417,"y":292,"score":117,"level":0},{"x":514,"y":292,"score":96,"level":0},{"x":538,"y":292,"score":28,"level":0},{"x":602,"y":292,"score":100,"level":0},{"x":617,"y":292,"score":42,"level":0},{"x":680,"y":292,"score":91,"level":0},{"x":747,"y":292,"score":31,"level":0},{"x":831,"y":292,"score":99,"level":0},{"x":836,"y":292,"score":38,"level":0},{"x":877,"y":292,"score":100,"level":0},{"x":947,"y":292,"score":45,"level":0},{"x":995,"y":292,"score":73,"level":0},{"x":1050,"y":292,"score":80,"level":0},{"x":1096,"y":292,"score":70,"level":0},{"x":1155,"y":292,"score":42,"level":0},{"x":1223,"y":292,"score":52,"level":0},{"x":1271,"y":292,"score":52,"level":0},{"x":1337,"y":292,"score":83,"level":0},{"x":1394,"y":292,"score":29,"level":0},{"x":549,"y":293,"score":32,"level":0},{"x":556,"y":293,"score":59,"level":0},{"x":566,"y":293,"score":35,"level":0},{"x":612,"y":293,"score":117,"level":0},{"x":695,"y":293,"score":37,"level":0},{"x":780,"y":293,"score":42,"level":0},{"x":809,"y":293,"score":75,"level":0},{"x":865,"y":293,"score":117,"level":0},{"x":922,"y":293,"score":44,"level":0},{"x":989,"y":293,"score":38,"level":0},{"x":1015,"y":293,"score":127,"level":0},{"x":1022,"y":293,"score":32,"level":0},{"x":1079,"y":293,"score":50,"level":0},{"x":1091,"y":293,"score":58,"level":0},{"x":1116,"y":293,"score":84,"level":0},{"x":1122,"y":293,"score":64,"level":0},{"x":1158,"y":293,"score":30,"level":0},{"x":1165,"y":293,"score":116,"level":0},{"x":1265,"y":293,"score":42,"level":0},{"x":1329,"y":293,"score":176,"level":0},{"x":502,"y":294,"score":34,"level":0},{"x":686,"y":294,"score":80,"level":0},{"x":714,"y":294,"score":27,"level":0},{"x":764,"y":294,"score":149,"level":0},{"x":825,"y":294,"score":34,"level":0},{"x":879,"y":294,"score":33,"level":0},{"x":907,"y":294,"score":42,"level":0},{"x":912,"y":294,"score":52,"level":0},{"x":956,"y":294,"score":56,"level":0},{"x":980,"y":294,"score":33,"level":0},{"x":1031,"y":294,"score":37,"level":0},{"x":1043,"y":294,"score":112,"level":0},{"x":1127,"y":294,"score":58,"level":0},{"x":1150,"y":294,"score":36,"level":0},{"x":1240,"y":294,"score":42,"level":0},{"x":1259,"y":294,"score":85,"level":0},{"x":1277,"y":294,"score":99,"level":0},{"x":1335,"y":294,"score":87,"level":0},{"x":1353,"y":294,"score":61,"level":0},{"x":1386,"y":294,"score":29,"level":0},{"x":1476,"y":294,"score":49,"level":0},{"x":1489,"y":294,"score":36,"level":0},{"x":419,"y":295,"score":67,"level":0},{"x":464,"y":295,"score":116,"level":0},{"x":652,"y":295,"score":89,"level":0},{"x":759,"y":295,"score":53,"level":0},{"x":816,"y":295,"score":60,"level":0},{"x":871,"y":295,"score":81,"level":0},{"x":884,"y":295,"score":101,"level":0},{"x":962,"y":295,"score":91,"level":0},{"x":989,"y":295,"score":83,"level":0},{"x":1067,"y":295,"score":50,"level":0},{"x":1113,"y":295,"score":54,"level":0},{"x":1155,"y":295,"score":35,"level":0},{"x":1176,"y":295,"score":45,"level":0},{"x":1187,"y":295,"score":120,"level":0},{"x":1198,"y":295,"score":50,"level":0},{"x":1234,"y":295,"score":73,"level":0},{"x":1253,"y":295,"score":43,"level":0},{"x":1432,"y":295,"score":46,"level":0},{"x":1437,"y":295,"score":109,"level":0},{"x":1457,"y":295,"score":70,"level":0},{"x":1459,"y":295,"score":71,"level":0},{"x":1465,"y":295,"score":66,"level":0},{"x":441,"y":296,"score":180,"level":0},{"x":458,"y":296,"score":64,"level":0},{"x":480,"y":296,"score":74,"level":0},{"x":506,"y":296,"score":40,"level":0},{"x":644,"y":296,"score":50,"level":0},{"x":708,"y":296,"score":90,"level":0},{"x":725,"y":296,"score":42,"level":0},{"x":820,"y":296,"score":108,"level":0},{"x":927,"y":296,"score":52,"level":0},{"x":936,"y":296,"score":69,"level":0},{"x":938,"y":296,"score":80,"level":0},{"x":1026,"y":296,"score":98,"level":0},{"x":1069,"y":296,"score":64,"level":0},{"x":1137,"y":296,"score":64,"level":0},{"x":1170,"y":296,"score":32,"level":0},{"x":1208,"y":296,"score":80,"level":0},{"x":1261,"y":296,"score":68,"level":0},{"x":1371,"y":296,"score":46,"level":0},{"x":1398,"y":296,"score":29,"level":0},{"x":1481,"y":296,"score":53,"level":0},{"x":1486,"y":296,"score":56,"level":0},{"x":397,"y":297,"score":61,"level":0},{"x":402,"y":297,"score":78,"level":0},{"x":456,"y":297,"score":58,"level":0},{"x":500,"y":297,"score":49,"level":0},{"x":540,"y":297,"score":50,"level":0},{"x":553,"y":297,"score":29,"level":0},{"x":604,"y":297,"score":111,"level":0},{"x":611,"y":297,"score":98,"level":0},{"x":619,"y":297,"score":54,"level":0},{"x":678,"y":297,"score":48,"level":0},{"x":722,"y":297,"score":36,"level":0},{"x":838,"y":297,"score":142,"level":0},{"x":932,"y":297,"score":89,"level":0},{"x":947,"y":297,"score":41,"level":0},{"x":953,"y":297,"score":57,"level":0},{"x":967,"y":297,"score":36,"level":0},{"x":1048,"y":297,"score":31,"level":0},{"x":1140,"y":297,"score":28,"level":0},{"x":1233,"y":297,"score":63,"level":0},{"x":1320,"y":297,"score":93,"level":0},{"x":1325,"y":297,"score":107,"level":0},{"x":1438,"y":297,"score":88,"level":0},{"x":1453,"y":297,"score":34,"level":0},{"x":1470,"y":297,"score":41,"level":0},{"x":377,"y":298,"score":76,"level":0},{"x":494,"y":298,"score":33,"level":0},{"x":579,"y":298,"score":31,"level":0},{"x":649,"y":298,"score":30,"level":0},{"x":660,"y":298,"score":45,"level":0},{"x":685,"y":298,"score":93,"level":0},{"x":694,"y":298,"score":99,"level":0},{"x":813,"y":298,"score":31,"level":0},{"x":991,"y":298,"score":81,"level":0},{"x":1083,"y":298,"score":78,"level":0},{"x":1101,"y":298,"score":42,"level":0},{"x":1103,"y":298,"score":50,"level":0},{"x":1122,"y":298,"score":95,"level":0},{"x":1151,"y":298,"score":40,"level":0},{"x":1167,"y":298,"score":130,"level":0},{"x":1179,"y":298,"score":72,"level":0},{"x":1192,"y":298,"score":54,"level":0},{"x":1225,"y":298,"score":28,"level":0},{"x":1311,"y":298,"score":26,"level":0},{"x":1350,"y":298,"score":74,"level":0},{"x":1367,"y":298,"score":32,"level":0},{"x":1387,"y":298,"score":47,"level":0},{"x":1465,"y":298,"score":32,"level":0},{"x":1472,"y":298,"score":95,"level":0},{"x":390,"y":299,"score":64,"level":0},{"x":688,"y":299,"score":90,"level":0},{"x":700,"y":299,"score":52,"level":0},{"x":712,"y":299,"score":62,"level":0},{"x":729,"y":299,"score":51,"level":0},{"x":747,"y":299,"score":30,"level":0},{"x":782,"y":299,"score":120,"level":0},{"x":801,"y":299,"score":51,"level":0},{"x":879,"y":299,"score":66,"level":0},{"x":985,"y":299,"score":84,"level":0},{"x":1003,"y":299,"score":29,"level":0},{"x":1027,"y":299,"score":94,"level":0},{"x":1237,"y":299,"score":51,"level":0},{"x":1250,"y":299,"score":56,"level":0},{"x":1258,"y":299,"score":28,"level":0},{"x":1355,"y":299,"score":44,"level":0},{"x":1374,"y":299,"score":37,"level":0},{"x":1477,"y":299,"score":55,"level":0},{"x":384,"y":300,"score":36,"level":0},{"x":392,"y":300,"score":76,"level":0},{"x":412,"y":300,"score":34,"level":0},{"x":483,"y":300,"score":41,"level":0},{"x":499,"y":300,"score":36,"level":0},{"x":671,"y":300,"score":60,"level":0},{"x":761,"y":300,"score":71,"level":0},{"x":770,"y":300,"score":105,"level":0},{"x":871,"y":300,"score":56,"level":0},{"x":890,"y":300,"score":50,"level":0},{"x":939,"y":300,"score":49,"level":0},{"x":991,"y":300,"score":66,"level":0},{"x":1020,"y":300,"score":36,"level":0},{"x":1054,"y":300,"score":68,"level":0},{"x":1088,"y":300,"score":27,"level":0},{"x":1136,"y":300,"score":51,"level":0},{"x":1145,"y":300,"score":111,"level":0},{"x":1155,"y":300,"score":35,"level":0},{"x":1186,"y":300,"score":50,"level":0},{"x":475,"y":301,"score":26,"level":0},{"x":504,"y":301,"score":29,"level":0},{"x":562,"y":301,"score":80,"level":0},{"x":636,"y":301,"score":98,"level":0},{"x":642,"y":301,"score":60,"level":0},{"x":702,"y":301,"score":35,"level":0},{"x":753,"y":301,"score":32,"level":0},{"x":766,"y":301,"score":92,"level":0},{"x":785,"y":301,"score":135,"level":0},{"x":928,"y":301,"score":49,"level":0},{"x":948,"y":301,"score":81,"level":0},{"x":973,"y":301,"score":102,"level":0},{"x":979,"y":301,"score":28,"level":0},{"x":1007,"y":301,"score":31,"level":0},{"x":1042,"y":301,"score":68,"level":0},{"x":1063,"y":301,"score":42,"level":0},{"x":1074,"y":301,"score":58,"level":0},{"x":1108,"y":301,"score":30,"level":0},{"x":1243,"y":301,"score":69,"level":0},{"x":1280,"y":301,"score":73,"level":0},{"x":1324,"y":301,"score":40,"level":0},{"x":1429,"y":301,"score":99,"level":0},{"x":1473,"y":301,"score":56,"level":0},{"x":1481,"y":301,"score":38,"level":0},{"x":401,"y":302,"score":39,"level":0},{"x":406,"y":302,"score":36,"level":0},{"x":484,"y":302,"score":59,"level":0},{"x":489,"y":302,"score":29,"level":0},{"x":530,"y":302,"score":71,"level":0},{"x":552,"y":302,"score":110,"level":0},{"x":560,"y":302,"score":71,"level":0},{"x":618,"y":302,"score":128,"level":0},{"x":721,"y":302,"score":46,"level":0},{"x":822,"y":302,"score":34,"level":0},{"x":828,"y":302,"score":66,"level":0},{"x":932,"y":302,"score":82,"level":0},{"x":1149,"y":302,"score":47,"level":0},{"x":1165,"y":302,"score":96,"level":0},{"x":1238,"y":302,"score":35,"level":0},{"x":1329,"y":302,"score":79,"level":0},{"x":1334,"y":302,"score":57,"level":0},{"x":1343,"y":302,"score":34,"level":0},{"x":1438,"y":302,"score":63,"level":0},{"x":1444,"y":302,"score":50,"level":0},{"x":1453,"y":302,"score":32,"level":0},{"x":440,"y":303,"score":72,"level":0},{"x":523,"y":303,"score":76,"level":0},{"x":546,"y":303,"score":28,"level":0},{"x":649,"y":303,"score":77,"level":0},{"x":655,"y":303,"score":46,"level":0},{"x":759,"y":303,"score":48,"level":0},{"x":1016,"y":303,"score":121,"level":0},{"x":1112,"y":303,"score":74,"level":0},{"x":1137,"y":303,"score":48,"level":0},{"x":1174,"y":303,"score":67,"level":0},{"x":1181,"y":303,"score":81,"level":0},{"x":1214,"y":303,"score":83,"level":0},{"x":1225,"y":303,"score":146,"level":0},{"x":1270,"y":303,"score":143,"level":0},{"x":1353,"y":303,"score":95,"level":0},{"x":1393,"y":303,"score":46,"level":0},{"x":377,"y":304,"score":274,"level":0},{"x":417,"y":304,"score":88,"level":0},{"x":660,"y":304,"score":34,"level":0},{"x":707,"y":304,"score":55,"level":0},{"x":712,"y":304,"score":33,"level":0},{"x":793,"y":304,"score":187,"level":0},{"x":833,"y":304,"score":37,"level":0},{"x":864,"y":304,"score":174,"level":0},{"x":890,"y":304,"score":64,"level":0},{"x":937,"y":304,"score":34,"level":0},{"x":967,"y":304,"score":54,"level":0},{"x":984,"y":304,"score":57,"level":0},{"x":1117,"y":304,"score":114,"level":0},{"x":1276,"y":304,"score":110,"level":0},{"x":1291,"y":304,"score":39,"level":0},{"x":1357,"y":304,"score":54,"level":0},{"x":1387,"y":304,"score":60,"level":0},{"x":1462,"y":304,"score":91,"level":0},{"x":1485,"y":304,"score":91,"level":0},{"x":1488,"y":304,"score":65,"level":0},{"x":431,"y":305,"score":45,"level":0},{"x":447,"y":305,"score":69,"level":0},{"x":462,"y":305,"score":109,"level":0},{"x":499,"y":305,"score":69,"level":0},{"x":523,"y":305,"score":37,"level":0},{"x":607,"y":305,"score":46,"level":0},{"x":613,"y":305,"score":49,"level":0},{"x":655,"y":305,"score":51,"level":0},{"x":697,"y":305,"score":91,"level":0},{"x":781,"y":305,"score":112,"level":0},{"x":902,"y":305,"score":83,"level":0},{"x":942,"y":305,"score":47,"level":0},{"x":1093,"y":305,"score":53,"level":0},{"x":1124,"y":305,"score":44,"level":0},{"x":1129,"y":305,"score":63,"level":0},{"x":1148,"y":305,"score":37,"level":0},{"x":1165,"y":305,"score":49,"level":0},{"x":1187,"y":305,"score":28,"level":0},{"x":1213,"y":305,"score":48,"level":0},{"x":1252,"y":305,"score":59,"level":0},{"x":1348,"y":305,"score":138,"level":0},{"x":1449,"y":305,"score":36,"level":0},{"x":452,"y":306,"score":37,"level":0},{"x":489,"y":306,"score":27,"level":0},{"x":643,"y":306,"score":31,"level":0},{"x":704,"y":306,"score":53,"level":0},{"x":767,"y":306,"score":120,"level":0},{"x":774,"y":306,"score":74,"level":0},{"x":801,"y":306,"score":60,"level":0},{"x":832,"y":306,"score":37,"level":0},{"x":869,"y":306,"score":58,"level":0},{"x":955,"y":306,"score":96,"level":0},{"x":1002,"y":306,"score":156,"level":0},{"x":1007,"y":306,"score":81,"level":0},{"x":1082,"y":306,"score":83,"level":0},{"x":1088,"y":306,"score":37,"level":0},{"x":1193,"y":306,"score":27,"level":0},{"x":1199,"y":306,"score":70,"level":0},{"x":1260,"y":306,"score":38,"level":0},{"x":1375,"y":306,"score":38,"level":0},{"x":1421,"y":306,"score":28,"level":0},{"x":1430,"y":306,"score":35,"level":0},{"x":1446,"y":306,"score":39,"level":0},{"x":1457,"y":306,"score":44,"level":0},{"x":1484,"y":306,"score":52,"level":0},{"x":408,"y":307,"score":55,"level":0},{"x":510,"y":307,"score":48,"level":0},{"x":552,"y":307,"score":37,"level":0},{"x":557,"y":307,"score":26,"level":0},{"x":599,"y":307,"score":34,"level":0},{"x":692,"y":307,"score":48,"level":0},{"x":883,"y":307,"score":45,"level":0},{"x":948,"y":307,"score":199,"level":0},{"x":968,"y":307,"score":42,"level":0},{"x":1140,"y":307,"score":92,"level":0},{"x":1153,"y":307,"score":31,"level":0},{"x":1162,"y":307,"score":41,"level":0},{"x":1212,"y":307,"score":59,"level":0},{"x":1316,"y":307,"score":74,"level":0},{"x":1340,"y":307,"score":52,"level":0},{"x":1361,"y":307,"score":120,"level":0},{"x":1452,"y":307,"score":36,"level":0},{"x":1479,"y":307,"score":147,"level":0},{"x":400,"y":308,"score":113,"level":0},{"x":406,"y":308,"score":72,"level":0},{"x":547,"y":308,"score":105,"level":0},{"x":752,"y":308,"score":102,"level":0},{"x":761,"y":308,"score":69,"level":0},{"x":1103,"y":308,"score":40,"level":0},{"x":1112,"y":308,"score":88,"level":0},{"x":1181,"y":308,"score":93,"level":0},{"x":1234,"y":308,"score":55,"level":0},{"x":1248,"y":308,"score":32,"level":0},{"x":1280,"y":308,"score":121,"level":0},{"x":1335,"y":308,"score":72,"level":0},{"x":1377,"y":308,"score":30,"level":0},{"x":1398,"y":308,"score":29,"level":0},{"x":1469,"y":308,"score":32,"level":0},{"x":435,"y":309,"score":35,"level":0},{"x":451,"y":309,"score":31,"level":0},{"x":721,"y":309,"score":44,"level":0},{"x":724,"y":309,"score":31,"level":0},{"x":1018,"y":309,"score":52,"level":0},{"x":1095,"y":309,"score":56,"level":0},{"x":1100,"y":309,"score":60,"level":0},{"x":1210,"y":309,"score":90,"level":0},{"x":1272,"y":309,"score":45,"level":0},{"x":1443,"y":309,"score":70,"level":0},{"x":548,"y":310,"score":98,"level":0},{"x":711,"y":310,"score":104,"level":0},{"x":745,"y":310,"score":62,"level":0},{"x":783,"y":310,"score":82,"level":0},{"x":806,"y":310,"score":143,"level":0},{"x":839,"y":310,"score":26,"level":0},{"x":1025,"y":310,"score":101,"level":0},{"x":1117,"y":310,"score":35,"level":0},{"x":1290,"y":310,"score":80,"level":0},{"x":380,"y":311,"score":123,"level":0},{"x":399,"y":311,"score":153,"level":0},{"x":467,"y":311,"score":30,"level":0},{"x":566,"y":311,"score":210,"level":0},{"x":607,"y":311,"score":126,"level":0},{"x":613,"y":311,"score":130,"level":0},{"x":618,"y":311,"score":53,"level":0},{"x":623,"y":311,"score":80,"level":0},{"x":640,"y":311,"score":35,"level":0},{"x":696,"y":311,"score":66,"level":0},{"x":720,"y":311,"score":32,"level":0},{"x":800,"y":311,"score":181,"level":0},{"x":872,"y":311,"score":29,"level":0},{"x":906,"y":311,"score":41,"level":0},{"x":978,"y":311,"score":30,"level":0},{"x":987,"y":311,"score":43,"level":0},{"x":995,"y":311,"score":48,"level":0},{"x":1078,"y":311,"score":58,"level":0},{"x":1132,"y":311,"score":75,"level":0},{"x":1144,"y":311,"score":104,"level":0},{"x":1191,"y":311,"score":46,"level":0},{"x":1227,"y":311,"score":58,"level":0},{"x":1229,"y":311,"score":94,"level":0},{"x":1268,"y":311,"score":55,"level":0},{"x":1353,"y":311,"score":43,"level":0},{"x":1456,"y":311,"score":35,"level":0},{"x":1469,"y":311,"score":35,"level":0},{"x":393,"y":312,"score":101,"level":0},{"x":551,"y":312,"score":95,"level":0},{"x":556,"y":312,"score":124,"level":0},{"x":633,"y":312,"score":41,"level":0},{"x":660,"y":312,"score":29,"level":0},{"x":716,"y":312,"score":38,"level":0},{"x":735,"y":312,"score":46,"level":0},{"x":786,"y":312,"score":108,"level":0},{"x":942,"y":312,"score":47,"level":0},{"x":1056,"y":312,"score":39,"level":0},{"x":1106,"y":312,"score":32,"level":0},{"x":1150,"y":312,"score":44,"level":0},{"x":1186,"y":312,"score":35,"level":0},{"x":1245,"y":312,"score":45,"level":0},{"x":1339,"y":312,"score":34,"level":0},{"x":1376,"y":312,"score":26,"level":0},{"x":1464,"y":312,"score":88,"level":0},{"x":403,"y":313,"score":69,"level":0},{"x":441,"y":313,"score":108,"level":0},{"x":513,"y":313,"score":70,"level":0},{"x":655,"y":313,"score":68,"level":0},{"x":675,"y":313,"score":99,"level":0},{"x":728,"y":313,"score":32,"level":0},{"x":826,"y":313,"score":73,"level":0},{"x":924,"y":313,"score":44,"level":0},{"x":1002,"y":313,"score":48,"level":0},{"x":1121,"y":313,"score":70,"level":0},{"x":1175,"y":313,"score":30,"level":0},{"x":1200,"y":313,"score":148,"level":0},{"x":1205,"y":313,"score":123,"level":0},{"x":1278,"y":313,"score":84,"level":0},{"x":1451,"y":313,"score":45,"level":0},{"x":1458,"y":313,"score":76,"level":0},{"x":1488,"y":313,"score":29,"level":0},{"x":413,"y":314,"score":51,"level":0},{"x":436,"y":314,"score":66,"level":0},{"x":627,"y":314,"score":38,"level":0},{"x":670,"y":314,"score":52,"level":0},{"x":685,"y":314,"score":71,"level":0},{"x":791,"y":314,"score":161,"level":0},{"x":834,"y":314,"score":46,"level":0},{"x":948,"y":314,"score":61,"level":0},{"x":992,"y":314,"score":26,"level":0},{"x":1040,"y":314,"score":58,"level":0},{"x":1091,"y":314,"score":81,"level":0},{"x":1164,"y":314,"score":48,"level":0},{"x":1170,"y":314,"score":44,"level":0},{"x":1180,"y":314,"score":60,"level":0},{"x":1220,"y":314,"score":26,"level":0},{"x":1251,"y":314,"score":37,"level":0},{"x":1270,"y":314,"score":47,"level":0},{"x":1332,"y":314,"score":50,"level":0},{"x":1337,"y":314,"score":92,"level":0},{"x":1355,"y":314,"score":34,"level":0},{"x":1365,"y":314,"score":45,"level":0},{"x":1386,"y":314,"score":30,"level":0},{"x":1474,"y":314,"score":45,"level":0},{"x":1477,"y":314,"score":124,"level":0},{"x":1484,"y":314,"score":95,"level":0},{"x":497,"y":315,"score":156,"level":0},{"x":738,"y":315,"score":28,"level":0},{"x":891,"y":315,"score":152,"level":0},{"x":904,"y":315,"score":58,"level":0},{"x":954,"y":315,"score":42,"level":0},{"x":995,"y":315,"score":85,"level":0},{"x":1003,"y":315,"score":51,"level":0},{"x":1008,"y":315,"score":32,"level":0},{"x":1059,"y":315,"score":63,"level":0},{"x":1103,"y":315,"score":36,"level":0},{"x":1121,"y":315,"score":72,"level":0},{"x":1127,"y":315,"score":26,"level":0},{"x":1233,"y":315,"score":40,"level":0},{"x":1346,"y":315,"score":35,"level":0},{"x":1360,"y":315,"score":159,"level":0},{"x":1388,"y":315,"score":35,"level":0},{"x":1390,"y":315,"score":47,"level":0},{"x":490,"y":316,"score":57,"level":0},{"x":552,"y":316,"score":26,"level":0},{"x":570,"y":316,"score":51,"level":0},{"x":702,"y":316,"score":42,"level":0},{"x":717,"y":316,"score":120,"level":0},{"x":730,"y":316,"score":39,"level":0},{"x":740,"y":316,"score":46,"level":0},{"x":809,"y":316,"score":151,"level":0},{"x":827,"y":316,"score":60,"level":0},{"x":866,"y":316,"score":56,"level":0},{"x":875,"y":316,"score":60,"level":0},{"x":889,"y":316,"score":168,"level":0},{"x":919,"y":316,"score":36,"level":0},{"x":1057,"y":316,"score":61,"level":0},{"x":1290,"y":316,"score":151,"level":0},{"x":1295,"y":316,"score":54,"level":0},{"x":399,"y":317,"score":61,"level":0},{"x":506,"y":317,"score":116,"level":0},{"x":547,"y":317,"score":157,"level":0},{"x":642,"y":317,"score":53,"level":0},{"x":711,"y":317,"score":28,"level":0},{"x":794,"y":317,"score":132,"level":0},{"x":801,"y":317,"score":104,"level":0},{"x":879,"y":317,"score":40,"level":0},{"x":980,"y":317,"score":29,"level":0},{"x":1001,"y":317,"score":35,"level":0},{"x":1007,"y":317,"score":40,"level":0},{"x":1068,"y":317,"score":49,"level":0},{"x":1086,"y":317,"score":44,"level":0},{"x":1146,"y":317,"score":26,"level":0},{"x":1155,"y":317,"score":77,"level":0},{"x":1379,"y":317,"score":54,"level":0},{"x":1463,"y":317,"score":30,"level":0},{"x":1470,"y":317,"score":31,"level":0},{"x":419,"y":318,"score":126,"level":0},{"x":470,"y":318,"score":114,"level":0},{"x":504,"y":318,"score":118,"level":0},{"x":527,"y":318,"score":68,"level":0},{"x":564,"y":318,"score":35,"level":0},{"x":907,"y":318,"score":42,"level":0},{"x":924,"y":318,"score":32,"level":0},{"x":1091,"y":318,"score":54,"level":0},{"x":1102,"y":318,"score":48,"level":0},{"x":1230,"y":318,"score":48,"level":0},{"x":1256,"y":318,"score":32,"level":0},{"x":1285,"y":318,"score":35,"level":0},{"x":1328,"y":318,"score":55,"level":0},{"x":1396,"y":318,"score":56,"level":0},{"x":1483,"y":318,"score":93,"level":0},{"x":377,"y":319,"score":63,"level":0},{"x":383,"y":319,"score":149,"level":0},{"x":482,"y":319,"score":56,"level":0},{"x":521,"y":319,"score":53,"level":0},{"x":582,"y":319,"score":40,"level":0},{"x":612,"y":319,"score":60,"level":0},{"x":689,"y":319,"score":208,"level":0},{"x":789,"y":319,"score":64,"level":0},{"x":839,"y":319,"score":59,"level":0},{"x":934,"y":319,"score":36,"level":0},{"x":1053,"y":319,"score":116,"level":0},{"x":1115,"y":319,"score":95,"level":0},{"x":1206,"y":319,"score":147,"level":0},{"x":1235,"y":319,"score":51,"level":0},{"x":1272,"y":319,"score":54,"level":0},{"x":1277,"y":319,"score":44,"level":0},{"x":1317,"y":319,"score":48,"level":0},{"x":1335,"y":319,"score":42,"level":0},{"x":1339,"y":319,"score":27,"level":0},{"x":1341,"y":319,"score":50,"level":0},{"x":1357,"y":319,"score":142,"level":0},{"x":1393,"y":319,"score":29,"level":0},{"x":1455,"y":319,"score":44,"level":0},{"x":393,"y":320,"score":104,"level":0},{"x":403,"y":320,"score":89,"level":0},{"x":449,"y":320,"score":188,"level":0},{"x":507,"y":320,"score":67,"level":0},{"x":527,"y":320,"score":40,"level":0},{"x":601,"y":320,"score":92,"level":0},{"x":633,"y":320,"score":44,"level":0},{"x":654,"y":320,"score":39,"level":0},{"x":682,"y":320,"score":89,"level":0},{"x":745,"y":320,"score":46,"level":0},{"x":818,"y":320,"score":70,"level":0},{"x":823,"y":320,"score":155,"level":0},{"x":985,"y":320,"score":130,"level":0},{"x":991,"y":320,"score":50,"level":0},{"x":1010,"y":320,"score":86,"level":0},{"x":1012,"y":320,"score":39,"level":0},{"x":1021,"y":320,"score":56,"level":0},{"x":1051,"y":320,"score":105,"level":0},{"x":1066,"y":320,"score":74,"level":0},{"x":1139,"y":320,"score":66,"level":0},{"x":1192,"y":320,"score":33,"level":0},{"x":1252,"y":320,"score":26,"level":0},{"x":1388,"y":320,"score":44,"level":0},{"x":438,"y":321,"score":33,"level":0},{"x":476,"y":321,"score":77,"level":0},{"x":505,"y":321,"score":80,"level":0},{"x":531,"y":321,"score":30,"level":0},{"x":612,"y":321,"score":105,"level":0},{"x":638,"y":321,"score":88,"level":0},{"x":662,"y":321,"score":36,"level":0},{"x":703,"y":321,"score":52,"level":0},{"x":997,"y":321,"score":232,"level":0},{"x":1061,"y":321,"score":42,"level":0},{"x":1109,"y":321,"score":104,"level":0},{"x":1122,"y":321,"score":67,"level":0},{"x":1184,"y":321,"score":60,"level":0},{"x":1189,"y":321,"score":28,"level":0},{"x":1443,"y":321,"score":74,"level":0},{"x":1469,"y":321,"score":55,"level":0},{"x":443,"y":322,"score":68,"level":0},{"x":510,"y":322,"score":27,"level":0},{"x":715,"y":322,"score":64,"level":0},{"x":726,"y":322,"score":46,"level":0},{"x":745,"y":322,"score":26,"level":0},{"x":886,"y":322,"score":37,"level":0},{"x":904,"y":322,"score":30,"level":0},{"x":970,"y":322,"score":31,"level":0},{"x":1027,"y":322,"score":78,"level":0},{"x":1039,"y":322,"score":30,"level":0},{"x":1070,"y":322,"score":104,"level":0},{"x":1076,"y":322,"score":51,"level":0},{"x":1105,"y":322,"score":47,"level":0},{"x":1114,"y":322,"score":63,"level":0},{"x":1166,"y":322,"score":83,"level":0},{"x":1268,"y":322,"score":51,"level":0},{"x":1273,"y":322,"score":77,"level":0},{"x":1339,"y":322,"score":43,"level":0},{"x":1458,"y":322,"score":58,"level":0},{"x":389,"y":323,"score":80,"level":0},{"x":397,"y":323,"score":32,"level":0},{"x":523,"y":323,"score":162,"level":0},{"x":551,"y":323,"score":47,"level":0},{"x":585,"y":323,"score":52,"level":0},{"x":708,"y":323,"score":27,"level":0},{"x":912,"y":323,"score":33,"level":0},{"x":918,"y":323,"score":69,"level":0},{"x":973,"y":323,"score":30,"level":0},{"x":979,"y":323,"score":95,"level":0},{"x":1009,"y":323,"score":69,"level":0},{"x":1054,"y":323,"score":26,"level":0},{"x":1063,"y":323,"score":27,"level":0},{"x":1096,"y":323,"score":58,"level":0},{"x":1219,"y":323,"score":149,"level":0},{"x":1259,"y":323,"score":89,"level":0},{"x":1430,"y":323,"score":32,"level":0},{"x":407,"y":324,"score":30,"level":0},{"x":473,"y":324,"score":79,"level":0},{"x":483,"y":324,"score":28,"level":0},{"x":560,"y":324,"score":47,"level":0},{"x":591,"y":324,"score":103,"level":0},{"x":594,"y":324,"score":117,"level":0},{"x":619,"y":324,"score":209,"level":0},{"x":957,"y":324,"score":121,"level":0},{"x":1014,"y":324,"score":63,"level":0},{"x":1019,"y":324,"score":35,"level":0},{"x":1058,"y":324,"score":57,"level":0},{"x":1156,"y":324,"score":44,"level":0},{"x":1161,"y":324,"score":66,"level":0},{"x":1225,"y":324,"score":106,"level":0},{"x":1244,"y":324,"score":85,"level":0},{"x":1372,"y":324,"score":53,"level":0},{"x":1377,"y":324,"score":31,"level":0},{"x":1380,"y":324,"score":30,"level":0},{"x":1480,"y":324,"score":154,"level":0},{"x":529,"y":325,"score":126,"level":0},{"x":534,"y":325,"score":49,"level":0},{"x":605,"y":325,"score":33,"level":0},{"x":612,"y":325,"score":35,"level":0},{"x":632,"y":325,"score":67,"level":0},{"x":733,"y":325,"score":39,"level":0},{"x":740,"y":325,"score":81,"level":0},{"x":985,"y":325,"score":95,"level":0},{"x":1062,"y":325,"score":66,"level":0},{"x":1101,"y":325,"score":100,"level":0},{"x":1136,"y":325,"score":87,"level":0},{"x":1346,"y":325,"score":43,"level":0},{"x":1351,"y":325,"score":60,"level":0},{"x":1362,"y":325,"score":55,"level":0},{"x":396,"y":326,"score":75,"level":0},{"x":425,"y":326,"score":38,"level":0},{"x":463,"y":326,"score":146,"level":0},{"x":544,"y":326,"score":119,"level":0},{"x":553,"y":326,"score":29,"level":0},{"x":603,"y":326,"score":75,"level":0},{"x":638,"y":326,"score":41,"level":0},{"x":897,"y":326,"score":26,"level":0},{"x":972,"y":326,"score":43,"level":0},{"x":979,"y":326,"score":100,"level":0},{"x":1080,"y":326,"score":133,"level":0},{"x":1129,"y":326,"score":76,"level":0},{"x":1152,"y":326,"score":78,"level":0},{"x":1184,"y":326,"score":37,"level":0},{"x":1206,"y":326,"score":182,"level":0},{"x":1263,"y":326,"score":66,"level":0},{"x":1317,"y":326,"score":48,"level":0},{"x":1357,"y":326,"score":115,"level":0},{"x":1367,"y":326,"score":34,"level":0},{"x":1451,"y":326,"score":87,"level":0},{"x":418,"y":327,"score":57,"level":0},{"x":461,"y":327,"score":110,"level":0},{"x":476,"y":327,"score":33,"level":0},{"x":536,"y":327,"score":41,"level":0},{"x":556,"y":327,"score":29,"level":0},{"x":609,"y":327,"score":65,"level":0},{"x":613,"y":327,"score":67,"level":0},{"x":624,"y":327,"score":41,"level":0},{"x":655,"y":327,"score":95,"level":0},{"x":666,"y":327,"score":68,"level":0},{"x":693,"y":327,"score":100,"level":0},{"x":729,"y":327,"score":49,"level":0},{"x":838,"y":327,"score":46,"level":0},{"x":889,"y":327,"score":85,"level":0},{"x":966,"y":327,"score":136,"level":0},{"x":1023,"y":327,"score":42,"level":0},{"x":1060,"y":327,"score":96,"level":0},{"x":1121,"y":327,"score":41,"level":0},{"x":1253,"y":327,"score":28,"level":0},{"x":1348,"y":327,"score":50,"level":0},{"x":1465,"y":327,"score":150,"level":0},{"x":1481,"y":327,"score":72,"level":0},{"x":1487,"y":327,"score":69,"level":0},{"x":386,"y":328,"score":51,"level":0},{"x":451,"y":328,"score":30,"level":0},{"x":496,"y":328,"score":96,"level":0},{"x":549,"y":328,"score":72,"level":0},{"x":640,"y":328,"score":57,"level":0},{"x":647,"y":328,"score":104,"level":0},{"x":865,"y":328,"score":139,"level":0},{"x":919,"y":328,"score":41,"level":0},{"x":1008,"y":328,"score":105,"level":0},{"x":1053,"y":328,"score":130,"level":0},{"x":1196,"y":328,"score":40,"level":0},{"x":1211,"y":328,"score":61,"level":0},{"x":1236,"y":328,"score":29,"level":0},{"x":1338,"y":328,"score":52,"level":0},{"x":1400,"y":328,"score":28,"level":0},{"x":456,"y":329,"score":144,"level":0},{"x":464,"y":329,"score":120,"level":0},{"x":470,"y":329,"score":53,"level":0},{"x":484,"y":329,"score":48,"level":0},{"x":490,"y":329,"score":88,"level":0},{"x":503,"y":329,"score":73,"level":0},{"x":619,"y":329,"score":35,"level":0},{"x":669,"y":329,"score":28,"level":0},{"x":680,"y":329,"score":73,"level":0},{"x":819,"y":329,"score":137,"level":0},{"x":876,"y":329,"score":196,"level":0},{"x":892,"y":329,"score":41,"level":0},{"x":926,"y":329,"score":96,"level":0},{"x":947,"y":329,"score":64,"level":0},{"x":956,"y":329,"score":178,"level":0},{"x":969,"y":329,"score":153,"level":0},{"x":1050,"y":329,"score":91,"level":0},{"x":1218,"y":329,"score":165,"level":0},{"x":1266,"y":329,"score":32,"level":0},{"x":1272,"y":329,"score":89,"level":0},{"x":1366,"y":329,"score":50,"level":0},{"x":1440,"y":329,"score":87,"level":0},{"x":393,"y":330,"score":136,"level":0},{"x":598,"y":330,"score":58,"level":0},{"x":611,"y":330,"score":68,"level":0},{"x":663,"y":330,"score":93,"level":0},{"x":674,"y":330,"score":68,"level":0},{"x":713,"y":330,"score":72,"level":0},{"x":725,"y":330,"score":31,"level":0},{"x":732,"y":330,"score":168,"level":0},{"x":886,"y":330,"score":78,"level":0},{"x":980,"y":330,"score":89,"level":0},{"x":992,"y":330,"score":86,"level":0},{"x":1268,"y":330,"score":30,"level":0},{"x":1333,"y":330,"score":41,"level":0},{"x":1356,"y":330,"score":41,"level":0},{"x":1427,"y":330,"score":30,"level":0},{"x":1453,"y":330,"score":32,"level":0},{"x":1475,"y":330,"score":94,"level":0},{"x":1480,"y":330,"score":79,"level":0},{"x":1490,"y":330,"score":38,"level":0},{"x":404,"y":331,"score":91,"level":0},{"x":446,"y":331,"score":48,"level":0},{"x":652,"y":331,"score":47,"level":0},{"x":659,"y":331,"score":34,"level":0},{"x":952,"y":331,"score":114,"level":0},{"x":985,"y":331,"score":176,"level":0},{"x":1008,"y":331,"score":34,"level":0},{"x":1049,"y":331,"score":66,"level":0},{"x":1067,"y":331,"score":91,"level":0},{"x":1105,"y":331,"score":58,"level":0},{"x":1187,"y":331,"score":56,"level":0},{"x":1224,"y":331,"score":113,"level":0},{"x":1234,"y":331,"score":28,"level":0},{"x":1243,"y":331,"score":107,"level":0},{"x":417,"y":332,"score":52,"level":0},{"x":422,"y":332,"score":126,"level":0},{"x":435,"y":332,"score":31,"level":0},{"x":467,"y":332,"score":85,"level":0},{"x":588,"y":332,"score":34,"level":0},{"x":604,"y":332,"score":62,"level":0},{"x":666,"y":332,"score":77,"level":0},{"x":674,"y":332,"score":51,"level":0},{"x":839,"y":332,"score":29,"level":0},{"x":860,"y":332,"score":44,"level":0},{"x":870,"y":332,"score":27,"level":0},{"x":1002,"y":332,"score":94,"level":0},{"x":1044,"y":332,"score":66,"level":0},{"x":1092,"y":332,"score":61,"level":0},{"x":1259,"y":332,"score":93,"level":0},{"x":1278,"y":332,"score":216,"level":0},{"x":1334,"y":332,"score":62,"level":0},{"x":1348,"y":332,"score":44,"level":0},{"x":1355,"y":332,"score":52,"level":0},{"x":1468,"y":332,"score":44,"level":0},{"x":1490,"y":332,"score":27,"level":0},{"x":411,"y":333,"score":44,"level":0},{"x":446,"y":333,"score":38,"level":0},{"x":496,"y":333,"score":64,"level":0},{"x":509,"y":333,"score":26,"level":0},{"x":622,"y":333,"score":59,"level":0},{"x":629,"y":333,"score":88,"level":0},{"x":635,"y":333,"score":152,"level":0},{"x":701,"y":333,"score":55,"level":0},{"x":892,"y":333,"score":51,"level":0},{"x":898,"y":333,"score":32,"level":0},{"x":963,"y":333,"score":209,"level":0},{"x":974,"y":333,"score":52,"level":0},{"x":1060,"y":333,"score":27,"level":0},{"x":1128,"y":333,"score":120,"level":0},{"x":1196,"y":333,"score":32,"level":0},{"x":1204,"y":333,"score":66,"level":0},{"x":1256,"y":333,"score":68,"level":0},{"x":1449,"y":333,"score":26,"level":0},{"x":399,"y":334,"score":57,"level":0},{"x":455,"y":334,"score":94,"level":0},{"x":504,"y":334,"score":37,"level":0},{"x":524,"y":334,"score":140,"level":0},{"x":526,"y":334,"score":132,"level":0},{"x":531,"y":334,"score":80,"level":0},{"x":554,"y":334,"score":31,"level":0},{"x":641,"y":334,"score":119,"level":0},{"x":647,"y":334,"score":28,"level":0},{"x":665,"y":334,"score":61,"level":0},{"x":682,"y":334,"score":177,"level":0},{"x":693,"y":334,"score":72,"level":0},{"x":912,"y":334,"score":52,"level":0},{"x":947,"y":334,"score":119,"level":0},{"x":955,"y":334,"score":137,"level":0},{"x":1007,"y":334,"score":28,"level":0},{"x":1116,"y":334,"score":42,"level":0},{"x":1177,"y":334,"score":88,"level":0},{"x":1230,"y":334,"score":98,"level":0},{"x":1266,"y":334,"score":44,"level":0},{"x":1327,"y":334,"score":44,"level":0},{"x":1360,"y":334,"score":29,"level":0},{"x":1375,"y":334,"score":34,"level":0},{"x":1390,"y":334,"score":43,"level":0},{"x":1457,"y":334,"score":53,"level":0},{"x":476,"y":335,"score":33,"level":0},{"x":540,"y":335,"score":37,"level":0},{"x":717,"y":335,"score":67,"level":0},{"x":738,"y":335,"score":74,"level":0},{"x":905,"y":335,"score":160,"level":0},{"x":926,"y":335,"score":152,"level":0},{"x":982,"y":335,"score":113,"level":0},{"x":1055,"y":335,"score":96,"level":0},{"x":1215,"y":335,"score":176,"level":0},{"x":1222,"y":335,"score":63,"level":0},{"x":1271,"y":335,"score":228,"level":0},{"x":1335,"y":335,"score":33,"level":0},{"x":1462,"y":335,"score":26,"level":0},{"x":1479,"y":335,"score":132,"level":0},{"x":383,"y":336,"score":76,"level":0},{"x":416,"y":336,"score":182,"level":0},{"x":443,"y":336,"score":68,"level":0},{"x":529,"y":336,"score":54,"level":0},{"x":569,"y":336,"score":44,"level":0},{"x":574,"y":336,"score":30,"level":0},{"x":610,"y":336,"score":143,"level":0},{"x":674,"y":336,"score":35,"level":0},{"x":712,"y":336,"score":82,"level":0},{"x":722,"y":336,"score":158,"level":0},{"x":871,"y":336,"score":71,"level":0},{"x":960,"y":336,"score":63,"level":0},{"x":1016,"y":336,"score":68,"level":0},{"x":1073,"y":336,"score":49,"level":0},{"x":1109,"y":336,"score":96,"level":0},{"x":1119,"y":336,"score":66,"level":0},{"x":1146,"y":336,"score":56,"level":0},{"x":1200,"y":336,"score":26,"level":0},{"x":1210,"y":336,"score":109,"level":0},{"x":1237,"y":336,"score":92,"level":0},{"x":1484,"y":336,"score":123,"level":0},{"x":389,"y":337,"score":56,"level":0},{"x":394,"y":337,"score":132,"level":0},{"x":399,"y":337,"score":89,"level":0},{"x":514,"y":337,"score":71,"level":0},{"x":660,"y":337,"score":34,"level":0},{"x":669,"y":337,"score":116,"level":0},{"x":864,"y":337,"score":77,"level":0},{"x":888,"y":337,"score":32,"level":0},{"x":933,"y":337,"score":39,"level":0},{"x":1030,"y":337,"score":54,"level":0},{"x":1114,"y":337,"score":71,"level":0},{"x":1189,"y":337,"score":55,"level":0},{"x":1191,"y":337,"score":61,"level":0},{"x":1226,"y":337,"score":44,"level":0},{"x":1261,"y":337,"score":77,"level":0},{"x":1312,"y":337,"score":35,"level":0},{"x":1326,"y":337,"score":34,"level":0},{"x":1347,"y":337,"score":42,"level":0},{"x":1427,"y":337,"score":29,"level":0},{"x":450,"y":338,"score":81,"level":0},{"x":459,"y":338,"score":39,"level":0},{"x":496,"y":338,"score":48,"level":0},{"x":517,"y":338,"score":56,"level":0},{"x":520,"y":338,"score":33,"level":0},{"x":913,"y":338,"score":158,"level":0},{"x":967,"y":338,"score":64,"level":0},{"x":974,"y":338,"score":56,"level":0},{"x":1061,"y":338,"score":66,"level":0},{"x":1102,"y":338,"score":63,"level":0},{"x":1131,"y":338,"score":71,"level":0},{"x":1146,"y":338,"score":43,"level":0},{"x":1168,"y":338,"score":32,"level":0},{"x":1179,"y":338,"score":75,"level":0},{"x":1238,"y":338,"score":103,"level":0},{"x":1336,"y":338,"score":26,"level":0},{"x":1342,"y":338,"score":95,"level":0},{"x":1398,"y":338,"score":33,"level":0},{"x":1464,"y":338,"score":58,"level":0},{"x":1473,"y":338,"score":54,"level":0},{"x":377,"y":339,"score":48,"level":0},{"x":479,"y":339,"score":151,"level":0},{"x":524,"y":339,"score":47,"level":0},{"x":529,"y":339,"score":33,"level":0},{"x":641,"y":339,"score":165,"level":0},{"x":923,"y":339,"score":108,"level":0},{"x":947,"y":339,"score":63,"level":0},{"x":977,"y":339,"score":76,"level":0},{"x":1023,"y":339,"score":69,"level":0},{"x":1087,"y":339,"score":56,"level":0},{"x":1093,"y":339,"score":65,"level":0},{"x":1109,"y":339,"score":106,"level":0},{"x":1173,"y":339,"score":77,"level":0},{"x":1188,"y":339,"score":70,"level":0},{"x":1199,"y":339,"score":50,"level":0},{"x":1378,"y":339,"score":38,"level":0},{"x":1439,"y":339,"score":36,"level":0},{"x":389,"y":340,"score":41,"level":0},{"x":403,"y":340,"score":117,"level":0},{"x":412,"y":340,"score":76,"level":0},{"x":456,"y":340,"score":96,"level":0},{"x":473,"y":340,"score":117,"level":0},{"x":534,"y":340,"score":29,"level":0},{"x":540,"y":340,"score":94,"level":0},{"x":570,"y":340,"score":33,"level":0},{"x":647,"y":340,"score":84,"level":0},{"x":653,"y":340,"score":34,"level":0},{"x":955,"y":340,"score":87,"level":0},{"x":1017,"y":340,"score":31,"level":0},{"x":1135,"y":340,"score":55,"level":0},{"x":1183,"y":340,"score":66,"level":0},{"x":1204,"y":340,"score":113,"level":0},{"x":1286,"y":340,"score":138,"level":0},{"x":1448,"y":340,"score":54,"level":0},{"x":1459,"y":340,"score":34,"level":0},{"x":409,"y":341,"score":81,"level":0},{"x":445,"y":341,"score":51,"level":0},{"x":467,"y":341,"score":141,"level":0},{"x":681,"y":341,"score":72,"level":0},{"x":721,"y":341,"score":36,"level":0},{"x":741,"y":341,"score":26,"level":0},{"x":871,"y":341,"score":43,"level":0},{"x":938,"y":341,"score":69,"level":0},{"x":1047,"y":341,"score":39,"level":0},{"x":1106,"y":341,"score":68,"level":0},{"x":1224,"y":341,"score":140,"level":0},{"x":1245,"y":341,"score":102,"level":0},{"x":1377,"y":341,"score":30,"level":0},{"x":1439,"y":341,"score":45,"level":0},{"x":501,"y":342,"score":30,"level":0},{"x":606,"y":342,"score":58,"level":0},{"x":656,"y":342,"score":70,"level":0},{"x":675,"y":342,"score":50,"level":0},{"x":746,"y":342,"score":39,"level":0},{"x":823,"y":342,"score":169,"level":0},{"x":881,"y":342,"score":126,"level":0},{"x":906,"y":342,"score":34,"level":0},{"x":1052,"y":342,"score":81,"level":0},{"x":1057,"y":342,"score":74,"level":0},{"x":1069,"y":342,"score":157,"level":0},{"x":1090,"y":342,"score":37,"level":0},{"x":1117,"y":342,"score":125,"level":0},{"x":1157,"y":342,"score":95,"level":0},{"x":1162,"y":342,"score":191,"level":0},{"x":1182,"y":342,"score":83,"level":0},{"x":1207,"y":342,"score":107,"level":0},{"x":1293,"y":342,"score":246,"level":0},{"x":1360,"y":342,"score":34,"level":0},{"x":1468,"y":342,"score":69,"level":0},{"x":1473,"y":342,"score":46,"level":0},{"x":1481,"y":342,"score":50,"level":0},{"x":390,"y":343,"score":50,"level":0},{"x":398,"y":343,"score":110,"level":0},{"x":409,"y":343,"score":97,"level":0},{"x":420,"y":343,"score":77,"level":0},{"x":450,"y":343,"score":157,"level":0},{"x":524,"y":343,"score":40,"level":0},{"x":555,"y":343,"score":44,"level":0},{"x":707,"y":343,"score":68,"level":0},{"x":735,"y":343,"score":92,"level":0},{"x":820,"y":343,"score":104,"level":0},{"x":840,"y":343,"score":66,"level":0},{"x":861,"y":343,"score":47,"level":0},{"x":900,"y":343,"score":86,"level":0},{"x":913,"y":343,"score":55,"level":0},{"x":988,"y":343,"score":46,"level":0},{"x":1078,"y":343,"score":53,"level":0},{"x":1213,"y":343,"score":76,"level":0},{"x":1237,"y":343,"score":76,"level":0},{"x":1248,"y":343,"score":74,"level":0},{"x":1320,"y":343,"score":37,"level":0},{"x":1330,"y":343,"score":40,"level":0},{"x":1347,"y":343,"score":69,"level":0},{"x":508,"y":344,"score":41,"level":0},{"x":692,"y":344,"score":26,"level":0},{"x":720,"y":344,"score":55,"level":0},{"x":828,"y":344,"score":28,"level":0},{"x":927,"y":344,"score":38,"level":0},{"x":964,"y":344,"score":46,"level":0},{"x":969,"y":344,"score":102,"level":0},{"x":1004,"y":344,"score":46,"level":0},{"x":1026,"y":344,"score":66,"level":0},{"x":1098,"y":344,"score":73,"level":0},{"x":1231,"y":344,"score":94,"level":0},{"x":1315,"y":344,"score":92,"level":0},{"x":1342,"y":344,"score":63,"level":0},{"x":1468,"y":344,"score":73,"level":0},{"x":1476,"y":344,"score":90,"level":0},{"x":377,"y":345,"score":199,"level":0},{"x":424,"y":345,"score":132,"level":0},{"x":493,"y":345,"score":70,"level":0},{"x":564,"y":345,"score":40,"level":0},{"x":752,"y":345,"score":56,"level":0},{"x":920,"y":345,"score":102,"level":0},{"x":951,"y":345,"score":90,"level":0},{"x":1048,"y":345,"score":87,"level":0},{"x":1084,"y":345,"score":58,"level":0},{"x":1096,"y":345,"score":97,"level":0},{"x":1135,"y":345,"score":49,"level":0},{"x":1168,"y":345,"score":118,"level":0},{"x":1189,"y":345,"score":106,"level":0},{"x":1274,"y":345,"score":63,"level":0},{"x":1303,"y":345,"score":97,"level":0},{"x":1429,"y":345,"score":52,"level":0},{"x":1438,"y":345,"score":26,"level":0},{"x":1451,"y":345,"score":79,"level":0},{"x":453,"y":346,"score":79,"level":0},{"x":542,"y":346,"score":46,"level":0},{"x":550,"y":346,"score":59,"level":0},{"x":570,"y":346,"score":53,"level":0},{"x":649,"y":346,"score":41,"level":0},{"x":667,"y":346,"score":83,"level":0},{"x":701,"y":346,"score":75,"level":0},{"x":712,"y":346,"score":54,"level":0},{"x":754,"y":346,"score":60,"level":0},{"x":867,"y":346,"score":68,"level":0},{"x":915,"y":346,"score":27,"level":0},{"x":933,"y":346,"score":30,"level":0},{"x":979,"y":346,"score":42,"level":0},{"x":1200,"y":346,"score":41,"level":0},{"x":1226,"y":346,"score":36,"level":0},{"x":1319,"y":346,"score":42,"level":0},{"x":1324,"y":346,"score":78,"level":0},{"x":1354,"y":346,"score":167,"level":0},{"x":1433,"y":346,"score":38,"level":0},{"x":1462,"y":346,"score":26,"level":0},{"x":402,"y":347,"score":92,"level":0},{"x":405,"y":347,"score":43,"level":0},{"x":417,"y":347,"score":83,"level":0},{"x":423,"y":347,"score":108,"level":0},{"x":614,"y":347,"score":76,"level":0},{"x":634,"y":347,"score":67,"level":0},{"x":719,"y":347,"score":27,"level":0},{"x":737,"y":347,"score":56,"level":0},{"x":829,"y":347,"score":41,"level":0},{"x":906,"y":347,"score":276,"level":0},{"x":1021,"y":347,"score":91,"level":0},{"x":1048,"y":347,"score":79,"level":0},{"x":1052,"y":347,"score":66,"level":0},{"x":1058,"y":347,"score":109,"level":0},{"x":1066,"y":347,"score":35,"level":0},{"x":1112,"y":347,"score":60,"level":0},{"x":1154,"y":347,"score":164,"level":0},{"x":1177,"y":347,"score":62,"level":0},{"x":1183,"y":347,"score":69,"level":0},{"x":1260,"y":347,"score":78,"level":0},{"x":1285,"y":347,"score":97,"level":0},{"x":1293,"y":347,"score":180,"level":0},{"x":1391,"y":347,"score":42,"level":0},{"x":498,"y":348,"score":106,"level":0},{"x":523,"y":348,"score":106,"level":0},{"x":532,"y":348,"score":56,"level":0},{"x":550,"y":348,"score":61,"level":0},{"x":650,"y":348,"score":60,"level":0},{"x":655,"y":348,"score":138,"level":0},{"x":686,"y":348,"score":66,"level":0},{"x":708,"y":348,"score":48,"level":0},{"x":864,"y":348,"score":46,"level":0},{"x":879,"y":348,"score":41,"level":0},{"x":913,"y":348,"score":48,"level":0},{"x":1106,"y":348,"score":129,"level":0},{"x":1142,"y":348,"score":34,"level":0},{"x":1246,"y":348,"score":205,"level":0},{"x":1309,"y":348,"score":101,"level":0},{"x":374,"y":349,"score":85,"level":0},{"x":390,"y":349,"score":207,"level":0},{"x":398,"y":349,"score":72,"level":0},{"x":443,"y":349,"score":34,"level":0},{"x":692,"y":349,"score":63,"level":0},{"x":729,"y":349,"score":60,"level":0},{"x":819,"y":349,"score":58,"level":0},{"x":893,"y":349,"score":214,"level":0},{"x":960,"y":349,"score":34,"level":0},{"x":997,"y":349,"score":50,"level":0},{"x":1002,"y":349,"score":32,"level":0},{"x":1021,"y":349,"score":78,"level":0},{"x":1026,"y":349,"score":49,"level":0},{"x":1076,"y":349,"score":37,"level":0},{"x":1125,"y":349,"score":51,"level":0},{"x":1130,"y":349,"score":38,"level":0},{"x":1147,"y":349,"score":88,"level":0},{"x":1211,"y":349,"score":105,"level":0},{"x":1254,"y":349,"score":142,"level":0},{"x":1478,"y":349,"score":80,"level":0},{"x":493,"y":350,"score":32,"level":0},{"x":539,"y":350,"score":29,"level":0},{"x":589,"y":350,"score":31,"level":0},{"x":676,"y":350,"score":41,"level":0},{"x":938,"y":350,"score":44,"level":0},{"x":944,"y":350,"score":57,"level":0},{"x":1081,"y":350,"score":82,"level":0},{"x":1120,"y":350,"score":71,"level":0},{"x":1172,"y":350,"score":117,"level":0},{"x":1177,"y":350,"score":44,"level":0},{"x":1205,"y":350,"score":85,"level":0},{"x":1219,"y":350,"score":176,"level":0},{"x":1224,"y":350,"score":86,"level":0},{"x":1238,"y":350,"score":28,"level":0},{"x":1263,"y":350,"score":88,"level":0},{"x":1268,"y":350,"score":69,"level":0},{"x":1323,"y":350,"score":94,"level":0},{"x":1351,"y":350,"score":153,"level":0},{"x":1390,"y":350,"score":29,"level":0},{"x":499,"y":351,"score":41,"level":0},{"x":607,"y":351,"score":137,"level":0},{"x":618,"y":351,"score":71,"level":0},{"x":656,"y":351,"score":137,"level":0},{"x":727,"y":351,"score":67,"level":0},{"x":828,"y":351,"score":72,"level":0},{"x":840,"y":351,"score":40,"level":0},{"x":868,"y":351,"score":46,"level":0},{"x":884,"y":351,"score":56,"level":0},{"x":923,"y":351,"score":29,"level":0},{"x":961,"y":351,"score":50,"level":0},{"x":1024,"y":351,"score":39,"level":0},{"x":1099,"y":351,"score":37,"level":0},{"x":381,"y":352,"score":61,"level":0},{"x":417,"y":352,"score":74,"level":0},{"x":454,"y":352,"score":27,"level":0},{"x":469,"y":352,"score":60,"level":0},{"x":526,"y":352,"score":43,"level":0},{"x":554,"y":352,"score":71,"level":0},{"x":572,"y":352,"score":54,"level":0},{"x":624,"y":352,"score":37,"level":0},{"x":741,"y":352,"score":76,"level":0},{"x":748,"y":352,"score":59,"level":0},{"x":951,"y":352,"score":28,"level":0},{"x":1006,"y":352,"score":50,"level":0},{"x":1026,"y":352,"score":34,"level":0},{"x":1121,"y":352,"score":28,"level":0},{"x":1127,"y":352,"score":30,"level":0},{"x":1157,"y":352,"score":121,"level":0},{"x":1200,"y":352,"score":27,"level":0},{"x":1294,"y":352,"score":34,"level":0},{"x":1387,"y":352,"score":36,"level":0},{"x":1438,"y":352,"score":44,"level":0},{"x":426,"y":353,"score":47,"level":0},{"x":431,"y":353,"score":30,"level":0},{"x":482,"y":353,"score":112,"level":0},{"x":510,"y":353,"score":32,"level":0},{"x":649,"y":353,"score":52,"level":0},{"x":668,"y":353,"score":158,"level":0},{"x":701,"y":353,"score":42,"level":0},{"x":875,"y":353,"score":80,"level":0},{"x":910,"y":353,"score":61,"level":0},{"x":922,"y":353,"score":63,"level":0},{"x":971,"y":353,"score":63,"level":0},{"x":973,"y":353,"score":55,"level":0},{"x":1052,"y":353,"score":63,"level":0},{"x":1058,"y":353,"score":122,"level":0},{"x":1064,"y":353,"score":63,"level":0},{"x":1132,"y":353,"score":61,"level":0},{"x":1134,"y":353,"score":60,"level":0},{"x":1142,"y":353,"score":63,"level":0},{"x":1151,"y":353,"score":44,"level":0},{"x":1209,"y":353,"score":100,"level":0},{"x":1258,"y":353,"score":101,"level":0},{"x":1307,"y":353,"score":78,"level":0},{"x":1322,"y":353,"score":82,"level":0},{"x":1349,"y":353,"score":105,"level":0},{"x":1443,"y":353,"score":29,"level":0},{"x":468,"y":354,"score":59,"level":0},{"x":499,"y":354,"score":63,"level":0},{"x":550,"y":354,"score":75,"level":0},{"x":613,"y":354,"score":185,"level":0},{"x":673,"y":354,"score":27,"level":0},{"x":680,"y":354,"score":78,"level":0},{"x":694,"y":354,"score":90,"level":0},{"x":741,"y":354,"score":116,"level":0},{"x":927,"y":354,"score":67,"level":0},{"x":952,"y":354,"score":55,"level":0},{"x":990,"y":354,"score":30,"level":0},{"x":1001,"y":354,"score":64,"level":0},{"x":1106,"y":354,"score":96,"level":0},{"x":1110,"y":354,"score":75,"level":0},{"x":1116,"y":354,"score":95,"level":0},{"x":1121,"y":354,"score":74,"level":0},{"x":1223,"y":354,"score":198,"level":0},{"x":1264,"y":354,"score":88,"level":0},{"x":1269,"y":354,"score":62,"level":0},{"x":1310,"y":354,"score":78,"level":0},{"x":1312,"y":354,"score":99,"level":0},{"x":1338,"y":354,"score":30,"level":0},{"x":377,"y":355,"score":156,"level":0},{"x":402,"y":355,"score":85,"level":0},{"x":421,"y":355,"score":35,"level":0},{"x":458,"y":355,"score":74,"level":0},{"x":533,"y":355,"score":72,"level":0},{"x":568,"y":355,"score":28,"level":0},{"x":626,"y":355,"score":26,"level":0},{"x":820,"y":355,"score":110,"level":0},{"x":942,"y":355,"score":26,"level":0},{"x":996,"y":355,"score":99,"level":0},{"x":1006,"y":355,"score":91,"level":0},{"x":1045,"y":355,"score":64,"level":0},{"x":1077,"y":355,"score":122,"level":0},{"x":1134,"y":355,"score":52,"level":0},{"x":1159,"y":355,"score":47,"level":0},{"x":1185,"y":355,"score":62,"level":0},{"x":1246,"y":355,"score":37,"level":0},{"x":1280,"y":355,"score":47,"level":0},{"x":1300,"y":355,"score":62,"level":0},{"x":1355,"y":355,"score":127,"level":0},{"x":1381,"y":355,"score":47,"level":0},{"x":1393,"y":355,"score":36,"level":0},{"x":1437,"y":355,"score":40,"level":0},{"x":1444,"y":355,"score":31,"level":0},{"x":409,"y":356,"score":70,"level":0},{"x":494,"y":356,"score":55,"level":0},{"x":619,"y":356,"score":95,"level":0},{"x":710,"y":356,"score":163,"level":0},{"x":726,"y":356,"score":57,"level":0},{"x":731,"y":356,"score":105,"level":0},{"x":861,"y":356,"score":73,"level":0},{"x":934,"y":356,"score":55,"level":0},{"x":1014,"y":356,"score":88,"level":0},{"x":1055,"y":356,"score":41,"level":0},{"x":1062,"y":356,"score":59,"level":0},{"x":1166,"y":356,"score":111,"level":0},{"x":1218,"y":356,"score":292,"level":0},{"x":1240,"y":356,"score":37,"level":0},{"x":1291,"y":356,"score":122,"level":0},{"x":1361,"y":356,"score":35,"level":0},{"x":1463,"y":356,"score":109,"level":0},{"x":1469,"y":356,"score":52,"level":0},{"x":387,"y":357,"score":83,"level":0},{"x":463,"y":357,"score":124,"level":0},{"x":509,"y":357,"score":54,"level":0},{"x":520,"y":357,"score":96,"level":0},{"x":636,"y":357,"score":26,"level":0},{"x":655,"y":357,"score":140,"level":0},{"x":745,"y":357,"score":49,"level":0},{"x":1099,"y":357,"score":29,"level":0},{"x":1145,"y":357,"score":34,"level":0},{"x":1193,"y":357,"score":36,"level":0},{"x":1211,"y":357,"score":106,"level":0},{"x":1322,"y":357,"score":88,"level":0},{"x":1344,"y":357,"score":66,"level":0},{"x":1476,"y":357,"score":31,"level":0},{"x":418,"y":358,"score":47,"level":0},{"x":454,"y":358,"score":56,"level":0},{"x":620,"y":358,"score":42,"level":0},{"x":724,"y":358,"score":30,"level":0},{"x":939,"y":358,"score":30,"level":0},{"x":995,"y":358,"score":102,"level":0},{"x":1150,"y":358,"score":32,"level":0},{"x":1262,"y":358,"score":78,"level":0},{"x":1356,"y":358,"score":37,"level":0},{"x":1368,"y":358,"score":32,"level":0},{"x":410,"y":359,"score":84,"level":0},{"x":529,"y":359,"score":174,"level":0},{"x":636,"y":359,"score":84,"level":0},{"x":664,"y":359,"score":80,"level":0},{"x":669,"y":359,"score":31,"level":0},{"x":718,"y":359,"score":59,"level":0},{"x":754,"y":359,"score":81,"level":0},{"x":835,"y":359,"score":84,"level":0},{"x":879,"y":359,"score":63,"level":0},{"x":884,"y":359,"score":37,"level":0},{"x":971,"y":359,"score":41,"level":0},{"x":1071,"y":359,"score":96,"level":0},{"x":1100,"y":359,"score":55,"level":0},{"x":1114,"y":359,"score":32,"level":0},{"x":1146,"y":359,"score":50,"level":0},{"x":1266,"y":359,"score":57,"level":0},{"x":1377,"y":359,"score":39,"level":0},{"x":1395,"y":359,"score":92,"level":0},{"x":399,"y":360,"score":127,"level":0},{"x":458,"y":360,"score":74,"level":0},{"x":508,"y":360,"score":72,"level":0},{"x":539,"y":360,"score":207,"level":0},{"x":561,"y":360,"score":113,"level":0},{"x":568,"y":360,"score":262,"level":0},{"x":915,"y":360,"score":86,"level":0},{"x":924,"y":360,"score":83,"level":0},{"x":975,"y":360,"score":89,"level":0},{"x":1002,"y":360,"score":70,"level":0},{"x":1066,"y":360,"score":64,"level":0},{"x":1126,"y":360,"score":41,"level":0},{"x":1253,"y":360,"score":41,"level":0},{"x":1285,"y":360,"score":52,"level":0},{"x":1382,"y":360,"score":120,"level":0},{"x":1444,"y":360,"score":69,"level":0},{"x":1477,"y":360,"score":39,"level":0},{"x":422,"y":361,"score":35,"level":0},{"x":620,"y":361,"score":30,"level":0},{"x":701,"y":361,"score":197,"level":0},{"x":929,"y":361,"score":41,"level":0},{"x":1050,"y":361,"score":69,"level":0},{"x":1061,"y":361,"score":32,"level":0},{"x":1261,"y":361,"score":73,"level":0},{"x":1302,"y":361,"score":143,"level":0},{"x":1321,"y":361,"score":68,"level":0},{"x":1327,"y":361,"score":93,"level":0},{"x":1357,"y":361,"score":32,"level":0},{"x":1390,"y":361,"score":43,"level":0},{"x":1438,"y":361,"score":112,"level":0},{"x":1456,"y":361,"score":33,"level":0},{"x":1488,"y":361,"score":41,"level":0},{"x":419,"y":362,"score":36,"level":0},{"x":550,"y":362,"score":29,"level":0},{"x":683,"y":362,"score":64,"level":0},{"x":691,"y":362,"score":52,"level":0},{"x":709,"y":362,"score":76,"level":0},{"x":724,"y":362,"score":45,"level":0},{"x":830,"y":362,"score":70,"level":0},{"x":867,"y":362,"score":29,"level":0},{"x":946,"y":362,"score":92,"level":0},{"x":1008,"y":362,"score":42,"level":0},{"x":1014,"y":362,"score":41,"level":0},{"x":1044,"y":362,"score":46,"level":0},{"x":1090,"y":362,"score":69,"level":0},{"x":1147,"y":362,"score":41,"level":0},{"x":1158,"y":362,"score":72,"level":0},{"x":1191,"y":362,"score":84,"level":0},{"x":1194,"y":362,"score":44,"level":0},{"x":1207,"y":362,"score":61,"level":0},{"x":1223,"y":362,"score":64,"level":0},{"x":1229,"y":362,"score":80,"level":0},{"x":1255,"y":362,"score":60,"level":0},{"x":1275,"y":362,"score":64,"level":0},{"x":1290,"y":362,"score":89,"level":0},{"x":1342,"y":362,"score":47,"level":0},{"x":1367,"y":362,"score":48,"level":0},{"x":1465,"y":362,"score":28,"level":0},{"x":403,"y":363,"score":34,"level":0},{"x":408,"y":363,"score":40,"level":0},{"x":414,"y":363,"score":155,"level":0},{"x":456,"y":363,"score":38,"level":0},{"x":458,"y":363,"score":34,"level":0},{"x":474,"y":363,"score":36,"level":0},{"x":613,"y":363,"score":61,"level":0},{"x":628,"y":363,"score":34,"level":0},{"x":662,"y":363,"score":71,"level":0},{"x":712,"y":363,"score":48,"level":0},{"x":863,"y":363,"score":82,"level":0},{"x":872,"y":363,"score":43,"level":0},{"x":885,"y":363,"score":38,"level":0},{"x":906,"y":363,"score":111,"level":0},{"x":928,"y":363,"score":70,"level":0},{"x":953,"y":363,"score":49,"level":0},{"x":970,"y":363,"score":42,"level":0},{"x":1025,"y":363,"score":52,"level":0},{"x":1061,"y":363,"score":33,"level":0},{"x":1106,"y":363,"score":82,"level":0},{"x":1115,"y":363,"score":68,"level":0},{"x":1120,"y":363,"score":57,"level":0},{"x":1258,"y":363,"score":38,"level":0},{"x":1264,"y":363,"score":47,"level":0},{"x":1340,"y":363,"score":54,"level":0},{"x":1428,"y":363,"score":59,"level":0},{"x":1483,"y":363,"score":41,"level":0},{"x":433,"y":364,"score":32,"level":0},{"x":531,"y":364,"score":27,"level":0},{"x":572,"y":364,"score":45,"level":0},{"x":622,"y":364,"score":48,"level":0},{"x":642,"y":364,"score":61,"level":0},{"x":678,"y":364,"score":38,"level":0},{"x":743,"y":364,"score":51,"level":0},{"x":778,"y":364,"score":119,"level":0},{"x":878,"y":364,"score":49,"level":0},{"x":1048,"y":364,"score":26,"level":0},{"x":1101,"y":364,"score":37,"level":0},{"x":1164,"y":364,"score":220,"level":0},{"x":1169,"y":364,"score":79,"level":0},{"x":1245,"y":364,"score":57,"level":0},{"x":1269,"y":364,"score":154,"level":0},{"x":1298,"y":364,"score":37,"level":0},{"x":1374,"y":364,"score":44,"level":0},{"x":1449,"y":364,"score":57,"level":0},{"x":388,"y":365,"score":88,"level":0},{"x":403,"y":365,"score":84,"level":0},{"x":631,"y":365,"score":134,"level":0},{"x":749,"y":365,"score":62,"level":0},{"x":840,"y":365,"score":40,"level":0},{"x":960,"y":365,"score":41,"level":0},{"x":973,"y":365,"score":56,"level":0},{"x":997,"y":365,"score":122,"level":0},{"x":1009,"y":365,"score":33,"level":0},{"x":1126,"y":365,"score":41,"level":0},{"x":1145,"y":365,"score":72,"level":0},{"x":1152,"y":365,"score":60,"level":0},{"x":1157,"y":365,"score":30,"level":0},{"x":1258,"y":365,"score":31,"level":0},{"x":1260,"y":365,"score":81,"level":0},{"x":1275,"y":365,"score":48,"level":0},{"x":1357,"y":365,"score":64,"level":0},{"x":1382,"y":365,"score":51,"level":0},{"x":1428,"y":365,"score":62,"level":0},{"x":1434,"y":365,"score":37,"level":0},{"x":1482,"y":365,"score":28,"level":0},{"x":416,"y":366,"score":84,"level":0},{"x":479,"y":366,"score":128,"level":0},{"x":493,"y":366,"score":101,"level":0},{"x":539,"y":366,"score":86,"level":0},{"x":555,"y":366,"score":55,"level":0},{"x":572,"y":366,"score":80,"level":0},{"x":613,"y":366,"score":34,"level":0},{"x":649,"y":366,"score":35,"level":0},{"x":653,"y":366,"score":98,"level":0},{"x":698,"y":366,"score":120,"level":0},{"x":758,"y":366,"score":78,"level":0},{"x":773,"y":366,"score":30,"level":0},{"x":957,"y":366,"score":54,"level":0},{"x":968,"y":366,"score":74,"level":0},{"x":1004,"y":366,"score":34,"level":0},{"x":1041,"y":366,"score":29,"level":0},{"x":1120,"y":366,"score":49,"level":0},{"x":1233,"y":366,"score":63,"level":0},{"x":1270,"y":366,"score":159,"level":0},{"x":1364,"y":366,"score":100,"level":0},{"x":1389,"y":366,"score":91,"level":0},{"x":1408,"y":366,"score":31,"level":0},{"x":395,"y":367,"score":126,"level":0},{"x":428,"y":367,"score":143,"level":0},{"x":636,"y":367,"score":100,"level":0},{"x":821,"y":367,"score":128,"level":0},{"x":893,"y":367,"score":34,"level":0},{"x":1031,"y":367,"score":42,"level":0},{"x":1045,"y":367,"score":54,"level":0},{"x":1063,"y":367,"score":74,"level":0},{"x":1076,"y":367,"score":103,"level":0},{"x":1090,"y":367,"score":32,"level":0},{"x":1114,"y":367,"score":38,"level":0},{"x":1143,"y":367,"score":94,"level":0},{"x":1168,"y":367,"score":88,"level":0},{"x":1243,"y":367,"score":56,"level":0},{"x":1289,"y":367,"score":78,"level":0},{"x":1369,"y":367,"score":36,"level":0},{"x":724,"y":368,"score":36,"level":0},{"x":735,"y":368,"score":30,"level":0},{"x":827,"y":368,"score":91,"level":0},{"x":834,"y":368,"score":41,"level":0},{"x":840,"y":368,"score":54,"level":0},{"x":880,"y":368,"score":58,"level":0},{"x":925,"y":368,"score":52,"level":0},{"x":1047,"y":368,"score":69,"level":0},{"x":1177,"y":368,"score":28,"level":0},{"x":1195,"y":368,"score":55,"level":0},{"x":1223,"y":368,"score":26,"level":0},{"x":1358,"y":368,"score":68,"level":0},{"x":1376,"y":368,"score":30,"level":0},{"x":1428,"y":368,"score":30,"level":0},{"x":412,"y":369,"score":99,"level":0},{"x":563,"y":369,"score":93,"level":0},{"x":657,"y":369,"score":122,"level":0},{"x":670,"y":369,"score":68,"level":0},{"x":690,"y":369,"score":36,"level":0},{"x":702,"y":369,"score":118,"level":0},{"x":709,"y":369,"score":145,"level":0},{"x":744,"y":369,"score":47,"level":0},{"x":936,"y":369,"score":40,"level":0},{"x":954,"y":369,"score":159,"level":0},{"x":1018,"y":369,"score":66,"level":0},{"x":1099,"y":369,"score":27,"level":0},{"x":1115,"y":369,"score":54,"level":0},{"x":1204,"y":369,"score":53,"level":0},{"x":1252,"y":369,"score":41,"level":0},{"x":1296,"y":369,"score":50,"level":0},{"x":1340,"y":369,"score":64,"level":0},{"x":1347,"y":369,"score":59,"level":0},{"x":469,"y":370,"score":106,"level":0},{"x":500,"y":370,"score":73,"level":0},{"x":647,"y":370,"score":58,"level":0},{"x":654,"y":370,"score":93,"level":0},{"x":875,"y":370,"score":125,"level":0},{"x":884,"y":370,"score":44,"level":0},{"x":917,"y":370,"score":31,"level":0},{"x":960,"y":370,"score":78,"level":0},{"x":1000,"y":370,"score":57,"level":0},{"x":1026,"y":370,"score":44,"level":0},{"x":1059,"y":370,"score":57,"level":0},{"x":1071,"y":370,"score":59,"level":0},{"x":1082,"y":370,"score":44,"level":0},{"x":1086,"y":370,"score":82,"level":0},{"x":1093,"y":370,"score":38,"level":0},{"x":1108,"y":370,"score":77,"level":0},{"x":1157,"y":370,"score":58,"level":0},{"x":1166,"y":370,"score":86,"level":0},{"x":1172,"y":370,"score":33,"level":0},{"x":1220,"y":370,"score":60,"level":0},{"x":1228,"y":370,"score":91,"level":0},{"x":1310,"y":370,"score":143,"level":0},{"x":1316,"y":370,"score":31,"level":0},{"x":1462,"y":370,"score":61,"level":0},{"x":1467,"y":370,"score":51,"level":0},{"x":405,"y":371,"score":56,"level":0},{"x":410,"y":371,"score":41,"level":0},{"x":459,"y":371,"score":41,"level":0},{"x":481,"y":371,"score":50,"level":0},{"x":508,"y":371,"score":61,"level":0},{"x":624,"y":371,"score":167,"level":0},{"x":631,"y":371,"score":140,"level":0},{"x":640,"y":371,"score":45,"level":0},{"x":692,"y":371,"score":98,"level":0},{"x":879,"y":371,"score":48,"level":0},{"x":970,"y":371,"score":116,"level":0},{"x":995,"y":371,"score":156,"level":0},{"x":1049,"y":371,"score":28,"level":0},{"x":1199,"y":371,"score":102,"level":0},{"x":1245,"y":371,"score":67,"level":0},{"x":1260,"y":371,"score":31,"level":0},{"x":1333,"y":371,"score":32,"level":0},{"x":1335,"y":371,"score":27,"level":0},{"x":1442,"y":371,"score":27,"level":0},{"x":1487,"y":371,"score":75,"level":0},{"x":449,"y":372,"score":47,"level":0},{"x":454,"y":372,"score":142,"level":0},{"x":478,"y":372,"score":115,"level":0},{"x":514,"y":372,"score":170,"level":0},{"x":539,"y":372,"score":98,"level":0},{"x":665,"y":372,"score":126,"level":0},{"x":679,"y":372,"score":29,"level":0},{"x":796,"y":372,"score":76,"level":0},{"x":864,"y":372,"score":42,"level":0},{"x":906,"y":372,"score":44,"level":0},{"x":1007,"y":372,"score":53,"level":0},{"x":1012,"y":372,"score":150,"level":0},{"x":1088,"y":372,"score":52,"level":0},{"x":1147,"y":372,"score":168,"level":0},{"x":1271,"y":372,"score":40,"level":0},{"x":1395,"y":372,"score":48,"level":0},{"x":1433,"y":372,"score":26,"level":0},{"x":396,"y":373,"score":51,"level":0},{"x":550,"y":373,"score":31,"level":0},{"x":569,"y":373,"score":30,"level":0},{"x":617,"y":373,"score":202,"level":0},{"x":726,"y":373,"score":49,"level":0},{"x":843,"y":373,"score":50,"level":0},{"x":866,"y":373,"score":82,"level":0},{"x":939,"y":373,"score":55,"level":0},{"x":1131,"y":373,"score":40,"level":0},{"x":1137,"y":373,"score":40,"level":0},{"x":1173,"y":373,"score":29,"level":0},{"x":1236,"y":373,"score":35,"level":0},{"x":1265,"y":373,"score":118,"level":0},{"x":1478,"y":373,"score":36,"level":0},{"x":386,"y":374,"score":36,"level":0},{"x":391,"y":374,"score":43,"level":0},{"x":495,"y":374,"score":157,"level":0},{"x":558,"y":374,"score":65,"level":0},{"x":564,"y":374,"score":118,"level":0},{"x":575,"y":374,"score":29,"level":0},{"x":602,"y":374,"score":37,"level":0},{"x":659,"y":374,"score":120,"level":0},{"x":698,"y":374,"score":144,"level":0},{"x":711,"y":374,"score":68,"level":0},{"x":733,"y":374,"score":30,"level":0},{"x":735,"y":374,"score":68,"level":0},{"x":748,"y":374,"score":62,"level":0},{"x":796,"y":374,"score":71,"level":0},{"x":822,"y":374,"score":47,"level":0},{"x":882,"y":374,"score":32,"level":0},{"x":968,"y":374,"score":91,"level":0},{"x":1065,"y":374,"score":168,"level":0},{"x":1110,"y":374,"score":27,"level":0},{"x":1129,"y":374,"score":55,"level":0},{"x":1234,"y":374,"score":57,"level":0},{"x":1314,"y":374,"score":34,"level":0},{"x":1320,"y":374,"score":30,"level":0},{"x":1340,"y":374,"score":42,"level":0},{"x":1376,"y":374,"score":61,"level":0},{"x":1382,"y":374,"score":64,"level":0},{"x":1428,"y":374,"score":116,"level":0},{"x":1433,"y":374,"score":28,"level":0},{"x":423,"y":375,"score":128,"level":0},{"x":631,"y":375,"score":188,"level":0},{"x":672,"y":375,"score":61,"level":0},{"x":688,"y":375,"score":61,"level":0},{"x":713,"y":375,"score":44,"level":0},{"x":877,"y":375,"score":163,"level":0},{"x":906,"y":375,"score":48,"level":0},{"x":963,"y":375,"score":100,"level":0},{"x":978,"y":375,"score":86,"level":0},{"x":1075,"y":375,"score":129,"level":0},{"x":1099,"y":375,"score":67,"level":0},{"x":1212,"y":375,"score":240,"level":0},{"x":1227,"y":375,"score":164,"level":0},{"x":1249,"y":375,"score":38,"level":0},{"x":1259,"y":375,"score":109,"level":0},{"x":1346,"y":375,"score":170,"level":0},{"x":1362,"y":375,"score":119,"level":0},{"x":1458,"y":375,"score":67,"level":0},{"x":400,"y":376,"score":28,"level":0},{"x":405,"y":376,"score":61,"level":0},{"x":412,"y":376,"score":64,"level":0},{"x":429,"y":376,"score":55,"level":0},{"x":570,"y":376,"score":29,"level":0},{"x":830,"y":376,"score":118,"level":0},{"x":866,"y":376,"score":27,"level":0},{"x":887,"y":376,"score":56,"level":0},{"x":919,"y":376,"score":88,"level":0},{"x":1080,"y":376,"score":57,"level":0},{"x":1275,"y":376,"score":82,"level":0},{"x":1337,"y":376,"score":65,"level":0},{"x":480,"y":377,"score":154,"level":0},{"x":573,"y":377,"score":32,"level":0},{"x":623,"y":377,"score":66,"level":0},{"x":727,"y":377,"score":80,"level":0},{"x":759,"y":377,"score":39,"level":0},{"x":973,"y":377,"score":65,"level":0},{"x":982,"y":377,"score":69,"level":0},{"x":1204,"y":377,"score":98,"level":0},{"x":1310,"y":377,"score":31,"level":0},{"x":1335,"y":377,"score":81,"level":0},{"x":1358,"y":377,"score":144,"level":0},{"x":1471,"y":377,"score":79,"level":0},{"x":420,"y":378,"score":88,"level":0},{"x":489,"y":378,"score":36,"level":0},{"x":508,"y":378,"score":138,"level":0},{"x":513,"y":378,"score":44,"level":0},{"x":531,"y":378,"score":45,"level":0},{"x":550,"y":378,"score":66,"level":0},{"x":617,"y":378,"score":57,"level":0},{"x":664,"y":378,"score":116,"level":0},{"x":745,"y":378,"score":185,"level":0},{"x":840,"y":378,"score":122,"level":0},{"x":870,"y":378,"score":63,"level":0},{"x":937,"y":378,"score":38,"level":0},{"x":984,"y":378,"score":71,"level":0},{"x":1004,"y":378,"score":68,"level":0},{"x":1051,"y":378,"score":35,"level":0},{"x":1115,"y":378,"score":117,"level":0},{"x":1148,"y":378,"score":134,"level":0},{"x":1163,"y":378,"score":70,"level":0},{"x":1193,"y":378,"score":210,"level":0},{"x":1236,"y":378,"score":30,"level":0},{"x":1253,"y":378,"score":67,"level":0},{"x":1270,"y":378,"score":51,"level":0},{"x":1306,"y":378,"score":55,"level":0},{"x":1329,"y":378,"score":118,"level":0},{"x":1353,"y":378,"score":106,"level":0},{"x":377,"y":379,"score":71,"level":0},{"x":415,"y":379,"score":92,"level":0},{"x":454,"y":379,"score":211,"level":0},{"x":465,"y":379,"score":37,"level":0},{"x":520,"y":379,"score":145,"level":0},{"x":556,"y":379,"score":94,"level":0},{"x":628,"y":379,"score":74,"level":0},{"x":670,"y":379,"score":85,"level":0},{"x":697,"y":379,"score":188,"level":0},{"x":703,"y":379,"score":70,"level":0},{"x":825,"y":379,"score":43,"level":0},{"x":929,"y":379,"score":59,"level":0},{"x":978,"y":379,"score":46,"level":0},{"x":993,"y":379,"score":34,"level":0},{"x":1121,"y":379,"score":51,"level":0},{"x":1129,"y":379,"score":115,"level":0},{"x":1137,"y":379,"score":36,"level":0},{"x":1144,"y":379,"score":40,"level":0},{"x":1167,"y":379,"score":50,"level":0},{"x":1180,"y":379,"score":70,"level":0},{"x":1187,"y":379,"score":105,"level":0},{"x":1367,"y":379,"score":151,"level":0},{"x":494,"y":380,"score":51,"level":0},{"x":516,"y":380,"score":66,"level":0},{"x":546,"y":380,"score":63,"level":0},{"x":602,"y":380,"score":54,"level":0},{"x":617,"y":380,"score":54,"level":0},{"x":642,"y":380,"score":29,"level":0},{"x":647,"y":380,"score":81,"level":0},{"x":739,"y":380,"score":41,"level":0},{"x":742,"y":380,"score":65,"level":0},{"x":990,"y":380,"score":32,"level":0},{"x":1025,"y":380,"score":98,"level":0},{"x":1042,"y":380,"score":95,"level":0},{"x":1081,"y":380,"score":30,"level":0},{"x":1093,"y":380,"score":38,"level":0},{"x":1102,"y":380,"score":42,"level":0},{"x":1107,"y":380,"score":99,"level":0},{"x":1229,"y":380,"score":224,"level":0},{"x":1234,"y":380,"score":33,"level":0},{"x":1265,"y":380,"score":98,"level":0},{"x":1485,"y":380,"score":27,"level":0},{"x":410,"y":381,"score":32,"level":0},{"x":424,"y":381,"score":133,"level":0},{"x":553,"y":381,"score":105,"level":0},{"x":583,"y":381,"score":36,"level":0},{"x":638,"y":381,"score":26,"level":0},{"x":683,"y":381,"score":72,"level":0},{"x":688,"y":381,"score":70,"level":0},{"x":690,"y":381,"score":64,"level":0},{"x":716,"y":381,"score":58,"level":0},{"x":723,"y":381,"score":26,"level":0},{"x":821,"y":381,"score":50,"level":0},{"x":826,"y":381,"score":33,"level":0},{"x":877,"y":381,"score":30,"level":0},{"x":1003,"y":381,"score":68,"level":0},{"x":1133,"y":381,"score":29,"level":0},{"x":1150,"y":381,"score":58,"level":0},{"x":1206,"y":381,"score":69,"level":0},{"x":1212,"y":381,"score":168,"level":0},{"x":1224,"y":381,"score":26,"level":0},{"x":1375,"y":381,"score":74,"level":0},{"x":1476,"y":381,"score":30,"level":0},{"x":403,"y":382,"score":53,"level":0},{"x":429,"y":382,"score":88,"level":0},{"x":572,"y":382,"score":141,"level":0},{"x":614,"y":382,"score":49,"level":0},{"x":661,"y":382,"score":45,"level":0},{"x":706,"y":382,"score":120,"level":0},{"x":844,"y":382,"score":29,"level":0},{"x":971,"y":382,"score":54,"level":0},{"x":1009,"y":382,"score":30,"level":0},{"x":1024,"y":382,"score":62,"level":0},{"x":1139,"y":382,"score":71,"level":0},{"x":1156,"y":382,"score":74,"level":0},{"x":1319,"y":382,"score":52,"level":0},{"x":1326,"y":382,"score":32,"level":0},{"x":1349,"y":382,"score":40,"level":0},{"x":1441,"y":382,"score":32,"level":0},{"x":1467,"y":382,"score":34,"level":0},{"x":673,"y":383,"score":28,"level":0},{"x":719,"y":383,"score":78,"level":0},{"x":864,"y":383,"score":156,"level":0},{"x":875,"y":383,"score":99,"level":0},{"x":905,"y":383,"score":91,"level":0},{"x":915,"y":383,"score":56,"level":0},{"x":920,"y":383,"score":63,"level":0},{"x":958,"y":383,"score":38,"level":0},{"x":973,"y":383,"score":82,"level":0},{"x":1007,"y":383,"score":29,"level":0},{"x":1021,"y":383,"score":74,"level":0},{"x":1073,"y":383,"score":42,"level":0},{"x":1112,"y":383,"score":52,"level":0},{"x":1195,"y":383,"score":226,"level":0},{"x":1217,"y":383,"score":34,"level":0},{"x":1238,"y":383,"score":129,"level":0},{"x":1270,"y":383,"score":56,"level":0},{"x":1329,"y":383,"score":27,"level":0},{"x":1338,"y":383,"score":36,"level":0},{"x":1355,"y":383,"score":126,"level":0},{"x":1360,"y":383,"score":63,"level":0},{"x":1394,"y":383,"score":71,"level":0},{"x":1475,"y":383,"score":59,"level":0},{"x":414,"y":384,"score":61,"level":0},{"x":454,"y":384,"score":87,"level":0},{"x":478,"y":384,"score":60,"level":0},{"x":524,"y":384,"score":46,"level":0},{"x":534,"y":384,"score":147,"level":0},{"x":550,"y":384,"score":36,"level":0},{"x":621,"y":384,"score":154,"level":0},{"x":652,"y":384,"score":123,"level":0},{"x":670,"y":384,"score":102,"level":0},{"x":733,"y":384,"score":60,"level":0},{"x":825,"y":384,"score":151,"level":0},{"x":880,"y":384,"score":26,"level":0},{"x":949,"y":384,"score":56,"level":0},{"x":965,"y":384,"score":242,"level":0},{"x":982,"y":384,"score":113,"level":0},{"x":1012,"y":384,"score":33,"level":0},{"x":1051,"y":384,"score":36,"level":0},{"x":1057,"y":384,"score":34,"level":0},{"x":1082,"y":384,"score":36,"level":0},{"x":1087,"y":384,"score":77,"level":0},{"x":1118,"y":384,"score":58,"level":0},{"x":1123,"y":384,"score":53,"level":0},{"x":1189,"y":384,"score":104,"level":0},{"x":1222,"y":384,"score":45,"level":0},{"x":1244,"y":384,"score":52,"level":0},{"x":1311,"y":384,"score":72,"level":0},{"x":1318,"y":384,"score":97,"level":0},{"x":1372,"y":384,"score":46,"level":0},{"x":1484,"y":384,"score":55,"level":0},{"x":385,"y":385,"score":102,"level":0},{"x":461,"y":385,"score":27,"level":0},{"x":491,"y":385,"score":171,"level":0},{"x":529,"y":385,"score":35,"level":0},{"x":617,"y":385,"score":30,"level":0},{"x":659,"y":385,"score":51,"level":0},{"x":886,"y":385,"score":30,"level":0},{"x":911,"y":385,"score":42,"level":0},{"x":951,"y":385,"score":50,"level":0},{"x":1020,"y":385,"score":39,"level":0},{"x":1227,"y":385,"score":180,"level":0},{"x":1256,"y":385,"score":58,"level":0},{"x":1276,"y":385,"score":30,"level":0},{"x":1366,"y":385,"score":34,"level":0},{"x":1458,"y":385,"score":94,"level":0},{"x":1470,"y":385,"score":98,"level":0},{"x":471,"y":386,"score":49,"level":0},{"x":497,"y":386,"score":53,"level":0},{"x":545,"y":386,"score":46,"level":0},{"x":664,"y":386,"score":94,"level":0},{"x":699,"y":386,"score":74,"level":0},{"x":752,"y":386,"score":39,"level":0},{"x":921,"y":386,"score":46,"level":0},{"x":934,"y":386,"score":79,"level":0},{"x":960,"y":386,"score":58,"level":0},{"x":1029,"y":386,"score":65,"level":0},{"x":1050,"y":386,"score":31,"level":0},{"x":1086,"y":386,"score":63,"level":0},{"x":1133,"y":386,"score":76,"level":0},{"x":1167,"y":386,"score":57,"level":0},{"x":1447,"y":386,"score":48,"level":0},{"x":401,"y":387,"score":64,"level":0},{"x":419,"y":387,"score":121,"level":0},{"x":499,"y":387,"score":60,"level":0},{"x":528,"y":387,"score":83,"level":0},{"x":574,"y":387,"score":65,"level":0},{"x":747,"y":387,"score":115,"level":0},{"x":840,"y":387,"score":40,"level":0},{"x":878,"y":387,"score":32,"level":0},{"x":977,"y":387,"score":84,"level":0},{"x":987,"y":387,"score":33,"level":0},{"x":1007,"y":387,"score":27,"level":0},{"x":1139,"y":387,"score":34,"level":0},{"x":1143,"y":387,"score":50,"level":0},{"x":1214,"y":387,"score":122,"level":0},{"x":1246,"y":387,"score":58,"level":0},{"x":1326,"y":387,"score":98,"level":0},{"x":1345,"y":387,"score":76,"level":0},{"x":1382,"y":387,"score":82,"level":0},{"x":1387,"y":387,"score":44,"level":0},{"x":1389,"y":387,"score":57,"level":0},{"x":1438,"y":387,"score":114,"level":0},{"x":727,"y":388,"score":26,"level":0},{"x":804,"y":388,"score":42,"level":0},{"x":824,"y":388,"score":122,"level":0},{"x":845,"y":388,"score":60,"level":0},{"x":945,"y":388,"score":37,"level":0},{"x":995,"y":388,"score":105,"level":0},{"x":1042,"y":388,"score":112,"level":0},{"x":1098,"y":388,"score":64,"level":0},{"x":1113,"y":388,"score":47,"level":0},{"x":1147,"y":388,"score":62,"level":0},{"x":1206,"y":388,"score":44,"level":0},{"x":1230,"y":388,"score":33,"level":0},{"x":1334,"y":388,"score":28,"level":0},{"x":1350,"y":388,"score":60,"level":0},{"x":1393,"y":388,"score":26,"level":0},{"x":1450,"y":388,"score":60,"level":0},{"x":1463,"y":388,"score":76,"level":0},{"x":1490,"y":388,"score":44,"level":0},{"x":652,"y":389,"score":86,"level":0},{"x":675,"y":389,"score":53,"level":0},{"x":721,"y":389,"score":95,"level":0},{"x":738,"y":389,"score":38,"level":0},{"x":814,"y":389,"score":28,"level":0},{"x":893,"y":389,"score":66,"level":0},{"x":997,"y":389,"score":147,"level":0},{"x":1004,"y":389,"score":108,"level":0},{"x":1078,"y":389,"score":34,"level":0},{"x":1235,"y":389,"score":118,"level":0},{"x":1243,"y":389,"score":30,"level":0},{"x":1252,"y":389,"score":55,"level":0},{"x":1263,"y":389,"score":66,"level":0},{"x":1318,"y":389,"score":50,"level":0},{"x":1336,"y":389,"score":41,"level":0},{"x":1389,"y":389,"score":55,"level":0},{"x":1444,"y":389,"score":42,"level":0},{"x":1479,"y":389,"score":31,"level":0},{"x":1482,"y":389,"score":44,"level":0},{"x":392,"y":390,"score":112,"level":0},{"x":416,"y":390,"score":67,"level":0},{"x":423,"y":390,"score":72,"level":0},{"x":495,"y":390,"score":34,"level":0},{"x":505,"y":390,"score":97,"level":0},{"x":539,"y":390,"score":46,"level":0},{"x":552,"y":390,"score":64,"level":0},{"x":622,"y":390,"score":120,"level":0},{"x":627,"y":390,"score":150,"level":0},{"x":647,"y":390,"score":104,"level":0},{"x":660,"y":390,"score":146,"level":0},{"x":692,"y":390,"score":50,"level":0},{"x":863,"y":390,"score":47,"level":0},{"x":882,"y":390,"score":95,"level":0},{"x":925,"y":390,"score":29,"level":0},{"x":972,"y":390,"score":47,"level":0},{"x":977,"y":390,"score":81,"level":0},{"x":1021,"y":390,"score":62,"level":0},{"x":1049,"y":390,"score":42,"level":0},{"x":1257,"y":390,"score":57,"level":0},{"x":1366,"y":390,"score":82,"level":0},{"x":1376,"y":390,"score":60,"level":0},{"x":1453,"y":390,"score":64,"level":0},{"x":1463,"y":390,"score":100,"level":0},{"x":377,"y":391,"score":152,"level":0},{"x":454,"y":391,"score":65,"level":0},{"x":481,"y":391,"score":69,"level":0},{"x":546,"y":391,"score":28,"level":0},{"x":671,"y":391,"score":38,"level":0},{"x":682,"y":391,"score":57,"level":0},{"x":707,"y":391,"score":36,"level":0},{"x":829,"y":391,"score":139,"level":0},{"x":869,"y":391,"score":86,"level":0},{"x":913,"y":391,"score":36,"level":0},{"x":928,"y":391,"score":29,"level":0},{"x":933,"y":391,"score":124,"level":0},{"x":953,"y":391,"score":53,"level":0},{"x":966,"y":391,"score":113,"level":0},{"x":987,"y":391,"score":70,"level":0},{"x":1016,"y":391,"score":144,"level":0},{"x":1047,"y":391,"score":29,"level":0},{"x":1068,"y":391,"score":48,"level":0},{"x":1106,"y":391,"score":42,"level":0},{"x":1133,"y":391,"score":32,"level":0},{"x":1160,"y":391,"score":94,"level":0},{"x":1240,"y":391,"score":46,"level":0},{"x":1314,"y":391,"score":56,"level":0},{"x":1354,"y":391,"score":46,"level":0},{"x":1432,"y":391,"score":40,"level":0},{"x":401,"y":392,"score":67,"level":0},{"x":413,"y":392,"score":50,"level":0},{"x":521,"y":392,"score":27,"level":0},{"x":533,"y":392,"score":120,"level":0},{"x":539,"y":392,"score":36,"level":0},{"x":573,"y":392,"score":94,"level":0},{"x":922,"y":392,"score":35,"level":0},{"x":1124,"y":392,"score":33,"level":0},{"x":1144,"y":392,"score":90,"level":0},{"x":1156,"y":392,"score":70,"level":0},{"x":1245,"y":392,"score":118,"level":0},{"x":1273,"y":392,"score":141,"level":0},{"x":1308,"y":392,"score":32,"level":0},{"x":1327,"y":392,"score":114,"level":0},{"x":1372,"y":392,"score":57,"level":0},{"x":1454,"y":392,"score":48,"level":0},{"x":1475,"y":392,"score":65,"level":0},{"x":1488,"y":392,"score":42,"level":0},{"x":419,"y":393,"score":136,"level":0},{"x":455,"y":393,"score":104,"level":0},{"x":462,"y":393,"score":63,"level":0},{"x":560,"y":393,"score":80,"level":0},{"x":796,"y":393,"score":28,"level":0},{"x":824,"y":393,"score":181,"level":0},{"x":861,"y":393,"score":29,"level":0},{"x":876,"y":393,"score":58,"level":0},{"x":946,"y":393,"score":111,"level":0},{"x":986,"y":393,"score":80,"level":0},{"x":1004,"y":393,"score":36,"level":0},{"x":1024,"y":393,"score":148,"level":0},{"x":1047,"y":393,"score":38,"level":0},{"x":1097,"y":393,"score":59,"level":0},{"x":1137,"y":393,"score":29,"level":0},{"x":1208,"y":393,"score":72,"level":0},{"x":1215,"y":393,"score":110,"level":0},{"x":1346,"y":393,"score":90,"level":0},{"x":1360,"y":393,"score":97,"level":0},{"x":1365,"y":393,"score":26,"level":0},{"x":1438,"y":393,"score":72,"level":0},{"x":1440,"y":393,"score":55,"level":0},{"x":407,"y":394,"score":30,"level":0},{"x":639,"y":394,"score":42,"level":0},{"x":658,"y":394,"score":104,"level":0},{"x":699,"y":394,"score":118,"level":0},{"x":747,"y":394,"score":39,"level":0},{"x":766,"y":394,"score":28,"level":0},{"x":818,"y":394,"score":30,"level":0},{"x":840,"y":394,"score":29,"level":0},{"x":906,"y":394,"score":87,"level":0},{"x":1011,"y":394,"score":70,"level":0},{"x":1063,"y":394,"score":135,"level":0},{"x":1200,"y":394,"score":27,"level":0},{"x":1229,"y":394,"score":75,"level":0},{"x":1234,"y":394,"score":104,"level":0},{"x":1254,"y":394,"score":91,"level":0},{"x":1279,"y":394,"score":88,"level":0},{"x":1372,"y":394,"score":84,"level":0},{"x":1394,"y":394,"score":181,"level":0},{"x":1434,"y":394,"score":62,"level":0},{"x":1458,"y":394,"score":115,"level":0},{"x":1463,"y":394,"score":43,"level":0},{"x":413,"y":395,"score":60,"level":0},{"x":418,"y":395,"score":35,"level":0},{"x":497,"y":395,"score":54,"level":0},{"x":667,"y":395,"score":74,"level":0},{"x":694,"y":395,"score":49,"level":0},{"x":713,"y":395,"score":79,"level":0},{"x":865,"y":395,"score":106,"level":0},{"x":881,"y":395,"score":52,"level":0},{"x":885,"y":395,"score":60,"level":0},{"x":971,"y":395,"score":72,"level":0},{"x":1001,"y":395,"score":121,"level":0},{"x":1084,"y":395,"score":97,"level":0},{"x":1111,"y":395,"score":48,"level":0},{"x":1135,"y":395,"score":44,"level":0},{"x":1160,"y":395,"score":29,"level":0},{"x":1318,"y":395,"score":139,"level":0},{"x":1378,"y":395,"score":168,"level":0},{"x":1441,"y":395,"score":26,"level":0},{"x":1448,"y":395,"score":81,"level":0},{"x":394,"y":396,"score":55,"level":0},{"x":431,"y":396,"score":64,"level":0},{"x":568,"y":396,"score":32,"level":0},{"x":627,"y":396,"score":41,"level":0},{"x":800,"y":396,"score":38,"level":0},{"x":807,"y":396,"score":41,"level":0},{"x":912,"y":396,"score":32,"level":0},{"x":928,"y":396,"score":65,"level":0},{"x":1017,"y":396,"score":57,"level":0},{"x":1046,"y":396,"score":39,"level":0},{"x":1052,"y":396,"score":79,"level":0},{"x":1105,"y":396,"score":49,"level":0},{"x":1198,"y":396,"score":67,"level":0},{"x":1240,"y":396,"score":30,"level":0},{"x":1287,"y":396,"score":185,"level":0},{"x":1426,"y":396,"score":94,"level":0},{"x":1468,"y":396,"score":43,"level":0},{"x":382,"y":397,"score":49,"level":0},{"x":400,"y":397,"score":54,"level":0},{"x":416,"y":397,"score":51,"level":0},{"x":502,"y":397,"score":83,"level":0},{"x":528,"y":397,"score":57,"level":0},{"x":539,"y":397,"score":135,"level":0},{"x":548,"y":397,"score":97,"level":0},{"x":570,"y":397,"score":42,"level":0},{"x":661,"y":397,"score":88,"level":0},{"x":667,"y":397,"score":102,"level":0},{"x":827,"y":397,"score":29,"level":0},{"x":946,"y":397,"score":63,"level":0},{"x":948,"y":397,"score":120,"level":0},{"x":954,"y":397,"score":159,"level":0},{"x":1142,"y":397,"score":41,"level":0},{"x":1177,"y":397,"score":35,"level":0},{"x":1246,"y":397,"score":31,"level":0},{"x":1248,"y":397,"score":52,"level":0},{"x":1262,"y":397,"score":62,"level":0},{"x":1293,"y":397,"score":27,"level":0},{"x":1339,"y":397,"score":73,"level":0},{"x":1432,"y":397,"score":58,"level":0},{"x":1443,"y":397,"score":67,"level":0},{"x":1488,"y":397,"score":88,"level":0},{"x":389,"y":398,"score":30,"level":0},{"x":489,"y":398,"score":164,"level":0},{"x":635,"y":398,"score":34,"level":0},{"x":656,"y":398,"score":48,"level":0},{"x":689,"y":398,"score":31,"level":0},{"x":704,"y":398,"score":48,"level":0},{"x":725,"y":398,"score":136,"level":0},{"x":748,"y":398,"score":35,"level":0},{"x":753,"y":398,"score":60,"level":0},{"x":882,"y":398,"score":31,"level":0},{"x":937,"y":398,"score":108,"level":0},{"x":1008,"y":398,"score":39,"level":0},{"x":1042,"y":398,"score":98,"level":0},{"x":1072,"y":398,"score":44,"level":0},{"x":1123,"y":398,"score":82,"level":0},{"x":1192,"y":398,"score":106,"level":0},{"x":1222,"y":398,"score":111,"level":0},{"x":1230,"y":398,"score":95,"level":0},{"x":1253,"y":398,"score":39,"level":0},{"x":1372,"y":398,"score":44,"level":0},{"x":407,"y":399,"score":55,"level":0},{"x":458,"y":399,"score":56,"level":0},{"x":463,"y":399,"score":118,"level":0},{"x":471,"y":399,"score":164,"level":0},{"x":495,"y":399,"score":31,"level":0},{"x":528,"y":399,"score":51,"level":0},{"x":567,"y":399,"score":40,"level":0},{"x":629,"y":399,"score":26,"level":0},{"x":662,"y":399,"score":77,"level":0},{"x":684,"y":399,"score":109,"level":0},{"x":847,"y":399,"score":78,"level":0},{"x":920,"y":399,"score":83,"level":0},{"x":962,"y":399,"score":32,"level":0},{"x":971,"y":399,"score":76,"level":0},{"x":1173,"y":399,"score":36,"level":0},{"x":1330,"y":399,"score":33,"level":0},{"x":1357,"y":399,"score":185,"level":0},{"x":1367,"y":399,"score":169,"level":0},{"x":1434,"y":399,"score":98,"level":0},{"x":413,"y":400,"score":122,"level":0},{"x":562,"y":400,"score":49,"level":0},{"x":612,"y":400,"score":38,"level":0},{"x":797,"y":400,"score":47,"level":0},{"x":877,"y":400,"score":48,"level":0},{"x":884,"y":400,"score":68,"level":0},{"x":976,"y":400,"score":96,"level":0},{"x":990,"y":400,"score":101,"level":0},{"x":1024,"y":400,"score":54,"level":0},{"x":1072,"y":400,"score":29,"level":0},{"x":1129,"y":400,"score":39,"level":0},{"x":1154,"y":400,"score":156,"level":0},{"x":1160,"y":400,"score":105,"level":0},{"x":1282,"y":400,"score":53,"level":0},{"x":1335,"y":400,"score":84,"level":0},{"x":1342,"y":400,"score":35,"level":0},{"x":1381,"y":400,"score":62,"level":0},{"x":1395,"y":400,"score":32,"level":0},{"x":1473,"y":400,"score":57,"level":0},{"x":386,"y":401,"score":61,"level":0},{"x":482,"y":401,"score":76,"level":0},{"x":503,"y":401,"score":32,"level":0},{"x":510,"y":401,"score":52,"level":0},{"x":518,"y":401,"score":37,"level":0},{"x":687,"y":401,"score":49,"level":0},{"x":792,"y":401,"score":31,"level":0},{"x":825,"y":401,"score":36,"level":0},{"x":963,"y":401,"score":32,"level":0},{"x":999,"y":401,"score":59,"level":0},{"x":1017,"y":401,"score":30,"level":0},{"x":1112,"y":401,"score":56,"level":0},{"x":1139,"y":401,"score":61,"level":0},{"x":1146,"y":401,"score":32,"level":0},{"x":1178,"y":401,"score":58,"level":0},{"x":1247,"y":401,"score":46,"level":0},{"x":1255,"y":401,"score":120,"level":0},{"x":1270,"y":401,"score":98,"level":0},{"x":1275,"y":401,"score":117,"level":0},{"x":1371,"y":401,"score":84,"level":0},{"x":1435,"y":401,"score":80,"level":0},{"x":1442,"y":401,"score":32,"level":0},{"x":1461,"y":401,"score":54,"level":0},{"x":377,"y":402,"score":39,"level":0},{"x":432,"y":402,"score":53,"level":0},{"x":441,"y":402,"score":35,"level":0},{"x":538,"y":402,"score":39,"level":0},{"x":703,"y":402,"score":29,"level":0},{"x":738,"y":402,"score":170,"level":0},{"x":765,"y":402,"score":65,"level":0},{"x":851,"y":402,"score":70,"level":0},{"x":913,"y":402,"score":44,"level":0},{"x":940,"y":402,"score":26,"level":0},{"x":949,"y":402,"score":119,"level":0},{"x":961,"y":402,"score":50,"level":0},{"x":1058,"y":402,"score":68,"level":0},{"x":1137,"y":402,"score":52,"level":0},{"x":1218,"y":402,"score":33,"level":0},{"x":1261,"y":402,"score":101,"level":0},{"x":1389,"y":402,"score":42,"level":0},{"x":1451,"y":402,"score":46,"level":0},{"x":398,"y":403,"score":41,"level":0},{"x":415,"y":403,"score":88,"level":0},{"x":461,"y":403,"score":52,"level":0},{"x":472,"y":403,"score":49,"level":0},{"x":477,"y":403,"score":43,"level":0},{"x":522,"y":403,"score":44,"level":0},{"x":552,"y":403,"score":105,"level":0},{"x":576,"y":403,"score":29,"level":0},{"x":640,"y":403,"score":65,"level":0},{"x":672,"y":403,"score":30,"level":0},{"x":686,"y":403,"score":75,"level":0},{"x":900,"y":403,"score":34,"level":0},{"x":926,"y":403,"score":48,"level":0},{"x":955,"y":403,"score":101,"level":0},{"x":1103,"y":403,"score":51,"level":0},{"x":1143,"y":403,"score":59,"level":0},{"x":1201,"y":403,"score":35,"level":0},{"x":1355,"y":403,"score":43,"level":0},{"x":1454,"y":403,"score":54,"level":0},{"x":1456,"y":403,"score":39,"level":0},{"x":1469,"y":403,"score":32,"level":0},{"x":1488,"y":403,"score":115,"level":0},{"x":533,"y":404,"score":78,"level":0},{"x":568,"y":404,"score":65,"level":0},{"x":617,"y":404,"score":120,"level":0},{"x":662,"y":404,"score":29,"level":0},{"x":666,"y":404,"score":64,"level":0},{"x":678,"y":404,"score":181,"level":0},{"x":741,"y":404,"score":66,"level":0},{"x":747,"y":404,"score":26,"level":0},{"x":829,"y":404,"score":123,"level":0},{"x":840,"y":404,"score":50,"level":0},{"x":845,"y":404,"score":62,"level":0},{"x":885,"y":404,"score":48,"level":0},{"x":895,"y":404,"score":40,"level":0},{"x":1072,"y":404,"score":61,"level":0},{"x":1077,"y":404,"score":37,"level":0},{"x":1089,"y":404,"score":38,"level":0},{"x":1092,"y":404,"score":32,"level":0},{"x":1114,"y":404,"score":39,"level":0},{"x":1135,"y":404,"score":36,"level":0},{"x":1187,"y":404,"score":81,"level":0},{"x":1242,"y":404,"score":124,"level":0},{"x":1325,"y":404,"score":51,"level":0},{"x":1331,"y":404,"score":50,"level":0},{"x":1360,"y":404,"score":83,"level":0},{"x":1477,"y":404,"score":94,"level":0},{"x":423,"y":405,"score":28,"level":0},{"x":456,"y":405,"score":33,"level":0},{"x":490,"y":405,"score":48,"level":0},{"x":630,"y":405,"score":92,"level":0},{"x":726,"y":405,"score":50,"level":0},{"x":926,"y":405,"score":79,"level":0},{"x":950,"y":405,"score":136,"level":0},{"x":970,"y":405,"score":43,"level":0},{"x":1020,"y":405,"score":68,"level":0},{"x":1047,"y":405,"score":89,"level":0},{"x":1067,"y":405,"score":27,"level":0},{"x":1178,"y":405,"score":110,"level":0},{"x":1196,"y":405,"score":36,"level":0},{"x":1426,"y":405,"score":89,"level":0},{"x":1465,"y":405,"score":28,"level":0},{"x":412,"y":406,"score":55,"level":0},{"x":435,"y":406,"score":99,"level":0},{"x":472,"y":406,"score":70,"level":0},{"x":530,"y":406,"score":77,"level":0},{"x":684,"y":406,"score":62,"level":0},{"x":697,"y":406,"score":30,"level":0},{"x":800,"y":406,"score":50,"level":0},{"x":820,"y":406,"score":26,"level":0},{"x":865,"y":406,"score":138,"level":0},{"x":895,"y":406,"score":66,"level":0},{"x":998,"y":406,"score":73,"level":0},{"x":1130,"y":406,"score":42,"level":0},{"x":1192,"y":406,"score":106,"level":0},{"x":1234,"y":406,"score":87,"level":0},{"x":1380,"y":406,"score":41,"level":0},{"x":394,"y":407,"score":38,"level":0},{"x":430,"y":407,"score":216,"level":0},{"x":463,"y":407,"score":68,"level":0},{"x":483,"y":407,"score":58,"level":0},{"x":622,"y":407,"score":32,"level":0},{"x":631,"y":407,"score":31,"level":0},{"x":689,"y":407,"score":139,"level":0},{"x":722,"y":407,"score":68,"level":0},{"x":738,"y":407,"score":39,"level":0},{"x":786,"y":407,"score":73,"level":0},{"x":815,"y":407,"score":39,"level":0},{"x":965,"y":407,"score":82,"level":0},{"x":971,"y":407,"score":83,"level":0},{"x":976,"y":407,"score":42,"level":0},{"x":1008,"y":407,"score":26,"level":0},{"x":1155,"y":407,"score":69,"level":0},{"x":1220,"y":407,"score":150,"level":0},{"x":1265,"y":407,"score":150,"level":0},{"x":1318,"y":407,"score":59,"level":0},{"x":1336,"y":407,"score":43,"level":0},{"x":1367,"y":407,"score":106,"level":0},{"x":1373,"y":407,"score":239,"level":0},{"x":1470,"y":407,"score":92,"level":0},{"x":494,"y":408,"score":53,"level":0},{"x":542,"y":408,"score":85,"level":0},{"x":562,"y":408,"score":76,"level":0},{"x":644,"y":408,"score":29,"level":0},{"x":687,"y":408,"score":131,"level":0},{"x":730,"y":408,"score":31,"level":0},{"x":937,"y":408,"score":91,"level":0},{"x":1141,"y":408,"score":45,"level":0},{"x":1167,"y":408,"score":42,"level":0},{"x":1275,"y":408,"score":103,"level":0},{"x":1289,"y":408,"score":33,"level":0},{"x":1392,"y":408,"score":71,"level":0},{"x":1428,"y":408,"score":76,"level":0},{"x":1484,"y":408,"score":33,"level":0},{"x":390,"y":409,"score":37,"level":0},{"x":456,"y":409,"score":83,"level":0},{"x":468,"y":409,"score":144,"level":0},{"x":502,"y":409,"score":59,"level":0},{"x":533,"y":409,"score":45,"level":0},{"x":574,"y":409,"score":136,"level":0},{"x":707,"y":409,"score":43,"level":0},{"x":717,"y":409,"score":148,"level":0},{"x":742,"y":409,"score":112,"level":0},{"x":876,"y":409,"score":62,"level":0},{"x":885,"y":409,"score":103,"level":0},{"x":947,"y":409,"score":36,"level":0},{"x":957,"y":409,"score":29,"level":0},{"x":1009,"y":409,"score":34,"level":0},{"x":1123,"y":409,"score":57,"level":0},{"x":1128,"y":409,"score":70,"level":0},{"x":1188,"y":409,"score":53,"level":0},{"x":1204,"y":409,"score":52,"level":0},{"x":1249,"y":409,"score":146,"level":0},{"x":1256,"y":409,"score":29,"level":0},{"x":1323,"y":409,"score":26,"level":0},{"x":1345,"y":409,"score":66,"level":0},{"x":1384,"y":409,"score":94,"level":0},{"x":1453,"y":409,"score":26,"level":0},{"x":1479,"y":409,"score":109,"level":0},{"x":473,"y":410,"score":58,"level":0},{"x":629,"y":410,"score":39,"level":0},{"x":652,"y":410,"score":26,"level":0},{"x":693,"y":410,"score":76,"level":0},{"x":810,"y":410,"score":28,"level":0},{"x":880,"y":410,"score":44,"level":0},{"x":927,"y":410,"score":45,"level":0},{"x":952,"y":410,"score":42,"level":0},{"x":976,"y":410,"score":134,"level":0},{"x":1014,"y":410,"score":65,"level":0},{"x":1062,"y":410,"score":51,"level":0},{"x":1075,"y":410,"score":30,"level":0},{"x":1080,"y":410,"score":39,"level":0},{"x":1146,"y":410,"score":44,"level":0},{"x":1172,"y":410,"score":67,"level":0},{"x":1238,"y":410,"score":28,"level":0},{"x":1316,"y":410,"score":81,"level":0},{"x":1321,"y":410,"score":29,"level":0},{"x":1340,"y":410,"score":72,"level":0},{"x":1446,"y":410,"score":41,"level":0},{"x":424,"y":411,"score":34,"level":0},{"x":525,"y":411,"score":52,"level":0},{"x":530,"y":411,"score":58,"level":0},{"x":635,"y":411,"score":34,"level":0},{"x":676,"y":411,"score":154,"level":0},{"x":681,"y":411,"score":68,"level":0},{"x":713,"y":411,"score":36,"level":0},{"x":956,"y":411,"score":27,"level":0},{"x":967,"y":411,"score":114,"level":0},{"x":982,"y":411,"score":64,"level":0},{"x":988,"y":411,"score":137,"level":0},{"x":1000,"y":411,"score":130,"level":0},{"x":1017,"y":411,"score":65,"level":0},{"x":1161,"y":411,"score":103,"level":0},{"x":1166,"y":411,"score":51,"level":0},{"x":1435,"y":411,"score":92,"level":0},{"x":384,"y":412,"score":58,"level":0},{"x":479,"y":412,"score":86,"level":0},{"x":491,"y":412,"score":62,"level":0},{"x":619,"y":412,"score":70,"level":0},{"x":725,"y":412,"score":44,"level":0},{"x":818,"y":412,"score":35,"level":0},{"x":917,"y":412,"score":39,"level":0},{"x":1009,"y":412,"score":74,"level":0},{"x":1053,"y":412,"score":60,"level":0},{"x":1106,"y":412,"score":47,"level":0},{"x":1229,"y":412,"score":100,"level":0},{"x":1235,"y":412,"score":34,"level":0},{"x":1253,"y":412,"score":70,"level":0},{"x":1256,"y":412,"score":38,"level":0},{"x":1260,"y":412,"score":56,"level":0},{"x":405,"y":413,"score":82,"level":0},{"x":409,"y":413,"score":92,"level":0},{"x":746,"y":413,"score":51,"level":0},{"x":786,"y":413,"score":160,"level":0},{"x":808,"y":413,"score":51,"level":0},{"x":936,"y":413,"score":38,"level":0},{"x":974,"y":413,"score":48,"level":0},{"x":999,"y":413,"score":99,"level":0},{"x":1152,"y":413,"score":73,"level":0},{"x":1193,"y":413,"score":43,"level":0},{"x":1213,"y":413,"score":35,"level":0},{"x":1221,"y":413,"score":42,"level":0},{"x":1246,"y":413,"score":31,"level":0},{"x":1339,"y":413,"score":26,"level":0},{"x":1386,"y":413,"score":36,"level":0},{"x":1392,"y":413,"score":112,"level":0},{"x":1455,"y":413,"score":27,"level":0},{"x":384,"y":414,"score":42,"level":0},{"x":389,"y":414,"score":130,"level":0},{"x":421,"y":414,"score":110,"level":0},{"x":468,"y":414,"score":78,"level":0},{"x":533,"y":414,"score":53,"level":0},{"x":542,"y":414,"score":86,"level":0},{"x":572,"y":414,"score":47,"level":0},{"x":670,"y":414,"score":87,"level":0},{"x":702,"y":414,"score":46,"level":0},{"x":707,"y":414,"score":27,"level":0},{"x":711,"y":414,"score":72,"level":0},{"x":717,"y":414,"score":68,"level":0},{"x":876,"y":414,"score":80,"level":0},{"x":903,"y":414,"score":119,"level":0},{"x":916,"y":414,"score":39,"level":0},{"x":953,"y":414,"score":88,"level":0},{"x":1017,"y":414,"score":85,"level":0},{"x":1066,"y":414,"score":51,"level":0},{"x":1079,"y":414,"score":37,"level":0},{"x":1123,"y":414,"score":48,"level":0},{"x":1130,"y":414,"score":149,"level":0},{"x":1157,"y":414,"score":82,"level":0},{"x":1166,"y":414,"score":53,"level":0},{"x":1234,"y":414,"score":68,"level":0},{"x":1241,"y":414,"score":99,"level":0},{"x":1275,"y":414,"score":72,"level":0},{"x":1305,"y":414,"score":36,"level":0},{"x":1382,"y":414,"score":54,"level":0},{"x":401,"y":415,"score":46,"level":0},{"x":484,"y":415,"score":30,"level":0},{"x":491,"y":415,"score":44,"level":0},{"x":516,"y":415,"score":34,"level":0},{"x":575,"y":415,"score":60,"level":0},{"x":618,"y":415,"score":40,"level":0},{"x":684,"y":415,"score":229,"level":0},{"x":741,"y":415,"score":36,"level":0},{"x":958,"y":415,"score":112,"level":0},{"x":973,"y":415,"score":64,"level":0},{"x":1023,"y":415,"score":91,"level":0},{"x":1056,"y":415,"score":65,"level":0},{"x":1374,"y":415,"score":78,"level":0},{"x":1462,"y":415,"score":82,"level":0},{"x":1468,"y":415,"score":64,"level":0},{"x":1485,"y":415,"score":31,"level":0},{"x":410,"y":416,"score":49,"level":0},{"x":414,"y":416,"score":43,"level":0},{"x":462,"y":416,"score":69,"level":0},{"x":479,"y":416,"score":33,"level":0},{"x":613,"y":416,"score":30,"level":0},{"x":639,"y":416,"score":49,"level":0},{"x":805,"y":416,"score":44,"level":0},{"x":810,"y":416,"score":68,"level":0},{"x":860,"y":416,"score":40,"level":0},{"x":1010,"y":416,"score":37,"level":0},{"x":1016,"y":416,"score":66,"level":0},{"x":1060,"y":416,"score":26,"level":0},{"x":1103,"y":416,"score":38,"level":0},{"x":1131,"y":416,"score":167,"level":0},{"x":1190,"y":416,"score":26,"level":0},{"x":1197,"y":416,"score":32,"level":0},{"x":1246,"y":416,"score":42,"level":0},{"x":1314,"y":416,"score":102,"level":0},{"x":1320,"y":416,"score":56,"level":0},{"x":1328,"y":416,"score":70,"level":0},{"x":570,"y":417,"score":67,"level":0},{"x":633,"y":417,"score":29,"level":0},{"x":666,"y":417,"score":100,"level":0},{"x":679,"y":417,"score":120,"level":0},{"x":825,"y":417,"score":130,"level":0},{"x":833,"y":417,"score":86,"level":0},{"x":901,"y":417,"score":43,"level":0},{"x":908,"y":417,"score":106,"level":0},{"x":922,"y":417,"score":64,"level":0},{"x":942,"y":417,"score":144,"level":0},{"x":948,"y":417,"score":55,"level":0},{"x":1092,"y":417,"score":46,"level":0},{"x":1097,"y":417,"score":31,"level":0},{"x":1145,"y":417,"score":30,"level":0},{"x":1156,"y":417,"score":40,"level":0},{"x":1181,"y":417,"score":103,"level":0},{"x":1186,"y":417,"score":124,"level":0},{"x":1206,"y":417,"score":55,"level":0},{"x":1251,"y":417,"score":90,"level":0},{"x":1379,"y":417,"score":32,"level":0},{"x":1462,"y":417,"score":70,"level":0},{"x":410,"y":418,"score":31,"level":0},{"x":424,"y":418,"score":40,"level":0},{"x":431,"y":418,"score":98,"level":0},{"x":548,"y":418,"score":98,"level":0},{"x":671,"y":418,"score":37,"level":0},{"x":746,"y":418,"score":69,"level":0},{"x":828,"y":418,"score":74,"level":0},{"x":840,"y":418,"score":79,"level":0},{"x":979,"y":418,"score":47,"level":0},{"x":1045,"y":418,"score":103,"level":0},{"x":1062,"y":418,"score":70,"level":0},{"x":1077,"y":418,"score":38,"level":0},{"x":1167,"y":418,"score":36,"level":0},{"x":1188,"y":418,"score":76,"level":0},{"x":1216,"y":418,"score":110,"level":0},{"x":1222,"y":418,"score":87,"level":0},{"x":1227,"y":418,"score":43,"level":0},{"x":1259,"y":418,"score":224,"level":0},{"x":1269,"y":418,"score":83,"level":0},{"x":1301,"y":418,"score":51,"level":0},{"x":1386,"y":418,"score":219,"level":0},{"x":1447,"y":418,"score":48,"level":0},{"x":377,"y":419,"score":85,"level":0},{"x":392,"y":419,"score":28,"level":0},{"x":406,"y":419,"score":142,"level":0},{"x":458,"y":419,"score":40,"level":0},{"x":474,"y":419,"score":102,"level":0},{"x":505,"y":419,"score":28,"level":0},{"x":511,"y":419,"score":26,"level":0},{"x":575,"y":419,"score":37,"level":0},{"x":615,"y":419,"score":55,"level":0},{"x":622,"y":419,"score":37,"level":0},{"x":628,"y":419,"score":63,"level":0},{"x":865,"y":419,"score":43,"level":0},{"x":877,"y":419,"score":44,"level":0},{"x":881,"y":419,"score":27,"level":0},{"x":961,"y":419,"score":87,"level":0},{"x":1040,"y":419,"score":151,"level":0},{"x":1127,"y":419,"score":34,"level":0},{"x":1142,"y":419,"score":31,"level":0},{"x":1203,"y":419,"score":27,"level":0},{"x":1281,"y":419,"score":30,"level":0},{"x":1394,"y":419,"score":36,"level":0},{"x":1434,"y":419,"score":65,"level":0},{"x":1441,"y":419,"score":28,"level":0},{"x":1457,"y":419,"score":104,"level":0},{"x":1462,"y":419,"score":52,"level":0},{"x":1484,"y":419,"score":32,"level":0},{"x":1490,"y":419,"score":76,"level":0},{"x":485,"y":420,"score":59,"level":0},{"x":532,"y":420,"score":41,"level":0},{"x":567,"y":420,"score":28,"level":0},{"x":642,"y":420,"score":70,"level":0},{"x":690,"y":420,"score":89,"level":0},{"x":718,"y":420,"score":87,"level":0},{"x":724,"y":420,"score":49,"level":0},{"x":932,"y":420,"score":37,"level":0},{"x":946,"y":420,"score":99,"level":0},{"x":970,"y":420,"score":55,"level":0},{"x":1011,"y":420,"score":41,"level":0},{"x":1070,"y":420,"score":71,"level":0},{"x":1098,"y":420,"score":38,"level":0},{"x":1183,"y":420,"score":40,"level":0},{"x":1243,"y":420,"score":56,"level":0},{"x":1275,"y":420,"score":106,"level":0},{"x":1285,"y":420,"score":98,"level":0},{"x":1362,"y":420,"score":46,"level":0},{"x":1446,"y":420,"score":37,"level":0},{"x":1470,"y":420,"score":34,"level":0},{"x":1478,"y":420,"score":50,"level":0},{"x":432,"y":421,"score":73,"level":0},{"x":675,"y":421,"score":26,"level":0},{"x":685,"y":421,"score":76,"level":0},{"x":736,"y":421,"score":94,"level":0},{"x":748,"y":421,"score":44,"level":0},{"x":798,"y":421,"score":36,"level":0},{"x":801,"y":421,"score":30,"level":0},{"x":885,"y":421,"score":67,"level":0},{"x":936,"y":421,"score":82,"level":0},{"x":985,"y":421,"score":89,"level":0},{"x":1001,"y":421,"score":50,"level":0},{"x":1016,"y":421,"score":87,"level":0},{"x":1057,"y":421,"score":85,"level":0},{"x":1123,"y":421,"score":30,"level":0},{"x":1138,"y":421,"score":63,"level":0},{"x":1155,"y":421,"score":43,"level":0},{"x":1197,"y":421,"score":165,"level":0},{"x":1231,"y":421,"score":41,"level":0},{"x":1303,"y":421,"score":36,"level":0},{"x":1339,"y":421,"score":107,"level":0},{"x":1381,"y":421,"score":126,"level":0},{"x":670,"y":422,"score":34,"level":0},{"x":775,"y":422,"score":30,"level":0},{"x":796,"y":422,"score":37,"level":0},{"x":840,"y":422,"score":62,"level":0},{"x":845,"y":422,"score":30,"level":0},{"x":864,"y":422,"score":132,"level":0},{"x":927,"y":422,"score":50,"level":0},{"x":987,"y":422,"score":88,"level":0},{"x":1153,"y":422,"score":46,"level":0},{"x":1178,"y":422,"score":161,"level":0},{"x":1243,"y":422,"score":43,"level":0},{"x":1254,"y":422,"score":95,"level":0},{"x":1263,"y":422,"score":152,"level":0},{"x":1316,"y":422,"score":58,"level":0},{"x":1334,"y":422,"score":41,"level":0},{"x":1377,"y":422,"score":52,"level":0},{"x":1470,"y":422,"score":44,"level":0},{"x":466,"y":423,"score":92,"level":0},{"x":486,"y":423,"score":44,"level":0},{"x":492,"y":423,"score":42,"level":0},{"x":543,"y":423,"score":83,"level":0},{"x":562,"y":423,"score":128,"level":0},{"x":582,"y":423,"score":26,"level":0},{"x":680,"y":423,"score":132,"level":0},{"x":702,"y":423,"score":225,"level":0},{"x":731,"y":423,"score":73,"level":0},{"x":740,"y":423,"score":43,"level":0},{"x":754,"y":423,"score":38,"level":0},{"x":783,"y":423,"score":28,"level":0},{"x":804,"y":423,"score":43,"level":0},{"x":810,"y":423,"score":70,"level":0},{"x":921,"y":423,"score":153,"level":0},{"x":958,"y":423,"score":127,"level":0},{"x":964,"y":423,"score":60,"level":0},{"x":985,"y":423,"score":92,"level":0},{"x":1058,"y":423,"score":86,"level":0},{"x":1087,"y":423,"score":43,"level":0},{"x":1296,"y":423,"score":134,"level":0},{"x":1425,"y":423,"score":56,"level":0},{"x":425,"y":424,"score":107,"level":0},{"x":572,"y":424,"score":60,"level":0},{"x":665,"y":424,"score":126,"level":0},{"x":711,"y":424,"score":266,"level":0},{"x":722,"y":424,"score":63,"level":0},{"x":748,"y":424,"score":103,"level":0},{"x":802,"y":424,"score":49,"level":0},{"x":877,"y":424,"score":31,"level":0},{"x":883,"y":424,"score":79,"level":0},{"x":909,"y":424,"score":72,"level":0},{"x":948,"y":424,"score":60,"level":0},{"x":1039,"y":424,"score":57,"level":0},{"x":1047,"y":424,"score":57,"level":0},{"x":1065,"y":424,"score":34,"level":0},{"x":1203,"y":424,"score":111,"level":0},{"x":1215,"y":424,"score":106,"level":0},{"x":1224,"y":424,"score":44,"level":0},{"x":1269,"y":424,"score":80,"level":0},{"x":1311,"y":424,"score":62,"level":0},{"x":1393,"y":424,"score":79,"level":0},{"x":1423,"y":424,"score":46,"level":0},{"x":1428,"y":424,"score":48,"level":0},{"x":1444,"y":424,"score":41,"level":0},{"x":1465,"y":424,"score":35,"level":0},{"x":411,"y":425,"score":43,"level":0},{"x":530,"y":425,"score":27,"level":0},{"x":535,"y":425,"score":42,"level":0},{"x":628,"y":425,"score":43,"level":0},{"x":678,"y":425,"score":164,"level":0},{"x":690,"y":425,"score":81,"level":0},{"x":761,"y":425,"score":29,"level":0},{"x":821,"y":425,"score":38,"level":0},{"x":897,"y":425,"score":96,"level":0},{"x":954,"y":425,"score":90,"level":0},{"x":976,"y":425,"score":128,"level":0},{"x":1006,"y":425,"score":54,"level":0},{"x":1012,"y":425,"score":83,"level":0},{"x":1024,"y":425,"score":79,"level":0},{"x":1052,"y":425,"score":52,"level":0},{"x":1111,"y":425,"score":44,"level":0},{"x":1157,"y":425,"score":215,"level":0},{"x":1191,"y":425,"score":212,"level":0},{"x":1239,"y":425,"score":40,"level":0},{"x":1336,"y":425,"score":40,"level":0},{"x":1341,"y":425,"score":58,"level":0},{"x":1353,"y":425,"score":49,"level":0},{"x":1361,"y":425,"score":70,"level":0},{"x":1368,"y":425,"score":33,"level":0},{"x":1420,"y":425,"score":33,"level":0},{"x":1439,"y":425,"score":98,"level":0},{"x":377,"y":426,"score":29,"level":0},{"x":434,"y":426,"score":50,"level":0},{"x":457,"y":426,"score":53,"level":0},{"x":685,"y":426,"score":114,"level":0},{"x":727,"y":426,"score":125,"level":0},{"x":733,"y":426,"score":45,"level":0},{"x":826,"y":426,"score":233,"level":0},{"x":834,"y":426,"score":86,"level":0},{"x":915,"y":426,"score":45,"level":0},{"x":941,"y":426,"score":163,"level":0},{"x":981,"y":426,"score":40,"level":0},{"x":1001,"y":426,"score":43,"level":0},{"x":1048,"y":426,"score":53,"level":0},{"x":1081,"y":426,"score":102,"level":0},{"x":1145,"y":426,"score":64,"level":0},{"x":1166,"y":426,"score":93,"level":0},{"x":1172,"y":426,"score":30,"level":0},{"x":1181,"y":426,"score":106,"level":0},{"x":1185,"y":426,"score":155,"level":0},{"x":1258,"y":426,"score":125,"level":0},{"x":1300,"y":426,"score":99,"level":0},{"x":1351,"y":426,"score":57,"level":0},{"x":653,"y":427,"score":35,"level":0},{"x":788,"y":427,"score":103,"level":0},{"x":877,"y":427,"score":41,"level":0},{"x":882,"y":427,"score":77,"level":0},{"x":892,"y":427,"score":60,"level":0},{"x":925,"y":427,"score":26,"level":0},{"x":935,"y":427,"score":60,"level":0},{"x":962,"y":427,"score":98,"level":0},{"x":1005,"y":427,"score":30,"level":0},{"x":1016,"y":427,"score":98,"level":0},{"x":1061,"y":427,"score":36,"level":0},{"x":1092,"y":427,"score":88,"level":0},{"x":1139,"y":427,"score":79,"level":0},{"x":1248,"y":427,"score":28,"level":0},{"x":493,"y":428,"score":47,"level":0},{"x":551,"y":428,"score":129,"level":0},{"x":572,"y":428,"score":33,"level":0},{"x":613,"y":428,"score":35,"level":0},{"x":619,"y":428,"score":122,"level":0},{"x":638,"y":428,"score":115,"level":0},{"x":644,"y":428,"score":97,"level":0},{"x":708,"y":428,"score":77,"level":0},{"x":751,"y":428,"score":46,"level":0},{"x":972,"y":428,"score":116,"level":0},{"x":1055,"y":428,"score":51,"level":0},{"x":1100,"y":428,"score":88,"level":0},{"x":1119,"y":428,"score":89,"level":0},{"x":1128,"y":428,"score":68,"level":0},{"x":1162,"y":428,"score":33,"level":0},{"x":1177,"y":428,"score":66,"level":0},{"x":1212,"y":428,"score":91,"level":0},{"x":1265,"y":428,"score":181,"level":0},{"x":1270,"y":428,"score":36,"level":0},{"x":1296,"y":428,"score":62,"level":0},{"x":386,"y":429,"score":138,"level":0},{"x":393,"y":429,"score":26,"level":0},{"x":398,"y":429,"score":108,"level":0},{"x":428,"y":429,"score":97,"level":0},{"x":507,"y":429,"score":37,"level":0},{"x":587,"y":429,"score":27,"level":0},{"x":695,"y":429,"score":28,"level":0},{"x":703,"y":429,"score":173,"level":0},{"x":711,"y":429,"score":71,"level":0},{"x":892,"y":429,"score":61,"level":0},{"x":897,"y":429,"score":70,"level":0},{"x":1038,"y":429,"score":70,"level":0},{"x":1049,"y":429,"score":33,"level":0},{"x":1164,"y":429,"score":30,"level":0},{"x":1221,"y":429,"score":45,"level":0},{"x":1304,"y":429,"score":50,"level":0},{"x":1322,"y":429,"score":128,"level":0},{"x":1347,"y":429,"score":30,"level":0},{"x":1368,"y":429,"score":45,"level":0},{"x":1391,"y":429,"score":26,"level":0},{"x":1423,"y":429,"score":27,"level":0},{"x":1489,"y":429,"score":33,"level":0},{"x":406,"y":430,"score":33,"level":0},{"x":516,"y":430,"score":35,"level":0},{"x":602,"y":430,"score":39,"level":0},{"x":671,"y":430,"score":68,"level":0},{"x":681,"y":430,"score":51,"level":0},{"x":876,"y":430,"score":84,"level":0},{"x":885,"y":430,"score":85,"level":0},{"x":933,"y":430,"score":41,"level":0},{"x":1007,"y":430,"score":76,"level":0},{"x":1072,"y":430,"score":113,"level":0},{"x":1084,"y":430,"score":77,"level":0},{"x":1197,"y":430,"score":80,"level":0},{"x":1217,"y":430,"score":40,"level":0},{"x":1227,"y":430,"score":37,"level":0},{"x":1361,"y":430,"score":34,"level":0},{"x":1428,"y":430,"score":39,"level":0},{"x":438,"y":431,"score":26,"level":0},{"x":474,"y":431,"score":93,"level":0},{"x":538,"y":431,"score":64,"level":0},{"x":691,"y":431,"score":26,"level":0},{"x":907,"y":431,"score":28,"level":0},{"x":916,"y":431,"score":38,"level":0},{"x":953,"y":431,"score":123,"level":0},{"x":985,"y":431,"score":96,"level":0},{"x":1176,"y":431,"score":62,"level":0},{"x":1188,"y":431,"score":145,"level":0},{"x":1231,"y":431,"score":35,"level":0},{"x":1237,"y":431,"score":30,"level":0},{"x":1269,"y":431,"score":32,"level":0},{"x":1334,"y":431,"score":44,"level":0},{"x":1351,"y":431,"score":37,"level":0},{"x":1357,"y":431,"score":28,"level":0},{"x":1443,"y":431,"score":31,"level":0},{"x":463,"y":432,"score":41,"level":0},{"x":566,"y":432,"score":58,"level":0},{"x":641,"y":432,"score":77,"level":0},{"x":681,"y":432,"score":89,"level":0},{"x":734,"y":432,"score":59,"level":0},{"x":786,"y":432,"score":30,"level":0},{"x":826,"y":432,"score":87,"level":0},{"x":832,"y":432,"score":93,"level":0},{"x":864,"y":432,"score":132,"level":0},{"x":961,"y":432,"score":29,"level":0},{"x":1000,"y":432,"score":88,"level":0},{"x":1005,"y":432,"score":31,"level":0},{"x":1129,"y":432,"score":38,"level":0},{"x":1162,"y":432,"score":151,"level":0},{"x":1251,"y":432,"score":109,"level":0},{"x":1256,"y":432,"score":36,"level":0},{"x":1316,"y":432,"score":74,"level":0},{"x":1448,"y":432,"score":34,"level":0},{"x":415,"y":433,"score":72,"level":0},{"x":501,"y":433,"score":61,"level":0},{"x":572,"y":433,"score":151,"level":0},{"x":774,"y":433,"score":41,"level":0},{"x":920,"y":433,"score":95,"level":0},{"x":994,"y":433,"score":65,"level":0},{"x":1043,"y":433,"score":81,"level":0},{"x":1103,"y":433,"score":80,"level":0},{"x":1109,"y":433,"score":33,"level":0},{"x":1165,"y":433,"score":38,"level":0},{"x":1193,"y":433,"score":28,"level":0},{"x":1343,"y":433,"score":30,"level":0},{"x":1415,"y":433,"score":41,"level":0},{"x":653,"y":434,"score":147,"level":0},{"x":705,"y":434,"score":29,"level":0},{"x":724,"y":434,"score":39,"level":0},{"x":787,"y":434,"score":44,"level":0},{"x":858,"y":434,"score":27,"level":0},{"x":936,"y":434,"score":37,"level":0},{"x":978,"y":434,"score":38,"level":0},{"x":1049,"y":434,"score":64,"level":0},{"x":1065,"y":434,"score":102,"level":0},{"x":1087,"y":434,"score":37,"level":0},{"x":1247,"y":434,"score":45,"level":0},{"x":1269,"y":434,"score":54,"level":0},{"x":1303,"y":434,"score":55,"level":0},{"x":1347,"y":434,"score":54,"level":0},{"x":1374,"y":434,"score":50,"level":0},{"x":1423,"y":434,"score":100,"level":0},{"x":1432,"y":434,"score":81,"level":0},{"x":1447,"y":434,"score":30,"level":0},{"x":1467,"y":434,"score":49,"level":0},{"x":392,"y":435,"score":33,"level":0},{"x":488,"y":435,"score":108,"level":0},{"x":546,"y":435,"score":62,"level":0},{"x":793,"y":435,"score":64,"level":0},{"x":795,"y":435,"score":69,"level":0},{"x":889,"y":435,"score":68,"level":0},{"x":1017,"y":435,"score":188,"level":0},{"x":1058,"y":435,"score":55,"level":0},{"x":1076,"y":435,"score":27,"level":0},{"x":1190,"y":435,"score":124,"level":0},{"x":1224,"y":435,"score":34,"level":0},{"x":1367,"y":435,"score":249,"level":0},{"x":1455,"y":435,"score":46,"level":0},{"x":386,"y":436,"score":257,"level":0},{"x":431,"y":436,"score":74,"level":0},{"x":437,"y":436,"score":65,"level":0},{"x":478,"y":436,"score":38,"level":0},{"x":519,"y":436,"score":110,"level":0},{"x":558,"y":436,"score":123,"level":0},{"x":624,"y":436,"score":28,"level":0},{"x":634,"y":436,"score":56,"level":0},{"x":697,"y":436,"score":109,"level":0},{"x":749,"y":436,"score":112,"level":0},{"x":754,"y":436,"score":60,"level":0},{"x":841,"y":436,"score":61,"level":0},{"x":877,"y":436,"score":45,"level":0},{"x":884,"y":436,"score":65,"level":0},{"x":906,"y":436,"score":126,"level":0},{"x":958,"y":436,"score":163,"level":0},{"x":989,"y":436,"score":60,"level":0},{"x":1007,"y":436,"score":137,"level":0},{"x":1096,"y":436,"score":60,"level":0},{"x":1320,"y":436,"score":130,"level":0},{"x":1362,"y":436,"score":30,"level":0},{"x":1377,"y":436,"score":30,"level":0},{"x":1460,"y":436,"score":31,"level":0},{"x":1480,"y":436,"score":49,"level":0},{"x":718,"y":437,"score":52,"level":0},{"x":891,"y":437,"score":44,"level":0},{"x":935,"y":437,"score":56,"level":0},{"x":951,"y":437,"score":33,"level":0},{"x":963,"y":437,"score":92,"level":0},{"x":1039,"y":437,"score":70,"level":0},{"x":1060,"y":437,"score":119,"level":0},{"x":1072,"y":437,"score":82,"level":0},{"x":1174,"y":437,"score":38,"level":0},{"x":1179,"y":437,"score":72,"level":0},{"x":1312,"y":437,"score":56,"level":0},{"x":1466,"y":437,"score":34,"level":0},{"x":399,"y":438,"score":46,"level":0},{"x":411,"y":438,"score":56,"level":0},{"x":436,"y":438,"score":30,"level":0},{"x":464,"y":438,"score":81,"level":0},{"x":513,"y":438,"score":27,"level":0},{"x":528,"y":438,"score":33,"level":0},{"x":635,"y":438,"score":55,"level":0},{"x":641,"y":438,"score":43,"level":0},{"x":740,"y":438,"score":43,"level":0},{"x":921,"y":438,"score":66,"level":0},{"x":939,"y":438,"score":132,"level":0},{"x":997,"y":438,"score":70,"level":0},{"x":1012,"y":438,"score":39,"level":0},{"x":1043,"y":438,"score":34,"level":0},{"x":1068,"y":438,"score":32,"level":0},{"x":1142,"y":438,"score":86,"level":0},{"x":1164,"y":438,"score":40,"level":0},{"x":1184,"y":438,"score":147,"level":0},{"x":1195,"y":438,"score":42,"level":0},{"x":1211,"y":438,"score":36,"level":0},{"x":1317,"y":438,"score":41,"level":0},{"x":1326,"y":438,"score":31,"level":0},{"x":1442,"y":438,"score":30,"level":0},{"x":377,"y":439,"score":38,"level":0},{"x":394,"y":439,"score":70,"level":0},{"x":416,"y":439,"score":45,"level":0},{"x":459,"y":439,"score":145,"level":0},{"x":483,"y":439,"score":93,"level":0},{"x":502,"y":439,"score":74,"level":0},{"x":516,"y":439,"score":78,"level":0},{"x":565,"y":439,"score":56,"level":0},{"x":629,"y":439,"score":27,"level":0},{"x":674,"y":439,"score":89,"level":0},{"x":679,"y":439,"score":113,"level":0},{"x":705,"y":439,"score":46,"level":0},{"x":728,"y":439,"score":36,"level":0},{"x":735,"y":439,"score":105,"level":0},{"x":807,"y":439,"score":56,"level":0},{"x":876,"y":439,"score":77,"level":0},{"x":988,"y":439,"score":47,"level":0},{"x":1048,"y":439,"score":88,"level":0},{"x":1078,"y":439,"score":37,"level":0},{"x":1093,"y":439,"score":62,"level":0},{"x":1122,"y":439,"score":44,"level":0},{"x":1218,"y":439,"score":162,"level":0},{"x":1228,"y":439,"score":69,"level":0},{"x":1257,"y":439,"score":59,"level":0},{"x":1269,"y":439,"score":44,"level":0},{"x":1331,"y":439,"score":57,"level":0},{"x":1439,"y":439,"score":50,"level":0},{"x":489,"y":440,"score":35,"level":0},{"x":494,"y":440,"score":47,"level":0},{"x":600,"y":440,"score":29,"level":0},{"x":707,"y":440,"score":45,"level":0},{"x":717,"y":440,"score":76,"level":0},{"x":852,"y":440,"score":72,"level":0},{"x":895,"y":440,"score":30,"level":0},{"x":1088,"y":440,"score":91,"level":0},{"x":1226,"y":440,"score":32,"level":0},{"x":1322,"y":440,"score":43,"level":0},{"x":1449,"y":440,"score":63,"level":0},{"x":497,"y":441,"score":54,"level":0},{"x":509,"y":441,"score":34,"level":0},{"x":557,"y":441,"score":180,"level":0},{"x":565,"y":441,"score":51,"level":0},{"x":829,"y":441,"score":56,"level":0},{"x":912,"y":441,"score":77,"level":0},{"x":918,"y":441,"score":53,"level":0},{"x":946,"y":441,"score":117,"level":0},{"x":966,"y":441,"score":69,"level":0},{"x":1005,"y":441,"score":70,"level":0},{"x":1048,"y":441,"score":67,"level":0},{"x":1058,"y":441,"score":60,"level":0},{"x":1077,"y":441,"score":45,"level":0},{"x":1134,"y":441,"score":32,"level":0},{"x":1144,"y":441,"score":63,"level":0},{"x":1269,"y":441,"score":26,"level":0},{"x":1432,"y":441,"score":60,"level":0},{"x":383,"y":442,"score":60,"level":0},{"x":471,"y":442,"score":75,"level":0},{"x":621,"y":442,"score":49,"level":0},{"x":623,"y":442,"score":74,"level":0},{"x":649,"y":442,"score":39,"level":0},{"x":737,"y":442,"score":141,"level":0},{"x":834,"y":442,"score":90,"level":0},{"x":891,"y":442,"score":53,"level":0},{"x":924,"y":442,"score":180,"level":0},{"x":943,"y":442,"score":42,"level":0},{"x":957,"y":442,"score":70,"level":0},{"x":972,"y":442,"score":83,"level":0},{"x":979,"y":442,"score":112,"level":0},{"x":988,"y":442,"score":37,"level":0},{"x":1053,"y":442,"score":44,"level":0},{"x":1073,"y":442,"score":32,"level":0},{"x":1091,"y":442,"score":77,"level":0},{"x":1124,"y":442,"score":92,"level":0},{"x":1150,"y":442,"score":26,"level":0},{"x":1201,"y":442,"score":48,"level":0},{"x":1242,"y":442,"score":75,"level":0},{"x":1247,"y":442,"score":102,"level":0},{"x":1254,"y":442,"score":42,"level":0},{"x":1263,"y":442,"score":92,"level":0},{"x":1338,"y":442,"score":34,"level":0},{"x":1343,"y":442,"score":27,"level":0},{"x":1425,"y":442,"score":149,"level":0},{"x":1488,"y":442,"score":62,"level":0},{"x":410,"y":443,"score":40,"level":0},{"x":500,"y":443,"score":55,"level":0},{"x":512,"y":443,"score":33,"level":0},{"x":547,"y":443,"score":71,"level":0},{"x":561,"y":443,"score":43,"level":0},{"x":637,"y":443,"score":32,"level":0},{"x":1035,"y":443,"score":108,"level":0},{"x":1129,"y":443,"score":108,"level":0},{"x":1190,"y":443,"score":91,"level":0},{"x":1195,"y":443,"score":160,"level":0},{"x":1224,"y":443,"score":38,"level":0},{"x":1384,"y":443,"score":129,"level":0},{"x":1436,"y":443,"score":88,"level":0},{"x":1480,"y":443,"score":48,"level":0},{"x":419,"y":444,"score":42,"level":0},{"x":615,"y":444,"score":40,"level":0},{"x":694,"y":444,"score":26,"level":0},{"x":732,"y":444,"score":43,"level":0},{"x":939,"y":444,"score":56,"level":0},{"x":954,"y":444,"score":91,"level":0},{"x":1045,"y":444,"score":44,"level":0},{"x":1076,"y":444,"score":45,"level":0},{"x":1080,"y":444,"score":44,"level":0},{"x":1104,"y":444,"score":50,"level":0},{"x":1112,"y":444,"score":112,"level":0},{"x":1162,"y":444,"score":63,"level":0},{"x":1264,"y":444,"score":80,"level":0},{"x":1298,"y":444,"score":138,"level":0},{"x":1335,"y":444,"score":32,"level":0},{"x":1348,"y":444,"score":44,"level":0},{"x":1375,"y":444,"score":63,"level":0},{"x":1417,"y":444,"score":40,"level":0},{"x":1464,"y":444,"score":66,"level":0},{"x":1477,"y":444,"score":36,"level":0},{"x":489,"y":445,"score":97,"level":0},{"x":494,"y":445,"score":188,"level":0},{"x":566,"y":445,"score":30,"level":0},{"x":571,"y":445,"score":96,"level":0},{"x":600,"y":445,"score":226,"level":0},{"x":606,"y":445,"score":84,"level":0},{"x":686,"y":445,"score":67,"level":0},{"x":702,"y":445,"score":58,"level":0},{"x":850,"y":445,"score":36,"level":0},{"x":910,"y":445,"score":28,"level":0},{"x":914,"y":445,"score":66,"level":0},{"x":1095,"y":445,"score":50,"level":0},{"x":1150,"y":445,"score":67,"level":0},{"x":1154,"y":445,"score":85,"level":0},{"x":1185,"y":445,"score":72,"level":0},{"x":1255,"y":445,"score":29,"level":0},{"x":1365,"y":445,"score":32,"level":0},{"x":1444,"y":445,"score":43,"level":0},{"x":388,"y":446,"score":27,"level":0},{"x":394,"y":446,"score":70,"level":0},{"x":430,"y":446,"score":95,"level":0},{"x":519,"y":446,"score":61,"level":0},{"x":573,"y":446,"score":78,"level":0},{"x":632,"y":446,"score":45,"level":0},{"x":639,"y":446,"score":76,"level":0},{"x":676,"y":446,"score":51,"level":0},{"x":681,"y":446,"score":93,"level":0},{"x":829,"y":446,"score":108,"level":0},{"x":881,"y":446,"score":39,"level":0},{"x":962,"y":446,"score":62,"level":0},{"x":1011,"y":446,"score":64,"level":0},{"x":1016,"y":446,"score":161,"level":0},{"x":1217,"y":446,"score":123,"level":0},{"x":1294,"y":446,"score":51,"level":0},{"x":1334,"y":446,"score":49,"level":0},{"x":1459,"y":446,"score":32,"level":0},{"x":377,"y":447,"score":62,"level":0},{"x":460,"y":447,"score":266,"level":0},{"x":465,"y":447,"score":96,"level":0},{"x":554,"y":447,"score":94,"level":0},{"x":648,"y":447,"score":36,"level":0},{"x":650,"y":447,"score":60,"level":0},{"x":698,"y":447,"score":52,"level":0},{"x":713,"y":447,"score":81,"level":0},{"x":739,"y":447,"score":72,"level":0},{"x":863,"y":447,"score":104,"level":0},{"x":898,"y":447,"score":140,"level":0},{"x":904,"y":447,"score":30,"level":0},{"x":922,"y":447,"score":75,"level":0},{"x":945,"y":447,"score":45,"level":0},{"x":971,"y":447,"score":36,"level":0},{"x":986,"y":447,"score":76,"level":0},{"x":995,"y":447,"score":100,"level":0},{"x":1021,"y":447,"score":63,"level":0},{"x":1051,"y":447,"score":44,"level":0},{"x":1055,"y":447,"score":53,"level":0},{"x":1067,"y":447,"score":88,"level":0},{"x":1170,"y":447,"score":82,"level":0},{"x":1202,"y":447,"score":32,"level":0},{"x":1257,"y":447,"score":66,"level":0},{"x":1311,"y":447,"score":34,"level":0},{"x":1404,"y":447,"score":33,"level":0},{"x":1446,"y":447,"score":74,"level":0},{"x":506,"y":448,"score":87,"level":0},{"x":677,"y":448,"score":38,"level":0},{"x":732,"y":448,"score":87,"level":0},{"x":888,"y":448,"score":69,"level":0},{"x":977,"y":448,"score":62,"level":0},{"x":1110,"y":448,"score":64,"level":0},{"x":1127,"y":448,"score":42,"level":0},{"x":1143,"y":448,"score":98,"level":0},{"x":1305,"y":448,"score":36,"level":0},{"x":1322,"y":448,"score":83,"level":0},{"x":1377,"y":448,"score":49,"level":0},{"x":1420,"y":448,"score":52,"level":0},{"x":1429,"y":448,"score":27,"level":0},{"x":1468,"y":448,"score":30,"level":0},{"x":377,"y":449,"score":83,"level":0},{"x":533,"y":449,"score":44,"level":0},{"x":553,"y":449,"score":68,"level":0},{"x":743,"y":449,"score":35,"level":0},{"x":753,"y":449,"score":31,"level":0},{"x":793,"y":449,"score":34,"level":0},{"x":874,"y":449,"score":48,"level":0},{"x":891,"y":449,"score":56,"level":0},{"x":913,"y":449,"score":89,"level":0},{"x":1003,"y":449,"score":29,"level":0},{"x":1050,"y":449,"score":27,"level":0},{"x":1076,"y":449,"score":118,"level":0},{"x":1086,"y":449,"score":27,"level":0},{"x":1180,"y":449,"score":101,"level":0},{"x":1260,"y":449,"score":37,"level":0},{"x":1269,"y":449,"score":96,"level":0},{"x":1299,"y":449,"score":92,"level":0},{"x":1310,"y":449,"score":47,"level":0},{"x":1357,"y":449,"score":119,"level":0},{"x":1368,"y":449,"score":172,"level":0},{"x":1480,"y":449,"score":42,"level":0},{"x":418,"y":450,"score":80,"level":0},{"x":498,"y":450,"score":69,"level":0},{"x":558,"y":450,"score":33,"level":0},{"x":646,"y":450,"score":33,"level":0},{"x":648,"y":450,"score":28,"level":0},{"x":737,"y":450,"score":54,"level":0},{"x":778,"y":450,"score":134,"level":0},{"x":945,"y":450,"score":55,"level":0},{"x":988,"y":450,"score":69,"level":0},{"x":1079,"y":450,"score":67,"level":0},{"x":1100,"y":450,"score":85,"level":0},{"x":1238,"y":450,"score":35,"level":0},{"x":1338,"y":450,"score":120,"level":0},{"x":1438,"y":450,"score":156,"level":0},{"x":1453,"y":450,"score":123,"level":0},{"x":1456,"y":450,"score":90,"level":0},{"x":1472,"y":450,"score":50,"level":0},{"x":1483,"y":450,"score":44,"level":0},{"x":396,"y":451,"score":27,"level":0},{"x":474,"y":451,"score":204,"level":0},{"x":484,"y":451,"score":178,"level":0},{"x":500,"y":451,"score":39,"level":0},{"x":561,"y":451,"score":72,"level":0},{"x":567,"y":451,"score":42,"level":0},{"x":656,"y":451,"score":29,"level":0},{"x":660,"y":451,"score":35,"level":0},{"x":674,"y":451,"score":41,"level":0},{"x":710,"y":451,"score":102,"level":0},{"x":745,"y":451,"score":36,"level":0},{"x":839,"y":451,"score":28,"level":0},{"x":881,"y":451,"score":28,"level":0},{"x":893,"y":451,"score":70,"level":0},{"x":934,"y":451,"score":45,"level":0},{"x":961,"y":451,"score":89,"level":0},{"x":980,"y":451,"score":32,"level":0},{"x":1010,"y":451,"score":61,"level":0},{"x":1015,"y":451,"score":69,"level":0},{"x":1019,"y":451,"score":52,"level":0},{"x":1103,"y":451,"score":74,"level":0},{"x":1148,"y":451,"score":114,"level":0},{"x":1156,"y":451,"score":212,"level":0},{"x":1169,"y":451,"score":89,"level":0},{"x":1269,"y":451,"score":108,"level":0},{"x":1351,"y":451,"score":29,"level":0},{"x":1432,"y":451,"score":59,"level":0},{"x":398,"y":452,"score":45,"level":0},{"x":423,"y":452,"score":50,"level":0},{"x":429,"y":452,"score":28,"level":0},{"x":648,"y":452,"score":42,"level":0},{"x":664,"y":452,"score":55,"level":0},{"x":684,"y":452,"score":85,"level":0},{"x":834,"y":452,"score":59,"level":0},{"x":899,"y":452,"score":44,"level":0},{"x":903,"y":452,"score":72,"level":0},{"x":994,"y":452,"score":70,"level":0},{"x":999,"y":452,"score":77,"level":0},{"x":1004,"y":452,"score":31,"level":0},{"x":1083,"y":452,"score":44,"level":0},{"x":1114,"y":452,"score":44,"level":0},{"x":1197,"y":452,"score":112,"level":0},{"x":1362,"y":452,"score":70,"level":0},{"x":1448,"y":452,"score":34,"level":0},{"x":394,"y":453,"score":47,"level":0},{"x":493,"y":453,"score":85,"level":0},{"x":718,"y":453,"score":30,"level":0},{"x":734,"y":453,"score":29,"level":0},{"x":888,"y":453,"score":100,"level":0},{"x":896,"y":453,"score":76,"level":0},{"x":922,"y":453,"score":179,"level":0},{"x":985,"y":453,"score":38,"level":0},{"x":1096,"y":453,"score":45,"level":0},{"x":1141,"y":453,"score":63,"level":0},{"x":1354,"y":453,"score":52,"level":0},{"x":1372,"y":453,"score":32,"level":0},{"x":1389,"y":453,"score":61,"level":0},{"x":489,"y":454,"score":58,"level":0},{"x":505,"y":454,"score":34,"level":0},{"x":553,"y":454,"score":68,"level":0},{"x":559,"y":454,"score":49,"level":0},{"x":609,"y":454,"score":26,"level":0},{"x":705,"y":454,"score":91,"level":0},{"x":727,"y":454,"score":61,"level":0},{"x":750,"y":454,"score":165,"level":0},{"x":890,"y":454,"score":85,"level":0},{"x":1017,"y":454,"score":114,"level":0},{"x":1055,"y":454,"score":81,"level":0},{"x":1109,"y":454,"score":49,"level":0},{"x":1118,"y":454,"score":38,"level":0},{"x":1123,"y":454,"score":43,"level":0},{"x":1242,"y":454,"score":123,"level":0},{"x":1260,"y":454,"score":123,"level":0},{"x":1427,"y":454,"score":106,"level":0},{"x":575,"y":455,"score":116,"level":0},{"x":642,"y":455,"score":59,"level":0},{"x":864,"y":455,"score":73,"level":0},{"x":905,"y":455,"score":71,"level":0},{"x":946,"y":455,"score":99,"level":0},{"x":974,"y":455,"score":65,"level":0},{"x":1043,"y":455,"score":134,"level":0},{"x":1077,"y":455,"score":62,"level":0},{"x":1090,"y":455,"score":87,"level":0},{"x":1202,"y":455,"score":32,"level":0},{"x":1379,"y":455,"score":35,"level":0},{"x":1384,"y":455,"score":29,"level":0},{"x":1449,"y":455,"score":113,"level":0},{"x":418,"y":456,"score":49,"level":0},{"x":457,"y":456,"score":40,"level":0},{"x":502,"y":456,"score":35,"level":0},{"x":547,"y":456,"score":48,"level":0},{"x":672,"y":456,"score":47,"level":0},{"x":696,"y":456,"score":95,"level":0},{"x":701,"y":456,"score":73,"level":0},{"x":931,"y":456,"score":202,"level":0},{"x":1001,"y":456,"score":70,"level":0},{"x":1085,"y":456,"score":73,"level":0},{"x":1100,"y":456,"score":52,"level":0},{"x":1166,"y":456,"score":30,"level":0},{"x":1381,"y":456,"score":62,"level":0},{"x":1490,"y":456,"score":244,"level":0},{"x":404,"y":457,"score":206,"level":0},{"x":429,"y":457,"score":88,"level":0},{"x":462,"y":457,"score":145,"level":0},{"x":468,"y":457,"score":52,"level":0},{"x":471,"y":457,"score":86,"level":0},{"x":601,"y":457,"score":56,"level":0},{"x":693,"y":457,"score":51,"level":0},{"x":900,"y":457,"score":122,"level":0},{"x":937,"y":457,"score":52,"level":0},{"x":1004,"y":457,"score":48,"level":0},{"x":1154,"y":457,"score":90,"level":0},{"x":1173,"y":457,"score":29,"level":0},{"x":1187,"y":457,"score":102,"level":0},{"x":1247,"y":457,"score":76,"level":0},{"x":1254,"y":457,"score":40,"level":0},{"x":1423,"y":457,"score":64,"level":0},{"x":424,"y":458,"score":77,"level":0},{"x":487,"y":458,"score":40,"level":0},{"x":725,"y":458,"score":80,"level":0},{"x":875,"y":458,"score":49,"level":0},{"x":905,"y":458,"score":47,"level":0},{"x":954,"y":458,"score":76,"level":0},{"x":979,"y":458,"score":116,"level":0},{"x":1111,"y":458,"score":61,"level":0},{"x":1134,"y":458,"score":29,"level":0},{"x":1161,"y":458,"score":61,"level":0},{"x":1167,"y":458,"score":29,"level":0},{"x":1229,"y":458,"score":138,"level":0},{"x":1306,"y":458,"score":45,"level":0},{"x":1312,"y":458,"score":103,"level":0},{"x":1317,"y":458,"score":115,"level":0},{"x":1337,"y":458,"score":36,"level":0},{"x":1342,"y":458,"score":90,"level":0},{"x":1463,"y":458,"score":30,"level":0},{"x":1468,"y":458,"score":33,"level":0},{"x":377,"y":459,"score":131,"level":0},{"x":436,"y":459,"score":112,"level":0},{"x":649,"y":459,"score":33,"level":0},{"x":654,"y":459,"score":42,"level":0},{"x":668,"y":459,"score":115,"level":0},{"x":768,"y":459,"score":159,"level":0},{"x":783,"y":459,"score":39,"level":0},{"x":877,"y":459,"score":69,"level":0},{"x":925,"y":459,"score":138,"level":0},{"x":959,"y":459,"score":28,"level":0},{"x":973,"y":459,"score":57,"level":0},{"x":1052,"y":459,"score":27,"level":0},{"x":1069,"y":459,"score":169,"level":0},{"x":1081,"y":459,"score":33,"level":0},{"x":1108,"y":459,"score":97,"level":0},{"x":1123,"y":459,"score":43,"level":0},{"x":1131,"y":459,"score":37,"level":0},{"x":1154,"y":459,"score":162,"level":0},{"x":1260,"y":459,"score":47,"level":0},{"x":1332,"y":459,"score":106,"level":0},{"x":1371,"y":459,"score":55,"level":0},{"x":1485,"y":459,"score":29,"level":0},{"x":441,"y":460,"score":35,"level":0},{"x":660,"y":460,"score":84,"level":0},{"x":685,"y":460,"score":62,"level":0},{"x":733,"y":460,"score":111,"level":0},{"x":752,"y":460,"score":27,"level":0},{"x":918,"y":460,"score":132,"level":0},{"x":941,"y":460,"score":146,"level":0},{"x":947,"y":460,"score":41,"level":0},{"x":1013,"y":460,"score":26,"level":0},{"x":1084,"y":460,"score":43,"level":0},{"x":1144,"y":460,"score":30,"level":0},{"x":1171,"y":460,"score":45,"level":0},{"x":1223,"y":460,"score":149,"level":0},{"x":1359,"y":460,"score":26,"level":0},{"x":1463,"y":460,"score":60,"level":0},{"x":422,"y":461,"score":34,"level":0},{"x":643,"y":461,"score":162,"level":0},{"x":665,"y":461,"score":123,"level":0},{"x":709,"y":461,"score":62,"level":0},{"x":720,"y":461,"score":42,"level":0},{"x":878,"y":461,"score":38,"level":0},{"x":911,"y":461,"score":54,"level":0},{"x":963,"y":461,"score":48,"level":0},{"x":1040,"y":461,"score":69,"level":0},{"x":1062,"y":461,"score":42,"level":0},{"x":1242,"y":461,"score":67,"level":0},{"x":1255,"y":461,"score":43,"level":0},{"x":1379,"y":461,"score":42,"level":0},{"x":1384,"y":461,"score":27,"level":0},{"x":1450,"y":461,"score":127,"level":0},{"x":1455,"y":461,"score":248,"level":0},{"x":1475,"y":461,"score":28,"level":0},{"x":450,"y":462,"score":29,"level":0},{"x":467,"y":462,"score":175,"level":0},{"x":474,"y":462,"score":33,"level":0},{"x":627,"y":462,"score":76,"level":0},{"x":681,"y":462,"score":110,"level":0},{"x":690,"y":462,"score":156,"level":0},{"x":728,"y":462,"score":107,"level":0},{"x":779,"y":462,"score":66,"level":0},{"x":829,"y":462,"score":34,"level":0},{"x":935,"y":462,"score":106,"level":0},{"x":997,"y":462,"score":81,"level":0},{"x":1022,"y":462,"score":28,"level":0},{"x":1056,"y":462,"score":33,"level":0},{"x":1090,"y":462,"score":92,"level":0},{"x":1101,"y":462,"score":27,"level":0},{"x":1137,"y":462,"score":28,"level":0},{"x":1197,"y":462,"score":172,"level":0},{"x":1246,"y":462,"score":50,"level":0},{"x":1248,"y":462,"score":30,"level":0},{"x":1269,"y":462,"score":46,"level":0},{"x":1325,"y":462,"score":49,"level":0},{"x":1330,"y":462,"score":80,"level":0},{"x":1345,"y":462,"score":34,"level":0},{"x":1352,"y":462,"score":43,"level":0},{"x":1436,"y":462,"score":161,"level":0},{"x":1490,"y":462,"score":33,"level":0},{"x":391,"y":463,"score":55,"level":0},{"x":458,"y":463,"score":33,"level":0},{"x":485,"y":463,"score":89,"level":0},{"x":579,"y":463,"score":31,"level":0},{"x":631,"y":463,"score":42,"level":0},{"x":1004,"y":463,"score":120,"level":0},{"x":1035,"y":463,"score":28,"level":0},{"x":1111,"y":463,"score":29,"level":0},{"x":1214,"y":463,"score":51,"level":0},{"x":1222,"y":463,"score":200,"level":0},{"x":1238,"y":463,"score":83,"level":0},{"x":1320,"y":463,"score":69,"level":0},{"x":1424,"y":463,"score":51,"level":0},{"x":421,"y":464,"score":89,"level":0},{"x":592,"y":464,"score":34,"level":0},{"x":598,"y":464,"score":30,"level":0},{"x":746,"y":464,"score":145,"level":0},{"x":781,"y":464,"score":123,"level":0},{"x":871,"y":464,"score":41,"level":0},{"x":904,"y":464,"score":26,"level":0},{"x":915,"y":464,"score":87,"level":0},{"x":982,"y":464,"score":104,"level":0},{"x":1009,"y":464,"score":91,"level":0},{"x":1053,"y":464,"score":93,"level":0},{"x":1066,"y":464,"score":72,"level":0},{"x":1157,"y":464,"score":67,"level":0},{"x":1227,"y":464,"score":144,"level":0},{"x":1261,"y":464,"score":60,"level":0},{"x":1263,"y":464,"score":62,"level":0},{"x":1339,"y":464,"score":100,"level":0},{"x":1383,"y":464,"score":45,"level":0},{"x":1386,"y":464,"score":32,"level":0},{"x":1484,"y":464,"score":111,"level":0},{"x":397,"y":465,"score":37,"level":0},{"x":409,"y":465,"score":96,"level":0},{"x":648,"y":465,"score":62,"level":0},{"x":656,"y":465,"score":42,"level":0},{"x":897,"y":465,"score":115,"level":0},{"x":928,"y":465,"score":52,"level":0},{"x":940,"y":465,"score":43,"level":0},{"x":968,"y":465,"score":35,"level":0},{"x":1017,"y":465,"score":60,"level":0},{"x":1071,"y":465,"score":40,"level":0},{"x":1077,"y":465,"score":54,"level":0},{"x":1126,"y":465,"score":73,"level":0},{"x":1143,"y":465,"score":42,"level":0},{"x":1169,"y":465,"score":180,"level":0},{"x":1185,"y":465,"score":38,"level":0},{"x":1234,"y":465,"score":74,"level":0},{"x":1315,"y":465,"score":102,"level":0},{"x":1362,"y":465,"score":41,"level":0},{"x":420,"y":466,"score":96,"level":0},{"x":429,"y":466,"score":105,"level":0},{"x":477,"y":466,"score":143,"level":0},{"x":506,"y":466,"score":30,"level":0},{"x":626,"y":466,"score":51,"level":0},{"x":665,"y":466,"score":81,"level":0},{"x":672,"y":466,"score":146,"level":0},{"x":720,"y":466,"score":62,"level":0},{"x":840,"y":466,"score":68,"level":0},{"x":862,"y":466,"score":84,"level":0},{"x":950,"y":466,"score":119,"level":0},{"x":964,"y":466,"score":30,"level":0},{"x":1040,"y":466,"score":38,"level":0},{"x":1042,"y":466,"score":41,"level":0},{"x":1069,"y":466,"score":103,"level":0},{"x":1074,"y":466,"score":41,"level":0},{"x":1164,"y":466,"score":44,"level":0},{"x":1179,"y":466,"score":208,"level":0},{"x":1255,"y":466,"score":43,"level":0},{"x":1302,"y":466,"score":65,"level":0},{"x":1307,"y":466,"score":64,"level":0},{"x":1419,"y":466,"score":45,"level":0},{"x":382,"y":467,"score":264,"level":0},{"x":465,"y":467,"score":62,"level":0},{"x":471,"y":467,"score":121,"level":0},{"x":575,"y":467,"score":37,"level":0},{"x":640,"y":467,"score":41,"level":0},{"x":709,"y":467,"score":58,"level":0},{"x":778,"y":467,"score":76,"level":0},{"x":834,"y":467,"score":154,"level":0},{"x":878,"y":467,"score":86,"level":0},{"x":884,"y":467,"score":32,"level":0},{"x":889,"y":467,"score":69,"level":0},{"x":1002,"y":467,"score":29,"level":0},{"x":1005,"y":467,"score":123,"level":0},{"x":1078,"y":467,"score":67,"level":0},{"x":1080,"y":467,"score":36,"level":0},{"x":1101,"y":467,"score":67,"level":0},{"x":1158,"y":467,"score":88,"level":0},{"x":1234,"y":467,"score":78,"level":0},{"x":1317,"y":467,"score":80,"level":0},{"x":1455,"y":467,"score":33,"level":0},{"x":1461,"y":467,"score":53,"level":0},{"x":1487,"y":467,"score":32,"level":0},{"x":377,"y":468,"score":72,"level":0},{"x":488,"y":468,"score":42,"level":0},{"x":570,"y":468,"score":67,"level":0},{"x":688,"y":468,"score":36,"level":0},{"x":700,"y":468,"score":48,"level":0},{"x":724,"y":468,"score":97,"level":0},{"x":733,"y":468,"score":62,"level":0},{"x":738,"y":468,"score":179,"level":0},{"x":862,"y":468,"score":75,"level":0},{"x":1072,"y":468,"score":30,"level":0},{"x":1121,"y":468,"score":84,"level":0},{"x":1144,"y":468,"score":58,"level":0},{"x":1238,"y":468,"score":59,"level":0},{"x":1266,"y":468,"score":42,"level":0},{"x":1358,"y":468,"score":30,"level":0},{"x":1375,"y":468,"score":32,"level":0},{"x":1426,"y":468,"score":105,"level":0},{"x":1434,"y":468,"score":38,"level":0},{"x":1448,"y":468,"score":120,"level":0},{"x":403,"y":469,"score":104,"level":0},{"x":439,"y":469,"score":126,"level":0},{"x":526,"y":469,"score":38,"level":0},{"x":542,"y":469,"score":34,"level":0},{"x":650,"y":469,"score":117,"level":0},{"x":896,"y":469,"score":33,"level":0},{"x":900,"y":469,"score":60,"level":0},{"x":1017,"y":469,"score":36,"level":0},{"x":1114,"y":469,"score":55,"level":0},{"x":1157,"y":469,"score":33,"level":0},{"x":1193,"y":469,"score":77,"level":0},{"x":1221,"y":469,"score":109,"level":0},{"x":1231,"y":469,"score":77,"level":0},{"x":1246,"y":469,"score":37,"level":0},{"x":1340,"y":469,"score":93,"level":0},{"x":1353,"y":469,"score":41,"level":0},{"x":1431,"y":469,"score":47,"level":0},{"x":1484,"y":469,"score":47,"level":0},{"x":393,"y":470,"score":81,"level":0},{"x":423,"y":470,"score":31,"level":0},{"x":441,"y":470,"score":74,"level":0},{"x":460,"y":470,"score":95,"level":0},{"x":514,"y":470,"score":77,"level":0},{"x":565,"y":470,"score":31,"level":0},{"x":622,"y":470,"score":51,"level":0},{"x":660,"y":470,"score":61,"level":0},{"x":666,"y":470,"score":31,"level":0},{"x":678,"y":470,"score":40,"level":0},{"x":715,"y":470,"score":111,"level":0},{"x":731,"y":470,"score":28,"level":0},{"x":831,"y":470,"score":215,"level":0},{"x":865,"y":470,"score":89,"level":0},{"x":871,"y":470,"score":144,"level":0},{"x":985,"y":470,"score":141,"level":0},{"x":1077,"y":470,"score":45,"level":0},{"x":1104,"y":470,"score":26,"level":0},{"x":1167,"y":470,"score":46,"level":0},{"x":1312,"y":470,"score":121,"level":0},{"x":427,"y":471,"score":39,"level":0},{"x":475,"y":471,"score":138,"level":0},{"x":506,"y":471,"score":132,"level":0},{"x":626,"y":471,"score":49,"level":0},{"x":750,"y":471,"score":178,"level":0},{"x":910,"y":471,"score":33,"level":0},{"x":937,"y":471,"score":38,"level":0},{"x":957,"y":471,"score":195,"level":0},{"x":996,"y":471,"score":108,"level":0},{"x":1008,"y":471,"score":109,"level":0},{"x":1041,"y":471,"score":62,"level":0},{"x":1062,"y":471,"score":56,"level":0},{"x":1096,"y":471,"score":107,"level":0},{"x":1249,"y":471,"score":70,"level":0},{"x":431,"y":472,"score":72,"level":0},{"x":481,"y":472,"score":48,"level":0},{"x":486,"y":472,"score":48,"level":0},{"x":498,"y":472,"score":26,"level":0},{"x":512,"y":472,"score":58,"level":0},{"x":535,"y":472,"score":34,"level":0},{"x":542,"y":472,"score":29,"level":0},{"x":629,"y":472,"score":40,"level":0},{"x":633,"y":472,"score":36,"level":0},{"x":917,"y":472,"score":103,"level":0},{"x":930,"y":472,"score":107,"level":0},{"x":950,"y":472,"score":51,"level":0},{"x":991,"y":472,"score":54,"level":0},{"x":1017,"y":472,"score":52,"level":0},{"x":1159,"y":472,"score":148,"level":0},{"x":1220,"y":472,"score":52,"level":0},{"x":1243,"y":472,"score":28,"level":0},{"x":1328,"y":472,"score":70,"level":0},{"x":1379,"y":472,"score":26,"level":0},{"x":1434,"y":472,"score":123,"level":0},{"x":1454,"y":472,"score":63,"level":0},{"x":1467,"y":472,"score":29,"level":0},{"x":645,"y":473,"score":99,"level":0},{"x":680,"y":473,"score":38,"level":0},{"x":700,"y":473,"score":44,"level":0},{"x":723,"y":473,"score":118,"level":0},{"x":732,"y":473,"score":41,"level":0},{"x":743,"y":473,"score":136,"level":0},{"x":837,"y":473,"score":30,"level":0},{"x":878,"y":473,"score":39,"level":0},{"x":883,"y":473,"score":32,"level":0},{"x":893,"y":473,"score":78,"level":0},{"x":944,"y":473,"score":78,"level":0},{"x":1080,"y":473,"score":28,"level":0},{"x":1140,"y":473,"score":55,"level":0},{"x":1154,"y":473,"score":162,"level":0},{"x":1173,"y":473,"score":84,"level":0},{"x":1262,"y":473,"score":73,"level":0},{"x":1333,"y":473,"score":39,"level":0},{"x":383,"y":474,"score":86,"level":0},{"x":403,"y":474,"score":46,"level":0},{"x":409,"y":474,"score":61,"level":0},{"x":414,"y":474,"score":34,"level":0},{"x":468,"y":474,"score":38,"level":0},{"x":695,"y":474,"score":70,"level":0},{"x":921,"y":474,"score":73,"level":0},{"x":973,"y":474,"score":230,"level":0},{"x":1038,"y":474,"score":111,"level":0},{"x":1052,"y":474,"score":49,"level":0},{"x":1066,"y":474,"score":56,"level":0},{"x":1068,"y":474,"score":36,"level":0},{"x":1071,"y":474,"score":38,"level":0},{"x":1075,"y":474,"score":136,"level":0},{"x":1091,"y":474,"score":59,"level":0},{"x":1127,"y":474,"score":63,"level":0},{"x":1133,"y":474,"score":218,"level":0},{"x":1160,"y":474,"score":96,"level":0},{"x":1191,"y":474,"score":29,"level":0},{"x":1203,"y":474,"score":252,"level":0},{"x":1230,"y":474,"score":68,"level":0},{"x":1275,"y":474,"score":114,"level":0},{"x":394,"y":475,"score":48,"level":0},{"x":419,"y":475,"score":132,"level":0},{"x":492,"y":475,"score":33,"level":0},{"x":539,"y":475,"score":74,"level":0},{"x":638,"y":475,"score":62,"level":0},{"x":837,"y":475,"score":49,"level":0},{"x":863,"y":475,"score":129,"level":0},{"x":871,"y":475,"score":36,"level":0},{"x":873,"y":475,"score":63,"level":0},{"x":938,"y":475,"score":64,"level":0},{"x":962,"y":475,"score":63,"level":0},{"x":968,"y":475,"score":71,"level":0},{"x":1197,"y":475,"score":78,"level":0},{"x":1269,"y":475,"score":60,"level":0},{"x":1440,"y":475,"score":102,"level":0},{"x":1449,"y":475,"score":138,"level":0},{"x":1457,"y":475,"score":60,"level":0},{"x":424,"y":476,"score":120,"level":0},{"x":467,"y":476,"score":48,"level":0},{"x":647,"y":476,"score":36,"level":0},{"x":672,"y":476,"score":94,"level":0},{"x":677,"y":476,"score":102,"level":0},{"x":707,"y":476,"score":198,"level":0},{"x":882,"y":476,"score":66,"level":0},{"x":979,"y":476,"score":177,"level":0},{"x":1001,"y":476,"score":127,"level":0},{"x":1043,"y":476,"score":26,"level":0},{"x":1115,"y":476,"score":27,"level":0},{"x":1122,"y":476,"score":102,"level":0},{"x":1239,"y":476,"score":110,"level":0},{"x":1311,"y":476,"score":61,"level":0},{"x":1319,"y":476,"score":80,"level":0},{"x":1460,"y":476,"score":72,"level":0},{"x":414,"y":477,"score":85,"level":0},{"x":475,"y":477,"score":33,"level":0},{"x":511,"y":477,"score":26,"level":0},{"x":528,"y":477,"score":68,"level":0},{"x":550,"y":477,"score":93,"level":0},{"x":556,"y":477,"score":44,"level":0},{"x":605,"y":477,"score":28,"level":0},{"x":633,"y":477,"score":67,"level":0},{"x":925,"y":477,"score":70,"level":0},{"x":943,"y":477,"score":112,"level":0},{"x":1010,"y":477,"score":80,"level":0},{"x":1015,"y":477,"score":30,"level":0},{"x":1049,"y":477,"score":40,"level":0},{"x":1065,"y":477,"score":50,"level":0},{"x":1101,"y":477,"score":35,"level":0},{"x":1106,"y":477,"score":26,"level":0},{"x":1165,"y":477,"score":47,"level":0},{"x":1241,"y":477,"score":90,"level":0},{"x":1352,"y":477,"score":52,"level":0},{"x":1364,"y":477,"score":44,"level":0},{"x":1377,"y":477,"score":38,"level":0},{"x":1443,"y":477,"score":105,"level":0},{"x":377,"y":478,"score":94,"level":0},{"x":431,"y":478,"score":73,"level":0},{"x":436,"y":478,"score":77,"level":0},{"x":464,"y":478,"score":40,"level":0},{"x":535,"y":478,"score":79,"level":0},{"x":638,"y":478,"score":94,"level":0},{"x":678,"y":478,"score":137,"level":0},{"x":713,"y":478,"score":68,"level":0},{"x":735,"y":478,"score":92,"level":0},{"x":746,"y":478,"score":97,"level":0},{"x":861,"y":478,"score":33,"level":0},{"x":920,"y":478,"score":33,"level":0},{"x":934,"y":478,"score":74,"level":0},{"x":959,"y":478,"score":53,"level":0},{"x":1019,"y":478,"score":28,"level":0},{"x":1021,"y":478,"score":30,"level":0},{"x":1080,"y":478,"score":167,"level":0},{"x":1369,"y":478,"score":30,"level":0},{"x":1380,"y":478,"score":57,"level":0},{"x":1430,"y":478,"score":80,"level":0},{"x":1434,"y":478,"score":114,"level":0},{"x":1439,"y":478,"score":98,"level":0},{"x":403,"y":479,"score":68,"level":0},{"x":459,"y":479,"score":76,"level":0},{"x":508,"y":479,"score":69,"level":0},{"x":574,"y":479,"score":42,"level":0},{"x":624,"y":479,"score":44,"level":0},{"x":627,"y":479,"score":34,"level":0},{"x":668,"y":479,"score":41,"level":0},{"x":877,"y":479,"score":42,"level":0},{"x":914,"y":479,"score":102,"level":0},{"x":1054,"y":479,"score":128,"level":0},{"x":1075,"y":479,"score":267,"level":0},{"x":1088,"y":479,"score":68,"level":0},{"x":1094,"y":479,"score":142,"level":0},{"x":1144,"y":479,"score":64,"level":0},{"x":1154,"y":479,"score":34,"level":0},{"x":1158,"y":479,"score":106,"level":0},{"x":1226,"y":479,"score":120,"level":0},{"x":1263,"y":479,"score":43,"level":0},{"x":1291,"y":479,"score":29,"level":0},{"x":1382,"y":479,"score":67,"level":0},{"x":415,"y":480,"score":73,"level":0},{"x":495,"y":480,"score":113,"level":0},{"x":567,"y":480,"score":87,"level":0},{"x":632,"y":480,"score":35,"level":0},{"x":646,"y":480,"score":39,"level":0},{"x":695,"y":480,"score":147,"level":0},{"x":725,"y":480,"score":59,"level":0},{"x":892,"y":480,"score":56,"level":0},{"x":938,"y":480,"score":66,"level":0},{"x":955,"y":480,"score":58,"level":0},{"x":1003,"y":480,"score":40,"level":0},{"x":1181,"y":480,"score":95,"level":0},{"x":1190,"y":480,"score":100,"level":0},{"x":1202,"y":480,"score":115,"level":0},{"x":1209,"y":480,"score":137,"level":0},{"x":1214,"y":480,"score":75,"level":0},{"x":1270,"y":480,"score":54,"level":0},{"x":1314,"y":480,"score":53,"level":0},{"x":503,"y":481,"score":74,"level":0},{"x":542,"y":481,"score":55,"level":0},{"x":690,"y":481,"score":67,"level":0},{"x":741,"y":481,"score":72,"level":0},{"x":835,"y":481,"score":111,"level":0},{"x":870,"y":481,"score":56,"level":0},{"x":880,"y":481,"score":40,"level":0},{"x":886,"y":481,"score":76,"level":0},{"x":899,"y":481,"score":48,"level":0},{"x":949,"y":481,"score":27,"level":0},{"x":965,"y":481,"score":131,"level":0},{"x":1013,"y":481,"score":75,"level":0},{"x":1032,"y":481,"score":31,"level":0},{"x":1037,"y":481,"score":36,"level":0},{"x":1043,"y":481,"score":107,"level":0},{"x":1239,"y":481,"score":41,"level":0},{"x":1251,"y":481,"score":60,"level":0},{"x":1340,"y":481,"score":28,"level":0},{"x":1418,"y":481,"score":105,"level":0},{"x":377,"y":482,"score":70,"level":0},{"x":462,"y":482,"score":56,"level":0},{"x":472,"y":482,"score":87,"level":0},{"x":485,"y":482,"score":73,"level":0},{"x":532,"y":482,"score":29,"level":0},{"x":550,"y":482,"score":33,"level":0},{"x":557,"y":482,"score":83,"level":0},{"x":687,"y":482,"score":172,"level":0},{"x":700,"y":482,"score":35,"level":0},{"x":705,"y":482,"score":67,"level":0},{"x":744,"y":482,"score":35,"level":0},{"x":1018,"y":482,"score":42,"level":0},{"x":1057,"y":482,"score":87,"level":0},{"x":1083,"y":482,"score":33,"level":0},{"x":1114,"y":482,"score":189,"level":0},{"x":1130,"y":482,"score":32,"level":0},{"x":1142,"y":482,"score":58,"level":0},{"x":1166,"y":482,"score":86,"level":0},{"x":1170,"y":482,"score":38,"level":0},{"x":1268,"y":482,"score":29,"level":0},{"x":1325,"y":482,"score":128,"level":0},{"x":1445,"y":482,"score":70,"level":0},{"x":513,"y":483,"score":56,"level":0},{"x":517,"y":483,"score":66,"level":0},{"x":662,"y":483,"score":110,"level":0},{"x":873,"y":483,"score":30,"level":0},{"x":945,"y":483,"score":54,"level":0},{"x":980,"y":483,"score":54,"level":0},{"x":1000,"y":483,"score":32,"level":0},{"x":1008,"y":483,"score":30,"level":0},{"x":1048,"y":483,"score":32,"level":0},{"x":1069,"y":483,"score":84,"level":0},{"x":1120,"y":483,"score":88,"level":0},{"x":1150,"y":483,"score":62,"level":0},{"x":1255,"y":483,"score":40,"level":0},{"x":1300,"y":483,"score":51,"level":0},{"x":1330,"y":483,"score":73,"level":0},{"x":397,"y":484,"score":48,"level":0},{"x":479,"y":484,"score":26,"level":0},{"x":547,"y":484,"score":44,"level":0},{"x":554,"y":484,"score":43,"level":0},{"x":628,"y":484,"score":97,"level":0},{"x":638,"y":484,"score":90,"level":0},{"x":704,"y":484,"score":82,"level":0},{"x":878,"y":484,"score":41,"level":0},{"x":975,"y":484,"score":109,"level":0},{"x":1073,"y":484,"score":72,"level":0},{"x":1075,"y":484,"score":83,"level":0},{"x":1094,"y":484,"score":75,"level":0},{"x":1175,"y":484,"score":52,"level":0},{"x":1208,"y":484,"score":128,"level":0},{"x":1381,"y":484,"score":104,"level":0},{"x":1440,"y":484,"score":132,"level":0},{"x":402,"y":485,"score":50,"level":0},{"x":437,"y":485,"score":46,"level":0},{"x":500,"y":485,"score":63,"level":0},{"x":505,"y":485,"score":38,"level":0},{"x":574,"y":485,"score":116,"level":0},{"x":633,"y":485,"score":56,"level":0},{"x":679,"y":485,"score":33,"level":0},{"x":694,"y":485,"score":61,"level":0},{"x":907,"y":485,"score":33,"level":0},{"x":1044,"y":485,"score":54,"level":0},{"x":1083,"y":485,"score":92,"level":0},{"x":1142,"y":485,"score":75,"level":0},{"x":1252,"y":485,"score":36,"level":0},{"x":1267,"y":485,"score":102,"level":0},{"x":1322,"y":485,"score":32,"level":0},{"x":1365,"y":485,"score":31,"level":0},{"x":1367,"y":485,"score":48,"level":0},{"x":1372,"y":485,"score":104,"level":0},{"x":1435,"y":485,"score":82,"level":0},{"x":1461,"y":485,"score":71,"level":0},{"x":391,"y":486,"score":36,"level":0},{"x":420,"y":486,"score":95,"level":0},{"x":425,"y":486,"score":58,"level":0},{"x":517,"y":486,"score":50,"level":0},{"x":609,"y":486,"score":99,"level":0},{"x":689,"y":486,"score":117,"level":0},{"x":725,"y":486,"score":79,"level":0},{"x":749,"y":486,"score":96,"level":0},{"x":855,"y":486,"score":69,"level":0},{"x":861,"y":486,"score":122,"level":0},{"x":916,"y":486,"score":122,"level":0},{"x":980,"y":486,"score":35,"level":0},{"x":985,"y":486,"score":59,"level":0},{"x":1010,"y":486,"score":110,"level":0},{"x":1032,"y":486,"score":31,"level":0},{"x":1062,"y":486,"score":32,"level":0},{"x":1078,"y":486,"score":39,"level":0},{"x":1089,"y":486,"score":105,"level":0},{"x":1125,"y":486,"score":81,"level":0},{"x":1154,"y":486,"score":84,"level":0},{"x":1221,"y":486,"score":60,"level":0},{"x":1244,"y":486,"score":28,"level":0},{"x":1399,"y":486,"score":34,"level":0},{"x":380,"y":487,"score":28,"level":0},{"x":384,"y":487,"score":48,"level":0},{"x":464,"y":487,"score":27,"level":0},{"x":470,"y":487,"score":53,"level":0},{"x":480,"y":487,"score":45,"level":0},{"x":495,"y":487,"score":60,"level":0},{"x":506,"y":487,"score":28,"level":0},{"x":509,"y":487,"score":56,"level":0},{"x":533,"y":487,"score":48,"level":0},{"x":540,"y":487,"score":26,"level":0},{"x":573,"y":487,"score":66,"level":0},{"x":644,"y":487,"score":31,"level":0},{"x":723,"y":487,"score":58,"level":0},{"x":746,"y":487,"score":98,"level":0},{"x":833,"y":487,"score":135,"level":0},{"x":879,"y":487,"score":51,"level":0},{"x":885,"y":487,"score":87,"level":0},{"x":941,"y":487,"score":105,"level":0},{"x":1004,"y":487,"score":74,"level":0},{"x":1099,"y":487,"score":54,"level":0},{"x":1109,"y":487,"score":44,"level":0},{"x":1168,"y":487,"score":74,"level":0},{"x":1195,"y":487,"score":85,"level":0},{"x":1240,"y":487,"score":38,"level":0},{"x":1304,"y":487,"score":51,"level":0},{"x":459,"y":488,"score":134,"level":0},{"x":475,"y":488,"score":46,"level":0},{"x":583,"y":488,"score":70,"level":0},{"x":684,"y":488,"score":241,"level":0},{"x":718,"y":488,"score":35,"level":0},{"x":890,"y":488,"score":168,"level":0},{"x":931,"y":488,"score":56,"level":0},{"x":1018,"y":488,"score":61,"level":0},{"x":1023,"y":488,"score":70,"level":0},{"x":1039,"y":488,"score":138,"level":0},{"x":1070,"y":488,"score":60,"level":0},{"x":1204,"y":488,"score":179,"level":0},{"x":1227,"y":488,"score":26,"level":0},{"x":1315,"y":488,"score":50,"level":0},{"x":1321,"y":488,"score":82,"level":0},{"x":1360,"y":488,"score":51,"level":0},{"x":1369,"y":488,"score":26,"level":0},{"x":1458,"y":488,"score":34,"level":0},{"x":1470,"y":488,"score":30,"level":0},{"x":430,"y":489,"score":52,"level":0},{"x":534,"y":489,"score":71,"level":0},{"x":563,"y":489,"score":49,"level":0},{"x":571,"y":489,"score":61,"level":0},{"x":656,"y":489,"score":44,"level":0},{"x":811,"y":489,"score":30,"level":0},{"x":849,"y":489,"score":56,"level":0},{"x":873,"y":489,"score":68,"level":0},{"x":911,"y":489,"score":54,"level":0},{"x":921,"y":489,"score":30,"level":0},{"x":967,"y":489,"score":41,"level":0},{"x":977,"y":489,"score":42,"level":0},{"x":997,"y":489,"score":70,"level":0},{"x":1002,"y":489,"score":40,"level":0},{"x":1042,"y":489,"score":36,"level":0},{"x":1094,"y":489,"score":76,"level":0},{"x":1096,"y":489,"score":70,"level":0},{"x":1106,"y":489,"score":32,"level":0},{"x":1162,"y":489,"score":138,"level":0},{"x":1209,"y":489,"score":103,"level":0},{"x":1218,"y":489,"score":219,"level":0},{"x":1233,"y":489,"score":89,"level":0},{"x":1375,"y":489,"score":29,"level":0},{"x":1381,"y":489,"score":151,"level":0},{"x":1425,"y":489,"score":104,"level":0},{"x":1443,"y":489,"score":94,"level":0},{"x":1453,"y":489,"score":29,"level":0},{"x":1482,"y":489,"score":49,"level":0},{"x":436,"y":490,"score":130,"level":0},{"x":580,"y":490,"score":50,"level":0},{"x":590,"y":490,"score":146,"level":0},{"x":637,"y":490,"score":71,"level":0},{"x":715,"y":490,"score":92,"level":0},{"x":875,"y":490,"score":137,"level":0},{"x":946,"y":490,"score":182,"level":0},{"x":984,"y":490,"score":52,"level":0},{"x":1045,"y":490,"score":34,"level":0},{"x":1047,"y":490,"score":37,"level":0},{"x":1104,"y":490,"score":62,"level":0},{"x":1175,"y":490,"score":40,"level":0},{"x":1180,"y":490,"score":124,"level":0},{"x":1337,"y":490,"score":38,"level":0},{"x":1348,"y":490,"score":36,"level":0},{"x":1360,"y":490,"score":48,"level":0},{"x":391,"y":491,"score":83,"level":0},{"x":393,"y":491,"score":83,"level":0},{"x":398,"y":491,"score":95,"level":0},{"x":486,"y":491,"score":58,"level":0},{"x":519,"y":491,"score":47,"level":0},{"x":574,"y":491,"score":52,"level":0},{"x":673,"y":491,"score":98,"level":0},{"x":700,"y":491,"score":98,"level":0},{"x":730,"y":491,"score":83,"level":0},{"x":740,"y":491,"score":61,"level":0},{"x":752,"y":491,"score":68,"level":0},{"x":837,"y":491,"score":51,"level":0},{"x":902,"y":491,"score":93,"level":0},{"x":934,"y":491,"score":116,"level":0},{"x":1075,"y":491,"score":64,"level":0},{"x":1083,"y":491,"score":146,"level":0},{"x":1142,"y":491,"score":44,"level":0},{"x":1262,"y":491,"score":193,"level":0},{"x":1448,"y":491,"score":203,"level":0},{"x":1456,"y":491,"score":50,"level":0},{"x":1466,"y":491,"score":57,"level":0},{"x":442,"y":492,"score":31,"level":0},{"x":475,"y":492,"score":109,"level":0},{"x":493,"y":492,"score":158,"level":0},{"x":653,"y":492,"score":68,"level":0},{"x":662,"y":492,"score":119,"level":0},{"x":735,"y":492,"score":90,"level":0},{"x":849,"y":492,"score":34,"level":0},{"x":868,"y":492,"score":84,"level":0},{"x":880,"y":492,"score":99,"level":0},{"x":940,"y":492,"score":37,"level":0},{"x":984,"y":492,"score":67,"level":0},{"x":1061,"y":492,"score":27,"level":0},{"x":1088,"y":492,"score":69,"level":0},{"x":1113,"y":492,"score":70,"level":0},{"x":1130,"y":492,"score":44,"level":0},{"x":1145,"y":492,"score":78,"level":0},{"x":1164,"y":492,"score":56,"level":0},{"x":1189,"y":492,"score":44,"level":0},{"x":1241,"y":492,"score":32,"level":0},{"x":1321,"y":492,"score":61,"level":0},{"x":1461,"y":492,"score":39,"level":0},{"x":1486,"y":492,"score":38,"level":0},{"x":377,"y":493,"score":49,"level":0},{"x":382,"y":493,"score":60,"level":0},{"x":527,"y":493,"score":138,"level":0},{"x":637,"y":493,"score":31,"level":0},{"x":682,"y":493,"score":43,"level":0},{"x":705,"y":493,"score":53,"level":0},{"x":757,"y":493,"score":48,"level":0},{"x":823,"y":493,"score":29,"level":0},{"x":911,"y":493,"score":63,"level":0},{"x":915,"y":493,"score":45,"level":0},{"x":994,"y":493,"score":48,"level":0},{"x":1036,"y":493,"score":101,"level":0},{"x":1069,"y":493,"score":101,"level":0},{"x":1180,"y":493,"score":88,"level":0},{"x":1186,"y":493,"score":69,"level":0},{"x":1209,"y":493,"score":89,"level":0},{"x":1424,"y":493,"score":47,"level":0},{"x":413,"y":494,"score":139,"level":0},{"x":429,"y":494,"score":70,"level":0},{"x":506,"y":494,"score":107,"level":0},{"x":543,"y":494,"score":90,"level":0},{"x":570,"y":494,"score":131,"level":0},{"x":575,"y":494,"score":48,"level":0},{"x":582,"y":494,"score":41,"level":0},{"x":627,"y":494,"score":89,"level":0},{"x":633,"y":494,"score":33,"level":0},{"x":677,"y":494,"score":79,"level":0},{"x":691,"y":494,"score":109,"level":0},{"x":696,"y":494,"score":36,"level":0},{"x":751,"y":494,"score":32,"level":0},{"x":928,"y":494,"score":40,"level":0},{"x":1055,"y":494,"score":183,"level":0},{"x":1326,"y":494,"score":98,"level":0},{"x":1374,"y":494,"score":82,"level":0},{"x":1431,"y":494,"score":48,"level":0},{"x":405,"y":495,"score":92,"level":0},{"x":515,"y":495,"score":94,"level":0},{"x":541,"y":495,"score":82,"level":0},{"x":710,"y":495,"score":66,"level":0},{"x":720,"y":495,"score":95,"level":0},{"x":725,"y":495,"score":57,"level":0},{"x":734,"y":495,"score":96,"level":0},{"x":854,"y":495,"score":91,"level":0},{"x":906,"y":495,"score":79,"level":0},{"x":986,"y":495,"score":70,"level":0},{"x":991,"y":495,"score":40,"level":0},{"x":1090,"y":495,"score":77,"level":0},{"x":1099,"y":495,"score":88,"level":0},{"x":1112,"y":495,"score":36,"level":0},{"x":1126,"y":495,"score":43,"level":0},{"x":1204,"y":495,"score":228,"level":0},{"x":1212,"y":495,"score":51,"level":0},{"x":1217,"y":495,"score":183,"level":0},{"x":1335,"y":495,"score":41,"level":0},{"x":1459,"y":495,"score":38,"level":0},{"x":1465,"y":495,"score":42,"level":0},{"x":463,"y":496,"score":71,"level":0},{"x":520,"y":496,"score":51,"level":0},{"x":669,"y":496,"score":60,"level":0},{"x":782,"y":496,"score":35,"level":0},{"x":790,"y":496,"score":29,"level":0},{"x":800,"y":496,"score":81,"level":0},{"x":849,"y":496,"score":30,"level":0},{"x":860,"y":496,"score":162,"level":0},{"x":894,"y":496,"score":119,"level":0},{"x":953,"y":496,"score":30,"level":0},{"x":1006,"y":496,"score":172,"level":0},{"x":1014,"y":496,"score":53,"level":0},{"x":1050,"y":496,"score":37,"level":0},{"x":1075,"y":496,"score":128,"level":0},{"x":1083,"y":496,"score":48,"level":0},{"x":1129,"y":496,"score":29,"level":0},{"x":1135,"y":496,"score":80,"level":0},{"x":1159,"y":496,"score":108,"level":0},{"x":1174,"y":496,"score":35,"level":0},{"x":1179,"y":496,"score":28,"level":0},{"x":1188,"y":496,"score":72,"level":0},{"x":1374,"y":496,"score":78,"level":0},{"x":1417,"y":496,"score":76,"level":0},{"x":1430,"y":496,"score":90,"level":0},{"x":1489,"y":496,"score":82,"level":0},{"x":405,"y":497,"score":116,"level":0},{"x":416,"y":497,"score":129,"level":0},{"x":425,"y":497,"score":31,"level":0},{"x":437,"y":497,"score":38,"level":0},{"x":566,"y":497,"score":40,"level":0},{"x":632,"y":497,"score":35,"level":0},{"x":655,"y":497,"score":46,"level":0},{"x":660,"y":497,"score":88,"level":0},{"x":750,"y":497,"score":39,"level":0},{"x":752,"y":497,"score":30,"level":0},{"x":834,"y":497,"score":98,"level":0},{"x":839,"y":497,"score":27,"level":0},{"x":868,"y":497,"score":59,"level":0},{"x":881,"y":497,"score":63,"level":0},{"x":1001,"y":497,"score":101,"level":0},{"x":1093,"y":497,"score":33,"level":0},{"x":1105,"y":497,"score":72,"level":0},{"x":1142,"y":497,"score":174,"level":0},{"x":1183,"y":497,"score":26,"level":0},{"x":1193,"y":497,"score":40,"level":0},{"x":1238,"y":497,"score":158,"level":0},{"x":1256,"y":497,"score":83,"level":0},{"x":1270,"y":497,"score":156,"level":0},{"x":1355,"y":497,"score":51,"level":0},{"x":1448,"y":497,"score":63,"level":0},{"x":1454,"y":497,"score":64,"level":0},{"x":1460,"y":497,"score":82,"level":0},{"x":1466,"y":497,"score":70,"level":0},{"x":1485,"y":497,"score":48,"level":0},{"x":386,"y":498,"score":118,"level":0},{"x":391,"y":498,"score":104,"level":0},{"x":486,"y":498,"score":32,"level":0},{"x":577,"y":498,"score":83,"level":0},{"x":670,"y":498,"score":64,"level":0},{"x":695,"y":498,"score":35,"level":0},{"x":708,"y":498,"score":32,"level":0},{"x":756,"y":498,"score":54,"level":0},{"x":776,"y":498,"score":46,"level":0},{"x":783,"y":498,"score":50,"level":0},{"x":829,"y":498,"score":77,"level":0},{"x":886,"y":498,"score":73,"level":0},{"x":902,"y":498,"score":80,"level":0},{"x":917,"y":498,"score":47,"level":0},{"x":929,"y":498,"score":90,"level":0},{"x":985,"y":498,"score":52,"level":0},{"x":1163,"y":498,"score":55,"level":0},{"x":1198,"y":498,"score":118,"level":0},{"x":1316,"y":498,"score":77,"level":0},{"x":1321,"y":498,"score":92,"level":0},{"x":1362,"y":498,"score":32,"level":0},{"x":1437,"y":498,"score":62,"level":0},{"x":398,"y":499,"score":64,"level":0},{"x":467,"y":499,"score":144,"level":0},{"x":493,"y":499,"score":38,"level":0},{"x":499,"y":499,"score":115,"level":0},{"x":532,"y":499,"score":47,"level":0},{"x":572,"y":499,"score":208,"level":0},{"x":638,"y":499,"score":136,"level":0},{"x":677,"y":499,"score":51,"level":0},{"x":684,"y":499,"score":199,"level":0},{"x":789,"y":499,"score":28,"level":0},{"x":812,"y":499,"score":37,"level":0},{"x":817,"y":499,"score":84,"level":0},{"x":957,"y":499,"score":32,"level":0},{"x":1040,"y":499,"score":41,"level":0},{"x":1045,"y":499,"score":34,"level":0},{"x":1065,"y":499,"score":240,"level":0},{"x":1142,"y":499,"score":146,"level":0},{"x":1147,"y":499,"score":70,"level":0},{"x":1227,"y":499,"score":57,"level":0},{"x":1289,"y":499,"score":70,"level":0},{"x":1338,"y":499,"score":39,"level":0},{"x":1345,"y":499,"score":82,"level":0},{"x":1367,"y":499,"score":31,"level":0},{"x":1374,"y":499,"score":36,"level":0},{"x":1412,"y":499,"score":46,"level":0},{"x":1417,"y":499,"score":65,"level":0},{"x":1432,"y":499,"score":70,"level":0},{"x":1457,"y":499,"score":57,"level":0},{"x":1464,"y":499,"score":50,"level":0},{"x":1470,"y":499,"score":100,"level":0},{"x":473,"y":500,"score":27,"level":0},{"x":526,"y":500,"score":28,"level":0},{"x":541,"y":500,"score":31,"level":0},{"x":561,"y":500,"score":85,"level":0},{"x":615,"y":500,"score":37,"level":0},{"x":628,"y":500,"score":148,"level":0},{"x":649,"y":500,"score":54,"level":0},{"x":651,"y":500,"score":57,"level":0},{"x":689,"y":500,"score":50,"level":0},{"x":720,"y":500,"score":58,"level":0},{"x":725,"y":500,"score":46,"level":0},{"x":850,"y":500,"score":31,"level":0},{"x":859,"y":500,"score":28,"level":0},{"x":876,"y":500,"score":160,"level":0},{"x":896,"y":500,"score":157,"level":0},{"x":902,"y":500,"score":94,"level":0},{"x":982,"y":500,"score":133,"level":0},{"x":993,"y":500,"score":131,"level":0},{"x":1013,"y":500,"score":76,"level":0},{"x":1055,"y":500,"score":136,"level":0},{"x":1080,"y":500,"score":118,"level":0},{"x":1103,"y":500,"score":38,"level":0},{"x":1205,"y":500,"score":198,"level":0},{"x":1269,"y":500,"score":99,"level":0},{"x":1335,"y":500,"score":26,"level":0},{"x":1377,"y":500,"score":40,"level":0},{"x":1383,"y":500,"score":46,"level":0},{"x":476,"y":501,"score":40,"level":0},{"x":487,"y":501,"score":51,"level":0},{"x":514,"y":501,"score":40,"level":0},{"x":577,"y":501,"score":44,"level":0},{"x":582,"y":501,"score":27,"level":0},{"x":702,"y":501,"score":60,"level":0},{"x":732,"y":501,"score":66,"level":0},{"x":749,"y":501,"score":53,"level":0},{"x":799,"y":501,"score":54,"level":0},{"x":894,"y":501,"score":112,"level":0},{"x":966,"y":501,"score":53,"level":0},{"x":1043,"y":501,"score":26,"level":0},{"x":1051,"y":501,"score":72,"level":0},{"x":1075,"y":501,"score":145,"level":0},{"x":1088,"y":501,"score":63,"level":0},{"x":1118,"y":501,"score":50,"level":0},{"x":1120,"y":501,"score":55,"level":0},{"x":1167,"y":501,"score":172,"level":0},{"x":1180,"y":501,"score":142,"level":0},{"x":1185,"y":501,"score":37,"level":0},{"x":1196,"y":501,"score":208,"level":0},{"x":1244,"y":501,"score":92,"level":0},{"x":1351,"y":501,"score":61,"level":0},{"x":1426,"y":501,"score":69,"level":0},{"x":382,"y":502,"score":64,"level":0},{"x":399,"y":502,"score":86,"level":0},{"x":413,"y":502,"score":83,"level":0},{"x":430,"y":502,"score":42,"level":0},{"x":481,"y":502,"score":166,"level":0},{"x":503,"y":502,"score":182,"level":0},{"x":508,"y":502,"score":88,"level":0},{"x":536,"y":502,"score":49,"level":0},{"x":556,"y":502,"score":82,"level":0},{"x":655,"y":502,"score":86,"level":0},{"x":767,"y":502,"score":28,"level":0},{"x":864,"y":502,"score":109,"level":0},{"x":944,"y":502,"score":88,"level":0},{"x":993,"y":502,"score":32,"level":0},{"x":1109,"y":502,"score":35,"level":0},{"x":1112,"y":502,"score":50,"level":0},{"x":1130,"y":502,"score":149,"level":0},{"x":1139,"y":502,"score":66,"level":0},{"x":1249,"y":502,"score":182,"level":0},{"x":1419,"y":502,"score":59,"level":0},{"x":435,"y":503,"score":46,"level":0},{"x":464,"y":503,"score":84,"level":0},{"x":476,"y":503,"score":81,"level":0},{"x":523,"y":503,"score":46,"level":0},{"x":550,"y":503,"score":53,"level":0},{"x":560,"y":503,"score":62,"level":0},{"x":648,"y":503,"score":47,"level":0},{"x":683,"y":503,"score":64,"level":0},{"x":773,"y":503,"score":70,"level":0},{"x":782,"y":503,"score":28,"level":0},{"x":815,"y":503,"score":84,"level":0},{"x":859,"y":503,"score":26,"level":0},{"x":886,"y":503,"score":141,"level":0},{"x":969,"y":503,"score":109,"level":0},{"x":1096,"y":503,"score":91,"level":0},{"x":1106,"y":503,"score":60,"level":0},{"x":1141,"y":503,"score":33,"level":0},{"x":1190,"y":503,"score":93,"level":0},{"x":1269,"y":503,"score":38,"level":0},{"x":1279,"y":503,"score":34,"level":0},{"x":1406,"y":503,"score":30,"level":0},{"x":1444,"y":503,"score":170,"level":0},{"x":1461,"y":503,"score":48,"level":0},{"x":409,"y":504,"score":107,"level":0},{"x":678,"y":504,"score":202,"level":0},{"x":697,"y":504,"score":41,"level":0},{"x":759,"y":504,"score":65,"level":0},{"x":793,"y":504,"score":48,"level":0},{"x":821,"y":504,"score":59,"level":0},{"x":928,"y":504,"score":124,"level":0},{"x":978,"y":504,"score":45,"level":0},{"x":989,"y":504,"score":126,"level":0},{"x":1025,"y":504,"score":35,"level":0},{"x":1043,"y":504,"score":66,"level":0},{"x":1174,"y":504,"score":67,"level":0},{"x":1236,"y":504,"score":72,"level":0},{"x":1371,"y":504,"score":39,"level":0},{"x":1426,"y":504,"score":31,"level":0},{"x":400,"y":505,"score":45,"level":0},{"x":424,"y":505,"score":55,"level":0},{"x":505,"y":505,"score":44,"level":0},{"x":529,"y":505,"score":40,"level":0},{"x":579,"y":505,"score":34,"level":0},{"x":639,"y":505,"score":72,"level":0},{"x":771,"y":505,"score":70,"level":0},{"x":773,"y":505,"score":59,"level":0},{"x":785,"y":505,"score":30,"level":0},{"x":830,"y":505,"score":75,"level":0},{"x":876,"y":505,"score":36,"level":0},{"x":912,"y":505,"score":27,"level":0},{"x":938,"y":505,"score":36,"level":0},{"x":948,"y":505,"score":76,"level":0},{"x":955,"y":505,"score":195,"level":0},{"x":1036,"y":505,"score":98,"level":0},{"x":1046,"y":505,"score":32,"level":0},{"x":1119,"y":505,"score":54,"level":0},{"x":1135,"y":505,"score":28,"level":0},{"x":1183,"y":505,"score":57,"level":0},{"x":1379,"y":505,"score":76,"level":0},{"x":1429,"y":505,"score":48,"level":0},{"x":393,"y":506,"score":92,"level":0},{"x":432,"y":506,"score":60,"level":0},{"x":519,"y":506,"score":28,"level":0},{"x":563,"y":506,"score":66,"level":0},{"x":627,"y":506,"score":162,"level":0},{"x":654,"y":506,"score":142,"level":0},{"x":664,"y":506,"score":143,"level":0},{"x":718,"y":506,"score":37,"level":0},{"x":840,"y":506,"score":33,"level":0},{"x":843,"y":506,"score":56,"level":0},{"x":868,"y":506,"score":28,"level":0},{"x":879,"y":506,"score":46,"level":0},{"x":907,"y":506,"score":151,"level":0},{"x":921,"y":506,"score":124,"level":0},{"x":975,"y":506,"score":60,"level":0},{"x":1000,"y":506,"score":114,"level":0},{"x":1010,"y":506,"score":66,"level":0},{"x":1033,"y":506,"score":39,"level":0},{"x":1039,"y":506,"score":72,"level":0},{"x":1050,"y":506,"score":168,"level":0},{"x":1186,"y":506,"score":31,"level":0},{"x":1205,"y":506,"score":69,"level":0},{"x":1288,"y":506,"score":278,"level":0},{"x":1297,"y":506,"score":46,"level":0},{"x":1322,"y":506,"score":81,"level":0},{"x":1333,"y":506,"score":45,"level":0},{"x":1342,"y":506,"score":48,"level":0},{"x":1360,"y":506,"score":48,"level":0},{"x":488,"y":507,"score":49,"level":0},{"x":543,"y":507,"score":63,"level":0},{"x":573,"y":507,"score":53,"level":0},{"x":737,"y":507,"score":99,"level":0},{"x":764,"y":507,"score":54,"level":0},{"x":791,"y":507,"score":27,"level":0},{"x":962,"y":507,"score":96,"level":0},{"x":1083,"y":507,"score":103,"level":0},{"x":1108,"y":507,"score":61,"level":0},{"x":1147,"y":507,"score":100,"level":0},{"x":1158,"y":507,"score":48,"level":0},{"x":1161,"y":507,"score":54,"level":0},{"x":1220,"y":507,"score":212,"level":0},{"x":1228,"y":507,"score":99,"level":0},{"x":1270,"y":507,"score":64,"level":0},{"x":1317,"y":507,"score":48,"level":0},{"x":1424,"y":507,"score":78,"level":0},{"x":429,"y":508,"score":53,"level":0},{"x":501,"y":508,"score":49,"level":0},{"x":525,"y":508,"score":56,"level":0},{"x":571,"y":508,"score":51,"level":0},{"x":609,"y":508,"score":150,"level":0},{"x":647,"y":508,"score":117,"level":0},{"x":702,"y":508,"score":44,"level":0},{"x":722,"y":508,"score":40,"level":0},{"x":743,"y":508,"score":64,"level":0},{"x":853,"y":508,"score":76,"level":0},{"x":862,"y":508,"score":194,"level":0},{"x":936,"y":508,"score":111,"level":0},{"x":999,"y":508,"score":136,"level":0},{"x":1007,"y":508,"score":76,"level":0},{"x":1013,"y":508,"score":30,"level":0},{"x":1033,"y":508,"score":39,"level":0},{"x":1095,"y":508,"score":76,"level":0},{"x":1097,"y":508,"score":56,"level":0},{"x":1167,"y":508,"score":101,"level":0},{"x":1193,"y":508,"score":29,"level":0},{"x":1203,"y":508,"score":35,"level":0},{"x":1261,"y":508,"score":65,"level":0},{"x":1279,"y":508,"score":103,"level":0},{"x":1372,"y":508,"score":31,"level":0},{"x":1449,"y":508,"score":105,"level":0},{"x":508,"y":509,"score":28,"level":0},{"x":546,"y":509,"score":40,"level":0},{"x":707,"y":509,"score":39,"level":0},{"x":713,"y":509,"score":135,"level":0},{"x":775,"y":509,"score":28,"level":0},{"x":930,"y":509,"score":78,"level":0},{"x":994,"y":509,"score":62,"level":0},{"x":1018,"y":509,"score":52,"level":0},{"x":1023,"y":509,"score":34,"level":0},{"x":1130,"y":509,"score":93,"level":0},{"x":1173,"y":509,"score":71,"level":0},{"x":1184,"y":509,"score":29,"level":0},{"x":1189,"y":509,"score":100,"level":0},{"x":1214,"y":509,"score":29,"level":0},{"x":1250,"y":509,"score":126,"level":0},{"x":1266,"y":509,"score":30,"level":0},{"x":1428,"y":509,"score":28,"level":0},{"x":1469,"y":509,"score":114,"level":0},{"x":459,"y":510,"score":58,"level":0},{"x":491,"y":510,"score":39,"level":0},{"x":498,"y":510,"score":52,"level":0},{"x":553,"y":510,"score":113,"level":0},{"x":641,"y":510,"score":87,"level":0},{"x":659,"y":510,"score":27,"level":0},{"x":692,"y":510,"score":95,"level":0},{"x":697,"y":510,"score":154,"level":0},{"x":727,"y":510,"score":146,"level":0},{"x":738,"y":510,"score":65,"level":0},{"x":761,"y":510,"score":33,"level":0},{"x":794,"y":510,"score":77,"level":0},{"x":815,"y":510,"score":139,"level":0},{"x":874,"y":510,"score":29,"level":0},{"x":1007,"y":510,"score":100,"level":0},{"x":1037,"y":510,"score":63,"level":0},{"x":1045,"y":510,"score":60,"level":0},{"x":1165,"y":510,"score":98,"level":0},{"x":1374,"y":510,"score":50,"level":0},{"x":1379,"y":510,"score":29,"level":0},{"x":1416,"y":510,"score":54,"level":0},{"x":1444,"y":510,"score":146,"level":0},{"x":387,"y":511,"score":112,"level":0},{"x":465,"y":511,"score":119,"level":0},{"x":522,"y":511,"score":67,"level":0},{"x":529,"y":511,"score":68,"level":0},{"x":681,"y":511,"score":56,"level":0},{"x":687,"y":511,"score":51,"level":0},{"x":783,"y":511,"score":45,"level":0},{"x":797,"y":511,"score":49,"level":0},{"x":882,"y":511,"score":137,"level":0},{"x":941,"y":511,"score":113,"level":0},{"x":1010,"y":511,"score":63,"level":0},{"x":1027,"y":511,"score":74,"level":0},{"x":1069,"y":511,"score":78,"level":0},{"x":1078,"y":511,"score":35,"level":0},{"x":1115,"y":511,"score":41,"level":0},{"x":1135,"y":511,"score":246,"level":0},{"x":1242,"y":511,"score":40,"level":0},{"x":1273,"y":511,"score":143,"level":0},{"x":1293,"y":511,"score":26,"level":0},{"x":1303,"y":511,"score":59,"level":0},{"x":1305,"y":511,"score":64,"level":0},{"x":1312,"y":511,"score":116,"level":0},{"x":1352,"y":511,"score":35,"level":0},{"x":1355,"y":511,"score":54,"level":0},{"x":1370,"y":511,"score":32,"level":0},{"x":1376,"y":511,"score":55,"level":0},{"x":1381,"y":511,"score":78,"level":0},{"x":1421,"y":511,"score":44,"level":0},{"x":1429,"y":511,"score":27,"level":0},{"x":1433,"y":511,"score":51,"level":0},{"x":1438,"y":511,"score":123,"level":0},{"x":1455,"y":511,"score":50,"level":0},{"x":1462,"y":511,"score":87,"level":0},{"x":394,"y":512,"score":90,"level":0},{"x":409,"y":512,"score":143,"level":0},{"x":533,"y":512,"score":83,"level":0},{"x":561,"y":512,"score":174,"level":0},{"x":627,"y":512,"score":46,"level":0},{"x":636,"y":512,"score":108,"level":0},{"x":657,"y":512,"score":35,"level":0},{"x":667,"y":512,"score":119,"level":0},{"x":674,"y":512,"score":66,"level":0},{"x":734,"y":512,"score":71,"level":0},{"x":749,"y":512,"score":78,"level":0},{"x":789,"y":512,"score":29,"level":0},{"x":804,"y":512,"score":106,"level":0},{"x":823,"y":512,"score":165,"level":0},{"x":842,"y":512,"score":29,"level":0},{"x":946,"y":512,"score":127,"level":0},{"x":962,"y":512,"score":76,"level":0},{"x":1088,"y":512,"score":135,"level":0},{"x":1117,"y":512,"score":92,"level":0},{"x":1178,"y":512,"score":28,"level":0},{"x":1192,"y":512,"score":56,"level":0},{"x":1288,"y":512,"score":26,"level":0},{"x":1330,"y":512,"score":75,"level":0},{"x":631,"y":513,"score":78,"level":0},{"x":744,"y":513,"score":85,"level":0},{"x":854,"y":513,"score":70,"level":0},{"x":867,"y":513,"score":35,"level":0},{"x":932,"y":513,"score":55,"level":0},{"x":979,"y":513,"score":201,"level":0},{"x":1020,"y":513,"score":42,"level":0},{"x":1045,"y":513,"score":72,"level":0},{"x":1098,"y":513,"score":106,"level":0},{"x":1106,"y":513,"score":187,"level":0},{"x":1355,"y":513,"score":62,"level":0},{"x":1372,"y":513,"score":34,"level":0},{"x":1427,"y":513,"score":47,"level":0},{"x":1433,"y":513,"score":44,"level":0},{"x":1455,"y":513,"score":35,"level":0},{"x":423,"y":514,"score":138,"level":0},{"x":524,"y":514,"score":26,"level":0},{"x":547,"y":514,"score":31,"level":0},{"x":576,"y":514,"score":139,"level":0},{"x":627,"y":514,"score":44,"level":0},{"x":640,"y":514,"score":50,"level":0},{"x":673,"y":514,"score":76,"level":0},{"x":694,"y":514,"score":45,"level":0},{"x":707,"y":514,"score":233,"level":0},{"x":712,"y":514,"score":41,"level":0},{"x":785,"y":514,"score":51,"level":0},{"x":787,"y":514,"score":47,"level":0},{"x":836,"y":514,"score":28,"level":0},{"x":985,"y":514,"score":54,"level":0},{"x":1017,"y":514,"score":76,"level":0},{"x":1038,"y":514,"score":114,"level":0},{"x":1162,"y":514,"score":64,"level":0},{"x":1219,"y":514,"score":71,"level":0},{"x":404,"y":515,"score":259,"level":0},{"x":414,"y":515,"score":101,"level":0},{"x":419,"y":515,"score":33,"level":0},{"x":460,"y":515,"score":106,"level":0},{"x":476,"y":515,"score":46,"level":0},{"x":513,"y":515,"score":90,"level":0},{"x":518,"y":515,"score":49,"level":0},{"x":532,"y":515,"score":31,"level":0},{"x":689,"y":515,"score":66,"level":0},{"x":699,"y":515,"score":86,"level":0},{"x":809,"y":515,"score":109,"level":0},{"x":861,"y":515,"score":104,"level":0},{"x":995,"y":515,"score":65,"level":0},{"x":1000,"y":515,"score":118,"level":0},{"x":1101,"y":515,"score":73,"level":0},{"x":1138,"y":515,"score":110,"level":0},{"x":1277,"y":515,"score":97,"level":0},{"x":1332,"y":515,"score":55,"level":0},{"x":1349,"y":515,"score":31,"level":0},{"x":1424,"y":515,"score":36,"level":0},{"x":1481,"y":515,"score":60,"level":0},{"x":377,"y":516,"score":33,"level":0},{"x":507,"y":516,"score":62,"level":0},{"x":526,"y":516,"score":75,"level":0},{"x":538,"y":516,"score":104,"level":0},{"x":551,"y":516,"score":127,"level":0},{"x":577,"y":516,"score":100,"level":0},{"x":583,"y":516,"score":41,"level":0},{"x":644,"y":516,"score":93,"level":0},{"x":651,"y":516,"score":96,"level":0},{"x":754,"y":516,"score":84,"level":0},{"x":756,"y":516,"score":35,"level":0},{"x":814,"y":516,"score":106,"level":0},{"x":844,"y":516,"score":68,"level":0},{"x":872,"y":516,"score":37,"level":0},{"x":956,"y":516,"score":108,"level":0},{"x":1007,"y":516,"score":102,"level":0},{"x":1013,"y":516,"score":47,"level":0},{"x":1028,"y":516,"score":140,"level":0},{"x":1127,"y":516,"score":28,"level":0},{"x":1132,"y":516,"score":108,"level":0},{"x":1144,"y":516,"score":29,"level":0},{"x":1174,"y":516,"score":56,"level":0},{"x":1207,"y":516,"score":28,"level":0},{"x":1293,"y":516,"score":28,"level":0},{"x":1354,"y":516,"score":41,"level":0},{"x":1371,"y":516,"score":32,"level":0},{"x":1402,"y":516,"score":34,"level":0},{"x":1440,"y":516,"score":100,"level":0},{"x":1450,"y":516,"score":47,"level":0},{"x":428,"y":517,"score":104,"level":0},{"x":436,"y":517,"score":131,"level":0},{"x":636,"y":517,"score":81,"level":0},{"x":656,"y":517,"score":36,"level":0},{"x":685,"y":517,"score":33,"level":0},{"x":717,"y":517,"score":96,"level":0},{"x":723,"y":517,"score":106,"level":0},{"x":732,"y":517,"score":126,"level":0},{"x":769,"y":517,"score":135,"level":0},{"x":801,"y":517,"score":66,"level":0},{"x":842,"y":517,"score":42,"level":0},{"x":888,"y":517,"score":41,"level":0},{"x":917,"y":517,"score":46,"level":0},{"x":945,"y":517,"score":36,"level":0},{"x":969,"y":517,"score":104,"level":0},{"x":1044,"y":517,"score":42,"level":0},{"x":1239,"y":517,"score":113,"level":0},{"x":1339,"y":517,"score":27,"level":0},{"x":1346,"y":517,"score":27,"level":0},{"x":1365,"y":517,"score":48,"level":0},{"x":1375,"y":517,"score":32,"level":0},{"x":1379,"y":517,"score":29,"level":0},{"x":1455,"y":517,"score":32,"level":0},{"x":1467,"y":517,"score":88,"level":0},{"x":395,"y":518,"score":40,"level":0},{"x":433,"y":518,"score":76,"level":0},{"x":473,"y":518,"score":50,"level":0},{"x":503,"y":518,"score":28,"level":0},{"x":556,"y":518,"score":47,"level":0},{"x":562,"y":518,"score":107,"level":0},{"x":624,"y":518,"score":57,"level":0},{"x":648,"y":518,"score":30,"level":0},{"x":671,"y":518,"score":29,"level":0},{"x":680,"y":518,"score":52,"level":0},{"x":748,"y":518,"score":93,"level":0},{"x":789,"y":518,"score":60,"level":0},{"x":821,"y":518,"score":50,"level":0},{"x":852,"y":518,"score":48,"level":0},{"x":1023,"y":518,"score":55,"level":0},{"x":1060,"y":518,"score":54,"level":0},{"x":1097,"y":518,"score":156,"level":0},{"x":1104,"y":518,"score":62,"level":0},{"x":1186,"y":518,"score":80,"level":0},{"x":1232,"y":518,"score":78,"level":0},{"x":1355,"y":518,"score":52,"level":0},{"x":1460,"y":518,"score":46,"level":0},{"x":382,"y":519,"score":60,"level":0},{"x":481,"y":519,"score":160,"level":0},{"x":506,"y":519,"score":42,"level":0},{"x":676,"y":519,"score":94,"level":0},{"x":696,"y":519,"score":56,"level":0},{"x":703,"y":519,"score":88,"level":0},{"x":756,"y":519,"score":40,"level":0},{"x":830,"y":519,"score":37,"level":0},{"x":928,"y":519,"score":71,"level":0},{"x":936,"y":519,"score":59,"level":0},{"x":976,"y":519,"score":56,"level":0},{"x":1019,"y":519,"score":28,"level":0},{"x":1035,"y":519,"score":43,"level":0},{"x":1079,"y":519,"score":116,"level":0},{"x":1137,"y":519,"score":57,"level":0},{"x":1201,"y":519,"score":180,"level":0},{"x":1273,"y":519,"score":50,"level":0},{"x":1426,"y":519,"score":38,"level":0},{"x":1440,"y":519,"score":127,"level":0},{"x":1472,"y":519,"score":47,"level":0},{"x":399,"y":520,"score":68,"level":0},{"x":404,"y":520,"score":166,"level":0},{"x":412,"y":520,"score":48,"level":0},{"x":510,"y":520,"score":50,"level":0},{"x":652,"y":520,"score":39,"level":0},{"x":693,"y":520,"score":28,"level":0},{"x":710,"y":520,"score":70,"level":0},{"x":753,"y":520,"score":31,"level":0},{"x":785,"y":520,"score":39,"level":0},{"x":954,"y":520,"score":50,"level":0},{"x":1098,"y":520,"score":75,"level":0},{"x":1107,"y":520,"score":41,"level":0},{"x":1151,"y":520,"score":50,"level":0},{"x":1159,"y":520,"score":102,"level":0},{"x":1163,"y":520,"score":90,"level":0},{"x":1208,"y":520,"score":83,"level":0},{"x":1332,"y":520,"score":80,"level":0},{"x":1447,"y":520,"score":138,"level":0},{"x":456,"y":521,"score":66,"level":0},{"x":530,"y":521,"score":53,"level":0},{"x":557,"y":521,"score":76,"level":0},{"x":611,"y":521,"score":58,"level":0},{"x":662,"y":521,"score":129,"level":0},{"x":686,"y":521,"score":134,"level":0},{"x":721,"y":521,"score":77,"level":0},{"x":864,"y":521,"score":46,"level":0},{"x":946,"y":521,"score":101,"level":0},{"x":964,"y":521,"score":148,"level":0},{"x":1028,"y":521,"score":27,"level":0},{"x":1052,"y":521,"score":196,"level":0},{"x":1081,"y":521,"score":111,"level":0},{"x":1119,"y":521,"score":28,"level":0},{"x":1127,"y":521,"score":36,"level":0},{"x":1138,"y":521,"score":81,"level":0},{"x":1191,"y":521,"score":62,"level":0},{"x":1301,"y":521,"score":45,"level":0},{"x":1326,"y":521,"score":26,"level":0},{"x":1481,"y":521,"score":135,"level":0},{"x":417,"y":522,"score":79,"level":0},{"x":488,"y":522,"score":126,"level":0},{"x":494,"y":522,"score":122,"level":0},{"x":521,"y":522,"score":27,"level":0},{"x":620,"y":522,"score":68,"level":0},{"x":641,"y":522,"score":76,"level":0},{"x":657,"y":522,"score":134,"level":0},{"x":874,"y":522,"score":43,"level":0},{"x":1056,"y":522,"score":69,"level":0},{"x":1092,"y":522,"score":26,"level":0},{"x":1295,"y":522,"score":42,"level":0},{"x":1318,"y":522,"score":56,"level":0},{"x":1430,"y":522,"score":87,"level":0},{"x":1468,"y":522,"score":34,"level":0},{"x":1489,"y":522,"score":90,"level":0},{"x":579,"y":523,"score":147,"level":0},{"x":634,"y":523,"score":298,"level":0},{"x":662,"y":523,"score":90,"level":0},{"x":800,"y":523,"score":82,"level":0},{"x":952,"y":523,"score":38,"level":0},{"x":1005,"y":523,"score":33,"level":0},{"x":1059,"y":523,"score":89,"level":0},{"x":1087,"y":523,"score":94,"level":0},{"x":1215,"y":523,"score":60,"level":0},{"x":1221,"y":523,"score":121,"level":0},{"x":1283,"y":523,"score":39,"level":0},{"x":1444,"y":523,"score":82,"level":0},{"x":426,"y":524,"score":155,"level":0},{"x":470,"y":524,"score":190,"level":0},{"x":477,"y":524,"score":53,"level":0},{"x":550,"y":524,"score":103,"level":0},{"x":624,"y":524,"score":127,"level":0},{"x":648,"y":524,"score":240,"level":0},{"x":667,"y":524,"score":27,"level":0},{"x":677,"y":524,"score":78,"level":0},{"x":740,"y":524,"score":136,"level":0},{"x":757,"y":524,"score":32,"level":0},{"x":789,"y":524,"score":115,"level":0},{"x":936,"y":524,"score":37,"level":0},{"x":1078,"y":524,"score":94,"level":0},{"x":1137,"y":524,"score":119,"level":0},{"x":1270,"y":524,"score":34,"level":0},{"x":1342,"y":524,"score":44,"level":0},{"x":1439,"y":524,"score":30,"level":0},{"x":1467,"y":524,"score":40,"level":0},{"x":410,"y":525,"score":68,"level":0},{"x":442,"y":525,"score":88,"level":0},{"x":462,"y":525,"score":70,"level":0},{"x":504,"y":525,"score":42,"level":0},{"x":511,"y":525,"score":44,"level":0},{"x":513,"y":525,"score":34,"level":0},{"x":585,"y":525,"score":37,"level":0},{"x":747,"y":525,"score":46,"level":0},{"x":753,"y":525,"score":40,"level":0},{"x":776,"y":525,"score":86,"level":0},{"x":1020,"y":525,"score":28,"level":0},{"x":1178,"y":525,"score":29,"level":0},{"x":1199,"y":525,"score":205,"level":0},{"x":1206,"y":525,"score":106,"level":0},{"x":1246,"y":525,"score":32,"level":0},{"x":1326,"y":525,"score":58,"level":0},{"x":1463,"y":525,"score":87,"level":0},{"x":404,"y":526,"score":61,"level":0},{"x":437,"y":526,"score":28,"level":0},{"x":484,"y":526,"score":61,"level":0},{"x":527,"y":526,"score":82,"level":0},{"x":529,"y":526,"score":64,"level":0},{"x":539,"y":526,"score":170,"level":0},{"x":557,"y":526,"score":44,"level":0},{"x":576,"y":526,"score":165,"level":0},{"x":718,"y":526,"score":46,"level":0},{"x":731,"y":526,"score":116,"level":0},{"x":805,"y":526,"score":28,"level":0},{"x":885,"y":526,"score":38,"level":0},{"x":934,"y":526,"score":38,"level":0},{"x":977,"y":526,"score":44,"level":0},{"x":985,"y":526,"score":50,"level":0},{"x":1079,"y":526,"score":49,"level":0},{"x":1120,"y":526,"score":60,"level":0},{"x":1186,"y":526,"score":105,"level":0},{"x":1192,"y":526,"score":131,"level":0},{"x":1350,"y":526,"score":27,"level":0},{"x":500,"y":527,"score":78,"level":0},{"x":516,"y":527,"score":29,"level":0},{"x":641,"y":527,"score":196,"level":0},{"x":688,"y":527,"score":119,"level":0},{"x":696,"y":527,"score":97,"level":0},{"x":837,"y":527,"score":54,"level":0},{"x":867,"y":527,"score":74,"level":0},{"x":890,"y":527,"score":39,"level":0},{"x":964,"y":527,"score":93,"level":0},{"x":1054,"y":527,"score":36,"level":0},{"x":1068,"y":527,"score":40,"level":0},{"x":1092,"y":527,"score":28,"level":0},{"x":1247,"y":527,"score":46,"level":0},{"x":1295,"y":527,"score":41,"level":0},{"x":1302,"y":527,"score":127,"level":0},{"x":1318,"y":527,"score":27,"level":0},{"x":1375,"y":527,"score":33,"level":0},{"x":1414,"y":527,"score":28,"level":0},{"x":1460,"y":527,"score":35,"level":0},{"x":1463,"y":527,"score":94,"level":0},{"x":1470,"y":527,"score":137,"level":0},{"x":474,"y":528,"score":80,"level":0},{"x":582,"y":528,"score":73,"level":0},{"x":619,"y":528,"score":118,"level":0},{"x":708,"y":528,"score":80,"level":0},{"x":782,"y":528,"score":44,"level":0},{"x":852,"y":528,"score":31,"level":0},{"x":859,"y":528,"score":40,"level":0},{"x":898,"y":528,"score":39,"level":0},{"x":953,"y":528,"score":32,"level":0},{"x":1088,"y":528,"score":26,"level":0},{"x":1149,"y":528,"score":33,"level":0},{"x":1273,"y":528,"score":33,"level":0},{"x":1308,"y":528,"score":35,"level":0},{"x":1478,"y":528,"score":113,"level":0},{"x":1482,"y":528,"score":45,"level":0},{"x":493,"y":529,"score":80,"level":0},{"x":849,"y":529,"score":42,"level":0},{"x":978,"y":529,"score":88,"level":0},{"x":1340,"y":529,"score":28,"level":0},{"x":1459,"y":529,"score":31,"level":0},{"x":1488,"y":529,"score":111,"level":0},{"x":427,"y":530,"score":33,"level":0},{"x":510,"y":530,"score":29,"level":0},{"x":514,"y":530,"score":59,"level":0},{"x":580,"y":530,"score":92,"level":0},{"x":628,"y":530,"score":34,"level":0},{"x":905,"y":530,"score":32,"level":0},{"x":1074,"y":530,"score":36,"level":0},{"x":1219,"y":530,"score":31,"level":0},{"x":1296,"y":530,"score":26,"level":0},{"x":1316,"y":530,"score":39,"level":0},{"x":442,"y":531,"score":116,"level":0},{"x":519,"y":531,"score":54,"level":0},{"x":545,"y":531,"score":76,"level":0},{"x":648,"y":531,"score":92,"level":0},{"x":841,"y":531,"score":39,"level":0},{"x":954,"y":531,"score":34,"level":0},{"x":1200,"y":531,"score":41,"level":0},{"x":1223,"y":531,"score":37,"level":0},{"x":1363,"y":531,"score":31,"level":0},{"x":394,"y":532,"score":50,"level":0},{"x":467,"y":532,"score":117,"level":0},{"x":537,"y":532,"score":32,"level":0},{"x":640,"y":532,"score":87,"level":0},{"x":698,"y":532,"score":71,"level":0},{"x":706,"y":532,"score":81,"level":0},{"x":718,"y":532,"score":75,"level":0},{"x":732,"y":532,"score":120,"level":0},{"x":739,"y":532,"score":40,"level":0},{"x":751,"y":532,"score":31,"level":0},{"x":805,"y":532,"score":51,"level":0},{"x":867,"y":532,"score":32,"level":0},{"x":890,"y":532,"score":91,"level":0},{"x":1077,"y":532,"score":26,"level":0},{"x":1262,"y":532,"score":30,"level":0},{"x":1268,"y":532,"score":31,"level":0},{"x":1443,"y":532,"score":128,"level":0},{"x":1469,"y":532,"score":127,"level":0},{"x":448,"y":533,"score":53,"level":0},{"x":500,"y":533,"score":53,"level":0},{"x":690,"y":533,"score":82,"level":0},{"x":852,"y":533,"score":44,"level":0},{"x":864,"y":533,"score":28,"level":0},{"x":870,"y":533,"score":47,"level":0},{"x":899,"y":533,"score":30,"level":0},{"x":1273,"y":533,"score":59,"level":0},{"x":1287,"y":533,"score":83,"level":0},{"x":1356,"y":533,"score":37,"level":0},{"x":1361,"y":533,"score":26,"level":0},{"x":1477,"y":533,"score":133,"level":0},{"x":1483,"y":533,"score":38,"level":0},{"x":443,"y":534,"score":69,"level":0},{"x":492,"y":534,"score":54,"level":0},{"x":573,"y":534,"score":104,"level":0},{"x":674,"y":534,"score":62,"level":0},{"x":743,"y":534,"score":42,"level":0},{"x":775,"y":534,"score":32,"level":0},{"x":780,"y":534,"score":94,"level":0},{"x":786,"y":534,"score":60,"level":0},{"x":849,"y":534,"score":76,"level":0},{"x":856,"y":534,"score":51,"level":0},{"x":890,"y":534,"score":42,"level":0},{"x":942,"y":534,"score":97,"level":0},{"x":1349,"y":534,"score":46,"level":0},{"x":1402,"y":534,"score":28,"level":0},{"x":1417,"y":534,"score":142,"level":0},{"x":1433,"y":534,"score":64,"level":0},{"x":421,"y":535,"score":33,"level":0},{"x":435,"y":535,"score":52,"level":0},{"x":448,"y":535,"score":49,"level":0},{"x":467,"y":535,"score":74,"level":0},{"x":511,"y":535,"score":27,"level":0},{"x":527,"y":535,"score":130,"level":0},{"x":556,"y":535,"score":128,"level":0},{"x":580,"y":535,"score":139,"level":0},{"x":630,"y":535,"score":65,"level":0},{"x":681,"y":535,"score":38,"level":0},{"x":726,"y":535,"score":133,"level":0},{"x":788,"y":535,"score":56,"level":0},{"x":975,"y":535,"score":44,"level":0},{"x":984,"y":535,"score":57,"level":0},{"x":1150,"y":535,"score":191,"level":0},{"x":1156,"y":535,"score":36,"level":0},{"x":1189,"y":535,"score":34,"level":0},{"x":1219,"y":535,"score":27,"level":0},{"x":1303,"y":535,"score":34,"level":0},{"x":1364,"y":535,"score":64,"level":0},{"x":1436,"y":535,"score":34,"level":0},{"x":1469,"y":535,"score":110,"level":0},{"x":1487,"y":535,"score":79,"level":0},{"x":429,"y":536,"score":58,"level":0},{"x":461,"y":536,"score":26,"level":0},{"x":507,"y":536,"score":94,"level":0},{"x":546,"y":536,"score":48,"level":0},{"x":567,"y":536,"score":135,"level":0},{"x":768,"y":536,"score":39,"level":0},{"x":882,"y":536,"score":57,"level":0},{"x":898,"y":536,"score":44,"level":0},{"x":993,"y":536,"score":44,"level":0},{"x":1032,"y":536,"score":64,"level":0},{"x":1217,"y":536,"score":32,"level":0},{"x":1246,"y":536,"score":36,"level":0},{"x":1339,"y":536,"score":54,"level":0},{"x":1429,"y":536,"score":47,"level":0},{"x":1485,"y":536,"score":90,"level":0},{"x":562,"y":537,"score":52,"level":0},{"x":625,"y":537,"score":138,"level":0},{"x":630,"y":537,"score":81,"level":0},{"x":644,"y":537,"score":39,"level":0},{"x":732,"y":537,"score":83,"level":0},{"x":864,"y":537,"score":80,"level":0},{"x":1123,"y":537,"score":81,"level":0},{"x":1327,"y":537,"score":27,"level":0},{"x":1377,"y":537,"score":33,"level":0},{"x":1424,"y":537,"score":56,"level":0},{"x":1433,"y":537,"score":42,"level":0},{"x":1440,"y":537,"score":66,"level":0},{"x":402,"y":538,"score":34,"level":0},{"x":484,"y":538,"score":51,"level":0},{"x":490,"y":538,"score":155,"level":0},{"x":500,"y":538,"score":93,"level":0},{"x":521,"y":538,"score":207,"level":0},{"x":567,"y":538,"score":72,"level":0},{"x":614,"y":538,"score":27,"level":0},{"x":718,"y":538,"score":176,"level":0},{"x":737,"y":538,"score":78,"level":0},{"x":861,"y":538,"score":59,"level":0},{"x":878,"y":538,"score":82,"level":0},{"x":1276,"y":538,"score":95,"level":0},{"x":1479,"y":538,"score":43,"level":0},{"x":405,"y":539,"score":47,"level":0},{"x":413,"y":539,"score":37,"level":0},{"x":590,"y":539,"score":35,"level":0},{"x":633,"y":539,"score":71,"level":0},{"x":649,"y":539,"score":32,"level":0},{"x":763,"y":539,"score":49,"level":0},{"x":783,"y":539,"score":54,"level":0},{"x":799,"y":539,"score":34,"level":0},{"x":804,"y":539,"score":32,"level":0},{"x":849,"y":539,"score":50,"level":0},{"x":855,"y":539,"score":75,"level":0},{"x":998,"y":539,"score":43,"level":0},{"x":1127,"y":539,"score":116,"level":0},{"x":581,"y":540,"score":119,"level":0},{"x":593,"y":540,"score":33,"level":0},{"x":641,"y":540,"score":152,"level":0},{"x":677,"y":540,"score":49,"level":0},{"x":726,"y":540,"score":32,"level":0},{"x":770,"y":540,"score":30,"level":0},{"x":778,"y":540,"score":93,"level":0},{"x":792,"y":540,"score":69,"level":0},{"x":902,"y":540,"score":27,"level":0},{"x":925,"y":540,"score":56,"level":0},{"x":1063,"y":540,"score":26,"level":0},{"x":1140,"y":540,"score":34,"level":0},{"x":1146,"y":540,"score":95,"level":0},{"x":1183,"y":540,"score":36,"level":0},{"x":1268,"y":540,"score":66,"level":0},{"x":1270,"y":540,"score":54,"level":0},{"x":1293,"y":540,"score":77,"level":0},{"x":1342,"y":540,"score":44,"level":0},{"x":1368,"y":540,"score":58,"level":0},{"x":1391,"y":540,"score":27,"level":0},{"x":1465,"y":540,"score":27,"level":0},{"x":1468,"y":540,"score":51,"level":0},{"x":1472,"y":540,"score":57,"level":0},{"x":528,"y":541,"score":81,"level":0},{"x":546,"y":541,"score":27,"level":0},{"x":657,"y":541,"score":30,"level":0},{"x":731,"y":541,"score":69,"level":0},{"x":765,"y":541,"score":27,"level":0},{"x":836,"y":541,"score":108,"level":0},{"x":885,"y":541,"score":51,"level":0},{"x":943,"y":541,"score":97,"level":0},{"x":1154,"y":541,"score":46,"level":0},{"x":1325,"y":541,"score":54,"level":0},{"x":1420,"y":541,"score":56,"level":0},{"x":1486,"y":541,"score":102,"level":0},{"x":443,"y":542,"score":48,"level":0},{"x":564,"y":542,"score":51,"level":0},{"x":582,"y":542,"score":119,"level":0},{"x":608,"y":542,"score":39,"level":0},{"x":652,"y":542,"score":29,"level":0},{"x":706,"y":542,"score":96,"level":0},{"x":711,"y":542,"score":47,"level":0},{"x":713,"y":542,"score":48,"level":0},{"x":814,"y":542,"score":34,"level":0},{"x":841,"y":542,"score":84,"level":0},{"x":864,"y":542,"score":50,"level":0},{"x":985,"y":542,"score":26,"level":0},{"x":1032,"y":542,"score":67,"level":0},{"x":1117,"y":542,"score":50,"level":0},{"x":1242,"y":542,"score":34,"level":0},{"x":1288,"y":542,"score":106,"level":0},{"x":1314,"y":542,"score":30,"level":0},{"x":1417,"y":542,"score":60,"level":0},{"x":1424,"y":542,"score":57,"level":0},{"x":1469,"y":542,"score":32,"level":0},{"x":1473,"y":542,"score":47,"level":0},{"x":454,"y":543,"score":29,"level":0},{"x":570,"y":543,"score":38,"level":0},{"x":720,"y":543,"score":101,"level":0},{"x":727,"y":543,"score":84,"level":0},{"x":742,"y":543,"score":81,"level":0},{"x":744,"y":543,"score":84,"level":0},{"x":777,"y":543,"score":31,"level":0},{"x":848,"y":543,"score":131,"level":0},{"x":854,"y":543,"score":73,"level":0},{"x":1346,"y":543,"score":28,"level":0},{"x":1412,"y":543,"score":34,"level":0},{"x":1421,"y":543,"score":58,"level":0},{"x":533,"y":544,"score":73,"level":0},{"x":643,"y":544,"score":141,"level":0},{"x":764,"y":544,"score":41,"level":0},{"x":868,"y":544,"score":31,"level":0},{"x":1337,"y":544,"score":55,"level":0},{"x":1417,"y":544,"score":89,"level":0},{"x":1459,"y":544,"score":54,"level":0},{"x":407,"y":545,"score":50,"level":0},{"x":521,"y":545,"score":84,"level":0},{"x":681,"y":545,"score":32,"level":0},{"x":786,"y":545,"score":35,"level":0},{"x":792,"y":545,"score":95,"level":0},{"x":798,"y":545,"score":53,"level":0},{"x":1134,"y":545,"score":26,"level":0},{"x":1301,"y":545,"score":31,"level":0},{"x":1434,"y":545,"score":93,"level":0},{"x":1490,"y":545,"score":89,"level":0},{"x":388,"y":546,"score":26,"level":0},{"x":653,"y":546,"score":32,"level":0},{"x":676,"y":546,"score":68,"level":0},{"x":735,"y":546,"score":82,"level":0},{"x":831,"y":546,"score":44,"level":0},{"x":1140,"y":546,"score":102,"level":0},{"x":1437,"y":546,"score":60,"level":0},{"x":1486,"y":546,"score":163,"level":0},{"x":384,"y":547,"score":28,"level":0},{"x":419,"y":547,"score":42,"level":0},{"x":685,"y":547,"score":115,"level":0},{"x":756,"y":547,"score":36,"level":0},{"x":841,"y":547,"score":106,"level":0},{"x":867,"y":547,"score":66,"level":0},{"x":918,"y":547,"score":50,"level":0},{"x":1036,"y":547,"score":47,"level":0},{"x":1038,"y":547,"score":41,"level":0},{"x":1405,"y":547,"score":39,"level":0},{"x":1463,"y":547,"score":53,"level":0},{"x":661,"y":548,"score":70,"level":0},{"x":673,"y":548,"score":52,"level":0},{"x":696,"y":548,"score":55,"level":0},{"x":1235,"y":548,"score":42,"level":0},{"x":1430,"y":548,"score":41,"level":0},{"x":1452,"y":548,"score":77,"level":0},{"x":1473,"y":548,"score":176,"level":0},{"x":610,"y":549,"score":26,"level":0},{"x":644,"y":549,"score":45,"level":0},{"x":701,"y":549,"score":36,"level":0},{"x":715,"y":549,"score":44,"level":0},{"x":762,"y":549,"score":34,"level":0},{"x":767,"y":549,"score":64,"level":0},{"x":803,"y":549,"score":54,"level":0},{"x":847,"y":549,"score":138,"level":0},{"x":853,"y":549,"score":85,"level":0},{"x":1027,"y":549,"score":53,"level":0},{"x":1219,"y":549,"score":34,"level":0},{"x":1372,"y":549,"score":98,"level":0},{"x":1436,"y":549,"score":46,"level":0},{"x":397,"y":550,"score":41,"level":0},{"x":514,"y":550,"score":38,"level":0},{"x":623,"y":550,"score":47,"level":0},{"x":633,"y":550,"score":65,"level":0},{"x":667,"y":550,"score":31,"level":0},{"x":742,"y":550,"score":138,"level":0},{"x":1342,"y":550,"score":191,"level":0},{"x":1347,"y":550,"score":27,"level":0},{"x":1479,"y":550,"score":80,"level":0},{"x":1485,"y":550,"score":30,"level":0},{"x":395,"y":551,"score":36,"level":0},{"x":512,"y":551,"score":45,"level":0},{"x":581,"y":551,"score":33,"level":0},{"x":615,"y":551,"score":78,"level":0},{"x":723,"y":551,"score":68,"level":0},{"x":791,"y":551,"score":88,"level":0},{"x":1427,"y":551,"score":38,"level":0},{"x":1437,"y":551,"score":36,"level":0},{"x":384,"y":552,"score":32,"level":0},{"x":424,"y":552,"score":40,"level":0},{"x":509,"y":552,"score":31,"level":0},{"x":521,"y":552,"score":45,"level":0},{"x":539,"y":552,"score":32,"level":0},{"x":570,"y":552,"score":35,"level":0},{"x":638,"y":552,"score":37,"level":0},{"x":685,"y":552,"score":27,"level":0},{"x":696,"y":552,"score":41,"level":0},{"x":716,"y":552,"score":83,"level":0},{"x":830,"y":552,"score":30,"level":0},{"x":1377,"y":552,"score":62,"level":0},{"x":1419,"y":552,"score":80,"level":0},{"x":1464,"y":552,"score":132,"level":0},{"x":1469,"y":552,"score":114,"level":0},{"x":380,"y":553,"score":30,"level":0},{"x":444,"y":553,"score":54,"level":0},{"x":450,"y":553,"score":52,"level":0},{"x":506,"y":553,"score":50,"level":0},{"x":610,"y":553,"score":28,"level":0},{"x":675,"y":553,"score":31,"level":0},{"x":679,"y":553,"score":46,"level":0},{"x":710,"y":553,"score":114,"level":0},{"x":728,"y":553,"score":74,"level":0},{"x":752,"y":553,"score":99,"level":0},{"x":842,"y":553,"score":39,"level":0},{"x":898,"y":553,"score":28,"level":0},{"x":1035,"y":553,"score":50,"level":0},{"x":1109,"y":553,"score":61,"level":0},{"x":1209,"y":553,"score":36,"level":0},{"x":1361,"y":553,"score":45,"level":0},{"x":1403,"y":553,"score":32,"level":0},{"x":1413,"y":553,"score":53,"level":0},{"x":1430,"y":553,"score":41,"level":0},{"x":377,"y":554,"score":48,"level":0},{"x":469,"y":554,"score":36,"level":0},{"x":504,"y":554,"score":75,"level":0},{"x":578,"y":554,"score":33,"level":0},{"x":621,"y":554,"score":49,"level":0},{"x":654,"y":554,"score":28,"level":0},{"x":737,"y":554,"score":180,"level":0},{"x":776,"y":554,"score":60,"level":0},{"x":782,"y":554,"score":80,"level":0},{"x":819,"y":554,"score":67,"level":0},{"x":1041,"y":554,"score":42,"level":0},{"x":1159,"y":554,"score":56,"level":0},{"x":1388,"y":554,"score":87,"level":0},{"x":1394,"y":554,"score":66,"level":0},{"x":1408,"y":554,"score":54,"level":0},{"x":1432,"y":554,"score":84,"level":0},{"x":1444,"y":554,"score":82,"level":0},{"x":1452,"y":554,"score":104,"level":0},{"x":1477,"y":554,"score":34,"level":0},{"x":1490,"y":554,"score":26,"level":0},{"x":425,"y":555,"score":49,"level":0},{"x":431,"y":555,"score":43,"level":0},{"x":464,"y":555,"score":32,"level":0},{"x":499,"y":555,"score":34,"level":0},{"x":541,"y":555,"score":26,"level":0},{"x":568,"y":555,"score":36,"level":0},{"x":666,"y":555,"score":34,"level":0},{"x":679,"y":555,"score":30,"level":0},{"x":743,"y":555,"score":39,"level":0},{"x":835,"y":555,"score":44,"level":0},{"x":1030,"y":555,"score":49,"level":0},{"x":1136,"y":555,"score":32,"level":0},{"x":1221,"y":555,"score":27,"level":0},{"x":1347,"y":555,"score":160,"level":0},{"x":1458,"y":555,"score":75,"level":0},{"x":574,"y":556,"score":86,"level":0},{"x":686,"y":556,"score":62,"level":0},{"x":833,"y":556,"score":45,"level":0},{"x":846,"y":556,"score":128,"level":0},{"x":866,"y":556,"score":43,"level":0},{"x":876,"y":556,"score":46,"level":0},{"x":892,"y":556,"score":49,"level":0},{"x":1142,"y":556,"score":46,"level":0},{"x":1247,"y":556,"score":56,"level":0},{"x":1303,"y":556,"score":27,"level":0},{"x":1366,"y":556,"score":48,"level":0},{"x":1426,"y":556,"score":26,"level":0},{"x":377,"y":557,"score":42,"level":0},{"x":425,"y":557,"score":42,"level":0},{"x":481,"y":557,"score":50,"level":0},{"x":519,"y":557,"score":42,"level":0},{"x":684,"y":557,"score":37,"level":0},{"x":696,"y":557,"score":174,"level":0},{"x":732,"y":557,"score":33,"level":0},{"x":736,"y":557,"score":138,"level":0},{"x":775,"y":557,"score":71,"level":0},{"x":1089,"y":557,"score":32,"level":0},{"x":1131,"y":557,"score":48,"level":0},{"x":1216,"y":557,"score":63,"level":0},{"x":1416,"y":557,"score":84,"level":0},{"x":1469,"y":557,"score":70,"level":0},{"x":1477,"y":557,"score":60,"level":0},{"x":478,"y":558,"score":47,"level":0},{"x":629,"y":558,"score":30,"level":0},{"x":663,"y":558,"score":48,"level":0},{"x":703,"y":558,"score":40,"level":0},{"x":819,"y":558,"score":32,"level":0},{"x":853,"y":558,"score":162,"level":0},{"x":1016,"y":558,"score":38,"level":0},{"x":1070,"y":558,"score":34,"level":0},{"x":1360,"y":558,"score":121,"level":0},{"x":1461,"y":558,"score":65,"level":0},{"x":474,"y":559,"score":70,"level":0},{"x":674,"y":559,"score":104,"level":0},{"x":683,"y":559,"score":101,"level":0},{"x":720,"y":559,"score":59,"level":0},{"x":751,"y":559,"score":85,"level":0},{"x":780,"y":559,"score":94,"level":0},{"x":785,"y":559,"score":182,"level":0},{"x":1485,"y":559,"score":137,"level":0},{"x":461,"y":560,"score":107,"level":0},{"x":470,"y":560,"score":98,"level":0},{"x":482,"y":560,"score":30,"level":0},{"x":496,"y":560,"score":29,"level":0},{"x":540,"y":560,"score":65,"level":0},{"x":568,"y":560,"score":46,"level":0},{"x":707,"y":560,"score":104,"level":0},{"x":743,"y":560,"score":123,"level":0},{"x":808,"y":560,"score":68,"level":0},{"x":838,"y":560,"score":61,"level":0},{"x":896,"y":560,"score":36,"level":0},{"x":1221,"y":560,"score":58,"level":0},{"x":1346,"y":560,"score":26,"level":0},{"x":1389,"y":560,"score":59,"level":0},{"x":527,"y":561,"score":41,"level":0},{"x":652,"y":561,"score":60,"level":0},{"x":687,"y":561,"score":71,"level":0},{"x":757,"y":561,"score":35,"level":0},{"x":844,"y":561,"score":44,"level":0},{"x":872,"y":561,"score":43,"level":0},{"x":1192,"y":561,"score":26,"level":0},{"x":1254,"y":561,"score":49,"level":0},{"x":1263,"y":561,"score":32,"level":0},{"x":1348,"y":561,"score":38,"level":0},{"x":1353,"y":561,"score":26,"level":0},{"x":1420,"y":561,"score":33,"level":0},{"x":1457,"y":561,"score":68,"level":0},{"x":1466,"y":561,"score":88,"level":0},{"x":481,"y":562,"score":37,"level":0},{"x":573,"y":562,"score":34,"level":0},{"x":678,"y":562,"score":40,"level":0},{"x":697,"y":562,"score":76,"level":0},{"x":770,"y":562,"score":160,"level":0},{"x":804,"y":562,"score":63,"level":0},{"x":839,"y":562,"score":40,"level":0},{"x":1210,"y":562,"score":32,"level":0},{"x":1340,"y":562,"score":27,"level":0},{"x":1362,"y":562,"score":44,"level":0},{"x":1404,"y":562,"score":72,"level":0},{"x":1415,"y":562,"score":26,"level":0},{"x":498,"y":563,"score":63,"level":0},{"x":507,"y":563,"score":69,"level":0},{"x":584,"y":563,"score":94,"level":0},{"x":609,"y":563,"score":59,"level":0},{"x":663,"y":563,"score":31,"level":0},{"x":736,"y":563,"score":131,"level":0},{"x":819,"y":563,"score":73,"level":0},{"x":1023,"y":563,"score":31,"level":0},{"x":1030,"y":563,"score":49,"level":0},{"x":1337,"y":563,"score":26,"level":0},{"x":1432,"y":563,"score":35,"level":0},{"x":1445,"y":563,"score":115,"level":0},{"x":1484,"y":563,"score":70,"level":0},{"x":474,"y":564,"score":53,"level":0},{"x":529,"y":564,"score":33,"level":0},{"x":623,"y":564,"score":58,"level":0},{"x":629,"y":564,"score":79,"level":0},{"x":651,"y":564,"score":41,"level":0},{"x":653,"y":564,"score":46,"level":0},{"x":703,"y":564,"score":96,"level":0},{"x":713,"y":564,"score":141,"level":0},{"x":725,"y":564,"score":87,"level":0},{"x":741,"y":564,"score":31,"level":0},{"x":761,"y":564,"score":61,"level":0},{"x":832,"y":564,"score":35,"level":0},{"x":970,"y":564,"score":30,"level":0},{"x":1141,"y":564,"score":66,"level":0},{"x":1482,"y":564,"score":68,"level":0},{"x":1490,"y":564,"score":75,"level":0},{"x":430,"y":565,"score":56,"level":0},{"x":461,"y":565,"score":30,"level":0},{"x":497,"y":565,"score":70,"level":0},{"x":676,"y":565,"score":135,"level":0},{"x":691,"y":565,"score":63,"level":0},{"x":755,"y":565,"score":56,"level":0},{"x":785,"y":565,"score":127,"level":0},{"x":827,"y":565,"score":48,"level":0},{"x":1156,"y":565,"score":33,"level":0},{"x":1342,"y":565,"score":71,"level":0},{"x":1346,"y":565,"score":26,"level":0},{"x":1354,"y":565,"score":32,"level":0},{"x":1415,"y":565,"score":58,"level":0},{"x":441,"y":566,"score":43,"level":0},{"x":572,"y":566,"score":43,"level":0},{"x":585,"y":566,"score":63,"level":0},{"x":630,"y":566,"score":54,"level":0},{"x":688,"y":566,"score":60,"level":0},{"x":778,"y":566,"score":79,"level":0},{"x":795,"y":566,"score":69,"level":0},{"x":863,"y":566,"score":49,"level":0},{"x":1201,"y":566,"score":50,"level":0},{"x":1348,"y":566,"score":26,"level":0},{"x":1369,"y":566,"score":119,"level":0},{"x":1374,"y":566,"score":128,"level":0},{"x":1391,"y":566,"score":26,"level":0},{"x":1411,"y":566,"score":43,"level":0},{"x":1453,"y":566,"score":48,"level":0},{"x":1472,"y":566,"score":90,"level":0},{"x":503,"y":567,"score":61,"level":0},{"x":644,"y":567,"score":29,"level":0},{"x":771,"y":567,"score":103,"level":0},{"x":835,"y":567,"score":49,"level":0},{"x":1024,"y":567,"score":114,"level":0},{"x":1211,"y":567,"score":29,"level":0},{"x":1218,"y":567,"score":39,"level":0},{"x":1340,"y":567,"score":49,"level":0},{"x":1362,"y":567,"score":74,"level":0},{"x":1365,"y":567,"score":57,"level":0},{"x":1396,"y":567,"score":70,"level":0},{"x":1401,"y":567,"score":122,"level":0},{"x":1419,"y":567,"score":87,"level":0},{"x":1460,"y":567,"score":96,"level":0},{"x":395,"y":568,"score":28,"level":0},{"x":462,"y":568,"score":76,"level":0},{"x":709,"y":568,"score":42,"level":0},{"x":723,"y":568,"score":77,"level":0},{"x":864,"y":568,"score":34,"level":0},{"x":902,"y":568,"score":29,"level":0},{"x":1040,"y":568,"score":39,"level":0},{"x":1235,"y":568,"score":42,"level":0},{"x":1382,"y":568,"score":147,"level":0},{"x":1444,"y":568,"score":58,"level":0},{"x":1462,"y":568,"score":97,"level":0},{"x":420,"y":569,"score":113,"level":0},{"x":468,"y":569,"score":68,"level":0},{"x":585,"y":569,"score":40,"level":0},{"x":662,"y":569,"score":37,"level":0},{"x":667,"y":569,"score":31,"level":0},{"x":738,"y":569,"score":43,"level":0},{"x":743,"y":569,"score":61,"level":0},{"x":749,"y":569,"score":94,"level":0},{"x":761,"y":569,"score":154,"level":0},{"x":788,"y":569,"score":218,"level":0},{"x":797,"y":569,"score":101,"level":0},{"x":800,"y":569,"score":79,"level":0},{"x":806,"y":569,"score":99,"level":0},{"x":1008,"y":569,"score":41,"level":0},{"x":1026,"y":569,"score":103,"level":0},{"x":1045,"y":569,"score":33,"level":0},{"x":1059,"y":569,"score":32,"level":0},{"x":1079,"y":569,"score":26,"level":0},{"x":1460,"y":569,"score":110,"level":0},{"x":1481,"y":569,"score":101,"level":0},{"x":1490,"y":569,"score":65,"level":0},{"x":384,"y":570,"score":26,"level":0},{"x":672,"y":570,"score":48,"level":0},{"x":681,"y":570,"score":34,"level":0},{"x":724,"y":570,"score":72,"level":0},{"x":791,"y":570,"score":123,"level":0},{"x":855,"y":570,"score":91,"level":0},{"x":865,"y":570,"score":35,"level":0},{"x":961,"y":570,"score":39,"level":0},{"x":1089,"y":570,"score":32,"level":0},{"x":1351,"y":570,"score":48,"level":0},{"x":1358,"y":570,"score":78,"level":0},{"x":1408,"y":570,"score":169,"level":0},{"x":1416,"y":570,"score":56,"level":0},{"x":396,"y":571,"score":60,"level":0},{"x":452,"y":571,"score":80,"level":0},{"x":470,"y":571,"score":84,"level":0},{"x":487,"y":571,"score":35,"level":0},{"x":510,"y":571,"score":59,"level":0},{"x":569,"y":571,"score":48,"level":0},{"x":631,"y":571,"score":110,"level":0},{"x":694,"y":571,"score":34,"level":0},{"x":1369,"y":571,"score":96,"level":0},{"x":1398,"y":571,"score":43,"level":0},{"x":1452,"y":571,"score":57,"level":0},{"x":438,"y":572,"score":174,"level":0},{"x":596,"y":572,"score":36,"level":0},{"x":656,"y":572,"score":205,"level":0},{"x":739,"y":572,"score":47,"level":0},{"x":772,"y":572,"score":141,"level":0},{"x":829,"y":572,"score":27,"level":0},{"x":866,"y":572,"score":35,"level":0},{"x":1031,"y":572,"score":29,"level":0},{"x":1307,"y":572,"score":50,"level":0},{"x":1373,"y":572,"score":43,"level":0},{"x":1388,"y":572,"score":124,"level":0},{"x":1422,"y":572,"score":104,"level":0},{"x":1450,"y":572,"score":54,"level":0},{"x":1455,"y":572,"score":54,"level":0},{"x":1489,"y":572,"score":29,"level":0},{"x":377,"y":573,"score":197,"level":0},{"x":432,"y":573,"score":28,"level":0},{"x":482,"y":573,"score":90,"level":0},{"x":502,"y":573,"score":41,"level":0},{"x":650,"y":573,"score":41,"level":0},{"x":732,"y":573,"score":38,"level":0},{"x":755,"y":573,"score":36,"level":0},{"x":760,"y":573,"score":144,"level":0},{"x":997,"y":573,"score":69,"level":0},{"x":1012,"y":573,"score":55,"level":0},{"x":1066,"y":573,"score":28,"level":0},{"x":1376,"y":573,"score":84,"level":0},{"x":1383,"y":573,"score":64,"level":0},{"x":674,"y":574,"score":64,"level":0},{"x":806,"y":574,"score":63,"level":0},{"x":811,"y":574,"score":123,"level":0},{"x":913,"y":574,"score":28,"level":0},{"x":918,"y":574,"score":50,"level":0},{"x":1432,"y":574,"score":68,"level":0},{"x":1444,"y":574,"score":53,"level":0},{"x":519,"y":575,"score":73,"level":0},{"x":606,"y":575,"score":46,"level":0},{"x":637,"y":575,"score":80,"level":0},{"x":679,"y":575,"score":56,"level":0},{"x":685,"y":575,"score":30,"level":0},{"x":749,"y":575,"score":41,"level":0},{"x":788,"y":575,"score":110,"level":0},{"x":791,"y":575,"score":70,"level":0},{"x":847,"y":575,"score":45,"level":0},{"x":852,"y":575,"score":29,"level":0},{"x":1248,"y":575,"score":181,"level":0},{"x":1255,"y":575,"score":80,"level":0},{"x":1423,"y":575,"score":76,"level":0},{"x":1437,"y":575,"score":32,"level":0},{"x":1486,"y":575,"score":43,"level":0},{"x":509,"y":576,"score":60,"level":0},{"x":666,"y":576,"score":85,"level":0},{"x":694,"y":576,"score":44,"level":0},{"x":723,"y":576,"score":90,"level":0},{"x":764,"y":576,"score":45,"level":0},{"x":780,"y":576,"score":143,"level":0},{"x":839,"y":576,"score":26,"level":0},{"x":897,"y":576,"score":56,"level":0},{"x":1229,"y":576,"score":32,"level":0},{"x":1368,"y":576,"score":83,"level":0},{"x":1380,"y":576,"score":124,"level":0},{"x":1409,"y":576,"score":124,"level":0},{"x":1418,"y":576,"score":62,"level":0},{"x":1474,"y":576,"score":59,"level":0},{"x":1480,"y":576,"score":60,"level":0},{"x":611,"y":577,"score":31,"level":0},{"x":717,"y":577,"score":48,"level":0},{"x":774,"y":577,"score":33,"level":0},{"x":886,"y":577,"score":36,"level":0},{"x":1026,"y":577,"score":46,"level":0},{"x":1241,"y":577,"score":76,"level":0},{"x":1254,"y":577,"score":35,"level":0},{"x":1278,"y":577,"score":50,"level":0},{"x":1359,"y":577,"score":86,"level":0},{"x":1371,"y":577,"score":62,"level":0},{"x":1403,"y":577,"score":174,"level":0},{"x":1448,"y":577,"score":90,"level":0},{"x":1461,"y":577,"score":108,"level":0},{"x":1467,"y":577,"score":159,"level":0},{"x":1488,"y":577,"score":29,"level":0},{"x":388,"y":578,"score":49,"level":0},{"x":495,"y":578,"score":33,"level":0},{"x":740,"y":578,"score":62,"level":0},{"x":745,"y":578,"score":117,"level":0},{"x":851,"y":578,"score":39,"level":0},{"x":917,"y":578,"score":70,"level":0},{"x":1226,"y":578,"score":47,"level":0},{"x":1338,"y":578,"score":38,"level":0},{"x":1390,"y":578,"score":78,"level":0},{"x":1396,"y":578,"score":168,"level":0},{"x":1410,"y":578,"score":174,"level":0},{"x":1459,"y":578,"score":117,"level":0},{"x":427,"y":579,"score":29,"level":0},{"x":444,"y":579,"score":90,"level":0},{"x":471,"y":579,"score":57,"level":0},{"x":517,"y":579,"score":73,"level":0},{"x":579,"y":579,"score":28,"level":0},{"x":678,"y":579,"score":52,"level":0},{"x":799,"y":579,"score":27,"level":0},{"x":912,"y":579,"score":53,"level":0},{"x":992,"y":579,"score":32,"level":0},{"x":1185,"y":579,"score":26,"level":0},{"x":1206,"y":579,"score":45,"level":0},{"x":1243,"y":579,"score":124,"level":0},{"x":1345,"y":579,"score":48,"level":0},{"x":1365,"y":579,"score":66,"level":0},{"x":1386,"y":579,"score":124,"level":0},{"x":1433,"y":579,"score":106,"level":0},{"x":1461,"y":579,"score":39,"level":0},{"x":442,"y":580,"score":64,"level":0},{"x":492,"y":580,"score":50,"level":0},{"x":614,"y":580,"score":29,"level":0},{"x":731,"y":580,"score":26,"level":0},{"x":757,"y":580,"score":120,"level":0},{"x":767,"y":580,"score":27,"level":0},{"x":817,"y":580,"score":130,"level":0},{"x":851,"y":580,"score":57,"level":0},{"x":926,"y":580,"score":36,"level":0},{"x":971,"y":580,"score":80,"level":0},{"x":1032,"y":580,"score":29,"level":0},{"x":1371,"y":580,"score":33,"level":0},{"x":1405,"y":580,"score":115,"level":0},{"x":1456,"y":580,"score":46,"level":0},{"x":379,"y":581,"score":44,"level":0},{"x":385,"y":581,"score":28,"level":0},{"x":625,"y":581,"score":85,"level":0},{"x":630,"y":581,"score":171,"level":0},{"x":637,"y":581,"score":36,"level":0},{"x":662,"y":581,"score":282,"level":0},{"x":743,"y":581,"score":54,"level":0},{"x":750,"y":581,"score":67,"level":0},{"x":762,"y":581,"score":29,"level":0},{"x":790,"y":581,"score":106,"level":0},{"x":793,"y":581,"score":75,"level":0},{"x":891,"y":581,"score":45,"level":0},{"x":923,"y":581,"score":37,"level":0},{"x":1199,"y":581,"score":53,"level":0},{"x":1220,"y":581,"score":84,"level":0},{"x":1226,"y":581,"score":60,"level":0},{"x":1376,"y":581,"score":41,"level":0},{"x":1408,"y":581,"score":26,"level":0},{"x":1418,"y":581,"score":108,"level":0},{"x":1440,"y":581,"score":32,"level":0},{"x":466,"y":582,"score":28,"level":0},{"x":504,"y":582,"score":52,"level":0},{"x":698,"y":582,"score":44,"level":0},{"x":775,"y":582,"score":56,"level":0},{"x":781,"y":582,"score":80,"level":0},{"x":788,"y":582,"score":94,"level":0},{"x":807,"y":582,"score":176,"level":0},{"x":853,"y":582,"score":39,"level":0},{"x":1010,"y":582,"score":41,"level":0},{"x":1402,"y":582,"score":106,"level":0},{"x":1405,"y":582,"score":50,"level":0},{"x":1448,"y":582,"score":172,"level":0},{"x":1467,"y":582,"score":54,"level":0},{"x":520,"y":583,"score":43,"level":0},{"x":587,"y":583,"score":49,"level":0},{"x":682,"y":583,"score":62,"level":0},{"x":711,"y":583,"score":39,"level":0},{"x":1215,"y":583,"score":101,"level":0},{"x":1227,"y":583,"score":28,"level":0},{"x":1254,"y":583,"score":94,"level":0},{"x":1338,"y":583,"score":35,"level":0},{"x":1366,"y":583,"score":39,"level":0},{"x":1413,"y":583,"score":65,"level":0},{"x":1439,"y":583,"score":28,"level":0},{"x":1455,"y":583,"score":92,"level":0},{"x":1458,"y":583,"score":32,"level":0},{"x":415,"y":584,"score":43,"level":0},{"x":566,"y":584,"score":34,"level":0},{"x":582,"y":584,"score":41,"level":0},{"x":635,"y":584,"score":60,"level":0},{"x":672,"y":584,"score":35,"level":0},{"x":736,"y":584,"score":45,"level":0},{"x":790,"y":584,"score":76,"level":0},{"x":799,"y":584,"score":126,"level":0},{"x":826,"y":584,"score":55,"level":0},{"x":978,"y":584,"score":40,"level":0},{"x":1020,"y":584,"score":65,"level":0},{"x":1028,"y":584,"score":51,"level":0},{"x":1141,"y":584,"score":36,"level":0},{"x":1239,"y":584,"score":158,"level":0},{"x":1356,"y":584,"score":50,"level":0},{"x":1386,"y":584,"score":133,"level":0},{"x":1395,"y":584,"score":109,"level":0},{"x":1415,"y":584,"score":35,"level":0},{"x":1462,"y":584,"score":130,"level":0},{"x":1468,"y":584,"score":110,"level":0},{"x":588,"y":585,"score":54,"level":0},{"x":657,"y":585,"score":50,"level":0},{"x":714,"y":585,"score":44,"level":0},{"x":728,"y":585,"score":34,"level":0},{"x":971,"y":585,"score":28,"level":0},{"x":1015,"y":585,"score":46,"level":0},{"x":1212,"y":585,"score":69,"level":0},{"x":1237,"y":585,"score":86,"level":0},{"x":1264,"y":585,"score":30,"level":0},{"x":1381,"y":585,"score":173,"level":0},{"x":1490,"y":585,"score":132,"level":0},{"x":522,"y":586,"score":131,"level":0},{"x":607,"y":586,"score":28,"level":0},{"x":617,"y":586,"score":29,"level":0},{"x":739,"y":586,"score":43,"level":0},{"x":744,"y":586,"score":94,"level":0},{"x":757,"y":586,"score":90,"level":0},{"x":770,"y":586,"score":66,"level":0},{"x":786,"y":586,"score":106,"level":0},{"x":912,"y":586,"score":115,"level":0},{"x":1428,"y":586,"score":31,"level":0},{"x":1463,"y":586,"score":106,"level":0},{"x":392,"y":587,"score":77,"level":0},{"x":398,"y":587,"score":32,"level":0},{"x":505,"y":587,"score":155,"level":0},{"x":545,"y":587,"score":28,"level":0},{"x":781,"y":587,"score":81,"level":0},{"x":821,"y":587,"score":51,"level":0},{"x":1140,"y":587,"score":42,"level":0},{"x":1374,"y":587,"score":112,"level":0},{"x":1419,"y":587,"score":70,"level":0},{"x":1444,"y":587,"score":55,"level":0},{"x":1456,"y":587,"score":35,"level":0},{"x":426,"y":588,"score":39,"level":0},{"x":491,"y":588,"score":72,"level":0},{"x":575,"y":588,"score":52,"level":0},{"x":601,"y":588,"score":31,"level":0},{"x":648,"y":588,"score":54,"level":0},{"x":726,"y":588,"score":27,"level":0},{"x":800,"y":588,"score":26,"level":0},{"x":813,"y":588,"score":60,"level":0},{"x":823,"y":588,"score":41,"level":0},{"x":839,"y":588,"score":76,"level":0},{"x":1014,"y":588,"score":69,"level":0},{"x":1148,"y":588,"score":52,"level":0},{"x":1215,"y":588,"score":148,"level":0},{"x":1217,"y":588,"score":178,"level":0},{"x":1227,"y":588,"score":176,"level":0},{"x":1361,"y":588,"score":29,"level":0},{"x":1407,"y":588,"score":79,"level":0},{"x":1439,"y":588,"score":39,"level":0},{"x":377,"y":589,"score":66,"level":0},{"x":438,"y":589,"score":53,"level":0},{"x":511,"y":589,"score":62,"level":0},{"x":554,"y":589,"score":28,"level":0},{"x":849,"y":589,"score":58,"level":0},{"x":1012,"y":589,"score":34,"level":0},{"x":1022,"y":589,"score":65,"level":0},{"x":1030,"y":589,"score":102,"level":0},{"x":1246,"y":589,"score":106,"level":0},{"x":1354,"y":589,"score":182,"level":0},{"x":1403,"y":589,"score":60,"level":0},{"x":1429,"y":589,"score":60,"level":0},{"x":1434,"y":589,"score":70,"level":0},{"x":1453,"y":589,"score":75,"level":0},{"x":448,"y":590,"score":78,"level":0},{"x":467,"y":590,"score":27,"level":0},{"x":528,"y":590,"score":65,"level":0},{"x":541,"y":590,"score":43,"level":0},{"x":560,"y":590,"score":28,"level":0},{"x":618,"y":590,"score":35,"level":0},{"x":752,"y":590,"score":97,"level":0},{"x":772,"y":590,"score":52,"level":0},{"x":805,"y":590,"score":65,"level":0},{"x":890,"y":590,"score":30,"level":0},{"x":918,"y":590,"score":26,"level":0},{"x":924,"y":590,"score":40,"level":0},{"x":1017,"y":590,"score":41,"level":0},{"x":1028,"y":590,"score":152,"level":0},{"x":1080,"y":590,"score":54,"level":0},{"x":1174,"y":590,"score":31,"level":0},{"x":1192,"y":590,"score":92,"level":0},{"x":1195,"y":590,"score":98,"level":0},{"x":1201,"y":590,"score":124,"level":0},{"x":1252,"y":590,"score":30,"level":0},{"x":1260,"y":590,"score":63,"level":0},{"x":1284,"y":590,"score":34,"level":0},{"x":1410,"y":590,"score":34,"level":0},{"x":1479,"y":590,"score":40,"level":0},{"x":1486,"y":590,"score":114,"level":0},{"x":712,"y":591,"score":30,"level":0},{"x":733,"y":591,"score":47,"level":0},{"x":738,"y":591,"score":31,"level":0},{"x":745,"y":591,"score":81,"level":0},{"x":786,"y":591,"score":31,"level":0},{"x":932,"y":591,"score":53,"level":0},{"x":1184,"y":591,"score":27,"level":0},{"x":1264,"y":591,"score":63,"level":0},{"x":1287,"y":591,"score":35,"level":0},{"x":1382,"y":591,"score":51,"level":0},{"x":1386,"y":591,"score":58,"level":0},{"x":1388,"y":591,"score":29,"level":0},{"x":1467,"y":591,"score":58,"level":0},{"x":1489,"y":591,"score":79,"level":0},{"x":377,"y":592,"score":48,"level":0},{"x":513,"y":592,"score":28,"level":0},{"x":636,"y":592,"score":95,"level":0},{"x":769,"y":592,"score":60,"level":0},{"x":777,"y":592,"score":41,"level":0},{"x":796,"y":592,"score":36,"level":0},{"x":912,"y":592,"score":44,"level":0},{"x":1006,"y":592,"score":39,"level":0},{"x":1033,"y":592,"score":50,"level":0},{"x":1415,"y":592,"score":56,"level":0},{"x":1454,"y":592,"score":158,"level":0},{"x":399,"y":593,"score":31,"level":0},{"x":537,"y":593,"score":104,"level":0},{"x":581,"y":593,"score":30,"level":0},{"x":653,"y":593,"score":52,"level":0},{"x":801,"y":593,"score":41,"level":0},{"x":813,"y":593,"score":88,"level":0},{"x":839,"y":593,"score":136,"level":0},{"x":875,"y":593,"score":32,"level":0},{"x":881,"y":593,"score":126,"level":0},{"x":965,"y":593,"score":54,"level":0},{"x":1190,"y":593,"score":128,"level":0},{"x":1203,"y":593,"score":92,"level":0},{"x":1225,"y":593,"score":70,"level":0},{"x":1233,"y":593,"score":79,"level":0},{"x":1273,"y":593,"score":50,"level":0},{"x":1293,"y":593,"score":57,"level":0},{"x":1369,"y":593,"score":125,"level":0},{"x":1400,"y":593,"score":124,"level":0},{"x":1406,"y":593,"score":279,"level":0},{"x":1420,"y":593,"score":145,"level":0},{"x":1425,"y":593,"score":57,"level":0},{"x":1462,"y":593,"score":156,"level":0},{"x":1467,"y":593,"score":40,"level":0},{"x":394,"y":594,"score":64,"level":0},{"x":519,"y":594,"score":58,"level":0},{"x":631,"y":594,"score":43,"level":0},{"x":715,"y":594,"score":38,"level":0},{"x":790,"y":594,"score":153,"level":0},{"x":849,"y":594,"score":33,"level":0},{"x":895,"y":594,"score":28,"level":0},{"x":979,"y":594,"score":42,"level":0},{"x":988,"y":594,"score":55,"level":0},{"x":1011,"y":594,"score":45,"level":0},{"x":1214,"y":594,"score":175,"level":0},{"x":1239,"y":594,"score":33,"level":0},{"x":1282,"y":594,"score":140,"level":0},{"x":1355,"y":594,"score":34,"level":0},{"x":1362,"y":594,"score":43,"level":0},{"x":377,"y":595,"score":26,"level":0},{"x":437,"y":595,"score":118,"level":0},{"x":454,"y":595,"score":38,"level":0},{"x":540,"y":595,"score":34,"level":0},{"x":588,"y":595,"score":40,"level":0},{"x":593,"y":595,"score":27,"level":0},{"x":749,"y":595,"score":51,"level":0},{"x":761,"y":595,"score":152,"level":0},{"x":767,"y":595,"score":80,"level":0},{"x":835,"y":595,"score":29,"level":0},{"x":913,"y":595,"score":42,"level":0},{"x":918,"y":595,"score":55,"level":0},{"x":938,"y":595,"score":44,"level":0},{"x":971,"y":595,"score":60,"level":0},{"x":1245,"y":595,"score":83,"level":0},{"x":1278,"y":595,"score":44,"level":0},{"x":1284,"y":595,"score":140,"level":0},{"x":1289,"y":595,"score":66,"level":0},{"x":1348,"y":595,"score":39,"level":0},{"x":1358,"y":595,"score":137,"level":0},{"x":1385,"y":595,"score":52,"level":0},{"x":1391,"y":595,"score":63,"level":0},{"x":1414,"y":595,"score":47,"level":0},{"x":1427,"y":595,"score":85,"level":0},{"x":1435,"y":595,"score":199,"level":0},{"x":1441,"y":595,"score":26,"level":0},{"x":1478,"y":595,"score":136,"level":0},{"x":448,"y":596,"score":144,"level":0},{"x":463,"y":596,"score":31,"level":0},{"x":573,"y":596,"score":30,"level":0},{"x":576,"y":596,"score":71,"level":0},{"x":690,"y":596,"score":51,"level":0},{"x":727,"y":596,"score":138,"level":0},{"x":1023,"y":596,"score":106,"level":0},{"x":1175,"y":596,"score":99,"level":0},{"x":1207,"y":596,"score":86,"level":0},{"x":1304,"y":596,"score":92,"level":0},{"x":1416,"y":596,"score":58,"level":0},{"x":1462,"y":596,"score":107,"level":0},{"x":685,"y":597,"score":33,"level":0},{"x":696,"y":597,"score":75,"level":0},{"x":786,"y":597,"score":242,"level":0},{"x":827,"y":597,"score":68,"level":0},{"x":853,"y":597,"score":92,"level":0},{"x":927,"y":597,"score":42,"level":0},{"x":993,"y":597,"score":168,"level":0},{"x":1163,"y":597,"score":28,"level":0},{"x":1204,"y":597,"score":163,"level":0},{"x":1230,"y":597,"score":41,"level":0},{"x":1240,"y":597,"score":93,"level":0},{"x":1260,"y":597,"score":53,"level":0},{"x":1265,"y":597,"score":81,"level":0},{"x":1313,"y":597,"score":71,"level":0},{"x":1383,"y":597,"score":44,"level":0},{"x":1412,"y":597,"score":52,"level":0},{"x":1423,"y":597,"score":42,"level":0},{"x":1454,"y":597,"score":114,"level":0},{"x":1471,"y":597,"score":48,"level":0},{"x":406,"y":598,"score":26,"level":0},{"x":432,"y":598,"score":41,"level":0},{"x":448,"y":598,"score":88,"level":0},{"x":511,"y":598,"score":69,"level":0},{"x":517,"y":598,"score":115,"level":0},{"x":581,"y":598,"score":76,"level":0},{"x":756,"y":598,"score":91,"level":0},{"x":772,"y":598,"score":103,"level":0},{"x":780,"y":598,"score":68,"level":0},{"x":808,"y":598,"score":34,"level":0},{"x":813,"y":598,"score":48,"level":0},{"x":843,"y":598,"score":83,"level":0},{"x":867,"y":598,"score":91,"level":0},{"x":875,"y":598,"score":26,"level":0},{"x":964,"y":598,"score":57,"level":0},{"x":1012,"y":598,"score":70,"level":0},{"x":1180,"y":598,"score":51,"level":0},{"x":1189,"y":598,"score":105,"level":0},{"x":1249,"y":598,"score":34,"level":0},{"x":1288,"y":598,"score":88,"level":0},{"x":1294,"y":598,"score":149,"level":0},{"x":1322,"y":598,"score":26,"level":0},{"x":1339,"y":598,"score":70,"level":0},{"x":1344,"y":598,"score":36,"level":0},{"x":1359,"y":598,"score":158,"level":0},{"x":1405,"y":598,"score":56,"level":0},{"x":1430,"y":598,"score":60,"level":0},{"x":1443,"y":598,"score":84,"level":0},{"x":1445,"y":598,"score":57,"level":0},{"x":1449,"y":598,"score":50,"level":0},{"x":1485,"y":598,"score":82,"level":0},{"x":389,"y":599,"score":36,"level":0},{"x":545,"y":599,"score":40,"level":0},{"x":796,"y":599,"score":167,"level":0},{"x":881,"y":599,"score":104,"level":0},{"x":893,"y":599,"score":77,"level":0},{"x":901,"y":599,"score":58,"level":0},{"x":970,"y":599,"score":32,"level":0},{"x":992,"y":599,"score":248,"level":0},{"x":1033,"y":599,"score":69,"level":0},{"x":1214,"y":599,"score":30,"level":0},{"x":1275,"y":599,"score":172,"level":0},{"x":1306,"y":599,"score":37,"level":0},{"x":1351,"y":599,"score":76,"level":0},{"x":1366,"y":599,"score":33,"level":0},{"x":1391,"y":599,"score":123,"level":0},{"x":1425,"y":599,"score":32,"level":0},{"x":1474,"y":599,"score":34,"level":0},{"x":468,"y":600,"score":33,"level":0},{"x":585,"y":600,"score":122,"level":0},{"x":740,"y":600,"score":29,"level":0},{"x":761,"y":600,"score":111,"level":0},{"x":825,"y":600,"score":91,"level":0},{"x":957,"y":600,"score":222,"level":0},{"x":1038,"y":600,"score":100,"level":0},{"x":1052,"y":600,"score":104,"level":0},{"x":1100,"y":600,"score":48,"level":0},{"x":1149,"y":600,"score":31,"level":0},{"x":1156,"y":600,"score":33,"level":0},{"x":1159,"y":600,"score":65,"level":0},{"x":1278,"y":600,"score":95,"level":0},{"x":1328,"y":600,"score":102,"level":0},{"x":1381,"y":600,"score":84,"level":0},{"x":552,"y":601,"score":122,"level":0},{"x":574,"y":601,"score":61,"level":0},{"x":684,"y":601,"score":59,"level":0},{"x":716,"y":601,"score":99,"level":0},{"x":725,"y":601,"score":26,"level":0},{"x":727,"y":601,"score":54,"level":0},{"x":911,"y":601,"score":46,"level":0},{"x":914,"y":601,"score":43,"level":0},{"x":943,"y":601,"score":44,"level":0},{"x":950,"y":601,"score":33,"level":0},{"x":1019,"y":601,"score":90,"level":0},{"x":1022,"y":601,"score":71,"level":0},{"x":1064,"y":601,"score":37,"level":0},{"x":1116,"y":601,"score":36,"level":0},{"x":1137,"y":601,"score":34,"level":0},{"x":1224,"y":601,"score":73,"level":0},{"x":1233,"y":601,"score":96,"level":0},{"x":1243,"y":601,"score":36,"level":0},{"x":1256,"y":601,"score":58,"level":0},{"x":1345,"y":601,"score":84,"level":0},{"x":1351,"y":601,"score":136,"level":0},{"x":1410,"y":601,"score":31,"level":0},{"x":1479,"y":601,"score":32,"level":0},{"x":449,"y":602,"score":79,"level":0},{"x":489,"y":602,"score":30,"level":0},{"x":540,"y":602,"score":33,"level":0},{"x":766,"y":602,"score":198,"level":0},{"x":782,"y":602,"score":121,"level":0},{"x":791,"y":602,"score":32,"level":0},{"x":873,"y":602,"score":54,"level":0},{"x":981,"y":602,"score":86,"level":0},{"x":1001,"y":602,"score":77,"level":0},{"x":1114,"y":602,"score":27,"level":0},{"x":1143,"y":602,"score":38,"level":0},{"x":1174,"y":602,"score":163,"level":0},{"x":1236,"y":602,"score":127,"level":0},{"x":1245,"y":602,"score":117,"level":0},{"x":1403,"y":602,"score":168,"level":0},{"x":1421,"y":602,"score":53,"level":0},{"x":1437,"y":602,"score":54,"level":0},{"x":1445,"y":602,"score":41,"level":0},{"x":1467,"y":602,"score":36,"level":0},{"x":420,"y":603,"score":131,"level":0},{"x":426,"y":603,"score":29,"level":0},{"x":524,"y":603,"score":68,"level":0},{"x":566,"y":603,"score":100,"level":0},{"x":594,"y":603,"score":29,"level":0},{"x":604,"y":603,"score":28,"level":0},{"x":733,"y":603,"score":75,"level":0},{"x":806,"y":603,"score":60,"level":0},{"x":819,"y":603,"score":53,"level":0},{"x":857,"y":603,"score":112,"level":0},{"x":875,"y":603,"score":75,"level":0},{"x":884,"y":603,"score":90,"level":0},{"x":938,"y":603,"score":50,"level":0},{"x":964,"y":603,"score":44,"level":0},{"x":986,"y":603,"score":152,"level":0},{"x":1047,"y":603,"score":78,"level":0},{"x":1361,"y":603,"score":90,"level":0},{"x":1396,"y":603,"score":56,"level":0},{"x":1426,"y":603,"score":30,"level":0},{"x":1441,"y":603,"score":53,"level":0},{"x":1462,"y":603,"score":103,"level":0},{"x":474,"y":604,"score":35,"level":0},{"x":558,"y":604,"score":91,"level":0},{"x":575,"y":604,"score":65,"level":0},{"x":583,"y":604,"score":67,"level":0},{"x":711,"y":604,"score":57,"level":0},{"x":735,"y":604,"score":97,"level":0},{"x":747,"y":604,"score":32,"level":0},{"x":756,"y":604,"score":112,"level":0},{"x":772,"y":604,"score":161,"level":0},{"x":812,"y":604,"score":39,"level":0},{"x":837,"y":604,"score":180,"level":0},{"x":852,"y":604,"score":37,"level":0},{"x":920,"y":604,"score":151,"level":0},{"x":1003,"y":604,"score":30,"level":0},{"x":1032,"y":604,"score":87,"level":0},{"x":1076,"y":604,"score":85,"level":0},{"x":1088,"y":604,"score":54,"level":0},{"x":1126,"y":604,"score":64,"level":0},{"x":1179,"y":604,"score":63,"level":0},{"x":1288,"y":604,"score":78,"level":0},{"x":1300,"y":604,"score":201,"level":0},{"x":1373,"y":604,"score":45,"level":0},{"x":415,"y":605,"score":43,"level":0},{"x":432,"y":605,"score":68,"level":0},{"x":438,"y":605,"score":34,"level":0},{"x":444,"y":605,"score":30,"level":0},{"x":509,"y":605,"score":31,"level":0},{"x":649,"y":605,"score":66,"level":0},{"x":687,"y":605,"score":89,"level":0},{"x":694,"y":605,"score":106,"level":0},{"x":726,"y":605,"score":60,"level":0},{"x":818,"y":605,"score":64,"level":0},{"x":903,"y":605,"score":33,"level":0},{"x":933,"y":605,"score":182,"level":0},{"x":1050,"y":605,"score":55,"level":0},{"x":1070,"y":605,"score":126,"level":0},{"x":1190,"y":605,"score":102,"level":0},{"x":1275,"y":605,"score":97,"level":0},{"x":1318,"y":605,"score":33,"level":0},{"x":1327,"y":605,"score":46,"level":0},{"x":1352,"y":605,"score":100,"level":0},{"x":1381,"y":605,"score":42,"level":0},{"x":1456,"y":605,"score":141,"level":0},{"x":1483,"y":605,"score":66,"level":0},{"x":507,"y":606,"score":43,"level":0},{"x":586,"y":606,"score":32,"level":0},{"x":683,"y":606,"score":32,"level":0},{"x":719,"y":606,"score":95,"level":0},{"x":799,"y":606,"score":60,"level":0},{"x":842,"y":606,"score":77,"level":0},{"x":848,"y":606,"score":28,"level":0},{"x":853,"y":606,"score":28,"level":0},{"x":896,"y":606,"score":73,"level":0},{"x":983,"y":606,"score":33,"level":0},{"x":990,"y":606,"score":77,"level":0},{"x":1030,"y":606,"score":114,"level":0},{"x":1105,"y":606,"score":59,"level":0},{"x":1118,"y":606,"score":80,"level":0},{"x":1156,"y":606,"score":30,"level":0},{"x":1164,"y":606,"score":73,"level":0},{"x":1197,"y":606,"score":66,"level":0},{"x":1252,"y":606,"score":27,"level":0},{"x":1310,"y":606,"score":116,"level":0},{"x":1315,"y":606,"score":27,"level":0},{"x":1451,"y":606,"score":140,"level":0},{"x":1471,"y":606,"score":37,"level":0},{"x":575,"y":607,"score":54,"level":0},{"x":580,"y":607,"score":97,"level":0},{"x":652,"y":607,"score":68,"level":0},{"x":674,"y":607,"score":68,"level":0},{"x":730,"y":607,"score":66,"level":0},{"x":758,"y":607,"score":55,"level":0},{"x":855,"y":607,"score":40,"level":0},{"x":873,"y":607,"score":40,"level":0},{"x":981,"y":607,"score":51,"level":0},{"x":1010,"y":607,"score":134,"level":0},{"x":1016,"y":607,"score":41,"level":0},{"x":1025,"y":607,"score":46,"level":0},{"x":1045,"y":607,"score":27,"level":0},{"x":1065,"y":607,"score":50,"level":0},{"x":1306,"y":607,"score":41,"level":0},{"x":1364,"y":607,"score":135,"level":0},{"x":1387,"y":607,"score":78,"level":0},{"x":1424,"y":607,"score":80,"level":0},{"x":1445,"y":607,"score":72,"level":0},{"x":765,"y":608,"score":81,"level":0},{"x":784,"y":608,"score":29,"level":0},{"x":806,"y":608,"score":28,"level":0},{"x":857,"y":608,"score":41,"level":0},{"x":881,"y":608,"score":58,"level":0},{"x":894,"y":608,"score":27,"level":0},{"x":1113,"y":608,"score":62,"level":0},{"x":1147,"y":608,"score":29,"level":0},{"x":1159,"y":608,"score":128,"level":0},{"x":1183,"y":608,"score":55,"level":0},{"x":1213,"y":608,"score":54,"level":0},{"x":1259,"y":608,"score":124,"level":0},{"x":1359,"y":608,"score":118,"level":0},{"x":1371,"y":608,"score":61,"level":0},{"x":1431,"y":608,"score":62,"level":0},{"x":1448,"y":608,"score":43,"level":0},{"x":1451,"y":608,"score":106,"level":0},{"x":1472,"y":608,"score":55,"level":0},{"x":1478,"y":608,"score":142,"level":0},{"x":511,"y":609,"score":27,"level":0},{"x":520,"y":609,"score":36,"level":0},{"x":683,"y":609,"score":62,"level":0},{"x":723,"y":609,"score":38,"level":0},{"x":776,"y":609,"score":115,"level":0},{"x":793,"y":609,"score":55,"level":0},{"x":822,"y":609,"score":26,"level":0},{"x":828,"y":609,"score":96,"level":0},{"x":838,"y":609,"score":96,"level":0},{"x":846,"y":609,"score":27,"level":0},{"x":852,"y":609,"score":26,"level":0},{"x":868,"y":609,"score":68,"level":0},{"x":924,"y":609,"score":56,"level":0},{"x":969,"y":609,"score":107,"level":0},{"x":1035,"y":609,"score":137,"level":0},{"x":1054,"y":609,"score":39,"level":0},{"x":1059,"y":609,"score":118,"level":0},{"x":1065,"y":609,"score":80,"level":0},{"x":1099,"y":609,"score":86,"level":0},{"x":1126,"y":609,"score":125,"level":0},{"x":1166,"y":609,"score":26,"level":0},{"x":1169,"y":609,"score":33,"level":0},{"x":1222,"y":609,"score":112,"level":0},{"x":1243,"y":609,"score":228,"level":0},{"x":1272,"y":609,"score":36,"level":0},{"x":1300,"y":609,"score":104,"level":0},{"x":1316,"y":609,"score":49,"level":0},{"x":1334,"y":609,"score":66,"level":0},{"x":1375,"y":609,"score":38,"level":0},{"x":1396,"y":609,"score":86,"level":0},{"x":1412,"y":609,"score":99,"level":0},{"x":1435,"y":609,"score":48,"level":0},{"x":1461,"y":609,"score":215,"level":0},{"x":469,"y":610,"score":38,"level":0},{"x":569,"y":610,"score":31,"level":0},{"x":574,"y":610,"score":68,"level":0},{"x":632,"y":610,"score":30,"level":0},{"x":638,"y":610,"score":159,"level":0},{"x":695,"y":610,"score":49,"level":0},{"x":705,"y":610,"score":30,"level":0},{"x":737,"y":610,"score":43,"level":0},{"x":833,"y":610,"score":29,"level":0},{"x":910,"y":610,"score":85,"level":0},{"x":1049,"y":610,"score":84,"level":0},{"x":1088,"y":610,"score":177,"level":0},{"x":1191,"y":610,"score":75,"level":0},{"x":1220,"y":610,"score":29,"level":0},{"x":1322,"y":610,"score":126,"level":0},{"x":1330,"y":610,"score":31,"level":0},{"x":1340,"y":610,"score":29,"level":0},{"x":1355,"y":610,"score":43,"level":0},{"x":1384,"y":610,"score":32,"level":0},{"x":1440,"y":610,"score":96,"level":0},{"x":521,"y":611,"score":35,"level":0},{"x":552,"y":611,"score":36,"level":0},{"x":618,"y":611,"score":57,"level":0},{"x":670,"y":611,"score":38,"level":0},{"x":716,"y":611,"score":27,"level":0},{"x":753,"y":611,"score":42,"level":0},{"x":758,"y":611,"score":51,"level":0},{"x":788,"y":611,"score":36,"level":0},{"x":801,"y":611,"score":125,"level":0},{"x":839,"y":611,"score":104,"level":0},{"x":847,"y":611,"score":146,"level":0},{"x":897,"y":611,"score":38,"level":0},{"x":903,"y":611,"score":33,"level":0},{"x":917,"y":611,"score":82,"level":0},{"x":927,"y":611,"score":65,"level":0},{"x":977,"y":611,"score":50,"level":0},{"x":1119,"y":611,"score":30,"level":0},{"x":1139,"y":611,"score":133,"level":0},{"x":1144,"y":611,"score":84,"level":0},{"x":1241,"y":611,"score":101,"level":0},{"x":1277,"y":611,"score":28,"level":0},{"x":1420,"y":611,"score":107,"level":0},{"x":1449,"y":611,"score":51,"level":0},{"x":1461,"y":611,"score":150,"level":0},{"x":540,"y":612,"score":80,"level":0},{"x":647,"y":612,"score":64,"level":0},{"x":653,"y":612,"score":59,"level":0},{"x":690,"y":612,"score":117,"level":0},{"x":729,"y":612,"score":94,"level":0},{"x":762,"y":612,"score":66,"level":0},{"x":769,"y":612,"score":84,"level":0},{"x":779,"y":612,"score":59,"level":0},{"x":783,"y":612,"score":28,"level":0},{"x":815,"y":612,"score":53,"level":0},{"x":863,"y":612,"score":46,"level":0},{"x":929,"y":612,"score":100,"level":0},{"x":942,"y":612,"score":62,"level":0},{"x":947,"y":612,"score":58,"level":0},{"x":969,"y":612,"score":42,"level":0},{"x":974,"y":612,"score":62,"level":0},{"x":982,"y":612,"score":194,"level":0},{"x":1017,"y":612,"score":147,"level":0},{"x":1093,"y":612,"score":45,"level":0},{"x":1104,"y":612,"score":42,"level":0},{"x":1180,"y":612,"score":38,"level":0},{"x":1227,"y":612,"score":87,"level":0},{"x":1235,"y":612,"score":129,"level":0},{"x":1244,"y":612,"score":72,"level":0},{"x":1264,"y":612,"score":56,"level":0},{"x":1291,"y":612,"score":50,"level":0},{"x":1329,"y":612,"score":40,"level":0},{"x":1332,"y":612,"score":34,"level":0},{"x":1348,"y":612,"score":35,"level":0},{"x":1425,"y":612,"score":67,"level":0},{"x":449,"y":613,"score":90,"level":0},{"x":491,"y":613,"score":52,"level":0},{"x":528,"y":613,"score":36,"level":0},{"x":545,"y":613,"score":44,"level":0},{"x":569,"y":613,"score":35,"level":0},{"x":578,"y":613,"score":131,"level":0},{"x":588,"y":613,"score":47,"level":0},{"x":675,"y":613,"score":51,"level":0},{"x":726,"y":613,"score":34,"level":0},{"x":748,"y":613,"score":68,"level":0},{"x":767,"y":613,"score":53,"level":0},{"x":856,"y":613,"score":44,"level":0},{"x":892,"y":613,"score":83,"level":0},{"x":905,"y":613,"score":45,"level":0},{"x":955,"y":613,"score":52,"level":0},{"x":987,"y":613,"score":77,"level":0},{"x":1003,"y":613,"score":127,"level":0},{"x":1027,"y":613,"score":110,"level":0},{"x":1074,"y":613,"score":35,"level":0},{"x":1169,"y":613,"score":139,"level":0},{"x":1185,"y":613,"score":28,"level":0},{"x":1214,"y":613,"score":100,"level":0},{"x":1312,"y":613,"score":126,"level":0},{"x":1336,"y":613,"score":75,"level":0},{"x":1353,"y":613,"score":37,"level":0},{"x":1371,"y":613,"score":33,"level":0},{"x":1389,"y":613,"score":130,"level":0},{"x":1405,"y":613,"score":78,"level":0},{"x":1432,"y":613,"score":80,"level":0},{"x":1446,"y":613,"score":135,"level":0},{"x":1490,"y":613,"score":37,"level":0},{"x":420,"y":614,"score":145,"level":0},{"x":484,"y":614,"score":117,"level":0},{"x":496,"y":614,"score":39,"level":0},{"x":510,"y":614,"score":182,"level":0},{"x":516,"y":614,"score":77,"level":0},{"x":554,"y":614,"score":28,"level":0},{"x":698,"y":614,"score":119,"level":0},{"x":743,"y":614,"score":42,"level":0},{"x":765,"y":614,"score":99,"level":0},{"x":823,"y":614,"score":118,"level":0},{"x":830,"y":614,"score":157,"level":0},{"x":879,"y":614,"score":70,"level":0},{"x":941,"y":614,"score":95,"level":0},{"x":968,"y":614,"score":48,"level":0},{"x":1035,"y":614,"score":115,"level":0},{"x":1123,"y":614,"score":63,"level":0},{"x":1194,"y":614,"score":67,"level":0},{"x":1300,"y":614,"score":161,"level":0},{"x":1396,"y":614,"score":54,"level":0},{"x":1417,"y":614,"score":60,"level":0},{"x":1444,"y":614,"score":159,"level":0},{"x":1456,"y":614,"score":55,"level":0},{"x":1472,"y":614,"score":61,"level":0},{"x":583,"y":615,"score":140,"level":0},{"x":671,"y":615,"score":64,"level":0},{"x":711,"y":615,"score":111,"level":0},{"x":738,"y":615,"score":95,"level":0},{"x":845,"y":615,"score":32,"level":0},{"x":859,"y":615,"score":42,"level":0},{"x":910,"y":615,"score":91,"level":0},{"x":923,"y":615,"score":101,"level":0},{"x":957,"y":615,"score":95,"level":0},{"x":1032,"y":615,"score":124,"level":0},{"x":1058,"y":615,"score":125,"level":0},{"x":1064,"y":615,"score":120,"level":0},{"x":1069,"y":615,"score":90,"level":0},{"x":1098,"y":615,"score":57,"level":0},{"x":1132,"y":615,"score":192,"level":0},{"x":1162,"y":615,"score":72,"level":0},{"x":1356,"y":615,"score":126,"level":0},{"x":1411,"y":615,"score":197,"level":0},{"x":1423,"y":615,"score":33,"level":0},{"x":1439,"y":615,"score":63,"level":0},{"x":1465,"y":615,"score":116,"level":0},{"x":1484,"y":615,"score":58,"level":0},{"x":439,"y":616,"score":94,"level":0},{"x":499,"y":616,"score":58,"level":0},{"x":504,"y":616,"score":58,"level":0},{"x":663,"y":616,"score":179,"level":0},{"x":676,"y":616,"score":29,"level":0},{"x":687,"y":616,"score":104,"level":0},{"x":744,"y":616,"score":43,"level":0},{"x":789,"y":616,"score":199,"level":0},{"x":799,"y":616,"score":45,"level":0},{"x":851,"y":616,"score":79,"level":0},{"x":950,"y":616,"score":103,"level":0},{"x":1051,"y":616,"score":50,"level":0},{"x":1117,"y":616,"score":74,"level":0},{"x":1140,"y":616,"score":271,"level":0},{"x":1148,"y":616,"score":74,"level":0},{"x":1156,"y":616,"score":62,"level":0},{"x":1175,"y":616,"score":220,"level":0},{"x":1200,"y":616,"score":26,"level":0},{"x":1221,"y":616,"score":50,"level":0},{"x":1234,"y":616,"score":109,"level":0},{"x":1245,"y":616,"score":29,"level":0},{"x":1283,"y":616,"score":38,"level":0},{"x":1298,"y":616,"score":221,"level":0},{"x":1324,"y":616,"score":63,"level":0},{"x":1391,"y":616,"score":127,"level":0},{"x":561,"y":617,"score":30,"level":0},{"x":615,"y":617,"score":26,"level":0},{"x":638,"y":617,"score":74,"level":0},{"x":647,"y":617,"score":143,"level":0},{"x":652,"y":617,"score":174,"level":0},{"x":718,"y":617,"score":154,"level":0},{"x":783,"y":617,"score":124,"level":0},{"x":802,"y":617,"score":104,"level":0},{"x":815,"y":617,"score":57,"level":0},{"x":842,"y":617,"score":30,"level":0},{"x":863,"y":617,"score":51,"level":0},{"x":896,"y":617,"score":58,"level":0},{"x":931,"y":617,"score":171,"level":0},{"x":936,"y":617,"score":52,"level":0},{"x":1046,"y":617,"score":49,"level":0},{"x":1082,"y":617,"score":48,"level":0},{"x":1166,"y":617,"score":150,"level":0},{"x":1198,"y":617,"score":50,"level":0},{"x":1243,"y":617,"score":57,"level":0},{"x":1290,"y":617,"score":124,"level":0},{"x":1422,"y":617,"score":39,"level":0},{"x":1428,"y":617,"score":58,"level":0},{"x":1442,"y":617,"score":124,"level":0},{"x":1449,"y":617,"score":162,"level":0},{"x":1460,"y":617,"score":50,"level":0},{"x":491,"y":618,"score":40,"level":0},{"x":526,"y":618,"score":40,"level":0},{"x":547,"y":618,"score":92,"level":0},{"x":668,"y":618,"score":49,"level":0},{"x":740,"y":618,"score":67,"level":0},{"x":748,"y":618,"score":70,"level":0},{"x":773,"y":618,"score":71,"level":0},{"x":820,"y":618,"score":120,"level":0},{"x":826,"y":618,"score":80,"level":0},{"x":900,"y":618,"score":70,"level":0},{"x":982,"y":618,"score":48,"level":0},{"x":1033,"y":618,"score":188,"level":0},{"x":1092,"y":618,"score":34,"level":0},{"x":1184,"y":618,"score":81,"level":0},{"x":1214,"y":618,"score":26,"level":0},{"x":1252,"y":618,"score":40,"level":0},{"x":1255,"y":618,"score":55,"level":0},{"x":1306,"y":618,"score":122,"level":0},{"x":1405,"y":618,"score":63,"level":0},{"x":1434,"y":618,"score":107,"level":0},{"x":1480,"y":618,"score":98,"level":0},{"x":404,"y":619,"score":134,"level":0},{"x":532,"y":619,"score":104,"level":0},{"x":556,"y":619,"score":66,"level":0},{"x":569,"y":619,"score":46,"level":0},{"x":634,"y":619,"score":107,"level":0},{"x":657,"y":619,"score":66,"level":0},{"x":696,"y":619,"score":81,"level":0},{"x":786,"y":619,"score":137,"level":0},{"x":944,"y":619,"score":76,"level":0},{"x":988,"y":619,"score":46,"level":0},{"x":1119,"y":619,"score":74,"level":0},{"x":1124,"y":619,"score":133,"level":0},{"x":1157,"y":619,"score":104,"level":0},{"x":1188,"y":619,"score":142,"level":0},{"x":1193,"y":619,"score":155,"level":0},{"x":1260,"y":619,"score":130,"level":0},{"x":1263,"y":619,"score":90,"level":0},{"x":1275,"y":619,"score":243,"level":0},{"x":1294,"y":619,"score":104,"level":0},{"x":1333,"y":619,"score":38,"level":0},{"x":1372,"y":619,"score":41,"level":0},{"x":1397,"y":619,"score":45,"level":0},{"x":1415,"y":619,"score":31,"level":0},{"x":1456,"y":619,"score":144,"level":0},{"x":1489,"y":619,"score":32,"level":0},{"x":397,"y":620,"score":165,"level":0},{"x":598,"y":620,"score":26,"level":0},{"x":690,"y":620,"score":87,"level":0},{"x":765,"y":620,"score":98,"level":0},{"x":875,"y":620,"score":40,"level":0},{"x":883,"y":620,"score":38,"level":0},{"x":1004,"y":620,"score":90,"level":0},{"x":1025,"y":620,"score":34,"level":0},{"x":1039,"y":620,"score":136,"level":0},{"x":1056,"y":620,"score":38,"level":0},{"x":1116,"y":620,"score":32,"level":0},{"x":1133,"y":620,"score":106,"level":0},{"x":1238,"y":620,"score":57,"level":0},{"x":1270,"y":620,"score":119,"level":0},{"x":1362,"y":620,"score":136,"level":0},{"x":1371,"y":620,"score":73,"level":0},{"x":1378,"y":620,"score":78,"level":0},{"x":1388,"y":620,"score":86,"level":0},{"x":1463,"y":620,"score":91,"level":0},{"x":469,"y":621,"score":48,"level":0},{"x":475,"y":621,"score":142,"level":0},{"x":495,"y":621,"score":111,"level":0},{"x":500,"y":621,"score":30,"level":0},{"x":540,"y":621,"score":56,"level":0},{"x":674,"y":621,"score":48,"level":0},{"x":806,"y":621,"score":60,"level":0},{"x":870,"y":621,"score":51,"level":0},{"x":888,"y":621,"score":45,"level":0},{"x":908,"y":621,"score":86,"level":0},{"x":928,"y":621,"score":49,"level":0},{"x":1028,"y":621,"score":44,"level":0},{"x":1034,"y":621,"score":159,"level":0},{"x":1078,"y":621,"score":48,"level":0},{"x":1105,"y":621,"score":132,"level":0},{"x":1112,"y":621,"score":105,"level":0},{"x":1144,"y":621,"score":39,"level":0},{"x":1153,"y":621,"score":40,"level":0},{"x":1212,"y":621,"score":58,"level":0},{"x":1227,"y":621,"score":107,"level":0},{"x":1233,"y":621,"score":71,"level":0},{"x":1284,"y":621,"score":83,"level":0},{"x":427,"y":622,"score":82,"level":0},{"x":450,"y":622,"score":69,"level":0},{"x":561,"y":622,"score":115,"level":0},{"x":578,"y":622,"score":51,"level":0},{"x":593,"y":622,"score":61,"level":0},{"x":635,"y":622,"score":44,"level":0},{"x":646,"y":622,"score":104,"level":0},{"x":653,"y":622,"score":87,"level":0},{"x":756,"y":622,"score":60,"level":0},{"x":770,"y":622,"score":49,"level":0},{"x":792,"y":622,"score":168,"level":0},{"x":802,"y":622,"score":32,"level":0},{"x":852,"y":622,"score":108,"level":0},{"x":867,"y":622,"score":66,"level":0},{"x":913,"y":622,"score":98,"level":0},{"x":920,"y":622,"score":87,"level":0},{"x":943,"y":622,"score":49,"level":0},{"x":960,"y":622,"score":50,"level":0},{"x":1011,"y":622,"score":144,"level":0},{"x":1052,"y":622,"score":57,"level":0},{"x":1057,"y":622,"score":33,"level":0},{"x":1139,"y":622,"score":40,"level":0},{"x":1176,"y":622,"score":148,"level":0},{"x":1310,"y":622,"score":144,"level":0},{"x":1329,"y":622,"score":34,"level":0},{"x":1351,"y":622,"score":96,"level":0},{"x":1385,"y":622,"score":57,"level":0},{"x":1425,"y":622,"score":89,"level":0},{"x":1440,"y":622,"score":65,"level":0},{"x":1446,"y":622,"score":103,"level":0},{"x":1451,"y":622,"score":60,"level":0},{"x":1458,"y":622,"score":107,"level":0},{"x":1469,"y":622,"score":130,"level":0},{"x":382,"y":623,"score":55,"level":0},{"x":387,"y":623,"score":72,"level":0},{"x":413,"y":623,"score":134,"level":0},{"x":422,"y":623,"score":39,"level":0},{"x":433,"y":623,"score":131,"level":0},{"x":516,"y":623,"score":55,"level":0},{"x":527,"y":623,"score":82,"level":0},{"x":544,"y":623,"score":75,"level":0},{"x":703,"y":623,"score":51,"level":0},{"x":740,"y":623,"score":39,"level":0},{"x":819,"y":623,"score":103,"level":0},{"x":825,"y":623,"score":62,"level":0},{"x":833,"y":623,"score":44,"level":0},{"x":873,"y":623,"score":42,"level":0},{"x":981,"y":623,"score":41,"level":0},{"x":996,"y":623,"score":88,"level":0},{"x":1182,"y":623,"score":61,"level":0},{"x":1200,"y":623,"score":103,"level":0},{"x":1205,"y":623,"score":34,"level":0},{"x":1217,"y":623,"score":81,"level":0},{"x":1219,"y":623,"score":76,"level":0},{"x":1222,"y":623,"score":78,"level":0},{"x":1224,"y":623,"score":65,"level":0},{"x":1243,"y":623,"score":182,"level":0},{"x":1252,"y":623,"score":73,"level":0},{"x":1257,"y":623,"score":48,"level":0},{"x":1304,"y":623,"score":89,"level":0},{"x":1326,"y":623,"score":35,"level":0},{"x":1358,"y":623,"score":86,"level":0},{"x":1393,"y":623,"score":104,"level":0},{"x":1406,"y":623,"score":112,"level":0},{"x":1437,"y":623,"score":80,"level":0},{"x":1480,"y":623,"score":89,"level":0},{"x":533,"y":624,"score":61,"level":0},{"x":637,"y":624,"score":44,"level":0},{"x":751,"y":624,"score":89,"level":0},{"x":775,"y":624,"score":75,"level":0},{"x":805,"y":624,"score":35,"level":0},{"x":934,"y":624,"score":36,"level":0},{"x":1051,"y":624,"score":66,"level":0},{"x":1058,"y":624,"score":36,"level":0},{"x":1159,"y":624,"score":31,"level":0},{"x":1168,"y":624,"score":133,"level":0},{"x":1193,"y":624,"score":68,"level":0},{"x":1295,"y":624,"score":260,"level":0},{"x":1375,"y":624,"score":84,"level":0},{"x":1442,"y":624,"score":38,"level":0},{"x":1487,"y":624,"score":47,"level":0},{"x":398,"y":625,"score":113,"level":0},{"x":460,"y":625,"score":30,"level":0},{"x":634,"y":625,"score":30,"level":0},{"x":675,"y":625,"score":46,"level":0},{"x":779,"y":625,"score":60,"level":0},{"x":861,"y":625,"score":92,"level":0},{"x":878,"y":625,"score":31,"level":0},{"x":884,"y":625,"score":47,"level":0},{"x":894,"y":625,"score":133,"level":0},{"x":927,"y":625,"score":155,"level":0},{"x":956,"y":625,"score":98,"level":0},{"x":1044,"y":625,"score":61,"level":0},{"x":1071,"y":625,"score":68,"level":0},{"x":1079,"y":625,"score":35,"level":0},{"x":1088,"y":625,"score":82,"level":0},{"x":1097,"y":625,"score":94,"level":0},{"x":1197,"y":625,"score":44,"level":0},{"x":1237,"y":625,"score":63,"level":0},{"x":1269,"y":625,"score":29,"level":0},{"x":1333,"y":625,"score":112,"level":0},{"x":1371,"y":625,"score":32,"level":0},{"x":1461,"y":625,"score":45,"level":0},{"x":476,"y":626,"score":202,"level":0},{"x":491,"y":626,"score":26,"level":0},{"x":542,"y":626,"score":27,"level":0},{"x":548,"y":626,"score":33,"level":0},{"x":661,"y":626,"score":72,"level":0},{"x":690,"y":626,"score":54,"level":0},{"x":754,"y":626,"score":44,"level":0},{"x":784,"y":626,"score":42,"level":0},{"x":789,"y":626,"score":46,"level":0},{"x":806,"y":626,"score":140,"level":0},{"x":958,"y":626,"score":67,"level":0},{"x":975,"y":626,"score":47,"level":0},{"x":1006,"y":626,"score":36,"level":0},{"x":1017,"y":626,"score":188,"level":0},{"x":1023,"y":626,"score":109,"level":0},{"x":1034,"y":626,"score":63,"level":0},{"x":1113,"y":626,"score":104,"level":0},{"x":1128,"y":626,"score":83,"level":0},{"x":1212,"y":626,"score":52,"level":0},{"x":1228,"y":626,"score":122,"level":0},{"x":1257,"y":626,"score":41,"level":0},{"x":1280,"y":626,"score":64,"level":0},{"x":1320,"y":626,"score":42,"level":0},{"x":1389,"y":626,"score":46,"level":0},{"x":1395,"y":626,"score":52,"level":0},{"x":1415,"y":626,"score":239,"level":0},{"x":1430,"y":626,"score":119,"level":0},{"x":1435,"y":626,"score":28,"level":0},{"x":1446,"y":626,"score":104,"level":0},{"x":1472,"y":626,"score":92,"level":0},{"x":520,"y":627,"score":45,"level":0},{"x":579,"y":627,"score":47,"level":0},{"x":861,"y":627,"score":74,"level":0},{"x":909,"y":627,"score":83,"level":0},{"x":960,"y":627,"score":41,"level":0},{"x":999,"y":627,"score":44,"level":0},{"x":1038,"y":627,"score":80,"level":0},{"x":1138,"y":627,"score":59,"level":0},{"x":1144,"y":627,"score":130,"level":0},{"x":1232,"y":627,"score":142,"level":0},{"x":1263,"y":627,"score":27,"level":0},{"x":1284,"y":627,"score":67,"level":0},{"x":1317,"y":627,"score":62,"level":0},{"x":1328,"y":627,"score":33,"level":0},{"x":1354,"y":627,"score":116,"level":0},{"x":1367,"y":627,"score":149,"level":0},{"x":1373,"y":627,"score":41,"level":0},{"x":1382,"y":627,"score":39,"level":0},{"x":1409,"y":627,"score":38,"level":0},{"x":1453,"y":627,"score":110,"level":0},{"x":1470,"y":627,"score":107,"level":0},{"x":1490,"y":627,"score":60,"level":0},{"x":387,"y":628,"score":35,"level":0},{"x":406,"y":628,"score":73,"level":0},{"x":437,"y":628,"score":118,"level":0},{"x":444,"y":628,"score":155,"level":0},{"x":470,"y":628,"score":28,"level":0},{"x":492,"y":628,"score":48,"level":0},{"x":531,"y":628,"score":31,"level":0},{"x":545,"y":628,"score":64,"level":0},{"x":638,"y":628,"score":52,"level":0},{"x":681,"y":628,"score":122,"level":0},{"x":701,"y":628,"score":32,"level":0},{"x":727,"y":628,"score":62,"level":0},{"x":837,"y":628,"score":37,"level":0},{"x":883,"y":628,"score":37,"level":0},{"x":917,"y":628,"score":55,"level":0},{"x":984,"y":628,"score":117,"level":0},{"x":994,"y":628,"score":46,"level":0},{"x":1108,"y":628,"score":141,"level":0},{"x":1132,"y":628,"score":102,"level":0},{"x":1155,"y":628,"score":73,"level":0},{"x":1179,"y":628,"score":36,"level":0},{"x":1198,"y":628,"score":50,"level":0},{"x":1222,"y":628,"score":79,"level":0},{"x":1251,"y":628,"score":63,"level":0},{"x":1260,"y":628,"score":65,"level":0},{"x":1267,"y":628,"score":29,"level":0},{"x":1340,"y":628,"score":82,"level":0},{"x":1358,"y":628,"score":204,"level":0},{"x":1440,"y":628,"score":64,"level":0},{"x":1455,"y":628,"score":60,"level":0},{"x":1462,"y":628,"score":29,"level":0},{"x":1480,"y":628,"score":108,"level":0},{"x":389,"y":629,"score":48,"level":0},{"x":496,"y":629,"score":58,"level":0},{"x":523,"y":629,"score":28,"level":0},{"x":568,"y":629,"score":46,"level":0},{"x":656,"y":629,"score":61,"level":0},{"x":763,"y":629,"score":64,"level":0},{"x":804,"y":629,"score":74,"level":0},{"x":807,"y":629,"score":31,"level":0},{"x":810,"y":629,"score":28,"level":0},{"x":835,"y":629,"score":42,"level":0},{"x":871,"y":629,"score":209,"level":0},{"x":889,"y":629,"score":215,"level":0},{"x":936,"y":629,"score":164,"level":0},{"x":970,"y":629,"score":31,"level":0},{"x":978,"y":629,"score":52,"level":0},{"x":1012,"y":629,"score":77,"level":0},{"x":1032,"y":629,"score":63,"level":0},{"x":1175,"y":629,"score":86,"level":0},{"x":1184,"y":629,"score":52,"level":0},{"x":1216,"y":629,"score":84,"level":0},{"x":1255,"y":629,"score":100,"level":0},{"x":1295,"y":629,"score":57,"level":0},{"x":1308,"y":629,"score":47,"level":0},{"x":451,"y":630,"score":108,"level":0},{"x":526,"y":630,"score":52,"level":0},{"x":531,"y":630,"score":51,"level":0},{"x":536,"y":630,"score":107,"level":0},{"x":687,"y":630,"score":70,"level":0},{"x":693,"y":630,"score":87,"level":0},{"x":779,"y":630,"score":26,"level":0},{"x":901,"y":630,"score":135,"level":0},{"x":943,"y":630,"score":60,"level":0},{"x":956,"y":630,"score":47,"level":0},{"x":1007,"y":630,"score":31,"level":0},{"x":1021,"y":630,"score":186,"level":0},{"x":1026,"y":630,"score":185,"level":0},{"x":1050,"y":630,"score":127,"level":0},{"x":1059,"y":630,"score":64,"level":0},{"x":1076,"y":630,"score":94,"level":0},{"x":1088,"y":630,"score":164,"level":0},{"x":1100,"y":630,"score":50,"level":0},{"x":1168,"y":630,"score":103,"level":0},{"x":1303,"y":630,"score":73,"level":0},{"x":1349,"y":630,"score":248,"level":0},{"x":1433,"y":630,"score":28,"level":0},{"x":402,"y":631,"score":98,"level":0},{"x":426,"y":631,"score":65,"level":0},{"x":486,"y":631,"score":34,"level":0},{"x":539,"y":631,"score":89,"level":0},{"x":618,"y":631,"score":72,"level":0},{"x":707,"y":631,"score":26,"level":0},{"x":755,"y":631,"score":63,"level":0},{"x":786,"y":631,"score":39,"level":0},{"x":803,"y":631,"score":108,"level":0},{"x":862,"y":631,"score":88,"level":0},{"x":875,"y":631,"score":49,"level":0},{"x":1110,"y":631,"score":82,"level":0},{"x":1113,"y":631,"score":35,"level":0},{"x":1200,"y":631,"score":62,"level":0},{"x":1216,"y":631,"score":90,"level":0},{"x":1226,"y":631,"score":40,"level":0},{"x":1243,"y":631,"score":98,"level":0},{"x":1263,"y":631,"score":61,"level":0},{"x":1265,"y":631,"score":56,"level":0},{"x":1276,"y":631,"score":122,"level":0},{"x":1404,"y":631,"score":99,"level":0},{"x":1436,"y":631,"score":32,"level":0},{"x":1464,"y":631,"score":35,"level":0},{"x":1484,"y":631,"score":196,"level":0},{"x":499,"y":632,"score":76,"level":0},{"x":509,"y":632,"score":68,"level":0},{"x":516,"y":632,"score":33,"level":0},{"x":568,"y":632,"score":38,"level":0},{"x":634,"y":632,"score":37,"level":0},{"x":671,"y":632,"score":91,"level":0},{"x":739,"y":632,"score":44,"level":0},{"x":993,"y":632,"score":34,"level":0},{"x":1063,"y":632,"score":74,"level":0},{"x":1081,"y":632,"score":126,"level":0},{"x":1163,"y":632,"score":38,"level":0},{"x":1195,"y":632,"score":39,"level":0},{"x":1210,"y":632,"score":72,"level":0},{"x":1251,"y":632,"score":91,"level":0},{"x":1318,"y":632,"score":61,"level":0},{"x":1327,"y":632,"score":197,"level":0},{"x":1339,"y":632,"score":90,"level":0},{"x":1373,"y":632,"score":64,"level":0},{"x":1376,"y":632,"score":62,"level":0},{"x":1444,"y":632,"score":77,"level":0},{"x":1449,"y":632,"score":28,"level":0},{"x":1453,"y":632,"score":28,"level":0},{"x":1477,"y":632,"score":149,"level":0},{"x":410,"y":633,"score":118,"level":0},{"x":437,"y":633,"score":36,"level":0},{"x":475,"y":633,"score":79,"level":0},{"x":484,"y":633,"score":62,"level":0},{"x":521,"y":633,"score":27,"level":0},{"x":653,"y":633,"score":62,"level":0},{"x":718,"y":633,"score":58,"level":0},{"x":724,"y":633,"score":112,"level":0},{"x":782,"y":633,"score":28,"level":0},{"x":933,"y":633,"score":53,"level":0},{"x":952,"y":633,"score":104,"level":0},{"x":985,"y":633,"score":44,"level":0},{"x":1000,"y":633,"score":41,"level":0},{"x":1009,"y":633,"score":28,"level":0},{"x":1125,"y":633,"score":198,"level":0},{"x":1133,"y":633,"score":36,"level":0},{"x":1145,"y":633,"score":58,"level":0},{"x":1179,"y":633,"score":85,"level":0},{"x":1379,"y":633,"score":61,"level":0},{"x":1434,"y":633,"score":35,"level":0},{"x":1457,"y":633,"score":45,"level":0},{"x":1460,"y":633,"score":31,"level":0},{"x":1470,"y":633,"score":139,"level":0},{"x":383,"y":634,"score":74,"level":0},{"x":397,"y":634,"score":100,"level":0},{"x":419,"y":634,"score":145,"level":0},{"x":444,"y":634,"score":170,"level":0},{"x":624,"y":634,"score":56,"level":0},{"x":640,"y":634,"score":69,"level":0},{"x":660,"y":634,"score":87,"level":0},{"x":662,"y":634,"score":92,"level":0},{"x":675,"y":634,"score":61,"level":0},{"x":680,"y":634,"score":82,"level":0},{"x":735,"y":634,"score":39,"level":0},{"x":776,"y":634,"score":47,"level":0},{"x":792,"y":634,"score":41,"level":0},{"x":809,"y":634,"score":74,"level":0},{"x":847,"y":634,"score":39,"level":0},{"x":916,"y":634,"score":125,"level":0},{"x":940,"y":634,"score":37,"level":0},{"x":966,"y":634,"score":74,"level":0},{"x":1005,"y":634,"score":32,"level":0},{"x":1015,"y":634,"score":61,"level":0},{"x":1072,"y":634,"score":40,"level":0},{"x":1092,"y":634,"score":99,"level":0},{"x":1147,"y":634,"score":60,"level":0},{"x":1183,"y":634,"score":58,"level":0},{"x":1366,"y":634,"score":68,"level":0},{"x":1372,"y":634,"score":45,"level":0},{"x":1390,"y":634,"score":40,"level":0},{"x":1409,"y":634,"score":26,"level":0},{"x":1442,"y":634,"score":63,"level":0},{"x":399,"y":635,"score":106,"level":0},{"x":405,"y":635,"score":50,"level":0},{"x":484,"y":635,"score":137,"level":0},{"x":502,"y":635,"score":40,"level":0},{"x":532,"y":635,"score":60,"level":0},{"x":630,"y":635,"score":26,"level":0},{"x":645,"y":635,"score":112,"level":0},{"x":654,"y":635,"score":39,"level":0},{"x":693,"y":635,"score":31,"level":0},{"x":765,"y":635,"score":74,"level":0},{"x":853,"y":635,"score":152,"level":0},{"x":875,"y":635,"score":44,"level":0},{"x":900,"y":635,"score":140,"level":0},{"x":946,"y":635,"score":101,"level":0},{"x":995,"y":635,"score":52,"level":0},{"x":1026,"y":635,"score":94,"level":0},{"x":1057,"y":635,"score":63,"level":0},{"x":1114,"y":635,"score":176,"level":0},{"x":1119,"y":635,"score":161,"level":0},{"x":1185,"y":635,"score":167,"level":0},{"x":1222,"y":635,"score":43,"level":0},{"x":1225,"y":635,"score":49,"level":0},{"x":1232,"y":635,"score":83,"level":0},{"x":1316,"y":635,"score":142,"level":0},{"x":1344,"y":635,"score":83,"level":0},{"x":1349,"y":635,"score":216,"level":0},{"x":1402,"y":635,"score":107,"level":0},{"x":380,"y":636,"score":79,"level":0},{"x":427,"y":636,"score":38,"level":0},{"x":429,"y":636,"score":29,"level":0},{"x":448,"y":636,"score":29,"level":0},{"x":587,"y":636,"score":39,"level":0},{"x":595,"y":636,"score":34,"level":0},{"x":640,"y":636,"score":76,"level":0},{"x":699,"y":636,"score":88,"level":0},{"x":704,"y":636,"score":157,"level":0},{"x":710,"y":636,"score":62,"level":0},{"x":715,"y":636,"score":46,"level":0},{"x":767,"y":636,"score":91,"level":0},{"x":773,"y":636,"score":45,"level":0},{"x":855,"y":636,"score":106,"level":0},{"x":867,"y":636,"score":50,"level":0},{"x":891,"y":636,"score":130,"level":0},{"x":925,"y":636,"score":92,"level":0},{"x":952,"y":636,"score":85,"level":0},{"x":989,"y":636,"score":114,"level":0},{"x":1003,"y":636,"score":66,"level":0},{"x":1040,"y":636,"score":113,"level":0},{"x":1049,"y":636,"score":122,"level":0},{"x":1087,"y":636,"score":85,"level":0},{"x":1239,"y":636,"score":57,"level":0},{"x":1254,"y":636,"score":77,"level":0},{"x":1266,"y":636,"score":62,"level":0},{"x":1276,"y":636,"score":193,"level":0},{"x":1307,"y":636,"score":322,"level":0},{"x":1404,"y":636,"score":39,"level":0},{"x":1409,"y":636,"score":42,"level":0},{"x":1424,"y":636,"score":56,"level":0},{"x":1441,"y":636,"score":67,"level":0},{"x":377,"y":637,"score":160,"level":0},{"x":389,"y":637,"score":27,"level":0},{"x":456,"y":637,"score":31,"level":0},{"x":507,"y":637,"score":178,"level":0},{"x":635,"y":637,"score":26,"level":0},{"x":671,"y":637,"score":36,"level":0},{"x":739,"y":637,"score":49,"level":0},{"x":741,"y":637,"score":43,"level":0},{"x":779,"y":637,"score":33,"level":0},{"x":799,"y":637,"score":86,"level":0},{"x":802,"y":637,"score":55,"level":0},{"x":814,"y":637,"score":51,"level":0},{"x":858,"y":637,"score":31,"level":0},{"x":960,"y":637,"score":95,"level":0},{"x":1032,"y":637,"score":199,"level":0},{"x":1063,"y":637,"score":105,"level":0},{"x":1070,"y":637,"score":33,"level":0},{"x":1072,"y":637,"score":50,"level":0},{"x":1101,"y":637,"score":28,"level":0},{"x":1139,"y":637,"score":34,"level":0},{"x":1176,"y":637,"score":69,"level":0},{"x":1214,"y":637,"score":29,"level":0},{"x":1219,"y":637,"score":58,"level":0},{"x":1244,"y":637,"score":128,"level":0},{"x":1252,"y":637,"score":120,"level":0},{"x":1282,"y":637,"score":125,"level":0},{"x":1321,"y":637,"score":30,"level":0},{"x":1327,"y":637,"score":33,"level":0},{"x":1334,"y":637,"score":84,"level":0},{"x":1421,"y":637,"score":68,"level":0},{"x":1445,"y":637,"score":42,"level":0},{"x":1450,"y":637,"score":36,"level":0},{"x":1464,"y":637,"score":96,"level":0},{"x":1476,"y":637,"score":163,"level":0},{"x":686,"y":638,"score":29,"level":0},{"x":761,"y":638,"score":26,"level":0},{"x":794,"y":638,"score":35,"level":0},{"x":823,"y":638,"score":29,"level":0},{"x":849,"y":638,"score":94,"level":0},{"x":878,"y":638,"score":111,"level":0},{"x":883,"y":638,"score":148,"level":0},{"x":999,"y":638,"score":46,"level":0},{"x":1079,"y":638,"score":79,"level":0},{"x":1106,"y":638,"score":26,"level":0},{"x":1129,"y":638,"score":39,"level":0},{"x":1154,"y":638,"score":89,"level":0},{"x":1186,"y":638,"score":47,"level":0},{"x":1203,"y":638,"score":105,"level":0},{"x":1295,"y":638,"score":96,"level":0},{"x":1360,"y":638,"score":39,"level":0},{"x":1368,"y":638,"score":56,"level":0},{"x":1370,"y":638,"score":34,"level":0},{"x":1378,"y":638,"score":116,"level":0},{"x":1396,"y":638,"score":137,"level":0},{"x":1425,"y":638,"score":57,"level":0},{"x":1431,"y":638,"score":78,"level":0},{"x":1436,"y":638,"score":55,"level":0},{"x":1460,"y":638,"score":126,"level":0},{"x":1467,"y":638,"score":67,"level":0},{"x":467,"y":639,"score":78,"level":0},{"x":645,"y":639,"score":47,"level":0},{"x":661,"y":639,"score":83,"level":0},{"x":667,"y":639,"score":55,"level":0},{"x":756,"y":639,"score":82,"level":0},{"x":929,"y":639,"score":63,"level":0},{"x":940,"y":639,"score":116,"level":0},{"x":956,"y":639,"score":56,"level":0},{"x":979,"y":639,"score":50,"level":0},{"x":1014,"y":639,"score":108,"level":0},{"x":1071,"y":639,"score":41,"level":0},{"x":1091,"y":639,"score":37,"level":0},{"x":1102,"y":639,"score":44,"level":0},{"x":1165,"y":639,"score":43,"level":0},{"x":1191,"y":639,"score":177,"level":0},{"x":1211,"y":639,"score":79,"level":0},{"x":1230,"y":639,"score":88,"level":0},{"x":1268,"y":639,"score":149,"level":0},{"x":1331,"y":639,"score":36,"level":0},{"x":1389,"y":639,"score":75,"level":0},{"x":1413,"y":639,"score":29,"level":0},{"x":1481,"y":639,"score":100,"level":0},{"x":403,"y":640,"score":58,"level":0},{"x":405,"y":640,"score":49,"level":0},{"x":425,"y":640,"score":36,"level":0},{"x":479,"y":640,"score":70,"level":0},{"x":528,"y":640,"score":28,"level":0},{"x":650,"y":640,"score":73,"level":0},{"x":678,"y":640,"score":66,"level":0},{"x":711,"y":640,"score":45,"level":0},{"x":719,"y":640,"score":72,"level":0},{"x":728,"y":640,"score":123,"level":0},{"x":830,"y":640,"score":97,"level":0},{"x":875,"y":640,"score":75,"level":0},{"x":900,"y":640,"score":81,"level":0},{"x":987,"y":640,"score":102,"level":0},{"x":1009,"y":640,"score":42,"level":0},{"x":1017,"y":640,"score":77,"level":0},{"x":1054,"y":640,"score":67,"level":0},{"x":1067,"y":640,"score":144,"level":0},{"x":1111,"y":640,"score":32,"level":0},{"x":1115,"y":640,"score":49,"level":0},{"x":1125,"y":640,"score":102,"level":0},{"x":1135,"y":640,"score":69,"level":0},{"x":1154,"y":640,"score":40,"level":0},{"x":1179,"y":640,"score":108,"level":0},{"x":1199,"y":640,"score":68,"level":0},{"x":1239,"y":640,"score":93,"level":0},{"x":1315,"y":640,"score":187,"level":0},{"x":1350,"y":640,"score":82,"level":0},{"x":1407,"y":640,"score":89,"level":0},{"x":1420,"y":640,"score":154,"level":0},{"x":1428,"y":640,"score":30,"level":0},{"x":1436,"y":640,"score":102,"level":0},{"x":1461,"y":640,"score":105,"level":0},{"x":382,"y":641,"score":66,"level":0},{"x":388,"y":641,"score":60,"level":0},{"x":430,"y":641,"score":67,"level":0},{"x":486,"y":641,"score":42,"level":0},{"x":695,"y":641,"score":109,"level":0},{"x":735,"y":641,"score":80,"level":0},{"x":766,"y":641,"score":106,"level":0},{"x":771,"y":641,"score":54,"level":0},{"x":795,"y":641,"score":51,"level":0},{"x":808,"y":641,"score":98,"level":0},{"x":892,"y":641,"score":83,"level":0},{"x":993,"y":641,"score":58,"level":0},{"x":1060,"y":641,"score":102,"level":0},{"x":1120,"y":641,"score":232,"level":0},{"x":1210,"y":641,"score":41,"level":0},{"x":1216,"y":641,"score":67,"level":0},{"x":1286,"y":641,"score":83,"level":0},{"x":1340,"y":641,"score":75,"level":0},{"x":1342,"y":641,"score":31,"level":0},{"x":1357,"y":641,"score":26,"level":0},{"x":1374,"y":641,"score":51,"level":0},{"x":1385,"y":641,"score":135,"level":0},{"x":1415,"y":641,"score":46,"level":0},{"x":1424,"y":641,"score":46,"level":0},{"x":1453,"y":641,"score":99,"level":0},{"x":1479,"y":641,"score":150,"level":0},{"x":400,"y":642,"score":44,"level":0},{"x":432,"y":642,"score":89,"level":0},{"x":531,"y":642,"score":31,"level":0},{"x":570,"y":642,"score":44,"level":0},{"x":631,"y":642,"score":30,"level":0},{"x":640,"y":642,"score":98,"level":0},{"x":671,"y":642,"score":154,"level":0},{"x":785,"y":642,"score":114,"level":0},{"x":803,"y":642,"score":39,"level":0},{"x":960,"y":642,"score":94,"level":0},{"x":965,"y":642,"score":61,"level":0},{"x":1024,"y":642,"score":40,"level":0},{"x":1029,"y":642,"score":73,"level":0},{"x":1043,"y":642,"score":66,"level":0},{"x":1050,"y":642,"score":122,"level":0},{"x":1083,"y":642,"score":32,"level":0},{"x":1096,"y":642,"score":46,"level":0},{"x":1163,"y":642,"score":33,"level":0},{"x":1257,"y":642,"score":118,"level":0},{"x":1262,"y":642,"score":108,"level":0},{"x":1298,"y":642,"score":72,"level":0},{"x":1304,"y":642,"score":158,"level":0},{"x":1325,"y":642,"score":188,"level":0},{"x":1330,"y":642,"score":39,"level":0},{"x":1471,"y":642,"score":80,"level":0},{"x":1474,"y":642,"score":55,"level":0},{"x":407,"y":643,"score":100,"level":0},{"x":450,"y":643,"score":69,"level":0},{"x":568,"y":643,"score":36,"level":0},{"x":587,"y":643,"score":51,"level":0},{"x":613,"y":643,"score":30,"level":0},{"x":655,"y":643,"score":59,"level":0},{"x":725,"y":643,"score":26,"level":0},{"x":771,"y":643,"score":34,"level":0},{"x":817,"y":643,"score":76,"level":0},{"x":883,"y":643,"score":109,"level":0},{"x":1000,"y":643,"score":29,"level":0},{"x":1022,"y":643,"score":79,"level":0},{"x":1089,"y":643,"score":38,"level":0},{"x":1129,"y":643,"score":26,"level":0},{"x":1134,"y":643,"score":130,"level":0},{"x":1243,"y":643,"score":104,"level":0},{"x":1271,"y":643,"score":122,"level":0},{"x":1281,"y":643,"score":81,"level":0},{"x":1319,"y":643,"score":114,"level":0},{"x":1423,"y":643,"score":50,"level":0},{"x":1429,"y":643,"score":36,"level":0},{"x":1453,"y":643,"score":74,"level":0},{"x":1465,"y":643,"score":30,"level":0},{"x":1490,"y":643,"score":72,"level":0},{"x":414,"y":644,"score":110,"level":0},{"x":504,"y":644,"score":96,"level":0},{"x":512,"y":644,"score":31,"level":0},{"x":574,"y":644,"score":34,"level":0},{"x":661,"y":644,"score":117,"level":0},{"x":687,"y":644,"score":123,"level":0},{"x":721,"y":644,"score":39,"level":0},{"x":750,"y":644,"score":51,"level":0},{"x":755,"y":644,"score":47,"level":0},{"x":787,"y":644,"score":118,"level":0},{"x":922,"y":644,"score":126,"level":0},{"x":932,"y":644,"score":96,"level":0},{"x":947,"y":644,"score":115,"level":0},{"x":949,"y":644,"score":31,"level":0},{"x":979,"y":644,"score":80,"level":0},{"x":993,"y":644,"score":27,"level":0},{"x":995,"y":644,"score":37,"level":0},{"x":1030,"y":644,"score":35,"level":0},{"x":1038,"y":644,"score":215,"level":0},{"x":1072,"y":644,"score":208,"level":0},{"x":1105,"y":644,"score":137,"level":0},{"x":1150,"y":644,"score":189,"level":0},{"x":1175,"y":644,"score":122,"level":0},{"x":1185,"y":644,"score":85,"level":0},{"x":1197,"y":644,"score":64,"level":0},{"x":1203,"y":644,"score":71,"level":0},{"x":1298,"y":644,"score":66,"level":0},{"x":1325,"y":644,"score":296,"level":0},{"x":1331,"y":644,"score":76,"level":0},{"x":1337,"y":644,"score":125,"level":0},{"x":1348,"y":644,"score":72,"level":0},{"x":1380,"y":644,"score":114,"level":0},{"x":1418,"y":644,"score":55,"level":0},{"x":1435,"y":644,"score":105,"level":0},{"x":1467,"y":644,"score":56,"level":0},{"x":678,"y":645,"score":76,"level":0},{"x":777,"y":645,"score":125,"level":0},{"x":861,"y":645,"score":48,"level":0},{"x":890,"y":645,"score":46,"level":0},{"x":913,"y":645,"score":210,"level":0},{"x":987,"y":645,"score":95,"level":0},{"x":1018,"y":645,"score":65,"level":0},{"x":1045,"y":645,"score":148,"level":0},{"x":1066,"y":645,"score":32,"level":0},{"x":1183,"y":645,"score":101,"level":0},{"x":1314,"y":645,"score":50,"level":0},{"x":1354,"y":645,"score":136,"level":0},{"x":1364,"y":645,"score":90,"level":0},{"x":1369,"y":645,"score":101,"level":0},{"x":395,"y":646,"score":54,"level":0},{"x":442,"y":646,"score":83,"level":0},{"x":602,"y":646,"score":28,"level":0},{"x":670,"y":646,"score":32,"level":0},{"x":729,"y":646,"score":67,"level":0},{"x":767,"y":646,"score":33,"level":0},{"x":779,"y":646,"score":138,"level":0},{"x":808,"y":646,"score":185,"level":0},{"x":855,"y":646,"score":49,"level":0},{"x":869,"y":646,"score":38,"level":0},{"x":901,"y":646,"score":34,"level":0},{"x":918,"y":646,"score":143,"level":0},{"x":1022,"y":646,"score":103,"level":0},{"x":1115,"y":646,"score":110,"level":0},{"x":1120,"y":646,"score":49,"level":0},{"x":1180,"y":646,"score":44,"level":0},{"x":1216,"y":646,"score":72,"level":0},{"x":1236,"y":646,"score":100,"level":0},{"x":1361,"y":646,"score":67,"level":0},{"x":1425,"y":646,"score":74,"level":0},{"x":1448,"y":646,"score":184,"level":0},{"x":1488,"y":646,"score":68,"level":0},{"x":400,"y":647,"score":134,"level":0},{"x":425,"y":647,"score":88,"level":0},{"x":482,"y":647,"score":52,"level":0},{"x":487,"y":647,"score":28,"level":0},{"x":641,"y":647,"score":62,"level":0},{"x":697,"y":647,"score":70,"level":0},{"x":761,"y":647,"score":138,"level":0},{"x":793,"y":647,"score":33,"level":0},{"x":802,"y":647,"score":180,"level":0},{"x":858,"y":647,"score":67,"level":0},{"x":952,"y":647,"score":77,"level":0},{"x":984,"y":647,"score":62,"level":0},{"x":1047,"y":647,"score":56,"level":0},{"x":1081,"y":647,"score":44,"level":0},{"x":1083,"y":647,"score":81,"level":0},{"x":1097,"y":647,"score":146,"level":0},{"x":1158,"y":647,"score":195,"level":0},{"x":1225,"y":647,"score":55,"level":0},{"x":1251,"y":647,"score":52,"level":0},{"x":1279,"y":647,"score":38,"level":0},{"x":1289,"y":647,"score":99,"level":0},{"x":1295,"y":647,"score":67,"level":0},{"x":1304,"y":647,"score":84,"level":0},{"x":1315,"y":647,"score":27,"level":0},{"x":1334,"y":647,"score":109,"level":0},{"x":1343,"y":647,"score":251,"level":0},{"x":1443,"y":647,"score":184,"level":0},{"x":389,"y":648,"score":90,"level":0},{"x":552,"y":648,"score":34,"level":0},{"x":572,"y":648,"score":37,"level":0},{"x":665,"y":648,"score":40,"level":0},{"x":686,"y":648,"score":46,"level":0},{"x":725,"y":648,"score":29,"level":0},{"x":755,"y":648,"score":51,"level":0},{"x":784,"y":648,"score":72,"level":0},{"x":846,"y":648,"score":152,"level":0},{"x":940,"y":648,"score":139,"level":0},{"x":964,"y":648,"score":118,"level":0},{"x":973,"y":648,"score":103,"level":0},{"x":1014,"y":648,"score":138,"level":0},{"x":1029,"y":648,"score":157,"level":0},{"x":1042,"y":648,"score":170,"level":0},{"x":1075,"y":648,"score":43,"level":0},{"x":1088,"y":648,"score":86,"level":0},{"x":1108,"y":648,"score":42,"level":0},{"x":1111,"y":648,"score":65,"level":0},{"x":1163,"y":648,"score":223,"level":0},{"x":1220,"y":648,"score":51,"level":0},{"x":1274,"y":648,"score":179,"level":0},{"x":1364,"y":648,"score":41,"level":0},{"x":1399,"y":648,"score":82,"level":0},{"x":1430,"y":648,"score":133,"level":0},{"x":1454,"y":648,"score":152,"level":0},{"x":1460,"y":648,"score":115,"level":0},{"x":476,"y":649,"score":61,"level":0},{"x":576,"y":649,"score":49,"level":0},{"x":626,"y":649,"score":45,"level":0},{"x":692,"y":649,"score":46,"level":0},{"x":706,"y":649,"score":43,"level":0},{"x":720,"y":649,"score":63,"level":0},{"x":823,"y":649,"score":62,"level":0},{"x":840,"y":649,"score":108,"level":0},{"x":906,"y":649,"score":96,"level":0},{"x":919,"y":649,"score":44,"level":0},{"x":1008,"y":649,"score":224,"level":0},{"x":1035,"y":649,"score":41,"level":0},{"x":1140,"y":649,"score":80,"level":0},{"x":1186,"y":649,"score":100,"level":0},{"x":1286,"y":649,"score":81,"level":0},{"x":1328,"y":649,"score":57,"level":0},{"x":1336,"y":649,"score":78,"level":0},{"x":1341,"y":649,"score":47,"level":0},{"x":1350,"y":649,"score":72,"level":0},{"x":1357,"y":649,"score":124,"level":0},{"x":1382,"y":649,"score":62,"level":0},{"x":1387,"y":649,"score":67,"level":0},{"x":1405,"y":649,"score":80,"level":0},{"x":1413,"y":649,"score":127,"level":0},{"x":1418,"y":649,"score":151,"level":0},{"x":1435,"y":649,"score":156,"level":0},{"x":414,"y":650,"score":129,"level":0},{"x":581,"y":650,"score":119,"level":0},{"x":642,"y":650,"score":46,"level":0},{"x":680,"y":650,"score":126,"level":0},{"x":743,"y":650,"score":53,"level":0},{"x":757,"y":650,"score":31,"level":0},{"x":837,"y":650,"score":94,"level":0},{"x":865,"y":650,"score":68,"level":0},{"x":896,"y":650,"score":95,"level":0},{"x":933,"y":650,"score":161,"level":0},{"x":939,"y":650,"score":58,"level":0},{"x":945,"y":650,"score":45,"level":0},{"x":1021,"y":650,"score":122,"level":0},{"x":1057,"y":650,"score":330,"level":0},{"x":1063,"y":650,"score":117,"level":0},{"x":1142,"y":650,"score":57,"level":0},{"x":1191,"y":650,"score":105,"level":0},{"x":1198,"y":650,"score":174,"level":0},{"x":1205,"y":650,"score":110,"level":0},{"x":1212,"y":650,"score":112,"level":0},{"x":1243,"y":650,"score":86,"level":0},{"x":1314,"y":650,"score":58,"level":0},{"x":1319,"y":650,"score":53,"level":0},{"x":1466,"y":650,"score":148,"level":0},{"x":572,"y":651,"score":64,"level":0},{"x":632,"y":651,"score":45,"level":0},{"x":637,"y":651,"score":40,"level":0},{"x":652,"y":651,"score":61,"level":0},{"x":768,"y":651,"score":54,"level":0},{"x":956,"y":651,"score":51,"level":0},{"x":969,"y":651,"score":90,"level":0},{"x":975,"y":651,"score":42,"level":0},{"x":1039,"y":651,"score":205,"level":0},{"x":1045,"y":651,"score":108,"level":0},{"x":1122,"y":651,"score":203,"level":0},{"x":1135,"y":651,"score":41,"level":0},{"x":1169,"y":651,"score":90,"level":0},{"x":1229,"y":651,"score":48,"level":0},{"x":1257,"y":651,"score":39,"level":0},{"x":1294,"y":651,"score":39,"level":0},{"x":1406,"y":651,"score":147,"level":0},{"x":1449,"y":651,"score":94,"level":0},{"x":1478,"y":651,"score":133,"level":0},{"x":1488,"y":651,"score":160,"level":0},{"x":377,"y":652,"score":136,"level":0},{"x":398,"y":652,"score":121,"level":0},{"x":434,"y":652,"score":67,"level":0},{"x":564,"y":652,"score":78,"level":0},{"x":647,"y":652,"score":29,"level":0},{"x":747,"y":652,"score":41,"level":0},{"x":824,"y":652,"score":37,"level":0},{"x":853,"y":652,"score":192,"level":0},{"x":923,"y":652,"score":141,"level":0},{"x":948,"y":652,"score":51,"level":0},{"x":1070,"y":652,"score":59,"level":0},{"x":1178,"y":652,"score":168,"level":0},{"x":1224,"y":652,"score":32,"level":0},{"x":1284,"y":652,"score":65,"level":0},{"x":1345,"y":652,"score":121,"level":0},{"x":1364,"y":652,"score":111,"level":0},{"x":1375,"y":652,"score":110,"level":0},{"x":1395,"y":652,"score":242,"level":0},{"x":1409,"y":652,"score":38,"level":0},{"x":1439,"y":652,"score":128,"level":0},{"x":1444,"y":652,"score":122,"level":0},{"x":536,"y":653,"score":28,"level":0},{"x":633,"y":653,"score":106,"level":0},{"x":664,"y":653,"score":34,"level":0},{"x":671,"y":653,"score":177,"level":0},{"x":683,"y":653,"score":76,"level":0},{"x":724,"y":653,"score":38,"level":0},{"x":734,"y":653,"score":97,"level":0},{"x":776,"y":653,"score":27,"level":0},{"x":779,"y":653,"score":28,"level":0},{"x":803,"y":653,"score":61,"level":0},{"x":833,"y":653,"score":60,"level":0},{"x":861,"y":653,"score":100,"level":0},{"x":874,"y":653,"score":88,"level":0},{"x":910,"y":653,"score":42,"level":0},{"x":988,"y":653,"score":98,"level":0},{"x":994,"y":653,"score":77,"level":0},{"x":1001,"y":653,"score":156,"level":0},{"x":1079,"y":653,"score":106,"level":0},{"x":1086,"y":653,"score":135,"level":0},{"x":1104,"y":653,"score":56,"level":0},{"x":1115,"y":653,"score":80,"level":0},{"x":1136,"y":653,"score":34,"level":0},{"x":1145,"y":653,"score":84,"level":0},{"x":1154,"y":653,"score":124,"level":0},{"x":1306,"y":653,"score":45,"level":0},{"x":1311,"y":653,"score":62,"level":0},{"x":1352,"y":653,"score":86,"level":0},{"x":1390,"y":653,"score":48,"level":0},{"x":1401,"y":653,"score":35,"level":0},{"x":1411,"y":653,"score":51,"level":0},{"x":1426,"y":653,"score":72,"level":0},{"x":1469,"y":653,"score":62,"level":0},{"x":382,"y":654,"score":58,"level":0},{"x":410,"y":654,"score":29,"level":0},{"x":575,"y":654,"score":56,"level":0},{"x":628,"y":654,"score":113,"level":0},{"x":643,"y":654,"score":46,"level":0},{"x":772,"y":654,"score":33,"level":0},{"x":877,"y":654,"score":27,"level":0},{"x":881,"y":654,"score":62,"level":0},{"x":887,"y":654,"score":181,"level":0},{"x":919,"y":654,"score":182,"level":0},{"x":925,"y":654,"score":191,"level":0},{"x":962,"y":654,"score":129,"level":0},{"x":1007,"y":654,"score":150,"level":0},{"x":1028,"y":654,"score":162,"level":0},{"x":1074,"y":654,"score":46,"level":0},{"x":1207,"y":654,"score":45,"level":0},{"x":1241,"y":654,"score":38,"level":0},{"x":1258,"y":654,"score":84,"level":0},{"x":1341,"y":654,"score":31,"level":0},{"x":1357,"y":654,"score":71,"level":0},{"x":1429,"y":654,"score":26,"level":0},{"x":1457,"y":654,"score":29,"level":0},{"x":393,"y":655,"score":29,"level":0},{"x":419,"y":655,"score":32,"level":0},{"x":439,"y":655,"score":34,"level":0},{"x":677,"y":655,"score":65,"level":0},{"x":712,"y":655,"score":78,"level":0},{"x":742,"y":655,"score":170,"level":0},{"x":763,"y":655,"score":112,"level":0},{"x":817,"y":655,"score":32,"level":0},{"x":845,"y":655,"score":46,"level":0},{"x":866,"y":655,"score":61,"level":0},{"x":906,"y":655,"score":60,"level":0},{"x":980,"y":655,"score":69,"level":0},{"x":1015,"y":655,"score":99,"level":0},{"x":1020,"y":655,"score":119,"level":0},{"x":1032,"y":655,"score":202,"level":0},{"x":1055,"y":655,"score":99,"level":0},{"x":1077,"y":655,"score":56,"level":0},{"x":1107,"y":655,"score":70,"level":0},{"x":1227,"y":655,"score":40,"level":0},{"x":1243,"y":655,"score":26,"level":0},{"x":1382,"y":655,"score":38,"level":0},{"x":1421,"y":655,"score":146,"level":0},{"x":1453,"y":655,"score":53,"level":0},{"x":1462,"y":655,"score":89,"level":0},{"x":1474,"y":655,"score":60,"level":0},{"x":474,"y":656,"score":61,"level":0},{"x":486,"y":656,"score":168,"level":0},{"x":491,"y":656,"score":103,"level":0},{"x":520,"y":656,"score":36,"level":0},{"x":529,"y":656,"score":43,"level":0},{"x":554,"y":656,"score":45,"level":0},{"x":562,"y":656,"score":34,"level":0},{"x":579,"y":656,"score":65,"level":0},{"x":644,"y":656,"score":59,"level":0},{"x":649,"y":656,"score":43,"level":0},{"x":720,"y":656,"score":87,"level":0},{"x":728,"y":656,"score":67,"level":0},{"x":757,"y":656,"score":155,"level":0},{"x":875,"y":656,"score":35,"level":0},{"x":1042,"y":656,"score":96,"level":0},{"x":1062,"y":656,"score":110,"level":0},{"x":1134,"y":656,"score":79,"level":0},{"x":1186,"y":656,"score":171,"level":0},{"x":1275,"y":656,"score":38,"level":0},{"x":1286,"y":656,"score":117,"level":0},{"x":1331,"y":656,"score":164,"level":0},{"x":1483,"y":656,"score":71,"level":0},{"x":396,"y":657,"score":78,"level":0},{"x":548,"y":657,"score":55,"level":0},{"x":653,"y":657,"score":30,"level":0},{"x":696,"y":657,"score":61,"level":0},{"x":799,"y":657,"score":49,"level":0},{"x":860,"y":657,"score":52,"level":0},{"x":879,"y":657,"score":33,"level":0},{"x":930,"y":657,"score":26,"level":0},{"x":948,"y":657,"score":172,"level":0},{"x":1128,"y":657,"score":120,"level":0},{"x":1202,"y":657,"score":94,"level":0},{"x":1268,"y":657,"score":90,"level":0},{"x":1325,"y":657,"score":197,"level":0},{"x":1345,"y":657,"score":121,"level":0},{"x":1440,"y":657,"score":44,"level":0},{"x":1453,"y":657,"score":57,"level":0},{"x":377,"y":658,"score":39,"level":0},{"x":435,"y":658,"score":36,"level":0},{"x":452,"y":658,"score":54,"level":0},{"x":457,"y":658,"score":28,"level":0},{"x":671,"y":658,"score":32,"level":0},{"x":683,"y":658,"score":42,"level":0},{"x":751,"y":658,"score":44,"level":0},{"x":776,"y":658,"score":39,"level":0},{"x":841,"y":658,"score":26,"level":0},{"x":853,"y":658,"score":63,"level":0},{"x":972,"y":658,"score":150,"level":0},{"x":1000,"y":658,"score":28,"level":0},{"x":1042,"y":658,"score":113,"level":0},{"x":1048,"y":658,"score":160,"level":0},{"x":1085,"y":658,"score":125,"level":0},{"x":1095,"y":658,"score":165,"level":0},{"x":1104,"y":658,"score":60,"level":0},{"x":1447,"y":658,"score":74,"level":0},{"x":1465,"y":658,"score":54,"level":0},{"x":1468,"y":658,"score":29,"level":0},{"x":390,"y":659,"score":38,"level":0},{"x":409,"y":659,"score":36,"level":0},{"x":501,"y":659,"score":38,"level":0},{"x":503,"y":659,"score":78,"level":0},{"x":632,"y":659,"score":85,"level":0},{"x":642,"y":659,"score":28,"level":0},{"x":650,"y":659,"score":50,"level":0},{"x":704,"y":659,"score":76,"level":0},{"x":727,"y":659,"score":63,"level":0},{"x":772,"y":659,"score":75,"level":0},{"x":814,"y":659,"score":88,"level":0},{"x":825,"y":659,"score":96,"level":0},{"x":906,"y":659,"score":81,"level":0},{"x":921,"y":659,"score":36,"level":0},{"x":926,"y":659,"score":47,"level":0},{"x":1125,"y":659,"score":107,"level":0},{"x":1146,"y":659,"score":134,"level":0},{"x":1153,"y":659,"score":38,"level":0},{"x":1157,"y":659,"score":40,"level":0},{"x":1189,"y":659,"score":90,"level":0},{"x":1207,"y":659,"score":35,"level":0},{"x":1212,"y":659,"score":67,"level":0},{"x":1243,"y":659,"score":141,"level":0},{"x":1247,"y":659,"score":108,"level":0},{"x":1298,"y":659,"score":85,"level":0},{"x":1304,"y":659,"score":199,"level":0},{"x":1316,"y":659,"score":115,"level":0},{"x":1360,"y":659,"score":40,"level":0},{"x":1363,"y":659,"score":36,"level":0},{"x":1434,"y":659,"score":45,"level":0},{"x":1442,"y":659,"score":79,"level":0},{"x":1459,"y":659,"score":34,"level":0},{"x":1479,"y":659,"score":41,"level":0},{"x":1490,"y":659,"score":52,"level":0},{"x":520,"y":660,"score":121,"level":0},{"x":538,"y":660,"score":54,"level":0},{"x":548,"y":660,"score":50,"level":0},{"x":550,"y":660,"score":46,"level":0},{"x":677,"y":660,"score":120,"level":0},{"x":696,"y":660,"score":51,"level":0},{"x":743,"y":660,"score":77,"level":0},{"x":745,"y":660,"score":72,"level":0},{"x":788,"y":660,"score":127,"level":0},{"x":800,"y":660,"score":30,"level":0},{"x":864,"y":660,"score":63,"level":0},{"x":868,"y":660,"score":128,"level":0},{"x":955,"y":660,"score":39,"level":0},{"x":977,"y":660,"score":160,"level":0},{"x":1021,"y":660,"score":38,"level":0},{"x":1057,"y":660,"score":62,"level":0},{"x":1166,"y":660,"score":49,"level":0},{"x":1170,"y":660,"score":29,"level":0},{"x":1172,"y":660,"score":43,"level":0},{"x":1230,"y":660,"score":45,"level":0},{"x":1321,"y":660,"score":154,"level":0},{"x":1393,"y":660,"score":126,"level":0},{"x":1399,"y":660,"score":186,"level":0},{"x":448,"y":661,"score":32,"level":0},{"x":476,"y":661,"score":45,"level":0},{"x":486,"y":661,"score":72,"level":0},{"x":554,"y":661,"score":54,"level":0},{"x":575,"y":661,"score":78,"level":0},{"x":624,"y":661,"score":38,"level":0},{"x":643,"y":661,"score":78,"level":0},{"x":661,"y":661,"score":163,"level":0},{"x":720,"y":661,"score":92,"level":0},{"x":795,"y":661,"score":77,"level":0},{"x":830,"y":661,"score":71,"level":0},{"x":876,"y":661,"score":93,"level":0},{"x":900,"y":661,"score":40,"level":0},{"x":934,"y":661,"score":43,"level":0},{"x":1032,"y":661,"score":33,"level":0},{"x":1044,"y":661,"score":124,"level":0},{"x":1074,"y":661,"score":45,"level":0},{"x":1103,"y":661,"score":31,"level":0},{"x":1134,"y":661,"score":101,"level":0},{"x":1139,"y":661,"score":125,"level":0},{"x":1223,"y":661,"score":122,"level":0},{"x":1237,"y":661,"score":118,"level":0},{"x":1266,"y":661,"score":26,"level":0},{"x":1280,"y":661,"score":81,"level":0},{"x":1309,"y":661,"score":50,"level":0},{"x":1352,"y":661,"score":105,"level":0},{"x":1363,"y":661,"score":34,"level":0},{"x":1371,"y":661,"score":59,"level":0},{"x":1376,"y":661,"score":204,"level":0},{"x":1385,"y":661,"score":90,"level":0},{"x":1410,"y":661,"score":80,"level":0},{"x":1423,"y":661,"score":100,"level":0},{"x":1474,"y":661,"score":108,"level":0},{"x":407,"y":662,"score":118,"level":0},{"x":426,"y":662,"score":28,"level":0},{"x":432,"y":662,"score":36,"level":0},{"x":495,"y":662,"score":105,"level":0},{"x":572,"y":662,"score":100,"level":0},{"x":599,"y":662,"score":34,"level":0},{"x":651,"y":662,"score":27,"level":0},{"x":655,"y":662,"score":55,"level":0},{"x":718,"y":662,"score":102,"level":0},{"x":885,"y":662,"score":120,"level":0},{"x":912,"y":662,"score":80,"level":0},{"x":945,"y":662,"score":60,"level":0},{"x":950,"y":662,"score":69,"level":0},{"x":965,"y":662,"score":115,"level":0},{"x":975,"y":662,"score":83,"level":0},{"x":985,"y":662,"score":97,"level":0},{"x":990,"y":662,"score":75,"level":0},{"x":1083,"y":662,"score":61,"level":0},{"x":1089,"y":662,"score":129,"level":0},{"x":1108,"y":662,"score":153,"level":0},{"x":1142,"y":662,"score":87,"level":0},{"x":1162,"y":662,"score":119,"level":0},{"x":1202,"y":662,"score":27,"level":0},{"x":1275,"y":662,"score":59,"level":0},{"x":1313,"y":662,"score":45,"level":0},{"x":1329,"y":662,"score":39,"level":0},{"x":1334,"y":662,"score":54,"level":0},{"x":1387,"y":662,"score":77,"level":0},{"x":1490,"y":662,"score":44,"level":0},{"x":377,"y":663,"score":37,"level":0},{"x":386,"y":663,"score":118,"level":0},{"x":445,"y":663,"score":26,"level":0},{"x":477,"y":663,"score":56,"level":0},{"x":646,"y":663,"score":46,"level":0},{"x":675,"y":663,"score":120,"level":0},{"x":710,"y":663,"score":93,"level":0},{"x":734,"y":663,"score":33,"level":0},{"x":762,"y":663,"score":46,"level":0},{"x":802,"y":663,"score":145,"level":0},{"x":810,"y":663,"score":157,"level":0},{"x":1079,"y":663,"score":36,"level":0},{"x":1177,"y":663,"score":43,"level":0},{"x":1255,"y":663,"score":68,"level":0},{"x":1300,"y":663,"score":182,"level":0},{"x":1339,"y":663,"score":229,"level":0},{"x":1346,"y":663,"score":127,"level":0},{"x":1357,"y":663,"score":43,"level":0},{"x":1482,"y":663,"score":144,"level":0},{"x":402,"y":664,"score":74,"level":0},{"x":414,"y":664,"score":167,"level":0},{"x":536,"y":664,"score":48,"level":0},{"x":562,"y":664,"score":75,"level":0},{"x":684,"y":664,"score":63,"level":0},{"x":697,"y":664,"score":70,"level":0},{"x":703,"y":664,"score":29,"level":0},{"x":738,"y":664,"score":48,"level":0},{"x":774,"y":664,"score":55,"level":0},{"x":839,"y":664,"score":60,"level":0},{"x":864,"y":664,"score":55,"level":0},{"x":890,"y":664,"score":79,"level":0},{"x":951,"y":664,"score":82,"level":0},{"x":981,"y":664,"score":27,"level":0},{"x":993,"y":664,"score":33,"level":0},{"x":1006,"y":664,"score":26,"level":0},{"x":1027,"y":664,"score":48,"level":0},{"x":1043,"y":664,"score":115,"level":0},{"x":1048,"y":664,"score":167,"level":0},{"x":1103,"y":664,"score":128,"level":0},{"x":1118,"y":664,"score":120,"level":0},{"x":1168,"y":664,"score":98,"level":0},{"x":1244,"y":664,"score":27,"level":0},{"x":1257,"y":664,"score":48,"level":0},{"x":1270,"y":664,"score":75,"level":0},{"x":1285,"y":664,"score":81,"level":0},{"x":1315,"y":664,"score":152,"level":0},{"x":1418,"y":664,"score":61,"level":0},{"x":1427,"y":664,"score":115,"level":0},{"x":1431,"y":664,"score":129,"level":0},{"x":1440,"y":664,"score":126,"level":0},{"x":1467,"y":664,"score":119,"level":0},{"x":1475,"y":664,"score":35,"level":0},{"x":1480,"y":664,"score":80,"level":0},{"x":518,"y":665,"score":45,"level":0},{"x":552,"y":665,"score":79,"level":0},{"x":558,"y":665,"score":46,"level":0},{"x":637,"y":665,"score":69,"level":0},{"x":655,"y":665,"score":103,"level":0},{"x":728,"y":665,"score":30,"level":0},{"x":849,"y":665,"score":64,"level":0},{"x":854,"y":665,"score":48,"level":0},{"x":964,"y":665,"score":105,"level":0},{"x":973,"y":665,"score":111,"level":0},{"x":1053,"y":665,"score":100,"level":0},{"x":1077,"y":665,"score":62,"level":0},{"x":1206,"y":665,"score":186,"level":0},{"x":1218,"y":665,"score":159,"level":0},{"x":1247,"y":665,"score":127,"level":0},{"x":1250,"y":665,"score":61,"level":0},{"x":1296,"y":665,"score":150,"level":0},{"x":1319,"y":665,"score":47,"level":0},{"x":1327,"y":665,"score":67,"level":0},{"x":1333,"y":665,"score":27,"level":0},{"x":1399,"y":665,"score":52,"level":0},{"x":1406,"y":665,"score":27,"level":0},{"x":378,"y":666,"score":68,"level":0},{"x":400,"y":666,"score":52,"level":0},{"x":425,"y":666,"score":78,"level":0},{"x":527,"y":666,"score":31,"level":0},{"x":562,"y":666,"score":28,"level":0},{"x":575,"y":666,"score":26,"level":0},{"x":708,"y":666,"score":162,"level":0},{"x":715,"y":666,"score":77,"level":0},{"x":720,"y":666,"score":95,"level":0},{"x":829,"y":666,"score":70,"level":0},{"x":861,"y":666,"score":32,"level":0},{"x":894,"y":666,"score":52,"level":0},{"x":915,"y":666,"score":123,"level":0},{"x":936,"y":666,"score":51,"level":0},{"x":957,"y":666,"score":142,"level":0},{"x":968,"y":666,"score":45,"level":0},{"x":981,"y":666,"score":84,"level":0},{"x":1015,"y":666,"score":193,"level":0},{"x":1035,"y":666,"score":80,"level":0},{"x":1091,"y":666,"score":67,"level":0},{"x":1138,"y":666,"score":138,"level":0},{"x":1190,"y":666,"score":52,"level":0},{"x":1200,"y":666,"score":60,"level":0},{"x":1274,"y":666,"score":48,"level":0},{"x":1279,"y":666,"score":62,"level":0},{"x":1393,"y":666,"score":67,"level":0},{"x":1423,"y":666,"score":98,"level":0},{"x":1436,"y":666,"score":94,"level":0},{"x":1443,"y":666,"score":191,"level":0},{"x":410,"y":667,"score":54,"level":0},{"x":555,"y":667,"score":69,"level":0},{"x":572,"y":667,"score":30,"level":0},{"x":632,"y":667,"score":56,"level":0},{"x":634,"y":667,"score":40,"level":0},{"x":663,"y":667,"score":57,"level":0},{"x":669,"y":667,"score":42,"level":0},{"x":679,"y":667,"score":168,"level":0},{"x":761,"y":667,"score":27,"level":0},{"x":765,"y":667,"score":42,"level":0},{"x":806,"y":667,"score":34,"level":0},{"x":847,"y":667,"score":34,"level":0},{"x":885,"y":667,"score":100,"level":0},{"x":929,"y":667,"score":95,"level":0},{"x":972,"y":667,"score":46,"level":0},{"x":1059,"y":667,"score":108,"level":0},{"x":1074,"y":667,"score":71,"level":0},{"x":1107,"y":667,"score":64,"level":0},{"x":1134,"y":667,"score":40,"level":0},{"x":1150,"y":667,"score":43,"level":0},{"x":1162,"y":667,"score":68,"level":0},{"x":1222,"y":667,"score":72,"level":0},{"x":1233,"y":667,"score":286,"level":0},{"x":1243,"y":667,"score":74,"level":0},{"x":1309,"y":667,"score":112,"level":0},{"x":1353,"y":667,"score":181,"level":0},{"x":1389,"y":667,"score":43,"level":0},{"x":1455,"y":667,"score":151,"level":0},{"x":1490,"y":667,"score":45,"level":0},{"x":418,"y":668,"score":40,"level":0},{"x":446,"y":668,"score":48,"level":0},{"x":496,"y":668,"score":48,"level":0},{"x":508,"y":668,"score":29,"level":0},{"x":546,"y":668,"score":28,"level":0},{"x":642,"y":668,"score":171,"level":0},{"x":700,"y":668,"score":33,"level":0},{"x":713,"y":668,"score":27,"level":0},{"x":718,"y":668,"score":61,"level":0},{"x":733,"y":668,"score":30,"level":0},{"x":809,"y":668,"score":29,"level":0},{"x":819,"y":668,"score":180,"level":0},{"x":834,"y":668,"score":107,"level":0},{"x":921,"y":668,"score":144,"level":0},{"x":998,"y":668,"score":84,"level":0},{"x":1025,"y":668,"score":156,"level":0},{"x":1035,"y":668,"score":69,"level":0},{"x":1038,"y":668,"score":27,"level":0},{"x":1072,"y":668,"score":33,"level":0},{"x":1097,"y":668,"score":96,"level":0},{"x":1153,"y":668,"score":27,"level":0},{"x":1183,"y":668,"score":119,"level":0},{"x":1216,"y":668,"score":88,"level":0},{"x":1226,"y":668,"score":96,"level":0},{"x":1240,"y":668,"score":48,"level":0},{"x":1253,"y":668,"score":111,"level":0},{"x":1361,"y":668,"score":69,"level":0},{"x":1450,"y":668,"score":86,"level":0},{"x":1461,"y":668,"score":88,"level":0},{"x":400,"y":669,"score":51,"level":0},{"x":484,"y":669,"score":81,"level":0},{"x":489,"y":669,"score":162,"level":0},{"x":652,"y":669,"score":39,"level":0},{"x":669,"y":669,"score":45,"level":0},{"x":688,"y":669,"score":117,"level":0},{"x":738,"y":669,"score":53,"level":0},{"x":749,"y":669,"score":108,"level":0},{"x":769,"y":669,"score":81,"level":0},{"x":774,"y":669,"score":107,"level":0},{"x":803,"y":669,"score":62,"level":0},{"x":836,"y":669,"score":123,"level":0},{"x":856,"y":669,"score":109,"level":0},{"x":864,"y":669,"score":122,"level":0},{"x":896,"y":669,"score":61,"level":0},{"x":907,"y":669,"score":206,"level":0},{"x":935,"y":669,"score":138,"level":0},{"x":984,"y":669,"score":45,"level":0},{"x":993,"y":669,"score":58,"level":0},{"x":1043,"y":669,"score":60,"level":0},{"x":1080,"y":669,"score":105,"level":0},{"x":1088,"y":669,"score":174,"level":0},{"x":1093,"y":669,"score":68,"level":0},{"x":1133,"y":669,"score":60,"level":0},{"x":1167,"y":669,"score":67,"level":0},{"x":1267,"y":669,"score":94,"level":0},{"x":1292,"y":669,"score":75,"level":0},{"x":1294,"y":669,"score":84,"level":0},{"x":1332,"y":669,"score":73,"level":0},{"x":1335,"y":669,"score":79,"level":0},{"x":1346,"y":669,"score":89,"level":0},{"x":1374,"y":669,"score":92,"level":0},{"x":1427,"y":669,"score":151,"level":0},{"x":390,"y":670,"score":48,"level":0},{"x":424,"y":670,"score":30,"level":0},{"x":538,"y":670,"score":40,"level":0},{"x":625,"y":670,"score":28,"level":0},{"x":631,"y":670,"score":52,"level":0},{"x":697,"y":670,"score":39,"level":0},{"x":787,"y":670,"score":52,"level":0},{"x":850,"y":670,"score":72,"level":0},{"x":870,"y":670,"score":61,"level":0},{"x":1010,"y":670,"score":32,"level":0},{"x":1019,"y":670,"score":97,"level":0},{"x":1031,"y":670,"score":46,"level":0},{"x":1049,"y":670,"score":60,"level":0},{"x":1066,"y":670,"score":73,"level":0},{"x":1211,"y":670,"score":75,"level":0},{"x":1246,"y":670,"score":47,"level":0},{"x":1272,"y":670,"score":83,"level":0},{"x":1312,"y":670,"score":46,"level":0},{"x":1338,"y":670,"score":63,"level":0},{"x":1366,"y":670,"score":62,"level":0},{"x":1423,"y":670,"score":56,"level":0},{"x":1468,"y":670,"score":153,"level":0},{"x":1475,"y":670,"score":111,"level":0},{"x":377,"y":671,"score":84,"level":0},{"x":519,"y":671,"score":35,"level":0},{"x":657,"y":671,"score":77,"level":0},{"x":682,"y":671,"score":82,"level":0},{"x":708,"y":671,"score":48,"level":0},{"x":754,"y":671,"score":108,"level":0},{"x":768,"y":671,"score":45,"level":0},{"x":781,"y":671,"score":53,"level":0},{"x":799,"y":671,"score":36,"level":0},{"x":804,"y":671,"score":70,"level":0},{"x":810,"y":671,"score":46,"level":0},{"x":840,"y":671,"score":55,"level":0},{"x":862,"y":671,"score":30,"level":0},{"x":873,"y":671,"score":74,"level":0},{"x":901,"y":671,"score":180,"level":0},{"x":917,"y":671,"score":45,"level":0},{"x":949,"y":671,"score":39,"level":0},{"x":977,"y":671,"score":98,"level":0},{"x":1092,"y":671,"score":70,"level":0},{"x":1105,"y":671,"score":161,"level":0},{"x":1121,"y":671,"score":70,"level":0},{"x":1189,"y":671,"score":187,"level":0},{"x":1275,"y":671,"score":54,"level":0},{"x":1313,"y":671,"score":30,"level":0},{"x":1350,"y":671,"score":81,"level":0},{"x":435,"y":672,"score":101,"level":0},{"x":452,"y":672,"score":135,"level":0},{"x":478,"y":672,"score":29,"level":0},{"x":541,"y":672,"score":46,"level":0},{"x":547,"y":672,"score":26,"level":0},{"x":565,"y":672,"score":51,"level":0},{"x":652,"y":672,"score":72,"level":0},{"x":663,"y":672,"score":57,"level":0},{"x":725,"y":672,"score":124,"level":0},{"x":730,"y":672,"score":70,"level":0},{"x":827,"y":672,"score":96,"level":0},{"x":884,"y":672,"score":61,"level":0},{"x":889,"y":672,"score":148,"level":0},{"x":932,"y":672,"score":61,"level":0},{"x":962,"y":672,"score":91,"level":0},{"x":982,"y":672,"score":120,"level":0},{"x":1012,"y":672,"score":49,"level":0},{"x":1058,"y":672,"score":161,"level":0},{"x":1130,"y":672,"score":32,"level":0},{"x":1206,"y":672,"score":180,"level":0},{"x":1240,"y":672,"score":123,"level":0},{"x":1251,"y":672,"score":72,"level":0},{"x":1300,"y":672,"score":175,"level":0},{"x":1306,"y":672,"score":81,"level":0},{"x":1336,"y":672,"score":81,"level":0},{"x":1380,"y":672,"score":163,"level":0},{"x":1386,"y":672,"score":166,"level":0},{"x":1403,"y":672,"score":89,"level":0},{"x":1422,"y":672,"score":66,"level":0},{"x":1455,"y":672,"score":73,"level":0},{"x":600,"y":673,"score":60,"level":0},{"x":686,"y":673,"score":26,"level":0},{"x":776,"y":673,"score":31,"level":0},{"x":817,"y":673,"score":38,"level":0},{"x":847,"y":673,"score":37,"level":0},{"x":940,"y":673,"score":27,"level":0},{"x":989,"y":673,"score":147,"level":0},{"x":998,"y":673,"score":55,"level":0},{"x":1040,"y":673,"score":43,"level":0},{"x":1053,"y":673,"score":226,"level":0},{"x":1099,"y":673,"score":52,"level":0},{"x":1126,"y":673,"score":37,"level":0},{"x":1168,"y":673,"score":68,"level":0},{"x":1180,"y":673,"score":68,"level":0},{"x":1223,"y":673,"score":119,"level":0},{"x":1284,"y":673,"score":263,"level":0},{"x":1291,"y":673,"score":75,"level":0},{"x":1317,"y":673,"score":59,"level":0},{"x":1352,"y":673,"score":61,"level":0},{"x":1417,"y":673,"score":32,"level":0},{"x":1437,"y":673,"score":177,"level":0},{"x":1444,"y":673,"score":136,"level":0},{"x":428,"y":674,"score":99,"level":0},{"x":444,"y":674,"score":46,"level":0},{"x":551,"y":674,"score":36,"level":0},{"x":692,"y":674,"score":106,"level":0},{"x":718,"y":674,"score":88,"level":0},{"x":740,"y":674,"score":70,"level":0},{"x":759,"y":674,"score":40,"level":0},{"x":764,"y":674,"score":164,"level":0},{"x":769,"y":674,"score":64,"level":0},{"x":784,"y":674,"score":31,"level":0},{"x":806,"y":674,"score":34,"level":0},{"x":855,"y":674,"score":114,"level":0},{"x":931,"y":674,"score":45,"level":0},{"x":956,"y":674,"score":124,"level":0},{"x":1035,"y":674,"score":65,"level":0},{"x":1111,"y":674,"score":232,"level":0},{"x":1131,"y":674,"score":85,"level":0},{"x":1149,"y":674,"score":37,"level":0},{"x":1195,"y":674,"score":110,"level":0},{"x":1256,"y":674,"score":44,"level":0},{"x":1264,"y":674,"score":206,"level":0},{"x":1327,"y":674,"score":48,"level":0},{"x":1364,"y":674,"score":37,"level":0},{"x":452,"y":675,"score":72,"level":0},{"x":561,"y":675,"score":65,"level":0},{"x":577,"y":675,"score":40,"level":0},{"x":637,"y":675,"score":26,"level":0},{"x":643,"y":675,"score":76,"level":0},{"x":648,"y":675,"score":38,"level":0},{"x":681,"y":675,"score":120,"level":0},{"x":820,"y":675,"score":122,"level":0},{"x":878,"y":675,"score":35,"level":0},{"x":908,"y":675,"score":100,"level":0},{"x":936,"y":675,"score":41,"level":0},{"x":984,"y":675,"score":78,"level":0},{"x":1019,"y":675,"score":33,"level":0},{"x":1028,"y":675,"score":99,"level":0},{"x":1088,"y":675,"score":118,"level":0},{"x":1095,"y":675,"score":54,"level":0},{"x":1118,"y":675,"score":42,"level":0},{"x":1322,"y":675,"score":158,"level":0},{"x":1342,"y":675,"score":53,"level":0},{"x":1358,"y":675,"score":52,"level":0},{"x":1434,"y":675,"score":154,"level":0},{"x":545,"y":676,"score":41,"level":0},{"x":565,"y":676,"score":100,"level":0},{"x":834,"y":676,"score":47,"level":0},{"x":840,"y":676,"score":114,"level":0},{"x":864,"y":676,"score":43,"level":0},{"x":949,"y":676,"score":143,"level":0},{"x":955,"y":676,"score":123,"level":0},{"x":968,"y":676,"score":106,"level":0},{"x":1067,"y":676,"score":143,"level":0},{"x":1104,"y":676,"score":85,"level":0},{"x":1133,"y":676,"score":75,"level":0},{"x":1189,"y":676,"score":72,"level":0},{"x":1252,"y":676,"score":40,"level":0},{"x":1274,"y":676,"score":131,"level":0},{"x":1288,"y":676,"score":203,"level":0},{"x":1336,"y":676,"score":186,"level":0},{"x":1392,"y":676,"score":35,"level":0},{"x":1397,"y":676,"score":116,"level":0},{"x":1411,"y":676,"score":34,"level":0},{"x":1453,"y":676,"score":96,"level":0},{"x":1459,"y":676,"score":27,"level":0},{"x":387,"y":677,"score":49,"level":0},{"x":419,"y":677,"score":30,"level":0},{"x":423,"y":677,"score":122,"level":0},{"x":430,"y":677,"score":54,"level":0},{"x":436,"y":677,"score":87,"level":0},{"x":477,"y":677,"score":66,"level":0},{"x":484,"y":677,"score":55,"level":0},{"x":517,"y":677,"score":139,"level":0},{"x":531,"y":677,"score":52,"level":0},{"x":563,"y":677,"score":104,"level":0},{"x":606,"y":677,"score":29,"level":0},{"x":700,"y":677,"score":54,"level":0},{"x":725,"y":677,"score":119,"level":0},{"x":730,"y":677,"score":116,"level":0},{"x":898,"y":677,"score":138,"level":0},{"x":904,"y":677,"score":81,"level":0},{"x":917,"y":677,"score":142,"level":0},{"x":922,"y":677,"score":98,"level":0},{"x":977,"y":677,"score":85,"level":0},{"x":1018,"y":677,"score":33,"level":0},{"x":1061,"y":677,"score":54,"level":0},{"x":1137,"y":677,"score":116,"level":0},{"x":1175,"y":677,"score":167,"level":0},{"x":1218,"y":677,"score":122,"level":0},{"x":1243,"y":677,"score":236,"level":0},{"x":1309,"y":677,"score":55,"level":0},{"x":1385,"y":677,"score":162,"level":0},{"x":1413,"y":677,"score":46,"level":0},{"x":394,"y":678,"score":58,"level":0},{"x":443,"y":678,"score":112,"level":0},{"x":498,"y":678,"score":31,"level":0},{"x":533,"y":678,"score":62,"level":0},{"x":601,"y":678,"score":55,"level":0},{"x":634,"y":678,"score":60,"level":0},{"x":744,"y":678,"score":95,"level":0},{"x":792,"y":678,"score":40,"level":0},{"x":827,"y":678,"score":114,"level":0},{"x":830,"y":678,"score":76,"level":0},{"x":884,"y":678,"score":222,"level":0},{"x":889,"y":678,"score":95,"level":0},{"x":927,"y":678,"score":90,"level":0},{"x":967,"y":678,"score":162,"level":0},{"x":985,"y":678,"score":111,"level":0},{"x":1011,"y":678,"score":130,"level":0},{"x":1024,"y":678,"score":157,"level":0},{"x":1033,"y":678,"score":46,"level":0},{"x":1127,"y":678,"score":88,"level":0},{"x":1169,"y":678,"score":136,"level":0},{"x":1180,"y":678,"score":142,"level":0},{"x":1203,"y":678,"score":194,"level":0},{"x":1237,"y":678,"score":96,"level":0},{"x":1299,"y":678,"score":115,"level":0},{"x":1353,"y":678,"score":88,"level":0},{"x":1397,"y":678,"score":128,"level":0},{"x":1407,"y":678,"score":27,"level":0},{"x":1436,"y":678,"score":115,"level":0},{"x":1466,"y":678,"score":206,"level":0},{"x":1480,"y":678,"score":186,"level":0},{"x":1490,"y":678,"score":57,"level":0},{"x":377,"y":679,"score":60,"level":0},{"x":477,"y":679,"score":61,"level":0},{"x":525,"y":679,"score":78,"level":0},{"x":580,"y":679,"score":32,"level":0},{"x":662,"y":679,"score":37,"level":0},{"x":711,"y":679,"score":234,"level":0},{"x":717,"y":679,"score":73,"level":0},{"x":775,"y":679,"score":136,"level":0},{"x":805,"y":679,"score":79,"level":0},{"x":811,"y":679,"score":69,"level":0},{"x":877,"y":679,"score":35,"level":0},{"x":979,"y":679,"score":33,"level":0},{"x":1000,"y":679,"score":26,"level":0},{"x":1080,"y":679,"score":29,"level":0},{"x":1085,"y":679,"score":76,"level":0},{"x":1213,"y":679,"score":251,"level":0},{"x":1260,"y":679,"score":131,"level":0},{"x":1265,"y":679,"score":32,"level":0},{"x":1269,"y":679,"score":66,"level":0},{"x":1280,"y":679,"score":126,"level":0},{"x":1286,"y":679,"score":44,"level":0},{"x":1420,"y":679,"score":126,"level":0},{"x":1429,"y":679,"score":210,"level":0},{"x":380,"y":680,"score":57,"level":0},{"x":542,"y":680,"score":70,"level":0},{"x":643,"y":680,"score":65,"level":0},{"x":680,"y":680,"score":84,"level":0},{"x":708,"y":680,"score":145,"level":0},{"x":728,"y":680,"score":36,"level":0},{"x":784,"y":680,"score":119,"level":0},{"x":908,"y":680,"score":35,"level":0},{"x":940,"y":680,"score":84,"level":0},{"x":962,"y":680,"score":31,"level":0},{"x":1016,"y":680,"score":80,"level":0},{"x":1070,"y":680,"score":41,"level":0},{"x":1095,"y":680,"score":66,"level":0},{"x":1104,"y":680,"score":74,"level":0},{"x":1111,"y":680,"score":47,"level":0},{"x":1124,"y":680,"score":128,"level":0},{"x":1134,"y":680,"score":73,"level":0},{"x":1148,"y":680,"score":74,"level":0},{"x":1191,"y":680,"score":72,"level":0},{"x":1311,"y":680,"score":56,"level":0},{"x":1345,"y":680,"score":110,"level":0},{"x":1350,"y":680,"score":108,"level":0},{"x":1374,"y":680,"score":159,"level":0},{"x":1409,"y":680,"score":54,"level":0},{"x":383,"y":681,"score":80,"level":0},{"x":411,"y":681,"score":118,"level":0},{"x":558,"y":681,"score":98,"level":0},{"x":735,"y":681,"score":154,"level":0},{"x":740,"y":681,"score":57,"level":0},{"x":760,"y":681,"score":29,"level":0},{"x":879,"y":681,"score":61,"level":0},{"x":956,"y":681,"score":45,"level":0},{"x":995,"y":681,"score":189,"level":0},{"x":1006,"y":681,"score":146,"level":0},{"x":1075,"y":681,"score":232,"level":0},{"x":1085,"y":681,"score":107,"level":0},{"x":1143,"y":681,"score":124,"level":0},{"x":1292,"y":681,"score":157,"level":0},{"x":1323,"y":681,"score":78,"level":0},{"x":1421,"y":681,"score":58,"level":0},{"x":1460,"y":681,"score":89,"level":0},{"x":1487,"y":681,"score":125,"level":0},{"x":418,"y":682,"score":30,"level":0},{"x":449,"y":682,"score":178,"level":0},{"x":494,"y":682,"score":74,"level":0},{"x":506,"y":682,"score":151,"level":0},{"x":513,"y":682,"score":138,"level":0},{"x":577,"y":682,"score":109,"level":0},{"x":638,"y":682,"score":35,"level":0},{"x":697,"y":682,"score":58,"level":0},{"x":762,"y":682,"score":52,"level":0},{"x":868,"y":682,"score":52,"level":0},{"x":915,"y":682,"score":54,"level":0},{"x":935,"y":682,"score":37,"level":0},{"x":945,"y":682,"score":43,"level":0},{"x":974,"y":682,"score":96,"level":0},{"x":976,"y":682,"score":82,"level":0},{"x":998,"y":682,"score":83,"level":0},{"x":1064,"y":682,"score":81,"level":0},{"x":1112,"y":682,"score":30,"level":0},{"x":1120,"y":682,"score":184,"level":0},{"x":1137,"y":682,"score":65,"level":0},{"x":1199,"y":682,"score":37,"level":0},{"x":1223,"y":682,"score":212,"level":0},{"x":1242,"y":682,"score":49,"level":0},{"x":1251,"y":682,"score":216,"level":0},{"x":1276,"y":682,"score":64,"level":0},{"x":1282,"y":682,"score":89,"level":0},{"x":1312,"y":682,"score":83,"level":0},{"x":1358,"y":682,"score":30,"level":0},{"x":1363,"y":682,"score":192,"level":0},{"x":1393,"y":682,"score":44,"level":0},{"x":1434,"y":682,"score":39,"level":0},{"x":1453,"y":682,"score":159,"level":0},{"x":422,"y":683,"score":91,"level":0},{"x":484,"y":683,"score":56,"level":0},{"x":516,"y":683,"score":197,"level":0},{"x":522,"y":683,"score":47,"level":0},{"x":543,"y":683,"score":39,"level":0},{"x":564,"y":683,"score":45,"level":0},{"x":597,"y":683,"score":40,"level":0},{"x":621,"y":683,"score":32,"level":0},{"x":702,"y":683,"score":57,"level":0},{"x":739,"y":683,"score":69,"level":0},{"x":745,"y":683,"score":85,"level":0},{"x":752,"y":683,"score":161,"level":0},{"x":827,"y":683,"score":72,"level":0},{"x":831,"y":683,"score":47,"level":0},{"x":841,"y":683,"score":77,"level":0},{"x":852,"y":683,"score":184,"level":0},{"x":858,"y":683,"score":66,"level":0},{"x":924,"y":683,"score":152,"level":0},{"x":970,"y":683,"score":48,"level":0},{"x":1011,"y":683,"score":34,"level":0},{"x":1062,"y":683,"score":64,"level":0},{"x":1103,"y":683,"score":44,"level":0},{"x":1166,"y":683,"score":56,"level":0},{"x":1169,"y":683,"score":65,"level":0},{"x":1183,"y":683,"score":84,"level":0},{"x":1230,"y":683,"score":158,"level":0},{"x":1237,"y":683,"score":47,"level":0},{"x":1298,"y":683,"score":244,"level":0},{"x":1337,"y":683,"score":185,"level":0},{"x":1407,"y":683,"score":117,"level":0},{"x":1415,"y":683,"score":85,"level":0},{"x":1470,"y":683,"score":220,"level":0},{"x":1480,"y":683,"score":167,"level":0},{"x":441,"y":684,"score":53,"level":0},{"x":444,"y":684,"score":48,"level":0},{"x":553,"y":684,"score":63,"level":0},{"x":569,"y":684,"score":38,"level":0},{"x":804,"y":684,"score":66,"level":0},{"x":888,"y":684,"score":28,"level":0},{"x":898,"y":684,"score":86,"level":0},{"x":912,"y":684,"score":136,"level":0},{"x":950,"y":684,"score":52,"level":0},{"x":1019,"y":684,"score":30,"level":0},{"x":1044,"y":684,"score":125,"level":0},{"x":1051,"y":684,"score":108,"level":0},{"x":1093,"y":684,"score":83,"level":0},{"x":1128,"y":684,"score":262,"level":0},{"x":1134,"y":684,"score":56,"level":0},{"x":1207,"y":684,"score":32,"level":0},{"x":1212,"y":684,"score":120,"level":0},{"x":1245,"y":684,"score":73,"level":0},{"x":1257,"y":684,"score":227,"level":0},{"x":1350,"y":684,"score":119,"level":0},{"x":1355,"y":684,"score":186,"level":0},{"x":1383,"y":684,"score":38,"level":0},{"x":1392,"y":684,"score":84,"level":0},{"x":1419,"y":684,"score":64,"level":0},{"x":1428,"y":684,"score":133,"level":0},{"x":1442,"y":684,"score":114,"level":0},{"x":397,"y":685,"score":100,"level":0},{"x":474,"y":685,"score":91,"level":0},{"x":499,"y":685,"score":32,"level":0},{"x":622,"y":685,"score":63,"level":0},{"x":664,"y":685,"score":68,"level":0},{"x":679,"y":685,"score":42,"level":0},{"x":710,"y":685,"score":49,"level":0},{"x":722,"y":685,"score":58,"level":0},{"x":764,"y":685,"score":161,"level":0},{"x":784,"y":685,"score":314,"level":0},{"x":835,"y":685,"score":117,"level":0},{"x":841,"y":685,"score":52,"level":0},{"x":877,"y":685,"score":78,"level":0},{"x":932,"y":685,"score":27,"level":0},{"x":1179,"y":685,"score":171,"level":0},{"x":1206,"y":685,"score":88,"level":0},{"x":1307,"y":685,"score":26,"level":0},{"x":1369,"y":685,"score":42,"level":0},{"x":1373,"y":685,"score":51,"level":0},{"x":1408,"y":685,"score":196,"level":0},{"x":413,"y":686,"score":79,"level":0},{"x":419,"y":686,"score":30,"level":0},{"x":424,"y":686,"score":139,"level":0},{"x":480,"y":686,"score":62,"level":0},{"x":544,"y":686,"score":41,"level":0},{"x":602,"y":686,"score":165,"level":0},{"x":773,"y":686,"score":26,"level":0},{"x":921,"y":686,"score":40,"level":0},{"x":993,"y":686,"score":41,"level":0},{"x":1059,"y":686,"score":45,"level":0},{"x":1100,"y":686,"score":68,"level":0},{"x":1174,"y":686,"score":67,"level":0},{"x":1187,"y":686,"score":77,"level":0},{"x":1242,"y":686,"score":38,"level":0},{"x":1323,"y":686,"score":88,"level":0},{"x":1346,"y":686,"score":83,"level":0},{"x":1421,"y":686,"score":92,"level":0},{"x":406,"y":687,"score":98,"level":0},{"x":447,"y":687,"score":101,"level":0},{"x":510,"y":687,"score":64,"level":0},{"x":558,"y":687,"score":48,"level":0},{"x":573,"y":687,"score":153,"level":0},{"x":635,"y":687,"score":61,"level":0},{"x":715,"y":687,"score":44,"level":0},{"x":830,"y":687,"score":45,"level":0},{"x":917,"y":687,"score":54,"level":0},{"x":1072,"y":687,"score":85,"level":0},{"x":1086,"y":687,"score":52,"level":0},{"x":1091,"y":687,"score":60,"level":0},{"x":1138,"y":687,"score":203,"level":0},{"x":1288,"y":687,"score":53,"level":0},{"x":1297,"y":687,"score":56,"level":0},{"x":1302,"y":687,"score":113,"level":0},{"x":1366,"y":687,"score":142,"level":0},{"x":1448,"y":687,"score":102,"level":0},{"x":412,"y":688,"score":120,"level":0},{"x":565,"y":688,"score":62,"level":0},{"x":645,"y":688,"score":80,"level":0},{"x":700,"y":688,"score":74,"level":0},{"x":740,"y":688,"score":160,"level":0},{"x":746,"y":688,"score":107,"level":0},{"x":799,"y":688,"score":42,"level":0},{"x":814,"y":688,"score":48,"level":0},{"x":866,"y":688,"score":91,"level":0},{"x":900,"y":688,"score":27,"level":0},{"x":909,"y":688,"score":103,"level":0},{"x":926,"y":688,"score":34,"level":0},{"x":985,"y":688,"score":89,"level":0},{"x":1063,"y":688,"score":49,"level":0},{"x":1105,"y":688,"score":31,"level":0},{"x":1133,"y":688,"score":129,"level":0},{"x":1154,"y":688,"score":85,"level":0},{"x":1164,"y":688,"score":26,"level":0},{"x":1171,"y":688,"score":108,"level":0},{"x":1230,"y":688,"score":26,"level":0},{"x":1333,"y":688,"score":30,"level":0},{"x":1397,"y":688,"score":38,"level":0},{"x":1427,"y":688,"score":243,"level":0},{"x":1462,"y":688,"score":30,"level":0},{"x":1466,"y":688,"score":37,"level":0},{"x":1472,"y":688,"score":39,"level":0},{"x":1485,"y":688,"score":72,"level":0},{"x":1490,"y":688,"score":119,"level":0},{"x":434,"y":689,"score":74,"level":0},{"x":497,"y":689,"score":91,"level":0},{"x":534,"y":689,"score":122,"level":0},{"x":556,"y":689,"score":118,"level":0},{"x":702,"y":689,"score":83,"level":0},{"x":808,"y":689,"score":34,"level":0},{"x":855,"y":689,"score":140,"level":0},{"x":1045,"y":689,"score":142,"level":0},{"x":1103,"y":689,"score":45,"level":0},{"x":1128,"y":689,"score":46,"level":0},{"x":1151,"y":689,"score":205,"level":0},{"x":1194,"y":689,"score":35,"level":0},{"x":1204,"y":689,"score":51,"level":0},{"x":1238,"y":689,"score":140,"level":0},{"x":1241,"y":689,"score":57,"level":0},{"x":1244,"y":689,"score":54,"level":0},{"x":1284,"y":689,"score":135,"level":0},{"x":1293,"y":689,"score":121,"level":0},{"x":1314,"y":689,"score":52,"level":0},{"x":1342,"y":689,"score":106,"level":0},{"x":1355,"y":689,"score":212,"level":0},{"x":1361,"y":689,"score":67,"level":0},{"x":1411,"y":689,"score":105,"level":0},{"x":1434,"y":689,"score":172,"level":0},{"x":1449,"y":689,"score":108,"level":0},{"x":377,"y":690,"score":130,"level":0},{"x":396,"y":690,"score":180,"level":0},{"x":627,"y":690,"score":26,"level":0},{"x":651,"y":690,"score":50,"level":0},{"x":710,"y":690,"score":51,"level":0},{"x":765,"y":690,"score":165,"level":0},{"x":931,"y":690,"score":252,"level":0},{"x":957,"y":690,"score":56,"level":0},{"x":1077,"y":690,"score":123,"level":0},{"x":1145,"y":690,"score":176,"level":0},{"x":1273,"y":690,"score":119,"level":0},{"x":1337,"y":690,"score":188,"level":0},{"x":1373,"y":690,"score":54,"level":0},{"x":1395,"y":690,"score":58,"level":0},{"x":1401,"y":690,"score":67,"level":0},{"x":1414,"y":690,"score":96,"level":0},{"x":1442,"y":690,"score":79,"level":0},{"x":402,"y":691,"score":117,"level":0},{"x":454,"y":691,"score":102,"level":0},{"x":488,"y":691,"score":32,"level":0},{"x":619,"y":691,"score":26,"level":0},{"x":663,"y":691,"score":107,"level":0},{"x":684,"y":691,"score":30,"level":0},{"x":759,"y":691,"score":46,"level":0},{"x":822,"y":691,"score":62,"level":0},{"x":834,"y":691,"score":80,"level":0},{"x":884,"y":691,"score":34,"level":0},{"x":896,"y":691,"score":54,"level":0},{"x":916,"y":691,"score":30,"level":0},{"x":923,"y":691,"score":170,"level":0},{"x":1008,"y":691,"score":88,"level":0},{"x":1054,"y":691,"score":58,"level":0},{"x":1059,"y":691,"score":149,"level":0},{"x":1100,"y":691,"score":98,"level":0},{"x":1115,"y":691,"score":50,"level":0},{"x":1121,"y":691,"score":64,"level":0},{"x":1158,"y":691,"score":26,"level":0},{"x":1198,"y":691,"score":40,"level":0},{"x":1279,"y":691,"score":155,"level":0},{"x":1314,"y":691,"score":72,"level":0},{"x":1325,"y":691,"score":224,"level":0},{"x":1420,"y":691,"score":39,"level":0},{"x":381,"y":692,"score":60,"level":0},{"x":434,"y":692,"score":110,"level":0},{"x":445,"y":692,"score":88,"level":0},{"x":490,"y":692,"score":65,"level":0},{"x":501,"y":692,"score":57,"level":0},{"x":514,"y":692,"score":28,"level":0},{"x":522,"y":692,"score":49,"level":0},{"x":550,"y":692,"score":83,"level":0},{"x":565,"y":692,"score":31,"level":0},{"x":609,"y":692,"score":26,"level":0},{"x":744,"y":692,"score":38,"level":0},{"x":776,"y":692,"score":75,"level":0},{"x":816,"y":692,"score":95,"level":0},{"x":841,"y":692,"score":78,"level":0},{"x":851,"y":692,"score":59,"level":0},{"x":1109,"y":692,"score":102,"level":0},{"x":1126,"y":692,"score":76,"level":0},{"x":1163,"y":692,"score":40,"level":0},{"x":1175,"y":692,"score":38,"level":0},{"x":1219,"y":692,"score":138,"level":0},{"x":1244,"y":692,"score":36,"level":0},{"x":1289,"y":692,"score":137,"level":0},{"x":1389,"y":692,"score":100,"level":0},{"x":1425,"y":692,"score":45,"level":0},{"x":1468,"y":692,"score":32,"level":0},{"x":1473,"y":692,"score":37,"level":0},{"x":387,"y":693,"score":103,"level":0},{"x":483,"y":693,"score":63,"level":0},{"x":541,"y":693,"score":32,"level":0},{"x":653,"y":693,"score":83,"level":0},{"x":738,"y":693,"score":69,"level":0},{"x":771,"y":693,"score":72,"level":0},{"x":826,"y":693,"score":26,"level":0},{"x":848,"y":693,"score":80,"level":0},{"x":1133,"y":693,"score":136,"level":0},{"x":1139,"y":693,"score":162,"level":0},{"x":1170,"y":693,"score":36,"level":0},{"x":1193,"y":693,"score":53,"level":0},{"x":1225,"y":693,"score":129,"level":0},{"x":1232,"y":693,"score":101,"level":0},{"x":1302,"y":693,"score":86,"level":0},{"x":1331,"y":693,"score":80,"level":0},{"x":1345,"y":693,"score":99,"level":0},{"x":1360,"y":693,"score":87,"level":0},{"x":1454,"y":693,"score":164,"level":0},{"x":431,"y":694,"score":81,"level":0},{"x":468,"y":694,"score":31,"level":0},{"x":504,"y":694,"score":38,"level":0},{"x":518,"y":694,"score":31,"level":0},{"x":602,"y":694,"score":30,"level":0},{"x":716,"y":694,"score":42,"level":0},{"x":725,"y":694,"score":59,"level":0},{"x":789,"y":694,"score":37,"level":0},{"x":796,"y":694,"score":117,"level":0},{"x":887,"y":694,"score":42,"level":0},{"x":902,"y":694,"score":26,"level":0},{"x":994,"y":694,"score":31,"level":0},{"x":1015,"y":694,"score":32,"level":0},{"x":1046,"y":694,"score":105,"level":0},{"x":1078,"y":694,"score":112,"level":0},{"x":1155,"y":694,"score":45,"level":0},{"x":1160,"y":694,"score":63,"level":0},{"x":1183,"y":694,"score":130,"level":0},{"x":1206,"y":694,"score":102,"level":0},{"x":1243,"y":694,"score":81,"level":0},{"x":1249,"y":694,"score":49,"level":0},{"x":1283,"y":694,"score":58,"level":0},{"x":1286,"y":694,"score":92,"level":0},{"x":1340,"y":694,"score":79,"level":0},{"x":1428,"y":694,"score":100,"level":0},{"x":1481,"y":694,"score":76,"level":0},{"x":447,"y":695,"score":130,"level":0},{"x":481,"y":695,"score":103,"level":0},{"x":572,"y":695,"score":31,"level":0},{"x":658,"y":695,"score":125,"level":0},{"x":695,"y":695,"score":53,"level":0},{"x":810,"y":695,"score":141,"level":0},{"x":816,"y":695,"score":126,"level":0},{"x":821,"y":695,"score":40,"level":0},{"x":951,"y":695,"score":33,"level":0},{"x":978,"y":695,"score":179,"level":0},{"x":1029,"y":695,"score":69,"level":0},{"x":1152,"y":695,"score":68,"level":0},{"x":1201,"y":695,"score":32,"level":0},{"x":1213,"y":695,"score":29,"level":0},{"x":1305,"y":695,"score":74,"level":0},{"x":1354,"y":695,"score":152,"level":0},{"x":1366,"y":695,"score":37,"level":0},{"x":1372,"y":695,"score":30,"level":0},{"x":1413,"y":695,"score":203,"level":0},{"x":1438,"y":695,"score":31,"level":0},{"x":1448,"y":695,"score":71,"level":0},{"x":1471,"y":695,"score":65,"level":0},{"x":1487,"y":695,"score":96,"level":0},{"x":402,"y":696,"score":70,"level":0},{"x":429,"y":696,"score":48,"level":0},{"x":453,"y":696,"score":136,"level":0},{"x":498,"y":696,"score":62,"level":0},{"x":525,"y":696,"score":175,"level":0},{"x":552,"y":696,"score":38,"level":0},{"x":755,"y":696,"score":102,"level":0},{"x":831,"y":696,"score":76,"level":0},{"x":913,"y":696,"score":37,"level":0},{"x":917,"y":696,"score":39,"level":0},{"x":962,"y":696,"score":175,"level":0},{"x":967,"y":696,"score":128,"level":0},{"x":989,"y":696,"score":82,"level":0},{"x":1086,"y":696,"score":115,"level":0},{"x":1108,"y":696,"score":107,"level":0},{"x":1113,"y":696,"score":27,"level":0},{"x":1121,"y":696,"score":45,"level":0},{"x":1189,"y":696,"score":158,"level":0},{"x":1261,"y":696,"score":43,"level":0},{"x":1335,"y":696,"score":323,"level":0},{"x":1341,"y":696,"score":75,"level":0},{"x":1361,"y":696,"score":48,"level":0},{"x":1420,"y":696,"score":100,"level":0},{"x":520,"y":697,"score":83,"level":0},{"x":651,"y":697,"score":118,"level":0},{"x":656,"y":697,"score":80,"level":0},{"x":663,"y":697,"score":44,"level":0},{"x":776,"y":697,"score":48,"level":0},{"x":840,"y":697,"score":32,"level":0},{"x":923,"y":697,"score":126,"level":0},{"x":997,"y":697,"score":54,"level":0},{"x":1021,"y":697,"score":30,"level":0},{"x":1162,"y":697,"score":184,"level":0},{"x":1177,"y":697,"score":170,"level":0},{"x":1219,"y":697,"score":47,"level":0},{"x":1268,"y":697,"score":42,"level":0},{"x":1289,"y":697,"score":101,"level":0},{"x":1329,"y":697,"score":136,"level":0},{"x":1387,"y":697,"score":41,"level":0},{"x":1397,"y":697,"score":102,"level":0},{"x":1457,"y":697,"score":43,"level":0},{"x":407,"y":698,"score":60,"level":0},{"x":547,"y":698,"score":39,"level":0},{"x":565,"y":698,"score":187,"level":0},{"x":930,"y":698,"score":139,"level":0},{"x":941,"y":698,"score":27,"level":0},{"x":1040,"y":698,"score":62,"level":0},{"x":1064,"y":698,"score":129,"level":0},{"x":1136,"y":698,"score":81,"level":0},{"x":1156,"y":698,"score":113,"level":0},{"x":1209,"y":698,"score":43,"level":0},{"x":1232,"y":698,"score":29,"level":0},{"x":1313,"y":698,"score":66,"level":0},{"x":1403,"y":698,"score":291,"level":0},{"x":1490,"y":698,"score":42,"level":0},{"x":387,"y":699,"score":30,"level":0},{"x":537,"y":699,"score":73,"level":0},{"x":559,"y":699,"score":50,"level":0},{"x":664,"y":699,"score":37,"level":0},{"x":681,"y":699,"score":39,"level":0},{"x":800,"y":699,"score":48,"level":0},{"x":843,"y":699,"score":26,"level":0},{"x":845,"y":699,"score":39,"level":0},{"x":886,"y":699,"score":60,"level":0},{"x":1042,"y":699,"score":61,"level":0},{"x":1046,"y":699,"score":96,"level":0},{"x":1058,"y":699,"score":52,"level":0},{"x":1099,"y":699,"score":86,"level":0},{"x":1145,"y":699,"score":50,"level":0},{"x":1234,"y":699,"score":60,"level":0},{"x":1244,"y":699,"score":87,"level":0},{"x":1252,"y":699,"score":29,"level":0},{"x":1257,"y":699,"score":33,"level":0},{"x":1340,"y":699,"score":38,"level":0},{"x":1414,"y":699,"score":147,"level":0},{"x":1430,"y":699,"score":156,"level":0},{"x":1463,"y":699,"score":83,"level":0},{"x":1474,"y":699,"score":52,"level":0},{"x":1480,"y":699,"score":242,"level":0},{"x":399,"y":700,"score":58,"level":0},{"x":437,"y":700,"score":90,"level":0},{"x":446,"y":700,"score":36,"level":0},{"x":481,"y":700,"score":29,"level":0},{"x":495,"y":700,"score":88,"level":0},{"x":521,"y":700,"score":44,"level":0},{"x":564,"y":700,"score":169,"level":0},{"x":622,"y":700,"score":28,"level":0},{"x":643,"y":700,"score":30,"level":0},{"x":736,"y":700,"score":28,"level":0},{"x":767,"y":700,"score":138,"level":0},{"x":785,"y":700,"score":80,"level":0},{"x":833,"y":700,"score":38,"level":0},{"x":852,"y":700,"score":59,"level":0},{"x":937,"y":700,"score":71,"level":0},{"x":978,"y":700,"score":225,"level":0},{"x":991,"y":700,"score":35,"level":0},{"x":1004,"y":700,"score":56,"level":0},{"x":1012,"y":700,"score":57,"level":0},{"x":1052,"y":700,"score":33,"level":0},{"x":1062,"y":700,"score":65,"level":0},{"x":1129,"y":700,"score":97,"level":0},{"x":1147,"y":700,"score":54,"level":0},{"x":1156,"y":700,"score":103,"level":0},{"x":1167,"y":700,"score":31,"level":0},{"x":1240,"y":700,"score":69,"level":0},{"x":1269,"y":700,"score":36,"level":0},{"x":1296,"y":700,"score":52,"level":0},{"x":1354,"y":700,"score":146,"level":0},{"x":1364,"y":700,"score":105,"level":0},{"x":1424,"y":700,"score":37,"level":0},{"x":1438,"y":700,"score":36,"level":0},{"x":1452,"y":700,"score":121,"level":0},{"x":428,"y":701,"score":54,"level":0},{"x":500,"y":701,"score":38,"level":0},{"x":531,"y":701,"score":73,"level":0},{"x":667,"y":701,"score":41,"level":0},{"x":730,"y":701,"score":34,"level":0},{"x":765,"y":701,"score":90,"level":0},{"x":814,"y":701,"score":70,"level":0},{"x":912,"y":701,"score":55,"level":0},{"x":917,"y":701,"score":107,"level":0},{"x":926,"y":701,"score":78,"level":0},{"x":931,"y":701,"score":156,"level":0},{"x":968,"y":701,"score":150,"level":0},{"x":1015,"y":701,"score":66,"level":0},{"x":1107,"y":701,"score":38,"level":0},{"x":1121,"y":701,"score":35,"level":0},{"x":1172,"y":701,"score":96,"level":0},{"x":1205,"y":701,"score":44,"level":0},{"x":1214,"y":701,"score":92,"level":0},{"x":1257,"y":701,"score":48,"level":0},{"x":1370,"y":701,"score":229,"level":0},{"x":1393,"y":701,"score":48,"level":0},{"x":1399,"y":701,"score":37,"level":0},{"x":1486,"y":701,"score":45,"level":0},{"x":417,"y":702,"score":54,"level":0},{"x":453,"y":702,"score":34,"level":0},{"x":468,"y":702,"score":52,"level":0},{"x":487,"y":702,"score":74,"level":0},{"x":541,"y":702,"score":176,"level":0},{"x":659,"y":702,"score":46,"level":0},{"x":835,"y":702,"score":29,"level":0},{"x":875,"y":702,"score":66,"level":0},{"x":1021,"y":702,"score":68,"level":0},{"x":1081,"y":702,"score":59,"level":0},{"x":1087,"y":702,"score":225,"level":0},{"x":1094,"y":702,"score":229,"level":0},{"x":1199,"y":702,"score":38,"level":0},{"x":1250,"y":702,"score":37,"level":0},{"x":1334,"y":702,"score":30,"level":0},{"x":1344,"y":702,"score":44,"level":0},{"x":1348,"y":702,"score":85,"level":0},{"x":1375,"y":702,"score":94,"level":0},{"x":409,"y":703,"score":87,"level":0},{"x":603,"y":703,"score":36,"level":0},{"x":669,"y":703,"score":33,"level":0},{"x":707,"y":703,"score":54,"level":0},{"x":897,"y":703,"score":177,"level":0},{"x":905,"y":703,"score":40,"level":0},{"x":941,"y":703,"score":162,"level":0},{"x":984,"y":703,"score":53,"level":0},{"x":994,"y":703,"score":44,"level":0},{"x":1058,"y":703,"score":149,"level":0},{"x":1063,"y":703,"score":28,"level":0},{"x":1193,"y":703,"score":42,"level":0},{"x":1210,"y":703,"score":148,"level":0},{"x":1217,"y":703,"score":64,"level":0},{"x":1263,"y":703,"score":42,"level":0},{"x":1316,"y":703,"score":76,"level":0},{"x":1385,"y":703,"score":74,"level":0},{"x":1403,"y":703,"score":92,"level":0},{"x":1418,"y":703,"score":277,"level":0},{"x":1458,"y":703,"score":58,"level":0},{"x":460,"y":704,"score":35,"level":0},{"x":524,"y":704,"score":40,"level":0},{"x":597,"y":704,"score":190,"level":0},{"x":682,"y":704,"score":49,"level":0},{"x":801,"y":704,"score":61,"level":0},{"x":865,"y":704,"score":89,"level":0},{"x":1003,"y":704,"score":62,"level":0},{"x":1014,"y":704,"score":31,"level":0},{"x":1052,"y":704,"score":42,"level":0},{"x":1160,"y":704,"score":82,"level":0},{"x":1204,"y":704,"score":54,"level":0},{"x":1225,"y":704,"score":36,"level":0},{"x":1244,"y":704,"score":86,"level":0},{"x":1292,"y":704,"score":52,"level":0},{"x":1325,"y":704,"score":32,"level":0},{"x":1361,"y":704,"score":57,"level":0},{"x":1380,"y":704,"score":83,"level":0},{"x":1411,"y":704,"score":169,"level":0},{"x":1430,"y":704,"score":63,"level":0},{"x":1445,"y":704,"score":88,"level":0},{"x":1464,"y":704,"score":86,"level":0},{"x":447,"y":705,"score":104,"level":0},{"x":546,"y":705,"score":31,"level":0},{"x":568,"y":705,"score":42,"level":0},{"x":604,"y":705,"score":36,"level":0},{"x":704,"y":705,"score":44,"level":0},{"x":754,"y":705,"score":68,"level":0},{"x":784,"y":705,"score":37,"level":0},{"x":797,"y":705,"score":29,"level":0},{"x":828,"y":705,"score":41,"level":0},{"x":888,"y":705,"score":90,"level":0},{"x":928,"y":705,"score":57,"level":0},{"x":934,"y":705,"score":48,"level":0},{"x":968,"y":705,"score":64,"level":0},{"x":1009,"y":705,"score":130,"level":0},{"x":1044,"y":705,"score":35,"level":0},{"x":1130,"y":705,"score":83,"level":0},{"x":1137,"y":705,"score":97,"level":0},{"x":1260,"y":705,"score":27,"level":0},{"x":1309,"y":705,"score":148,"level":0},{"x":1340,"y":705,"score":80,"level":0},{"x":1375,"y":705,"score":54,"level":0},{"x":1389,"y":705,"score":72,"level":0},{"x":1471,"y":705,"score":179,"level":0},{"x":1478,"y":705,"score":105,"level":0},{"x":377,"y":706,"score":187,"level":0},{"x":392,"y":706,"score":38,"level":0},{"x":433,"y":706,"score":48,"level":0},{"x":494,"y":706,"score":113,"level":0},{"x":563,"y":706,"score":82,"level":0},{"x":731,"y":706,"score":36,"level":0},{"x":745,"y":706,"score":49,"level":0},{"x":791,"y":706,"score":134,"level":0},{"x":811,"y":706,"score":32,"level":0},{"x":1016,"y":706,"score":89,"level":0},{"x":1069,"y":706,"score":208,"level":0},{"x":1101,"y":706,"score":72,"level":0},{"x":1118,"y":706,"score":172,"level":0},{"x":1169,"y":706,"score":159,"level":0},{"x":1183,"y":706,"score":94,"level":0},{"x":1231,"y":706,"score":162,"level":0},{"x":1280,"y":706,"score":32,"level":0},{"x":1319,"y":706,"score":31,"level":0},{"x":1452,"y":706,"score":136,"level":0},{"x":1485,"y":706,"score":162,"level":0},{"x":388,"y":707,"score":56,"level":0},{"x":426,"y":707,"score":171,"level":0},{"x":488,"y":707,"score":84,"level":0},{"x":501,"y":707,"score":105,"level":0},{"x":658,"y":707,"score":140,"level":0},{"x":818,"y":707,"score":66,"level":0},{"x":851,"y":707,"score":31,"level":0},{"x":874,"y":707,"score":71,"level":0},{"x":882,"y":707,"score":75,"level":0},{"x":969,"y":707,"score":136,"level":0},{"x":983,"y":707,"score":71,"level":0},{"x":1027,"y":707,"score":107,"level":0},{"x":1106,"y":707,"score":100,"level":0},{"x":1123,"y":707,"score":42,"level":0},{"x":1297,"y":707,"score":143,"level":0},{"x":1312,"y":707,"score":85,"level":0},{"x":1331,"y":707,"score":48,"level":0},{"x":1340,"y":707,"score":84,"level":0},{"x":1354,"y":707,"score":114,"level":0},{"x":1369,"y":707,"score":116,"level":0},{"x":1375,"y":707,"score":146,"level":0},{"x":1384,"y":707,"score":47,"level":0},{"x":1397,"y":707,"score":92,"level":0},{"x":415,"y":708,"score":33,"level":0},{"x":432,"y":708,"score":28,"level":0},{"x":439,"y":708,"score":61,"level":0},{"x":483,"y":708,"score":40,"level":0},{"x":569,"y":708,"score":33,"level":0},{"x":608,"y":708,"score":46,"level":0},{"x":644,"y":708,"score":41,"level":0},{"x":670,"y":708,"score":148,"level":0},{"x":736,"y":708,"score":135,"level":0},{"x":743,"y":708,"score":83,"level":0},{"x":763,"y":708,"score":178,"level":0},{"x":901,"y":708,"score":62,"level":0},{"x":938,"y":708,"score":30,"level":0},{"x":959,"y":708,"score":155,"level":0},{"x":987,"y":708,"score":82,"level":0},{"x":999,"y":708,"score":38,"level":0},{"x":1021,"y":708,"score":120,"level":0},{"x":1032,"y":708,"score":121,"level":0},{"x":1089,"y":708,"score":96,"level":0},{"x":1095,"y":708,"score":131,"level":0},{"x":1140,"y":708,"score":108,"level":0},{"x":1178,"y":708,"score":71,"level":0},{"x":1203,"y":708,"score":79,"level":0},{"x":1215,"y":708,"score":212,"level":0},{"x":1285,"y":708,"score":169,"level":0},{"x":1436,"y":708,"score":114,"level":0},{"x":445,"y":709,"score":122,"level":0},{"x":455,"y":709,"score":99,"level":0},{"x":518,"y":709,"score":48,"level":0},{"x":694,"y":709,"score":55,"level":0},{"x":769,"y":709,"score":112,"level":0},{"x":774,"y":709,"score":54,"level":0},{"x":781,"y":709,"score":110,"level":0},{"x":795,"y":709,"score":30,"level":0},{"x":810,"y":709,"score":132,"level":0},{"x":862,"y":709,"score":69,"level":0},{"x":951,"y":709,"score":62,"level":0},{"x":994,"y":709,"score":202,"level":0},{"x":1004,"y":709,"score":91,"level":0},{"x":1015,"y":709,"score":76,"level":0},{"x":1038,"y":709,"score":168,"level":0},{"x":1162,"y":709,"score":56,"level":0},{"x":1229,"y":709,"score":66,"level":0},{"x":1336,"y":709,"score":34,"level":0},{"x":1354,"y":709,"score":185,"level":0},{"x":1375,"y":709,"score":63,"level":0},{"x":1380,"y":709,"score":63,"level":0},{"x":1389,"y":709,"score":104,"level":0},{"x":1425,"y":709,"score":192,"level":0},{"x":1431,"y":709,"score":74,"level":0},{"x":411,"y":710,"score":72,"level":0},{"x":418,"y":710,"score":59,"level":0},{"x":473,"y":710,"score":26,"level":0},{"x":571,"y":710,"score":26,"level":0},{"x":598,"y":710,"score":60,"level":0},{"x":679,"y":710,"score":80,"level":0},{"x":721,"y":710,"score":88,"level":0},{"x":755,"y":710,"score":127,"level":0},{"x":800,"y":710,"score":94,"level":0},{"x":835,"y":710,"score":40,"level":0},{"x":888,"y":710,"score":172,"level":0},{"x":933,"y":710,"score":42,"level":0},{"x":1053,"y":710,"score":149,"level":0},{"x":1134,"y":710,"score":64,"level":0},{"x":1139,"y":710,"score":71,"level":0},{"x":1197,"y":710,"score":38,"level":0},{"x":1206,"y":710,"score":41,"level":0},{"x":1234,"y":710,"score":71,"level":0},{"x":1451,"y":710,"score":46,"level":0},{"x":1470,"y":710,"score":43,"level":0},{"x":381,"y":711,"score":40,"level":0},{"x":396,"y":711,"score":55,"level":0},{"x":421,"y":711,"score":34,"level":0},{"x":439,"y":711,"score":27,"level":0},{"x":504,"y":711,"score":34,"level":0},{"x":527,"y":711,"score":44,"level":0},{"x":529,"y":711,"score":76,"level":0},{"x":552,"y":711,"score":63,"level":0},{"x":558,"y":711,"score":55,"level":0},{"x":563,"y":711,"score":50,"level":0},{"x":596,"y":711,"score":37,"level":0},{"x":675,"y":711,"score":73,"level":0},{"x":1072,"y":711,"score":37,"level":0},{"x":1144,"y":711,"score":46,"level":0},{"x":1210,"y":711,"score":52,"level":0},{"x":1275,"y":711,"score":100,"level":0},{"x":1318,"y":711,"score":228,"level":0},{"x":1323,"y":711,"score":28,"level":0},{"x":1337,"y":711,"score":134,"level":0},{"x":1363,"y":711,"score":62,"level":0},{"x":1390,"y":711,"score":94,"level":0},{"x":1395,"y":711,"score":180,"level":0},{"x":1404,"y":711,"score":39,"level":0},{"x":1443,"y":711,"score":202,"level":0},{"x":1477,"y":711,"score":217,"level":0},{"x":1485,"y":711,"score":121,"level":0},{"x":426,"y":712,"score":42,"level":0},{"x":468,"y":712,"score":31,"level":0},{"x":539,"y":712,"score":44,"level":0},{"x":637,"y":712,"score":42,"level":0},{"x":640,"y":712,"score":37,"level":0},{"x":666,"y":712,"score":87,"level":0},{"x":671,"y":712,"score":80,"level":0},{"x":691,"y":712,"score":46,"level":0},{"x":796,"y":712,"score":103,"level":0},{"x":875,"y":712,"score":149,"level":0},{"x":915,"y":712,"score":99,"level":0},{"x":935,"y":712,"score":39,"level":0},{"x":963,"y":712,"score":62,"level":0},{"x":970,"y":712,"score":116,"level":0},{"x":981,"y":712,"score":63,"level":0},{"x":989,"y":712,"score":39,"level":0},{"x":1047,"y":712,"score":88,"level":0},{"x":1117,"y":712,"score":190,"level":0},{"x":1123,"y":712,"score":66,"level":0},{"x":1131,"y":712,"score":66,"level":0},{"x":1297,"y":712,"score":71,"level":0},{"x":1347,"y":712,"score":83,"level":0},{"x":403,"y":713,"score":63,"level":0},{"x":422,"y":713,"score":33,"level":0},{"x":431,"y":713,"score":68,"level":0},{"x":473,"y":713,"score":26,"level":0},{"x":509,"y":713,"score":142,"level":0},{"x":553,"y":713,"score":53,"level":0},{"x":680,"y":713,"score":60,"level":0},{"x":685,"y":713,"score":94,"level":0},{"x":737,"y":713,"score":103,"level":0},{"x":824,"y":713,"score":96,"level":0},{"x":929,"y":713,"score":37,"level":0},{"x":959,"y":713,"score":51,"level":0},{"x":1022,"y":713,"score":28,"level":0},{"x":1087,"y":713,"score":119,"level":0},{"x":1097,"y":713,"score":41,"level":0},{"x":1136,"y":713,"score":65,"level":0},{"x":1166,"y":713,"score":47,"level":0},{"x":1185,"y":713,"score":202,"level":0},{"x":1277,"y":713,"score":113,"level":0},{"x":1358,"y":713,"score":40,"level":0},{"x":1385,"y":713,"score":93,"level":0},{"x":388,"y":714,"score":42,"level":0},{"x":409,"y":714,"score":26,"level":0},{"x":445,"y":714,"score":73,"level":0},{"x":482,"y":714,"score":50,"level":0},{"x":488,"y":714,"score":50,"level":0},{"x":501,"y":714,"score":26,"level":0},{"x":559,"y":714,"score":108,"level":0},{"x":571,"y":714,"score":36,"level":0},{"x":745,"y":714,"score":209,"level":0},{"x":751,"y":714,"score":122,"level":0},{"x":758,"y":714,"score":36,"level":0},{"x":763,"y":714,"score":103,"level":0},{"x":946,"y":714,"score":85,"level":0},{"x":954,"y":714,"score":62,"level":0},{"x":1041,"y":714,"score":81,"level":0},{"x":1055,"y":714,"score":28,"level":0},{"x":1141,"y":714,"score":36,"level":0},{"x":1162,"y":714,"score":53,"level":0},{"x":1172,"y":714,"score":27,"level":0},{"x":1174,"y":714,"score":83,"level":0},{"x":1196,"y":714,"score":115,"level":0},{"x":1285,"y":714,"score":65,"level":0},{"x":1294,"y":714,"score":84,"level":0},{"x":1345,"y":714,"score":154,"level":0},{"x":1355,"y":714,"score":96,"level":0},{"x":1487,"y":714,"score":59,"level":0},{"x":403,"y":715,"score":41,"level":0},{"x":423,"y":715,"score":34,"level":0},{"x":448,"y":715,"score":93,"level":0},{"x":459,"y":715,"score":47,"level":0},{"x":530,"y":715,"score":57,"level":0},{"x":536,"y":715,"score":72,"level":0},{"x":686,"y":715,"score":74,"level":0},{"x":698,"y":715,"score":43,"level":0},{"x":708,"y":715,"score":58,"level":0},{"x":769,"y":715,"score":77,"level":0},{"x":797,"y":715,"score":75,"level":0},{"x":801,"y":715,"score":50,"level":0},{"x":900,"y":715,"score":49,"level":0},{"x":910,"y":715,"score":36,"level":0},{"x":929,"y":715,"score":86,"level":0},{"x":977,"y":715,"score":71,"level":0},{"x":1180,"y":715,"score":98,"level":0},{"x":1235,"y":715,"score":116,"level":0},{"x":1242,"y":715,"score":113,"level":0},{"x":1278,"y":715,"score":74,"level":0},{"x":1296,"y":715,"score":88,"level":0},{"x":1335,"y":715,"score":40,"level":0},{"x":1374,"y":715,"score":126,"level":0},{"x":1391,"y":715,"score":103,"level":0},{"x":1404,"y":715,"score":124,"level":0},{"x":1452,"y":715,"score":41,"level":0},{"x":474,"y":716,"score":27,"level":0},{"x":481,"y":716,"score":46,"level":0},{"x":515,"y":716,"score":42,"level":0},{"x":571,"y":716,"score":33,"level":0},{"x":664,"y":716,"score":146,"level":0},{"x":785,"y":716,"score":235,"level":0},{"x":835,"y":716,"score":60,"level":0},{"x":861,"y":716,"score":65,"level":0},{"x":1011,"y":716,"score":50,"level":0},{"x":1066,"y":716,"score":52,"level":0},{"x":1092,"y":716,"score":38,"level":0},{"x":1107,"y":716,"score":130,"level":0},{"x":1127,"y":716,"score":68,"level":0},{"x":1202,"y":716,"score":165,"level":0},{"x":1217,"y":716,"score":207,"level":0},{"x":1256,"y":716,"score":161,"level":0},{"x":1265,"y":716,"score":79,"level":0},{"x":1409,"y":716,"score":106,"level":0},{"x":1424,"y":716,"score":215,"level":0},{"x":1471,"y":716,"score":105,"level":0},{"x":392,"y":717,"score":69,"level":0},{"x":397,"y":717,"score":39,"level":0},{"x":493,"y":717,"score":28,"level":0},{"x":526,"y":717,"score":51,"level":0},{"x":654,"y":717,"score":147,"level":0},{"x":778,"y":717,"score":87,"level":0},{"x":915,"y":717,"score":42,"level":0},{"x":986,"y":717,"score":63,"level":0},{"x":1125,"y":717,"score":59,"level":0},{"x":1152,"y":717,"score":75,"level":0},{"x":1212,"y":717,"score":121,"level":0},{"x":1273,"y":717,"score":216,"level":0},{"x":1290,"y":717,"score":133,"level":0},{"x":1301,"y":717,"score":255,"level":0},{"x":1358,"y":717,"score":102,"level":0},{"x":1490,"y":717,"score":77,"level":0},{"x":508,"y":718,"score":50,"level":0},{"x":532,"y":718,"score":31,"level":0},{"x":556,"y":718,"score":87,"level":0},{"x":690,"y":718,"score":55,"level":0},{"x":809,"y":718,"score":75,"level":0},{"x":888,"y":718,"score":48,"level":0},{"x":893,"y":718,"score":36,"level":0},{"x":904,"y":718,"score":32,"level":0},{"x":907,"y":718,"score":65,"level":0},{"x":1150,"y":718,"score":30,"level":0},{"x":1204,"y":718,"score":170,"level":0},{"x":1307,"y":718,"score":27,"level":0},{"x":1350,"y":718,"score":95,"level":0},{"x":1382,"y":718,"score":84,"level":0},{"x":1395,"y":718,"score":64,"level":0},{"x":1430,"y":718,"score":26,"level":0},{"x":385,"y":719,"score":108,"level":0},{"x":633,"y":719,"score":26,"level":0},{"x":677,"y":719,"score":53,"level":0},{"x":743,"y":719,"score":36,"level":0},{"x":757,"y":719,"score":66,"level":0},{"x":794,"y":719,"score":85,"level":0},{"x":1041,"y":719,"score":93,"level":0},{"x":1189,"y":719,"score":194,"level":0},{"x":1236,"y":719,"score":55,"level":0},{"x":1257,"y":719,"score":254,"level":0},{"x":1282,"y":719,"score":114,"level":0},{"x":1290,"y":719,"score":110,"level":0},{"x":1327,"y":719,"score":211,"level":0},{"x":1397,"y":719,"score":118,"level":0},{"x":1483,"y":719,"score":118,"level":0},{"x":376,"y":720,"score":63,"level":0},{"x":403,"y":720,"score":64,"level":0},{"x":406,"y":720,"score":30,"level":0},{"x":413,"y":720,"score":69,"level":0},{"x":423,"y":720,"score":63,"level":0},{"x":545,"y":720,"score":70,"level":0},{"x":673,"y":720,"score":78,"level":0},{"x":697,"y":720,"score":51,"level":0},{"x":714,"y":720,"score":38,"level":0},{"x":723,"y":720,"score":40,"level":0},{"x":765,"y":720,"score":190,"level":0},{"x":799,"y":720,"score":78,"level":0},{"x":804,"y":720,"score":46,"level":0},{"x":852,"y":720,"score":52,"level":0},{"x":923,"y":720,"score":111,"level":0},{"x":929,"y":720,"score":30,"level":0},{"x":984,"y":720,"score":34,"level":0},{"x":1025,"y":720,"score":41,"level":0},{"x":1036,"y":720,"score":92,"level":0},{"x":1083,"y":720,"score":81,"level":0},{"x":1094,"y":720,"score":86,"level":0},{"x":1135,"y":720,"score":54,"level":0},{"x":1163,"y":720,"score":31,"level":0},{"x":1184,"y":720,"score":148,"level":0},{"x":1229,"y":720,"score":134,"level":0},{"x":1243,"y":720,"score":238,"level":0},{"x":1284,"y":720,"score":92,"level":0},{"x":1348,"y":720,"score":125,"level":0},{"x":1379,"y":720,"score":125,"level":0},{"x":1403,"y":720,"score":104,"level":0},{"x":1417,"y":720,"score":49,"level":0},{"x":1435,"y":720,"score":154,"level":0},{"x":1441,"y":720,"score":192,"level":0},{"x":1462,"y":720,"score":66,"level":0},{"x":409,"y":721,"score":57,"level":0},{"x":428,"y":721,"score":27,"level":0},{"x":461,"y":721,"score":51,"level":0},{"x":473,"y":721,"score":38,"level":0},{"x":599,"y":721,"score":58,"level":0},{"x":649,"y":721,"score":53,"level":0},{"x":685,"y":721,"score":46,"level":0},{"x":754,"y":721,"score":89,"level":0},{"x":785,"y":721,"score":32,"level":0},{"x":814,"y":721,"score":38,"level":0},{"x":816,"y":721,"score":53,"level":0},{"x":865,"y":721,"score":54,"level":0},{"x":896,"y":721,"score":75,"level":0},{"x":978,"y":721,"score":110,"level":0},{"x":1023,"y":721,"score":37,"level":0},{"x":1088,"y":721,"score":49,"level":0},{"x":1138,"y":721,"score":59,"level":0},{"x":1209,"y":721,"score":65,"level":0},{"x":1401,"y":721,"score":120,"level":0},{"x":1408,"y":721,"score":86,"level":0},{"x":1457,"y":721,"score":83,"level":0},{"x":1468,"y":721,"score":65,"level":0},{"x":418,"y":722,"score":39,"level":0},{"x":515,"y":722,"score":78,"level":0},{"x":538,"y":722,"score":91,"level":0},{"x":679,"y":722,"score":208,"level":0},{"x":825,"y":722,"score":115,"level":0},{"x":918,"y":722,"score":115,"level":0},{"x":988,"y":722,"score":52,"level":0},{"x":1057,"y":722,"score":49,"level":0},{"x":1171,"y":722,"score":130,"level":0},{"x":1200,"y":722,"score":28,"level":0},{"x":1218,"y":722,"score":42,"level":0},{"x":1277,"y":722,"score":46,"level":0},{"x":1289,"y":722,"score":53,"level":0},{"x":1341,"y":722,"score":70,"level":0},{"x":1354,"y":722,"score":43,"level":0},{"x":1390,"y":722,"score":87,"level":0},{"x":1478,"y":722,"score":211,"level":0},{"x":393,"y":723,"score":71,"level":0},{"x":592,"y":723,"score":43,"level":0},{"x":645,"y":723,"score":68,"level":0},{"x":703,"y":723,"score":115,"level":0},{"x":799,"y":723,"score":132,"level":0},{"x":882,"y":723,"score":41,"level":0},{"x":909,"y":723,"score":190,"level":0},{"x":978,"y":723,"score":28,"level":0},{"x":993,"y":723,"score":124,"level":0},{"x":1015,"y":723,"score":86,"level":0},{"x":1030,"y":723,"score":180,"level":0},{"x":1110,"y":723,"score":97,"level":0},{"x":1295,"y":723,"score":142,"level":0},{"x":1488,"y":723,"score":67,"level":0},{"x":398,"y":724,"score":70,"level":0},{"x":504,"y":724,"score":68,"level":0},{"x":557,"y":724,"score":32,"level":0},{"x":604,"y":724,"score":110,"level":0},{"x":662,"y":724,"score":68,"level":0},{"x":729,"y":724,"score":137,"level":0},{"x":759,"y":724,"score":61,"level":0},{"x":775,"y":724,"score":31,"level":0},{"x":892,"y":724,"score":96,"level":0},{"x":960,"y":724,"score":109,"level":0},{"x":983,"y":724,"score":94,"level":0},{"x":1017,"y":724,"score":100,"level":0},{"x":1052,"y":724,"score":101,"level":0},{"x":1068,"y":724,"score":34,"level":0},{"x":1085,"y":724,"score":31,"level":0},{"x":1102,"y":724,"score":31,"level":0},{"x":1107,"y":724,"score":119,"level":0},{"x":1144,"y":724,"score":112,"level":0},{"x":1173,"y":724,"score":178,"level":0},{"x":1194,"y":724,"score":30,"level":0},{"x":1232,"y":724,"score":144,"level":0},{"x":1272,"y":724,"score":88,"level":0},{"x":1298,"y":724,"score":119,"level":0},{"x":1303,"y":724,"score":57,"level":0},{"x":1405,"y":724,"score":59,"level":0},{"x":1433,"y":724,"score":42,"level":0},{"x":377,"y":725,"score":170,"level":0},{"x":417,"y":725,"score":44,"level":0},{"x":445,"y":725,"score":30,"level":0},{"x":533,"y":725,"score":137,"level":0},{"x":545,"y":725,"score":45,"level":0},{"x":561,"y":725,"score":38,"level":0},{"x":689,"y":725,"score":147,"level":0},{"x":696,"y":725,"score":135,"level":0},{"x":704,"y":725,"score":113,"level":0},{"x":709,"y":725,"score":29,"level":0},{"x":714,"y":725,"score":113,"level":0},{"x":791,"y":725,"score":57,"level":0},{"x":870,"y":725,"score":138,"level":0},{"x":876,"y":725,"score":30,"level":0},{"x":1114,"y":725,"score":58,"level":0},{"x":1119,"y":725,"score":276,"level":0},{"x":1184,"y":725,"score":73,"level":0},{"x":1238,"y":725,"score":40,"level":0},{"x":1253,"y":725,"score":32,"level":0},{"x":1258,"y":725,"score":57,"level":0},{"x":1347,"y":725,"score":87,"level":0},{"x":1377,"y":725,"score":259,"level":0},{"x":1399,"y":725,"score":71,"level":0},{"x":1479,"y":725,"score":201,"level":0},{"x":447,"y":726,"score":29,"level":0},{"x":461,"y":726,"score":31,"level":0},{"x":469,"y":726,"score":125,"level":0},{"x":499,"y":726,"score":28,"level":0},{"x":739,"y":726,"score":77,"level":0},{"x":766,"y":726,"score":39,"level":0},{"x":825,"y":726,"score":94,"level":0},{"x":830,"y":726,"score":79,"level":0},{"x":886,"y":726,"score":120,"level":0},{"x":897,"y":726,"score":241,"level":0},{"x":916,"y":726,"score":49,"level":0},{"x":936,"y":726,"score":89,"level":0},{"x":1035,"y":726,"score":65,"level":0},{"x":1125,"y":726,"score":116,"level":0},{"x":1155,"y":726,"score":43,"level":0},{"x":1226,"y":726,"score":99,"level":0},{"x":1284,"y":726,"score":99,"level":0},{"x":1409,"y":726,"score":33,"level":0},{"x":1441,"y":726,"score":40,"level":0},{"x":1470,"y":726,"score":121,"level":0},{"x":514,"y":727,"score":64,"level":0},{"x":558,"y":727,"score":45,"level":0},{"x":684,"y":727,"score":73,"level":0},{"x":747,"y":727,"score":26,"level":0},{"x":756,"y":727,"score":61,"level":0},{"x":821,"y":727,"score":43,"level":0},{"x":987,"y":727,"score":92,"level":0},{"x":1047,"y":727,"score":135,"level":0},{"x":1057,"y":727,"score":53,"level":0},{"x":1098,"y":727,"score":48,"level":0},{"x":1133,"y":727,"score":184,"level":0},{"x":1178,"y":727,"score":59,"level":0},{"x":1211,"y":727,"score":148,"level":0},{"x":1368,"y":727,"score":225,"level":0},{"x":1454,"y":727,"score":101,"level":0},{"x":419,"y":728,"score":92,"level":0},{"x":544,"y":728,"score":48,"level":0},{"x":672,"y":728,"score":76,"level":0},{"x":772,"y":728,"score":53,"level":0},{"x":995,"y":728,"score":106,"level":0},{"x":1065,"y":728,"score":54,"level":0},{"x":1077,"y":728,"score":56,"level":0},{"x":1115,"y":728,"score":78,"level":0},{"x":1159,"y":728,"score":33,"level":0},{"x":1162,"y":728,"score":31,"level":0},{"x":1215,"y":728,"score":90,"level":0},{"x":1234,"y":728,"score":97,"level":0},{"x":1267,"y":728,"score":35,"level":0},{"x":1294,"y":728,"score":59,"level":0},{"x":1305,"y":728,"score":68,"level":0},{"x":1447,"y":728,"score":139,"level":0},{"x":1487,"y":728,"score":192,"level":0},{"x":385,"y":729,"score":41,"level":0},{"x":391,"y":729,"score":46,"level":0},{"x":493,"y":729,"score":44,"level":0},{"x":579,"y":729,"score":63,"level":0},{"x":592,"y":729,"score":85,"level":0},{"x":602,"y":729,"score":57,"level":0},{"x":729,"y":729,"score":85,"level":0},{"x":738,"y":729,"score":78,"level":0},{"x":802,"y":729,"score":71,"level":0},{"x":842,"y":729,"score":137,"level":0},{"x":924,"y":729,"score":157,"level":0},{"x":938,"y":729,"score":46,"level":0},{"x":1060,"y":729,"score":55,"level":0},{"x":1170,"y":729,"score":61,"level":0},{"x":1271,"y":729,"score":73,"level":0},{"x":1298,"y":729,"score":84,"level":0},{"x":1384,"y":729,"score":171,"level":0},{"x":405,"y":730,"score":26,"level":0},{"x":440,"y":730,"score":75,"level":0},{"x":454,"y":730,"score":49,"level":0},{"x":480,"y":730,"score":80,"level":0},{"x":644,"y":730,"score":114,"level":0},{"x":654,"y":730,"score":49,"level":0},{"x":707,"y":730,"score":133,"level":0},{"x":715,"y":730,"score":31,"level":0},{"x":720,"y":730,"score":101,"level":0},{"x":793,"y":730,"score":64,"level":0},{"x":838,"y":730,"score":126,"level":0},{"x":850,"y":730,"score":58,"level":0},{"x":947,"y":730,"score":139,"level":0},{"x":1017,"y":730,"score":94,"level":0},{"x":1196,"y":730,"score":180,"level":0},{"x":1202,"y":730,"score":33,"level":0},{"x":1240,"y":730,"score":94,"level":0},{"x":1280,"y":730,"score":53,"level":0},{"x":1289,"y":730,"score":36,"level":0},{"x":1294,"y":730,"score":78,"level":0},{"x":1377,"y":730,"score":217,"level":0},{"x":1423,"y":730,"score":82,"level":0},{"x":1426,"y":730,"score":34,"level":0},{"x":377,"y":731,"score":37,"level":0},{"x":502,"y":731,"score":70,"level":0},{"x":508,"y":731,"score":85,"level":0},{"x":548,"y":731,"score":60,"level":0},{"x":694,"y":731,"score":52,"level":0},{"x":712,"y":731,"score":70,"level":0},{"x":765,"y":731,"score":102,"level":0},{"x":776,"y":731,"score":35,"level":0},{"x":859,"y":731,"score":33,"level":0},{"x":926,"y":731,"score":172,"level":0},{"x":936,"y":731,"score":50,"level":0},{"x":983,"y":731,"score":305,"level":0},{"x":1000,"y":731,"score":163,"level":0},{"x":1258,"y":731,"score":162,"level":0},{"x":1274,"y":731,"score":70,"level":0},{"x":1322,"y":731,"score":28,"level":0},{"x":1334,"y":731,"score":188,"level":0},{"x":1402,"y":731,"score":86,"level":0},{"x":396,"y":732,"score":65,"level":0},{"x":421,"y":732,"score":67,"level":0},{"x":461,"y":732,"score":36,"level":0},{"x":571,"y":732,"score":73,"level":0},{"x":577,"y":732,"score":43,"level":0},{"x":664,"y":732,"score":52,"level":0},{"x":738,"y":732,"score":68,"level":0},{"x":760,"y":732,"score":72,"level":0},{"x":887,"y":732,"score":27,"level":0},{"x":941,"y":732,"score":81,"level":0},{"x":975,"y":732,"score":102,"level":0},{"x":1009,"y":732,"score":38,"level":0},{"x":1027,"y":732,"score":31,"level":0},{"x":1033,"y":732,"score":254,"level":0},{"x":1043,"y":732,"score":33,"level":0},{"x":1073,"y":732,"score":39,"level":0},{"x":1126,"y":732,"score":139,"level":0},{"x":1232,"y":732,"score":27,"level":0},{"x":1375,"y":732,"score":117,"level":0},{"x":1416,"y":732,"score":87,"level":0},{"x":1440,"y":732,"score":92,"level":0},{"x":1467,"y":732,"score":81,"level":0},{"x":383,"y":733,"score":34,"level":0},{"x":449,"y":733,"score":42,"level":0},{"x":469,"y":733,"score":51,"level":0},{"x":475,"y":733,"score":85,"level":0},{"x":498,"y":733,"score":70,"level":0},{"x":598,"y":733,"score":143,"level":0},{"x":604,"y":733,"score":56,"level":0},{"x":670,"y":733,"score":63,"level":0},{"x":753,"y":733,"score":47,"level":0},{"x":865,"y":733,"score":102,"level":0},{"x":902,"y":733,"score":116,"level":0},{"x":931,"y":733,"score":26,"level":0},{"x":969,"y":733,"score":72,"level":0},{"x":998,"y":733,"score":189,"level":0},{"x":1022,"y":733,"score":31,"level":0},{"x":1105,"y":733,"score":32,"level":0},{"x":1111,"y":733,"score":44,"level":0},{"x":1140,"y":733,"score":124,"level":0},{"x":1148,"y":733,"score":40,"level":0},{"x":1175,"y":733,"score":40,"level":0},{"x":1211,"y":733,"score":49,"level":0},{"x":1227,"y":733,"score":242,"level":0},{"x":1253,"y":733,"score":60,"level":0},{"x":1267,"y":733,"score":121,"level":0},{"x":1304,"y":733,"score":44,"level":0},{"x":1308,"y":733,"score":59,"level":0},{"x":1405,"y":733,"score":30,"level":0},{"x":417,"y":734,"score":54,"level":0},{"x":432,"y":734,"score":58,"level":0},{"x":640,"y":734,"score":224,"level":0},{"x":661,"y":734,"score":118,"level":0},{"x":801,"y":734,"score":61,"level":0},{"x":820,"y":734,"score":130,"level":0},{"x":825,"y":734,"score":100,"level":0},{"x":832,"y":734,"score":43,"level":0},{"x":852,"y":734,"score":164,"level":0},{"x":922,"y":734,"score":44,"level":0},{"x":992,"y":734,"score":81,"level":0},{"x":1014,"y":734,"score":36,"level":0},{"x":1054,"y":734,"score":54,"level":0},{"x":1065,"y":734,"score":160,"level":0},{"x":1079,"y":734,"score":34,"level":0},{"x":1097,"y":734,"score":167,"level":0},{"x":1127,"y":734,"score":70,"level":0},{"x":1129,"y":734,"score":37,"level":0},{"x":1135,"y":734,"score":173,"level":0},{"x":1190,"y":734,"score":114,"level":0},{"x":1369,"y":734,"score":115,"level":0},{"x":1481,"y":734,"score":92,"level":0},{"x":405,"y":735,"score":51,"level":0},{"x":442,"y":735,"score":66,"level":0},{"x":484,"y":735,"score":86,"level":0},{"x":528,"y":735,"score":50,"level":0},{"x":567,"y":735,"score":62,"level":0},{"x":676,"y":735,"score":36,"level":0},{"x":770,"y":735,"score":32,"level":0},{"x":810,"y":735,"score":129,"level":0},{"x":845,"y":735,"score":172,"level":0},{"x":1195,"y":735,"score":162,"level":0},{"x":1219,"y":735,"score":120,"level":0},{"x":1241,"y":735,"score":61,"level":0},{"x":1263,"y":735,"score":74,"level":0},{"x":1280,"y":735,"score":222,"level":0},{"x":1285,"y":735,"score":204,"level":0},{"x":1411,"y":735,"score":97,"level":0},{"x":1422,"y":735,"score":37,"level":0},{"x":1426,"y":735,"score":104,"level":0},{"x":1461,"y":735,"score":121,"level":0},{"x":1475,"y":735,"score":50,"level":0},{"x":505,"y":736,"score":140,"level":0},{"x":631,"y":736,"score":44,"level":0},{"x":784,"y":736,"score":59,"level":0},{"x":796,"y":736,"score":52,"level":0},{"x":872,"y":736,"score":97,"level":0},{"x":906,"y":736,"score":47,"level":0},{"x":949,"y":736,"score":119,"level":0},{"x":958,"y":736,"score":108,"level":0},{"x":980,"y":736,"score":78,"level":0},{"x":1060,"y":736,"score":69,"level":0},{"x":1114,"y":736,"score":162,"level":0},{"x":1123,"y":736,"score":49,"level":0},{"x":1164,"y":736,"score":140,"level":0},{"x":1185,"y":736,"score":45,"level":0},{"x":1291,"y":736,"score":68,"level":0},{"x":1293,"y":736,"score":71,"level":0},{"x":1335,"y":736,"score":105,"level":0},{"x":1369,"y":736,"score":93,"level":0},{"x":1383,"y":736,"score":147,"level":0},{"x":1435,"y":736,"score":53,"level":0},{"x":1448,"y":736,"score":98,"level":0},{"x":377,"y":737,"score":132,"level":0},{"x":407,"y":737,"score":44,"level":0},{"x":498,"y":737,"score":111,"level":0},{"x":554,"y":737,"score":50,"level":0},{"x":686,"y":737,"score":35,"level":0},{"x":908,"y":737,"score":43,"level":0},{"x":920,"y":737,"score":156,"level":0},{"x":1108,"y":737,"score":27,"level":0},{"x":1133,"y":737,"score":111,"level":0},{"x":1230,"y":737,"score":161,"level":0},{"x":1264,"y":737,"score":32,"level":0},{"x":1350,"y":737,"score":95,"level":0},{"x":1365,"y":737,"score":100,"level":0},{"x":1400,"y":737,"score":44,"level":0},{"x":473,"y":738,"score":76,"level":0},{"x":575,"y":738,"score":45,"level":0},{"x":607,"y":738,"score":45,"level":0},{"x":657,"y":738,"score":35,"level":0},{"x":672,"y":738,"score":74,"level":0},{"x":811,"y":738,"score":63,"level":0},{"x":816,"y":738,"score":194,"level":0},{"x":1146,"y":738,"score":33,"level":0},{"x":1213,"y":738,"score":55,"level":0},{"x":1224,"y":738,"score":41,"level":0},{"x":1260,"y":738,"score":26,"level":0},{"x":1313,"y":738,"score":63,"level":0},{"x":1393,"y":738,"score":30,"level":0},{"x":1442,"y":738,"score":74,"level":0},{"x":454,"y":739,"score":177,"level":0},{"x":636,"y":739,"score":75,"level":0},{"x":649,"y":739,"score":67,"level":0},{"x":694,"y":739,"score":39,"level":0},{"x":712,"y":739,"score":69,"level":0},{"x":724,"y":739,"score":130,"level":0},{"x":739,"y":739,"score":31,"level":0},{"x":764,"y":739,"score":47,"level":0},{"x":829,"y":739,"score":142,"level":0},{"x":868,"y":739,"score":46,"level":0},{"x":972,"y":739,"score":46,"level":0},{"x":975,"y":739,"score":28,"level":0},{"x":1036,"y":739,"score":65,"level":0},{"x":1071,"y":739,"score":117,"level":0},{"x":1178,"y":739,"score":46,"level":0},{"x":1181,"y":739,"score":57,"level":0},{"x":1191,"y":739,"score":160,"level":0},{"x":1302,"y":739,"score":178,"level":0},{"x":1358,"y":739,"score":284,"level":0},{"x":1365,"y":739,"score":83,"level":0},{"x":1414,"y":739,"score":95,"level":0},{"x":1419,"y":739,"score":38,"level":0},{"x":413,"y":740,"score":38,"level":0},{"x":429,"y":740,"score":68,"level":0},{"x":484,"y":740,"score":42,"level":0},{"x":643,"y":740,"score":178,"level":0},{"x":664,"y":740,"score":49,"level":0},{"x":719,"y":740,"score":224,"level":0},{"x":800,"y":740,"score":121,"level":0},{"x":823,"y":740,"score":26,"level":0},{"x":843,"y":740,"score":95,"level":0},{"x":856,"y":740,"score":133,"level":0},{"x":903,"y":740,"score":133,"level":0},{"x":910,"y":740,"score":30,"level":0},{"x":985,"y":740,"score":28,"level":0},{"x":1047,"y":740,"score":92,"level":0},{"x":1066,"y":740,"score":157,"level":0},{"x":1079,"y":740,"score":139,"level":0},{"x":1085,"y":740,"score":248,"level":0},{"x":1092,"y":740,"score":84,"level":0},{"x":1126,"y":740,"score":60,"level":0},{"x":1134,"y":740,"score":61,"level":0},{"x":1139,"y":740,"score":161,"level":0},{"x":1172,"y":740,"score":137,"level":0},{"x":1202,"y":740,"score":55,"level":0},{"x":1208,"y":740,"score":71,"level":0},{"x":1274,"y":740,"score":78,"level":0},{"x":1308,"y":740,"score":50,"level":0},{"x":1331,"y":740,"score":219,"level":0},{"x":1338,"y":740,"score":37,"level":0},{"x":1343,"y":740,"score":48,"level":0},{"x":1405,"y":740,"score":151,"level":0},{"x":421,"y":741,"score":82,"level":0},{"x":447,"y":741,"score":41,"level":0},{"x":499,"y":741,"score":27,"level":0},{"x":507,"y":741,"score":195,"level":0},{"x":831,"y":741,"score":72,"level":0},{"x":851,"y":741,"score":30,"level":0},{"x":905,"y":741,"score":98,"level":0},{"x":913,"y":741,"score":39,"level":0},{"x":936,"y":741,"score":114,"level":0},{"x":956,"y":741,"score":68,"level":0},{"x":1027,"y":741,"score":59,"level":0},{"x":1036,"y":741,"score":50,"level":0},{"x":1061,"y":741,"score":119,"level":0},{"x":1117,"y":741,"score":65,"level":0},{"x":1120,"y":741,"score":83,"level":0},{"x":1158,"y":741,"score":50,"level":0},{"x":1180,"y":741,"score":38,"level":0},{"x":1235,"y":741,"score":156,"level":0},{"x":1381,"y":741,"score":75,"level":0},{"x":410,"y":742,"score":56,"level":0},{"x":468,"y":742,"score":43,"level":0},{"x":493,"y":742,"score":104,"level":0},{"x":514,"y":742,"score":83,"level":0},{"x":532,"y":742,"score":30,"level":0},{"x":546,"y":742,"score":62,"level":0},{"x":561,"y":742,"score":78,"level":0},{"x":668,"y":742,"score":192,"level":0},{"x":768,"y":742,"score":108,"level":0},{"x":774,"y":742,"score":124,"level":0},{"x":784,"y":742,"score":184,"level":0},{"x":840,"y":742,"score":35,"level":0},{"x":963,"y":742,"score":60,"level":0},{"x":981,"y":742,"score":96,"level":0},{"x":1091,"y":742,"score":33,"level":0},{"x":1155,"y":742,"score":75,"level":0},{"x":1284,"y":742,"score":48,"level":0},{"x":1291,"y":742,"score":27,"level":0},{"x":1368,"y":742,"score":62,"level":0},{"x":1439,"y":742,"score":109,"level":0},{"x":1456,"y":742,"score":121,"level":0},{"x":378,"y":743,"score":104,"level":0},{"x":395,"y":743,"score":51,"level":0},{"x":566,"y":743,"score":63,"level":0},{"x":596,"y":743,"score":26,"level":0},{"x":699,"y":743,"score":73,"level":0},{"x":838,"y":743,"score":48,"level":0},{"x":880,"y":743,"score":44,"level":0},{"x":1042,"y":743,"score":93,"level":0},{"x":1056,"y":743,"score":79,"level":0},{"x":1073,"y":743,"score":136,"level":0},{"x":1097,"y":743,"score":36,"level":0},{"x":1110,"y":743,"score":94,"level":0},{"x":1129,"y":743,"score":34,"level":0},{"x":1135,"y":743,"score":106,"level":0},{"x":1200,"y":743,"score":79,"level":0},{"x":1236,"y":743,"score":98,"level":0},{"x":1266,"y":743,"score":80,"level":0},{"x":1349,"y":743,"score":136,"level":0},{"x":1359,"y":743,"score":107,"level":0},{"x":1372,"y":743,"score":87,"level":0},{"x":1424,"y":743,"score":221,"level":0},{"x":624,"y":744,"score":77,"level":0},{"x":682,"y":744,"score":79,"level":0},{"x":712,"y":744,"score":132,"level":0},{"x":739,"y":744,"score":167,"level":0},{"x":752,"y":744,"score":52,"level":0},{"x":862,"y":744,"score":73,"level":0},{"x":925,"y":744,"score":123,"level":0},{"x":1155,"y":744,"score":42,"level":0},{"x":1212,"y":744,"score":111,"level":0},{"x":1221,"y":744,"score":94,"level":0},{"x":1322,"y":744,"score":39,"level":0},{"x":1413,"y":744,"score":99,"level":0},{"x":1470,"y":744,"score":78,"level":0},{"x":1480,"y":744,"score":48,"level":0},{"x":403,"y":745,"score":197,"level":0},{"x":452,"y":745,"score":94,"level":0},{"x":524,"y":745,"score":35,"level":0},{"x":706,"y":745,"score":36,"level":0},{"x":718,"y":745,"score":208,"level":0},{"x":922,"y":745,"score":46,"level":0},{"x":1006,"y":745,"score":29,"level":0},{"x":1044,"y":745,"score":69,"level":0},{"x":1170,"y":745,"score":68,"level":0},{"x":1218,"y":745,"score":47,"level":0},{"x":1231,"y":745,"score":161,"level":0},{"x":1275,"y":745,"score":217,"level":0},{"x":1282,"y":745,"score":77,"level":0},{"x":1301,"y":745,"score":35,"level":0},{"x":1384,"y":745,"score":70,"level":0},{"x":1391,"y":745,"score":148,"level":0},{"x":1408,"y":745,"score":31,"level":0},{"x":1459,"y":745,"score":194,"level":0},{"x":657,"y":746,"score":75,"level":0},{"x":713,"y":746,"score":31,"level":0},{"x":856,"y":746,"score":45,"level":0},{"x":999,"y":746,"score":149,"level":0},{"x":1033,"y":746,"score":187,"level":0},{"x":1087,"y":746,"score":36,"level":0},{"x":1127,"y":746,"score":66,"level":0},{"x":1134,"y":746,"score":153,"level":0},{"x":1139,"y":746,"score":77,"level":0},{"x":1207,"y":746,"score":40,"level":0},{"x":1308,"y":746,"score":142,"level":0},{"x":1314,"y":746,"score":360,"level":0},{"x":1378,"y":746,"score":135,"level":0},{"x":1402,"y":746,"score":38,"level":0},{"x":1447,"y":746,"score":91,"level":0},{"x":1486,"y":746,"score":170,"level":0},{"x":388,"y":747,"score":76,"level":0},{"x":497,"y":747,"score":107,"level":0},{"x":509,"y":747,"score":47,"level":0},{"x":515,"y":747,"score":57,"level":0},{"x":531,"y":747,"score":26,"level":0},{"x":598,"y":747,"score":34,"level":0},{"x":627,"y":747,"score":58,"level":0},{"x":824,"y":747,"score":144,"level":0},{"x":833,"y":747,"score":96,"level":0},{"x":904,"y":747,"score":26,"level":0},{"x":940,"y":747,"score":28,"level":0},{"x":981,"y":747,"score":56,"level":0},{"x":984,"y":747,"score":96,"level":0},{"x":1053,"y":747,"score":31,"level":0},{"x":1071,"y":747,"score":62,"level":0},{"x":1094,"y":747,"score":154,"level":0},{"x":1118,"y":747,"score":100,"level":0},{"x":1246,"y":747,"score":45,"level":0},{"x":1254,"y":747,"score":62,"level":0},{"x":1270,"y":747,"score":67,"level":0},{"x":1345,"y":747,"score":47,"level":0},{"x":1438,"y":747,"score":132,"level":0},{"x":1456,"y":747,"score":94,"level":0},{"x":1471,"y":747,"score":106,"level":0},{"x":398,"y":748,"score":111,"level":0},{"x":479,"y":748,"score":47,"level":0},{"x":484,"y":748,"score":84,"level":0},{"x":495,"y":748,"score":148,"level":0},{"x":503,"y":748,"score":37,"level":0},{"x":519,"y":748,"score":58,"level":0},{"x":591,"y":748,"score":35,"level":0},{"x":642,"y":748,"score":110,"level":0},{"x":648,"y":748,"score":33,"level":0},{"x":749,"y":748,"score":58,"level":0},{"x":892,"y":748,"score":106,"level":0},{"x":943,"y":748,"score":59,"level":0},{"x":1011,"y":748,"score":84,"level":0},{"x":1018,"y":748,"score":30,"level":0},{"x":1063,"y":748,"score":143,"level":0},{"x":1110,"y":748,"score":90,"level":0},{"x":1128,"y":748,"score":53,"level":0},{"x":1203,"y":748,"score":27,"level":0},{"x":1342,"y":748,"score":47,"level":0},{"x":1348,"y":748,"score":38,"level":0},{"x":1355,"y":748,"score":76,"level":0},{"x":1426,"y":748,"score":31,"level":0},{"x":1451,"y":748,"score":80,"level":0},{"x":468,"y":749,"score":82,"level":0},{"x":632,"y":749,"score":58,"level":0},{"x":714,"y":749,"score":40,"level":0},{"x":734,"y":749,"score":43,"level":0},{"x":862,"y":749,"score":189,"level":0},{"x":869,"y":749,"score":129,"level":0},{"x":878,"y":749,"score":124,"level":0},{"x":1026,"y":749,"score":32,"level":0},{"x":1038,"y":749,"score":82,"level":0},{"x":1081,"y":749,"score":33,"level":0},{"x":1260,"y":749,"score":63,"level":0},{"x":1265,"y":749,"score":90,"level":0},{"x":1286,"y":749,"score":39,"level":0},{"x":1294,"y":749,"score":42,"level":0},{"x":1308,"y":749,"score":110,"level":0},{"x":1362,"y":749,"score":83,"level":0},{"x":1417,"y":749,"score":30,"level":0},{"x":1430,"y":749,"score":87,"level":0},{"x":1434,"y":749,"score":27,"level":0},{"x":1464,"y":749,"score":107,"level":0},{"x":393,"y":750,"score":28,"level":0},{"x":517,"y":750,"score":66,"level":0},{"x":544,"y":750,"score":62,"level":0},{"x":685,"y":750,"score":160,"level":0},{"x":695,"y":750,"score":27,"level":0},{"x":739,"y":750,"score":40,"level":0},{"x":848,"y":750,"score":190,"level":0},{"x":921,"y":750,"score":95,"level":0},{"x":1049,"y":750,"score":189,"level":0},{"x":1057,"y":750,"score":73,"level":0},{"x":1276,"y":750,"score":151,"level":0},{"x":1299,"y":750,"score":63,"level":0},{"x":1355,"y":750,"score":69,"level":0},{"x":1370,"y":750,"score":122,"level":0},{"x":1391,"y":750,"score":61,"level":0},{"x":1459,"y":750,"score":113,"level":0},{"x":1477,"y":750,"score":75,"level":0},{"x":1479,"y":750,"score":66,"level":0},{"x":445,"y":751,"score":102,"level":0},{"x":622,"y":751,"score":83,"level":0},{"x":654,"y":751,"score":77,"level":0},{"x":724,"y":751,"score":115,"level":0},{"x":766,"y":751,"score":59,"level":0},{"x":769,"y":751,"score":68,"level":0},{"x":787,"y":751,"score":46,"level":0},{"x":793,"y":751,"score":90,"level":0},{"x":805,"y":751,"score":83,"level":0},{"x":808,"y":751,"score":95,"level":0},{"x":816,"y":751,"score":147,"level":0},{"x":912,"y":751,"score":53,"level":0},{"x":976,"y":751,"score":78,"level":0},{"x":998,"y":751,"score":77,"level":0},{"x":1062,"y":751,"score":36,"level":0},{"x":1067,"y":751,"score":140,"level":0},{"x":1226,"y":751,"score":35,"level":0},{"x":1383,"y":751,"score":263,"level":0},{"x":1461,"y":751,"score":136,"level":0},{"x":1485,"y":751,"score":107,"level":0},{"x":386,"y":752,"score":53,"level":0},{"x":456,"y":752,"score":44,"level":0},{"x":619,"y":752,"score":90,"level":0},{"x":671,"y":752,"score":26,"level":0},{"x":755,"y":752,"score":143,"level":0},{"x":757,"y":752,"score":103,"level":0},{"x":813,"y":752,"score":71,"level":0},{"x":881,"y":752,"score":57,"level":0},{"x":902,"y":752,"score":62,"level":0},{"x":926,"y":752,"score":40,"level":0},{"x":968,"y":752,"score":53,"level":0},{"x":972,"y":752,"score":48,"level":0},{"x":1006,"y":752,"score":132,"level":0},{"x":1078,"y":752,"score":48,"level":0},{"x":1117,"y":752,"score":114,"level":0},{"x":1123,"y":752,"score":184,"level":0},{"x":1132,"y":752,"score":195,"level":0},{"x":1198,"y":752,"score":30,"level":0},{"x":1215,"y":752,"score":62,"level":0},{"x":1314,"y":752,"score":91,"level":0},{"x":1320,"y":752,"score":107,"level":0},{"x":1355,"y":752,"score":64,"level":0},{"x":1401,"y":752,"score":90,"level":0},{"x":1457,"y":752,"score":173,"level":0},{"x":1471,"y":752,"score":42,"level":0},{"x":1477,"y":752,"score":72,"level":0},{"x":486,"y":753,"score":29,"level":0},{"x":554,"y":753,"score":63,"level":0},{"x":568,"y":753,"score":45,"level":0},{"x":592,"y":753,"score":100,"level":0},{"x":603,"y":753,"score":205,"level":0},{"x":611,"y":753,"score":26,"level":0},{"x":684,"y":753,"score":150,"level":0},{"x":792,"y":753,"score":68,"level":0},{"x":816,"y":753,"score":118,"level":0},{"x":897,"y":753,"score":69,"level":0},{"x":941,"y":753,"score":133,"level":0},{"x":953,"y":753,"score":29,"level":0},{"x":958,"y":753,"score":175,"level":0},{"x":992,"y":753,"score":80,"level":0},{"x":1012,"y":753,"score":225,"level":0},{"x":1032,"y":753,"score":74,"level":0},{"x":1064,"y":753,"score":88,"level":0},{"x":1070,"y":753,"score":30,"level":0},{"x":1247,"y":753,"score":78,"level":0},{"x":1345,"y":753,"score":82,"level":0},{"x":377,"y":754,"score":151,"level":0},{"x":575,"y":754,"score":122,"level":0},{"x":582,"y":754,"score":147,"level":0},{"x":630,"y":754,"score":34,"level":0},{"x":643,"y":754,"score":94,"level":0},{"x":654,"y":754,"score":80,"level":0},{"x":713,"y":754,"score":30,"level":0},{"x":763,"y":754,"score":37,"level":0},{"x":841,"y":754,"score":59,"level":0},{"x":868,"y":754,"score":146,"level":0},{"x":885,"y":754,"score":213,"level":0},{"x":934,"y":754,"score":120,"level":0},{"x":962,"y":754,"score":99,"level":0},{"x":1139,"y":754,"score":48,"level":0},{"x":1210,"y":754,"score":50,"level":0},{"x":1285,"y":754,"score":266,"level":0},{"x":1337,"y":754,"score":113,"level":0},{"x":1360,"y":754,"score":100,"level":0},{"x":1366,"y":754,"score":161,"level":0},{"x":1425,"y":754,"score":75,"level":0},{"x":1440,"y":754,"score":46,"level":0},{"x":505,"y":755,"score":41,"level":0},{"x":517,"y":755,"score":28,"level":0},{"x":730,"y":755,"score":34,"level":0},{"x":738,"y":755,"score":32,"level":0},{"x":748,"y":755,"score":41,"level":0},{"x":796,"y":755,"score":76,"level":0},{"x":809,"y":755,"score":93,"level":0},{"x":862,"y":755,"score":221,"level":0},{"x":873,"y":755,"score":170,"level":0},{"x":986,"y":755,"score":175,"level":0},{"x":1023,"y":755,"score":32,"level":0},{"x":1058,"y":755,"score":114,"level":0},{"x":1066,"y":755,"score":40,"level":0},{"x":1232,"y":755,"score":46,"level":0},{"x":1236,"y":755,"score":44,"level":0},{"x":1274,"y":755,"score":162,"level":0},{"x":1279,"y":755,"score":62,"level":0},{"x":1292,"y":755,"score":234,"level":0},{"x":1405,"y":755,"score":36,"level":0},{"x":1419,"y":755,"score":58,"level":0},{"x":1452,"y":755,"score":114,"level":0},{"x":1490,"y":755,"score":140,"level":0},{"x":395,"y":756,"score":29,"level":0},{"x":416,"y":756,"score":50,"level":0},{"x":469,"y":756,"score":46,"level":0},{"x":546,"y":756,"score":68,"level":0},{"x":607,"y":756,"score":28,"level":0},{"x":769,"y":756,"score":50,"level":0},{"x":776,"y":756,"score":27,"level":0},{"x":919,"y":756,"score":27,"level":0},{"x":999,"y":756,"score":39,"level":0},{"x":1074,"y":756,"score":35,"level":0},{"x":1091,"y":756,"score":44,"level":0},{"x":1126,"y":756,"score":97,"level":0},{"x":1207,"y":756,"score":71,"level":0},{"x":1219,"y":756,"score":102,"level":0},{"x":1224,"y":756,"score":56,"level":0},{"x":1229,"y":756,"score":133,"level":0},{"x":1260,"y":756,"score":44,"level":0},{"x":1323,"y":756,"score":136,"level":0},{"x":1430,"y":756,"score":61,"level":0},{"x":1460,"y":756,"score":56,"level":0},{"x":1482,"y":756,"score":215,"level":0},{"x":444,"y":757,"score":82,"level":0},{"x":560,"y":757,"score":40,"level":0},{"x":592,"y":757,"score":98,"level":0},{"x":803,"y":757,"score":92,"level":0},{"x":908,"y":757,"score":48,"level":0},{"x":949,"y":757,"score":54,"level":0},{"x":968,"y":757,"score":150,"level":0},{"x":1040,"y":757,"score":145,"level":0},{"x":1051,"y":757,"score":173,"level":0},{"x":1121,"y":757,"score":33,"level":0},{"x":1266,"y":757,"score":60,"level":0},{"x":1316,"y":757,"score":241,"level":0},{"x":1356,"y":757,"score":84,"level":0},{"x":1382,"y":757,"score":62,"level":0},{"x":1435,"y":757,"score":109,"level":0},{"x":1455,"y":757,"score":31,"level":0},{"x":1465,"y":757,"score":52,"level":0},{"x":1473,"y":757,"score":94,"level":0},{"x":502,"y":758,"score":57,"level":0},{"x":566,"y":758,"score":88,"level":0},{"x":598,"y":758,"score":74,"level":0},{"x":611,"y":758,"score":128,"level":0},{"x":701,"y":758,"score":121,"level":0},{"x":752,"y":758,"score":74,"level":0},{"x":791,"y":758,"score":27,"level":0},{"x":799,"y":758,"score":58,"level":0},{"x":815,"y":758,"score":173,"level":0},{"x":821,"y":758,"score":107,"level":0},{"x":871,"y":758,"score":123,"level":0},{"x":877,"y":758,"score":175,"level":0},{"x":892,"y":758,"score":213,"level":0},{"x":957,"y":758,"score":86,"level":0},{"x":1011,"y":758,"score":92,"level":0},{"x":1018,"y":758,"score":28,"level":0},{"x":1045,"y":758,"score":79,"level":0},{"x":1167,"y":758,"score":29,"level":0},{"x":1268,"y":758,"score":120,"level":0},{"x":1392,"y":758,"score":79,"level":0},{"x":1405,"y":758,"score":72,"level":0},{"x":1415,"y":758,"score":32,"level":0},{"x":1450,"y":758,"score":119,"level":0},{"x":1477,"y":758,"score":69,"level":0},{"x":390,"y":759,"score":88,"level":0},{"x":522,"y":759,"score":26,"level":0},{"x":618,"y":759,"score":82,"level":0},{"x":621,"y":759,"score":26,"level":0},{"x":683,"y":759,"score":42,"level":0},{"x":744,"y":759,"score":32,"level":0},{"x":809,"y":759,"score":79,"level":0},{"x":902,"y":759,"score":62,"level":0},{"x":907,"y":759,"score":40,"level":0},{"x":942,"y":759,"score":64,"level":0},{"x":962,"y":759,"score":49,"level":0},{"x":990,"y":759,"score":317,"level":0},{"x":997,"y":759,"score":98,"level":0},{"x":1078,"y":759,"score":44,"level":0},{"x":1085,"y":759,"score":63,"level":0},{"x":1100,"y":759,"score":87,"level":0},{"x":1210,"y":759,"score":106,"level":0},{"x":1285,"y":759,"score":70,"level":0},{"x":1365,"y":759,"score":40,"level":0},{"x":497,"y":760,"score":117,"level":0},{"x":826,"y":760,"score":69,"level":0},{"x":857,"y":760,"score":108,"level":0},{"x":883,"y":760,"score":32,"level":0},{"x":920,"y":760,"score":32,"level":0},{"x":984,"y":760,"score":214,"level":0},{"x":1026,"y":760,"score":145,"level":0},{"x":1033,"y":760,"score":171,"level":0},{"x":1135,"y":760,"score":31,"level":0},{"x":1213,"y":760,"score":146,"level":0},{"x":1268,"y":760,"score":57,"level":0},{"x":1275,"y":760,"score":167,"level":0},{"x":1283,"y":760,"score":67,"level":0},{"x":1345,"y":760,"score":125,"level":0},{"x":1424,"y":760,"score":111,"level":0},{"x":1432,"y":760,"score":126,"level":0},{"x":1445,"y":760,"score":64,"level":0},{"x":1461,"y":760,"score":137,"level":0},{"x":1466,"y":760,"score":184,"level":0},{"x":396,"y":761,"score":57,"level":0},{"x":416,"y":761,"score":91,"level":0},{"x":465,"y":761,"score":42,"level":0},{"x":467,"y":761,"score":31,"level":0},{"x":546,"y":761,"score":129,"level":0},{"x":583,"y":761,"score":86,"level":0},{"x":594,"y":761,"score":49,"level":0},{"x":671,"y":761,"score":46,"level":0},{"x":677,"y":761,"score":65,"level":0},{"x":696,"y":761,"score":73,"level":0},{"x":844,"y":761,"score":31,"level":0},{"x":862,"y":761,"score":69,"level":0},{"x":916,"y":761,"score":31,"level":0},{"x":966,"y":761,"score":99,"level":0},{"x":1048,"y":761,"score":50,"level":0},{"x":1169,"y":761,"score":54,"level":0},{"x":1259,"y":761,"score":90,"level":0},{"x":1294,"y":761,"score":201,"level":0},{"x":1337,"y":761,"score":42,"level":0},{"x":1448,"y":761,"score":54,"level":0},{"x":377,"y":762,"score":109,"level":0},{"x":489,"y":762,"score":62,"level":0},{"x":535,"y":762,"score":52,"level":0},{"x":540,"y":762,"score":42,"level":0},{"x":553,"y":762,"score":132,"level":0},{"x":699,"y":762,"score":74,"level":0},{"x":705,"y":762,"score":42,"level":0},{"x":914,"y":762,"score":41,"level":0},{"x":1010,"y":762,"score":55,"level":0},{"x":1056,"y":762,"score":159,"level":0},{"x":1091,"y":762,"score":112,"level":0},{"x":1183,"y":762,"score":26,"level":0},{"x":1238,"y":762,"score":45,"level":0},{"x":1289,"y":762,"score":111,"level":0},{"x":1317,"y":762,"score":48,"level":0},{"x":1399,"y":762,"score":65,"level":0},{"x":1418,"y":762,"score":41,"level":0},{"x":1430,"y":762,"score":52,"level":0},{"x":1455,"y":762,"score":102,"level":0},{"x":1489,"y":762,"score":172,"level":0},{"x":401,"y":763,"score":37,"level":0},{"x":441,"y":763,"score":92,"level":0},{"x":504,"y":763,"score":39,"level":0},{"x":515,"y":763,"score":33,"level":0},{"x":522,"y":763,"score":43,"level":0},{"x":558,"y":763,"score":47,"level":0},{"x":566,"y":763,"score":68,"level":0},{"x":633,"y":763,"score":70,"level":0},{"x":638,"y":763,"score":28,"level":0},{"x":690,"y":763,"score":36,"level":0},{"x":749,"y":763,"score":46,"level":0},{"x":854,"y":763,"score":31,"level":0},{"x":961,"y":763,"score":62,"level":0},{"x":974,"y":763,"score":45,"level":0},{"x":1003,"y":763,"score":50,"level":0},{"x":1016,"y":763,"score":66,"level":0},{"x":1222,"y":763,"score":161,"level":0},{"x":1281,"y":763,"score":97,"level":0},{"x":1405,"y":763,"score":215,"level":0},{"x":1423,"y":763,"score":92,"level":0},{"x":1436,"y":763,"score":111,"level":0},{"x":1474,"y":763,"score":45,"level":0},{"x":381,"y":764,"score":98,"level":0},{"x":412,"y":764,"score":116,"level":0},{"x":436,"y":764,"score":31,"level":0},{"x":477,"y":764,"score":74,"level":0},{"x":488,"y":764,"score":53,"level":0},{"x":528,"y":764,"score":80,"level":0},{"x":791,"y":764,"score":53,"level":0},{"x":809,"y":764,"score":48,"level":0},{"x":872,"y":764,"score":80,"level":0},{"x":880,"y":764,"score":75,"level":0},{"x":979,"y":764,"score":53,"level":0},{"x":991,"y":764,"score":176,"level":0},{"x":1042,"y":764,"score":170,"level":0},{"x":1147,"y":764,"score":34,"level":0},{"x":1208,"y":764,"score":55,"level":0},{"x":1328,"y":764,"score":58,"level":0},{"x":625,"y":765,"score":152,"level":0},{"x":727,"y":765,"score":107,"level":0},{"x":773,"y":765,"score":39,"level":0},{"x":839,"y":765,"score":122,"level":0},{"x":856,"y":765,"score":122,"level":0},{"x":1006,"y":765,"score":107,"level":0},{"x":1101,"y":765,"score":85,"level":0},{"x":1110,"y":765,"score":188,"level":0},{"x":1137,"y":765,"score":136,"level":0},{"x":1142,"y":765,"score":130,"level":0},{"x":1156,"y":765,"score":72,"level":0},{"x":1167,"y":765,"score":53,"level":0},{"x":1227,"y":765,"score":74,"level":0},{"x":1232,"y":765,"score":35,"level":0},{"x":1264,"y":765,"score":36,"level":0},{"x":1287,"y":765,"score":203,"level":0},{"x":1292,"y":765,"score":159,"level":0},{"x":1342,"y":765,"score":28,"level":0},{"x":1353,"y":765,"score":187,"level":0},{"x":1431,"y":765,"score":124,"level":0},{"x":1444,"y":765,"score":160,"level":0},{"x":574,"y":766,"score":70,"level":0},{"x":697,"y":766,"score":151,"level":0},{"x":710,"y":766,"score":73,"level":0},{"x":830,"y":766,"score":316,"level":0},{"x":845,"y":766,"score":129,"level":0},{"x":1013,"y":766,"score":120,"level":0},{"x":1039,"y":766,"score":91,"level":0},{"x":1099,"y":766,"score":98,"level":0},{"x":1268,"y":766,"score":47,"level":0},{"x":1276,"y":766,"score":43,"level":0},{"x":1302,"y":766,"score":34,"level":0},{"x":1423,"y":766,"score":138,"level":0},{"x":1460,"y":766,"score":38,"level":0},{"x":1479,"y":766,"score":51,"level":0},{"x":394,"y":767,"score":30,"level":0},{"x":470,"y":767,"score":26,"level":0},{"x":498,"y":767,"score":136,"level":0},{"x":595,"y":767,"score":34,"level":0},{"x":675,"y":767,"score":41,"level":0},{"x":691,"y":767,"score":84,"level":0},{"x":722,"y":767,"score":132,"level":0},{"x":867,"y":767,"score":48,"level":0},{"x":898,"y":767,"score":202,"level":0},{"x":913,"y":767,"score":63,"level":0},{"x":1252,"y":767,"score":61,"level":0},{"x":1292,"y":767,"score":146,"level":0},{"x":1443,"y":767,"score":88,"level":0},{"x":1455,"y":767,"score":28,"level":0},{"x":513,"y":768,"score":61,"level":0},{"x":521,"y":768,"score":71,"level":0},{"x":532,"y":768,"score":130,"level":0},{"x":554,"y":768,"score":34,"level":0},{"x":587,"y":768,"score":28,"level":0},{"x":606,"y":768,"score":112,"level":0},{"x":734,"y":768,"score":32,"level":0},{"x":750,"y":768,"score":55,"level":0},{"x":755,"y":768,"score":53,"level":0},{"x":795,"y":768,"score":26,"level":0},{"x":847,"y":768,"score":100,"level":0},{"x":922,"y":768,"score":62,"level":0},{"x":984,"y":768,"score":183,"level":0},{"x":1050,"y":768,"score":79,"level":0},{"x":1092,"y":768,"score":42,"level":0},{"x":1104,"y":768,"score":151,"level":0},{"x":1118,"y":768,"score":152,"level":0},{"x":1156,"y":768,"score":84,"level":0},{"x":1158,"y":768,"score":82,"level":0},{"x":1391,"y":768,"score":80,"level":0},{"x":1411,"y":768,"score":84,"level":0},{"x":1417,"y":768,"score":115,"level":0},{"x":382,"y":769,"score":57,"level":0},{"x":492,"y":769,"score":140,"level":0},{"x":541,"y":769,"score":32,"level":0},{"x":670,"y":769,"score":38,"level":0},{"x":784,"y":769,"score":60,"level":0},{"x":810,"y":769,"score":27,"level":0},{"x":874,"y":769,"score":190,"level":0},{"x":888,"y":769,"score":150,"level":0},{"x":1009,"y":769,"score":231,"level":0},{"x":1162,"y":769,"score":86,"level":0},{"x":1165,"y":769,"score":79,"level":0},{"x":1195,"y":769,"score":168,"level":0},{"x":1222,"y":769,"score":166,"level":0},{"x":1237,"y":769,"score":122,"level":0},{"x":1258,"y":769,"score":86,"level":0},{"x":1273,"y":769,"score":64,"level":0},{"x":1282,"y":769,"score":26,"level":0},{"x":1406,"y":769,"score":62,"level":0},{"x":1469,"y":769,"score":114,"level":0},{"x":391,"y":770,"score":65,"level":0},{"x":408,"y":770,"score":38,"level":0},{"x":418,"y":770,"score":91,"level":0},{"x":441,"y":770,"score":153,"level":0},{"x":583,"y":770,"score":34,"level":0},{"x":744,"y":770,"score":60,"level":0},{"x":978,"y":770,"score":65,"level":0},{"x":1108,"y":770,"score":184,"level":0},{"x":1217,"y":770,"score":148,"level":0},{"x":1227,"y":770,"score":124,"level":0},{"x":1247,"y":770,"score":301,"level":0},{"x":1260,"y":770,"score":83,"level":0},{"x":1284,"y":770,"score":125,"level":0},{"x":1309,"y":770,"score":42,"level":0},{"x":1338,"y":770,"score":56,"level":0},{"x":402,"y":771,"score":102,"level":0},{"x":556,"y":771,"score":44,"level":0},{"x":615,"y":771,"score":89,"level":0},{"x":623,"y":771,"score":102,"level":0},{"x":690,"y":771,"score":55,"level":0},{"x":718,"y":771,"score":124,"level":0},{"x":734,"y":771,"score":38,"level":0},{"x":821,"y":771,"score":44,"level":0},{"x":837,"y":771,"score":43,"level":0},{"x":894,"y":771,"score":35,"level":0},{"x":1232,"y":771,"score":41,"level":0},{"x":1265,"y":771,"score":236,"level":0},{"x":1276,"y":771,"score":92,"level":0},{"x":1401,"y":771,"score":128,"level":0},{"x":377,"y":772,"score":90,"level":0},{"x":435,"y":772,"score":82,"level":0},{"x":448,"y":772,"score":173,"level":0},{"x":528,"y":772,"score":167,"level":0},{"x":534,"y":772,"score":103,"level":0},{"x":594,"y":772,"score":126,"level":0},{"x":672,"y":772,"score":60,"level":0},{"x":724,"y":772,"score":68,"level":0},{"x":830,"y":772,"score":37,"level":0},{"x":1007,"y":772,"score":31,"level":0},{"x":1038,"y":772,"score":64,"level":0},{"x":1046,"y":772,"score":242,"level":0},{"x":1144,"y":772,"score":64,"level":0},{"x":1206,"y":772,"score":34,"level":0},{"x":1210,"y":772,"score":28,"level":0},{"x":1345,"y":772,"score":100,"level":0},{"x":1365,"y":772,"score":46,"level":0},{"x":1466,"y":772,"score":62,"level":0},{"x":414,"y":773,"score":59,"level":0},{"x":488,"y":773,"score":66,"level":0},{"x":517,"y":773,"score":46,"level":0},{"x":520,"y":773,"score":48,"level":0},{"x":576,"y":773,"score":55,"level":0},{"x":709,"y":773,"score":63,"level":0},{"x":711,"y":773,"score":81,"level":0},{"x":821,"y":773,"score":35,"level":0},{"x":857,"y":773,"score":85,"level":0},{"x":870,"y":773,"score":143,"level":0},{"x":899,"y":773,"score":150,"level":0},{"x":974,"y":773,"score":32,"level":0},{"x":1013,"y":773,"score":91,"level":0},{"x":1059,"y":773,"score":66,"level":0},{"x":1099,"y":773,"score":111,"level":0},{"x":1105,"y":773,"score":271,"level":0},{"x":1127,"y":773,"score":79,"level":0},{"x":1168,"y":773,"score":91,"level":0},{"x":1352,"y":773,"score":130,"level":0},{"x":1410,"y":773,"score":136,"level":0},{"x":1442,"y":773,"score":96,"level":0},{"x":1460,"y":773,"score":148,"level":0},{"x":1471,"y":773,"score":88,"level":0},{"x":1483,"y":773,"score":52,"level":0},{"x":539,"y":774,"score":52,"level":0},{"x":644,"y":774,"score":41,"level":0},{"x":674,"y":774,"score":40,"level":0},{"x":852,"y":774,"score":99,"level":0},{"x":888,"y":774,"score":147,"level":0},{"x":912,"y":774,"score":53,"level":0},{"x":928,"y":774,"score":36,"level":0},{"x":1112,"y":774,"score":161,"level":0},{"x":1120,"y":774,"score":194,"level":0},{"x":1125,"y":774,"score":36,"level":0},{"x":1133,"y":774,"score":227,"level":0},{"x":1139,"y":774,"score":177,"level":0},{"x":1161,"y":774,"score":102,"level":0},{"x":1175,"y":774,"score":64,"level":0},{"x":1314,"y":774,"score":168,"level":0},{"x":1416,"y":774,"score":139,"level":0},{"x":1422,"y":774,"score":205,"level":0},{"x":1429,"y":774,"score":69,"level":0},{"x":1435,"y":774,"score":57,"level":0},{"x":1473,"y":774,"score":85,"level":0},{"x":493,"y":775,"score":63,"level":0},{"x":588,"y":775,"score":98,"level":0},{"x":620,"y":775,"score":31,"level":0},{"x":715,"y":775,"score":59,"level":0},{"x":722,"y":775,"score":71,"level":0},{"x":778,"y":775,"score":46,"level":0},{"x":827,"y":775,"score":136,"level":0},{"x":870,"y":775,"score":112,"level":0},{"x":996,"y":775,"score":57,"level":0},{"x":1033,"y":775,"score":74,"level":0},{"x":1060,"y":775,"score":70,"level":0},{"x":1149,"y":775,"score":72,"level":0},{"x":1178,"y":775,"score":106,"level":0},{"x":1217,"y":775,"score":40,"level":0},{"x":1261,"y":775,"score":65,"level":0},{"x":1271,"y":775,"score":68,"level":0},{"x":1321,"y":775,"score":60,"level":0},{"x":1387,"y":775,"score":42,"level":0},{"x":404,"y":776,"score":56,"level":0},{"x":446,"y":776,"score":47,"level":0},{"x":516,"y":776,"score":36,"level":0},{"x":607,"y":776,"score":55,"level":0},{"x":742,"y":776,"score":32,"level":0},{"x":815,"y":776,"score":26,"level":0},{"x":838,"y":776,"score":142,"level":0},{"x":864,"y":776,"score":90,"level":0},{"x":875,"y":776,"score":41,"level":0},{"x":882,"y":776,"score":151,"level":0},{"x":899,"y":776,"score":70,"level":0},{"x":1074,"y":776,"score":58,"level":0},{"x":1155,"y":776,"score":39,"level":0},{"x":1228,"y":776,"score":76,"level":0},{"x":1234,"y":776,"score":29,"level":0},{"x":1248,"y":776,"score":247,"level":0},{"x":1362,"y":776,"score":34,"level":0},{"x":392,"y":777,"score":36,"level":0},{"x":441,"y":777,"score":41,"level":0},{"x":455,"y":777,"score":32,"level":0},{"x":522,"y":777,"score":126,"level":0},{"x":594,"y":777,"score":29,"level":0},{"x":693,"y":777,"score":27,"level":0},{"x":695,"y":777,"score":40,"level":0},{"x":749,"y":777,"score":26,"level":0},{"x":922,"y":777,"score":141,"level":0},{"x":1061,"y":777,"score":43,"level":0},{"x":1081,"y":777,"score":62,"level":0},{"x":1109,"y":777,"score":28,"level":0},{"x":1174,"y":777,"score":33,"level":0},{"x":1185,"y":777,"score":170,"level":0},{"x":1202,"y":777,"score":92,"level":0},{"x":1207,"y":777,"score":128,"level":0},{"x":1212,"y":777,"score":43,"level":0},{"x":1275,"y":777,"score":45,"level":0},{"x":1335,"y":777,"score":83,"level":0},{"x":1399,"y":777,"score":80,"level":0},{"x":505,"y":778,"score":29,"level":0},{"x":632,"y":778,"score":160,"level":0},{"x":652,"y":778,"score":102,"level":0},{"x":709,"y":778,"score":94,"level":0},{"x":781,"y":778,"score":46,"level":0},{"x":909,"y":778,"score":98,"level":0},{"x":1049,"y":778,"score":174,"level":0},{"x":1052,"y":778,"score":147,"level":0},{"x":1067,"y":778,"score":40,"level":0},{"x":1088,"y":778,"score":42,"level":0},{"x":1104,"y":778,"score":66,"level":0},{"x":1166,"y":778,"score":37,"level":0},{"x":1223,"y":778,"score":59,"level":0},{"x":1451,"y":778,"score":54,"level":0},{"x":1470,"y":778,"score":99,"level":0},{"x":1475,"y":778,"score":103,"level":0},{"x":475,"y":779,"score":43,"level":0},{"x":511,"y":779,"score":64,"level":0},{"x":516,"y":779,"score":29,"level":0},{"x":539,"y":779,"score":52,"level":0},{"x":547,"y":779,"score":69,"level":0},{"x":564,"y":779,"score":170,"level":0},{"x":616,"y":779,"score":53,"level":0},{"x":731,"y":779,"score":123,"level":0},{"x":736,"y":779,"score":130,"level":0},{"x":783,"y":779,"score":52,"level":0},{"x":831,"y":779,"score":195,"level":0},{"x":929,"y":779,"score":94,"level":0},{"x":957,"y":779,"score":43,"level":0},{"x":1016,"y":779,"score":33,"level":0},{"x":1081,"y":779,"score":65,"level":0},{"x":1144,"y":779,"score":178,"level":0},{"x":1199,"y":779,"score":61,"level":0},{"x":1372,"y":779,"score":79,"level":0},{"x":1421,"y":779,"score":126,"level":0},{"x":1437,"y":779,"score":115,"level":0},{"x":1484,"y":779,"score":90,"level":0},{"x":429,"y":780,"score":30,"level":0},{"x":439,"y":780,"score":111,"level":0},{"x":500,"y":780,"score":39,"level":0},{"x":874,"y":780,"score":64,"level":0},{"x":916,"y":780,"score":33,"level":0},{"x":948,"y":780,"score":41,"level":0},{"x":1059,"y":780,"score":112,"level":0},{"x":1071,"y":780,"score":45,"level":0},{"x":1112,"y":780,"score":33,"level":0},{"x":1120,"y":780,"score":234,"level":0},{"x":1125,"y":780,"score":168,"level":0},{"x":1161,"y":780,"score":51,"level":0},{"x":1268,"y":780,"score":183,"level":0},{"x":1274,"y":780,"score":201,"level":0},{"x":1291,"y":780,"score":30,"level":0},{"x":1309,"y":780,"score":44,"level":0},{"x":1317,"y":780,"score":117,"level":0},{"x":1472,"y":780,"score":31,"level":0},{"x":485,"y":781,"score":94,"level":0},{"x":538,"y":781,"score":99,"level":0},{"x":595,"y":781,"score":42,"level":0},{"x":742,"y":781,"score":89,"level":0},{"x":761,"y":781,"score":43,"level":0},{"x":858,"y":781,"score":106,"level":0},{"x":906,"y":781,"score":90,"level":0},{"x":913,"y":781,"score":37,"level":0},{"x":956,"y":781,"score":32,"level":0},{"x":1031,"y":781,"score":125,"level":0},{"x":1075,"y":781,"score":82,"level":0},{"x":1135,"y":781,"score":123,"level":0},{"x":1164,"y":781,"score":98,"level":0},{"x":1174,"y":781,"score":60,"level":0},{"x":1247,"y":781,"score":142,"level":0},{"x":1256,"y":781,"score":53,"level":0},{"x":1339,"y":781,"score":67,"level":0},{"x":1460,"y":781,"score":304,"level":0},{"x":445,"y":782,"score":54,"level":0},{"x":544,"y":782,"score":42,"level":0},{"x":582,"y":782,"score":117,"level":0},{"x":712,"y":782,"score":224,"level":0},{"x":789,"y":782,"score":112,"level":0},{"x":801,"y":782,"score":68,"level":0},{"x":834,"y":782,"score":164,"level":0},{"x":849,"y":782,"score":26,"level":0},{"x":855,"y":782,"score":80,"level":0},{"x":901,"y":782,"score":278,"level":0},{"x":1033,"y":782,"score":59,"level":0},{"x":1038,"y":782,"score":96,"level":0},{"x":1085,"y":782,"score":89,"level":0},{"x":1170,"y":782,"score":69,"level":0},{"x":1193,"y":782,"score":115,"level":0},{"x":1265,"y":782,"score":84,"level":0},{"x":1303,"y":782,"score":76,"level":0},{"x":1313,"y":782,"score":149,"level":0},{"x":1387,"y":782,"score":118,"level":0},{"x":1453,"y":782,"score":153,"level":0},{"x":1465,"y":782,"score":62,"level":0},{"x":506,"y":783,"score":66,"level":0},{"x":525,"y":783,"score":45,"level":0},{"x":588,"y":783,"score":60,"level":0},{"x":687,"y":783,"score":121,"level":0},{"x":707,"y":783,"score":30,"level":0},{"x":817,"y":783,"score":75,"level":0},{"x":921,"y":783,"score":86,"level":0},{"x":940,"y":783,"score":48,"level":0},{"x":967,"y":783,"score":86,"level":0},{"x":1068,"y":783,"score":39,"level":0},{"x":1074,"y":783,"score":49,"level":0},{"x":1110,"y":783,"score":75,"level":0},{"x":1186,"y":783,"score":27,"level":0},{"x":1220,"y":783,"score":101,"level":0},{"x":1238,"y":783,"score":82,"level":0},{"x":1283,"y":783,"score":65,"level":0},{"x":1472,"y":783,"score":84,"level":0},{"x":1477,"y":783,"score":91,"level":0},{"x":420,"y":784,"score":154,"level":0},{"x":486,"y":784,"score":87,"level":0},{"x":511,"y":784,"score":31,"level":0},{"x":565,"y":784,"score":28,"level":0},{"x":572,"y":784,"score":67,"level":0},{"x":610,"y":784,"score":31,"level":0},{"x":721,"y":784,"score":38,"level":0},{"x":837,"y":784,"score":43,"level":0},{"x":871,"y":784,"score":76,"level":0},{"x":878,"y":784,"score":151,"level":0},{"x":928,"y":784,"score":80,"level":0},{"x":958,"y":784,"score":35,"level":0},{"x":974,"y":784,"score":48,"level":0},{"x":980,"y":784,"score":49,"level":0},{"x":1002,"y":784,"score":90,"level":0},{"x":1044,"y":784,"score":187,"level":0},{"x":1051,"y":784,"score":186,"level":0},{"x":1056,"y":784,"score":230,"level":0},{"x":1107,"y":784,"score":63,"level":0},{"x":1209,"y":784,"score":199,"level":0},{"x":1252,"y":784,"score":82,"level":0},{"x":1300,"y":784,"score":71,"level":0},{"x":1310,"y":784,"score":166,"level":0},{"x":1328,"y":784,"score":60,"level":0},{"x":1362,"y":784,"score":26,"level":0},{"x":1397,"y":784,"score":59,"level":0},{"x":1406,"y":784,"score":26,"level":0},{"x":1426,"y":784,"score":169,"level":0},{"x":449,"y":785,"score":71,"level":0},{"x":648,"y":785,"score":108,"level":0},{"x":654,"y":785,"score":52,"level":0},{"x":659,"y":785,"score":43,"level":0},{"x":733,"y":785,"score":65,"level":0},{"x":800,"y":785,"score":27,"level":0},{"x":967,"y":785,"score":66,"level":0},{"x":989,"y":785,"score":130,"level":0},{"x":995,"y":785,"score":43,"level":0},{"x":1009,"y":785,"score":138,"level":0},{"x":1063,"y":785,"score":200,"level":0},{"x":1071,"y":785,"score":44,"level":0},{"x":1100,"y":785,"score":128,"level":0},{"x":1138,"y":785,"score":158,"level":0},{"x":1169,"y":785,"score":79,"level":0},{"x":1214,"y":785,"score":48,"level":0},{"x":1303,"y":785,"score":84,"level":0},{"x":1381,"y":785,"score":73,"level":0},{"x":1411,"y":785,"score":124,"level":0},{"x":1478,"y":785,"score":27,"level":0},{"x":1490,"y":785,"score":29,"level":0},{"x":405,"y":786,"score":82,"level":0},{"x":471,"y":786,"score":88,"level":0},{"x":615,"y":786,"score":36,"level":0},{"x":810,"y":786,"score":95,"level":0},{"x":844,"y":786,"score":43,"level":0},{"x":916,"y":786,"score":56,"level":0},{"x":1023,"y":786,"score":38,"level":0},{"x":1049,"y":786,"score":113,"level":0},{"x":1176,"y":786,"score":184,"level":0},{"x":1188,"y":786,"score":37,"level":0},{"x":1193,"y":786,"score":53,"level":0},{"x":1203,"y":786,"score":184,"level":0},{"x":1248,"y":786,"score":120,"level":0},{"x":1266,"y":786,"score":42,"level":0},{"x":1441,"y":786,"score":116,"level":0},{"x":1471,"y":786,"score":77,"level":0},{"x":495,"y":787,"score":85,"level":0},{"x":541,"y":787,"score":39,"level":0},{"x":562,"y":787,"score":49,"level":0},{"x":759,"y":787,"score":113,"level":0},{"x":767,"y":787,"score":42,"level":0},{"x":896,"y":787,"score":65,"level":0},{"x":907,"y":787,"score":152,"level":0},{"x":1084,"y":787,"score":74,"level":0},{"x":1089,"y":787,"score":76,"level":0},{"x":1095,"y":787,"score":129,"level":0},{"x":1134,"y":787,"score":119,"level":0},{"x":1161,"y":787,"score":167,"level":0},{"x":1213,"y":787,"score":86,"level":0},{"x":1230,"y":787,"score":78,"level":0},{"x":1292,"y":787,"score":36,"level":0},{"x":1311,"y":787,"score":93,"level":0},{"x":1317,"y":787,"score":69,"level":0},{"x":1334,"y":787,"score":66,"level":0},{"x":1375,"y":787,"score":155,"level":0},{"x":1390,"y":787,"score":140,"level":0},{"x":1400,"y":787,"score":96,"level":0},{"x":1418,"y":787,"score":112,"level":0},{"x":1447,"y":787,"score":218,"level":0},{"x":1459,"y":787,"score":186,"level":0},{"x":393,"y":788,"score":42,"level":0},{"x":395,"y":788,"score":40,"level":0},{"x":554,"y":788,"score":49,"level":0},{"x":614,"y":788,"score":28,"level":0},{"x":623,"y":788,"score":29,"level":0},{"x":714,"y":788,"score":207,"level":0},{"x":832,"y":788,"score":48,"level":0},{"x":924,"y":788,"score":37,"level":0},{"x":933,"y":788,"score":48,"level":0},{"x":1181,"y":788,"score":28,"level":0},{"x":1201,"y":788,"score":212,"level":0},{"x":1304,"y":788,"score":31,"level":0},{"x":1326,"y":788,"score":74,"level":0},{"x":1329,"y":788,"score":38,"level":0},{"x":1426,"y":788,"score":152,"level":0},{"x":1435,"y":788,"score":71,"level":0},{"x":1452,"y":788,"score":312,"level":0},{"x":1490,"y":788,"score":37,"level":0},{"x":377,"y":789,"score":29,"level":0},{"x":544,"y":789,"score":79,"level":0},{"x":566,"y":789,"score":84,"level":0},{"x":587,"y":789,"score":45,"level":0},{"x":773,"y":789,"score":33,"level":0},{"x":871,"y":789,"score":155,"level":0},{"x":878,"y":789,"score":43,"level":0},{"x":887,"y":789,"score":69,"level":0},{"x":956,"y":789,"score":29,"level":0},{"x":975,"y":789,"score":84,"level":0},{"x":981,"y":789,"score":55,"level":0},{"x":992,"y":789,"score":73,"level":0},{"x":1043,"y":789,"score":189,"level":0},{"x":1106,"y":789,"score":68,"level":0},{"x":1109,"y":789,"score":69,"level":0},{"x":1240,"y":789,"score":197,"level":0},{"x":1414,"y":789,"score":31,"level":0},{"x":383,"y":790,"score":45,"level":0},{"x":424,"y":790,"score":93,"level":0},{"x":465,"y":790,"score":67,"level":0},{"x":479,"y":790,"score":32,"level":0},{"x":522,"y":790,"score":123,"level":0},{"x":582,"y":790,"score":159,"level":0},{"x":595,"y":790,"score":53,"level":0},{"x":615,"y":790,"score":45,"level":0},{"x":795,"y":790,"score":81,"level":0},{"x":815,"y":790,"score":84,"level":0},{"x":1038,"y":790,"score":40,"level":0},{"x":1103,"y":790,"score":61,"level":0},{"x":1181,"y":790,"score":100,"level":0},{"x":1257,"y":790,"score":79,"level":0},{"x":1280,"y":790,"score":53,"level":0},{"x":1302,"y":790,"score":81,"level":0},{"x":1325,"y":790,"score":48,"level":0},{"x":1401,"y":790,"score":48,"level":0},{"x":1407,"y":790,"score":187,"level":0},{"x":1469,"y":790,"score":95,"level":0},{"x":471,"y":791,"score":50,"level":0},{"x":599,"y":791,"score":30,"level":0},{"x":631,"y":791,"score":49,"level":0},{"x":649,"y":791,"score":87,"level":0},{"x":657,"y":791,"score":54,"level":0},{"x":693,"y":791,"score":106,"level":0},{"x":809,"y":791,"score":48,"level":0},{"x":833,"y":791,"score":46,"level":0},{"x":914,"y":791,"score":212,"level":0},{"x":926,"y":791,"score":71,"level":0},{"x":952,"y":791,"score":35,"level":0},{"x":961,"y":791,"score":157,"level":0},{"x":967,"y":791,"score":119,"level":0},{"x":1054,"y":791,"score":68,"level":0},{"x":1061,"y":791,"score":50,"level":0},{"x":1106,"y":791,"score":134,"level":0},{"x":1109,"y":791,"score":97,"level":0},{"x":1193,"y":791,"score":112,"level":0},{"x":1209,"y":791,"score":131,"level":0},{"x":1309,"y":791,"score":45,"level":0},{"x":1314,"y":791,"score":79,"level":0},{"x":1333,"y":791,"score":196,"level":0},{"x":1380,"y":791,"score":64,"level":0},{"x":1432,"y":791,"score":41,"level":0},{"x":1442,"y":791,"score":53,"level":0},{"x":383,"y":792,"score":56,"level":0},{"x":413,"y":792,"score":78,"level":0},{"x":491,"y":792,"score":160,"level":0},{"x":498,"y":792,"score":80,"level":0},{"x":732,"y":792,"score":69,"level":0},{"x":741,"y":792,"score":135,"level":0},{"x":749,"y":792,"score":174,"level":0},{"x":829,"y":792,"score":27,"level":0},{"x":987,"y":792,"score":70,"level":0},{"x":998,"y":792,"score":129,"level":0},{"x":1215,"y":792,"score":116,"level":0},{"x":1229,"y":792,"score":76,"level":0},{"x":1293,"y":792,"score":144,"level":0},{"x":1339,"y":792,"score":285,"level":0},{"x":1345,"y":792,"score":39,"level":0},{"x":1350,"y":792,"score":62,"level":0},{"x":1376,"y":792,"score":35,"level":0},{"x":1408,"y":792,"score":81,"level":0},{"x":554,"y":793,"score":30,"level":0},{"x":572,"y":793,"score":94,"level":0},{"x":755,"y":793,"score":92,"level":0},{"x":768,"y":793,"score":26,"level":0},{"x":782,"y":793,"score":184,"level":0},{"x":939,"y":793,"score":40,"level":0},{"x":943,"y":793,"score":32,"level":0},{"x":984,"y":793,"score":49,"level":0},{"x":1012,"y":793,"score":32,"level":0},{"x":1063,"y":793,"score":71,"level":0},{"x":1068,"y":793,"score":73,"level":0},{"x":1085,"y":793,"score":74,"level":0},{"x":1114,"y":793,"score":33,"level":0},{"x":1134,"y":793,"score":57,"level":0},{"x":1140,"y":793,"score":58,"level":0},{"x":1147,"y":793,"score":30,"level":0},{"x":1164,"y":793,"score":170,"level":0},{"x":1188,"y":793,"score":75,"level":0},{"x":1273,"y":793,"score":36,"level":0},{"x":1361,"y":793,"score":26,"level":0},{"x":1418,"y":793,"score":52,"level":0},{"x":1439,"y":793,"score":60,"level":0},{"x":1447,"y":793,"score":100,"level":0},{"x":1452,"y":793,"score":243,"level":0},{"x":1459,"y":793,"score":189,"level":0},{"x":377,"y":794,"score":39,"level":0},{"x":418,"y":794,"score":34,"level":0},{"x":517,"y":794,"score":192,"level":0},{"x":523,"y":794,"score":66,"level":0},{"x":532,"y":794,"score":32,"level":0},{"x":558,"y":794,"score":58,"level":0},{"x":577,"y":794,"score":61,"level":0},{"x":699,"y":794,"score":50,"level":0},{"x":707,"y":794,"score":65,"level":0},{"x":718,"y":794,"score":95,"level":0},{"x":797,"y":794,"score":152,"level":0},{"x":804,"y":794,"score":93,"level":0},{"x":811,"y":794,"score":73,"level":0},{"x":861,"y":794,"score":38,"level":0},{"x":886,"y":794,"score":34,"level":0},{"x":937,"y":794,"score":73,"level":0},{"x":980,"y":794,"score":39,"level":0},{"x":987,"y":794,"score":35,"level":0},{"x":993,"y":794,"score":36,"level":0},{"x":1042,"y":794,"score":153,"level":0},{"x":1057,"y":794,"score":30,"level":0},{"x":1100,"y":794,"score":89,"level":0},{"x":1176,"y":794,"score":78,"level":0},{"x":1203,"y":794,"score":88,"level":0},{"x":1231,"y":794,"score":109,"level":0},{"x":1241,"y":794,"score":151,"level":0},{"x":1248,"y":794,"score":253,"level":0},{"x":1346,"y":794,"score":33,"level":0},{"x":1389,"y":794,"score":34,"level":0},{"x":1428,"y":794,"score":128,"level":0},{"x":1476,"y":794,"score":126,"level":0},{"x":1489,"y":794,"score":98,"level":0},{"x":403,"y":795,"score":110,"level":0},{"x":409,"y":795,"score":66,"level":0},{"x":439,"y":795,"score":50,"level":0},{"x":513,"y":795,"score":55,"level":0},{"x":625,"y":795,"score":114,"level":0},{"x":668,"y":795,"score":36,"level":0},{"x":1008,"y":795,"score":56,"level":0},{"x":1091,"y":795,"score":92,"level":0},{"x":1120,"y":795,"score":165,"level":0},{"x":1258,"y":795,"score":112,"level":0},{"x":1292,"y":795,"score":47,"level":0},{"x":1300,"y":795,"score":86,"level":0},{"x":1306,"y":795,"score":52,"level":0},{"x":1317,"y":795,"score":123,"level":0},{"x":1327,"y":795,"score":27,"level":0},{"x":1464,"y":795,"score":36,"level":0},{"x":423,"y":796,"score":78,"level":0},{"x":429,"y":796,"score":81,"level":0},{"x":468,"y":796,"score":30,"level":0},{"x":511,"y":796,"score":43,"level":0},{"x":577,"y":796,"score":81,"level":0},{"x":774,"y":796,"score":37,"level":0},{"x":788,"y":796,"score":93,"level":0},{"x":796,"y":796,"score":182,"level":0},{"x":1003,"y":796,"score":113,"level":0},{"x":1134,"y":796,"score":68,"level":0},{"x":1150,"y":796,"score":114,"level":0},{"x":1156,"y":796,"score":55,"level":0},{"x":1279,"y":796,"score":51,"level":0},{"x":1455,"y":796,"score":154,"level":0},{"x":377,"y":797,"score":52,"level":0},{"x":413,"y":797,"score":70,"level":0},{"x":598,"y":797,"score":85,"level":0},{"x":690,"y":797,"score":36,"level":0},{"x":811,"y":797,"score":47,"level":0},{"x":931,"y":797,"score":34,"level":0},{"x":951,"y":797,"score":191,"level":0},{"x":982,"y":797,"score":87,"level":0},{"x":1061,"y":797,"score":62,"level":0},{"x":1115,"y":797,"score":141,"level":0},{"x":1121,"y":797,"score":83,"level":0},{"x":1181,"y":797,"score":28,"level":0},{"x":1207,"y":797,"score":60,"level":0},{"x":1213,"y":797,"score":62,"level":0},{"x":1300,"y":797,"score":73,"level":0},{"x":1377,"y":797,"score":104,"level":0},{"x":1401,"y":797,"score":52,"level":0},{"x":1405,"y":797,"score":26,"level":0},{"x":1442,"y":797,"score":96,"level":0},{"x":427,"y":798,"score":27,"level":0},{"x":471,"y":798,"score":59,"level":0},{"x":521,"y":798,"score":47,"level":0},{"x":725,"y":798,"score":54,"level":0},{"x":733,"y":798,"score":70,"level":0},{"x":746,"y":798,"score":96,"level":0},{"x":759,"y":798,"score":52,"level":0},{"x":882,"y":798,"score":97,"level":0},{"x":923,"y":798,"score":122,"level":0},{"x":976,"y":798,"score":44,"level":0},{"x":990,"y":798,"score":38,"level":0},{"x":1136,"y":798,"score":77,"level":0},{"x":1161,"y":798,"score":54,"level":0},{"x":1173,"y":798,"score":46,"level":0},{"x":1318,"y":798,"score":82,"level":0},{"x":1418,"y":798,"score":77,"level":0},{"x":1430,"y":798,"score":54,"level":0},{"x":1477,"y":798,"score":33,"level":0},{"x":393,"y":799,"score":49,"level":0},{"x":453,"y":799,"score":96,"level":0},{"x":499,"y":799,"score":65,"level":0},{"x":518,"y":799,"score":33,"level":0},{"x":537,"y":799,"score":33,"level":0},{"x":565,"y":799,"score":91,"level":0},{"x":705,"y":799,"score":114,"level":0},{"x":748,"y":799,"score":146,"level":0},{"x":841,"y":799,"score":28,"level":0},{"x":895,"y":799,"score":166,"level":0},{"x":904,"y":799,"score":39,"level":0},{"x":916,"y":799,"score":198,"level":0},{"x":994,"y":799,"score":97,"level":0},{"x":1155,"y":799,"score":60,"level":0},{"x":1179,"y":799,"score":139,"level":0},{"x":1238,"y":799,"score":208,"level":0},{"x":1244,"y":799,"score":67,"level":0},{"x":1290,"y":799,"score":94,"level":0},{"x":1298,"y":799,"score":92,"level":0},{"x":1351,"y":799,"score":176,"level":0},{"x":1485,"y":799,"score":85,"level":0},{"x":386,"y":800,"score":59,"level":0},{"x":447,"y":800,"score":97,"level":0},{"x":460,"y":800,"score":134,"level":0},{"x":719,"y":800,"score":142,"level":0},{"x":741,"y":800,"score":120,"level":0},{"x":772,"y":800,"score":53,"level":0},{"x":863,"y":800,"score":99,"level":0},{"x":960,"y":800,"score":58,"level":0},{"x":1323,"y":800,"score":32,"level":0},{"x":1341,"y":800,"score":135,"level":0},{"x":1389,"y":800,"score":88,"level":0},{"x":1433,"y":800,"score":95,"level":0},{"x":424,"y":801,"score":29,"level":0},{"x":432,"y":801,"score":34,"level":0},{"x":510,"y":801,"score":60,"level":0},{"x":676,"y":801,"score":59,"level":0},{"x":778,"y":801,"score":109,"level":0},{"x":802,"y":801,"score":258,"level":0},{"x":808,"y":801,"score":152,"level":0},{"x":875,"y":801,"score":53,"level":0},{"x":934,"y":801,"score":30,"level":0},{"x":971,"y":801,"score":62,"level":0},{"x":1014,"y":801,"score":51,"level":0},{"x":1024,"y":801,"score":68,"level":0},{"x":1100,"y":801,"score":54,"level":0},{"x":1121,"y":801,"score":73,"level":0},{"x":1132,"y":801,"score":34,"level":0},{"x":1141,"y":801,"score":153,"level":0},{"x":1151,"y":801,"score":69,"level":0},{"x":1158,"y":801,"score":86,"level":0},{"x":1256,"y":801,"score":94,"level":0},{"x":1273,"y":801,"score":31,"level":0},{"x":1285,"y":801,"score":42,"level":0},{"x":1473,"y":801,"score":98,"level":0},{"x":408,"y":802,"score":44,"level":0},{"x":418,"y":802,"score":128,"level":0},{"x":602,"y":802,"score":50,"level":0},{"x":717,"y":802,"score":40,"level":0},{"x":720,"y":802,"score":61,"level":0},{"x":788,"y":802,"score":27,"level":0},{"x":835,"y":802,"score":72,"level":0},{"x":928,"y":802,"score":63,"level":0},{"x":949,"y":802,"score":137,"level":0},{"x":985,"y":802,"score":34,"level":0},{"x":990,"y":802,"score":44,"level":0},{"x":1021,"y":802,"score":34,"level":0},{"x":1077,"y":802,"score":37,"level":0},{"x":1115,"y":802,"score":38,"level":0},{"x":1171,"y":802,"score":122,"level":0},{"x":1201,"y":802,"score":59,"level":0},{"x":1218,"y":802,"score":164,"level":0},{"x":1229,"y":802,"score":133,"level":0},{"x":1235,"y":802,"score":269,"level":0},{"x":1364,"y":802,"score":240,"level":0},{"x":1409,"y":802,"score":44,"level":0},{"x":1448,"y":802,"score":75,"level":0},{"x":1467,"y":802,"score":160,"level":0},{"x":486,"y":803,"score":36,"level":0},{"x":558,"y":803,"score":88,"level":0},{"x":955,"y":803,"score":90,"level":0},{"x":1009,"y":803,"score":160,"level":0},{"x":1061,"y":803,"score":66,"level":0},{"x":1164,"y":803,"score":64,"level":0},{"x":1184,"y":803,"score":71,"level":0},{"x":1212,"y":803,"score":59,"level":0},{"x":1318,"y":803,"score":75,"level":0},{"x":1331,"y":803,"score":37,"level":0},{"x":1359,"y":803,"score":71,"level":0},{"x":1442,"y":803,"score":120,"level":0},{"x":377,"y":804,"score":41,"level":0},{"x":393,"y":804,"score":144,"level":0},{"x":454,"y":804,"score":28,"level":0},{"x":471,"y":804,"score":26,"level":0},{"x":492,"y":804,"score":129,"level":0},{"x":511,"y":804,"score":121,"level":0},{"x":519,"y":804,"score":84,"level":0},{"x":588,"y":804,"score":123,"level":0},{"x":609,"y":804,"score":35,"level":0},{"x":734,"y":804,"score":73,"level":0},{"x":852,"y":804,"score":177,"level":0},{"x":894,"y":804,"score":74,"level":0},{"x":919,"y":804,"score":43,"level":0},{"x":976,"y":804,"score":64,"level":0},{"x":1085,"y":804,"score":64,"level":0},{"x":1095,"y":804,"score":126,"level":0},{"x":1108,"y":804,"score":119,"level":0},{"x":1123,"y":804,"score":66,"level":0},{"x":1166,"y":804,"score":80,"level":0},{"x":1354,"y":804,"score":63,"level":0},{"x":1370,"y":804,"score":126,"level":0},{"x":1487,"y":804,"score":64,"level":0},{"x":401,"y":805,"score":108,"level":0},{"x":459,"y":805,"score":66,"level":0},{"x":628,"y":805,"score":27,"level":0},{"x":741,"y":805,"score":100,"level":0},{"x":784,"y":805,"score":144,"level":0},{"x":794,"y":805,"score":68,"level":0},{"x":818,"y":805,"score":69,"level":0},{"x":846,"y":805,"score":45,"level":0},{"x":867,"y":805,"score":96,"level":0},{"x":886,"y":805,"score":152,"level":0},{"x":966,"y":805,"score":68,"level":0},{"x":974,"y":805,"score":39,"level":0},{"x":1042,"y":805,"score":64,"level":0},{"x":1047,"y":805,"score":49,"level":0},{"x":1056,"y":805,"score":120,"level":0},{"x":1242,"y":805,"score":56,"level":0},{"x":1376,"y":805,"score":97,"level":0},{"x":1390,"y":805,"score":136,"level":0},{"x":1397,"y":805,"score":30,"level":0},{"x":1403,"y":805,"score":57,"level":0},{"x":1432,"y":805,"score":26,"level":0},{"x":1449,"y":805,"score":51,"level":0},{"x":1454,"y":805,"score":103,"level":0},{"x":1480,"y":805,"score":106,"level":0},{"x":1482,"y":805,"score":82,"level":0},{"x":595,"y":806,"score":113,"level":0},{"x":709,"y":806,"score":84,"level":0},{"x":803,"y":806,"score":64,"level":0},{"x":820,"y":806,"score":35,"level":0},{"x":910,"y":806,"score":28,"level":0},{"x":951,"y":806,"score":90,"level":0},{"x":960,"y":806,"score":57,"level":0},{"x":982,"y":806,"score":36,"level":0},{"x":1087,"y":806,"score":61,"level":0},{"x":1151,"y":806,"score":52,"level":0},{"x":1190,"y":806,"score":169,"level":0},{"x":1233,"y":806,"score":39,"level":0},{"x":1256,"y":806,"score":34,"level":0},{"x":1344,"y":806,"score":92,"level":0},{"x":1473,"y":806,"score":49,"level":0},{"x":383,"y":807,"score":148,"level":0},{"x":548,"y":807,"score":92,"level":0},{"x":688,"y":807,"score":102,"level":0},{"x":694,"y":807,"score":45,"level":0},{"x":705,"y":807,"score":85,"level":0},{"x":747,"y":807,"score":88,"level":0},{"x":833,"y":807,"score":53,"level":0},{"x":843,"y":807,"score":36,"level":0},{"x":925,"y":807,"score":44,"level":0},{"x":944,"y":807,"score":164,"level":0},{"x":1029,"y":807,"score":50,"level":0},{"x":1039,"y":807,"score":78,"level":0},{"x":1069,"y":807,"score":49,"level":0},{"x":1098,"y":807,"score":45,"level":0},{"x":1102,"y":807,"score":82,"level":0},{"x":1116,"y":807,"score":53,"level":0},{"x":1135,"y":807,"score":240,"level":0},{"x":1161,"y":807,"score":57,"level":0},{"x":1214,"y":807,"score":167,"level":0},{"x":1272,"y":807,"score":103,"level":0},{"x":1284,"y":807,"score":88,"level":0},{"x":1435,"y":807,"score":78,"level":0},{"x":418,"y":808,"score":86,"level":0},{"x":559,"y":808,"score":98,"level":0},{"x":602,"y":808,"score":82,"level":0},{"x":680,"y":808,"score":52,"level":0},{"x":835,"y":808,"score":45,"level":0},{"x":1005,"y":808,"score":89,"level":0},{"x":1021,"y":808,"score":88,"level":0},{"x":1163,"y":808,"score":49,"level":0},{"x":1201,"y":808,"score":274,"level":0},{"x":1292,"y":808,"score":42,"level":0},{"x":1298,"y":808,"score":190,"level":0},{"x":1317,"y":808,"score":114,"level":0},{"x":1384,"y":808,"score":218,"level":0},{"x":1440,"y":808,"score":38,"level":0},{"x":1457,"y":808,"score":122,"level":0},{"x":1484,"y":808,"score":26,"level":0},{"x":413,"y":809,"score":79,"level":0},{"x":450,"y":809,"score":38,"level":0},{"x":576,"y":809,"score":45,"level":0},{"x":616,"y":809,"score":50,"level":0},{"x":673,"y":809,"score":36,"level":0},{"x":777,"y":809,"score":99,"level":0},{"x":815,"y":809,"score":82,"level":0},{"x":905,"y":809,"score":91,"level":0},{"x":1000,"y":809,"score":55,"level":0},{"x":1052,"y":809,"score":125,"level":0},{"x":1072,"y":809,"score":121,"level":0},{"x":1084,"y":809,"score":34,"level":0},{"x":1206,"y":809,"score":98,"level":0},{"x":1309,"y":809,"score":119,"level":0},{"x":1468,"y":809,"score":181,"level":0},{"x":391,"y":810,"score":63,"level":0},{"x":393,"y":810,"score":54,"level":0},{"x":469,"y":810,"score":86,"level":0},{"x":741,"y":810,"score":51,"level":0},{"x":827,"y":810,"score":62,"level":0},{"x":876,"y":810,"score":126,"level":0},{"x":878,"y":810,"score":141,"level":0},{"x":957,"y":810,"score":65,"level":0},{"x":972,"y":810,"score":81,"level":0},{"x":996,"y":810,"score":55,"level":0},{"x":1011,"y":810,"score":63,"level":0},{"x":1035,"y":810,"score":46,"level":0},{"x":1142,"y":810,"score":131,"level":0},{"x":1156,"y":810,"score":103,"level":0},{"x":1237,"y":810,"score":249,"level":0},{"x":1293,"y":810,"score":27,"level":0},{"x":1390,"y":810,"score":231,"level":0},{"x":1398,"y":810,"score":63,"level":0},{"x":1443,"y":810,"score":56,"level":0},{"x":1457,"y":810,"score":130,"level":0},{"x":396,"y":811,"score":66,"level":0},{"x":478,"y":811,"score":36,"level":0},{"x":594,"y":811,"score":33,"level":0},{"x":768,"y":811,"score":82,"level":0},{"x":891,"y":811,"score":41,"level":0},{"x":988,"y":811,"score":54,"level":0},{"x":990,"y":811,"score":62,"level":0},{"x":1015,"y":811,"score":63,"level":0},{"x":1087,"y":811,"score":146,"level":0},{"x":1158,"y":811,"score":88,"level":0},{"x":1193,"y":811,"score":159,"level":0},{"x":1227,"y":811,"score":161,"level":0},{"x":1267,"y":811,"score":119,"level":0},{"x":1281,"y":811,"score":266,"level":0},{"x":1329,"y":811,"score":64,"level":0},{"x":1340,"y":811,"score":82,"level":0},{"x":1347,"y":811,"score":176,"level":0},{"x":1374,"y":811,"score":145,"level":0},{"x":1380,"y":811,"score":90,"level":0},{"x":1423,"y":811,"score":37,"level":0},{"x":420,"y":812,"score":45,"level":0},{"x":435,"y":812,"score":67,"level":0},{"x":523,"y":812,"score":66,"level":0},{"x":709,"y":812,"score":52,"level":0},{"x":725,"y":812,"score":44,"level":0},{"x":799,"y":812,"score":65,"level":0},{"x":805,"y":812,"score":58,"level":0},{"x":843,"y":812,"score":44,"level":0},{"x":849,"y":812,"score":43,"level":0},{"x":916,"y":812,"score":26,"level":0},{"x":930,"y":812,"score":108,"level":0},{"x":964,"y":812,"score":232,"level":0},{"x":971,"y":812,"score":96,"level":0},{"x":1010,"y":812,"score":44,"level":0},{"x":1062,"y":812,"score":26,"level":0},{"x":1092,"y":812,"score":90,"level":0},{"x":1214,"y":812,"score":124,"level":0},{"x":1232,"y":812,"score":147,"level":0},{"x":1370,"y":812,"score":198,"level":0},{"x":1405,"y":812,"score":31,"level":0},{"x":1430,"y":812,"score":87,"level":0},{"x":1454,"y":812,"score":111,"level":0},{"x":379,"y":813,"score":116,"level":0},{"x":381,"y":813,"score":60,"level":0},{"x":395,"y":813,"score":60,"level":0},{"x":404,"y":813,"score":43,"level":0},{"x":442,"y":813,"score":63,"level":0},{"x":482,"y":813,"score":79,"level":0},{"x":486,"y":813,"score":69,"level":0},{"x":551,"y":813,"score":169,"level":0},{"x":682,"y":813,"score":75,"level":0},{"x":695,"y":813,"score":44,"level":0},{"x":716,"y":813,"score":130,"level":0},{"x":760,"y":813,"score":105,"level":0},{"x":786,"y":813,"score":91,"level":0},{"x":837,"y":813,"score":189,"level":0},{"x":857,"y":813,"score":196,"level":0},{"x":863,"y":813,"score":103,"level":0},{"x":872,"y":813,"score":36,"level":0},{"x":899,"y":813,"score":53,"level":0},{"x":910,"y":813,"score":181,"level":0},{"x":958,"y":813,"score":34,"level":0},{"x":976,"y":813,"score":88,"level":0},{"x":1040,"y":813,"score":95,"level":0},{"x":1069,"y":813,"score":27,"level":0},{"x":1244,"y":813,"score":45,"level":0},{"x":1286,"y":813,"score":207,"level":0},{"x":1301,"y":813,"score":43,"level":0},{"x":1316,"y":813,"score":139,"level":0},{"x":1334,"y":813,"score":88,"level":0},{"x":1383,"y":813,"score":38,"level":0},{"x":1433,"y":813,"score":147,"level":0},{"x":429,"y":814,"score":152,"level":0},{"x":574,"y":814,"score":32,"level":0},{"x":585,"y":814,"score":55,"level":0},{"x":601,"y":814,"score":108,"level":0},{"x":735,"y":814,"score":40,"level":0},{"x":796,"y":814,"score":106,"level":0},{"x":895,"y":814,"score":48,"level":0},{"x":944,"y":814,"score":153,"level":0},{"x":992,"y":814,"score":43,"level":0},{"x":1020,"y":814,"score":80,"level":0},{"x":1046,"y":814,"score":31,"level":0},{"x":1115,"y":814,"score":40,"level":0},{"x":1174,"y":814,"score":196,"level":0},{"x":1182,"y":814,"score":214,"level":0},{"x":1361,"y":814,"score":58,"level":0},{"x":1396,"y":814,"score":98,"level":0},{"x":1406,"y":814,"score":98,"level":0},{"x":1452,"y":814,"score":80,"level":0},{"x":1461,"y":814,"score":74,"level":0},{"x":1469,"y":814,"score":29,"level":0},{"x":448,"y":815,"score":128,"level":0},{"x":479,"y":815,"score":126,"level":0},{"x":490,"y":815,"score":50,"level":0},{"x":539,"y":815,"score":65,"level":0},{"x":569,"y":815,"score":32,"level":0},{"x":580,"y":815,"score":61,"level":0},{"x":669,"y":815,"score":59,"level":0},{"x":691,"y":815,"score":86,"level":0},{"x":700,"y":815,"score":66,"level":0},{"x":705,"y":815,"score":34,"level":0},{"x":742,"y":815,"score":91,"level":0},{"x":810,"y":815,"score":33,"level":0},{"x":816,"y":815,"score":112,"level":0},{"x":875,"y":815,"score":58,"level":0},{"x":897,"y":815,"score":32,"level":0},{"x":903,"y":815,"score":76,"level":0},{"x":985,"y":815,"score":28,"level":0},{"x":995,"y":815,"score":62,"level":0},{"x":1001,"y":815,"score":67,"level":0},{"x":1029,"y":815,"score":88,"level":0},{"x":1035,"y":815,"score":67,"level":0},{"x":1146,"y":815,"score":52,"level":0},{"x":1278,"y":815,"score":249,"level":0},{"x":1298,"y":815,"score":55,"level":0},{"x":1418,"y":815,"score":61,"level":0},{"x":783,"y":816,"score":79,"level":0},{"x":788,"y":816,"score":156,"level":0},{"x":847,"y":816,"score":28,"level":0},{"x":891,"y":816,"score":32,"level":0},{"x":1007,"y":816,"score":60,"level":0},{"x":1090,"y":816,"score":56,"level":0},{"x":1239,"y":816,"score":30,"level":0},{"x":1252,"y":816,"score":53,"level":0},{"x":1263,"y":816,"score":96,"level":0},{"x":1318,"y":816,"score":64,"level":0},{"x":1327,"y":816,"score":235,"level":0},{"x":1390,"y":816,"score":112,"level":0},{"x":1446,"y":816,"score":91,"level":0},{"x":439,"y":817,"score":82,"level":0},{"x":456,"y":817,"score":78,"level":0},{"x":534,"y":817,"score":77,"level":0},{"x":640,"y":817,"score":33,"level":0},{"x":675,"y":817,"score":33,"level":0},{"x":751,"y":817,"score":102,"level":0},{"x":870,"y":817,"score":69,"level":0},{"x":886,"y":817,"score":82,"level":0},{"x":933,"y":817,"score":41,"level":0},{"x":1013,"y":817,"score":39,"level":0},{"x":1031,"y":817,"score":29,"level":0},{"x":1036,"y":817,"score":97,"level":0},{"x":1080,"y":817,"score":138,"level":0},{"x":1173,"y":817,"score":120,"level":0},{"x":1206,"y":817,"score":106,"level":0},{"x":1231,"y":817,"score":66,"level":0},{"x":1242,"y":817,"score":154,"level":0},{"x":1248,"y":817,"score":81,"level":0},{"x":1313,"y":817,"score":206,"level":0},{"x":381,"y":818,"score":116,"level":0},{"x":396,"y":818,"score":81,"level":0},{"x":406,"y":818,"score":31,"level":0},{"x":491,"y":818,"score":88,"level":0},{"x":785,"y":818,"score":28,"level":0},{"x":823,"y":818,"score":75,"level":0},{"x":863,"y":818,"score":35,"level":0},{"x":965,"y":818,"score":67,"level":0},{"x":1018,"y":818,"score":44,"level":0},{"x":1057,"y":818,"score":41,"level":0},{"x":1087,"y":818,"score":123,"level":0},{"x":1095,"y":818,"score":83,"level":0},{"x":1204,"y":818,"score":31,"level":0},{"x":1209,"y":818,"score":114,"level":0},{"x":1226,"y":818,"score":95,"level":0},{"x":1235,"y":818,"score":27,"level":0},{"x":1250,"y":818,"score":56,"level":0},{"x":1272,"y":818,"score":67,"level":0},{"x":390,"y":819,"score":91,"level":0},{"x":681,"y":819,"score":51,"level":0},{"x":716,"y":819,"score":36,"level":0},{"x":724,"y":819,"score":85,"level":0},{"x":844,"y":819,"score":40,"level":0},{"x":1040,"y":819,"score":60,"level":0},{"x":1052,"y":819,"score":69,"level":0},{"x":1108,"y":819,"score":213,"level":0},{"x":1255,"y":819,"score":43,"level":0},{"x":1262,"y":819,"score":100,"level":0},{"x":1308,"y":819,"score":153,"level":0},{"x":1319,"y":819,"score":53,"level":0},{"x":1452,"y":819,"score":47,"level":0},{"x":1467,"y":819,"score":34,"level":0},{"x":434,"y":820,"score":79,"level":0},{"x":496,"y":820,"score":86,"level":0},{"x":548,"y":820,"score":74,"level":0},{"x":563,"y":820,"score":134,"level":0},{"x":741,"y":820,"score":35,"level":0},{"x":816,"y":820,"score":128,"level":0},{"x":830,"y":820,"score":102,"level":0},{"x":904,"y":820,"score":115,"level":0},{"x":941,"y":820,"score":184,"level":0},{"x":977,"y":820,"score":47,"level":0},{"x":1003,"y":820,"score":104,"level":0},{"x":1009,"y":820,"score":163,"level":0},{"x":1064,"y":820,"score":30,"level":0},{"x":1177,"y":820,"score":26,"level":0},{"x":1182,"y":820,"score":135,"level":0},{"x":1220,"y":820,"score":240,"level":0},{"x":1226,"y":820,"score":133,"level":0},{"x":1282,"y":820,"score":41,"level":0},{"x":1334,"y":820,"score":28,"level":0},{"x":1398,"y":820,"score":117,"level":0},{"x":1406,"y":820,"score":213,"level":0},{"x":1429,"y":820,"score":83,"level":0},{"x":1433,"y":820,"score":97,"level":0},{"x":1441,"y":820,"score":102,"level":0},{"x":476,"y":821,"score":46,"level":0},{"x":525,"y":821,"score":111,"level":0},{"x":603,"y":821,"score":44,"level":0},{"x":659,"y":821,"score":62,"level":0},{"x":756,"y":821,"score":62,"level":0},{"x":835,"y":821,"score":37,"level":0},{"x":947,"y":821,"score":142,"level":0},{"x":997,"y":821,"score":30,"level":0},{"x":1098,"y":821,"score":72,"level":0},{"x":1103,"y":821,"score":90,"level":0},{"x":1158,"y":821,"score":27,"level":0},{"x":1160,"y":821,"score":38,"level":0},{"x":1208,"y":821,"score":38,"level":0},{"x":1237,"y":821,"score":92,"level":0},{"x":1267,"y":821,"score":138,"level":0},{"x":1295,"y":821,"score":172,"level":0},{"x":1323,"y":821,"score":172,"level":0},{"x":1391,"y":821,"score":83,"level":0},{"x":1416,"y":821,"score":74,"level":0},{"x":1453,"y":821,"score":126,"level":0},{"x":1485,"y":821,"score":182,"level":0},{"x":377,"y":822,"score":34,"level":0},{"x":399,"y":822,"score":35,"level":0},{"x":439,"y":822,"score":33,"level":0},{"x":498,"y":822,"score":99,"level":0},{"x":537,"y":822,"score":107,"level":0},{"x":589,"y":822,"score":64,"level":0},{"x":616,"y":822,"score":85,"level":0},{"x":676,"y":822,"score":50,"level":0},{"x":764,"y":822,"score":31,"level":0},{"x":768,"y":822,"score":47,"level":0},{"x":781,"y":822,"score":109,"level":0},{"x":790,"y":822,"score":89,"level":0},{"x":808,"y":822,"score":98,"level":0},{"x":815,"y":822,"score":108,"level":0},{"x":844,"y":822,"score":52,"level":0},{"x":972,"y":822,"score":131,"level":0},{"x":984,"y":822,"score":39,"level":0},{"x":994,"y":822,"score":38,"level":0},{"x":1008,"y":822,"score":50,"level":0},{"x":1022,"y":822,"score":33,"level":0},{"x":1028,"y":822,"score":130,"level":0},{"x":1068,"y":822,"score":54,"level":0},{"x":1090,"y":822,"score":92,"level":0},{"x":1142,"y":822,"score":91,"level":0},{"x":1168,"y":822,"score":86,"level":0},{"x":1230,"y":822,"score":128,"level":0},{"x":1242,"y":822,"score":36,"level":0},{"x":1247,"y":822,"score":141,"level":0},{"x":1253,"y":822,"score":39,"level":0},{"x":1329,"y":822,"score":49,"level":0},{"x":1361,"y":822,"score":30,"level":0},{"x":1448,"y":822,"score":61,"level":0},{"x":451,"y":823,"score":94,"level":0},{"x":459,"y":823,"score":44,"level":0},{"x":473,"y":823,"score":32,"level":0},{"x":701,"y":823,"score":76,"level":0},{"x":707,"y":823,"score":38,"level":0},{"x":722,"y":823,"score":128,"level":0},{"x":729,"y":823,"score":154,"level":0},{"x":744,"y":823,"score":54,"level":0},{"x":779,"y":823,"score":90,"level":0},{"x":840,"y":823,"score":41,"level":0},{"x":912,"y":823,"score":42,"level":0},{"x":1018,"y":823,"score":28,"level":0},{"x":1036,"y":823,"score":59,"level":0},{"x":1138,"y":823,"score":89,"level":0},{"x":1204,"y":823,"score":92,"level":0},{"x":1225,"y":823,"score":62,"level":0},{"x":1257,"y":823,"score":48,"level":0},{"x":1278,"y":823,"score":77,"level":0},{"x":1378,"y":823,"score":99,"level":0},{"x":1423,"y":823,"score":62,"level":0},{"x":1474,"y":823,"score":72,"level":0},{"x":427,"y":824,"score":27,"level":0},{"x":442,"y":824,"score":50,"level":0},{"x":471,"y":824,"score":30,"level":0},{"x":531,"y":824,"score":86,"level":0},{"x":568,"y":824,"score":135,"level":0},{"x":607,"y":824,"score":73,"level":0},{"x":647,"y":824,"score":81,"level":0},{"x":688,"y":824,"score":90,"level":0},{"x":775,"y":824,"score":93,"level":0},{"x":843,"y":824,"score":52,"level":0},{"x":858,"y":824,"score":64,"level":0},{"x":1055,"y":824,"score":106,"level":0},{"x":1072,"y":824,"score":32,"level":0},{"x":1089,"y":824,"score":138,"level":0},{"x":1110,"y":824,"score":30,"level":0},{"x":1116,"y":824,"score":108,"level":0},{"x":1250,"y":824,"score":29,"level":0},{"x":1255,"y":824,"score":32,"level":0},{"x":1295,"y":824,"score":154,"level":0},{"x":1312,"y":824,"score":330,"level":0},{"x":1319,"y":824,"score":35,"level":0},{"x":1376,"y":824,"score":61,"level":0},{"x":1389,"y":824,"score":48,"level":0},{"x":1402,"y":824,"score":41,"level":0},{"x":1417,"y":824,"score":88,"level":0},{"x":393,"y":825,"score":90,"level":0},{"x":507,"y":825,"score":72,"level":0},{"x":551,"y":825,"score":92,"level":0},{"x":655,"y":825,"score":67,"level":0},{"x":665,"y":825,"score":43,"level":0},{"x":699,"y":825,"score":92,"level":0},{"x":799,"y":825,"score":43,"level":0},{"x":824,"y":825,"score":92,"level":0},{"x":831,"y":825,"score":161,"level":0},{"x":920,"y":825,"score":34,"level":0},{"x":970,"y":825,"score":30,"level":0},{"x":1042,"y":825,"score":84,"level":0},{"x":1063,"y":825,"score":83,"level":0},{"x":1095,"y":825,"score":63,"level":0},{"x":1121,"y":825,"score":152,"level":0},{"x":1194,"y":825,"score":40,"level":0},{"x":1215,"y":825,"score":134,"level":0},{"x":1221,"y":825,"score":191,"level":0},{"x":1286,"y":825,"score":58,"level":0},{"x":1306,"y":825,"score":108,"level":0},{"x":1435,"y":825,"score":44,"level":0},{"x":476,"y":826,"score":41,"level":0},{"x":587,"y":826,"score":80,"level":0},{"x":592,"y":826,"score":147,"level":0},{"x":598,"y":826,"score":59,"level":0},{"x":622,"y":826,"score":49,"level":0},{"x":683,"y":826,"score":41,"level":0},{"x":708,"y":826,"score":96,"level":0},{"x":716,"y":826,"score":32,"level":0},{"x":841,"y":826,"score":39,"level":0},{"x":916,"y":826,"score":27,"level":0},{"x":965,"y":826,"score":164,"level":0},{"x":1099,"y":826,"score":67,"level":0},{"x":1150,"y":826,"score":172,"level":0},{"x":1230,"y":826,"score":60,"level":0},{"x":1329,"y":826,"score":94,"level":0},{"x":1331,"y":826,"score":41,"level":0},{"x":1427,"y":826,"score":66,"level":0},{"x":414,"y":827,"score":40,"level":0},{"x":493,"y":827,"score":72,"level":0},{"x":699,"y":827,"score":91,"level":0},{"x":714,"y":827,"score":58,"level":0},{"x":837,"y":827,"score":26,"level":0},{"x":890,"y":827,"score":59,"level":0},{"x":924,"y":827,"score":120,"level":0},{"x":993,"y":827,"score":48,"level":0},{"x":1027,"y":827,"score":77,"level":0},{"x":1084,"y":827,"score":88,"level":0},{"x":1107,"y":827,"score":46,"level":0},{"x":1158,"y":827,"score":62,"level":0},{"x":1163,"y":827,"score":222,"level":0},{"x":1184,"y":827,"score":69,"level":0},{"x":1225,"y":827,"score":111,"level":0},{"x":1243,"y":827,"score":30,"level":0},{"x":1255,"y":827,"score":88,"level":0},{"x":1368,"y":827,"score":70,"level":0},{"x":1448,"y":827,"score":129,"level":0},{"x":1482,"y":827,"score":130,"level":0},{"x":386,"y":828,"score":41,"level":0},{"x":452,"y":828,"score":93,"level":0},{"x":459,"y":828,"score":145,"level":0},{"x":507,"y":828,"score":64,"level":0},{"x":543,"y":828,"score":38,"level":0},{"x":626,"y":828,"score":38,"level":0},{"x":631,"y":828,"score":56,"level":0},{"x":723,"y":828,"score":40,"level":0},{"x":736,"y":828,"score":64,"level":0},{"x":744,"y":828,"score":152,"level":0},{"x":768,"y":828,"score":45,"level":0},{"x":779,"y":828,"score":51,"level":0},{"x":847,"y":828,"score":43,"level":0},{"x":871,"y":828,"score":62,"level":0},{"x":886,"y":828,"score":49,"level":0},{"x":973,"y":828,"score":107,"level":0},{"x":978,"y":828,"score":127,"level":0},{"x":986,"y":828,"score":30,"level":0},{"x":1002,"y":828,"score":186,"level":0},{"x":1029,"y":828,"score":63,"level":0},{"x":1100,"y":828,"score":46,"level":0},{"x":1129,"y":828,"score":30,"level":0},{"x":1237,"y":828,"score":65,"level":0},{"x":1323,"y":828,"score":153,"level":0},{"x":1423,"y":828,"score":83,"level":0},{"x":505,"y":829,"score":48,"level":0},{"x":515,"y":829,"score":94,"level":0},{"x":556,"y":829,"score":98,"level":0},{"x":558,"y":829,"score":86,"level":0},{"x":572,"y":829,"score":167,"level":0},{"x":703,"y":829,"score":75,"level":0},{"x":760,"y":829,"score":44,"level":0},{"x":796,"y":829,"score":56,"level":0},{"x":843,"y":829,"score":34,"level":0},{"x":906,"y":829,"score":41,"level":0},{"x":1015,"y":829,"score":170,"level":0},{"x":1106,"y":829,"score":65,"level":0},{"x":1141,"y":829,"score":47,"level":0},{"x":1179,"y":829,"score":29,"level":0},{"x":1185,"y":829,"score":115,"level":0},{"x":1282,"y":829,"score":53,"level":0},{"x":1292,"y":829,"score":40,"level":0},{"x":1311,"y":829,"score":43,"level":0},{"x":1376,"y":829,"score":199,"level":0},{"x":1455,"y":829,"score":34,"level":0},{"x":1466,"y":829,"score":138,"level":0},{"x":427,"y":830,"score":70,"level":0},{"x":512,"y":830,"score":80,"level":0},{"x":752,"y":830,"score":44,"level":0},{"x":816,"y":830,"score":64,"level":0},{"x":919,"y":830,"score":67,"level":0},{"x":940,"y":830,"score":52,"level":0},{"x":1076,"y":830,"score":36,"level":0},{"x":1191,"y":830,"score":27,"level":0},{"x":1203,"y":830,"score":139,"level":0},{"x":1246,"y":830,"score":44,"level":0},{"x":1303,"y":830,"score":145,"level":0},{"x":1385,"y":830,"score":44,"level":0},{"x":1402,"y":830,"score":354,"level":0},{"x":1408,"y":830,"score":196,"level":0},{"x":1417,"y":830,"score":90,"level":0},{"x":1472,"y":830,"score":37,"level":0},{"x":390,"y":831,"score":42,"level":0},{"x":418,"y":831,"score":98,"level":0},{"x":550,"y":831,"score":77,"level":0},{"x":582,"y":831,"score":54,"level":0},{"x":622,"y":831,"score":56,"level":0},{"x":832,"y":831,"score":71,"level":0},{"x":862,"y":831,"score":34,"level":0},{"x":930,"y":831,"score":264,"level":0},{"x":943,"y":831,"score":101,"level":0},{"x":952,"y":831,"score":71,"level":0},{"x":998,"y":831,"score":34,"level":0},{"x":1027,"y":831,"score":48,"level":0},{"x":1033,"y":831,"score":133,"level":0},{"x":1098,"y":831,"score":46,"level":0},{"x":1121,"y":831,"score":159,"level":0},{"x":1234,"y":831,"score":35,"level":0},{"x":1260,"y":831,"score":83,"level":0},{"x":1333,"y":831,"score":217,"level":0},{"x":1413,"y":831,"score":93,"level":0},{"x":1444,"y":831,"score":93,"level":0},{"x":1458,"y":831,"score":71,"level":0},{"x":377,"y":832,"score":70,"level":0},{"x":487,"y":832,"score":87,"level":0},{"x":545,"y":832,"score":30,"level":0},{"x":666,"y":832,"score":52,"level":0},{"x":714,"y":832,"score":78,"level":0},{"x":730,"y":832,"score":125,"level":0},{"x":761,"y":832,"score":30,"level":0},{"x":806,"y":832,"score":97,"level":0},{"x":838,"y":832,"score":142,"level":0},{"x":891,"y":832,"score":67,"level":0},{"x":900,"y":832,"score":86,"level":0},{"x":937,"y":832,"score":57,"level":0},{"x":1051,"y":832,"score":137,"level":0},{"x":1087,"y":832,"score":89,"level":0},{"x":1161,"y":832,"score":36,"level":0},{"x":1196,"y":832,"score":80,"level":0},{"x":1250,"y":832,"score":62,"level":0},{"x":1320,"y":832,"score":82,"level":0},{"x":1380,"y":832,"score":36,"level":0},{"x":1448,"y":832,"score":45,"level":0},{"x":1482,"y":832,"score":141,"level":0},{"x":1489,"y":832,"score":47,"level":0},{"x":386,"y":833,"score":50,"level":0},{"x":398,"y":833,"score":49,"level":0},{"x":497,"y":833,"score":132,"level":0},{"x":581,"y":833,"score":32,"level":0},{"x":613,"y":833,"score":57,"level":0},{"x":625,"y":833,"score":56,"level":0},{"x":632,"y":833,"score":61,"level":0},{"x":741,"y":833,"score":81,"level":0},{"x":751,"y":833,"score":34,"level":0},{"x":801,"y":833,"score":46,"level":0},{"x":949,"y":833,"score":38,"level":0},{"x":975,"y":833,"score":76,"level":0},{"x":1029,"y":833,"score":38,"level":0},{"x":1076,"y":833,"score":38,"level":0},{"x":1092,"y":833,"score":38,"level":0},{"x":1103,"y":833,"score":96,"level":0},{"x":1122,"y":833,"score":106,"level":0},{"x":1127,"y":833,"score":120,"level":0},{"x":1138,"y":833,"score":162,"level":0},{"x":1190,"y":833,"score":48,"level":0},{"x":1341,"y":833,"score":136,"level":0},{"x":1451,"y":833,"score":51,"level":0},{"x":425,"y":834,"score":59,"level":0},{"x":492,"y":834,"score":130,"level":0},{"x":506,"y":834,"score":30,"level":0},{"x":600,"y":834,"score":64,"level":0},{"x":665,"y":834,"score":51,"level":0},{"x":679,"y":834,"score":52,"level":0},{"x":696,"y":834,"score":128,"level":0},{"x":792,"y":834,"score":55,"level":0},{"x":883,"y":834,"score":97,"level":0},{"x":904,"y":834,"score":38,"level":0},{"x":1000,"y":834,"score":92,"level":0},{"x":1006,"y":834,"score":47,"level":0},{"x":1013,"y":834,"score":106,"level":0},{"x":1222,"y":834,"score":54,"level":0},{"x":1254,"y":834,"score":137,"level":0},{"x":1283,"y":834,"score":50,"level":0},{"x":1347,"y":834,"score":42,"level":0},{"x":404,"y":835,"score":47,"level":0},{"x":410,"y":835,"score":59,"level":0},{"x":579,"y":835,"score":41,"level":0},{"x":606,"y":835,"score":85,"level":0},{"x":713,"y":835,"score":86,"level":0},{"x":736,"y":835,"score":41,"level":0},{"x":783,"y":835,"score":108,"level":0},{"x":795,"y":835,"score":42,"level":0},{"x":818,"y":835,"score":47,"level":0},{"x":824,"y":835,"score":90,"level":0},{"x":857,"y":835,"score":165,"level":0},{"x":872,"y":835,"score":93,"level":0},{"x":919,"y":835,"score":121,"level":0},{"x":926,"y":835,"score":189,"level":0},{"x":984,"y":835,"score":31,"level":0},{"x":1045,"y":835,"score":124,"level":0},{"x":1059,"y":835,"score":99,"level":0},{"x":1140,"y":835,"score":66,"level":0},{"x":1199,"y":835,"score":77,"level":0},{"x":1204,"y":835,"score":63,"level":0},{"x":1243,"y":835,"score":107,"level":0},{"x":1271,"y":835,"score":57,"level":0},{"x":1288,"y":835,"score":26,"level":0},{"x":1303,"y":835,"score":29,"level":0},{"x":1374,"y":835,"score":123,"level":0},{"x":1389,"y":835,"score":88,"level":0},{"x":1408,"y":835,"score":93,"level":0},{"x":1477,"y":835,"score":72,"level":0},{"x":392,"y":836,"score":54,"level":0},{"x":523,"y":836,"score":168,"level":0},{"x":529,"y":836,"score":200,"level":0},{"x":551,"y":836,"score":55,"level":0},{"x":557,"y":836,"score":114,"level":0},{"x":686,"y":836,"score":35,"level":0},{"x":688,"y":836,"score":47,"level":0},{"x":790,"y":836,"score":30,"level":0},{"x":851,"y":836,"score":74,"level":0},{"x":1033,"y":836,"score":88,"level":0},{"x":1040,"y":836,"score":28,"level":0},{"x":1083,"y":836,"score":94,"level":0},{"x":1135,"y":836,"score":85,"level":0},{"x":1147,"y":836,"score":34,"level":0},{"x":1234,"y":836,"score":166,"level":0},{"x":1267,"y":836,"score":63,"level":0},{"x":1295,"y":836,"score":82,"level":0},{"x":1313,"y":836,"score":68,"level":0},{"x":1317,"y":836,"score":38,"level":0},{"x":1391,"y":836,"score":40,"level":0},{"x":1395,"y":836,"score":49,"level":0},{"x":1400,"y":836,"score":37,"level":0},{"x":673,"y":837,"score":142,"level":0},{"x":755,"y":837,"score":63,"level":0},{"x":830,"y":837,"score":108,"level":0},{"x":836,"y":837,"score":58,"level":0},{"x":863,"y":837,"score":174,"level":0},{"x":868,"y":837,"score":144,"level":0},{"x":879,"y":837,"score":181,"level":0},{"x":898,"y":837,"score":33,"level":0},{"x":959,"y":837,"score":36,"level":0},{"x":966,"y":837,"score":168,"level":0},{"x":999,"y":837,"score":50,"level":0},{"x":1054,"y":837,"score":50,"level":0},{"x":1099,"y":837,"score":64,"level":0},{"x":1214,"y":837,"score":26,"level":0},{"x":1282,"y":837,"score":39,"level":0},{"x":1304,"y":837,"score":26,"level":0},{"x":1415,"y":837,"score":155,"level":0},{"x":1420,"y":837,"score":118,"level":0},{"x":1457,"y":837,"score":124,"level":0},{"x":422,"y":838,"score":34,"level":0},{"x":534,"y":838,"score":34,"level":0},{"x":578,"y":838,"score":27,"level":0},{"x":721,"y":838,"score":34,"level":0},{"x":749,"y":838,"score":176,"level":0},{"x":1009,"y":838,"score":56,"level":0},{"x":1048,"y":838,"score":73,"level":0},{"x":1107,"y":838,"score":55,"level":0},{"x":1163,"y":838,"score":65,"level":0},{"x":1251,"y":838,"score":70,"level":0},{"x":1307,"y":838,"score":59,"level":0},{"x":1324,"y":838,"score":27,"level":0},{"x":1364,"y":838,"score":76,"level":0},{"x":1379,"y":838,"score":69,"level":0},{"x":1470,"y":838,"score":36,"level":0},{"x":1472,"y":838,"score":44,"level":0},{"x":432,"y":839,"score":35,"level":0},{"x":516,"y":839,"score":107,"level":0},{"x":583,"y":839,"score":61,"level":0},{"x":629,"y":839,"score":27,"level":0},{"x":632,"y":839,"score":63,"level":0},{"x":657,"y":839,"score":53,"level":0},{"x":771,"y":839,"score":85,"level":0},{"x":817,"y":839,"score":64,"level":0},{"x":824,"y":839,"score":26,"level":0},{"x":889,"y":839,"score":53,"level":0},{"x":969,"y":839,"score":120,"level":0},{"x":1025,"y":839,"score":192,"level":0},{"x":1038,"y":839,"score":70,"level":0},{"x":1119,"y":839,"score":179,"level":0},{"x":1219,"y":839,"score":142,"level":0},{"x":1224,"y":839,"score":91,"level":0},{"x":1273,"y":839,"score":74,"level":0},{"x":1341,"y":839,"score":35,"level":0},{"x":1349,"y":839,"score":63,"level":0},{"x":1398,"y":839,"score":72,"level":0},{"x":1413,"y":839,"score":90,"level":0},{"x":1488,"y":839,"score":42,"level":0},{"x":397,"y":840,"score":148,"level":0},{"x":408,"y":840,"score":31,"level":0},{"x":419,"y":840,"score":41,"level":0},{"x":428,"y":840,"score":44,"level":0},{"x":569,"y":840,"score":31,"level":0},{"x":718,"y":840,"score":42,"level":0},{"x":736,"y":840,"score":30,"level":0},{"x":761,"y":840,"score":29,"level":0},{"x":785,"y":840,"score":102,"level":0},{"x":800,"y":840,"score":105,"level":0},{"x":806,"y":840,"score":189,"level":0},{"x":932,"y":840,"score":70,"level":0},{"x":1009,"y":840,"score":157,"level":0},{"x":1016,"y":840,"score":41,"level":0},{"x":1061,"y":840,"score":70,"level":0},{"x":1136,"y":840,"score":52,"level":0},{"x":1169,"y":840,"score":164,"level":0},{"x":1200,"y":840,"score":82,"level":0},{"x":1229,"y":840,"score":208,"level":0},{"x":1446,"y":840,"score":98,"level":0},{"x":530,"y":841,"score":28,"level":0},{"x":623,"y":841,"score":28,"level":0},{"x":702,"y":841,"score":30,"level":0},{"x":711,"y":841,"score":196,"level":0},{"x":814,"y":841,"score":57,"level":0},{"x":906,"y":841,"score":98,"level":0},{"x":1045,"y":841,"score":34,"level":0},{"x":1121,"y":841,"score":132,"level":0},{"x":1147,"y":841,"score":110,"level":0},{"x":1243,"y":841,"score":143,"level":0},{"x":1401,"y":841,"score":102,"level":0},{"x":1429,"y":841,"score":96,"level":0},{"x":564,"y":842,"score":57,"level":0},{"x":615,"y":842,"score":34,"level":0},{"x":681,"y":842,"score":70,"level":0},{"x":700,"y":842,"score":30,"level":0},{"x":794,"y":842,"score":31,"level":0},{"x":884,"y":842,"score":60,"level":0},{"x":926,"y":842,"score":66,"level":0},{"x":975,"y":842,"score":58,"level":0},{"x":1005,"y":842,"score":93,"level":0},{"x":1032,"y":842,"score":105,"level":0},{"x":1055,"y":842,"score":41,"level":0},{"x":1061,"y":842,"score":40,"level":0},{"x":1100,"y":842,"score":35,"level":0},{"x":1128,"y":842,"score":82,"level":0},{"x":1138,"y":842,"score":91,"level":0},{"x":1172,"y":842,"score":120,"level":0},{"x":1186,"y":842,"score":50,"level":0},{"x":1237,"y":842,"score":307,"level":0},{"x":1333,"y":842,"score":73,"level":0},{"x":1403,"y":842,"score":157,"level":0},{"x":1414,"y":842,"score":41,"level":0},{"x":1440,"y":842,"score":54,"level":0},{"x":1477,"y":842,"score":32,"level":0},{"x":418,"y":843,"score":76,"level":0},{"x":466,"y":843,"score":27,"level":0},{"x":501,"y":843,"score":53,"level":0},{"x":524,"y":843,"score":167,"level":0},{"x":534,"y":843,"score":71,"level":0},{"x":557,"y":843,"score":55,"level":0},{"x":571,"y":843,"score":64,"level":0},{"x":672,"y":843,"score":47,"level":0},{"x":721,"y":843,"score":90,"level":0},{"x":743,"y":843,"score":51,"level":0},{"x":767,"y":843,"score":78,"level":0},{"x":949,"y":843,"score":101,"level":0},{"x":1047,"y":843,"score":50,"level":0},{"x":1103,"y":843,"score":30,"level":0},{"x":1191,"y":843,"score":115,"level":0},{"x":1196,"y":843,"score":50,"level":0},{"x":1270,"y":843,"score":81,"level":0},{"x":1287,"y":843,"score":217,"level":0},{"x":1317,"y":843,"score":168,"level":0},{"x":1350,"y":843,"score":30,"level":0},{"x":1355,"y":843,"score":47,"level":0},{"x":1379,"y":843,"score":241,"level":0},{"x":1396,"y":843,"score":80,"level":0},{"x":1412,"y":843,"score":112,"level":0},{"x":1420,"y":843,"score":122,"level":0},{"x":1429,"y":843,"score":135,"level":0},{"x":1438,"y":843,"score":33,"level":0},{"x":1483,"y":843,"score":70,"level":0},{"x":392,"y":844,"score":48,"level":0},{"x":510,"y":844,"score":149,"level":0},{"x":539,"y":844,"score":105,"level":0},{"x":652,"y":844,"score":44,"level":0},{"x":683,"y":844,"score":44,"level":0},{"x":806,"y":844,"score":70,"level":0},{"x":820,"y":844,"score":64,"level":0},{"x":825,"y":844,"score":101,"level":0},{"x":868,"y":844,"score":172,"level":0},{"x":878,"y":844,"score":80,"level":0},{"x":908,"y":844,"score":69,"level":0},{"x":915,"y":844,"score":85,"level":0},{"x":980,"y":844,"score":113,"level":0},{"x":1117,"y":844,"score":47,"level":0},{"x":1157,"y":844,"score":56,"level":0},{"x":1257,"y":844,"score":139,"level":0},{"x":1487,"y":844,"score":88,"level":0},{"x":455,"y":845,"score":33,"level":0},{"x":503,"y":845,"score":75,"level":0},{"x":750,"y":845,"score":47,"level":0},{"x":770,"y":845,"score":122,"level":0},{"x":785,"y":845,"score":125,"level":0},{"x":940,"y":845,"score":47,"level":0},{"x":999,"y":845,"score":271,"level":0},{"x":1035,"y":845,"score":60,"level":0},{"x":1161,"y":845,"score":82,"level":0},{"x":1305,"y":845,"score":47,"level":0},{"x":1327,"y":845,"score":184,"level":0},{"x":1467,"y":845,"score":36,"level":0},{"x":397,"y":846,"score":38,"level":0},{"x":415,"y":846,"score":29,"level":0},{"x":555,"y":846,"score":47,"level":0},{"x":597,"y":846,"score":98,"level":0},{"x":703,"y":846,"score":58,"level":0},{"x":711,"y":846,"score":27,"level":0},{"x":842,"y":846,"score":46,"level":0},{"x":858,"y":846,"score":110,"level":0},{"x":895,"y":846,"score":43,"level":0},{"x":915,"y":846,"score":125,"level":0},{"x":994,"y":846,"score":179,"level":0},{"x":1042,"y":846,"score":162,"level":0},{"x":1077,"y":846,"score":34,"level":0},{"x":1112,"y":846,"score":83,"level":0},{"x":1135,"y":846,"score":200,"level":0},{"x":1152,"y":846,"score":192,"level":0},{"x":1226,"y":846,"score":206,"level":0},{"x":1250,"y":846,"score":267,"level":0},{"x":1322,"y":846,"score":56,"level":0},{"x":1351,"y":846,"score":72,"level":0},{"x":1399,"y":846,"score":79,"level":0},{"x":1445,"y":846,"score":75,"level":0},{"x":388,"y":847,"score":42,"level":0},{"x":516,"y":847,"score":31,"level":0},{"x":612,"y":847,"score":67,"level":0},{"x":690,"y":847,"score":108,"level":0},{"x":762,"y":847,"score":141,"level":0},{"x":778,"y":847,"score":71,"level":0},{"x":793,"y":847,"score":43,"level":0},{"x":881,"y":847,"score":106,"level":0},{"x":934,"y":847,"score":46,"level":0},{"x":1019,"y":847,"score":27,"level":0},{"x":1028,"y":847,"score":41,"level":0},{"x":1169,"y":847,"score":130,"level":0},{"x":1189,"y":847,"score":135,"level":0},{"x":1220,"y":847,"score":153,"level":0},{"x":1296,"y":847,"score":48,"level":0},{"x":1316,"y":847,"score":38,"level":0},{"x":1340,"y":847,"score":100,"level":0},{"x":1412,"y":847,"score":51,"level":0},{"x":1415,"y":847,"score":31,"level":0},{"x":1453,"y":847,"score":34,"level":0},{"x":451,"y":848,"score":64,"level":0},{"x":524,"y":848,"score":126,"level":0},{"x":617,"y":848,"score":52,"level":0},{"x":637,"y":848,"score":56,"level":0},{"x":670,"y":848,"score":35,"level":0},{"x":675,"y":848,"score":30,"level":0},{"x":850,"y":848,"score":156,"level":0},{"x":921,"y":848,"score":47,"level":0},{"x":949,"y":848,"score":58,"level":0},{"x":968,"y":848,"score":30,"level":0},{"x":1062,"y":848,"score":109,"level":0},{"x":1074,"y":848,"score":58,"level":0},{"x":1141,"y":848,"score":117,"level":0},{"x":1234,"y":848,"score":33,"level":0},{"x":1275,"y":848,"score":169,"level":0},{"x":1287,"y":848,"score":86,"level":0},{"x":1357,"y":848,"score":140,"level":0},{"x":1366,"y":848,"score":69,"level":0},{"x":1378,"y":848,"score":160,"level":0},{"x":1394,"y":848,"score":33,"level":0},{"x":1463,"y":848,"score":65,"level":0},{"x":403,"y":849,"score":106,"level":0},{"x":534,"y":849,"score":78,"level":0},{"x":585,"y":849,"score":168,"level":0},{"x":604,"y":849,"score":76,"level":0},{"x":742,"y":849,"score":93,"level":0},{"x":755,"y":849,"score":228,"level":0},{"x":870,"y":849,"score":119,"level":0},{"x":876,"y":849,"score":162,"level":0},{"x":978,"y":849,"score":76,"level":0},{"x":1041,"y":849,"score":161,"level":0},{"x":1350,"y":849,"score":32,"level":0},{"x":1484,"y":849,"score":46,"level":0},{"x":394,"y":850,"score":35,"level":0},{"x":544,"y":850,"score":128,"level":0},{"x":549,"y":850,"score":109,"level":0},{"x":591,"y":850,"score":48,"level":0},{"x":615,"y":850,"score":54,"level":0},{"x":655,"y":850,"score":29,"level":0},{"x":683,"y":850,"score":138,"level":0},{"x":790,"y":850,"score":96,"level":0},{"x":961,"y":850,"score":68,"level":0},{"x":1145,"y":850,"score":47,"level":0},{"x":1164,"y":850,"score":27,"level":0},{"x":1194,"y":850,"score":55,"level":0},{"x":1258,"y":850,"score":45,"level":0},{"x":1307,"y":850,"score":48,"level":0},{"x":1471,"y":850,"score":100,"level":0},{"x":1489,"y":850,"score":55,"level":0},{"x":630,"y":851,"score":114,"level":0},{"x":649,"y":851,"score":85,"level":0},{"x":748,"y":851,"score":203,"level":0},{"x":783,"y":851,"score":62,"level":0},{"x":796,"y":851,"score":102,"level":0},{"x":890,"y":851,"score":27,"level":0},{"x":1012,"y":851,"score":136,"level":0},{"x":1134,"y":851,"score":102,"level":0},{"x":1152,"y":851,"score":132,"level":0},{"x":1217,"y":851,"score":53,"level":0},{"x":1328,"y":851,"score":177,"level":0},{"x":1346,"y":851,"score":75,"level":0},{"x":1373,"y":851,"score":54,"level":0},{"x":1446,"y":851,"score":36,"level":0},{"x":415,"y":852,"score":81,"level":0},{"x":421,"y":852,"score":115,"level":0},{"x":484,"y":852,"score":37,"level":0},{"x":555,"y":852,"score":64,"level":0},{"x":597,"y":852,"score":72,"level":0},{"x":612,"y":852,"score":168,"level":0},{"x":713,"y":852,"score":62,"level":0},{"x":761,"y":852,"score":82,"level":0},{"x":805,"y":852,"score":120,"level":0},{"x":833,"y":852,"score":65,"level":0},{"x":839,"y":852,"score":43,"level":0},{"x":930,"y":852,"score":41,"level":0},{"x":967,"y":852,"score":75,"level":0},{"x":994,"y":852,"score":248,"level":0},{"x":1062,"y":852,"score":71,"level":0},{"x":1117,"y":852,"score":211,"level":0},{"x":1200,"y":852,"score":87,"level":0},{"x":1245,"y":852,"score":152,"level":0},{"x":1278,"y":852,"score":227,"level":0},{"x":1356,"y":852,"score":154,"level":0},{"x":1412,"y":852,"score":142,"level":0},{"x":1467,"y":852,"score":37,"level":0},{"x":451,"y":853,"score":26,"level":0},{"x":475,"y":853,"score":87,"level":0},{"x":486,"y":853,"score":45,"level":0},{"x":606,"y":853,"score":148,"level":0},{"x":618,"y":853,"score":125,"level":0},{"x":636,"y":853,"score":151,"level":0},{"x":643,"y":853,"score":156,"level":0},{"x":692,"y":853,"score":27,"level":0},{"x":697,"y":853,"score":67,"level":0},{"x":772,"y":853,"score":100,"level":0},{"x":940,"y":853,"score":45,"level":0},{"x":1055,"y":853,"score":123,"level":0},{"x":1090,"y":853,"score":57,"level":0},{"x":1124,"y":853,"score":110,"level":0},{"x":1186,"y":853,"score":28,"level":0},{"x":1230,"y":853,"score":77,"level":0},{"x":1239,"y":853,"score":102,"level":0},{"x":1287,"y":853,"score":59,"level":0},{"x":1348,"y":853,"score":40,"level":0},{"x":1366,"y":853,"score":38,"level":0},{"x":1389,"y":853,"score":32,"level":0},{"x":1400,"y":853,"score":171,"level":0},{"x":1409,"y":853,"score":106,"level":0},{"x":1439,"y":853,"score":41,"level":0},{"x":1474,"y":853,"score":146,"level":0},{"x":1490,"y":853,"score":52,"level":0},{"x":437,"y":854,"score":88,"level":0},{"x":466,"y":854,"score":129,"level":0},{"x":488,"y":854,"score":62,"level":0},{"x":527,"y":854,"score":58,"level":0},{"x":537,"y":854,"score":35,"level":0},{"x":624,"y":854,"score":77,"level":0},{"x":858,"y":854,"score":40,"level":0},{"x":902,"y":854,"score":43,"level":0},{"x":921,"y":854,"score":187,"level":0},{"x":950,"y":854,"score":64,"level":0},{"x":967,"y":854,"score":50,"level":0},{"x":1006,"y":854,"score":29,"level":0},{"x":1034,"y":854,"score":32,"level":0},{"x":1040,"y":854,"score":145,"level":0},{"x":1297,"y":854,"score":61,"level":0},{"x":1329,"y":854,"score":205,"level":0},{"x":1480,"y":854,"score":102,"level":0},{"x":389,"y":855,"score":54,"level":0},{"x":425,"y":855,"score":48,"level":0},{"x":543,"y":855,"score":126,"level":0},{"x":585,"y":855,"score":71,"level":0},{"x":653,"y":855,"score":97,"level":0},{"x":669,"y":855,"score":33,"level":0},{"x":944,"y":855,"score":40,"level":0},{"x":973,"y":855,"score":78,"level":0},{"x":1016,"y":855,"score":39,"level":0},{"x":1078,"y":855,"score":48,"level":0},{"x":1139,"y":855,"score":161,"level":0},{"x":1247,"y":855,"score":73,"level":0},{"x":1250,"y":855,"score":82,"level":0},{"x":1282,"y":855,"score":200,"level":0},{"x":1304,"y":855,"score":44,"level":0},{"x":1342,"y":855,"score":211,"level":0},{"x":1348,"y":855,"score":26,"level":0},{"x":1373,"y":855,"score":116,"level":0},{"x":400,"y":856,"score":92,"level":0},{"x":472,"y":856,"score":61,"level":0},{"x":664,"y":856,"score":100,"level":0},{"x":768,"y":856,"score":30,"level":0},{"x":816,"y":856,"score":180,"level":0},{"x":872,"y":856,"score":81,"level":0},{"x":886,"y":856,"score":90,"level":0},{"x":894,"y":856,"score":115,"level":0},{"x":908,"y":856,"score":38,"level":0},{"x":933,"y":856,"score":61,"level":0},{"x":980,"y":856,"score":49,"level":0},{"x":1040,"y":856,"score":124,"level":0},{"x":1046,"y":856,"score":42,"level":0},{"x":1274,"y":856,"score":122,"level":0},{"x":1375,"y":856,"score":116,"level":0},{"x":1432,"y":856,"score":58,"level":0},{"x":1444,"y":856,"score":52,"level":0},{"x":420,"y":857,"score":37,"level":0},{"x":484,"y":857,"score":90,"level":0},{"x":499,"y":857,"score":61,"level":0},{"x":547,"y":857,"score":80,"level":0},{"x":677,"y":857,"score":44,"level":0},{"x":702,"y":857,"score":176,"level":0},{"x":723,"y":857,"score":112,"level":0},{"x":758,"y":857,"score":29,"level":0},{"x":781,"y":857,"score":95,"level":0},{"x":850,"y":857,"score":71,"level":0},{"x":940,"y":857,"score":84,"level":0},{"x":963,"y":857,"score":52,"level":0},{"x":988,"y":857,"score":38,"level":0},{"x":1012,"y":857,"score":101,"level":0},{"x":1061,"y":857,"score":164,"level":0},{"x":1189,"y":857,"score":78,"level":0},{"x":1195,"y":857,"score":140,"level":0},{"x":1379,"y":857,"score":39,"level":0},{"x":377,"y":858,"score":26,"level":0},{"x":403,"y":858,"score":56,"level":0},{"x":479,"y":858,"score":41,"level":0},{"x":533,"y":858,"score":47,"level":0},{"x":540,"y":858,"score":49,"level":0},{"x":578,"y":858,"score":71,"level":0},{"x":589,"y":858,"score":132,"level":0},{"x":617,"y":858,"score":196,"level":0},{"x":629,"y":858,"score":210,"level":0},{"x":642,"y":858,"score":67,"level":0},{"x":707,"y":858,"score":38,"level":0},{"x":867,"y":858,"score":61,"level":0},{"x":881,"y":858,"score":53,"level":0},{"x":938,"y":858,"score":68,"level":0},{"x":977,"y":858,"score":37,"level":0},{"x":996,"y":858,"score":76,"level":0},{"x":1051,"y":858,"score":222,"level":0},{"x":1206,"y":858,"score":32,"level":0},{"x":1230,"y":858,"score":198,"level":0},{"x":1235,"y":858,"score":33,"level":0},{"x":1257,"y":858,"score":250,"level":0},{"x":1369,"y":858,"score":169,"level":0},{"x":1382,"y":858,"score":91,"level":0},{"x":1460,"y":858,"score":134,"level":0},{"x":1469,"y":858,"score":28,"level":0},{"x":1475,"y":858,"score":161,"level":0},{"x":1490,"y":858,"score":56,"level":0},{"x":436,"y":859,"score":56,"level":0},{"x":521,"y":859,"score":51,"level":0},{"x":538,"y":859,"score":80,"level":0},{"x":599,"y":859,"score":142,"level":0},{"x":612,"y":859,"score":58,"level":0},{"x":623,"y":859,"score":68,"level":0},{"x":691,"y":859,"score":27,"level":0},{"x":922,"y":859,"score":62,"level":0},{"x":951,"y":859,"score":57,"level":0},{"x":966,"y":859,"score":34,"level":0},{"x":1211,"y":859,"score":119,"level":0},{"x":1218,"y":859,"score":127,"level":0},{"x":1262,"y":859,"score":44,"level":0},{"x":1327,"y":859,"score":80,"level":0},{"x":1335,"y":859,"score":90,"level":0},{"x":1455,"y":859,"score":41,"level":0},{"x":392,"y":860,"score":59,"level":0},{"x":492,"y":860,"score":31,"level":0},{"x":526,"y":860,"score":52,"level":0},{"x":585,"y":860,"score":81,"level":0},{"x":746,"y":860,"score":178,"level":0},{"x":947,"y":860,"score":64,"level":0},{"x":1005,"y":860,"score":46,"level":0},{"x":1098,"y":860,"score":40,"level":0},{"x":1242,"y":860,"score":94,"level":0},{"x":1279,"y":860,"score":71,"level":0},{"x":1389,"y":860,"score":84,"level":0},{"x":1481,"y":860,"score":82,"level":0},{"x":696,"y":861,"score":117,"level":0},{"x":718,"y":861,"score":87,"level":0},{"x":788,"y":861,"score":129,"level":0},{"x":811,"y":861,"score":88,"level":0},{"x":1132,"y":861,"score":191,"level":0},{"x":1239,"y":861,"score":135,"level":0},{"x":1273,"y":861,"score":225,"level":0},{"x":1293,"y":861,"score":34,"level":0},{"x":1300,"y":861,"score":143,"level":0},{"x":1307,"y":861,"score":40,"level":0},{"x":1334,"y":861,"score":54,"level":0},{"x":1366,"y":861,"score":78,"level":0},{"x":1407,"y":861,"score":26,"level":0},{"x":1432,"y":861,"score":75,"level":0},{"x":1438,"y":861,"score":94,"level":0},{"x":439,"y":862,"score":31,"level":0},{"x":446,"y":862,"score":47,"level":0},{"x":460,"y":862,"score":38,"level":0},{"x":546,"y":862,"score":81,"level":0},{"x":703,"y":862,"score":115,"level":0},{"x":709,"y":862,"score":60,"level":0},{"x":726,"y":862,"score":54,"level":0},{"x":778,"y":862,"score":27,"level":0},{"x":906,"y":862,"score":51,"level":0},{"x":960,"y":862,"score":35,"level":0},{"x":983,"y":862,"score":111,"level":0},{"x":1035,"y":862,"score":89,"level":0},{"x":1078,"y":862,"score":184,"level":0},{"x":1126,"y":862,"score":101,"level":0},{"x":1144,"y":862,"score":83,"level":0},{"x":1236,"y":862,"score":162,"level":0},{"x":1285,"y":862,"score":134,"level":0},{"x":1342,"y":862,"score":113,"level":0},{"x":1377,"y":862,"score":175,"level":0},{"x":377,"y":863,"score":106,"level":0},{"x":385,"y":863,"score":62,"level":0},{"x":577,"y":863,"score":80,"level":0},{"x":583,"y":863,"score":45,"level":0},{"x":762,"y":863,"score":68,"level":0},{"x":819,"y":863,"score":44,"level":0},{"x":849,"y":863,"score":29,"level":0},{"x":882,"y":863,"score":48,"level":0},{"x":899,"y":863,"score":91,"level":0},{"x":938,"y":863,"score":105,"level":0},{"x":948,"y":863,"score":28,"level":0},{"x":1017,"y":863,"score":89,"level":0},{"x":1149,"y":863,"score":91,"level":0},{"x":1200,"y":863,"score":66,"level":0},{"x":1369,"y":863,"score":93,"level":0},{"x":1403,"y":863,"score":33,"level":0},{"x":1413,"y":863,"score":37,"level":0},{"x":523,"y":864,"score":37,"level":0},{"x":555,"y":864,"score":58,"level":0},{"x":588,"y":864,"score":124,"level":0},{"x":630,"y":864,"score":32,"level":0},{"x":783,"y":864,"score":74,"level":0},{"x":852,"y":864,"score":48,"level":0},{"x":1195,"y":864,"score":50,"level":0},{"x":1237,"y":864,"score":134,"level":0},{"x":1262,"y":864,"score":29,"level":0},{"x":1328,"y":864,"score":207,"level":0},{"x":1335,"y":864,"score":65,"level":0},{"x":1394,"y":864,"score":36,"level":0},{"x":1464,"y":864,"score":55,"level":0},{"x":416,"y":865,"score":174,"level":0},{"x":537,"y":865,"score":39,"level":0},{"x":600,"y":865,"score":54,"level":0},{"x":654,"y":865,"score":158,"level":0},{"x":660,"y":865,"score":112,"level":0},{"x":835,"y":865,"score":190,"level":0},{"x":917,"y":865,"score":54,"level":0},{"x":945,"y":865,"score":93,"level":0},{"x":955,"y":865,"score":59,"level":0},{"x":977,"y":865,"score":59,"level":0},{"x":993,"y":865,"score":95,"level":0},{"x":1008,"y":865,"score":66,"level":0},{"x":1114,"y":865,"score":148,"level":0},{"x":1141,"y":865,"score":158,"level":0},{"x":1243,"y":865,"score":66,"level":0},{"x":1250,"y":865,"score":100,"level":0},{"x":1315,"y":865,"score":26,"level":0},{"x":1347,"y":865,"score":28,"level":0},{"x":1354,"y":865,"score":73,"level":0},{"x":1454,"y":865,"score":66,"level":0},{"x":1456,"y":865,"score":38,"level":0},{"x":1473,"y":865,"score":88,"level":0},{"x":1481,"y":865,"score":32,"level":0},{"x":512,"y":866,"score":33,"level":0},{"x":911,"y":866,"score":38,"level":0},{"x":1015,"y":866,"score":60,"level":0},{"x":1063,"y":866,"score":26,"level":0},{"x":1107,"y":866,"score":137,"level":0},{"x":1121,"y":866,"score":78,"level":0},{"x":1184,"y":866,"score":58,"level":0},{"x":1214,"y":866,"score":143,"level":0},{"x":1280,"y":866,"score":50,"level":0},{"x":1300,"y":866,"score":132,"level":0},{"x":1352,"y":866,"score":72,"level":0},{"x":1406,"y":866,"score":46,"level":0},{"x":1470,"y":866,"score":82,"level":0},{"x":1487,"y":866,"score":67,"level":0},{"x":463,"y":867,"score":107,"level":0},{"x":470,"y":867,"score":63,"level":0},{"x":526,"y":867,"score":63,"level":0},{"x":558,"y":867,"score":63,"level":0},{"x":594,"y":867,"score":55,"level":0},{"x":647,"y":867,"score":76,"level":0},{"x":689,"y":867,"score":33,"level":0},{"x":865,"y":867,"score":54,"level":0},{"x":889,"y":867,"score":36,"level":0},{"x":986,"y":867,"score":114,"level":0},{"x":1131,"y":867,"score":58,"level":0},{"x":1212,"y":867,"score":183,"level":0},{"x":1274,"y":867,"score":49,"level":0},{"x":1286,"y":867,"score":146,"level":0},{"x":1313,"y":867,"score":32,"level":0},{"x":1319,"y":867,"score":58,"level":0},{"x":1371,"y":867,"score":48,"level":0},{"x":1431,"y":867,"score":54,"level":0},{"x":445,"y":868,"score":53,"level":0},{"x":455,"y":868,"score":61,"level":0},{"x":481,"y":868,"score":31,"level":0},{"x":536,"y":868,"score":58,"level":0},{"x":547,"y":868,"score":273,"level":0},{"x":583,"y":868,"score":176,"level":0},{"x":598,"y":868,"score":48,"level":0},{"x":696,"y":868,"score":42,"level":0},{"x":858,"y":868,"score":68,"level":0},{"x":873,"y":868,"score":48,"level":0},{"x":906,"y":868,"score":106,"level":0},{"x":1231,"y":868,"score":76,"level":0},{"x":1377,"y":868,"score":102,"level":0},{"x":1448,"y":868,"score":26,"level":0},{"x":377,"y":869,"score":176,"level":0},{"x":384,"y":869,"score":35,"level":0},{"x":430,"y":869,"score":26,"level":0},{"x":453,"y":869,"score":82,"level":0},{"x":616,"y":869,"score":128,"level":0},{"x":630,"y":869,"score":80,"level":0},{"x":804,"y":869,"score":30,"level":0},{"x":853,"y":869,"score":56,"level":0},{"x":1033,"y":869,"score":96,"level":0},{"x":1153,"y":869,"score":38,"level":0},{"x":1175,"y":869,"score":27,"level":0},{"x":1221,"y":869,"score":130,"level":0},{"x":1339,"y":869,"score":34,"level":0},{"x":1433,"y":869,"score":56,"level":0},{"x":1490,"y":869,"score":57,"level":0},{"x":416,"y":870,"score":106,"level":0},{"x":442,"y":870,"score":40,"level":0},{"x":459,"y":870,"score":72,"level":0},{"x":507,"y":870,"score":70,"level":0},{"x":555,"y":870,"score":234,"level":0},{"x":561,"y":870,"score":73,"level":0},{"x":589,"y":870,"score":58,"level":0},{"x":610,"y":870,"score":100,"level":0},{"x":713,"y":870,"score":32,"level":0},{"x":788,"y":870,"score":150,"level":0},{"x":877,"y":870,"score":37,"level":0},{"x":992,"y":870,"score":86,"level":0},{"x":997,"y":870,"score":127,"level":0},{"x":1008,"y":870,"score":48,"level":0},{"x":1013,"y":870,"score":82,"level":0},{"x":1149,"y":870,"score":27,"level":0},{"x":1178,"y":870,"score":30,"level":0},{"x":1260,"y":870,"score":94,"level":0},{"x":1309,"y":870,"score":96,"level":0},{"x":1343,"y":870,"score":72,"level":0},{"x":1353,"y":870,"score":117,"level":0},{"x":1408,"y":870,"score":42,"level":0},{"x":1439,"y":870,"score":60,"level":0},{"x":493,"y":871,"score":49,"level":0},{"x":509,"y":871,"score":96,"level":0},{"x":542,"y":871,"score":32,"level":0},{"x":647,"y":871,"score":34,"level":0},{"x":669,"y":871,"score":134,"level":0},{"x":675,"y":871,"score":90,"level":0},{"x":882,"y":871,"score":46,"level":0},{"x":945,"y":871,"score":105,"level":0},{"x":954,"y":871,"score":157,"level":0},{"x":961,"y":871,"score":46,"level":0},{"x":1114,"y":871,"score":196,"level":0},{"x":1202,"y":871,"score":77,"level":0},{"x":1253,"y":871,"score":35,"level":0},{"x":1276,"y":871,"score":94,"level":0},{"x":1359,"y":871,"score":144,"level":0},{"x":1370,"y":871,"score":47,"level":0},{"x":1461,"y":871,"score":67,"level":0},{"x":438,"y":872,"score":60,"level":0},{"x":550,"y":872,"score":90,"level":0},{"x":600,"y":872,"score":37,"level":0},{"x":771,"y":872,"score":27,"level":0},{"x":794,"y":872,"score":56,"level":0},{"x":866,"y":872,"score":53,"level":0},{"x":918,"y":872,"score":88,"level":0},{"x":925,"y":872,"score":80,"level":0},{"x":987,"y":872,"score":37,"level":0},{"x":1000,"y":872,"score":61,"level":0},{"x":1108,"y":872,"score":254,"level":0},{"x":1208,"y":872,"score":201,"level":0},{"x":1274,"y":872,"score":125,"level":0},{"x":1394,"y":872,"score":73,"level":0},{"x":1423,"y":872,"score":51,"level":0},{"x":455,"y":873,"score":58,"level":0},{"x":469,"y":873,"score":31,"level":0},{"x":530,"y":873,"score":44,"level":0},{"x":690,"y":873,"score":56,"level":0},{"x":707,"y":873,"score":28,"level":0},{"x":718,"y":873,"score":52,"level":0},{"x":827,"y":873,"score":84,"level":0},{"x":872,"y":873,"score":90,"level":0},{"x":1085,"y":873,"score":43,"level":0},{"x":1177,"y":873,"score":41,"level":0},{"x":1280,"y":873,"score":125,"level":0},{"x":1293,"y":873,"score":69,"level":0},{"x":1398,"y":873,"score":45,"level":0},{"x":1436,"y":873,"score":42,"level":0},{"x":1450,"y":873,"score":88,"level":0},{"x":582,"y":874,"score":65,"level":0},{"x":1043,"y":874,"score":28,"level":0},{"x":1079,"y":874,"score":93,"level":0},{"x":1123,"y":874,"score":143,"level":0},{"x":1151,"y":874,"score":73,"level":0},{"x":1180,"y":874,"score":54,"level":0},{"x":1252,"y":874,"score":64,"level":0},{"x":1268,"y":874,"score":208,"level":0},{"x":1285,"y":874,"score":38,"level":0},{"x":1323,"y":874,"score":72,"level":0},{"x":1457,"y":874,"score":71,"level":0},{"x":1490,"y":874,"score":30,"level":0},{"x":394,"y":875,"score":30,"level":0},{"x":442,"y":875,"score":27,"level":0},{"x":515,"y":875,"score":50,"level":0},{"x":555,"y":875,"score":54,"level":0},{"x":605,"y":875,"score":85,"level":0},{"x":714,"y":875,"score":40,"level":0},{"x":778,"y":875,"score":46,"level":0},{"x":856,"y":875,"score":72,"level":0},{"x":1007,"y":875,"score":85,"level":0},{"x":1015,"y":875,"score":96,"level":0},{"x":1148,"y":875,"score":26,"level":0},{"x":1226,"y":875,"score":60,"level":0},{"x":1259,"y":875,"score":204,"level":0},{"x":1309,"y":875,"score":130,"level":0},{"x":1337,"y":875,"score":99,"level":0},{"x":1363,"y":875,"score":51,"level":0},{"x":1436,"y":875,"score":104,"level":0},{"x":501,"y":876,"score":70,"level":0},{"x":507,"y":876,"score":75,"level":0},{"x":658,"y":876,"score":93,"level":0},{"x":860,"y":876,"score":60,"level":0},{"x":876,"y":876,"score":173,"level":0},{"x":922,"y":876,"score":68,"level":0},{"x":934,"y":876,"score":125,"level":0},{"x":945,"y":876,"score":48,"level":0},{"x":1021,"y":876,"score":29,"level":0},{"x":1102,"y":876,"score":34,"level":0},{"x":1365,"y":876,"score":42,"level":0},{"x":1414,"y":876,"score":29,"level":0},{"x":1447,"y":876,"score":126,"level":0},{"x":1463,"y":876,"score":83,"level":0},{"x":378,"y":877,"score":97,"level":0},{"x":403,"y":877,"score":138,"level":0},{"x":427,"y":877,"score":59,"level":0},{"x":437,"y":877,"score":118,"level":0},{"x":464,"y":877,"score":49,"level":0},{"x":483,"y":877,"score":72,"level":0},{"x":530,"y":877,"score":38,"level":0},{"x":541,"y":877,"score":49,"level":0},{"x":560,"y":877,"score":146,"level":0},{"x":565,"y":877,"score":175,"level":0},{"x":618,"y":877,"score":42,"level":0},{"x":725,"y":877,"score":50,"level":0},{"x":805,"y":877,"score":51,"level":0},{"x":900,"y":877,"score":164,"level":0},{"x":929,"y":877,"score":136,"level":0},{"x":995,"y":877,"score":67,"level":0},{"x":1073,"y":877,"score":97,"level":0},{"x":1114,"y":877,"score":164,"level":0},{"x":1136,"y":877,"score":84,"level":0},{"x":1159,"y":877,"score":41,"level":0},{"x":1164,"y":877,"score":51,"level":0},{"x":1222,"y":877,"score":80,"level":0},{"x":1387,"y":877,"score":55,"level":0},{"x":1423,"y":877,"score":61,"level":0},{"x":1432,"y":877,"score":34,"level":0},{"x":409,"y":878,"score":95,"level":0},{"x":412,"y":878,"score":89,"level":0},{"x":447,"y":878,"score":30,"level":0},{"x":571,"y":878,"score":68,"level":0},{"x":597,"y":878,"score":34,"level":0},{"x":628,"y":878,"score":154,"level":0},{"x":635,"y":878,"score":89,"level":0},{"x":821,"y":878,"score":242,"level":0},{"x":868,"y":878,"score":45,"level":0},{"x":961,"y":878,"score":101,"level":0},{"x":1170,"y":878,"score":39,"level":0},{"x":1176,"y":878,"score":60,"level":0},{"x":1204,"y":878,"score":40,"level":0},{"x":1271,"y":878,"score":110,"level":0},{"x":1282,"y":878,"score":148,"level":0},{"x":1293,"y":878,"score":42,"level":0},{"x":511,"y":879,"score":84,"level":0},{"x":622,"y":879,"score":33,"level":0},{"x":640,"y":879,"score":172,"level":0},{"x":646,"y":879,"score":86,"level":0},{"x":653,"y":879,"score":66,"level":0},{"x":688,"y":879,"score":30,"level":0},{"x":742,"y":879,"score":75,"level":0},{"x":786,"y":879,"score":28,"level":0},{"x":851,"y":879,"score":63,"level":0},{"x":980,"y":879,"score":64,"level":0},{"x":1118,"y":879,"score":29,"level":0},{"x":1200,"y":879,"score":27,"level":0},{"x":1219,"y":879,"score":53,"level":0},{"x":1247,"y":879,"score":88,"level":0},{"x":1253,"y":879,"score":66,"level":0},{"x":1296,"y":879,"score":101,"level":0},{"x":1367,"y":879,"score":81,"level":0},{"x":1467,"y":879,"score":34,"level":0},{"x":395,"y":880,"score":138,"level":0},{"x":401,"y":880,"score":78,"level":0},{"x":656,"y":880,"score":55,"level":0},{"x":666,"y":880,"score":63,"level":0},{"x":677,"y":880,"score":55,"level":0},{"x":932,"y":880,"score":49,"level":0},{"x":984,"y":880,"score":38,"level":0},{"x":989,"y":880,"score":87,"level":0},{"x":1002,"y":880,"score":84,"level":0},{"x":1007,"y":880,"score":83,"level":0},{"x":1015,"y":880,"score":76,"level":0},{"x":1150,"y":880,"score":33,"level":0},{"x":1155,"y":880,"score":171,"level":0},{"x":1187,"y":880,"score":181,"level":0},{"x":1304,"y":880,"score":102,"level":0},{"x":1310,"y":880,"score":113,"level":0},{"x":1355,"y":880,"score":85,"level":0},{"x":1362,"y":880,"score":29,"level":0},{"x":1428,"y":880,"score":68,"level":0},{"x":496,"y":881,"score":39,"level":0},{"x":715,"y":881,"score":38,"level":0},{"x":763,"y":881,"score":32,"level":0},{"x":789,"y":881,"score":47,"level":0},{"x":799,"y":881,"score":104,"level":0},{"x":878,"y":881,"score":98,"level":0},{"x":920,"y":881,"score":54,"level":0},{"x":966,"y":881,"score":52,"level":0},{"x":1034,"y":881,"score":29,"level":0},{"x":1126,"y":881,"score":60,"level":0},{"x":1140,"y":881,"score":49,"level":0},{"x":1167,"y":881,"score":32,"level":0},{"x":1209,"y":881,"score":78,"level":0},{"x":1266,"y":881,"score":46,"level":0},{"x":1437,"y":881,"score":44,"level":0},{"x":1454,"y":881,"score":119,"level":0},{"x":382,"y":882,"score":130,"level":0},{"x":405,"y":882,"score":59,"level":0},{"x":415,"y":882,"score":101,"level":0},{"x":441,"y":882,"score":152,"level":0},{"x":453,"y":882,"score":59,"level":0},{"x":474,"y":882,"score":104,"level":0},{"x":521,"y":882,"score":28,"level":0},{"x":526,"y":882,"score":45,"level":0},{"x":578,"y":882,"score":68,"level":0},{"x":691,"y":882,"score":45,"level":0},{"x":726,"y":882,"score":42,"level":0},{"x":838,"y":882,"score":38,"level":0},{"x":903,"y":882,"score":130,"level":0},{"x":1051,"y":882,"score":26,"level":0},{"x":1081,"y":882,"score":55,"level":0},{"x":1087,"y":882,"score":128,"level":0},{"x":1108,"y":882,"score":57,"level":0},{"x":1192,"y":882,"score":124,"level":0},{"x":1224,"y":882,"score":190,"level":0},{"x":1260,"y":882,"score":33,"level":0},{"x":1444,"y":882,"score":255,"level":0},{"x":1474,"y":882,"score":113,"level":0},{"x":409,"y":883,"score":88,"level":0},{"x":435,"y":883,"score":146,"level":0},{"x":461,"y":883,"score":36,"level":0},{"x":485,"y":883,"score":29,"level":0},{"x":538,"y":883,"score":65,"level":0},{"x":560,"y":883,"score":42,"level":0},{"x":674,"y":883,"score":35,"level":0},{"x":679,"y":883,"score":58,"level":0},{"x":893,"y":883,"score":110,"level":0},{"x":931,"y":883,"score":33,"level":0},{"x":937,"y":883,"score":48,"level":0},{"x":1092,"y":883,"score":115,"level":0},{"x":1132,"y":883,"score":79,"level":0},{"x":1207,"y":883,"score":54,"level":0},{"x":1234,"y":883,"score":106,"level":0},{"x":1246,"y":883,"score":74,"level":0},{"x":1354,"y":883,"score":57,"level":0},{"x":1485,"y":883,"score":60,"level":0},{"x":488,"y":884,"score":47,"level":0},{"x":502,"y":884,"score":46,"level":0},{"x":508,"y":884,"score":47,"level":0},{"x":572,"y":884,"score":31,"level":0},{"x":604,"y":884,"score":30,"level":0},{"x":625,"y":884,"score":42,"level":0},{"x":661,"y":884,"score":97,"level":0},{"x":987,"y":884,"score":33,"level":0},{"x":1021,"y":884,"score":29,"level":0},{"x":1068,"y":884,"score":30,"level":0},{"x":1146,"y":884,"score":118,"level":0},{"x":1213,"y":884,"score":57,"level":0},{"x":1281,"y":884,"score":88,"level":0},{"x":1334,"y":884,"score":30,"level":0},{"x":1366,"y":884,"score":57,"level":0},{"x":554,"y":885,"score":120,"level":0},{"x":566,"y":885,"score":67,"level":0},{"x":621,"y":885,"score":31,"level":0},{"x":792,"y":885,"score":73,"level":0},{"x":887,"y":885,"score":134,"level":0},{"x":893,"y":885,"score":86,"level":0},{"x":996,"y":885,"score":225,"level":0},{"x":1156,"y":885,"score":109,"level":0},{"x":1206,"y":885,"score":60,"level":0},{"x":1360,"y":885,"score":30,"level":0},{"x":1417,"y":885,"score":27,"level":0},{"x":1449,"y":885,"score":103,"level":0},{"x":483,"y":886,"score":26,"level":0},{"x":513,"y":886,"score":51,"level":0},{"x":598,"y":886,"score":44,"level":0},{"x":669,"y":886,"score":96,"level":0},{"x":983,"y":886,"score":56,"level":0},{"x":1129,"y":886,"score":34,"level":0},{"x":1140,"y":886,"score":67,"level":0},{"x":1187,"y":886,"score":284,"level":0},{"x":1253,"y":886,"score":56,"level":0},{"x":1312,"y":886,"score":145,"level":0},{"x":1447,"y":886,"score":67,"level":0},{"x":1457,"y":886,"score":28,"level":0},{"x":1465,"y":886,"score":36,"level":0},{"x":1472,"y":886,"score":78,"level":0},{"x":391,"y":887,"score":77,"level":0},{"x":424,"y":887,"score":70,"level":0},{"x":496,"y":887,"score":72,"level":0},{"x":631,"y":887,"score":31,"level":0},{"x":660,"y":887,"score":31,"level":0},{"x":710,"y":887,"score":31,"level":0},{"x":798,"y":887,"score":68,"level":0},{"x":910,"y":887,"score":28,"level":0},{"x":965,"y":887,"score":41,"level":0},{"x":1194,"y":887,"score":110,"level":0},{"x":1290,"y":887,"score":28,"level":0},{"x":1427,"y":887,"score":54,"level":0},{"x":1445,"y":887,"score":39,"level":0},{"x":470,"y":888,"score":26,"level":0},{"x":521,"y":888,"score":59,"level":0},{"x":582,"y":888,"score":46,"level":0},{"x":634,"y":888,"score":27,"level":0},{"x":679,"y":888,"score":89,"level":0},{"x":735,"y":888,"score":31,"level":0},{"x":893,"y":888,"score":105,"level":0},{"x":931,"y":888,"score":27,"level":0},{"x":971,"y":888,"score":32,"level":0},{"x":1031,"y":888,"score":91,"level":0},{"x":1136,"y":888,"score":91,"level":0},{"x":1250,"y":888,"score":41,"level":0},{"x":1300,"y":888,"score":140,"level":0},{"x":1345,"y":888,"score":55,"level":0},{"x":1385,"y":888,"score":30,"level":0},{"x":1432,"y":888,"score":27,"level":0},{"x":1462,"y":888,"score":26,"level":0},{"x":418,"y":889,"score":81,"level":0},{"x":433,"y":889,"score":153,"level":0},{"x":453,"y":889,"score":92,"level":0},{"x":527,"y":889,"score":38,"level":0},{"x":578,"y":889,"score":45,"level":0},{"x":625,"y":889,"score":56,"level":0},{"x":654,"y":889,"score":94,"level":0},{"x":663,"y":889,"score":84,"level":0},{"x":818,"y":889,"score":27,"level":0},{"x":913,"y":889,"score":27,"level":0},{"x":989,"y":889,"score":124,"level":0},{"x":993,"y":889,"score":75,"level":0},{"x":1024,"y":889,"score":112,"level":0},{"x":1062,"y":889,"score":89,"level":0},{"x":1109,"y":889,"score":46,"level":0},{"x":1208,"y":889,"score":32,"level":0},{"x":1246,"y":889,"score":132,"level":0},{"x":1263,"y":889,"score":65,"level":0},{"x":1278,"y":889,"score":99,"level":0},{"x":1285,"y":889,"score":79,"level":0},{"x":416,"y":890,"score":83,"level":0},{"x":447,"y":890,"score":30,"level":0},{"x":507,"y":890,"score":47,"level":0},{"x":523,"y":890,"score":99,"level":0},{"x":561,"y":890,"score":42,"level":0},{"x":648,"y":890,"score":88,"level":0},{"x":750,"y":890,"score":36,"level":0},{"x":888,"y":890,"score":147,"level":0},{"x":894,"y":890,"score":102,"level":0},{"x":971,"y":890,"score":36,"level":0},{"x":1086,"y":890,"score":53,"level":0},{"x":1227,"y":890,"score":54,"level":0},{"x":1330,"y":890,"score":32,"level":0},{"x":1343,"y":890,"score":26,"level":0},{"x":427,"y":891,"score":50,"level":0},{"x":483,"y":891,"score":46,"level":0},{"x":513,"y":891,"score":29,"level":0},{"x":517,"y":891,"score":47,"level":0},{"x":567,"y":891,"score":76,"level":0},{"x":574,"y":891,"score":31,"level":0},{"x":598,"y":891,"score":42,"level":0},{"x":621,"y":891,"score":57,"level":0},{"x":641,"y":891,"score":116,"level":0},{"x":674,"y":891,"score":30,"level":0},{"x":724,"y":891,"score":29,"level":0},{"x":802,"y":891,"score":31,"level":0},{"x":993,"y":891,"score":33,"level":0},{"x":1090,"y":891,"score":64,"level":0},{"x":1255,"y":891,"score":47,"level":0},{"x":1356,"y":891,"score":66,"level":0},{"x":1373,"y":891,"score":38,"level":0},{"x":1457,"y":891,"score":57,"level":0},{"x":1488,"y":891,"score":32,"level":0},{"x":659,"y":892,"score":27,"level":0},{"x":668,"y":892,"score":246,"level":0},{"x":726,"y":892,"score":56,"level":0},{"x":732,"y":892,"score":60,"level":0},{"x":764,"y":892,"score":42,"level":0},{"x":874,"y":892,"score":42,"level":0},{"x":916,"y":892,"score":88,"level":0},{"x":935,"y":892,"score":64,"level":0},{"x":953,"y":892,"score":51,"level":0},{"x":1011,"y":892,"score":153,"level":0},{"x":1056,"y":892,"score":140,"level":0},{"x":1094,"y":892,"score":36,"level":0},{"x":1102,"y":892,"score":53,"level":0},{"x":1111,"y":892,"score":90,"level":0},{"x":1147,"y":892,"score":76,"level":0},{"x":1218,"y":892,"score":52,"level":0},{"x":1302,"y":892,"score":258,"level":0},{"x":1397,"y":892,"score":28,"level":0},{"x":1479,"y":892,"score":41,"level":0},{"x":451,"y":893,"score":72,"level":0},{"x":742,"y":893,"score":46,"level":0},{"x":947,"y":893,"score":88,"level":0},{"x":973,"y":893,"score":35,"level":0},{"x":1129,"y":893,"score":35,"level":0},{"x":1295,"y":893,"score":45,"level":0},{"x":1314,"y":893,"score":58,"level":0},{"x":1330,"y":893,"score":54,"level":0},{"x":1364,"y":893,"score":47,"level":0},{"x":1445,"y":893,"score":42,"level":0},{"x":1463,"y":893,"score":26,"level":0},{"x":425,"y":894,"score":41,"level":0},{"x":462,"y":894,"score":71,"level":0},{"x":572,"y":894,"score":106,"level":0},{"x":578,"y":894,"score":53,"level":0},{"x":683,"y":894,"score":52,"level":0},{"x":690,"y":894,"score":34,"level":0},{"x":811,"y":894,"score":44,"level":0},{"x":882,"y":894,"score":152,"level":0},{"x":944,"y":894,"score":32,"level":0},{"x":965,"y":894,"score":85,"level":0},{"x":989,"y":894,"score":96,"level":0},{"x":1023,"y":894,"score":63,"level":0},{"x":1043,"y":894,"score":116,"level":0},{"x":1060,"y":894,"score":55,"level":0},{"x":1075,"y":894,"score":62,"level":0},{"x":1078,"y":894,"score":50,"level":0},{"x":1140,"y":894,"score":85,"level":0},{"x":1147,"y":894,"score":64,"level":0},{"x":1278,"y":894,"score":97,"level":0},{"x":1283,"y":894,"score":97,"level":0},{"x":1336,"y":894,"score":63,"level":0},{"x":1341,"y":894,"score":53,"level":0},{"x":1434,"y":894,"score":49,"level":0},{"x":1476,"y":894,"score":40,"level":0},{"x":412,"y":895,"score":40,"level":0},{"x":532,"y":895,"score":28,"level":0},{"x":548,"y":895,"score":31,"level":0},{"x":654,"y":895,"score":83,"level":0},{"x":660,"y":895,"score":38,"level":0},{"x":899,"y":895,"score":53,"level":0},{"x":923,"y":895,"score":49,"level":0},{"x":932,"y":895,"score":86,"level":0},{"x":1120,"y":895,"score":67,"level":0},{"x":1161,"y":895,"score":114,"level":0},{"x":1187,"y":895,"score":114,"level":0},{"x":1199,"y":895,"score":61,"level":0},{"x":1211,"y":895,"score":104,"level":0},{"x":1216,"y":895,"score":41,"level":0},{"x":1221,"y":895,"score":43,"level":0},{"x":1236,"y":895,"score":141,"level":0},{"x":1346,"y":895,"score":50,"level":0},{"x":1382,"y":895,"score":32,"level":0},{"x":1412,"y":895,"score":60,"level":0},{"x":438,"y":896,"score":71,"level":0},{"x":445,"y":896,"score":264,"level":0},{"x":560,"y":896,"score":238,"level":0},{"x":600,"y":896,"score":44,"level":0},{"x":734,"y":896,"score":58,"level":0},{"x":774,"y":896,"score":74,"level":0},{"x":1048,"y":896,"score":59,"level":0},{"x":1090,"y":896,"score":26,"level":0},{"x":1193,"y":896,"score":73,"level":0},{"x":1249,"y":896,"score":135,"level":0},{"x":1349,"y":896,"score":29,"level":0},{"x":1426,"y":896,"score":116,"level":0},{"x":1467,"y":896,"score":102,"level":0},{"x":465,"y":897,"score":41,"level":0},{"x":636,"y":897,"score":68,"level":0},{"x":794,"y":897,"score":36,"level":0},{"x":993,"y":897,"score":66,"level":0},{"x":1003,"y":897,"score":54,"level":0},{"x":1138,"y":897,"score":68,"level":0},{"x":1214,"y":897,"score":75,"level":0},{"x":1323,"y":897,"score":36,"level":0},{"x":459,"y":898,"score":88,"level":0},{"x":723,"y":898,"score":30,"level":0},{"x":831,"y":898,"score":95,"level":0},{"x":918,"y":898,"score":29,"level":0},{"x":953,"y":898,"score":31,"level":0},{"x":1034,"y":898,"score":29,"level":0},{"x":1067,"y":898,"score":36,"level":0},{"x":1086,"y":898,"score":64,"level":0},{"x":1096,"y":898,"score":90,"level":0},{"x":1127,"y":898,"score":151,"level":0},{"x":1150,"y":898,"score":76,"level":0},{"x":1290,"y":898,"score":156,"level":0},{"x":1301,"y":898,"score":65,"level":0},{"x":1363,"y":898,"score":31,"level":0},{"x":1430,"y":898,"score":77,"level":0},{"x":426,"y":899,"score":45,"level":0},{"x":553,"y":899,"score":75,"level":0},{"x":591,"y":899,"score":154,"level":0},{"x":668,"y":899,"score":40,"level":0},{"x":858,"y":899,"score":81,"level":0},{"x":979,"y":899,"score":194,"level":0},{"x":1008,"y":899,"score":54,"level":0},{"x":1031,"y":899,"score":62,"level":0},{"x":1099,"y":899,"score":69,"level":0},{"x":1121,"y":899,"score":95,"level":0},{"x":1148,"y":899,"score":79,"level":0},{"x":1264,"y":899,"score":42,"level":0},{"x":1276,"y":899,"score":51,"level":0},{"x":1377,"y":899,"score":29,"level":0},{"x":1416,"y":899,"score":30,"level":0},{"x":417,"y":900,"score":91,"level":0},{"x":641,"y":900,"score":113,"level":0},{"x":732,"y":900,"score":34,"level":0},{"x":820,"y":900,"score":140,"level":0},{"x":837,"y":900,"score":30,"level":0},{"x":993,"y":900,"score":72,"level":0},{"x":1041,"y":900,"score":152,"level":0},{"x":1136,"y":900,"score":35,"level":0},{"x":1144,"y":900,"score":30,"level":0},{"x":1208,"y":900,"score":272,"level":0},{"x":1224,"y":900,"score":175,"level":0},{"x":1229,"y":900,"score":112,"level":0},{"x":1244,"y":900,"score":179,"level":0},{"x":1250,"y":900,"score":37,"level":0},{"x":1336,"y":900,"score":29,"level":0},{"x":1407,"y":900,"score":89,"level":0},{"x":432,"y":901,"score":69,"level":0},{"x":452,"y":901,"score":74,"level":0},{"x":481,"y":901,"score":52,"level":0},{"x":631,"y":901,"score":30,"level":0},{"x":648,"y":901,"score":35,"level":0},{"x":661,"y":901,"score":55,"level":0},{"x":673,"y":901,"score":52,"level":0},{"x":713,"y":901,"score":78,"level":0},{"x":826,"y":901,"score":70,"level":0},{"x":846,"y":901,"score":108,"level":0},{"x":967,"y":901,"score":61,"level":0},{"x":1053,"y":901,"score":126,"level":0},{"x":1092,"y":901,"score":47,"level":0},{"x":1173,"y":901,"score":207,"level":0},{"x":1256,"y":901,"score":45,"level":0},{"x":1258,"y":901,"score":28,"level":0},{"x":1304,"y":901,"score":130,"level":0},{"x":1331,"y":901,"score":55,"level":0},{"x":1468,"y":901,"score":30,"level":0},{"x":1490,"y":901,"score":87,"level":0},{"x":655,"y":902,"score":151,"level":0},{"x":782,"y":902,"score":66,"level":0},{"x":816,"y":902,"score":103,"level":0},{"x":985,"y":902,"score":32,"level":0},{"x":1115,"y":902,"score":92,"level":0},{"x":1133,"y":902,"score":44,"level":0},{"x":1313,"y":902,"score":70,"level":0},{"x":1425,"y":902,"score":63,"level":0},{"x":1431,"y":902,"score":26,"level":0},{"x":1457,"y":902,"score":70,"level":0},{"x":447,"y":903,"score":76,"level":0},{"x":546,"y":903,"score":38,"level":0},{"x":679,"y":903,"score":175,"level":0},{"x":736,"y":903,"score":98,"level":0},{"x":762,"y":903,"score":66,"level":0},{"x":842,"y":903,"score":62,"level":0},{"x":866,"y":903,"score":147,"level":0},{"x":892,"y":903,"score":33,"level":0},{"x":918,"y":903,"score":26,"level":0},{"x":997,"y":903,"score":88,"level":0},{"x":1021,"y":903,"score":39,"level":0},{"x":1122,"y":903,"score":35,"level":0},{"x":1183,"y":903,"score":60,"level":0},{"x":1252,"y":903,"score":45,"level":0},{"x":1316,"y":903,"score":64,"level":0},{"x":1363,"y":903,"score":39,"level":0},{"x":476,"y":904,"score":35,"level":0},{"x":485,"y":904,"score":32,"level":0},{"x":540,"y":904,"score":116,"level":0},{"x":557,"y":904,"score":124,"level":0},{"x":575,"y":904,"score":149,"level":0},{"x":624,"y":904,"score":86,"level":0},{"x":627,"y":904,"score":56,"level":0},{"x":741,"y":904,"score":34,"level":0},{"x":759,"y":904,"score":41,"level":0},{"x":796,"y":904,"score":29,"level":0},{"x":834,"y":904,"score":52,"level":0},{"x":887,"y":904,"score":28,"level":0},{"x":1191,"y":904,"score":94,"level":0},{"x":1198,"y":904,"score":47,"level":0},{"x":1376,"y":904,"score":28,"level":0},{"x":1445,"y":904,"score":90,"level":0},{"x":1459,"y":904,"score":132,"level":0},{"x":545,"y":905,"score":29,"level":0},{"x":580,"y":905,"score":138,"level":0},{"x":589,"y":905,"score":98,"level":0},{"x":595,"y":905,"score":164,"level":0},{"x":710,"y":905,"score":26,"level":0},{"x":757,"y":905,"score":34,"level":0},{"x":811,"y":905,"score":33,"level":0},{"x":857,"y":905,"score":43,"level":0},{"x":907,"y":905,"score":91,"level":0},{"x":979,"y":905,"score":38,"level":0},{"x":1003,"y":905,"score":113,"level":0},{"x":1010,"y":905,"score":90,"level":0},{"x":1028,"y":905,"score":32,"level":0},{"x":1111,"y":905,"score":29,"level":0},{"x":1272,"y":905,"score":69,"level":0},{"x":1275,"y":905,"score":58,"level":0},{"x":1374,"y":905,"score":33,"level":0},{"x":1405,"y":905,"score":62,"level":0},{"x":1411,"y":905,"score":32,"level":0},{"x":1481,"y":905,"score":81,"level":0},{"x":1487,"y":905,"score":36,"level":0},{"x":404,"y":906,"score":31,"level":0},{"x":417,"y":906,"score":91,"level":0},{"x":526,"y":906,"score":67,"level":0},{"x":570,"y":906,"score":64,"level":0},{"x":618,"y":906,"score":27,"level":0},{"x":686,"y":906,"score":46,"level":0},{"x":970,"y":906,"score":201,"level":0},{"x":976,"y":906,"score":92,"level":0},{"x":1034,"y":906,"score":26,"level":0},{"x":1064,"y":906,"score":116,"level":0},{"x":1103,"y":906,"score":54,"level":0},{"x":1171,"y":906,"score":88,"level":0},{"x":1243,"y":906,"score":80,"level":0},{"x":1284,"y":906,"score":98,"level":0},{"x":1295,"y":906,"score":45,"level":0},{"x":1332,"y":906,"score":110,"level":0},{"x":1337,"y":906,"score":36,"level":0},{"x":1376,"y":906,"score":32,"level":0},{"x":1450,"y":906,"score":64,"level":0},{"x":377,"y":907,"score":92,"level":0},{"x":409,"y":907,"score":61,"level":0},{"x":465,"y":907,"score":42,"level":0},{"x":492,"y":907,"score":36,"level":0},{"x":504,"y":907,"score":27,"level":0},{"x":552,"y":907,"score":32,"level":0},{"x":702,"y":907,"score":29,"level":0},{"x":889,"y":907,"score":26,"level":0},{"x":947,"y":907,"score":69,"level":0},{"x":1071,"y":907,"score":204,"level":0},{"x":1106,"y":907,"score":98,"level":0},{"x":1134,"y":907,"score":97,"level":0},{"x":1156,"y":907,"score":99,"level":0},{"x":1237,"y":907,"score":114,"level":0},{"x":1251,"y":907,"score":55,"level":0},{"x":1254,"y":907,"score":90,"level":0},{"x":1314,"y":907,"score":69,"level":0},{"x":1347,"y":907,"score":42,"level":0},{"x":1420,"y":907,"score":144,"level":0},{"x":1432,"y":907,"score":144,"level":0},{"x":1457,"y":907,"score":92,"level":0},{"x":1490,"y":907,"score":66,"level":0},{"x":432,"y":908,"score":293,"level":0},{"x":438,"y":908,"score":154,"level":0},{"x":517,"y":908,"score":40,"level":0},{"x":544,"y":908,"score":37,"level":0},{"x":572,"y":908,"score":68,"level":0},{"x":604,"y":908,"score":34,"level":0},{"x":623,"y":908,"score":46,"level":0},{"x":679,"y":908,"score":79,"level":0},{"x":738,"y":908,"score":121,"level":0},{"x":912,"y":908,"score":46,"level":0},{"x":1060,"y":908,"score":36,"level":0},{"x":1079,"y":908,"score":34,"level":0},{"x":1123,"y":908,"score":27,"level":0},{"x":1146,"y":908,"score":81,"level":0},{"x":1211,"y":908,"score":32,"level":0},{"x":1227,"y":908,"score":166,"level":0},{"x":1319,"y":908,"score":56,"level":0},{"x":1326,"y":908,"score":58,"level":0},{"x":1439,"y":908,"score":68,"level":0},{"x":391,"y":909,"score":27,"level":0},{"x":647,"y":909,"score":42,"level":0},{"x":719,"y":909,"score":29,"level":0},{"x":786,"y":909,"score":46,"level":0},{"x":820,"y":909,"score":129,"level":0},{"x":826,"y":909,"score":71,"level":0},{"x":934,"y":909,"score":48,"level":0},{"x":959,"y":909,"score":46,"level":0},{"x":1216,"y":909,"score":37,"level":0},{"x":1289,"y":909,"score":91,"level":0},{"x":1297,"y":909,"score":47,"level":0},{"x":1303,"y":909,"score":148,"level":0},{"x":1335,"y":909,"score":44,"level":0},{"x":1366,"y":909,"score":38,"level":0},{"x":1413,"y":909,"score":49,"level":0},{"x":1445,"y":909,"score":81,"level":0},{"x":592,"y":910,"score":44,"level":0},{"x":603,"y":910,"score":32,"level":0},{"x":629,"y":910,"score":56,"level":0},{"x":661,"y":910,"score":102,"level":0},{"x":707,"y":910,"score":100,"level":0},{"x":751,"y":910,"score":33,"level":0},{"x":797,"y":910,"score":106,"level":0},{"x":920,"y":910,"score":115,"level":0},{"x":951,"y":910,"score":42,"level":0},{"x":1105,"y":910,"score":66,"level":0},{"x":1242,"y":910,"score":69,"level":0},{"x":1273,"y":910,"score":48,"level":0},{"x":1279,"y":910,"score":62,"level":0},{"x":1357,"y":910,"score":39,"level":0},{"x":1405,"y":910,"score":90,"level":0},{"x":1441,"y":910,"score":60,"level":0},{"x":1464,"y":910,"score":70,"level":0},{"x":386,"y":911,"score":153,"level":0},{"x":509,"y":911,"score":28,"level":0},{"x":642,"y":911,"score":51,"level":0},{"x":741,"y":911,"score":79,"level":0},{"x":834,"y":911,"score":55,"level":0},{"x":944,"y":911,"score":32,"level":0},{"x":1054,"y":911,"score":59,"level":0},{"x":1341,"y":911,"score":136,"level":0},{"x":1387,"y":911,"score":32,"level":0},{"x":1447,"y":911,"score":31,"level":0},{"x":1450,"y":911,"score":74,"level":0},{"x":1467,"y":911,"score":40,"level":0},{"x":1481,"y":911,"score":95,"level":0},{"x":478,"y":912,"score":36,"level":0},{"x":559,"y":912,"score":37,"level":0},{"x":972,"y":912,"score":93,"level":0},{"x":1004,"y":912,"score":32,"level":0},{"x":1011,"y":912,"score":96,"level":0},{"x":1042,"y":912,"score":60,"level":0},{"x":1097,"y":912,"score":51,"level":0},{"x":1163,"y":912,"score":44,"level":0},{"x":1173,"y":912,"score":42,"level":0},{"x":1235,"y":912,"score":54,"level":0},{"x":1301,"y":912,"score":103,"level":0},{"x":1314,"y":912,"score":67,"level":0},{"x":1397,"y":912,"score":111,"level":0},{"x":1420,"y":912,"score":44,"level":0},{"x":1433,"y":912,"score":28,"level":0},{"x":386,"y":913,"score":121,"level":0},{"x":503,"y":913,"score":40,"level":0},{"x":673,"y":913,"score":178,"level":0},{"x":680,"y":913,"score":99,"level":0},{"x":761,"y":913,"score":35,"level":0},{"x":806,"y":913,"score":116,"level":0},{"x":868,"y":913,"score":52,"level":0},{"x":1063,"y":913,"score":162,"level":0},{"x":1069,"y":913,"score":178,"level":0},{"x":1231,"y":913,"score":28,"level":0},{"x":451,"y":914,"score":72,"level":0},{"x":526,"y":914,"score":167,"level":0},{"x":618,"y":914,"score":72,"level":0},{"x":688,"y":914,"score":31,"level":0},{"x":737,"y":914,"score":35,"level":0},{"x":826,"y":914,"score":95,"level":0},{"x":854,"y":914,"score":73,"level":0},{"x":860,"y":914,"score":136,"level":0},{"x":912,"y":914,"score":46,"level":0},{"x":970,"y":914,"score":52,"level":0},{"x":1016,"y":914,"score":49,"level":0},{"x":1207,"y":914,"score":107,"level":0},{"x":1243,"y":914,"score":43,"level":0},{"x":1298,"y":914,"score":69,"level":0},{"x":1490,"y":914,"score":32,"level":0},{"x":442,"y":915,"score":45,"level":0},{"x":513,"y":915,"score":33,"level":0},{"x":519,"y":915,"score":120,"level":0},{"x":566,"y":915,"score":47,"level":0},{"x":660,"y":915,"score":52,"level":0},{"x":821,"y":915,"score":57,"level":0},{"x":870,"y":915,"score":69,"level":0},{"x":920,"y":915,"score":113,"level":0},{"x":1076,"y":915,"score":77,"level":0},{"x":1080,"y":915,"score":67,"level":0},{"x":1102,"y":915,"score":36,"level":0},{"x":1158,"y":915,"score":50,"level":0},{"x":1184,"y":915,"score":36,"level":0},{"x":1197,"y":915,"score":109,"level":0},{"x":1256,"y":915,"score":69,"level":0},{"x":1323,"y":915,"score":33,"level":0},{"x":1356,"y":915,"score":28,"level":0},{"x":1427,"y":915,"score":46,"level":0},{"x":464,"y":916,"score":64,"level":0},{"x":547,"y":916,"score":87,"level":0},{"x":654,"y":916,"score":53,"level":0},{"x":797,"y":916,"score":30,"level":0},{"x":875,"y":916,"score":58,"level":0},{"x":1074,"y":916,"score":100,"level":0},{"x":1254,"y":916,"score":100,"level":0},{"x":1267,"y":916,"score":90,"level":0},{"x":1329,"y":916,"score":97,"level":0},{"x":1407,"y":916,"score":56,"level":0},{"x":1416,"y":916,"score":30,"level":0},{"x":434,"y":917,"score":88,"level":0},{"x":441,"y":917,"score":49,"level":0},{"x":530,"y":917,"score":117,"level":0},{"x":630,"y":917,"score":153,"level":0},{"x":710,"y":917,"score":32,"level":0},{"x":735,"y":917,"score":85,"level":0},{"x":944,"y":917,"score":40,"level":0},{"x":953,"y":917,"score":46,"level":0},{"x":963,"y":917,"score":31,"level":0},{"x":1010,"y":917,"score":56,"level":0},{"x":1088,"y":917,"score":183,"level":0},{"x":1129,"y":917,"score":29,"level":0},{"x":1181,"y":917,"score":54,"level":0},{"x":1216,"y":917,"score":38,"level":0},{"x":1309,"y":917,"score":33,"level":0},{"x":1341,"y":917,"score":26,"level":0},{"x":1382,"y":917,"score":31,"level":0},{"x":1395,"y":917,"score":94,"level":0},{"x":473,"y":918,"score":65,"level":0},{"x":697,"y":918,"score":38,"level":0},{"x":781,"y":918,"score":27,"level":0},{"x":791,"y":918,"score":73,"level":0},{"x":856,"y":918,"score":71,"level":0},{"x":928,"y":918,"score":46,"level":0},{"x":975,"y":918,"score":62,"level":0},{"x":1152,"y":918,"score":114,"level":0},{"x":1169,"y":918,"score":144,"level":0},{"x":1176,"y":918,"score":47,"level":0},{"x":1201,"y":918,"score":90,"level":0},{"x":1273,"y":918,"score":146,"level":0},{"x":1303,"y":918,"score":96,"level":0},{"x":1338,"y":918,"score":55,"level":0},{"x":1405,"y":918,"score":50,"level":0},{"x":377,"y":919,"score":40,"level":0},{"x":400,"y":919,"score":57,"level":0},{"x":865,"y":919,"score":45,"level":0},{"x":877,"y":919,"score":28,"level":0},{"x":1059,"y":919,"score":36,"level":0},{"x":1069,"y":919,"score":197,"level":0},{"x":1093,"y":919,"score":47,"level":0},{"x":1245,"y":919,"score":183,"level":0},{"x":1253,"y":919,"score":101,"level":0},{"x":1267,"y":919,"score":106,"level":0},{"x":1297,"y":919,"score":34,"level":0},{"x":1330,"y":919,"score":114,"level":0},{"x":421,"y":920,"score":96,"level":0},{"x":485,"y":920,"score":31,"level":0},{"x":515,"y":920,"score":75,"level":0},{"x":598,"y":920,"score":68,"level":0},{"x":612,"y":920,"score":120,"level":0},{"x":648,"y":920,"score":91,"level":0},{"x":704,"y":920,"score":129,"level":0},{"x":826,"y":920,"score":134,"level":0},{"x":937,"y":920,"score":69,"level":0},{"x":1122,"y":920,"score":28,"level":0},{"x":1206,"y":920,"score":188,"level":0},{"x":1212,"y":920,"score":49,"level":0},{"x":1295,"y":920,"score":65,"level":0},{"x":1371,"y":920,"score":79,"level":0},{"x":1396,"y":920,"score":102,"level":0},{"x":377,"y":921,"score":49,"level":0},{"x":467,"y":921,"score":94,"level":0},{"x":522,"y":921,"score":102,"level":0},{"x":550,"y":921,"score":79,"level":0},{"x":557,"y":921,"score":64,"level":0},{"x":619,"y":921,"score":67,"level":0},{"x":780,"y":921,"score":46,"level":0},{"x":870,"y":921,"score":57,"level":0},{"x":961,"y":921,"score":34,"level":0},{"x":1018,"y":921,"score":107,"level":0},{"x":1046,"y":921,"score":61,"level":0},{"x":1111,"y":921,"score":87,"level":0},{"x":1219,"y":921,"score":46,"level":0},{"x":1257,"y":921,"score":31,"level":0},{"x":1353,"y":921,"score":51,"level":0},{"x":1407,"y":921,"score":34,"level":0},{"x":1419,"y":921,"score":38,"level":0},{"x":436,"y":922,"score":159,"level":0},{"x":456,"y":922,"score":84,"level":0},{"x":531,"y":922,"score":55,"level":0},{"x":570,"y":922,"score":110,"level":0},{"x":923,"y":922,"score":55,"level":0},{"x":1081,"y":922,"score":76,"level":0},{"x":1134,"y":922,"score":70,"level":0},{"x":1136,"y":922,"score":79,"level":0},{"x":1149,"y":922,"score":34,"level":0},{"x":1157,"y":922,"score":61,"level":0},{"x":1162,"y":922,"score":175,"level":0},{"x":1309,"y":922,"score":35,"level":0},{"x":1396,"y":922,"score":90,"level":0},{"x":773,"y":923,"score":183,"level":0},{"x":1037,"y":923,"score":105,"level":0},{"x":1054,"y":923,"score":40,"level":0},{"x":1362,"y":923,"score":55,"level":0},{"x":1403,"y":923,"score":153,"level":0},{"x":1443,"y":923,"score":60,"level":0},{"x":489,"y":924,"score":43,"level":0},{"x":496,"y":924,"score":37,"level":0},{"x":641,"y":924,"score":163,"level":0},{"x":669,"y":924,"score":68,"level":0},{"x":720,"y":924,"score":74,"level":0},{"x":866,"y":924,"score":80,"level":0},{"x":1035,"y":924,"score":94,"level":0},{"x":1074,"y":924,"score":61,"level":0},{"x":1263,"y":924,"score":195,"level":0},{"x":1274,"y":924,"score":94,"level":0},{"x":1280,"y":924,"score":74,"level":0},{"x":1298,"y":924,"score":46,"level":0},{"x":1401,"y":924,"score":74,"level":0},{"x":1433,"y":924,"score":32,"level":0},{"x":454,"y":925,"score":78,"level":0},{"x":463,"y":925,"score":74,"level":0},{"x":527,"y":925,"score":82,"level":0},{"x":633,"y":925,"score":120,"level":0},{"x":778,"y":925,"score":129,"level":0},{"x":810,"y":925,"score":40,"level":0},{"x":837,"y":925,"score":72,"level":0},{"x":854,"y":925,"score":152,"level":0},{"x":1076,"y":925,"score":93,"level":0},{"x":1182,"y":925,"score":34,"level":0},{"x":1216,"y":925,"score":62,"level":0},{"x":1244,"y":925,"score":137,"level":0},{"x":1254,"y":925,"score":171,"level":0},{"x":1359,"y":925,"score":26,"level":0},{"x":1368,"y":925,"score":33,"level":0},{"x":1490,"y":925,"score":39,"level":0},{"x":404,"y":926,"score":80,"level":0},{"x":469,"y":926,"score":125,"level":0},{"x":483,"y":926,"score":151,"level":0},{"x":592,"y":926,"score":46,"level":0},{"x":610,"y":926,"score":140,"level":0},{"x":731,"y":926,"score":96,"level":0},{"x":820,"y":926,"score":58,"level":0},{"x":918,"y":926,"score":54,"level":0},{"x":927,"y":926,"score":125,"level":0},{"x":960,"y":926,"score":120,"level":0},{"x":966,"y":926,"score":28,"level":0},{"x":1010,"y":926,"score":82,"level":0},{"x":1112,"y":926,"score":28,"level":0},{"x":1166,"y":926,"score":32,"level":0},{"x":1170,"y":926,"score":58,"level":0},{"x":1304,"y":926,"score":30,"level":0},{"x":1330,"y":926,"score":33,"level":0},{"x":1373,"y":926,"score":50,"level":0},{"x":1464,"y":926,"score":45,"level":0},{"x":416,"y":927,"score":43,"level":0},{"x":434,"y":927,"score":138,"level":0},{"x":547,"y":927,"score":102,"level":0},{"x":561,"y":927,"score":87,"level":0},{"x":585,"y":927,"score":26,"level":0},{"x":604,"y":927,"score":61,"level":0},{"x":763,"y":927,"score":31,"level":0},{"x":826,"y":927,"score":31,"level":0},{"x":985,"y":927,"score":54,"level":0},{"x":1046,"y":927,"score":102,"level":0},{"x":1079,"y":927,"score":41,"level":0},{"x":1154,"y":927,"score":117,"level":0},{"x":1230,"y":927,"score":93,"level":0},{"x":1237,"y":927,"score":28,"level":0},{"x":1284,"y":927,"score":140,"level":0},{"x":1316,"y":927,"score":85,"level":0},{"x":1337,"y":927,"score":31,"level":0},{"x":398,"y":928,"score":57,"level":0},{"x":448,"y":928,"score":51,"level":0},{"x":556,"y":928,"score":30,"level":0},{"x":571,"y":928,"score":45,"level":0},{"x":647,"y":928,"score":28,"level":0},{"x":765,"y":928,"score":26,"level":0},{"x":783,"y":928,"score":41,"level":0},{"x":1125,"y":928,"score":53,"level":0},{"x":1164,"y":928,"score":31,"level":0},{"x":1310,"y":928,"score":36,"level":0},{"x":1322,"y":928,"score":34,"level":0},{"x":1372,"y":928,"score":58,"level":0},{"x":377,"y":929,"score":44,"level":0},{"x":438,"y":929,"score":41,"level":0},{"x":471,"y":929,"score":47,"level":0},{"x":636,"y":929,"score":52,"level":0},{"x":769,"y":929,"score":37,"level":0},{"x":789,"y":929,"score":66,"level":0},{"x":869,"y":929,"score":66,"level":0},{"x":913,"y":929,"score":27,"level":0},{"x":926,"y":929,"score":139,"level":0},{"x":1033,"y":929,"score":55,"level":0},{"x":1147,"y":929,"score":27,"level":0},{"x":1166,"y":929,"score":31,"level":0},{"x":1198,"y":929,"score":32,"level":0},{"x":1300,"y":929,"score":46,"level":0},{"x":1410,"y":929,"score":27,"level":0},{"x":1475,"y":929,"score":37,"level":0},{"x":422,"y":930,"score":33,"level":0},{"x":497,"y":930,"score":92,"level":0},{"x":527,"y":930,"score":59,"level":0},{"x":536,"y":930,"score":27,"level":0},{"x":591,"y":930,"score":58,"level":0},{"x":642,"y":930,"score":30,"level":0},{"x":837,"y":930,"score":37,"level":0},{"x":847,"y":930,"score":31,"level":0},{"x":882,"y":930,"score":46,"level":0},{"x":931,"y":930,"score":109,"level":0},{"x":1001,"y":930,"score":136,"level":0},{"x":1006,"y":930,"score":138,"level":0},{"x":1124,"y":930,"score":36,"level":0},{"x":1248,"y":930,"score":36,"level":0},{"x":1264,"y":930,"score":67,"level":0},{"x":1274,"y":930,"score":134,"level":0},{"x":506,"y":931,"score":265,"level":0},{"x":515,"y":931,"score":175,"level":0},{"x":521,"y":931,"score":44,"level":0},{"x":631,"y":931,"score":48,"level":0},{"x":651,"y":931,"score":110,"level":0},{"x":732,"y":931,"score":100,"level":0},{"x":750,"y":931,"score":78,"level":0},{"x":798,"y":931,"score":26,"level":0},{"x":841,"y":931,"score":52,"level":0},{"x":957,"y":931,"score":69,"level":0},{"x":1143,"y":931,"score":83,"level":0},{"x":1173,"y":931,"score":184,"level":0},{"x":1214,"y":931,"score":80,"level":0},{"x":1320,"y":931,"score":98,"level":0},{"x":1337,"y":931,"score":40,"level":0},{"x":1378,"y":931,"score":36,"level":0},{"x":456,"y":932,"score":133,"level":0},{"x":552,"y":932,"score":30,"level":0},{"x":607,"y":932,"score":64,"level":0},{"x":619,"y":932,"score":82,"level":0},{"x":778,"y":932,"score":41,"level":0},{"x":945,"y":932,"score":27,"level":0},{"x":960,"y":932,"score":82,"level":0},{"x":979,"y":932,"score":90,"level":0},{"x":995,"y":932,"score":152,"level":0},{"x":1386,"y":932,"score":55,"level":0},{"x":380,"y":933,"score":37,"level":0},{"x":433,"y":933,"score":63,"level":0},{"x":560,"y":933,"score":67,"level":0},{"x":745,"y":933,"score":35,"level":0},{"x":811,"y":933,"score":44,"level":0},{"x":917,"y":933,"score":35,"level":0},{"x":952,"y":933,"score":163,"level":0},{"x":968,"y":933,"score":48,"level":0},{"x":1040,"y":933,"score":50,"level":0},{"x":1053,"y":933,"score":70,"level":0},{"x":1112,"y":933,"score":60,"level":0},{"x":1258,"y":933,"score":44,"level":0},{"x":1311,"y":933,"score":56,"level":0},{"x":461,"y":934,"score":55,"level":0},{"x":487,"y":934,"score":55,"level":0},{"x":522,"y":934,"score":31,"level":0},{"x":699,"y":934,"score":114,"level":0},{"x":740,"y":934,"score":134,"level":0},{"x":805,"y":934,"score":90,"level":0},{"x":842,"y":934,"score":42,"level":0},{"x":1061,"y":934,"score":81,"level":0},{"x":1148,"y":934,"score":64,"level":0},{"x":1242,"y":934,"score":49,"level":0},{"x":1317,"y":934,"score":53,"level":0},{"x":1352,"y":934,"score":92,"level":0},{"x":1357,"y":934,"score":45,"level":0},{"x":389,"y":935,"score":37,"level":0},{"x":426,"y":935,"score":53,"level":0},{"x":500,"y":935,"score":72,"level":0},{"x":543,"y":935,"score":80,"level":0},{"x":567,"y":935,"score":38,"level":0},{"x":626,"y":935,"score":98,"level":0},{"x":675,"y":935,"score":44,"level":0},{"x":683,"y":935,"score":38,"level":0},{"x":714,"y":935,"score":65,"level":0},{"x":720,"y":935,"score":45,"level":0},{"x":862,"y":935,"score":86,"level":0},{"x":868,"y":935,"score":184,"level":0},{"x":922,"y":935,"score":119,"level":0},{"x":962,"y":935,"score":73,"level":0},{"x":974,"y":935,"score":148,"level":0},{"x":1056,"y":935,"score":67,"level":0},{"x":1063,"y":935,"score":112,"level":0},{"x":1074,"y":935,"score":71,"level":0},{"x":1105,"y":935,"score":27,"level":0},{"x":1136,"y":935,"score":30,"level":0},{"x":1178,"y":935,"score":132,"level":0},{"x":1244,"y":935,"score":121,"level":0},{"x":1273,"y":935,"score":42,"level":0},{"x":1290,"y":935,"score":93,"level":0},{"x":593,"y":936,"score":61,"level":0},{"x":759,"y":936,"score":55,"level":0},{"x":829,"y":936,"score":26,"level":0},{"x":851,"y":936,"score":30,"level":0},{"x":882,"y":936,"score":29,"level":0},{"x":935,"y":936,"score":120,"level":0},{"x":1069,"y":936,"score":34,"level":0},{"x":1153,"y":936,"score":39,"level":0},{"x":1234,"y":936,"score":45,"level":0},{"x":1268,"y":936,"score":45,"level":0},{"x":385,"y":937,"score":51,"level":0},{"x":395,"y":937,"score":100,"level":0},{"x":405,"y":937,"score":81,"level":0},{"x":417,"y":937,"score":70,"level":0},{"x":438,"y":937,"score":47,"level":0},{"x":481,"y":937,"score":79,"level":0},{"x":507,"y":937,"score":34,"level":0},{"x":514,"y":937,"score":30,"level":0},{"x":638,"y":937,"score":158,"level":0},{"x":692,"y":937,"score":57,"level":0},{"x":753,"y":937,"score":115,"level":0},{"x":792,"y":937,"score":32,"level":0},{"x":887,"y":937,"score":29,"level":0},{"x":957,"y":937,"score":221,"level":0},{"x":1017,"y":937,"score":34,"level":0},{"x":1094,"y":937,"score":88,"level":0},{"x":1132,"y":937,"score":47,"level":0},{"x":1170,"y":937,"score":96,"level":0},{"x":1179,"y":937,"score":134,"level":0},{"x":1202,"y":937,"score":41,"level":0},{"x":1246,"y":937,"score":98,"level":0},{"x":1298,"y":937,"score":58,"level":0},{"x":444,"y":938,"score":41,"level":0},{"x":558,"y":938,"score":68,"level":0},{"x":602,"y":938,"score":86,"level":0},{"x":615,"y":938,"score":51,"level":0},{"x":633,"y":938,"score":84,"level":0},{"x":665,"y":938,"score":54,"level":0},{"x":765,"y":938,"score":111,"level":0},{"x":781,"y":938,"score":34,"level":0},{"x":977,"y":938,"score":69,"level":0},{"x":1013,"y":938,"score":120,"level":0},{"x":1135,"y":938,"score":54,"level":0},{"x":1162,"y":938,"score":80,"level":0},{"x":1213,"y":938,"score":83,"level":0},{"x":1215,"y":938,"score":62,"level":0},{"x":1293,"y":938,"score":60,"level":0},{"x":1307,"y":938,"score":66,"level":0},{"x":494,"y":939,"score":30,"level":0},{"x":532,"y":939,"score":50,"level":0},{"x":649,"y":939,"score":90,"level":0},{"x":814,"y":939,"score":142,"level":0},{"x":952,"y":939,"score":75,"level":0},{"x":1102,"y":939,"score":35,"level":0},{"x":1196,"y":939,"score":52,"level":0},{"x":1241,"y":939,"score":195,"level":0},{"x":1261,"y":939,"score":46,"level":0},{"x":1284,"y":939,"score":36,"level":0},{"x":1311,"y":939,"score":66,"level":0},{"x":1490,"y":939,"score":32,"level":0},{"x":394,"y":940,"score":76,"level":0},{"x":425,"y":940,"score":52,"level":0},{"x":594,"y":940,"score":39,"level":0},{"x":626,"y":940,"score":54,"level":0},{"x":660,"y":940,"score":80,"level":0},{"x":701,"y":940,"score":26,"level":0},{"x":703,"y":940,"score":39,"level":0},{"x":715,"y":940,"score":87,"level":0},{"x":737,"y":940,"score":56,"level":0},{"x":826,"y":940,"score":31,"level":0},{"x":858,"y":940,"score":39,"level":0},{"x":891,"y":940,"score":70,"level":0},{"x":943,"y":940,"score":116,"level":0},{"x":965,"y":940,"score":32,"level":0},{"x":1029,"y":940,"score":32,"level":0},{"x":1064,"y":940,"score":32,"level":0},{"x":1104,"y":940,"score":26,"level":0},{"x":1127,"y":940,"score":124,"level":0},{"x":1183,"y":940,"score":154,"level":0},{"x":1221,"y":940,"score":27,"level":0},{"x":1230,"y":940,"score":80,"level":0},{"x":1295,"y":940,"score":44,"level":0},{"x":1335,"y":940,"score":86,"level":0},{"x":1341,"y":940,"score":208,"level":0},{"x":1348,"y":940,"score":130,"level":0},{"x":1403,"y":940,"score":30,"level":0},{"x":400,"y":941,"score":91,"level":0},{"x":501,"y":941,"score":106,"level":0},{"x":612,"y":941,"score":38,"level":0},{"x":745,"y":941,"score":107,"level":0},{"x":757,"y":941,"score":73,"level":0},{"x":821,"y":941,"score":42,"level":0},{"x":860,"y":941,"score":31,"level":0},{"x":869,"y":941,"score":120,"level":0},{"x":876,"y":941,"score":34,"level":0},{"x":989,"y":941,"score":226,"level":0},{"x":1005,"y":941,"score":100,"level":0},{"x":1074,"y":941,"score":88,"level":0},{"x":1247,"y":941,"score":33,"level":0},{"x":1270,"y":941,"score":35,"level":0},{"x":1322,"y":941,"score":53,"level":0},{"x":1374,"y":941,"score":31,"level":0},{"x":1405,"y":941,"score":34,"level":0},{"x":393,"y":942,"score":78,"level":0},{"x":508,"y":942,"score":40,"level":0},{"x":513,"y":942,"score":94,"level":0},{"x":638,"y":942,"score":27,"level":0},{"x":881,"y":942,"score":35,"level":0},{"x":886,"y":942,"score":31,"level":0},{"x":917,"y":942,"score":36,"level":0},{"x":938,"y":942,"score":94,"level":0},{"x":950,"y":942,"score":32,"level":0},{"x":968,"y":942,"score":36,"level":0},{"x":983,"y":942,"score":114,"level":0},{"x":1020,"y":942,"score":105,"level":0},{"x":1036,"y":942,"score":145,"level":0},{"x":1086,"y":942,"score":210,"level":0},{"x":1105,"y":942,"score":40,"level":0},{"x":1179,"y":942,"score":251,"level":0},{"x":1217,"y":942,"score":30,"level":0},{"x":1236,"y":942,"score":170,"level":0},{"x":1286,"y":942,"score":34,"level":0},{"x":379,"y":943,"score":70,"level":0},{"x":558,"y":943,"score":67,"level":0},{"x":586,"y":943,"score":64,"level":0},{"x":640,"y":943,"score":26,"level":0},{"x":665,"y":943,"score":84,"level":0},{"x":862,"y":943,"score":96,"level":0},{"x":1011,"y":943,"score":27,"level":0},{"x":1050,"y":943,"score":43,"level":0},{"x":1078,"y":943,"score":48,"level":0},{"x":1092,"y":943,"score":85,"level":0},{"x":1113,"y":943,"score":33,"level":0},{"x":1171,"y":943,"score":142,"level":0},{"x":1200,"y":943,"score":37,"level":0},{"x":1228,"y":943,"score":134,"level":0},{"x":1309,"y":943,"score":50,"level":0},{"x":1332,"y":943,"score":117,"level":0},{"x":1449,"y":943,"score":35,"level":0},{"x":384,"y":944,"score":130,"level":0},{"x":424,"y":944,"score":67,"level":0},{"x":430,"y":944,"score":59,"level":0},{"x":467,"y":944,"score":31,"level":0},{"x":479,"y":944,"score":71,"level":0},{"x":487,"y":944,"score":116,"level":0},{"x":494,"y":944,"score":165,"level":0},{"x":602,"y":944,"score":90,"level":0},{"x":671,"y":944,"score":35,"level":0},{"x":904,"y":944,"score":88,"level":0},{"x":1043,"y":944,"score":29,"level":0},{"x":1064,"y":944,"score":28,"level":0},{"x":1120,"y":944,"score":156,"level":0},{"x":1133,"y":944,"score":34,"level":0},{"x":1148,"y":944,"score":92,"level":0},{"x":1205,"y":944,"score":38,"level":0},{"x":1337,"y":944,"score":54,"level":0},{"x":1461,"y":944,"score":40,"level":0},{"x":401,"y":945,"score":73,"level":0},{"x":591,"y":945,"score":33,"level":0},{"x":632,"y":945,"score":29,"level":0},{"x":654,"y":945,"score":79,"level":0},{"x":708,"y":945,"score":32,"level":0},{"x":723,"y":945,"score":31,"level":0},{"x":735,"y":945,"score":65,"level":0},{"x":820,"y":945,"score":35,"level":0},{"x":885,"y":945,"score":45,"level":0},{"x":941,"y":945,"score":42,"level":0},{"x":978,"y":945,"score":26,"level":0},{"x":1061,"y":945,"score":94,"level":0},{"x":1076,"y":945,"score":34,"level":0},{"x":1157,"y":945,"score":35,"level":0},{"x":1196,"y":945,"score":30,"level":0},{"x":1213,"y":945,"score":108,"level":0},{"x":1238,"y":945,"score":86,"level":0},{"x":1261,"y":945,"score":54,"level":0},{"x":1278,"y":945,"score":65,"level":0},{"x":1342,"y":945,"score":108,"level":0},{"x":1490,"y":945,"score":29,"level":0},{"x":377,"y":946,"score":58,"level":0},{"x":383,"y":946,"score":131,"level":0},{"x":408,"y":946,"score":62,"level":0},{"x":473,"y":946,"score":31,"level":0},{"x":889,"y":946,"score":112,"level":0},{"x":922,"y":946,"score":44,"level":0},{"x":931,"y":946,"score":71,"level":0},{"x":988,"y":946,"score":101,"level":0},{"x":1032,"y":946,"score":51,"level":0},{"x":1151,"y":946,"score":59,"level":0},{"x":1162,"y":946,"score":35,"level":0},{"x":1183,"y":946,"score":281,"level":0},{"x":1251,"y":946,"score":134,"level":0},{"x":1284,"y":946,"score":68,"level":0},{"x":1302,"y":946,"score":49,"level":0},{"x":1348,"y":946,"score":82,"level":0},{"x":513,"y":947,"score":38,"level":0},{"x":528,"y":947,"score":27,"level":0},{"x":663,"y":947,"score":59,"level":0},{"x":717,"y":947,"score":57,"level":0},{"x":747,"y":947,"score":63,"level":0},{"x":832,"y":947,"score":91,"level":0},{"x":887,"y":947,"score":107,"level":0},{"x":909,"y":947,"score":168,"level":0},{"x":1035,"y":947,"score":39,"level":0},{"x":1060,"y":947,"score":81,"level":0},{"x":1104,"y":947,"score":40,"level":0},{"x":1106,"y":947,"score":39,"level":0},{"x":1189,"y":947,"score":94,"level":0},{"x":1229,"y":947,"score":122,"level":0},{"x":1309,"y":947,"score":96,"level":0},{"x":1475,"y":947,"score":35,"level":0},{"x":377,"y":948,"score":61,"level":0},{"x":418,"y":948,"score":30,"level":0},{"x":437,"y":948,"score":79,"level":0},{"x":461,"y":948,"score":34,"level":0},{"x":463,"y":948,"score":44,"level":0},{"x":498,"y":948,"score":52,"level":0},{"x":573,"y":948,"score":79,"level":0},{"x":580,"y":948,"score":162,"level":0},{"x":667,"y":948,"score":96,"level":0},{"x":727,"y":948,"score":117,"level":0},{"x":893,"y":948,"score":33,"level":0},{"x":1170,"y":948,"score":37,"level":0},{"x":1178,"y":948,"score":31,"level":0},{"x":1206,"y":948,"score":63,"level":0},{"x":1319,"y":948,"score":58,"level":0},{"x":389,"y":949,"score":114,"level":0},{"x":396,"y":949,"score":62,"level":0},{"x":449,"y":949,"score":66,"level":0},{"x":477,"y":949,"score":79,"level":0},{"x":540,"y":949,"score":36,"level":0},{"x":550,"y":949,"score":98,"level":0},{"x":555,"y":949,"score":30,"level":0},{"x":675,"y":949,"score":40,"level":0},{"x":700,"y":949,"score":35,"level":0},{"x":736,"y":949,"score":34,"level":0},{"x":738,"y":949,"score":45,"level":0},{"x":776,"y":949,"score":26,"level":0},{"x":857,"y":949,"score":27,"level":0},{"x":862,"y":949,"score":100,"level":0},{"x":898,"y":949,"score":32,"level":0},{"x":903,"y":949,"score":26,"level":0},{"x":1011,"y":949,"score":33,"level":0},{"x":1094,"y":949,"score":98,"level":0},{"x":1099,"y":949,"score":96,"level":0},{"x":1113,"y":949,"score":91,"level":0},{"x":1121,"y":949,"score":101,"level":0},{"x":1269,"y":949,"score":150,"level":0},{"x":1353,"y":949,"score":26,"level":0},{"x":1358,"y":949,"score":30,"level":0},{"x":1398,"y":949,"score":60,"level":0},{"x":1414,"y":949,"score":56,"level":0},{"x":1450,"y":949,"score":32,"level":0},{"x":423,"y":950,"score":65,"level":0},{"x":487,"y":950,"score":94,"level":0},{"x":575,"y":950,"score":90,"level":0},{"x":591,"y":950,"score":84,"level":0},{"x":728,"y":950,"score":28,"level":0},{"x":842,"y":950,"score":71,"level":0},{"x":1077,"y":950,"score":129,"level":0},{"x":1085,"y":950,"score":26,"level":0},{"x":1213,"y":950,"score":70,"level":0},{"x":1261,"y":950,"score":162,"level":0},{"x":1345,"y":950,"score":73,"level":0},{"x":1444,"y":950,"score":38,"level":0},{"x":481,"y":951,"score":69,"level":0},{"x":502,"y":951,"score":56,"level":0},{"x":914,"y":951,"score":55,"level":0},{"x":921,"y":951,"score":55,"level":0},{"x":941,"y":951,"score":64,"level":0},{"x":1109,"y":951,"score":41,"level":0},{"x":1153,"y":951,"score":70,"level":0},{"x":1184,"y":951,"score":68,"level":0},{"x":1197,"y":951,"score":44,"level":0},{"x":1284,"y":951,"score":46,"level":0},{"x":1302,"y":951,"score":78,"level":0},{"x":1323,"y":951,"score":57,"level":0},{"x":1397,"y":951,"score":57,"level":0},{"x":1412,"y":951,"score":151,"level":0},{"x":409,"y":952,"score":41,"level":0},{"x":515,"y":952,"score":164,"level":0},{"x":552,"y":952,"score":64,"level":0},{"x":671,"y":952,"score":40,"level":0},{"x":771,"y":952,"score":86,"level":0},{"x":796,"y":952,"score":39,"level":0},{"x":830,"y":952,"score":53,"level":0},{"x":832,"y":952,"score":58,"level":0},{"x":1061,"y":952,"score":63,"level":0},{"x":1092,"y":952,"score":51,"level":0},{"x":1130,"y":952,"score":70,"level":0},{"x":1203,"y":952,"score":47,"level":0},{"x":1370,"y":952,"score":104,"level":0},{"x":1428,"y":952,"score":29,"level":0},{"x":456,"y":953,"score":48,"level":0},{"x":571,"y":953,"score":65,"level":0},{"x":584,"y":953,"score":140,"level":0},{"x":665,"y":953,"score":45,"level":0},{"x":849,"y":953,"score":44,"level":0},{"x":852,"y":953,"score":83,"level":0},{"x":892,"y":953,"score":54,"level":0},{"x":902,"y":953,"score":27,"level":0},{"x":929,"y":953,"score":39,"level":0},{"x":997,"y":953,"score":98,"level":0},{"x":1083,"y":953,"score":40,"level":0},{"x":1118,"y":953,"score":32,"level":0},{"x":1139,"y":953,"score":81,"level":0},{"x":1290,"y":953,"score":93,"level":0},{"x":1327,"y":953,"score":49,"level":0},{"x":1417,"y":953,"score":69,"level":0},{"x":1434,"y":953,"score":34,"level":0},{"x":391,"y":954,"score":54,"level":0},{"x":442,"y":954,"score":43,"level":0},{"x":527,"y":954,"score":38,"level":0},{"x":579,"y":954,"score":86,"level":0},{"x":658,"y":954,"score":33,"level":0},{"x":750,"y":954,"score":95,"level":0},{"x":1056,"y":954,"score":29,"level":0},{"x":1074,"y":954,"score":72,"level":0},{"x":1233,"y":954,"score":92,"level":0},{"x":1318,"y":954,"score":90,"level":0},{"x":1329,"y":954,"score":55,"level":0},{"x":1336,"y":954,"score":26,"level":0},{"x":424,"y":955,"score":28,"level":0},{"x":532,"y":955,"score":26,"level":0},{"x":540,"y":955,"score":143,"level":0},{"x":554,"y":955,"score":119,"level":0},{"x":700,"y":955,"score":80,"level":0},{"x":732,"y":955,"score":184,"level":0},{"x":758,"y":955,"score":96,"level":0},{"x":826,"y":955,"score":54,"level":0},{"x":898,"y":955,"score":43,"level":0},{"x":1008,"y":955,"score":148,"level":0},{"x":1098,"y":955,"score":206,"level":0},{"x":1244,"y":955,"score":157,"level":0},{"x":1252,"y":955,"score":58,"level":0},{"x":1261,"y":955,"score":29,"level":0},{"x":1269,"y":955,"score":120,"level":0},{"x":1423,"y":955,"score":123,"level":0},{"x":377,"y":956,"score":82,"level":0},{"x":433,"y":956,"score":96,"level":0},{"x":462,"y":956,"score":128,"level":0},{"x":491,"y":956,"score":124,"level":0},{"x":548,"y":956,"score":80,"level":0},{"x":1091,"y":956,"score":75,"level":0},{"x":1148,"y":956,"score":38,"level":0},{"x":1203,"y":956,"score":65,"level":0},{"x":1210,"y":956,"score":55,"level":0},{"x":1213,"y":956,"score":35,"level":0},{"x":1295,"y":956,"score":51,"level":0},{"x":1323,"y":956,"score":55,"level":0},{"x":1347,"y":956,"score":77,"level":0},{"x":394,"y":957,"score":28,"level":0},{"x":403,"y":957,"score":87,"level":0},{"x":515,"y":957,"score":40,"level":0},{"x":693,"y":957,"score":86,"level":0},{"x":707,"y":957,"score":42,"level":0},{"x":759,"y":957,"score":119,"level":0},{"x":778,"y":957,"score":53,"level":0},{"x":952,"y":957,"score":60,"level":0},{"x":977,"y":957,"score":32,"level":0},{"x":993,"y":957,"score":66,"level":0},{"x":1022,"y":957,"score":137,"level":0},{"x":1060,"y":957,"score":49,"level":0},{"x":1080,"y":957,"score":34,"level":0},{"x":1159,"y":957,"score":33,"level":0},{"x":1378,"y":957,"score":61,"level":0},{"x":448,"y":958,"score":32,"level":0},{"x":567,"y":958,"score":35,"level":0},{"x":580,"y":958,"score":53,"level":0},{"x":614,"y":958,"score":124,"level":0},{"x":619,"y":958,"score":40,"level":0},{"x":649,"y":958,"score":38,"level":0},{"x":772,"y":958,"score":242,"level":0},{"x":958,"y":958,"score":31,"level":0},{"x":1083,"y":958,"score":67,"level":0},{"x":1105,"y":958,"score":53,"level":0},{"x":1140,"y":958,"score":35,"level":0},{"x":1385,"y":958,"score":27,"level":0},{"x":535,"y":959,"score":43,"level":0},{"x":561,"y":959,"score":277,"level":0},{"x":590,"y":959,"score":49,"level":0},{"x":625,"y":959,"score":151,"level":0},{"x":657,"y":959,"score":40,"level":0},{"x":703,"y":959,"score":119,"level":0},{"x":789,"y":959,"score":70,"level":0},{"x":893,"y":959,"score":200,"level":0},{"x":924,"y":959,"score":106,"level":0},{"x":986,"y":959,"score":108,"level":0},{"x":1153,"y":959,"score":32,"level":0},{"x":1202,"y":959,"score":46,"level":0},{"x":1258,"y":959,"score":234,"level":0},{"x":1302,"y":959,"score":128,"level":0},{"x":1338,"y":959,"score":66,"level":0},{"x":1355,"y":959,"score":28,"level":0},{"x":385,"y":960,"score":33,"level":0},{"x":468,"y":960,"score":81,"level":0},{"x":474,"y":960,"score":113,"level":0},{"x":638,"y":960,"score":32,"level":0},{"x":666,"y":960,"score":44,"level":0},{"x":673,"y":960,"score":127,"level":0},{"x":685,"y":960,"score":112,"level":0},{"x":738,"y":960,"score":213,"level":0},{"x":849,"y":960,"score":40,"level":0},{"x":930,"y":960,"score":57,"level":0},{"x":1027,"y":960,"score":49,"level":0},{"x":1043,"y":960,"score":103,"level":0},{"x":1050,"y":960,"score":60,"level":0},{"x":1056,"y":960,"score":76,"level":0},{"x":1098,"y":960,"score":36,"level":0},{"x":1110,"y":960,"score":72,"level":0},{"x":1218,"y":960,"score":54,"level":0},{"x":1266,"y":960,"score":49,"level":0},{"x":1318,"y":960,"score":144,"level":0},{"x":1363,"y":960,"score":51,"level":0},{"x":1368,"y":960,"score":65,"level":0},{"x":1401,"y":960,"score":147,"level":0},{"x":1426,"y":960,"score":34,"level":0},{"x":640,"y":961,"score":44,"level":0},{"x":944,"y":961,"score":36,"level":0},{"x":1080,"y":961,"score":31,"level":0},{"x":1135,"y":961,"score":76,"level":0},{"x":1200,"y":961,"score":45,"level":0},{"x":1235,"y":961,"score":49,"level":0},{"x":1247,"y":961,"score":30,"level":0},{"x":1445,"y":961,"score":31,"level":0},{"x":811,"y":962,"score":35,"level":0},{"x":828,"y":962,"score":60,"level":0},{"x":958,"y":962,"score":72,"level":0},{"x":992,"y":962,"score":50,"level":0},{"x":1155,"y":962,"score":55,"level":0},{"x":1214,"y":962,"score":80,"level":0},{"x":1348,"y":962,"score":56,"level":0},{"x":1430,"y":962,"score":28,"level":0},{"x":408,"y":963,"score":113,"level":0},{"x":431,"y":963,"score":47,"level":0},{"x":490,"y":963,"score":34,"level":0},{"x":695,"y":963,"score":121,"level":0},{"x":908,"y":963,"score":29,"level":0},{"x":1031,"y":963,"score":32,"level":0},{"x":1057,"y":963,"score":84,"level":0},{"x":1102,"y":963,"score":42,"level":0},{"x":1195,"y":963,"score":36,"level":0},{"x":1262,"y":963,"score":75,"level":0},{"x":1359,"y":963,"score":33,"level":0},{"x":1374,"y":963,"score":58,"level":0},{"x":1408,"y":963,"score":28,"level":0},{"x":1477,"y":963,"score":46,"level":0},{"x":1484,"y":963,"score":60,"level":0},{"x":646,"y":964,"score":29,"level":0},{"x":664,"y":964,"score":30,"level":0},{"x":713,"y":964,"score":56,"level":0},{"x":789,"y":964,"score":39,"level":0},{"x":796,"y":964,"score":47,"level":0},{"x":805,"y":964,"score":45,"level":0},{"x":853,"y":964,"score":43,"level":0},{"x":934,"y":964,"score":54,"level":0},{"x":939,"y":964,"score":74,"level":0},{"x":1000,"y":964,"score":62,"level":0},{"x":1059,"y":964,"score":134,"level":0},{"x":1323,"y":964,"score":88,"level":0},{"x":1325,"y":964,"score":60,"level":0},{"x":1354,"y":964,"score":43,"level":0},{"x":1469,"y":964,"score":30,"level":0},{"x":1490,"y":964,"score":28,"level":0},{"x":453,"y":965,"score":84,"level":0},{"x":582,"y":965,"score":126,"level":0},{"x":587,"y":965,"score":120,"level":0},{"x":616,"y":965,"score":28,"level":0},{"x":699,"y":965,"score":146,"level":0},{"x":705,"y":965,"score":77,"level":0},{"x":751,"y":965,"score":90,"level":0},{"x":868,"y":965,"score":55,"level":0},{"x":969,"y":965,"score":32,"level":0},{"x":1026,"y":965,"score":34,"level":0},{"x":1083,"y":965,"score":60,"level":0},{"x":1289,"y":965,"score":34,"level":0},{"x":1317,"y":965,"score":75,"level":0},{"x":421,"y":966,"score":136,"level":0},{"x":836,"y":966,"score":144,"level":0},{"x":944,"y":966,"score":97,"level":0},{"x":981,"y":966,"score":124,"level":0},{"x":1016,"y":966,"score":127,"level":0},{"x":1074,"y":966,"score":48,"level":0},{"x":1090,"y":966,"score":112,"level":0},{"x":1109,"y":966,"score":46,"level":0},{"x":1250,"y":966,"score":57,"level":0},{"x":1322,"y":966,"score":67,"level":0},{"x":427,"y":967,"score":96,"level":0},{"x":433,"y":967,"score":69,"level":0},{"x":440,"y":967,"score":88,"level":0},{"x":568,"y":967,"score":83,"level":0},{"x":587,"y":967,"score":70,"level":0},{"x":765,"y":967,"score":46,"level":0},{"x":784,"y":967,"score":34,"level":0},{"x":809,"y":967,"score":31,"level":0},{"x":961,"y":967,"score":63,"level":0},{"x":975,"y":967,"score":39,"level":0},{"x":1008,"y":967,"score":157,"level":0},{"x":1053,"y":967,"score":37,"level":0},{"x":1162,"y":967,"score":26,"level":0},{"x":1220,"y":967,"score":158,"level":0},{"x":1281,"y":967,"score":41,"level":0},{"x":1346,"y":967,"score":130,"level":0},{"x":1353,"y":967,"score":76,"level":0},{"x":459,"y":968,"score":34,"level":0},{"x":593,"y":968,"score":60,"level":0},{"x":629,"y":968,"score":80,"level":0},{"x":678,"y":968,"score":42,"level":0},{"x":693,"y":968,"score":105,"level":0},{"x":799,"y":968,"score":52,"level":0},{"x":900,"y":968,"score":81,"level":0},{"x":1025,"y":968,"score":105,"level":0},{"x":1124,"y":968,"score":86,"level":0},{"x":1147,"y":968,"score":54,"level":0},{"x":1168,"y":968,"score":42,"level":0},{"x":1419,"y":968,"score":32,"level":0},{"x":1424,"y":968,"score":39,"level":0},{"x":1430,"y":968,"score":147,"level":0},{"x":1438,"y":968,"score":75,"level":0},{"x":1444,"y":968,"score":100,"level":0},{"x":1452,"y":968,"score":26,"level":0},{"x":1478,"y":968,"score":30,"level":0},{"x":1484,"y":968,"score":66,"level":0},{"x":491,"y":969,"score":26,"level":0},{"x":687,"y":969,"score":56,"level":0},{"x":824,"y":969,"score":41,"level":0},{"x":988,"y":969,"score":44,"level":0},{"x":1041,"y":969,"score":171,"level":0},{"x":1047,"y":969,"score":33,"level":0},{"x":1183,"y":969,"score":94,"level":0},{"x":1189,"y":969,"score":41,"level":0},{"x":1241,"y":969,"score":88,"level":0},{"x":1315,"y":969,"score":72,"level":0},{"x":453,"y":970,"score":151,"level":0},{"x":465,"y":970,"score":26,"level":0},{"x":479,"y":970,"score":26,"level":0},{"x":556,"y":970,"score":27,"level":0},{"x":603,"y":970,"score":28,"level":0},{"x":700,"y":970,"score":107,"level":0},{"x":758,"y":970,"score":112,"level":0},{"x":782,"y":970,"score":44,"level":0},{"x":828,"y":970,"score":42,"level":0},{"x":867,"y":970,"score":56,"level":0},{"x":1055,"y":970,"score":42,"level":0},{"x":1065,"y":970,"score":91,"level":0},{"x":1288,"y":970,"score":44,"level":0},{"x":1302,"y":970,"score":92,"level":0},{"x":1360,"y":970,"score":28,"level":0},{"x":1401,"y":970,"score":32,"level":0},{"x":1452,"y":970,"score":30,"level":0},{"x":415,"y":971,"score":54,"level":0},{"x":671,"y":971,"score":94,"level":0},{"x":691,"y":971,"score":33,"level":0},{"x":746,"y":971,"score":33,"level":0},{"x":1070,"y":971,"score":28,"level":0},{"x":1198,"y":971,"score":48,"level":0},{"x":1274,"y":971,"score":39,"level":0},{"x":393,"y":972,"score":32,"level":0},{"x":403,"y":972,"score":57,"level":0},{"x":606,"y":972,"score":47,"level":0},{"x":624,"y":972,"score":40,"level":0},{"x":679,"y":972,"score":67,"level":0},{"x":777,"y":972,"score":54,"level":0},{"x":841,"y":972,"score":96,"level":0},{"x":1017,"y":972,"score":49,"level":0},{"x":1077,"y":972,"score":26,"level":0},{"x":1103,"y":972,"score":62,"level":0},{"x":1133,"y":972,"score":112,"level":0},{"x":1141,"y":972,"score":88,"level":0},{"x":1254,"y":972,"score":49,"level":0},{"x":1353,"y":972,"score":64,"level":0},{"x":386,"y":973,"score":41,"level":0},{"x":407,"y":973,"score":44,"level":0},{"x":442,"y":973,"score":150,"level":0},{"x":569,"y":973,"score":75,"level":0},{"x":714,"y":973,"score":28,"level":0},{"x":737,"y":973,"score":43,"level":0},{"x":762,"y":973,"score":30,"level":0},{"x":837,"y":973,"score":31,"level":0},{"x":910,"y":973,"score":40,"level":0},{"x":920,"y":973,"score":36,"level":0},{"x":938,"y":973,"score":89,"level":0},{"x":947,"y":973,"score":52,"level":0},{"x":1084,"y":973,"score":52,"level":0},{"x":1112,"y":973,"score":50,"level":0},{"x":1234,"y":973,"score":119,"level":0},{"x":1339,"y":973,"score":46,"level":0},{"x":1345,"y":973,"score":126,"level":0},{"x":1432,"y":973,"score":41,"level":0},{"x":1437,"y":973,"score":116,"level":0},{"x":417,"y":974,"score":57,"level":0},{"x":426,"y":974,"score":42,"level":0},{"x":575,"y":974,"score":72,"level":0},{"x":601,"y":974,"score":53,"level":0},{"x":658,"y":974,"score":44,"level":0},{"x":687,"y":974,"score":148,"level":0},{"x":845,"y":974,"score":179,"level":0},{"x":854,"y":974,"score":40,"level":0},{"x":961,"y":974,"score":29,"level":0},{"x":988,"y":974,"score":34,"level":0},{"x":1204,"y":974,"score":50,"level":0},{"x":1322,"y":974,"score":45,"level":0},{"x":434,"y":975,"score":73,"level":0},{"x":471,"y":975,"score":32,"level":0},{"x":758,"y":975,"score":26,"level":0},{"x":896,"y":975,"score":64,"level":0},{"x":915,"y":975,"score":66,"level":0},{"x":972,"y":975,"score":70,"level":0},{"x":996,"y":975,"score":68,"level":0},{"x":1005,"y":975,"score":30,"level":0},{"x":404,"y":976,"score":36,"level":0},{"x":580,"y":976,"score":57,"level":0},{"x":699,"y":976,"score":77,"level":0},{"x":738,"y":976,"score":29,"level":0},{"x":743,"y":976,"score":84,"level":0},{"x":835,"y":976,"score":128,"level":0},{"x":850,"y":976,"score":89,"level":0},{"x":865,"y":976,"score":88,"level":0},{"x":933,"y":976,"score":26,"level":0},{"x":979,"y":976,"score":28,"level":0},{"x":1062,"y":976,"score":70,"level":0},{"x":1463,"y":976,"score":27,"level":0},{"x":1468,"y":976,"score":29,"level":0},{"x":453,"y":977,"score":53,"level":0},{"x":463,"y":977,"score":44,"level":0},{"x":564,"y":977,"score":88,"level":0},{"x":635,"y":977,"score":65,"level":0},{"x":669,"y":977,"score":36,"level":0},{"x":773,"y":977,"score":122,"level":0},{"x":795,"y":977,"score":64,"level":0},{"x":884,"y":977,"score":44,"level":0},{"x":918,"y":977,"score":45,"level":0},{"x":941,"y":977,"score":53,"level":0},{"x":1244,"y":977,"score":34,"level":0},{"x":409,"y":978,"score":44,"level":0},{"x":443,"y":978,"score":36,"level":0},{"x":534,"y":978,"score":105,"level":0},{"x":623,"y":978,"score":63,"level":0},{"x":648,"y":978,"score":53,"level":0},{"x":677,"y":978,"score":54,"level":0},{"x":768,"y":978,"score":35,"level":0},{"x":920,"y":978,"score":119,"level":0},{"x":956,"y":978,"score":65,"level":0},{"x":1149,"y":978,"score":42,"level":0},{"x":1235,"y":978,"score":30,"level":0},{"x":1336,"y":978,"score":37,"level":0},{"x":1424,"y":978,"score":31,"level":0},{"x":1426,"y":978,"score":26,"level":0},{"x":1433,"y":978,"score":43,"level":0},{"x":399,"y":979,"score":138,"level":0},{"x":485,"y":979,"score":122,"level":0},{"x":541,"y":979,"score":113,"level":0},{"x":561,"y":979,"score":76,"level":0},{"x":597,"y":979,"score":38,"level":0},{"x":663,"y":979,"score":95,"level":0},{"x":722,"y":979,"score":26,"level":0},{"x":785,"y":979,"score":54,"level":0},{"x":840,"y":979,"score":123,"level":0},{"x":926,"y":979,"score":79,"level":0},{"x":935,"y":979,"score":37,"level":0},{"x":1103,"y":979,"score":34,"level":0},{"x":1115,"y":979,"score":41,"level":0},{"x":1124,"y":979,"score":141,"level":0},{"x":1224,"y":979,"score":76,"level":0},{"x":1227,"y":979,"score":41,"level":0},{"x":1292,"y":979,"score":27,"level":0},{"x":1320,"y":979,"score":58,"level":0},{"x":1387,"y":979,"score":66,"level":0},{"x":1486,"y":979,"score":42,"level":0},{"x":392,"y":980,"score":119,"level":0},{"x":601,"y":980,"score":38,"level":0},{"x":799,"y":980,"score":55,"level":0},{"x":810,"y":980,"score":37,"level":0},{"x":898,"y":980,"score":71,"level":0},{"x":946,"y":980,"score":146,"level":0},{"x":1019,"y":980,"score":132,"level":0},{"x":1024,"y":980,"score":110,"level":0},{"x":1216,"y":980,"score":51,"level":0},{"x":1262,"y":980,"score":106,"level":0},{"x":374,"y":981,"score":30,"level":0},{"x":406,"y":981,"score":63,"level":0},{"x":448,"y":981,"score":46,"level":0},{"x":559,"y":981,"score":67,"level":0},{"x":567,"y":981,"score":75,"level":0},{"x":620,"y":981,"score":33,"level":0},{"x":764,"y":981,"score":40,"level":0},{"x":802,"y":981,"score":63,"level":0},{"x":832,"y":981,"score":128,"level":0},{"x":853,"y":981,"score":45,"level":0},{"x":910,"y":981,"score":52,"level":0},{"x":943,"y":981,"score":53,"level":0},{"x":1054,"y":981,"score":35,"level":0},{"x":1067,"y":981,"score":27,"level":0},{"x":1073,"y":981,"score":42,"level":0},{"x":1201,"y":981,"score":38,"level":0},{"x":1231,"y":981,"score":78,"level":0},{"x":1256,"y":981,"score":26,"level":0},{"x":1306,"y":981,"score":38,"level":0},{"x":385,"y":982,"score":31,"level":0},{"x":440,"y":982,"score":33,"level":0},{"x":500,"y":982,"score":32,"level":0},{"x":589,"y":982,"score":58,"level":0},{"x":773,"y":982,"score":87,"level":0},{"x":779,"y":982,"score":27,"level":0},{"x":816,"y":982,"score":59,"level":0},{"x":979,"y":982,"score":62,"level":0},{"x":1166,"y":982,"score":64,"level":0},{"x":1274,"y":982,"score":84,"level":0},{"x":1351,"y":982,"score":30,"level":0},{"x":1373,"y":982,"score":76,"level":0},{"x":1461,"y":982,"score":59,"level":0},{"x":1487,"y":982,"score":26,"level":0},{"x":434,"y":983,"score":115,"level":0},{"x":548,"y":983,"score":58,"level":0},{"x":637,"y":983,"score":52,"level":0},{"x":676,"y":983,"score":60,"level":0},{"x":860,"y":983,"score":52,"level":0},{"x":932,"y":983,"score":56,"level":0},{"x":939,"y":983,"score":172,"level":0},{"x":961,"y":983,"score":50,"level":0},{"x":1015,"y":983,"score":118,"level":0},{"x":1035,"y":983,"score":31,"level":0},{"x":1063,"y":983,"score":39,"level":0},{"x":1080,"y":983,"score":52,"level":0},{"x":1090,"y":983,"score":96,"level":0},{"x":1096,"y":983,"score":47,"level":0},{"x":1175,"y":983,"score":32,"level":0},{"x":1237,"y":983,"score":28,"level":0},{"x":380,"y":984,"score":50,"level":0},{"x":541,"y":984,"score":159,"level":0},{"x":553,"y":984,"score":83,"level":0},{"x":581,"y":984,"score":61,"level":0},{"x":630,"y":984,"score":29,"level":0},{"x":730,"y":984,"score":40,"level":0},{"x":743,"y":984,"score":85,"level":0},{"x":762,"y":984,"score":43,"level":0},{"x":890,"y":984,"score":97,"level":0},{"x":1006,"y":984,"score":81,"level":0},{"x":1144,"y":984,"score":159,"level":0},{"x":1285,"y":984,"score":37,"level":0},{"x":1341,"y":984,"score":30,"level":0},{"x":399,"y":985,"score":95,"level":0},{"x":528,"y":985,"score":38,"level":0},{"x":611,"y":985,"score":60,"level":0},{"x":749,"y":985,"score":158,"level":0},{"x":821,"y":985,"score":153,"level":0},{"x":989,"y":985,"score":46,"level":0},{"x":1019,"y":985,"score":45,"level":0},{"x":1104,"y":985,"score":132,"level":0},{"x":1110,"y":985,"score":99,"level":0},{"x":1136,"y":985,"score":63,"level":0},{"x":1190,"y":985,"score":26,"level":0},{"x":1309,"y":985,"score":33,"level":0},{"x":1357,"y":985,"score":31,"level":0},{"x":1431,"y":985,"score":32,"level":0},{"x":1436,"y":985,"score":69,"level":0},{"x":569,"y":986,"score":54,"level":0},{"x":595,"y":986,"score":183,"level":0},{"x":601,"y":986,"score":178,"level":0},{"x":661,"y":986,"score":114,"level":0},{"x":667,"y":986,"score":35,"level":0},{"x":697,"y":986,"score":75,"level":0},{"x":1045,"y":986,"score":72,"level":0},{"x":1180,"y":986,"score":36,"level":0},{"x":1348,"y":986,"score":64,"level":0},{"x":417,"y":987,"score":62,"level":0},{"x":555,"y":987,"score":82,"level":0},{"x":641,"y":987,"score":36,"level":0},{"x":683,"y":987,"score":76,"level":0},{"x":767,"y":987,"score":149,"level":0},{"x":778,"y":987,"score":42,"level":0},{"x":812,"y":987,"score":142,"level":0},{"x":855,"y":987,"score":77,"level":0},{"x":879,"y":987,"score":113,"level":0},{"x":1011,"y":987,"score":56,"level":0},{"x":1047,"y":987,"score":68,"level":0},{"x":1225,"y":987,"score":186,"level":0},{"x":1230,"y":987,"score":97,"level":0},{"x":1400,"y":987,"score":48,"level":0},{"x":1415,"y":987,"score":28,"level":0},{"x":407,"y":988,"score":103,"level":0},{"x":441,"y":988,"score":71,"level":0},{"x":499,"y":988,"score":84,"level":0},{"x":708,"y":988,"score":61,"level":0},{"x":754,"y":988,"score":147,"level":0},{"x":797,"y":988,"score":51,"level":0},{"x":825,"y":988,"score":96,"level":0},{"x":832,"y":988,"score":30,"level":0},{"x":840,"y":988,"score":40,"level":0},{"x":959,"y":988,"score":43,"level":0},{"x":997,"y":988,"score":95,"level":0},{"x":1090,"y":988,"score":83,"level":0},{"x":1096,"y":988,"score":45,"level":0},{"x":1127,"y":988,"score":71,"level":0},{"x":1140,"y":988,"score":36,"level":0},{"x":1213,"y":988,"score":114,"level":0},{"x":1442,"y":988,"score":29,"level":0},{"x":1448,"y":988,"score":28,"level":0},{"x":1486,"y":988,"score":26,"level":0},{"x":381,"y":989,"score":180,"level":0},{"x":530,"y":989,"score":52,"level":0},{"x":543,"y":989,"score":59,"level":0},{"x":559,"y":989,"score":66,"level":0},{"x":723,"y":989,"score":49,"level":0},{"x":860,"y":989,"score":120,"level":0},{"x":972,"y":989,"score":31,"level":0},{"x":1023,"y":989,"score":114,"level":0},{"x":1051,"y":989,"score":42,"level":0},{"x":1106,"y":989,"score":70,"level":0},{"x":1165,"y":989,"score":78,"level":0},{"x":1208,"y":989,"score":28,"level":0},{"x":1289,"y":989,"score":74,"level":0},{"x":1295,"y":989,"score":54,"level":0},{"x":1317,"y":989,"score":92,"level":0},{"x":1343,"y":989,"score":27,"level":0},{"x":387,"y":990,"score":42,"level":0},{"x":434,"y":990,"score":119,"level":0},{"x":607,"y":990,"score":43,"level":0},{"x":700,"y":990,"score":78,"level":0},{"x":736,"y":990,"score":73,"level":0},{"x":892,"y":990,"score":130,"level":0},{"x":1035,"y":990,"score":73,"level":0},{"x":1100,"y":990,"score":104,"level":0},{"x":1150,"y":990,"score":118,"level":0},{"x":425,"y":991,"score":65,"level":0},{"x":546,"y":991,"score":59,"level":0},{"x":595,"y":991,"score":102,"level":0},{"x":747,"y":991,"score":78,"level":0},{"x":773,"y":991,"score":76,"level":0},{"x":816,"y":991,"score":115,"level":0},{"x":895,"y":991,"score":111,"level":0},{"x":922,"y":991,"score":45,"level":0},{"x":990,"y":991,"score":90,"level":0},{"x":1021,"y":991,"score":105,"level":0},{"x":1042,"y":991,"score":122,"level":0},{"x":1059,"y":991,"score":56,"level":0},{"x":1157,"y":991,"score":38,"level":0},{"x":1172,"y":991,"score":26,"level":0},{"x":1192,"y":991,"score":48,"level":0},{"x":1203,"y":991,"score":34,"level":0},{"x":1228,"y":991,"score":95,"level":0},{"x":1357,"y":991,"score":44,"level":0},{"x":1465,"y":991,"score":44,"level":0},{"x":487,"y":992,"score":112,"level":0},{"x":572,"y":992,"score":102,"level":0},{"x":584,"y":992,"score":52,"level":0},{"x":660,"y":992,"score":146,"level":0},{"x":696,"y":992,"score":35,"level":0},{"x":769,"y":992,"score":64,"level":0},{"x":950,"y":992,"score":73,"level":0},{"x":1223,"y":992,"score":87,"level":0},{"x":1274,"y":992,"score":30,"level":0},{"x":1281,"y":992,"score":64,"level":0},{"x":1351,"y":992,"score":26,"level":0},{"x":413,"y":993,"score":40,"level":0},{"x":550,"y":993,"score":92,"level":0},{"x":810,"y":993,"score":80,"level":0},{"x":958,"y":993,"score":49,"level":0},{"x":1025,"y":993,"score":112,"level":0},{"x":1082,"y":993,"score":121,"level":0},{"x":1109,"y":993,"score":96,"level":0},{"x":1128,"y":993,"score":46,"level":0},{"x":1214,"y":993,"score":28,"level":0},{"x":1262,"y":993,"score":30,"level":0},{"x":1302,"y":993,"score":140,"level":0},{"x":372,"y":994,"score":44,"level":0},{"x":392,"y":994,"score":75,"level":0},{"x":397,"y":994,"score":30,"level":0},{"x":403,"y":994,"score":36,"level":0},{"x":427,"y":994,"score":43,"level":0},{"x":433,"y":994,"score":31,"level":0},{"x":439,"y":994,"score":48,"level":0},{"x":541,"y":994,"score":100,"level":0},{"x":575,"y":994,"score":39,"level":0},{"x":580,"y":994,"score":59,"level":0},{"x":611,"y":994,"score":43,"level":0},{"x":625,"y":994,"score":46,"level":0},{"x":666,"y":994,"score":28,"level":0},{"x":727,"y":994,"score":42,"level":0},{"x":755,"y":994,"score":64,"level":0},{"x":763,"y":994,"score":52,"level":0},{"x":779,"y":994,"score":28,"level":0},{"x":853,"y":994,"score":34,"level":0},{"x":870,"y":994,"score":60,"level":0},{"x":886,"y":994,"score":54,"level":0},{"x":945,"y":994,"score":44,"level":0},{"x":980,"y":994,"score":55,"level":0},{"x":988,"y":994,"score":106,"level":0},{"x":999,"y":994,"score":137,"level":0},{"x":1007,"y":994,"score":64,"level":0},{"x":1015,"y":994,"score":54,"level":0},{"x":1038,"y":994,"score":45,"level":0},{"x":1078,"y":994,"score":63,"level":0},{"x":1090,"y":994,"score":30,"level":0},{"x":1143,"y":994,"score":32,"level":0},{"x":1152,"y":994,"score":37,"level":0},{"x":1379,"y":994,"score":70,"level":0},{"x":1385,"y":994,"score":84,"level":0},{"x":1391,"y":994,"score":46,"level":0}]}');
});
require.register("noflo-noflo-image/spec/fixtures/textRegion/3010029968_02742a1aec_b.jpg.corners.json", function(exports, require, module){
module.exports = JSON.parse('{"corners":[{"x":340,"y":172,"score":40,"level":0},{"x":703,"y":201,"score":51,"level":0},{"x":642,"y":203,"score":34,"level":0},{"x":660,"y":203,"score":30,"level":0},{"x":774,"y":205,"score":35,"level":0},{"x":644,"y":207,"score":79,"level":0},{"x":770,"y":207,"score":33,"level":0},{"x":615,"y":209,"score":34,"level":0},{"x":714,"y":209,"score":30,"level":0},{"x":659,"y":211,"score":26,"level":0},{"x":691,"y":211,"score":34,"level":0},{"x":716,"y":211,"score":46,"level":0},{"x":636,"y":213,"score":45,"level":0},{"x":684,"y":213,"score":43,"level":0},{"x":699,"y":214,"score":29,"level":0},{"x":709,"y":214,"score":48,"level":0},{"x":670,"y":216,"score":32,"level":0},{"x":629,"y":217,"score":29,"level":0},{"x":643,"y":218,"score":38,"level":0},{"x":669,"y":218,"score":54,"level":0},{"x":689,"y":218,"score":36,"level":0},{"x":637,"y":220,"score":30,"level":0},{"x":662,"y":220,"score":60,"level":0},{"x":701,"y":220,"score":44,"level":0},{"x":619,"y":221,"score":28,"level":0},{"x":699,"y":221,"score":26,"level":0},{"x":673,"y":222,"score":30,"level":0},{"x":671,"y":223,"score":55,"level":0},{"x":719,"y":223,"score":33,"level":0},{"x":725,"y":223,"score":52,"level":0},{"x":731,"y":223,"score":32,"level":0},{"x":709,"y":224,"score":66,"level":0},{"x":620,"y":227,"score":51,"level":0},{"x":636,"y":227,"score":27,"level":0},{"x":604,"y":228,"score":30,"level":0},{"x":752,"y":229,"score":34,"level":0},{"x":683,"y":230,"score":42,"level":0},{"x":661,"y":231,"score":32,"level":0},{"x":675,"y":231,"score":50,"level":0},{"x":703,"y":232,"score":81,"level":0},{"x":708,"y":232,"score":50,"level":0},{"x":714,"y":232,"score":52,"level":0},{"x":615,"y":233,"score":46,"level":0},{"x":677,"y":233,"score":38,"level":0},{"x":633,"y":234,"score":38,"level":0},{"x":662,"y":234,"score":38,"level":0},{"x":691,"y":236,"score":30,"level":0},{"x":747,"y":236,"score":64,"level":0},{"x":631,"y":237,"score":30,"level":0},{"x":638,"y":237,"score":42,"level":0},{"x":708,"y":237,"score":54,"level":0},{"x":714,"y":237,"score":29,"level":0},{"x":738,"y":237,"score":178,"level":0},{"x":644,"y":238,"score":30,"level":0},{"x":699,"y":239,"score":46,"level":0},{"x":653,"y":242,"score":58,"level":0},{"x":694,"y":242,"score":32,"level":0},{"x":706,"y":243,"score":42,"level":0},{"x":713,"y":243,"score":97,"level":0},{"x":733,"y":243,"score":62,"level":0},{"x":743,"y":243,"score":72,"level":0},{"x":620,"y":244,"score":27,"level":0},{"x":676,"y":244,"score":36,"level":0},{"x":750,"y":246,"score":104,"level":0},{"x":725,"y":247,"score":34,"level":0},{"x":749,"y":248,"score":76,"level":0},{"x":642,"y":250,"score":35,"level":0},{"x":743,"y":250,"score":26,"level":0},{"x":751,"y":251,"score":105,"level":0},{"x":650,"y":252,"score":50,"level":0},{"x":684,"y":253,"score":34,"level":0},{"x":678,"y":254,"score":55,"level":0},{"x":615,"y":255,"score":58,"level":0},{"x":675,"y":255,"score":43,"level":0},{"x":754,"y":256,"score":39,"level":0},{"x":624,"y":257,"score":31,"level":0},{"x":643,"y":257,"score":46,"level":0},{"x":650,"y":257,"score":32,"level":0},{"x":718,"y":259,"score":36,"level":0},{"x":702,"y":260,"score":42,"level":0},{"x":737,"y":261,"score":49,"level":0},{"x":698,"y":262,"score":32,"level":0},{"x":729,"y":262,"score":35,"level":0},{"x":652,"y":267,"score":44,"level":0},{"x":730,"y":269,"score":55,"level":0},{"x":722,"y":270,"score":77,"level":0},{"x":698,"y":271,"score":47,"level":0},{"x":614,"y":276,"score":32,"level":0},{"x":742,"y":277,"score":37,"level":0},{"x":738,"y":280,"score":76,"level":0},{"x":627,"y":281,"score":37,"level":0},{"x":672,"y":285,"score":26,"level":0},{"x":710,"y":287,"score":33,"level":0},{"x":738,"y":291,"score":87,"level":0},{"x":594,"y":292,"score":42,"level":0},{"x":703,"y":292,"score":93,"level":0},{"x":722,"y":293,"score":26,"level":0},{"x":688,"y":294,"score":53,"level":0},{"x":686,"y":296,"score":28,"level":0},{"x":694,"y":296,"score":42,"level":0},{"x":585,"y":297,"score":84,"level":0},{"x":704,"y":297,"score":90,"level":0},{"x":717,"y":298,"score":77,"level":0},{"x":655,"y":300,"score":34,"level":0},{"x":714,"y":300,"score":82,"level":0},{"x":727,"y":300,"score":79,"level":0},{"x":733,"y":300,"score":158,"level":0},{"x":640,"y":301,"score":31,"level":0},{"x":659,"y":302,"score":40,"level":0},{"x":694,"y":303,"score":73,"level":0},{"x":674,"y":304,"score":28,"level":0},{"x":703,"y":304,"score":40,"level":0},{"x":662,"y":305,"score":65,"level":0},{"x":717,"y":305,"score":26,"level":0},{"x":616,"y":307,"score":74,"level":0},{"x":683,"y":308,"score":26,"level":0},{"x":629,"y":309,"score":26,"level":0},{"x":731,"y":309,"score":51,"level":0},{"x":605,"y":310,"score":27,"level":0},{"x":701,"y":311,"score":109,"level":0},{"x":621,"y":312,"score":27,"level":0},{"x":658,"y":312,"score":28,"level":0},{"x":690,"y":312,"score":39,"level":0},{"x":692,"y":313,"score":50,"level":0},{"x":635,"y":314,"score":43,"level":0},{"x":694,"y":314,"score":63,"level":0},{"x":739,"y":314,"score":60,"level":0},{"x":717,"y":316,"score":31,"level":0},{"x":620,"y":318,"score":39,"level":0},{"x":605,"y":319,"score":46,"level":0},{"x":600,"y":320,"score":96,"level":0},{"x":640,"y":321,"score":36,"level":0},{"x":720,"y":321,"score":76,"level":0},{"x":737,"y":322,"score":72,"level":0},{"x":712,"y":323,"score":139,"level":0},{"x":608,"y":325,"score":36,"level":0},{"x":690,"y":326,"score":35,"level":0},{"x":636,"y":327,"score":35,"level":0},{"x":639,"y":327,"score":26,"level":0},{"x":719,"y":327,"score":33,"level":0},{"x":706,"y":329,"score":32,"level":0},{"x":711,"y":330,"score":131,"level":0},{"x":730,"y":331,"score":94,"level":0},{"x":634,"y":333,"score":76,"level":0},{"x":720,"y":334,"score":34,"level":0},{"x":606,"y":335,"score":39,"level":0},{"x":740,"y":337,"score":30,"level":0},{"x":614,"y":338,"score":31,"level":0},{"x":681,"y":342,"score":26,"level":0},{"x":712,"y":343,"score":42,"level":0},{"x":736,"y":343,"score":72,"level":0},{"x":603,"y":345,"score":32,"level":0},{"x":721,"y":347,"score":34,"level":0},{"x":704,"y":348,"score":124,"level":0},{"x":723,"y":348,"score":40,"level":0},{"x":728,"y":348,"score":44,"level":0},{"x":634,"y":350,"score":63,"level":0},{"x":697,"y":350,"score":55,"level":0},{"x":593,"y":351,"score":36,"level":0},{"x":720,"y":352,"score":31,"level":0},{"x":722,"y":353,"score":30,"level":0},{"x":731,"y":353,"score":206,"level":0},{"x":701,"y":356,"score":34,"level":0},{"x":725,"y":360,"score":38,"level":0},{"x":693,"y":363,"score":93,"level":0},{"x":719,"y":368,"score":52,"level":0},{"x":711,"y":372,"score":68,"level":0},{"x":707,"y":377,"score":52,"level":0},{"x":603,"y":379,"score":45,"level":0},{"x":610,"y":379,"score":110,"level":0},{"x":617,"y":380,"score":76,"level":0},{"x":681,"y":381,"score":31,"level":0},{"x":704,"y":381,"score":40,"level":0},{"x":627,"y":382,"score":26,"level":0},{"x":588,"y":384,"score":39,"level":0},{"x":609,"y":385,"score":85,"level":0},{"x":671,"y":385,"score":26,"level":0},{"x":670,"y":390,"score":44,"level":0},{"x":679,"y":391,"score":70,"level":0},{"x":615,"y":392,"score":31,"level":0},{"x":669,"y":395,"score":42,"level":0},{"x":622,"y":396,"score":143,"level":0},{"x":677,"y":396,"score":46,"level":0},{"x":577,"y":397,"score":63,"level":0},{"x":617,"y":397,"score":39,"level":0},{"x":685,"y":398,"score":106,"level":0},{"x":659,"y":400,"score":71,"level":0},{"x":621,"y":402,"score":53,"level":0},{"x":635,"y":402,"score":30,"level":0},{"x":672,"y":402,"score":29,"level":0},{"x":625,"y":403,"score":48,"level":0},{"x":638,"y":403,"score":33,"level":0},{"x":646,"y":406,"score":36,"level":0},{"x":721,"y":408,"score":101,"level":0},{"x":658,"y":409,"score":86,"level":0},{"x":718,"y":412,"score":59,"level":0},{"x":622,"y":415,"score":34,"level":0},{"x":721,"y":417,"score":33,"level":0},{"x":726,"y":417,"score":33,"level":0},{"x":711,"y":420,"score":82,"level":0},{"x":707,"y":424,"score":28,"level":0},{"x":813,"y":424,"score":48,"level":0},{"x":725,"y":429,"score":33,"level":0},{"x":728,"y":429,"score":42,"level":0},{"x":629,"y":430,"score":48,"level":0},{"x":698,"y":430,"score":58,"level":0},{"x":707,"y":430,"score":36,"level":0},{"x":635,"y":432,"score":38,"level":0},{"x":726,"y":432,"score":83,"level":0},{"x":706,"y":434,"score":38,"level":0},{"x":723,"y":438,"score":57,"level":0},{"x":726,"y":438,"score":44,"level":0},{"x":706,"y":439,"score":34,"level":0},{"x":836,"y":440,"score":36,"level":0},{"x":639,"y":441,"score":52,"level":0},{"x":724,"y":441,"score":50,"level":0},{"x":631,"y":443,"score":33,"level":0},{"x":783,"y":443,"score":27,"level":0},{"x":841,"y":444,"score":38,"level":0},{"x":725,"y":445,"score":58,"level":0},{"x":730,"y":445,"score":26,"level":0},{"x":630,"y":447,"score":27,"level":0},{"x":650,"y":447,"score":28,"level":0},{"x":707,"y":449,"score":33,"level":0},{"x":635,"y":450,"score":35,"level":0},{"x":641,"y":450,"score":36,"level":0},{"x":728,"y":452,"score":35,"level":0},{"x":652,"y":453,"score":27,"level":0},{"x":645,"y":454,"score":69,"level":0},{"x":726,"y":454,"score":30,"level":0},{"x":731,"y":454,"score":32,"level":0},{"x":640,"y":455,"score":97,"level":0},{"x":658,"y":455,"score":47,"level":0},{"x":690,"y":462,"score":51,"level":0},{"x":650,"y":464,"score":74,"level":0},{"x":654,"y":475,"score":40,"level":0},{"x":649,"y":476,"score":74,"level":0},{"x":652,"y":477,"score":29,"level":0},{"x":735,"y":477,"score":32,"level":0},{"x":650,"y":478,"score":32,"level":0},{"x":648,"y":480,"score":55,"level":0},{"x":654,"y":482,"score":58,"level":0},{"x":650,"y":485,"score":49,"level":0},{"x":735,"y":485,"score":73,"level":0},{"x":737,"y":485,"score":60,"level":0},{"x":651,"y":487,"score":30,"level":0},{"x":658,"y":487,"score":30,"level":0},{"x":680,"y":489,"score":96,"level":0},{"x":662,"y":492,"score":66,"level":0},{"x":674,"y":492,"score":74,"level":0},{"x":734,"y":492,"score":36,"level":0},{"x":654,"y":493,"score":52,"level":0},{"x":723,"y":493,"score":32,"level":0},{"x":731,"y":493,"score":31,"level":0},{"x":679,"y":494,"score":141,"level":0},{"x":715,"y":494,"score":78,"level":0},{"x":693,"y":495,"score":26,"level":0},{"x":663,"y":497,"score":38,"level":0},{"x":676,"y":497,"score":42,"level":0},{"x":696,"y":497,"score":35,"level":0},{"x":715,"y":497,"score":60,"level":0},{"x":701,"y":498,"score":75,"level":0},{"x":723,"y":498,"score":52,"level":0},{"x":679,"y":499,"score":55,"level":0},{"x":706,"y":499,"score":47,"level":0},{"x":660,"y":501,"score":26,"level":0},{"x":684,"y":502,"score":325,"level":0},{"x":678,"y":503,"score":79,"level":0},{"x":691,"y":503,"score":36,"level":0},{"x":653,"y":506,"score":34,"level":0},{"x":683,"y":510,"score":52,"level":0},{"x":694,"y":513,"score":36,"level":0},{"x":678,"y":523,"score":29,"level":0},{"x":697,"y":527,"score":28,"level":0},{"x":764,"y":530,"score":81,"level":0},{"x":757,"y":532,"score":349,"level":0},{"x":762,"y":535,"score":41,"level":0},{"x":766,"y":538,"score":61,"level":0},{"x":755,"y":539,"score":233,"level":0},{"x":775,"y":540,"score":38,"level":0},{"x":769,"y":541,"score":58,"level":0},{"x":777,"y":542,"score":37,"level":0},{"x":759,"y":543,"score":79,"level":0},{"x":771,"y":543,"score":59,"level":0},{"x":754,"y":545,"score":120,"level":0},{"x":734,"y":546,"score":29,"level":0},{"x":810,"y":546,"score":26,"level":0},{"x":764,"y":548,"score":38,"level":0},{"x":783,"y":548,"score":32,"level":0},{"x":772,"y":549,"score":51,"level":0},{"x":778,"y":550,"score":59,"level":0},{"x":774,"y":551,"score":48,"level":0},{"x":1002,"y":552,"score":32,"level":0},{"x":776,"y":553,"score":42,"level":0},{"x":781,"y":553,"score":59,"level":0},{"x":770,"y":554,"score":43,"level":0},{"x":792,"y":557,"score":83,"level":0},{"x":786,"y":558,"score":79,"level":0},{"x":547,"y":560,"score":34,"level":0},{"x":777,"y":561,"score":45,"level":0},{"x":533,"y":562,"score":26,"level":0},{"x":933,"y":562,"score":48,"level":0},{"x":779,"y":563,"score":51,"level":0},{"x":791,"y":563,"score":57,"level":0},{"x":789,"y":565,"score":46,"level":0},{"x":782,"y":566,"score":55,"level":0},{"x":784,"y":568,"score":62,"level":0},{"x":934,"y":569,"score":34,"level":0},{"x":839,"y":571,"score":98,"level":0},{"x":941,"y":571,"score":122,"level":0},{"x":788,"y":572,"score":30,"level":0},{"x":841,"y":572,"score":116,"level":0},{"x":814,"y":573,"score":34,"level":0},{"x":834,"y":574,"score":122,"level":0},{"x":933,"y":574,"score":133,"level":0},{"x":939,"y":575,"score":34,"level":0},{"x":508,"y":576,"score":27,"level":0},{"x":521,"y":576,"score":35,"level":0},{"x":806,"y":577,"score":77,"level":0},{"x":842,"y":581,"score":69,"level":0},{"x":522,"y":582,"score":26,"level":0},{"x":825,"y":583,"score":114,"level":0},{"x":841,"y":587,"score":62,"level":0},{"x":805,"y":589,"score":173,"level":0},{"x":811,"y":589,"score":91,"level":0},{"x":554,"y":591,"score":28,"level":0},{"x":846,"y":591,"score":33,"level":0},{"x":558,"y":592,"score":36,"level":0},{"x":839,"y":592,"score":46,"level":0},{"x":513,"y":593,"score":30,"level":0},{"x":843,"y":593,"score":54,"level":0},{"x":805,"y":595,"score":61,"level":0},{"x":809,"y":597,"score":137,"level":0},{"x":846,"y":597,"score":79,"level":0},{"x":816,"y":598,"score":164,"level":0},{"x":830,"y":598,"score":65,"level":0},{"x":560,"y":599,"score":34,"level":0},{"x":687,"y":599,"score":30,"level":0},{"x":621,"y":600,"score":39,"level":0},{"x":685,"y":601,"score":32,"level":0},{"x":803,"y":602,"score":48,"level":0},{"x":814,"y":602,"score":106,"level":0},{"x":825,"y":602,"score":208,"level":0},{"x":572,"y":603,"score":77,"level":0},{"x":597,"y":603,"score":71,"level":0},{"x":616,"y":604,"score":70,"level":0},{"x":809,"y":604,"score":215,"level":0},{"x":830,"y":604,"score":26,"level":0},{"x":836,"y":604,"score":163,"level":0},{"x":798,"y":607,"score":100,"level":0},{"x":805,"y":607,"score":150,"level":0},{"x":824,"y":607,"score":308,"level":0},{"x":631,"y":608,"score":124,"level":0},{"x":818,"y":608,"score":232,"level":0},{"x":478,"y":609,"score":32,"level":0},{"x":615,"y":610,"score":45,"level":0},{"x":626,"y":610,"score":38,"level":0},{"x":815,"y":611,"score":180,"level":0},{"x":836,"y":611,"score":42,"level":0},{"x":844,"y":611,"score":110,"level":0},{"x":619,"y":612,"score":99,"level":0},{"x":674,"y":612,"score":35,"level":0},{"x":793,"y":612,"score":80,"level":0},{"x":804,"y":612,"score":162,"level":0},{"x":852,"y":612,"score":182,"level":0},{"x":649,"y":613,"score":57,"level":0},{"x":810,"y":613,"score":45,"level":0},{"x":589,"y":614,"score":30,"level":0},{"x":638,"y":614,"score":34,"level":0},{"x":798,"y":614,"score":234,"level":0},{"x":567,"y":615,"score":38,"level":0},{"x":581,"y":615,"score":53,"level":0},{"x":642,"y":615,"score":53,"level":0},{"x":823,"y":615,"score":166,"level":0},{"x":644,"y":616,"score":43,"level":0},{"x":664,"y":616,"score":33,"level":0},{"x":789,"y":616,"score":135,"level":0},{"x":795,"y":616,"score":183,"level":0},{"x":814,"y":616,"score":167,"level":0},{"x":843,"y":617,"score":32,"level":0},{"x":576,"y":619,"score":30,"level":0},{"x":833,"y":619,"score":228,"level":0},{"x":805,"y":620,"score":202,"level":0},{"x":821,"y":620,"score":54,"level":0},{"x":851,"y":620,"score":177,"level":0},{"x":659,"y":621,"score":272,"level":0},{"x":783,"y":621,"score":36,"level":0},{"x":793,"y":621,"score":85,"level":0},{"x":610,"y":622,"score":50,"level":0},{"x":816,"y":622,"score":286,"level":0},{"x":788,"y":623,"score":212,"level":0},{"x":621,"y":624,"score":46,"level":0},{"x":813,"y":624,"score":155,"level":0},{"x":832,"y":624,"score":118,"level":0},{"x":802,"y":625,"score":87,"level":0},{"x":843,"y":625,"score":189,"level":0},{"x":857,"y":625,"score":76,"level":0},{"x":574,"y":626,"score":39,"level":0},{"x":599,"y":626,"score":38,"level":0},{"x":660,"y":626,"score":70,"level":0},{"x":808,"y":626,"score":53,"level":0},{"x":827,"y":626,"score":155,"level":0},{"x":615,"y":627,"score":34,"level":0},{"x":665,"y":627,"score":108,"level":0},{"x":777,"y":627,"score":106,"level":0},{"x":784,"y":627,"score":137,"level":0},{"x":797,"y":627,"score":224,"level":0},{"x":839,"y":627,"score":172,"level":0},{"x":823,"y":628,"score":168,"level":0},{"x":852,"y":628,"score":110,"level":0},{"x":610,"y":630,"score":61,"level":0},{"x":795,"y":630,"score":167,"level":0},{"x":811,"y":630,"score":211,"level":0},{"x":631,"y":631,"score":32,"level":0},{"x":806,"y":631,"score":230,"level":0},{"x":836,"y":631,"score":241,"level":0},{"x":857,"y":631,"score":53,"level":0},{"x":772,"y":632,"score":70,"level":0},{"x":782,"y":632,"score":178,"level":0},{"x":790,"y":632,"score":41,"level":0},{"x":822,"y":633,"score":134,"level":0},{"x":847,"y":633,"score":43,"level":0},{"x":777,"y":634,"score":220,"level":0},{"x":803,"y":634,"score":187,"level":0},{"x":816,"y":634,"score":148,"level":0},{"x":833,"y":634,"score":171,"level":0},{"x":793,"y":635,"score":88,"level":0},{"x":637,"y":636,"score":37,"level":0},{"x":768,"y":636,"score":123,"level":0},{"x":774,"y":636,"score":167,"level":0},{"x":813,"y":636,"score":120,"level":0},{"x":618,"y":637,"score":27,"level":0},{"x":631,"y":637,"score":138,"level":0},{"x":788,"y":637,"score":203,"level":0},{"x":829,"y":637,"score":251,"level":0},{"x":808,"y":638,"score":129,"level":0},{"x":818,"y":639,"score":111,"level":0},{"x":784,"y":640,"score":198,"level":0},{"x":802,"y":640,"score":249,"level":0},{"x":826,"y":640,"score":230,"level":0},{"x":833,"y":640,"score":142,"level":0},{"x":629,"y":641,"score":91,"level":0},{"x":762,"y":641,"score":41,"level":0},{"x":795,"y":641,"score":243,"level":0},{"x":845,"y":641,"score":47,"level":0},{"x":850,"y":641,"score":30,"level":0},{"x":577,"y":642,"score":45,"level":0},{"x":772,"y":642,"score":239,"level":0},{"x":812,"y":642,"score":199,"level":0},{"x":648,"y":643,"score":66,"level":0},{"x":767,"y":643,"score":192,"level":0},{"x":807,"y":643,"score":176,"level":0},{"x":793,"y":644,"score":219,"level":0},{"x":822,"y":644,"score":68,"level":0},{"x":648,"y":645,"score":56,"level":0},{"x":782,"y":645,"score":139,"level":0},{"x":635,"y":646,"score":33,"level":0},{"x":757,"y":646,"score":157,"level":0},{"x":764,"y":646,"score":181,"level":0},{"x":803,"y":646,"score":158,"level":0},{"x":629,"y":647,"score":45,"level":0},{"x":777,"y":647,"score":211,"level":0},{"x":798,"y":647,"score":220,"level":0},{"x":817,"y":649,"score":222,"level":0},{"x":774,"y":650,"score":227,"level":0},{"x":791,"y":650,"score":268,"level":0},{"x":752,"y":651,"score":57,"level":0},{"x":762,"y":651,"score":168,"level":0},{"x":785,"y":651,"score":240,"level":0},{"x":813,"y":651,"score":106,"level":0},{"x":636,"y":652,"score":74,"level":0},{"x":802,"y":652,"score":244,"level":0},{"x":665,"y":653,"score":40,"level":0},{"x":757,"y":653,"score":218,"level":0},{"x":783,"y":653,"score":188,"level":0},{"x":797,"y":653,"score":186,"level":0},{"x":678,"y":654,"score":32,"level":0},{"x":772,"y":655,"score":179,"level":0},{"x":810,"y":655,"score":248,"level":0},{"x":671,"y":656,"score":47,"level":0},{"x":747,"y":656,"score":142,"level":0},{"x":754,"y":656,"score":184,"level":0},{"x":819,"y":656,"score":102,"level":0},{"x":766,"y":657,"score":210,"level":0},{"x":792,"y":657,"score":120,"level":0},{"x":763,"y":659,"score":147,"level":0},{"x":781,"y":659,"score":210,"level":0},{"x":810,"y":660,"score":98,"level":0},{"x":641,"y":661,"score":59,"level":0},{"x":663,"y":661,"score":40,"level":0},{"x":742,"y":661,"score":86,"level":0},{"x":752,"y":661,"score":186,"level":0},{"x":775,"y":661,"score":204,"level":0},{"x":840,"y":661,"score":33,"level":0},{"x":790,"y":662,"score":157,"level":0},{"x":824,"y":662,"score":41,"level":0},{"x":831,"y":662,"score":47,"level":0},{"x":838,"y":662,"score":28,"level":0},{"x":650,"y":663,"score":60,"level":0},{"x":747,"y":663,"score":218,"level":0},{"x":733,"y":664,"score":28,"level":0},{"x":772,"y":664,"score":222,"level":0},{"x":785,"y":664,"score":172,"level":0},{"x":744,"y":665,"score":197,"level":0},{"x":762,"y":665,"score":178,"level":0},{"x":610,"y":666,"score":86,"level":0},{"x":737,"y":666,"score":168,"level":0},{"x":767,"y":666,"score":91,"level":0},{"x":782,"y":666,"score":110,"level":0},{"x":618,"y":667,"score":35,"level":0},{"x":668,"y":667,"score":50,"level":0},{"x":777,"y":667,"score":205,"level":0},{"x":675,"y":668,"score":293,"level":0},{"x":826,"y":668,"score":72,"level":0},{"x":754,"y":669,"score":229,"level":0},{"x":787,"y":669,"score":168,"level":0},{"x":771,"y":670,"score":292,"level":0},{"x":816,"y":670,"score":27,"level":0},{"x":732,"y":671,"score":56,"level":0},{"x":742,"y":671,"score":178,"level":0},{"x":781,"y":671,"score":169,"level":0},{"x":793,"y":671,"score":28,"level":0},{"x":737,"y":672,"score":234,"level":0},{"x":798,"y":672,"score":84,"level":0},{"x":762,"y":673,"score":189,"level":0},{"x":776,"y":673,"score":214,"level":0},{"x":752,"y":674,"score":137,"level":0},{"x":790,"y":674,"score":33,"level":0},{"x":519,"y":675,"score":78,"level":0},{"x":633,"y":675,"score":34,"level":0},{"x":728,"y":675,"score":71,"level":0},{"x":734,"y":675,"score":113,"level":0},{"x":747,"y":675,"score":112,"level":0},{"x":767,"y":675,"score":143,"level":0},{"x":773,"y":675,"score":117,"level":0},{"x":801,"y":675,"score":46,"level":0}]}');
});
require.register("noflo-noflo-image/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo-image","description":"Image processing utilities for NoFlo, browser and Node.js.","author":"Forrest Oliphant","repo":"noflo/noflo-image","version":"0.0.18","keywords":[],"dependencies":{"noflo/noflo":"*","visionmedia/superagent":"*","noflo/noflo-canvas":"*","noflo/noflo-core":"*","noflo/noflo-objects":"*","noflo/noflo-groups":"*","noflo/noflo-strings":"*","noflo/noflo-dom":"*","noflo/noflo-ajax":"*","jonnor/jsfeat":"*","jonnor/color-thief":"*"},"remotes":["https://raw.githubusercontent.com"],"scripts":["components/CalculateAspectRatio.js","components/GetOrientation.js","components/Measure.js","components/ToFullscale.js","spec/testutils.js","index.js","components/CreateImage-node.js","components/CreateImage.js","components/GetFeaturesYAPE.js","components/FindFeatureFreeAreas.js","graphs/UrlToCanvas.json","spec/fixtures/textAnywhere/flickr-3178100324-original_small.jpg.corners.json","spec/fixtures/noText/flickr-8132786781-small.jpg.corners.json","spec/fixtures/textRegion/3010029968_02742a1aec_b.jpg.corners.json","components/GetHistogram.js","components/GetColors.js","components/GetCannyEdges.js","components/ImageToCanvas.js","components/VideoToCanvas.js"],"json":["component.json","graphs/UrlToCanvas.json","spec/fixtures/textAnywhere/flickr-3178100324-original_small.jpg.corners.json","spec/fixtures/noText/flickr-8132786781-small.jpg.corners.json","spec/fixtures/textRegion/3010029968_02742a1aec_b.jpg.corners.json"],"noflo":{"components":{"CalculateAspectRatio":"components/CalculateAspectRatio.js","CreateImage":"components/CreateImage.js","FindFeatureFreeAreas":"components/FindFeatureFreeAreas.js","GetCannyEdges":"components/GetCannyEdges.js","GetColors":"components/GetColors.js","GetFeaturesYAPE":"components/GetFeaturesYAPE.js","GetHistogram":"components/GetHistogram.js","GetOrientation":"components/GetOrientation.js","ImageToCanvas":"components/ImageToCanvas.js","Measure":"components/Measure.js","ToFullscale":"components/ToFullscale.js","VideoToCanvas":"components/VideoToCanvas.js"},"graphs":{"UrlToCanvas":"graphs/UrlToCanvas.json"}}}');
});
require.register("noflo-noflo-image/graphs/UrlToCanvas.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"UrlToCanvas","id":"UrlToCanvas","project":"url2can","environment":{"type":"all"}},"inports":{"url":{"process":"img","port":"url","metadata":{"x":36,"y":360}},"crossorigin":{"process":"img","port":"crossorigin","metadata":{"x":36,"y":400}}},"outports":{"canvas":{"process":"canvas/Draw_n4cqh","port":"canvas","metadata":{"x":828,"y":180}},"error":{"process":"img","port":"error","metadata":{"x":828,"y":504}}},"groups":[],"processes":{"canvas/Draw_n4cqh":{"component":"canvas/Draw","metadata":{"label":"canvas/Draw","x":684,"y":180}},"drawImage":{"component":"canvas/DrawImage","metadata":{"label":"drawImage","x":504,"y":144}},"img":{"component":"image/CreateImage","metadata":{"label":"img","x":180,"y":216}},"canvas":{"component":"canvas/CreateCanvas","metadata":{"label":"canvas","x":504,"y":360}},"w":{"component":"objects/ExtractProperty","metadata":{"label":"w","x":360,"y":360}},"h":{"component":"objects/ExtractProperty","metadata":{"label":"h","x":360,"y":252}},"core/RepeatAsync_u0yan":{"component":"core/RepeatAsync","metadata":{"label":"core/RepeatAsync","x":504,"y":36}}},"connections":[{"src":{"process":"img","port":"image"},"tgt":{"process":"drawImage","port":"image"},"metadata":{}},{"src":{"process":"w","port":"out"},"tgt":{"process":"canvas","port":"width"},"metadata":{}},{"src":{"process":"h","port":"out"},"tgt":{"process":"canvas","port":"height"},"metadata":{}},{"src":{"process":"img","port":"image"},"tgt":{"process":"w","port":"in"},"metadata":{"route":0}},{"src":{"process":"img","port":"image"},"tgt":{"process":"h","port":"in"},"metadata":{"route":0}},{"src":{"process":"drawImage","port":"drawimage"},"tgt":{"process":"canvas/Draw_n4cqh","port":"commands"},"metadata":{}},{"src":{"process":"canvas","port":"canvas"},"tgt":{"process":"canvas/Draw_n4cqh","port":"canvas"},"metadata":{}},{"src":{"process":"img","port":"image"},"tgt":{"process":"core/RepeatAsync_u0yan","port":"in"},"metadata":{"route":0}},{"src":{"process":"core/RepeatAsync_u0yan","port":"out"},"tgt":{"process":"canvas/Draw_n4cqh","port":"tick"},"metadata":{}},{"data":"width","tgt":{"process":"w","port":"key"}},{"data":"height","tgt":{"process":"h","port":"key"}},{"data":{"x":0,"y":0},"tgt":{"process":"drawImage","port":"destpoint"}}]}');
});
require.register("noflo-noflo-image/spec/fixtures/textAnywhere/flickr-3178100324-original_small.jpg.corners.json", function(exports, require, module){
module.exports = JSON.parse('{"corners":[{"x":377,"y":246,"score":32,"level":0},{"x":598,"y":248,"score":56,"level":0},{"x":1276,"y":248,"score":46,"level":0},{"x":1126,"y":249,"score":88,"level":0},{"x":417,"y":250,"score":62,"level":0},{"x":1050,"y":250,"score":67,"level":0},{"x":377,"y":251,"score":200,"level":0},{"x":411,"y":251,"score":120,"level":0},{"x":435,"y":251,"score":44,"level":0},{"x":530,"y":251,"score":94,"level":0},{"x":587,"y":251,"score":78,"level":0},{"x":654,"y":251,"score":104,"level":0},{"x":675,"y":251,"score":58,"level":0},{"x":711,"y":251,"score":126,"level":0},{"x":756,"y":251,"score":109,"level":0},{"x":776,"y":251,"score":82,"level":0},{"x":785,"y":251,"score":32,"level":0},{"x":816,"y":251,"score":113,"level":0},{"x":833,"y":251,"score":60,"level":0},{"x":838,"y":251,"score":35,"level":0},{"x":840,"y":251,"score":38,"level":0},{"x":864,"y":251,"score":30,"level":0},{"x":866,"y":251,"score":58,"level":0},{"x":885,"y":251,"score":28,"level":0},{"x":892,"y":251,"score":48,"level":0},{"x":925,"y":251,"score":108,"level":0},{"x":943,"y":251,"score":43,"level":0},{"x":982,"y":251,"score":124,"level":0},{"x":1000,"y":251,"score":47,"level":0},{"x":1044,"y":251,"score":136,"level":0},{"x":1070,"y":251,"score":107,"level":0},{"x":1120,"y":251,"score":121,"level":0},{"x":1148,"y":251,"score":76,"level":0},{"x":1201,"y":251,"score":133,"level":0},{"x":1223,"y":251,"score":76,"level":0},{"x":1229,"y":251,"score":30,"level":0},{"x":1248,"y":251,"score":26,"level":0},{"x":1270,"y":251,"score":86,"level":0},{"x":1294,"y":251,"score":53,"level":0},{"x":1296,"y":251,"score":76,"level":0},{"x":1340,"y":251,"score":76,"level":0},{"x":1359,"y":251,"score":57,"level":0},{"x":1401,"y":251,"score":63,"level":0},{"x":1421,"y":251,"score":27,"level":0},{"x":1425,"y":251,"score":27,"level":0},{"x":1456,"y":251,"score":50,"level":0},{"x":1476,"y":251,"score":29,"level":0},{"x":1485,"y":251,"score":32,"level":0},{"x":510,"y":252,"score":108,"level":0},{"x":1281,"y":253,"score":35,"level":0},{"x":598,"y":254,"score":56,"level":0},{"x":1348,"y":255,"score":36,"level":0},{"x":664,"y":256,"score":48,"level":0},{"x":721,"y":256,"score":47,"level":0},{"x":992,"y":256,"score":37,"level":0},{"x":1291,"y":256,"score":30,"level":0},{"x":535,"y":257,"score":39,"level":0},{"x":610,"y":257,"score":53,"level":0},{"x":1147,"y":257,"score":52,"level":0},{"x":1155,"y":257,"score":37,"level":0},{"x":1370,"y":257,"score":33,"level":0},{"x":1471,"y":257,"score":26,"level":0},{"x":517,"y":258,"score":26,"level":0},{"x":1124,"y":258,"score":48,"level":0},{"x":416,"y":259,"score":71,"level":0},{"x":670,"y":259,"score":54,"level":0},{"x":1345,"y":259,"score":26,"level":0},{"x":1475,"y":259,"score":26,"level":0},{"x":751,"y":260,"score":30,"level":0},{"x":1070,"y":260,"score":35,"level":0},{"x":445,"y":261,"score":27,"level":0},{"x":599,"y":261,"score":27,"level":0},{"x":662,"y":261,"score":46,"level":0},{"x":792,"y":261,"score":34,"level":0},{"x":818,"y":261,"score":35,"level":0},{"x":1086,"y":261,"score":38,"level":0},{"x":1421,"y":261,"score":46,"level":0},{"x":1490,"y":261,"score":31,"level":0},{"x":519,"y":262,"score":72,"level":0},{"x":532,"y":262,"score":60,"level":0},{"x":989,"y":262,"score":46,"level":0},{"x":1297,"y":262,"score":31,"level":0},{"x":1360,"y":262,"score":54,"level":0},{"x":420,"y":263,"score":36,"level":0},{"x":643,"y":263,"score":43,"level":0},{"x":772,"y":263,"score":29,"level":0},{"x":1050,"y":263,"score":29,"level":0},{"x":1234,"y":263,"score":57,"level":0},{"x":674,"y":264,"score":56,"level":0},{"x":824,"y":264,"score":31,"level":0},{"x":1290,"y":264,"score":42,"level":0},{"x":1382,"y":264,"score":26,"level":0},{"x":778,"y":265,"score":46,"level":0},{"x":1139,"y":265,"score":28,"level":0},{"x":1214,"y":265,"score":45,"level":0},{"x":1373,"y":265,"score":33,"level":0},{"x":1480,"y":265,"score":31,"level":0},{"x":629,"y":266,"score":104,"level":0},{"x":703,"y":266,"score":39,"level":0},{"x":951,"y":266,"score":31,"level":0},{"x":1002,"y":266,"score":40,"level":0},{"x":1152,"y":266,"score":42,"level":0},{"x":530,"y":267,"score":33,"level":0},{"x":622,"y":267,"score":33,"level":0},{"x":1303,"y":267,"score":32,"level":0},{"x":435,"y":268,"score":48,"level":0},{"x":635,"y":268,"score":68,"level":0},{"x":1317,"y":268,"score":39,"level":0},{"x":1378,"y":268,"score":45,"level":0},{"x":1442,"y":268,"score":35,"level":0},{"x":540,"y":269,"score":67,"level":0},{"x":637,"y":269,"score":87,"level":0},{"x":762,"y":269,"score":26,"level":0},{"x":935,"y":269,"score":36,"level":0},{"x":1241,"y":269,"score":35,"level":0},{"x":1269,"y":269,"score":31,"level":0},{"x":697,"y":270,"score":53,"level":0},{"x":707,"y":270,"score":84,"level":0},{"x":836,"y":270,"score":35,"level":0},{"x":1137,"y":270,"score":38,"level":0},{"x":625,"y":271,"score":29,"level":0},{"x":820,"y":271,"score":32,"level":0},{"x":1145,"y":271,"score":26,"level":0},{"x":1163,"y":271,"score":27,"level":0},{"x":1171,"y":271,"score":30,"level":0},{"x":1382,"y":271,"score":35,"level":0},{"x":1426,"y":271,"score":35,"level":0},{"x":1437,"y":271,"score":26,"level":0},{"x":494,"y":272,"score":29,"level":0},{"x":534,"y":272,"score":52,"level":0},{"x":994,"y":272,"score":30,"level":0},{"x":1448,"y":272,"score":28,"level":0},{"x":528,"y":273,"score":97,"level":0},{"x":547,"y":273,"score":33,"level":0},{"x":661,"y":273,"score":27,"level":0},{"x":1022,"y":273,"score":36,"level":0},{"x":1149,"y":273,"score":60,"level":0},{"x":684,"y":274,"score":31,"level":0},{"x":1441,"y":274,"score":27,"level":0},{"x":624,"y":275,"score":85,"level":0},{"x":879,"y":275,"score":36,"level":0},{"x":1078,"y":275,"score":26,"level":0},{"x":428,"y":276,"score":63,"level":0},{"x":721,"y":276,"score":73,"level":0},{"x":938,"y":276,"score":41,"level":0},{"x":1379,"y":276,"score":28,"level":0},{"x":403,"y":277,"score":28,"level":0},{"x":519,"y":277,"score":31,"level":0},{"x":550,"y":277,"score":30,"level":0},{"x":613,"y":277,"score":32,"level":0},{"x":953,"y":277,"score":31,"level":0},{"x":1131,"y":277,"score":28,"level":0},{"x":1292,"y":277,"score":28,"level":0},{"x":1338,"y":277,"score":35,"level":0},{"x":434,"y":278,"score":27,"level":0},{"x":1235,"y":278,"score":32,"level":0},{"x":1302,"y":278,"score":33,"level":0},{"x":1394,"y":278,"score":35,"level":0},{"x":626,"y":279,"score":29,"level":0},{"x":783,"y":279,"score":27,"level":0},{"x":991,"y":279,"score":33,"level":0},{"x":647,"y":280,"score":34,"level":0},{"x":706,"y":280,"score":43,"level":0},{"x":897,"y":280,"score":56,"level":0},{"x":1246,"y":280,"score":55,"level":0},{"x":1340,"y":280,"score":38,"level":0},{"x":1397,"y":280,"score":28,"level":0},{"x":1459,"y":280,"score":46,"level":0},{"x":455,"y":281,"score":35,"level":0},{"x":731,"y":281,"score":30,"level":0},{"x":890,"y":281,"score":36,"level":0},{"x":1141,"y":281,"score":40,"level":0},{"x":1321,"y":281,"score":29,"level":0},{"x":1467,"y":281,"score":38,"level":0},{"x":644,"y":282,"score":30,"level":0},{"x":778,"y":282,"score":42,"level":0},{"x":884,"y":282,"score":33,"level":0},{"x":1087,"y":282,"score":28,"level":0},{"x":1172,"y":283,"score":38,"level":0},{"x":1010,"y":284,"score":26,"level":0},{"x":532,"y":285,"score":56,"level":0},{"x":787,"y":285,"score":58,"level":0},{"x":1302,"y":285,"score":28,"level":0},{"x":1395,"y":285,"score":31,"level":0},{"x":1473,"y":285,"score":44,"level":0},{"x":839,"y":286,"score":34,"level":0},{"x":1260,"y":286,"score":42,"level":0},{"x":1312,"y":286,"score":34,"level":0},{"x":1349,"y":286,"score":34,"level":0},{"x":1398,"y":286,"score":51,"level":0},{"x":628,"y":287,"score":68,"level":0},{"x":776,"y":287,"score":28,"level":0},{"x":1059,"y":287,"score":28,"level":0},{"x":455,"y":288,"score":43,"level":0},{"x":520,"y":288,"score":33,"level":0},{"x":823,"y":288,"score":34,"level":0},{"x":1083,"y":288,"score":30,"level":0},{"x":1161,"y":288,"score":68,"level":0},{"x":1246,"y":288,"score":34,"level":0},{"x":1344,"y":288,"score":36,"level":0},{"x":1407,"y":288,"score":64,"level":0},{"x":722,"y":289,"score":54,"level":0},{"x":1270,"y":289,"score":29,"level":0},{"x":1319,"y":289,"score":43,"level":0},{"x":454,"y":290,"score":35,"level":0},{"x":552,"y":290,"score":102,"level":0},{"x":704,"y":291,"score":48,"level":0},{"x":781,"y":291,"score":54,"level":0},{"x":787,"y":291,"score":26,"level":0},{"x":889,"y":291,"score":29,"level":0},{"x":643,"y":292,"score":102,"level":0},{"x":826,"y":292,"score":28,"level":0},{"x":1422,"y":292,"score":30,"level":0},{"x":1460,"y":292,"score":27,"level":0},{"x":710,"y":293,"score":38,"level":0},{"x":971,"y":293,"score":26,"level":0},{"x":997,"y":293,"score":62,"level":0},{"x":1238,"y":293,"score":38,"level":0},{"x":1331,"y":293,"score":28,"level":0},{"x":1475,"y":293,"score":43,"level":0},{"x":738,"y":294,"score":37,"level":0},{"x":955,"y":294,"score":40,"level":0},{"x":975,"y":294,"score":32,"level":0},{"x":1405,"y":294,"score":53,"level":0},{"x":531,"y":295,"score":38,"level":0},{"x":735,"y":295,"score":47,"level":0},{"x":983,"y":295,"score":40,"level":0},{"x":1257,"y":295,"score":31,"level":0},{"x":1333,"y":295,"score":36,"level":0},{"x":520,"y":296,"score":28,"level":0},{"x":978,"y":296,"score":59,"level":0},{"x":1184,"y":296,"score":47,"level":0},{"x":838,"y":297,"score":32,"level":0},{"x":1008,"y":297,"score":158,"level":0},{"x":1179,"y":297,"score":27,"level":0},{"x":1421,"y":297,"score":47,"level":0},{"x":421,"y":298,"score":70,"level":0},{"x":743,"y":298,"score":53,"level":0},{"x":787,"y":298,"score":112,"level":0},{"x":732,"y":299,"score":37,"level":0},{"x":1089,"y":299,"score":45,"level":0},{"x":1490,"y":299,"score":27,"level":0},{"x":516,"y":300,"score":30,"level":0},{"x":689,"y":300,"score":100,"level":0},{"x":696,"y":300,"score":78,"level":0},{"x":996,"y":300,"score":68,"level":0},{"x":999,"y":300,"score":61,"level":0},{"x":1188,"y":300,"score":40,"level":0},{"x":547,"y":301,"score":41,"level":0},{"x":984,"y":301,"score":64,"level":0},{"x":621,"y":302,"score":84,"level":0},{"x":798,"y":302,"score":77,"level":0},{"x":970,"y":302,"score":29,"level":0},{"x":1238,"y":302,"score":34,"level":0},{"x":1241,"y":302,"score":39,"level":0},{"x":1484,"y":302,"score":32,"level":0},{"x":657,"y":303,"score":28,"level":0},{"x":660,"y":303,"score":28,"level":0},{"x":837,"y":303,"score":26,"level":0},{"x":1086,"y":303,"score":53,"level":0},{"x":1402,"y":303,"score":27,"level":0},{"x":898,"y":304,"score":37,"level":0},{"x":1070,"y":304,"score":48,"level":0},{"x":420,"y":305,"score":68,"level":0},{"x":736,"y":305,"score":26,"level":0},{"x":893,"y":305,"score":27,"level":0},{"x":994,"y":305,"score":61,"level":0},{"x":1178,"y":305,"score":32,"level":0},{"x":614,"y":306,"score":37,"level":0},{"x":922,"y":306,"score":31,"level":0},{"x":1362,"y":306,"score":42,"level":0},{"x":440,"y":307,"score":76,"level":0},{"x":747,"y":307,"score":28,"level":0},{"x":1284,"y":307,"score":28,"level":0},{"x":1426,"y":307,"score":42,"level":0},{"x":730,"y":308,"score":60,"level":0},{"x":1123,"y":308,"score":26,"level":0},{"x":1174,"y":308,"score":72,"level":0},{"x":1180,"y":308,"score":40,"level":0},{"x":1480,"y":308,"score":36,"level":0},{"x":517,"y":309,"score":47,"level":0},{"x":915,"y":309,"score":52,"level":0},{"x":1270,"y":309,"score":39,"level":0},{"x":1279,"y":309,"score":36,"level":0},{"x":525,"y":310,"score":30,"level":0},{"x":966,"y":310,"score":29,"level":0},{"x":1002,"y":310,"score":62,"level":0},{"x":1197,"y":310,"score":32,"level":0},{"x":396,"y":311,"score":26,"level":0},{"x":432,"y":311,"score":34,"level":0},{"x":499,"y":311,"score":27,"level":0},{"x":623,"y":311,"score":91,"level":0},{"x":1075,"y":311,"score":29,"level":0},{"x":1413,"y":311,"score":43,"level":0},{"x":526,"y":312,"score":35,"level":0},{"x":1348,"y":312,"score":35,"level":0},{"x":1431,"y":312,"score":60,"level":0},{"x":426,"y":313,"score":100,"level":0},{"x":1013,"y":313,"score":34,"level":0},{"x":1295,"y":313,"score":37,"level":0},{"x":560,"y":314,"score":26,"level":0},{"x":997,"y":314,"score":34,"level":0},{"x":1164,"y":314,"score":43,"level":0},{"x":1433,"y":314,"score":49,"level":0},{"x":410,"y":315,"score":27,"level":0},{"x":533,"y":315,"score":58,"level":0},{"x":1270,"y":315,"score":53,"level":0},{"x":1280,"y":315,"score":26,"level":0},{"x":522,"y":316,"score":38,"level":0},{"x":792,"y":316,"score":49,"level":0},{"x":1181,"y":316,"score":53,"level":0},{"x":1201,"y":316,"score":54,"level":0},{"x":679,"y":317,"score":42,"level":0},{"x":745,"y":317,"score":33,"level":0},{"x":914,"y":317,"score":71,"level":0},{"x":436,"y":318,"score":58,"level":0},{"x":722,"y":318,"score":33,"level":0},{"x":1007,"y":318,"score":39,"level":0},{"x":1104,"y":318,"score":29,"level":0},{"x":1207,"y":318,"score":36,"level":0},{"x":400,"y":319,"score":28,"level":0},{"x":545,"y":319,"score":51,"level":0},{"x":863,"y":319,"score":35,"level":0},{"x":908,"y":319,"score":36,"level":0},{"x":987,"y":319,"score":51,"level":0},{"x":1070,"y":319,"score":34,"level":0},{"x":1169,"y":319,"score":27,"level":0},{"x":417,"y":320,"score":54,"level":0},{"x":745,"y":320,"score":35,"level":0},{"x":782,"y":320,"score":30,"level":0},{"x":994,"y":320,"score":33,"level":0},{"x":727,"y":321,"score":109,"level":0},{"x":1003,"y":321,"score":35,"level":0},{"x":1197,"y":321,"score":77,"level":0},{"x":1279,"y":321,"score":68,"level":0},{"x":1444,"y":321,"score":43,"level":0},{"x":410,"y":322,"score":44,"level":0},{"x":464,"y":322,"score":32,"level":0},{"x":478,"y":322,"score":50,"level":0},{"x":631,"y":322,"score":26,"level":0},{"x":1199,"y":322,"score":77,"level":0},{"x":1047,"y":323,"score":28,"level":0},{"x":1360,"y":323,"score":32,"level":0},{"x":475,"y":324,"score":30,"level":0},{"x":854,"y":324,"score":40,"level":0},{"x":911,"y":324,"score":73,"level":0},{"x":1102,"y":324,"score":36,"level":0},{"x":1201,"y":324,"score":39,"level":0},{"x":1437,"y":324,"score":28,"level":0},{"x":1448,"y":324,"score":36,"level":0},{"x":469,"y":325,"score":52,"level":0},{"x":681,"y":325,"score":63,"level":0},{"x":787,"y":325,"score":28,"level":0},{"x":801,"y":325,"score":42,"level":0},{"x":1007,"y":325,"score":31,"level":0},{"x":1193,"y":325,"score":52,"level":0},{"x":1212,"y":325,"score":40,"level":0},{"x":1274,"y":325,"score":26,"level":0},{"x":1450,"y":325,"score":41,"level":0},{"x":480,"y":326,"score":39,"level":0},{"x":612,"y":326,"score":28,"level":0},{"x":636,"y":326,"score":46,"level":0},{"x":729,"y":326,"score":33,"level":0},{"x":743,"y":326,"score":70,"level":0},{"x":826,"y":326,"score":29,"level":0},{"x":862,"y":326,"score":60,"level":0},{"x":918,"y":326,"score":126,"level":0},{"x":1095,"y":326,"score":46,"level":0},{"x":1282,"y":326,"score":27,"level":0},{"x":1440,"y":326,"score":29,"level":0},{"x":1473,"y":326,"score":36,"level":0},{"x":554,"y":327,"score":42,"level":0},{"x":849,"y":327,"score":30,"level":0},{"x":889,"y":327,"score":46,"level":0},{"x":996,"y":327,"score":27,"level":0},{"x":1108,"y":327,"score":27,"level":0},{"x":1185,"y":327,"score":28,"level":0},{"x":1293,"y":327,"score":55,"level":0},{"x":1376,"y":327,"score":47,"level":0},{"x":548,"y":328,"score":112,"level":0},{"x":725,"y":328,"score":30,"level":0},{"x":821,"y":328,"score":36,"level":0},{"x":872,"y":328,"score":54,"level":0},{"x":1320,"y":328,"score":31,"level":0},{"x":1454,"y":328,"score":34,"level":0},{"x":464,"y":329,"score":66,"level":0},{"x":618,"y":329,"score":55,"level":0},{"x":814,"y":329,"score":36,"level":0},{"x":1026,"y":329,"score":32,"level":0},{"x":1062,"y":329,"score":28,"level":0},{"x":1185,"y":329,"score":30,"level":0},{"x":1217,"y":329,"score":62,"level":0},{"x":1346,"y":329,"score":27,"level":0},{"x":1456,"y":329,"score":41,"level":0},{"x":554,"y":330,"score":26,"level":0},{"x":927,"y":330,"score":44,"level":0},{"x":966,"y":330,"score":30,"level":0},{"x":1088,"y":330,"score":27,"level":0},{"x":1102,"y":330,"score":130,"level":0},{"x":1308,"y":330,"score":54,"level":0},{"x":801,"y":331,"score":55,"level":0},{"x":934,"y":331,"score":55,"level":0},{"x":1140,"y":331,"score":30,"level":0},{"x":1278,"y":331,"score":26,"level":0},{"x":1382,"y":331,"score":52,"level":0},{"x":1019,"y":332,"score":30,"level":0},{"x":1108,"y":332,"score":45,"level":0},{"x":1126,"y":332,"score":36,"level":0},{"x":1213,"y":332,"score":82,"level":0},{"x":1253,"y":332,"score":34,"level":0},{"x":863,"y":333,"score":42,"level":0},{"x":871,"y":333,"score":26,"level":0},{"x":919,"y":333,"score":32,"level":0},{"x":1001,"y":333,"score":28,"level":0},{"x":1219,"y":333,"score":63,"level":0},{"x":415,"y":334,"score":29,"level":0},{"x":731,"y":334,"score":31,"level":0},{"x":1115,"y":334,"score":84,"level":0},{"x":1133,"y":334,"score":32,"level":0},{"x":1202,"y":334,"score":29,"level":0},{"x":1338,"y":334,"score":35,"level":0},{"x":1464,"y":334,"score":37,"level":0},{"x":925,"y":335,"score":104,"level":0},{"x":1315,"y":335,"score":32,"level":0},{"x":1377,"y":335,"score":32,"level":0},{"x":1140,"y":336,"score":26,"level":0},{"x":1156,"y":336,"score":32,"level":0},{"x":1444,"y":336,"score":26,"level":0},{"x":1467,"y":336,"score":44,"level":0},{"x":879,"y":337,"score":35,"level":0},{"x":1108,"y":337,"score":59,"level":0},{"x":1127,"y":337,"score":28,"level":0},{"x":1143,"y":337,"score":30,"level":0},{"x":1489,"y":337,"score":32,"level":0},{"x":458,"y":338,"score":78,"level":0},{"x":907,"y":338,"score":28,"level":0},{"x":1146,"y":338,"score":39,"level":0},{"x":1326,"y":338,"score":53,"level":0},{"x":530,"y":339,"score":34,"level":0},{"x":1263,"y":339,"score":32,"level":0},{"x":1300,"y":339,"score":63,"level":0},{"x":393,"y":340,"score":54,"level":0},{"x":456,"y":340,"score":60,"level":0},{"x":747,"y":340,"score":35,"level":0},{"x":1013,"y":340,"score":49,"level":0},{"x":1136,"y":340,"score":39,"level":0},{"x":1152,"y":340,"score":65,"level":0},{"x":1222,"y":340,"score":32,"level":0},{"x":1342,"y":340,"score":37,"level":0},{"x":1388,"y":340,"score":29,"level":0},{"x":601,"y":341,"score":67,"level":0},{"x":832,"y":341,"score":34,"level":0},{"x":891,"y":341,"score":66,"level":0},{"x":1156,"y":341,"score":32,"level":0},{"x":1324,"y":341,"score":33,"level":0},{"x":665,"y":342,"score":29,"level":0},{"x":1160,"y":342,"score":55,"level":0},{"x":1211,"y":342,"score":43,"level":0},{"x":1315,"y":342,"score":48,"level":0},{"x":1400,"y":342,"score":74,"level":0},{"x":776,"y":343,"score":32,"level":0},{"x":817,"y":343,"score":28,"level":0},{"x":947,"y":343,"score":34,"level":0},{"x":1121,"y":343,"score":38,"level":0},{"x":1147,"y":343,"score":28,"level":0},{"x":1164,"y":343,"score":55,"level":0},{"x":460,"y":344,"score":37,"level":0},{"x":480,"y":344,"score":28,"level":0},{"x":721,"y":344,"score":27,"level":0},{"x":1014,"y":344,"score":44,"level":0},{"x":1226,"y":344,"score":28,"level":0},{"x":457,"y":345,"score":64,"level":0},{"x":1086,"y":345,"score":34,"level":0},{"x":1254,"y":345,"score":46,"level":0},{"x":1273,"y":345,"score":26,"level":0},{"x":1300,"y":345,"score":41,"level":0},{"x":1395,"y":345,"score":43,"level":0},{"x":686,"y":346,"score":34,"level":0},{"x":1297,"y":346,"score":35,"level":0},{"x":1310,"y":346,"score":53,"level":0},{"x":1344,"y":346,"score":28,"level":0},{"x":1436,"y":346,"score":26,"level":0},{"x":453,"y":347,"score":26,"level":0},{"x":1126,"y":347,"score":29,"level":0},{"x":1159,"y":347,"score":68,"level":0},{"x":1176,"y":347,"score":44,"level":0},{"x":1178,"y":347,"score":28,"level":0},{"x":1208,"y":347,"score":38,"level":0},{"x":408,"y":348,"score":27,"level":0},{"x":1010,"y":348,"score":40,"level":0},{"x":1314,"y":348,"score":119,"level":0},{"x":1478,"y":348,"score":60,"level":0},{"x":377,"y":349,"score":53,"level":0},{"x":447,"y":349,"score":30,"level":0},{"x":596,"y":349,"score":32,"level":0},{"x":673,"y":349,"score":49,"level":0},{"x":681,"y":349,"score":46,"level":0},{"x":859,"y":349,"score":26,"level":0},{"x":1248,"y":349,"score":66,"level":0},{"x":1490,"y":349,"score":39,"level":0},{"x":444,"y":350,"score":47,"level":0},{"x":761,"y":350,"score":54,"level":0},{"x":962,"y":350,"score":28,"level":0},{"x":1170,"y":350,"score":27,"level":0},{"x":1188,"y":350,"score":30,"level":0},{"x":1265,"y":350,"score":39,"level":0},{"x":1267,"y":350,"score":26,"level":0},{"x":1292,"y":350,"score":76,"level":0},{"x":441,"y":351,"score":26,"level":0},{"x":521,"y":351,"score":26,"level":0},{"x":707,"y":351,"score":36,"level":0},{"x":1230,"y":351,"score":28,"level":0},{"x":1235,"y":351,"score":34,"level":0},{"x":1277,"y":351,"score":32,"level":0},{"x":1328,"y":351,"score":27,"level":0},{"x":945,"y":352,"score":56,"level":0},{"x":1148,"y":352,"score":45,"level":0},{"x":1178,"y":352,"score":41,"level":0},{"x":1192,"y":352,"score":78,"level":0},{"x":1321,"y":352,"score":37,"level":0},{"x":1402,"y":352,"score":74,"level":0},{"x":756,"y":353,"score":48,"level":0},{"x":947,"y":353,"score":41,"level":0},{"x":1104,"y":353,"score":46,"level":0},{"x":382,"y":354,"score":40,"level":0},{"x":835,"y":354,"score":52,"level":0},{"x":1015,"y":354,"score":59,"level":0},{"x":1215,"y":354,"score":44,"level":0},{"x":1339,"y":354,"score":31,"level":0},{"x":420,"y":355,"score":64,"level":0},{"x":759,"y":355,"score":37,"level":0},{"x":767,"y":355,"score":42,"level":0},{"x":845,"y":355,"score":32,"level":0},{"x":893,"y":355,"score":79,"level":0},{"x":939,"y":355,"score":50,"level":0},{"x":948,"y":355,"score":42,"level":0},{"x":1031,"y":355,"score":80,"level":0},{"x":1143,"y":355,"score":64,"level":0},{"x":1189,"y":355,"score":80,"level":0},{"x":1245,"y":355,"score":48,"level":0},{"x":1257,"y":355,"score":59,"level":0},{"x":1124,"y":356,"score":28,"level":0},{"x":1231,"y":356,"score":28,"level":0},{"x":1325,"y":356,"score":53,"level":0},{"x":889,"y":357,"score":58,"level":0},{"x":940,"y":357,"score":59,"level":0},{"x":1164,"y":357,"score":29,"level":0},{"x":1239,"y":357,"score":44,"level":0},{"x":1313,"y":357,"score":45,"level":0},{"x":671,"y":358,"score":42,"level":0},{"x":700,"y":358,"score":28,"level":0},{"x":715,"y":358,"score":26,"level":0},{"x":852,"y":358,"score":39,"level":0},{"x":384,"y":359,"score":28,"level":0},{"x":682,"y":359,"score":100,"level":0},{"x":774,"y":359,"score":92,"level":0},{"x":858,"y":359,"score":26,"level":0},{"x":960,"y":359,"score":34,"level":0},{"x":1103,"y":359,"score":45,"level":0},{"x":1141,"y":359,"score":118,"level":0},{"x":511,"y":360,"score":47,"level":0},{"x":767,"y":360,"score":44,"level":0},{"x":902,"y":360,"score":125,"level":0},{"x":1083,"y":360,"score":138,"level":0},{"x":1265,"y":360,"score":41,"level":0},{"x":1304,"y":360,"score":32,"level":0},{"x":1332,"y":360,"score":56,"level":0},{"x":1372,"y":360,"score":30,"level":0},{"x":752,"y":361,"score":30,"level":0},{"x":759,"y":361,"score":38,"level":0},{"x":793,"y":361,"score":41,"level":0},{"x":1152,"y":361,"score":29,"level":0},{"x":1216,"y":361,"score":38,"level":0},{"x":1377,"y":361,"score":31,"level":0},{"x":423,"y":362,"score":120,"level":0},{"x":791,"y":362,"score":57,"level":0},{"x":871,"y":362,"score":41,"level":0},{"x":878,"y":362,"score":27,"level":0},{"x":1237,"y":362,"score":27,"level":0},{"x":1243,"y":362,"score":95,"level":0},{"x":1333,"y":362,"score":74,"level":0},{"x":1339,"y":362,"score":179,"level":0},{"x":1419,"y":362,"score":47,"level":0},{"x":1444,"y":362,"score":29,"level":0},{"x":876,"y":363,"score":60,"level":0},{"x":887,"y":363,"score":40,"level":0},{"x":890,"y":363,"score":26,"level":0},{"x":1018,"y":363,"score":32,"level":0},{"x":1276,"y":363,"score":32,"level":0},{"x":1314,"y":363,"score":34,"level":0},{"x":1407,"y":363,"score":26,"level":0},{"x":1414,"y":363,"score":84,"level":0},{"x":1417,"y":363,"score":73,"level":0},{"x":1433,"y":363,"score":32,"level":0},{"x":418,"y":364,"score":53,"level":0},{"x":698,"y":364,"score":100,"level":0},{"x":812,"y":364,"score":33,"level":0},{"x":1075,"y":364,"score":54,"level":0},{"x":1106,"y":364,"score":33,"level":0},{"x":1262,"y":364,"score":26,"level":0},{"x":1328,"y":364,"score":60,"level":0},{"x":779,"y":365,"score":34,"level":0},{"x":883,"y":365,"score":30,"level":0},{"x":958,"y":365,"score":61,"level":0},{"x":1030,"y":365,"score":45,"level":0},{"x":1183,"y":365,"score":28,"level":0},{"x":1225,"y":365,"score":41,"level":0},{"x":1322,"y":365,"score":41,"level":0},{"x":1428,"y":365,"score":29,"level":0},{"x":530,"y":366,"score":34,"level":0},{"x":759,"y":366,"score":53,"level":0},{"x":773,"y":366,"score":31,"level":0},{"x":906,"y":366,"score":34,"level":0},{"x":947,"y":366,"score":30,"level":0},{"x":1017,"y":366,"score":58,"level":0},{"x":1125,"y":366,"score":28,"level":0},{"x":1163,"y":366,"score":66,"level":0},{"x":1180,"y":366,"score":32,"level":0},{"x":1239,"y":366,"score":36,"level":0},{"x":492,"y":367,"score":40,"level":0},{"x":703,"y":367,"score":42,"level":0},{"x":803,"y":367,"score":89,"level":0},{"x":1030,"y":367,"score":45,"level":0},{"x":1080,"y":367,"score":110,"level":0},{"x":1130,"y":367,"score":33,"level":0},{"x":1231,"y":367,"score":26,"level":0},{"x":678,"y":368,"score":26,"level":0},{"x":740,"y":368,"score":36,"level":0},{"x":794,"y":368,"score":149,"level":0},{"x":863,"y":368,"score":32,"level":0},{"x":1243,"y":368,"score":66,"level":0},{"x":1273,"y":368,"score":39,"level":0},{"x":1384,"y":368,"score":30,"level":0},{"x":616,"y":369,"score":44,"level":0},{"x":878,"y":369,"score":69,"level":0},{"x":963,"y":369,"score":48,"level":0},{"x":1112,"y":369,"score":28,"level":0},{"x":1231,"y":369,"score":27,"level":0},{"x":1402,"y":369,"score":61,"level":0},{"x":823,"y":370,"score":36,"level":0},{"x":1095,"y":370,"score":30,"level":0},{"x":1145,"y":370,"score":44,"level":0},{"x":1167,"y":370,"score":27,"level":0},{"x":1309,"y":370,"score":30,"level":0},{"x":1340,"y":370,"score":29,"level":0},{"x":1386,"y":370,"score":40,"level":0},{"x":1418,"y":370,"score":37,"level":0},{"x":430,"y":371,"score":29,"level":0},{"x":945,"y":371,"score":47,"level":0},{"x":1225,"y":371,"score":36,"level":0},{"x":1327,"y":371,"score":74,"level":0},{"x":1468,"y":371,"score":33,"level":0},{"x":523,"y":372,"score":80,"level":0},{"x":682,"y":372,"score":73,"level":0},{"x":1169,"y":372,"score":40,"level":0},{"x":1270,"y":372,"score":44,"level":0},{"x":1285,"y":372,"score":28,"level":0},{"x":1321,"y":372,"score":47,"level":0},{"x":1409,"y":372,"score":37,"level":0},{"x":1426,"y":372,"score":31,"level":0},{"x":457,"y":373,"score":32,"level":0},{"x":886,"y":373,"score":34,"level":0},{"x":896,"y":373,"score":30,"level":0},{"x":1176,"y":373,"score":40,"level":0},{"x":1341,"y":373,"score":54,"level":0},{"x":809,"y":374,"score":40,"level":0},{"x":1014,"y":374,"score":32,"level":0},{"x":1029,"y":374,"score":32,"level":0},{"x":1337,"y":374,"score":30,"level":0},{"x":1350,"y":374,"score":26,"level":0},{"x":1398,"y":374,"score":140,"level":0},{"x":1406,"y":374,"score":70,"level":0},{"x":434,"y":375,"score":45,"level":0},{"x":566,"y":375,"score":36,"level":0},{"x":801,"y":375,"score":35,"level":0},{"x":1003,"y":375,"score":33,"level":0},{"x":1276,"y":375,"score":28,"level":0},{"x":504,"y":376,"score":37,"level":0},{"x":622,"y":376,"score":32,"level":0},{"x":664,"y":376,"score":28,"level":0},{"x":751,"y":376,"score":54,"level":0},{"x":828,"y":376,"score":42,"level":0},{"x":1246,"y":376,"score":27,"level":0},{"x":1465,"y":376,"score":69,"level":0},{"x":532,"y":377,"score":28,"level":0},{"x":1145,"y":377,"score":36,"level":0},{"x":1349,"y":377,"score":32,"level":0},{"x":1421,"y":377,"score":34,"level":0},{"x":429,"y":378,"score":47,"level":0},{"x":523,"y":378,"score":29,"level":0},{"x":661,"y":378,"score":42,"level":0},{"x":863,"y":378,"score":28,"level":0},{"x":1078,"y":378,"score":47,"level":0},{"x":1152,"y":378,"score":33,"level":0},{"x":1184,"y":378,"score":36,"level":0},{"x":1325,"y":378,"score":36,"level":0},{"x":1334,"y":378,"score":57,"level":0},{"x":1403,"y":378,"score":73,"level":0},{"x":611,"y":379,"score":74,"level":0},{"x":883,"y":379,"score":56,"level":0},{"x":1272,"y":379,"score":44,"level":0},{"x":1343,"y":379,"score":33,"level":0},{"x":1356,"y":379,"score":26,"level":0},{"x":1395,"y":379,"score":30,"level":0},{"x":520,"y":380,"score":30,"level":0},{"x":605,"y":380,"score":68,"level":0},{"x":685,"y":380,"score":49,"level":0},{"x":1109,"y":380,"score":29,"level":0},{"x":1183,"y":380,"score":34,"level":0},{"x":1406,"y":380,"score":47,"level":0},{"x":551,"y":381,"score":33,"level":0},{"x":583,"y":381,"score":34,"level":0},{"x":750,"y":381,"score":27,"level":0},{"x":952,"y":381,"score":51,"level":0},{"x":1337,"y":381,"score":74,"level":0},{"x":1379,"y":381,"score":46,"level":0},{"x":378,"y":382,"score":26,"level":0},{"x":607,"y":382,"score":58,"level":0},{"x":810,"y":382,"score":31,"level":0},{"x":909,"y":382,"score":27,"level":0},{"x":1278,"y":382,"score":50,"level":0},{"x":1283,"y":382,"score":38,"level":0},{"x":509,"y":383,"score":32,"level":0},{"x":572,"y":383,"score":41,"level":0},{"x":664,"y":383,"score":28,"level":0},{"x":888,"y":383,"score":40,"level":0},{"x":1004,"y":383,"score":33,"level":0},{"x":1154,"y":383,"score":29,"level":0},{"x":1162,"y":383,"score":26,"level":0},{"x":1223,"y":383,"score":30,"level":0},{"x":1332,"y":383,"score":59,"level":0},{"x":1401,"y":383,"score":41,"level":0},{"x":1411,"y":383,"score":29,"level":0},{"x":431,"y":384,"score":74,"level":0},{"x":616,"y":384,"score":54,"level":0},{"x":1075,"y":384,"score":28,"level":0},{"x":1149,"y":384,"score":34,"level":0},{"x":1276,"y":384,"score":58,"level":0},{"x":1389,"y":384,"score":26,"level":0},{"x":1436,"y":384,"score":35,"level":0},{"x":662,"y":385,"score":85,"level":0},{"x":841,"y":385,"score":53,"level":0},{"x":964,"y":385,"score":46,"level":0},{"x":1094,"y":385,"score":40,"level":0},{"x":431,"y":386,"score":65,"level":0},{"x":576,"y":386,"score":28,"level":0},{"x":751,"y":386,"score":37,"level":0},{"x":815,"y":386,"score":38,"level":0},{"x":882,"y":386,"score":41,"level":0},{"x":902,"y":386,"score":29,"level":0},{"x":1017,"y":386,"score":28,"level":0},{"x":1157,"y":386,"score":33,"level":0},{"x":1252,"y":386,"score":40,"level":0},{"x":1470,"y":386,"score":34,"level":0},{"x":1488,"y":386,"score":27,"level":0},{"x":496,"y":387,"score":29,"level":0},{"x":1250,"y":387,"score":49,"level":0},{"x":512,"y":388,"score":34,"level":0},{"x":563,"y":388,"score":33,"level":0},{"x":713,"y":388,"score":30,"level":0},{"x":765,"y":388,"score":33,"level":0},{"x":1410,"y":388,"score":43,"level":0},{"x":1428,"y":388,"score":27,"level":0},{"x":719,"y":389,"score":26,"level":0},{"x":819,"y":389,"score":42,"level":0},{"x":975,"y":389,"score":27,"level":0},{"x":1073,"y":389,"score":28,"level":0},{"x":1079,"y":389,"score":40,"level":0},{"x":1115,"y":389,"score":30,"level":0},{"x":1249,"y":389,"score":32,"level":0},{"x":1421,"y":389,"score":27,"level":0},{"x":445,"y":390,"score":54,"level":0},{"x":1085,"y":390,"score":45,"level":0},{"x":457,"y":391,"score":36,"level":0},{"x":724,"y":391,"score":28,"level":0},{"x":843,"y":391,"score":30,"level":0},{"x":1160,"y":391,"score":50,"level":0},{"x":1415,"y":391,"score":40,"level":0},{"x":377,"y":392,"score":31,"level":0},{"x":445,"y":392,"score":58,"level":0},{"x":451,"y":392,"score":31,"level":0},{"x":546,"y":392,"score":61,"level":0},{"x":567,"y":392,"score":34,"level":0},{"x":745,"y":392,"score":43,"level":0},{"x":892,"y":392,"score":118,"level":0},{"x":1098,"y":392,"score":35,"level":0},{"x":1283,"y":392,"score":47,"level":0},{"x":1352,"y":392,"score":27,"level":0},{"x":658,"y":393,"score":30,"level":0},{"x":674,"y":393,"score":87,"level":0},{"x":776,"y":393,"score":34,"level":0},{"x":1036,"y":393,"score":26,"level":0},{"x":1276,"y":393,"score":85,"level":0},{"x":697,"y":394,"score":30,"level":0},{"x":1419,"y":394,"score":43,"level":0},{"x":835,"y":395,"score":37,"level":0},{"x":952,"y":395,"score":32,"level":0},{"x":969,"y":395,"score":51,"level":0},{"x":1019,"y":395,"score":51,"level":0},{"x":1378,"y":395,"score":33,"level":0},{"x":493,"y":396,"score":42,"level":0},{"x":632,"y":396,"score":35,"level":0},{"x":725,"y":396,"score":27,"level":0},{"x":896,"y":396,"score":67,"level":0},{"x":1025,"y":396,"score":75,"level":0},{"x":1084,"y":396,"score":38,"level":0},{"x":1163,"y":396,"score":50,"level":0},{"x":563,"y":397,"score":42,"level":0},{"x":667,"y":397,"score":95,"level":0},{"x":996,"y":397,"score":40,"level":0},{"x":1104,"y":397,"score":28,"level":0},{"x":1443,"y":397,"score":57,"level":0},{"x":407,"y":398,"score":33,"level":0},{"x":544,"y":398,"score":98,"level":0},{"x":1457,"y":398,"score":35,"level":0},{"x":1208,"y":399,"score":30,"level":0},{"x":1414,"y":399,"score":28,"level":0},{"x":899,"y":400,"score":75,"level":0},{"x":1159,"y":400,"score":26,"level":0},{"x":1213,"y":400,"score":27,"level":0},{"x":1279,"y":400,"score":38,"level":0},{"x":1430,"y":400,"score":27,"level":0},{"x":651,"y":401,"score":26,"level":0},{"x":672,"y":401,"score":40,"level":0},{"x":783,"y":401,"score":34,"level":0},{"x":815,"y":401,"score":26,"level":0},{"x":968,"y":401,"score":36,"level":0},{"x":976,"y":401,"score":41,"level":0},{"x":1259,"y":401,"score":46,"level":0},{"x":488,"y":402,"score":102,"level":0},{"x":755,"y":402,"score":39,"level":0},{"x":667,"y":403,"score":30,"level":0},{"x":1106,"y":403,"score":66,"level":0},{"x":1225,"y":403,"score":29,"level":0},{"x":1228,"y":403,"score":27,"level":0},{"x":494,"y":404,"score":80,"level":0},{"x":622,"y":404,"score":28,"level":0},{"x":1205,"y":404,"score":30,"level":0},{"x":1345,"y":404,"score":43,"level":0},{"x":1408,"y":404,"score":37,"level":0},{"x":1413,"y":404,"score":32,"level":0},{"x":1434,"y":404,"score":29,"level":0},{"x":566,"y":405,"score":32,"level":0},{"x":934,"y":405,"score":27,"level":0},{"x":1371,"y":405,"score":42,"level":0},{"x":1378,"y":405,"score":29,"level":0},{"x":543,"y":406,"score":39,"level":0},{"x":1168,"y":406,"score":48,"level":0},{"x":1449,"y":406,"score":27,"level":0},{"x":833,"y":407,"score":40,"level":0},{"x":849,"y":407,"score":28,"level":0},{"x":919,"y":407,"score":39,"level":0},{"x":994,"y":407,"score":52,"level":0},{"x":1014,"y":407,"score":45,"level":0},{"x":1281,"y":407,"score":31,"level":0},{"x":1342,"y":407,"score":36,"level":0},{"x":1458,"y":407,"score":29,"level":0},{"x":437,"y":408,"score":51,"level":0},{"x":551,"y":408,"score":70,"level":0},{"x":908,"y":408,"score":27,"level":0},{"x":1002,"y":408,"score":96,"level":0},{"x":1245,"y":408,"score":32,"level":0},{"x":709,"y":409,"score":28,"level":0},{"x":1114,"y":409,"score":32,"level":0},{"x":1177,"y":409,"score":40,"level":0},{"x":1323,"y":409,"score":38,"level":0},{"x":696,"y":410,"score":77,"level":0},{"x":1091,"y":410,"score":31,"level":0},{"x":649,"y":411,"score":58,"level":0},{"x":772,"y":411,"score":28,"level":0},{"x":888,"y":411,"score":30,"level":0},{"x":904,"y":411,"score":44,"level":0},{"x":1007,"y":411,"score":42,"level":0},{"x":1374,"y":411,"score":32,"level":0},{"x":638,"y":412,"score":80,"level":0},{"x":868,"y":412,"score":26,"level":0},{"x":1010,"y":412,"score":91,"level":0},{"x":1179,"y":412,"score":29,"level":0},{"x":1240,"y":412,"score":41,"level":0},{"x":1340,"y":412,"score":26,"level":0},{"x":546,"y":413,"score":41,"level":0},{"x":912,"y":413,"score":43,"level":0},{"x":1283,"y":413,"score":27,"level":0},{"x":1472,"y":413,"score":42,"level":0},{"x":695,"y":414,"score":74,"level":0},{"x":756,"y":414,"score":111,"level":0},{"x":906,"y":414,"score":34,"level":0},{"x":949,"y":414,"score":29,"level":0},{"x":990,"y":414,"score":27,"level":0},{"x":553,"y":415,"score":44,"level":0},{"x":569,"y":415,"score":52,"level":0},{"x":849,"y":415,"score":27,"level":0},{"x":1065,"y":415,"score":36,"level":0},{"x":1153,"y":415,"score":34,"level":0},{"x":1418,"y":415,"score":33,"level":0},{"x":426,"y":416,"score":32,"level":0},{"x":643,"y":416,"score":44,"level":0},{"x":939,"y":416,"score":38,"level":0},{"x":1103,"y":416,"score":52,"level":0},{"x":1468,"y":416,"score":50,"level":0},{"x":505,"y":417,"score":41,"level":0},{"x":508,"y":417,"score":42,"level":0},{"x":649,"y":417,"score":70,"level":0},{"x":755,"y":417,"score":42,"level":0},{"x":770,"y":417,"score":53,"level":0},{"x":780,"y":417,"score":46,"level":0},{"x":830,"y":417,"score":90,"level":0},{"x":844,"y":417,"score":77,"level":0},{"x":1206,"y":417,"score":36,"level":0},{"x":383,"y":418,"score":28,"level":0},{"x":502,"y":418,"score":68,"level":0},{"x":1179,"y":418,"score":28,"level":0},{"x":1198,"y":418,"score":42,"level":0},{"x":1256,"y":418,"score":40,"level":0},{"x":583,"y":419,"score":40,"level":0},{"x":791,"y":419,"score":60,"level":0},{"x":1117,"y":419,"score":26,"level":0},{"x":1189,"y":419,"score":64,"level":0},{"x":675,"y":420,"score":28,"level":0},{"x":1035,"y":420,"score":29,"level":0},{"x":1082,"y":420,"score":30,"level":0},{"x":1100,"y":420,"score":29,"level":0},{"x":1114,"y":420,"score":26,"level":0},{"x":1124,"y":420,"score":30,"level":0},{"x":1200,"y":420,"score":27,"level":0},{"x":1340,"y":420,"score":34,"level":0},{"x":1345,"y":420,"score":32,"level":0},{"x":506,"y":421,"score":34,"level":0},{"x":823,"y":421,"score":35,"level":0},{"x":843,"y":421,"score":61,"level":0},{"x":916,"y":421,"score":64,"level":0},{"x":923,"y":421,"score":45,"level":0},{"x":1096,"y":421,"score":28,"level":0},{"x":1243,"y":421,"score":28,"level":0},{"x":1249,"y":421,"score":27,"level":0},{"x":1335,"y":421,"score":30,"level":0},{"x":522,"y":422,"score":29,"level":0},{"x":562,"y":422,"score":62,"level":0},{"x":669,"y":422,"score":30,"level":0},{"x":692,"y":422,"score":26,"level":0},{"x":709,"y":422,"score":27,"level":0},{"x":848,"y":422,"score":40,"level":0},{"x":881,"y":422,"score":38,"level":0},{"x":954,"y":422,"score":32,"level":0},{"x":1012,"y":422,"score":31,"level":0},{"x":1135,"y":422,"score":56,"level":0},{"x":1484,"y":422,"score":33,"level":0},{"x":506,"y":423,"score":45,"level":0},{"x":511,"y":423,"score":30,"level":0},{"x":572,"y":423,"score":36,"level":0},{"x":756,"y":423,"score":36,"level":0},{"x":878,"y":423,"score":32,"level":0},{"x":1045,"y":423,"score":27,"level":0},{"x":1231,"y":423,"score":28,"level":0},{"x":1358,"y":423,"score":33,"level":0},{"x":490,"y":424,"score":48,"level":0},{"x":699,"y":424,"score":121,"level":0},{"x":886,"y":424,"score":51,"level":0},{"x":1040,"y":424,"score":26,"level":0},{"x":596,"y":425,"score":28,"level":0},{"x":768,"y":425,"score":33,"level":0},{"x":876,"y":425,"score":27,"level":0},{"x":919,"y":425,"score":27,"level":0},{"x":927,"y":425,"score":52,"level":0},{"x":992,"y":425,"score":72,"level":0},{"x":1186,"y":425,"score":28,"level":0},{"x":1366,"y":425,"score":47,"level":0},{"x":490,"y":426,"score":27,"level":0},{"x":531,"y":426,"score":37,"level":0},{"x":726,"y":426,"score":33,"level":0},{"x":1062,"y":426,"score":45,"level":0},{"x":1068,"y":426,"score":95,"level":0},{"x":496,"y":427,"score":55,"level":0},{"x":639,"y":427,"score":48,"level":0},{"x":706,"y":427,"score":37,"level":0},{"x":1016,"y":427,"score":36,"level":0},{"x":1090,"y":427,"score":32,"level":0},{"x":1141,"y":427,"score":33,"level":0},{"x":1356,"y":427,"score":34,"level":0},{"x":1084,"y":428,"score":31,"level":0},{"x":1086,"y":428,"score":42,"level":0},{"x":1123,"y":428,"score":29,"level":0},{"x":1201,"y":428,"score":39,"level":0},{"x":1206,"y":428,"score":60,"level":0},{"x":1231,"y":428,"score":36,"level":0},{"x":1345,"y":428,"score":28,"level":0},{"x":1460,"y":428,"score":26,"level":0},{"x":638,"y":429,"score":28,"level":0},{"x":696,"y":429,"score":41,"level":0},{"x":887,"y":429,"score":32,"level":0},{"x":1296,"y":429,"score":33,"level":0},{"x":495,"y":430,"score":37,"level":0},{"x":572,"y":430,"score":47,"level":0},{"x":1190,"y":430,"score":28,"level":0},{"x":848,"y":431,"score":28,"level":0},{"x":1018,"y":431,"score":27,"level":0},{"x":1367,"y":431,"score":84,"level":0},{"x":1388,"y":431,"score":33,"level":0},{"x":1431,"y":431,"score":26,"level":0},{"x":1463,"y":431,"score":29,"level":0},{"x":404,"y":432,"score":33,"level":0},{"x":827,"y":432,"score":33,"level":0},{"x":866,"y":432,"score":48,"level":0},{"x":886,"y":432,"score":27,"level":0},{"x":981,"y":432,"score":27,"level":0},{"x":1096,"y":432,"score":28,"level":0},{"x":1137,"y":432,"score":55,"level":0},{"x":1209,"y":432,"score":34,"level":0},{"x":495,"y":433,"score":42,"level":0},{"x":516,"y":433,"score":29,"level":0},{"x":567,"y":433,"score":52,"level":0},{"x":815,"y":433,"score":26,"level":0},{"x":851,"y":433,"score":30,"level":0},{"x":934,"y":433,"score":36,"level":0},{"x":1011,"y":433,"score":43,"level":0},{"x":1177,"y":433,"score":38,"level":0},{"x":1232,"y":433,"score":30,"level":0},{"x":1237,"y":433,"score":32,"level":0},{"x":403,"y":434,"score":62,"level":0},{"x":582,"y":434,"score":46,"level":0},{"x":1064,"y":434,"score":78,"level":0},{"x":1211,"y":434,"score":31,"level":0},{"x":1273,"y":434,"score":29,"level":0},{"x":1320,"y":434,"score":33,"level":0},{"x":1347,"y":434,"score":45,"level":0},{"x":1473,"y":434,"score":53,"level":0},{"x":394,"y":435,"score":50,"level":0},{"x":870,"y":435,"score":27,"level":0},{"x":1250,"y":435,"score":26,"level":0},{"x":1328,"y":435,"score":40,"level":0},{"x":1369,"y":435,"score":52,"level":0},{"x":491,"y":436,"score":28,"level":0},{"x":654,"y":436,"score":33,"level":0},{"x":660,"y":436,"score":33,"level":0},{"x":822,"y":436,"score":33,"level":0},{"x":1346,"y":436,"score":39,"level":0},{"x":1002,"y":437,"score":63,"level":0},{"x":1160,"y":437,"score":28,"level":0},{"x":1310,"y":437,"score":28,"level":0},{"x":1393,"y":437,"score":27,"level":0},{"x":442,"y":438,"score":30,"level":0},{"x":819,"y":438,"score":29,"level":0},{"x":899,"y":438,"score":26,"level":0},{"x":1128,"y":438,"score":47,"level":0},{"x":1443,"y":438,"score":28,"level":0},{"x":1470,"y":438,"score":71,"level":0},{"x":1484,"y":438,"score":30,"level":0},{"x":482,"y":439,"score":49,"level":0},{"x":669,"y":439,"score":61,"level":0},{"x":747,"y":439,"score":36,"level":0},{"x":758,"y":439,"score":34,"level":0},{"x":1165,"y":439,"score":28,"level":0},{"x":1214,"y":439,"score":38,"level":0},{"x":1292,"y":439,"score":44,"level":0},{"x":459,"y":440,"score":28,"level":0},{"x":493,"y":440,"score":111,"level":0},{"x":538,"y":440,"score":26,"level":0},{"x":675,"y":440,"score":34,"level":0},{"x":717,"y":440,"score":26,"level":0},{"x":931,"y":440,"score":42,"level":0},{"x":938,"y":440,"score":102,"level":0},{"x":944,"y":440,"score":37,"level":0},{"x":1142,"y":440,"score":56,"level":0},{"x":1227,"y":440,"score":26,"level":0},{"x":1400,"y":440,"score":48,"level":0},{"x":1415,"y":440,"score":28,"level":0},{"x":535,"y":441,"score":32,"level":0},{"x":574,"y":441,"score":71,"level":0},{"x":626,"y":441,"score":30,"level":0},{"x":1005,"y":441,"score":41,"level":0},{"x":1021,"y":441,"score":30,"level":0},{"x":1272,"y":441,"score":66,"level":0},{"x":477,"y":442,"score":41,"level":0},{"x":508,"y":442,"score":57,"level":0},{"x":810,"y":442,"score":56,"level":0},{"x":892,"y":442,"score":30,"level":0},{"x":904,"y":442,"score":32,"level":0},{"x":1029,"y":442,"score":26,"level":0},{"x":1067,"y":442,"score":39,"level":0},{"x":1373,"y":442,"score":27,"level":0},{"x":1450,"y":442,"score":35,"level":0},{"x":1217,"y":443,"score":30,"level":0},{"x":1227,"y":443,"score":36,"level":0},{"x":1368,"y":443,"score":38,"level":0},{"x":1398,"y":443,"score":41,"level":0},{"x":1408,"y":443,"score":35,"level":0},{"x":1464,"y":443,"score":31,"level":0},{"x":806,"y":444,"score":43,"level":0},{"x":943,"y":444,"score":33,"level":0},{"x":973,"y":444,"score":44,"level":0},{"x":1225,"y":444,"score":36,"level":0},{"x":1303,"y":444,"score":43,"level":0},{"x":420,"y":445,"score":38,"level":0},{"x":735,"y":445,"score":34,"level":0},{"x":897,"y":445,"score":36,"level":0},{"x":926,"y":445,"score":32,"level":0},{"x":985,"y":445,"score":79,"level":0},{"x":1205,"y":445,"score":36,"level":0},{"x":1266,"y":445,"score":33,"level":0},{"x":918,"y":446,"score":31,"level":0},{"x":1189,"y":446,"score":28,"level":0},{"x":1276,"y":446,"score":37,"level":0},{"x":1282,"y":446,"score":38,"level":0},{"x":377,"y":447,"score":35,"level":0},{"x":404,"y":447,"score":44,"level":0},{"x":414,"y":447,"score":80,"level":0},{"x":484,"y":447,"score":30,"level":0},{"x":495,"y":447,"score":40,"level":0},{"x":637,"y":447,"score":28,"level":0},{"x":970,"y":447,"score":34,"level":0},{"x":833,"y":448,"score":26,"level":0},{"x":899,"y":448,"score":29,"level":0},{"x":976,"y":448,"score":50,"level":0},{"x":991,"y":448,"score":74,"level":0},{"x":1030,"y":448,"score":34,"level":0},{"x":1073,"y":448,"score":28,"level":0},{"x":1233,"y":448,"score":28,"level":0},{"x":1299,"y":448,"score":31,"level":0},{"x":1304,"y":448,"score":27,"level":0},{"x":917,"y":449,"score":33,"level":0},{"x":1201,"y":449,"score":44,"level":0},{"x":1309,"y":449,"score":31,"level":0},{"x":1380,"y":449,"score":51,"level":0},{"x":1409,"y":449,"score":26,"level":0},{"x":541,"y":450,"score":31,"level":0},{"x":554,"y":450,"score":33,"level":0},{"x":655,"y":450,"score":26,"level":0},{"x":738,"y":450,"score":45,"level":0},{"x":1006,"y":450,"score":30,"level":0},{"x":1102,"y":450,"score":31,"level":0},{"x":1149,"y":450,"score":26,"level":0},{"x":1246,"y":450,"score":29,"level":0},{"x":1271,"y":450,"score":35,"level":0},{"x":1387,"y":450,"score":50,"level":0},{"x":1439,"y":450,"score":28,"level":0},{"x":1481,"y":450,"score":38,"level":0},{"x":625,"y":451,"score":32,"level":0},{"x":727,"y":451,"score":39,"level":0},{"x":779,"y":451,"score":31,"level":0},{"x":959,"y":451,"score":27,"level":0},{"x":1233,"y":451,"score":28,"level":0},{"x":1373,"y":451,"score":27,"level":0},{"x":1402,"y":451,"score":51,"level":0},{"x":1418,"y":451,"score":28,"level":0},{"x":410,"y":452,"score":113,"level":0},{"x":572,"y":452,"score":26,"level":0},{"x":592,"y":452,"score":42,"level":0},{"x":973,"y":452,"score":44,"level":0},{"x":1130,"y":452,"score":55,"level":0},{"x":1308,"y":452,"score":53,"level":0},{"x":418,"y":453,"score":70,"level":0},{"x":614,"y":453,"score":33,"level":0},{"x":741,"y":453,"score":45,"level":0},{"x":807,"y":453,"score":33,"level":0},{"x":854,"y":453,"score":77,"level":0},{"x":1079,"y":453,"score":29,"level":0},{"x":1224,"y":453,"score":42,"level":0},{"x":1259,"y":453,"score":45,"level":0},{"x":523,"y":454,"score":32,"level":0},{"x":638,"y":454,"score":51,"level":0},{"x":664,"y":454,"score":30,"level":0},{"x":835,"y":454,"score":33,"level":0},{"x":840,"y":454,"score":33,"level":0},{"x":883,"y":454,"score":34,"level":0},{"x":1254,"y":454,"score":28,"level":0},{"x":1305,"y":454,"score":43,"level":0},{"x":1338,"y":454,"score":36,"level":0},{"x":571,"y":455,"score":27,"level":0},{"x":795,"y":455,"score":41,"level":0},{"x":951,"y":455,"score":28,"level":0},{"x":972,"y":455,"score":61,"level":0},{"x":1187,"y":455,"score":45,"level":0},{"x":1224,"y":455,"score":53,"level":0},{"x":1357,"y":455,"score":28,"level":0},{"x":774,"y":456,"score":39,"level":0},{"x":781,"y":456,"score":40,"level":0},{"x":810,"y":456,"score":35,"level":0},{"x":847,"y":456,"score":35,"level":0},{"x":1247,"y":456,"score":30,"level":0},{"x":1362,"y":456,"score":31,"level":0},{"x":1413,"y":456,"score":26,"level":0},{"x":438,"y":457,"score":26,"level":0},{"x":718,"y":457,"score":26,"level":0},{"x":1294,"y":457,"score":46,"level":0},{"x":1410,"y":457,"score":36,"level":0},{"x":1426,"y":457,"score":34,"level":0},{"x":1441,"y":457,"score":31,"level":0},{"x":641,"y":458,"score":39,"level":0},{"x":746,"y":458,"score":27,"level":0},{"x":869,"y":458,"score":64,"level":0},{"x":1045,"y":458,"score":27,"level":0},{"x":1076,"y":458,"score":53,"level":0},{"x":1146,"y":458,"score":41,"level":0},{"x":1151,"y":458,"score":51,"level":0},{"x":1391,"y":458,"score":26,"level":0},{"x":1402,"y":458,"score":46,"level":0},{"x":1489,"y":458,"score":26,"level":0},{"x":924,"y":459,"score":37,"level":0},{"x":1220,"y":459,"score":45,"level":0},{"x":1366,"y":459,"score":39,"level":0},{"x":1049,"y":460,"score":34,"level":0},{"x":1118,"y":460,"score":29,"level":0},{"x":1131,"y":460,"score":84,"level":0},{"x":1186,"y":460,"score":29,"level":0},{"x":1188,"y":460,"score":46,"level":0},{"x":1364,"y":460,"score":29,"level":0},{"x":464,"y":461,"score":26,"level":0},{"x":517,"y":461,"score":99,"level":0},{"x":932,"y":461,"score":53,"level":0},{"x":986,"y":461,"score":50,"level":0},{"x":1026,"y":461,"score":27,"level":0},{"x":1031,"y":461,"score":32,"level":0},{"x":1051,"y":461,"score":49,"level":0},{"x":1057,"y":461,"score":43,"level":0},{"x":1201,"y":461,"score":29,"level":0},{"x":1236,"y":461,"score":35,"level":0},{"x":1379,"y":461,"score":39,"level":0},{"x":1385,"y":461,"score":53,"level":0},{"x":1395,"y":461,"score":38,"level":0},{"x":377,"y":462,"score":40,"level":0},{"x":397,"y":462,"score":28,"level":0},{"x":719,"y":462,"score":66,"level":0},{"x":775,"y":462,"score":40,"level":0},{"x":1038,"y":462,"score":46,"level":0},{"x":474,"y":463,"score":45,"level":0},{"x":477,"y":463,"score":38,"level":0},{"x":575,"y":463,"score":42,"level":0},{"x":599,"y":463,"score":33,"level":0},{"x":917,"y":463,"score":30,"level":0},{"x":934,"y":463,"score":46,"level":0},{"x":1160,"y":463,"score":36,"level":0},{"x":1477,"y":463,"score":26,"level":0},{"x":635,"y":464,"score":45,"level":0},{"x":637,"y":464,"score":33,"level":0},{"x":649,"y":464,"score":79,"level":0},{"x":1001,"y":464,"score":31,"level":0},{"x":1014,"y":464,"score":32,"level":0},{"x":591,"y":465,"score":29,"level":0},{"x":941,"y":465,"score":33,"level":0},{"x":1218,"y":465,"score":32,"level":0},{"x":1336,"y":465,"score":28,"level":0},{"x":1406,"y":465,"score":62,"level":0},{"x":1435,"y":465,"score":42,"level":0},{"x":444,"y":466,"score":46,"level":0},{"x":1285,"y":466,"score":31,"level":0},{"x":1309,"y":466,"score":31,"level":0},{"x":1341,"y":466,"score":30,"level":0},{"x":409,"y":467,"score":29,"level":0},{"x":514,"y":467,"score":51,"level":0},{"x":791,"y":467,"score":29,"level":0},{"x":1056,"y":467,"score":94,"level":0},{"x":1086,"y":467,"score":26,"level":0},{"x":1400,"y":467,"score":27,"level":0},{"x":1471,"y":467,"score":38,"level":0},{"x":707,"y":468,"score":30,"level":0},{"x":765,"y":468,"score":27,"level":0},{"x":803,"y":468,"score":31,"level":0},{"x":1247,"y":468,"score":38,"level":0},{"x":1374,"y":468,"score":40,"level":0},{"x":570,"y":469,"score":44,"level":0},{"x":591,"y":469,"score":26,"level":0},{"x":601,"y":469,"score":26,"level":0},{"x":977,"y":469,"score":28,"level":0},{"x":1040,"y":469,"score":72,"level":0},{"x":1122,"y":469,"score":34,"level":0},{"x":1132,"y":469,"score":50,"level":0},{"x":1153,"y":469,"score":30,"level":0},{"x":377,"y":470,"score":42,"level":0},{"x":910,"y":470,"score":30,"level":0},{"x":921,"y":470,"score":34,"level":0},{"x":1116,"y":470,"score":32,"level":0},{"x":1216,"y":470,"score":39,"level":0},{"x":1246,"y":470,"score":42,"level":0},{"x":1345,"y":470,"score":26,"level":0},{"x":405,"y":471,"score":28,"level":0},{"x":462,"y":471,"score":26,"level":0},{"x":512,"y":471,"score":34,"level":0},{"x":748,"y":471,"score":28,"level":0},{"x":979,"y":471,"score":48,"level":0},{"x":1019,"y":471,"score":36,"level":0},{"x":1265,"y":471,"score":29,"level":0},{"x":1312,"y":471,"score":38,"level":0},{"x":869,"y":472,"score":29,"level":0},{"x":973,"y":472,"score":71,"level":0},{"x":1078,"y":472,"score":28,"level":0},{"x":1434,"y":472,"score":33,"level":0},{"x":522,"y":473,"score":66,"level":0},{"x":587,"y":473,"score":35,"level":0},{"x":703,"y":473,"score":27,"level":0},{"x":815,"y":473,"score":28,"level":0},{"x":1040,"y":473,"score":27,"level":0},{"x":1287,"y":473,"score":27,"level":0},{"x":1300,"y":473,"score":39,"level":0},{"x":1367,"y":473,"score":28,"level":0},{"x":882,"y":474,"score":33,"level":0},{"x":1123,"y":474,"score":54,"level":0},{"x":1220,"y":474,"score":54,"level":0},{"x":1374,"y":474,"score":28,"level":0},{"x":786,"y":475,"score":31,"level":0},{"x":1154,"y":475,"score":51,"level":0},{"x":1208,"y":475,"score":26,"level":0},{"x":1345,"y":475,"score":40,"level":0},{"x":1379,"y":475,"score":51,"level":0},{"x":1386,"y":475,"score":35,"level":0},{"x":1388,"y":475,"score":43,"level":0},{"x":935,"y":476,"score":30,"level":0},{"x":976,"y":476,"score":78,"level":0},{"x":1040,"y":476,"score":54,"level":0},{"x":1439,"y":476,"score":27,"level":0},{"x":915,"y":477,"score":28,"level":0},{"x":1032,"y":477,"score":41,"level":0},{"x":1062,"y":477,"score":26,"level":0},{"x":1389,"y":477,"score":42,"level":0},{"x":605,"y":478,"score":32,"level":0},{"x":698,"y":478,"score":36,"level":0},{"x":846,"y":478,"score":44,"level":0},{"x":868,"y":478,"score":41,"level":0},{"x":1081,"y":478,"score":30,"level":0},{"x":1244,"y":478,"score":29,"level":0},{"x":1286,"y":478,"score":34,"level":0},{"x":1434,"y":478,"score":34,"level":0},{"x":484,"y":479,"score":28,"level":0},{"x":703,"y":479,"score":48,"level":0},{"x":967,"y":479,"score":29,"level":0},{"x":995,"y":479,"score":40,"level":0},{"x":1228,"y":479,"score":28,"level":0},{"x":1369,"y":479,"score":77,"level":0},{"x":617,"y":480,"score":27,"level":0},{"x":750,"y":480,"score":26,"level":0},{"x":858,"y":480,"score":45,"level":0},{"x":1024,"y":480,"score":39,"level":0},{"x":1115,"y":480,"score":34,"level":0},{"x":1359,"y":480,"score":26,"level":0},{"x":1436,"y":480,"score":48,"level":0},{"x":1455,"y":480,"score":49,"level":0},{"x":377,"y":481,"score":44,"level":0},{"x":484,"y":481,"score":32,"level":0},{"x":541,"y":481,"score":26,"level":0},{"x":876,"y":481,"score":28,"level":0},{"x":992,"y":481,"score":74,"level":0},{"x":1061,"y":481,"score":60,"level":0},{"x":1121,"y":481,"score":45,"level":0},{"x":1158,"y":481,"score":34,"level":0},{"x":1268,"y":481,"score":40,"level":0},{"x":1295,"y":481,"score":46,"level":0},{"x":1307,"y":481,"score":48,"level":0},{"x":1378,"y":481,"score":55,"level":0},{"x":1428,"y":481,"score":33,"level":0},{"x":391,"y":482,"score":32,"level":0},{"x":713,"y":482,"score":36,"level":0},{"x":865,"y":482,"score":34,"level":0},{"x":1289,"y":482,"score":28,"level":0},{"x":1315,"y":482,"score":51,"level":0},{"x":1126,"y":483,"score":26,"level":0},{"x":1233,"y":483,"score":29,"level":0},{"x":1449,"y":483,"score":41,"level":0},{"x":1451,"y":483,"score":28,"level":0},{"x":438,"y":484,"score":105,"level":0},{"x":832,"y":484,"score":35,"level":0},{"x":1244,"y":484,"score":27,"level":0},{"x":1433,"y":484,"score":37,"level":0},{"x":1465,"y":484,"score":28,"level":0},{"x":783,"y":485,"score":53,"level":0},{"x":974,"y":485,"score":34,"level":0},{"x":1024,"y":485,"score":34,"level":0},{"x":1236,"y":485,"score":46,"level":0},{"x":1253,"y":485,"score":73,"level":0},{"x":1255,"y":485,"score":63,"level":0},{"x":1327,"y":485,"score":41,"level":0},{"x":1380,"y":485,"score":29,"level":0},{"x":867,"y":486,"score":43,"level":0},{"x":976,"y":486,"score":28,"level":0},{"x":990,"y":486,"score":32,"level":0},{"x":997,"y":486,"score":28,"level":0},{"x":1266,"y":486,"score":27,"level":0},{"x":522,"y":487,"score":43,"level":0},{"x":665,"y":487,"score":28,"level":0},{"x":699,"y":487,"score":53,"level":0},{"x":741,"y":487,"score":28,"level":0},{"x":763,"y":487,"score":34,"level":0},{"x":1058,"y":487,"score":31,"level":0},{"x":1210,"y":487,"score":29,"level":0},{"x":1352,"y":487,"score":33,"level":0},{"x":1375,"y":487,"score":34,"level":0},{"x":420,"y":488,"score":28,"level":0},{"x":783,"y":488,"score":27,"level":0},{"x":867,"y":488,"score":48,"level":0},{"x":1040,"y":488,"score":37,"level":0},{"x":1047,"y":488,"score":26,"level":0},{"x":1138,"y":488,"score":26,"level":0},{"x":1242,"y":488,"score":35,"level":0},{"x":415,"y":489,"score":35,"level":0},{"x":587,"y":489,"score":78,"level":0},{"x":970,"y":489,"score":30,"level":0},{"x":1069,"y":489,"score":26,"level":0},{"x":1283,"y":489,"score":40,"level":0},{"x":607,"y":490,"score":58,"level":0},{"x":864,"y":490,"score":50,"level":0},{"x":1184,"y":490,"score":27,"level":0},{"x":1444,"y":490,"score":44,"level":0},{"x":1484,"y":490,"score":38,"level":0},{"x":588,"y":491,"score":38,"level":0},{"x":780,"y":491,"score":29,"level":0},{"x":786,"y":491,"score":32,"level":0},{"x":1171,"y":491,"score":57,"level":0},{"x":1319,"y":491,"score":30,"level":0},{"x":405,"y":492,"score":27,"level":0},{"x":1111,"y":492,"score":36,"level":0},{"x":1140,"y":492,"score":50,"level":0},{"x":1267,"y":492,"score":50,"level":0},{"x":1300,"y":492,"score":31,"level":0},{"x":1420,"y":492,"score":31,"level":0},{"x":510,"y":493,"score":38,"level":0},{"x":526,"y":493,"score":26,"level":0},{"x":610,"y":493,"score":32,"level":0},{"x":1067,"y":493,"score":32,"level":0},{"x":1292,"y":493,"score":33,"level":0},{"x":676,"y":494,"score":56,"level":0},{"x":753,"y":494,"score":34,"level":0},{"x":781,"y":494,"score":55,"level":0},{"x":846,"y":494,"score":60,"level":0},{"x":1077,"y":494,"score":40,"level":0},{"x":1117,"y":494,"score":37,"level":0},{"x":1119,"y":494,"score":30,"level":0},{"x":1229,"y":494,"score":36,"level":0},{"x":1238,"y":494,"score":29,"level":0},{"x":713,"y":495,"score":28,"level":0},{"x":982,"y":495,"score":28,"level":0},{"x":1131,"y":495,"score":27,"level":0},{"x":1250,"y":495,"score":45,"level":0},{"x":1272,"y":495,"score":27,"level":0},{"x":480,"y":496,"score":31,"level":0},{"x":1166,"y":496,"score":26,"level":0},{"x":1170,"y":496,"score":28,"level":0},{"x":1199,"y":496,"score":35,"level":0},{"x":1208,"y":496,"score":30,"level":0},{"x":1356,"y":496,"score":29,"level":0},{"x":1474,"y":496,"score":35,"level":0},{"x":759,"y":497,"score":32,"level":0},{"x":862,"y":497,"score":45,"level":0},{"x":870,"y":497,"score":26,"level":0},{"x":1055,"y":497,"score":32,"level":0},{"x":1201,"y":497,"score":33,"level":0},{"x":1367,"y":497,"score":39,"level":0},{"x":1428,"y":497,"score":36,"level":0},{"x":377,"y":498,"score":30,"level":0},{"x":448,"y":498,"score":39,"level":0},{"x":600,"y":498,"score":77,"level":0},{"x":612,"y":498,"score":26,"level":0},{"x":873,"y":498,"score":41,"level":0},{"x":961,"y":498,"score":37,"level":0},{"x":992,"y":498,"score":37,"level":0},{"x":1070,"y":498,"score":54,"level":0},{"x":1175,"y":498,"score":32,"level":0},{"x":1435,"y":498,"score":32,"level":0},{"x":506,"y":499,"score":104,"level":0},{"x":923,"y":499,"score":40,"level":0},{"x":1015,"y":499,"score":26,"level":0},{"x":1148,"y":499,"score":32,"level":0},{"x":1256,"y":499,"score":55,"level":0},{"x":1323,"y":499,"score":32,"level":0},{"x":1408,"y":499,"score":32,"level":0},{"x":1469,"y":499,"score":27,"level":0},{"x":707,"y":500,"score":33,"level":0},{"x":843,"y":500,"score":33,"level":0},{"x":868,"y":500,"score":29,"level":0},{"x":1051,"y":500,"score":26,"level":0},{"x":1084,"y":500,"score":39,"level":0},{"x":1125,"y":500,"score":29,"level":0},{"x":1143,"y":500,"score":29,"level":0},{"x":1284,"y":500,"score":28,"level":0},{"x":1362,"y":500,"score":53,"level":0},{"x":503,"y":501,"score":26,"level":0},{"x":697,"y":501,"score":38,"level":0},{"x":712,"y":501,"score":26,"level":0},{"x":1098,"y":501,"score":27,"level":0},{"x":1251,"y":501,"score":27,"level":0},{"x":1359,"y":501,"score":29,"level":0},{"x":1472,"y":501,"score":38,"level":0},{"x":1482,"y":501,"score":46,"level":0},{"x":470,"y":502,"score":44,"level":0},{"x":581,"y":502,"score":34,"level":0},{"x":606,"y":502,"score":45,"level":0},{"x":679,"y":502,"score":67,"level":0},{"x":866,"y":502,"score":48,"level":0},{"x":881,"y":502,"score":26,"level":0},{"x":1015,"y":502,"score":30,"level":0},{"x":1035,"y":502,"score":34,"level":0},{"x":1177,"y":502,"score":27,"level":0},{"x":1210,"y":502,"score":27,"level":0},{"x":1272,"y":502,"score":27,"level":0},{"x":527,"y":503,"score":48,"level":0},{"x":588,"y":503,"score":26,"level":0},{"x":751,"y":503,"score":32,"level":0},{"x":1321,"y":503,"score":26,"level":0},{"x":646,"y":504,"score":38,"level":0},{"x":680,"y":504,"score":74,"level":0},{"x":907,"y":504,"score":28,"level":0},{"x":1005,"y":504,"score":60,"level":0},{"x":1146,"y":504,"score":33,"level":0},{"x":1152,"y":504,"score":35,"level":0},{"x":1467,"y":504,"score":37,"level":0},{"x":1488,"y":504,"score":26,"level":0},{"x":579,"y":505,"score":34,"level":0},{"x":759,"y":505,"score":60,"level":0},{"x":893,"y":505,"score":30,"level":0},{"x":1022,"y":505,"score":38,"level":0},{"x":1242,"y":505,"score":47,"level":0},{"x":1280,"y":505,"score":32,"level":0},{"x":1352,"y":505,"score":31,"level":0},{"x":404,"y":506,"score":34,"level":0},{"x":489,"y":506,"score":36,"level":0},{"x":498,"y":506,"score":47,"level":0},{"x":588,"y":506,"score":26,"level":0},{"x":695,"y":506,"score":62,"level":0},{"x":928,"y":506,"score":54,"level":0},{"x":1354,"y":506,"score":40,"level":0},{"x":1490,"y":506,"score":28,"level":0},{"x":413,"y":507,"score":26,"level":0},{"x":511,"y":507,"score":30,"level":0},{"x":603,"y":507,"score":46,"level":0},{"x":829,"y":507,"score":27,"level":0},{"x":831,"y":507,"score":32,"level":0},{"x":916,"y":507,"score":37,"level":0},{"x":1119,"y":507,"score":32,"level":0},{"x":1125,"y":507,"score":35,"level":0},{"x":463,"y":508,"score":26,"level":0},{"x":569,"y":508,"score":28,"level":0},{"x":666,"y":508,"score":37,"level":0},{"x":711,"y":508,"score":36,"level":0},{"x":1006,"y":508,"score":31,"level":0},{"x":1032,"y":508,"score":32,"level":0},{"x":1143,"y":508,"score":28,"level":0},{"x":1238,"y":508,"score":26,"level":0},{"x":1454,"y":508,"score":31,"level":0},{"x":1462,"y":508,"score":35,"level":0},{"x":902,"y":509,"score":26,"level":0},{"x":947,"y":509,"score":26,"level":0},{"x":1087,"y":509,"score":39,"level":0},{"x":1252,"y":509,"score":28,"level":0},{"x":480,"y":510,"score":50,"level":0},{"x":615,"y":510,"score":30,"level":0},{"x":749,"y":510,"score":41,"level":0},{"x":804,"y":510,"score":30,"level":0},{"x":1149,"y":510,"score":75,"level":0},{"x":1388,"y":510,"score":37,"level":0},{"x":389,"y":511,"score":31,"level":0},{"x":452,"y":511,"score":52,"level":0},{"x":705,"y":511,"score":34,"level":0},{"x":845,"y":511,"score":30,"level":0},{"x":985,"y":511,"score":30,"level":0},{"x":1166,"y":511,"score":104,"level":0},{"x":1173,"y":511,"score":28,"level":0},{"x":1345,"y":511,"score":39,"level":0},{"x":468,"y":512,"score":91,"level":0},{"x":491,"y":512,"score":31,"level":0},{"x":837,"y":512,"score":37,"level":0},{"x":991,"y":512,"score":26,"level":0},{"x":1013,"y":512,"score":58,"level":0},{"x":1073,"y":512,"score":52,"level":0},{"x":1282,"y":512,"score":47,"level":0},{"x":1296,"y":512,"score":28,"level":0},{"x":500,"y":513,"score":55,"level":0},{"x":926,"y":513,"score":47,"level":0},{"x":1480,"y":513,"score":87,"level":0},{"x":504,"y":514,"score":34,"level":0},{"x":567,"y":514,"score":26,"level":0},{"x":825,"y":514,"score":30,"level":0},{"x":846,"y":514,"score":52,"level":0},{"x":864,"y":514,"score":35,"level":0},{"x":954,"y":514,"score":26,"level":0},{"x":1075,"y":514,"score":59,"level":0},{"x":1083,"y":514,"score":35,"level":0},{"x":1171,"y":514,"score":33,"level":0},{"x":1362,"y":514,"score":33,"level":0},{"x":1405,"y":514,"score":36,"level":0},{"x":1429,"y":514,"score":32,"level":0},{"x":576,"y":515,"score":36,"level":0},{"x":661,"y":515,"score":29,"level":0},{"x":1169,"y":515,"score":40,"level":0},{"x":1193,"y":515,"score":53,"level":0},{"x":1195,"y":515,"score":48,"level":0},{"x":1201,"y":515,"score":32,"level":0},{"x":1271,"y":515,"score":36,"level":0},{"x":1364,"y":515,"score":30,"level":0},{"x":1434,"y":515,"score":27,"level":0},{"x":1480,"y":515,"score":56,"level":0},{"x":484,"y":516,"score":45,"level":0},{"x":586,"y":516,"score":35,"level":0},{"x":591,"y":516,"score":26,"level":0},{"x":679,"y":516,"score":34,"level":0},{"x":701,"y":516,"score":34,"level":0},{"x":754,"y":516,"score":46,"level":0},{"x":784,"y":516,"score":26,"level":0},{"x":789,"y":516,"score":34,"level":0},{"x":863,"y":516,"score":28,"level":0},{"x":1059,"y":516,"score":54,"level":0},{"x":1113,"y":516,"score":34,"level":0},{"x":1382,"y":516,"score":27,"level":0},{"x":1472,"y":516,"score":35,"level":0},{"x":668,"y":517,"score":27,"level":0},{"x":939,"y":517,"score":29,"level":0},{"x":1273,"y":517,"score":32,"level":0},{"x":1291,"y":517,"score":64,"level":0},{"x":1399,"y":517,"score":27,"level":0},{"x":539,"y":518,"score":26,"level":0},{"x":684,"y":518,"score":72,"level":0},{"x":987,"y":518,"score":32,"level":0},{"x":1147,"y":518,"score":32,"level":0},{"x":1153,"y":518,"score":107,"level":0},{"x":1338,"y":518,"score":28,"level":0},{"x":1378,"y":518,"score":70,"level":0},{"x":1439,"y":518,"score":27,"level":0},{"x":444,"y":519,"score":28,"level":0},{"x":585,"y":519,"score":38,"level":0},{"x":780,"y":519,"score":36,"level":0},{"x":1081,"y":519,"score":36,"level":0},{"x":1158,"y":519,"score":105,"level":0},{"x":1164,"y":519,"score":79,"level":0},{"x":1174,"y":519,"score":29,"level":0},{"x":1255,"y":519,"score":42,"level":0},{"x":1268,"y":519,"score":54,"level":0},{"x":1306,"y":519,"score":47,"level":0},{"x":773,"y":520,"score":26,"level":0},{"x":922,"y":520,"score":40,"level":0},{"x":1108,"y":520,"score":36,"level":0},{"x":1219,"y":520,"score":39,"level":0},{"x":1312,"y":520,"score":32,"level":0},{"x":1362,"y":520,"score":27,"level":0},{"x":414,"y":521,"score":29,"level":0},{"x":467,"y":521,"score":53,"level":0},{"x":595,"y":521,"score":26,"level":0},{"x":819,"y":521,"score":35,"level":0},{"x":1092,"y":521,"score":65,"level":0},{"x":1192,"y":521,"score":33,"level":0},{"x":1199,"y":521,"score":117,"level":0},{"x":1314,"y":521,"score":54,"level":0},{"x":487,"y":522,"score":42,"level":0},{"x":843,"y":522,"score":47,"level":0},{"x":1102,"y":522,"score":30,"level":0},{"x":1120,"y":522,"score":40,"level":0},{"x":1244,"y":522,"score":35,"level":0},{"x":419,"y":523,"score":38,"level":0},{"x":570,"y":523,"score":29,"level":0},{"x":666,"y":523,"score":28,"level":0},{"x":704,"y":523,"score":32,"level":0},{"x":706,"y":523,"score":31,"level":0},{"x":820,"y":523,"score":37,"level":0},{"x":1206,"y":523,"score":34,"level":0},{"x":1249,"y":523,"score":36,"level":0},{"x":1272,"y":523,"score":47,"level":0},{"x":1297,"y":523,"score":30,"level":0},{"x":1370,"y":523,"score":39,"level":0},{"x":1439,"y":523,"score":28,"level":0},{"x":478,"y":524,"score":53,"level":0},{"x":588,"y":524,"score":47,"level":0},{"x":1144,"y":524,"score":50,"level":0},{"x":1215,"y":524,"score":29,"level":0},{"x":586,"y":525,"score":50,"level":0},{"x":1025,"y":525,"score":27,"level":0},{"x":1100,"y":525,"score":47,"level":0},{"x":1281,"y":525,"score":27,"level":0},{"x":1382,"y":525,"score":27,"level":0},{"x":1412,"y":525,"score":41,"level":0},{"x":1418,"y":525,"score":26,"level":0},{"x":1488,"y":525,"score":32,"level":0},{"x":600,"y":526,"score":42,"level":0},{"x":612,"y":526,"score":28,"level":0},{"x":683,"y":526,"score":81,"level":0},{"x":924,"y":526,"score":34,"level":0},{"x":985,"y":526,"score":28,"level":0},{"x":1171,"y":526,"score":38,"level":0},{"x":1173,"y":526,"score":36,"level":0},{"x":1232,"y":526,"score":32,"level":0},{"x":377,"y":527,"score":67,"level":0},{"x":494,"y":527,"score":26,"level":0},{"x":859,"y":527,"score":34,"level":0},{"x":1017,"y":527,"score":32,"level":0},{"x":1063,"y":527,"score":31,"level":0},{"x":1277,"y":527,"score":71,"level":0},{"x":1292,"y":527,"score":30,"level":0},{"x":1312,"y":527,"score":28,"level":0},{"x":1475,"y":527,"score":26,"level":0},{"x":595,"y":528,"score":105,"level":0},{"x":825,"y":528,"score":32,"level":0},{"x":1136,"y":528,"score":46,"level":0},{"x":1310,"y":528,"score":27,"level":0},{"x":1346,"y":528,"score":30,"level":0},{"x":1378,"y":528,"score":29,"level":0},{"x":1383,"y":528,"score":33,"level":0},{"x":1408,"y":528,"score":56,"level":0},{"x":1451,"y":528,"score":26,"level":0},{"x":1456,"y":528,"score":35,"level":0},{"x":1481,"y":528,"score":47,"level":0},{"x":1490,"y":528,"score":29,"level":0},{"x":447,"y":529,"score":30,"level":0},{"x":677,"y":529,"score":64,"level":0},{"x":694,"y":529,"score":70,"level":0},{"x":950,"y":529,"score":27,"level":0},{"x":1016,"y":529,"score":72,"level":0},{"x":1105,"y":529,"score":41,"level":0},{"x":1144,"y":529,"score":38,"level":0},{"x":1287,"y":529,"score":45,"level":0},{"x":1301,"y":529,"score":38,"level":0},{"x":1312,"y":529,"score":28,"level":0},{"x":472,"y":530,"score":56,"level":0},{"x":1026,"y":530,"score":37,"level":0},{"x":1074,"y":530,"score":60,"level":0},{"x":1083,"y":530,"score":43,"level":0},{"x":1161,"y":530,"score":31,"level":0},{"x":1195,"y":530,"score":50,"level":0},{"x":1272,"y":530,"score":35,"level":0},{"x":382,"y":531,"score":30,"level":0},{"x":422,"y":531,"score":29,"level":0},{"x":686,"y":531,"score":32,"level":0},{"x":780,"y":531,"score":31,"level":0},{"x":861,"y":531,"score":36,"level":0},{"x":1085,"y":531,"score":34,"level":0},{"x":1184,"y":531,"score":35,"level":0},{"x":1420,"y":531,"score":28,"level":0},{"x":1422,"y":531,"score":28,"level":0},{"x":601,"y":532,"score":39,"level":0},{"x":1165,"y":532,"score":27,"level":0},{"x":860,"y":533,"score":34,"level":0},{"x":950,"y":533,"score":26,"level":0},{"x":1133,"y":533,"score":31,"level":0},{"x":1222,"y":533,"score":46,"level":0},{"x":1238,"y":533,"score":26,"level":0},{"x":1290,"y":533,"score":41,"level":0},{"x":1378,"y":533,"score":40,"level":0},{"x":1438,"y":533,"score":30,"level":0},{"x":543,"y":534,"score":30,"level":0},{"x":938,"y":534,"score":32,"level":0},{"x":1035,"y":534,"score":38,"level":0},{"x":1105,"y":534,"score":54,"level":0},{"x":1113,"y":534,"score":28,"level":0},{"x":1209,"y":534,"score":27,"level":0},{"x":462,"y":535,"score":26,"level":0},{"x":526,"y":535,"score":43,"level":0},{"x":573,"y":535,"score":27,"level":0},{"x":1056,"y":535,"score":39,"level":0},{"x":1094,"y":535,"score":31,"level":0},{"x":1474,"y":535,"score":26,"level":0},{"x":819,"y":536,"score":44,"level":0},{"x":869,"y":536,"score":28,"level":0},{"x":1013,"y":536,"score":39,"level":0},{"x":1018,"y":536,"score":27,"level":0},{"x":1285,"y":536,"score":87,"level":0},{"x":1366,"y":536,"score":40,"level":0},{"x":1479,"y":536,"score":30,"level":0},{"x":633,"y":537,"score":30,"level":0},{"x":803,"y":537,"score":31,"level":0},{"x":856,"y":537,"score":36,"level":0},{"x":897,"y":537,"score":28,"level":0},{"x":905,"y":537,"score":33,"level":0},{"x":996,"y":537,"score":30,"level":0},{"x":393,"y":538,"score":37,"level":0},{"x":463,"y":538,"score":28,"level":0},{"x":598,"y":538,"score":50,"level":0},{"x":665,"y":538,"score":37,"level":0},{"x":797,"y":538,"score":34,"level":0},{"x":903,"y":538,"score":29,"level":0},{"x":981,"y":538,"score":35,"level":0},{"x":1082,"y":538,"score":36,"level":0},{"x":1093,"y":538,"score":43,"level":0},{"x":1122,"y":538,"score":28,"level":0},{"x":1128,"y":538,"score":37,"level":0},{"x":1157,"y":538,"score":30,"level":0},{"x":1184,"y":538,"score":26,"level":0},{"x":1216,"y":538,"score":38,"level":0},{"x":1234,"y":538,"score":26,"level":0},{"x":1261,"y":538,"score":26,"level":0},{"x":1266,"y":538,"score":28,"level":0},{"x":1286,"y":538,"score":74,"level":0},{"x":511,"y":539,"score":28,"level":0},{"x":605,"y":539,"score":61,"level":0},{"x":769,"y":539,"score":26,"level":0},{"x":914,"y":539,"score":44,"level":0},{"x":1080,"y":539,"score":40,"level":0},{"x":1098,"y":539,"score":71,"level":0},{"x":1273,"y":539,"score":33,"level":0},{"x":529,"y":540,"score":48,"level":0},{"x":909,"y":540,"score":50,"level":0},{"x":810,"y":541,"score":48,"level":0},{"x":1199,"y":541,"score":44,"level":0},{"x":1228,"y":541,"score":29,"level":0},{"x":1304,"y":541,"score":90,"level":0},{"x":1329,"y":541,"score":26,"level":0},{"x":1367,"y":541,"score":30,"level":0},{"x":529,"y":542,"score":44,"level":0},{"x":768,"y":542,"score":39,"level":0},{"x":851,"y":542,"score":37,"level":0},{"x":1194,"y":542,"score":41,"level":0},{"x":439,"y":543,"score":30,"level":0},{"x":993,"y":543,"score":29,"level":0},{"x":1132,"y":543,"score":39,"level":0},{"x":1424,"y":543,"score":38,"level":0},{"x":460,"y":544,"score":29,"level":0},{"x":817,"y":544,"score":29,"level":0},{"x":859,"y":544,"score":28,"level":0},{"x":1025,"y":544,"score":37,"level":0},{"x":1076,"y":544,"score":28,"level":0},{"x":1218,"y":544,"score":29,"level":0},{"x":1272,"y":544,"score":34,"level":0},{"x":1357,"y":544,"score":29,"level":0},{"x":1479,"y":544,"score":33,"level":0},{"x":632,"y":545,"score":32,"level":0},{"x":746,"y":545,"score":58,"level":0},{"x":910,"y":545,"score":76,"level":0},{"x":994,"y":545,"score":33,"level":0},{"x":1000,"y":545,"score":34,"level":0},{"x":1287,"y":545,"score":32,"level":0},{"x":460,"y":546,"score":46,"level":0},{"x":604,"y":546,"score":48,"level":0},{"x":979,"y":546,"score":32,"level":0},{"x":1124,"y":546,"score":28,"level":0},{"x":1343,"y":546,"score":40,"level":0},{"x":1481,"y":546,"score":49,"level":0},{"x":746,"y":547,"score":57,"level":0},{"x":1091,"y":547,"score":29,"level":0},{"x":1177,"y":547,"score":30,"level":0},{"x":1179,"y":547,"score":39,"level":0},{"x":458,"y":548,"score":39,"level":0},{"x":524,"y":548,"score":47,"level":0},{"x":543,"y":548,"score":26,"level":0},{"x":600,"y":548,"score":31,"level":0},{"x":648,"y":548,"score":26,"level":0},{"x":806,"y":548,"score":26,"level":0},{"x":1161,"y":548,"score":32,"level":0},{"x":1281,"y":548,"score":44,"level":0},{"x":1284,"y":548,"score":38,"level":0},{"x":1419,"y":548,"score":107,"level":0},{"x":438,"y":549,"score":32,"level":0},{"x":706,"y":549,"score":28,"level":0},{"x":771,"y":549,"score":32,"level":0},{"x":847,"y":549,"score":44,"level":0},{"x":379,"y":550,"score":37,"level":0},{"x":400,"y":550,"score":26,"level":0},{"x":594,"y":550,"score":32,"level":0},{"x":619,"y":550,"score":40,"level":0},{"x":763,"y":550,"score":44,"level":0},{"x":998,"y":550,"score":36,"level":0},{"x":1137,"y":550,"score":26,"level":0},{"x":1380,"y":550,"score":28,"level":0},{"x":1414,"y":550,"score":39,"level":0},{"x":443,"y":551,"score":32,"level":0},{"x":607,"y":551,"score":50,"level":0},{"x":682,"y":551,"score":48,"level":0},{"x":929,"y":551,"score":68,"level":0},{"x":1346,"y":551,"score":65,"level":0},{"x":656,"y":552,"score":36,"level":0},{"x":750,"y":552,"score":26,"level":0},{"x":927,"y":552,"score":26,"level":0},{"x":992,"y":552,"score":27,"level":0},{"x":1030,"y":552,"score":39,"level":0},{"x":1087,"y":552,"score":31,"level":0},{"x":1484,"y":552,"score":28,"level":0},{"x":391,"y":553,"score":36,"level":0},{"x":461,"y":553,"score":45,"level":0},{"x":646,"y":553,"score":30,"level":0},{"x":670,"y":553,"score":26,"level":0},{"x":728,"y":553,"score":31,"level":0},{"x":775,"y":553,"score":26,"level":0},{"x":903,"y":553,"score":35,"level":0},{"x":1125,"y":553,"score":56,"level":0},{"x":1136,"y":553,"score":26,"level":0},{"x":1180,"y":553,"score":38,"level":0},{"x":1189,"y":553,"score":50,"level":0},{"x":1201,"y":553,"score":75,"level":0},{"x":1327,"y":553,"score":34,"level":0},{"x":1379,"y":553,"score":27,"level":0},{"x":1465,"y":553,"score":26,"level":0},{"x":605,"y":554,"score":56,"level":0},{"x":607,"y":554,"score":39,"level":0},{"x":613,"y":554,"score":28,"level":0},{"x":698,"y":554,"score":29,"level":0},{"x":807,"y":554,"score":30,"level":0},{"x":910,"y":554,"score":62,"level":0},{"x":957,"y":554,"score":32,"level":0},{"x":1086,"y":554,"score":31,"level":0},{"x":1186,"y":554,"score":28,"level":0},{"x":1224,"y":554,"score":27,"level":0},{"x":1288,"y":554,"score":62,"level":0},{"x":1347,"y":554,"score":77,"level":0},{"x":1355,"y":554,"score":26,"level":0},{"x":656,"y":555,"score":26,"level":0},{"x":853,"y":555,"score":36,"level":0},{"x":931,"y":555,"score":38,"level":0},{"x":1048,"y":555,"score":27,"level":0},{"x":1296,"y":555,"score":28,"level":0},{"x":1364,"y":555,"score":32,"level":0},{"x":817,"y":556,"score":39,"level":0},{"x":819,"y":556,"score":29,"level":0},{"x":1023,"y":556,"score":80,"level":0},{"x":1361,"y":556,"score":31,"level":0},{"x":1457,"y":556,"score":26,"level":0},{"x":609,"y":557,"score":53,"level":0},{"x":680,"y":557,"score":70,"level":0},{"x":715,"y":557,"score":58,"level":0},{"x":720,"y":557,"score":62,"level":0},{"x":824,"y":557,"score":38,"level":0},{"x":941,"y":557,"score":43,"level":0},{"x":1025,"y":557,"score":49,"level":0},{"x":1104,"y":557,"score":77,"level":0},{"x":1372,"y":557,"score":32,"level":0},{"x":625,"y":558,"score":55,"level":0},{"x":628,"y":558,"score":43,"level":0},{"x":744,"y":558,"score":49,"level":0},{"x":1091,"y":558,"score":26,"level":0},{"x":1261,"y":558,"score":29,"level":0},{"x":1266,"y":558,"score":28,"level":0},{"x":1304,"y":558,"score":39,"level":0},{"x":1469,"y":558,"score":42,"level":0},{"x":1472,"y":558,"score":78,"level":0},{"x":1481,"y":558,"score":85,"level":0},{"x":1489,"y":558,"score":59,"level":0},{"x":379,"y":559,"score":47,"level":0},{"x":637,"y":559,"score":49,"level":0},{"x":777,"y":559,"score":28,"level":0},{"x":1081,"y":559,"score":26,"level":0},{"x":1111,"y":559,"score":41,"level":0},{"x":1289,"y":559,"score":43,"level":0},{"x":1340,"y":559,"score":34,"level":0},{"x":1357,"y":559,"score":67,"level":0},{"x":1421,"y":559,"score":26,"level":0},{"x":653,"y":560,"score":35,"level":0},{"x":686,"y":560,"score":30,"level":0},{"x":994,"y":560,"score":44,"level":0},{"x":1153,"y":560,"score":26,"level":0},{"x":1349,"y":560,"score":39,"level":0},{"x":1452,"y":560,"score":32,"level":0},{"x":1473,"y":560,"score":30,"level":0},{"x":1481,"y":560,"score":77,"level":0},{"x":1487,"y":560,"score":26,"level":0},{"x":377,"y":561,"score":42,"level":0},{"x":762,"y":561,"score":54,"level":0},{"x":1022,"y":561,"score":30,"level":0},{"x":1034,"y":561,"score":35,"level":0},{"x":1191,"y":561,"score":26,"level":0},{"x":1196,"y":561,"score":36,"level":0},{"x":1226,"y":561,"score":32,"level":0},{"x":1233,"y":561,"score":26,"level":0},{"x":1429,"y":561,"score":68,"level":0},{"x":475,"y":562,"score":32,"level":0},{"x":632,"y":562,"score":90,"level":0},{"x":845,"y":562,"score":45,"level":0},{"x":898,"y":562,"score":41,"level":0},{"x":933,"y":562,"score":39,"level":0},{"x":971,"y":562,"score":28,"level":0},{"x":1009,"y":562,"score":36,"level":0},{"x":1237,"y":562,"score":39,"level":0},{"x":1311,"y":562,"score":30,"level":0},{"x":1407,"y":562,"score":32,"level":0},{"x":436,"y":563,"score":32,"level":0},{"x":455,"y":563,"score":39,"level":0},{"x":770,"y":563,"score":36,"level":0},{"x":821,"y":563,"score":34,"level":0},{"x":907,"y":563,"score":40,"level":0},{"x":941,"y":563,"score":31,"level":0},{"x":1042,"y":563,"score":27,"level":0},{"x":1143,"y":563,"score":34,"level":0},{"x":1146,"y":563,"score":31,"level":0},{"x":1233,"y":563,"score":34,"level":0},{"x":1244,"y":563,"score":28,"level":0},{"x":1299,"y":563,"score":50,"level":0},{"x":1360,"y":563,"score":33,"level":0},{"x":537,"y":564,"score":31,"level":0},{"x":784,"y":564,"score":34,"level":0},{"x":1032,"y":564,"score":27,"level":0},{"x":1068,"y":564,"score":31,"level":0},{"x":1260,"y":564,"score":27,"level":0},{"x":1345,"y":564,"score":28,"level":0},{"x":1431,"y":564,"score":50,"level":0},{"x":1438,"y":564,"score":129,"level":0},{"x":499,"y":565,"score":26,"level":0},{"x":697,"y":565,"score":48,"level":0},{"x":729,"y":565,"score":34,"level":0},{"x":808,"y":565,"score":32,"level":0},{"x":845,"y":565,"score":34,"level":0},{"x":847,"y":565,"score":37,"level":0},{"x":994,"y":565,"score":29,"level":0},{"x":1105,"y":565,"score":26,"level":0},{"x":1132,"y":565,"score":49,"level":0},{"x":1185,"y":565,"score":32,"level":0},{"x":1205,"y":565,"score":29,"level":0},{"x":1289,"y":565,"score":26,"level":0},{"x":1299,"y":565,"score":30,"level":0},{"x":1331,"y":565,"score":34,"level":0},{"x":1404,"y":565,"score":34,"level":0},{"x":1452,"y":565,"score":58,"level":0},{"x":493,"y":566,"score":27,"level":0},{"x":628,"y":566,"score":50,"level":0},{"x":733,"y":566,"score":33,"level":0},{"x":1061,"y":566,"score":31,"level":0},{"x":1339,"y":566,"score":27,"level":0},{"x":1438,"y":566,"score":39,"level":0},{"x":1450,"y":566,"score":26,"level":0},{"x":392,"y":567,"score":34,"level":0},{"x":531,"y":567,"score":30,"level":0},{"x":607,"y":567,"score":76,"level":0},{"x":763,"y":567,"score":32,"level":0},{"x":952,"y":567,"score":34,"level":0},{"x":1000,"y":567,"score":36,"level":0},{"x":1002,"y":567,"score":36,"level":0},{"x":1021,"y":567,"score":30,"level":0},{"x":1346,"y":567,"score":30,"level":0},{"x":1395,"y":567,"score":30,"level":0},{"x":712,"y":568,"score":33,"level":0},{"x":809,"y":568,"score":27,"level":0},{"x":823,"y":568,"score":39,"level":0},{"x":1015,"y":568,"score":29,"level":0},{"x":1083,"y":568,"score":32,"level":0},{"x":1113,"y":568,"score":37,"level":0},{"x":1233,"y":568,"score":40,"level":0},{"x":1244,"y":568,"score":27,"level":0},{"x":1279,"y":568,"score":32,"level":0},{"x":1336,"y":568,"score":42,"level":0},{"x":380,"y":569,"score":63,"level":0},{"x":558,"y":569,"score":34,"level":0},{"x":563,"y":569,"score":28,"level":0},{"x":941,"y":569,"score":34,"level":0},{"x":1010,"y":569,"score":33,"level":0},{"x":1039,"y":569,"score":50,"level":0},{"x":1128,"y":569,"score":31,"level":0},{"x":1261,"y":569,"score":29,"level":0},{"x":1465,"y":569,"score":28,"level":0},{"x":647,"y":570,"score":30,"level":0},{"x":931,"y":570,"score":29,"level":0},{"x":1031,"y":570,"score":28,"level":0},{"x":1047,"y":570,"score":27,"level":0},{"x":1208,"y":570,"score":38,"level":0},{"x":1328,"y":570,"score":34,"level":0},{"x":1472,"y":570,"score":26,"level":0},{"x":428,"y":571,"score":42,"level":0},{"x":497,"y":571,"score":31,"level":0},{"x":682,"y":571,"score":42,"level":0},{"x":816,"y":571,"score":26,"level":0},{"x":850,"y":571,"score":26,"level":0},{"x":1055,"y":571,"score":26,"level":0},{"x":1097,"y":571,"score":26,"level":0},{"x":1110,"y":571,"score":46,"level":0},{"x":1214,"y":571,"score":29,"level":0},{"x":1348,"y":571,"score":48,"level":0},{"x":1419,"y":571,"score":29,"level":0},{"x":916,"y":572,"score":60,"level":0},{"x":1034,"y":572,"score":27,"level":0},{"x":1047,"y":572,"score":29,"level":0},{"x":1182,"y":572,"score":32,"level":0},{"x":1229,"y":572,"score":56,"level":0},{"x":714,"y":573,"score":26,"level":0},{"x":822,"y":573,"score":30,"level":0},{"x":938,"y":573,"score":66,"level":0},{"x":1059,"y":573,"score":29,"level":0},{"x":1117,"y":573,"score":54,"level":0},{"x":1206,"y":573,"score":36,"level":0},{"x":1459,"y":573,"score":54,"level":0},{"x":1481,"y":573,"score":42,"level":0},{"x":387,"y":574,"score":26,"level":0},{"x":434,"y":574,"score":33,"level":0},{"x":731,"y":574,"score":35,"level":0},{"x":1303,"y":574,"score":40,"level":0},{"x":1437,"y":574,"score":88,"level":0},{"x":1486,"y":574,"score":30,"level":0},{"x":448,"y":575,"score":26,"level":0},{"x":516,"y":575,"score":35,"level":0},{"x":636,"y":575,"score":27,"level":0},{"x":738,"y":575,"score":38,"level":0},{"x":898,"y":575,"score":28,"level":0},{"x":908,"y":575,"score":41,"level":0},{"x":1027,"y":575,"score":34,"level":0},{"x":1351,"y":575,"score":64,"level":0},{"x":1377,"y":575,"score":29,"level":0},{"x":648,"y":576,"score":46,"level":0},{"x":1021,"y":576,"score":32,"level":0},{"x":1039,"y":576,"score":46,"level":0},{"x":1059,"y":576,"score":46,"level":0},{"x":1127,"y":576,"score":36,"level":0},{"x":1149,"y":576,"score":57,"level":0},{"x":1256,"y":576,"score":26,"level":0},{"x":807,"y":577,"score":41,"level":0},{"x":844,"y":577,"score":55,"level":0},{"x":996,"y":577,"score":30,"level":0},{"x":1129,"y":577,"score":42,"level":0},{"x":1268,"y":577,"score":36,"level":0},{"x":384,"y":578,"score":61,"level":0},{"x":452,"y":578,"score":30,"level":0},{"x":960,"y":578,"score":26,"level":0},{"x":968,"y":578,"score":41,"level":0},{"x":981,"y":578,"score":27,"level":0},{"x":1045,"y":578,"score":44,"level":0},{"x":1080,"y":578,"score":36,"level":0},{"x":1136,"y":578,"score":33,"level":0},{"x":1285,"y":578,"score":36,"level":0},{"x":819,"y":579,"score":32,"level":0},{"x":824,"y":579,"score":36,"level":0},{"x":887,"y":579,"score":45,"level":0},{"x":1002,"y":579,"score":40,"level":0},{"x":1023,"y":579,"score":34,"level":0},{"x":1263,"y":579,"score":32,"level":0},{"x":1308,"y":579,"score":32,"level":0},{"x":453,"y":580,"score":37,"level":0},{"x":689,"y":580,"score":81,"level":0},{"x":892,"y":580,"score":31,"level":0},{"x":1096,"y":580,"score":30,"level":0},{"x":1187,"y":580,"score":26,"level":0},{"x":1244,"y":580,"score":32,"level":0},{"x":1290,"y":580,"score":69,"level":0},{"x":718,"y":581,"score":34,"level":0},{"x":824,"y":581,"score":37,"level":0},{"x":918,"y":581,"score":29,"level":0},{"x":936,"y":581,"score":30,"level":0},{"x":957,"y":581,"score":26,"level":0},{"x":1066,"y":581,"score":28,"level":0},{"x":1085,"y":581,"score":34,"level":0},{"x":1117,"y":581,"score":56,"level":0},{"x":379,"y":582,"score":47,"level":0},{"x":595,"y":582,"score":44,"level":0},{"x":601,"y":582,"score":30,"level":0},{"x":801,"y":582,"score":31,"level":0},{"x":907,"y":582,"score":35,"level":0},{"x":941,"y":582,"score":54,"level":0},{"x":1013,"y":582,"score":34,"level":0},{"x":1022,"y":582,"score":40,"level":0},{"x":1126,"y":582,"score":42,"level":0},{"x":1215,"y":582,"score":33,"level":0},{"x":1372,"y":582,"score":62,"level":0},{"x":1415,"y":582,"score":32,"level":0},{"x":1451,"y":582,"score":28,"level":0},{"x":1472,"y":582,"score":26,"level":0},{"x":510,"y":583,"score":41,"level":0},{"x":567,"y":583,"score":27,"level":0},{"x":573,"y":583,"score":39,"level":0},{"x":819,"y":583,"score":28,"level":0},{"x":1242,"y":583,"score":39,"level":0},{"x":1303,"y":583,"score":34,"level":0},{"x":1435,"y":583,"score":42,"level":0},{"x":384,"y":584,"score":39,"level":0},{"x":872,"y":584,"score":34,"level":0},{"x":875,"y":584,"score":43,"level":0},{"x":881,"y":584,"score":29,"level":0},{"x":919,"y":584,"score":32,"level":0},{"x":1215,"y":584,"score":49,"level":0},{"x":1221,"y":584,"score":45,"level":0},{"x":1236,"y":584,"score":31,"level":0},{"x":1239,"y":584,"score":47,"level":0},{"x":1286,"y":584,"score":68,"level":0},{"x":504,"y":585,"score":38,"level":0},{"x":810,"y":585,"score":32,"level":0},{"x":892,"y":585,"score":32,"level":0},{"x":1154,"y":585,"score":39,"level":0},{"x":1230,"y":585,"score":50,"level":0},{"x":421,"y":586,"score":52,"level":0},{"x":458,"y":586,"score":40,"level":0},{"x":482,"y":586,"score":26,"level":0},{"x":685,"y":586,"score":39,"level":0},{"x":951,"y":586,"score":28,"level":0},{"x":995,"y":586,"score":29,"level":0},{"x":1061,"y":586,"score":31,"level":0},{"x":1106,"y":586,"score":30,"level":0},{"x":1197,"y":586,"score":33,"level":0},{"x":1205,"y":586,"score":34,"level":0},{"x":1213,"y":586,"score":36,"level":0},{"x":1222,"y":586,"score":34,"level":0},{"x":1310,"y":586,"score":32,"level":0},{"x":1316,"y":586,"score":31,"level":0},{"x":418,"y":587,"score":38,"level":0},{"x":628,"y":587,"score":46,"level":0},{"x":722,"y":587,"score":30,"level":0},{"x":801,"y":587,"score":28,"level":0},{"x":821,"y":587,"score":56,"level":0},{"x":922,"y":587,"score":38,"level":0},{"x":1005,"y":587,"score":29,"level":0},{"x":1012,"y":587,"score":44,"level":0},{"x":1104,"y":587,"score":39,"level":0},{"x":1135,"y":587,"score":43,"level":0},{"x":1169,"y":587,"score":29,"level":0},{"x":377,"y":588,"score":50,"level":0},{"x":751,"y":588,"score":27,"level":0},{"x":929,"y":588,"score":41,"level":0},{"x":948,"y":588,"score":42,"level":0},{"x":1070,"y":588,"score":36,"level":0},{"x":1237,"y":588,"score":38,"level":0},{"x":1242,"y":588,"score":39,"level":0},{"x":1428,"y":588,"score":70,"level":0},{"x":1472,"y":588,"score":28,"level":0},{"x":415,"y":589,"score":31,"level":0},{"x":561,"y":589,"score":39,"level":0},{"x":841,"y":589,"score":30,"level":0},{"x":1061,"y":589,"score":36,"level":0},{"x":1219,"y":589,"score":46,"level":0},{"x":1278,"y":589,"score":27,"level":0},{"x":512,"y":590,"score":32,"level":0},{"x":553,"y":590,"score":28,"level":0},{"x":692,"y":590,"score":26,"level":0},{"x":826,"y":590,"score":33,"level":0},{"x":859,"y":590,"score":40,"level":0},{"x":968,"y":590,"score":29,"level":0},{"x":1036,"y":590,"score":40,"level":0},{"x":1209,"y":590,"score":34,"level":0},{"x":1371,"y":590,"score":48,"level":0},{"x":412,"y":591,"score":36,"level":0},{"x":426,"y":591,"score":27,"level":0},{"x":484,"y":591,"score":26,"level":0},{"x":614,"y":591,"score":95,"level":0},{"x":1055,"y":591,"score":51,"level":0},{"x":1079,"y":591,"score":30,"level":0},{"x":1377,"y":591,"score":35,"level":0},{"x":571,"y":592,"score":28,"level":0},{"x":576,"y":592,"score":27,"level":0},{"x":648,"y":592,"score":36,"level":0},{"x":709,"y":592,"score":30,"level":0},{"x":729,"y":592,"score":41,"level":0},{"x":892,"y":592,"score":27,"level":0},{"x":999,"y":592,"score":40,"level":0},{"x":1050,"y":592,"score":38,"level":0},{"x":1120,"y":592,"score":26,"level":0},{"x":1160,"y":592,"score":35,"level":0},{"x":1245,"y":592,"score":49,"level":0},{"x":1353,"y":592,"score":34,"level":0},{"x":1427,"y":592,"score":47,"level":0},{"x":587,"y":593,"score":29,"level":0},{"x":718,"y":593,"score":30,"level":0},{"x":858,"y":593,"score":35,"level":0},{"x":917,"y":593,"score":40,"level":0},{"x":1079,"y":593,"score":38,"level":0},{"x":1134,"y":593,"score":76,"level":0},{"x":1153,"y":593,"score":70,"level":0},{"x":1198,"y":593,"score":26,"level":0},{"x":1221,"y":593,"score":51,"level":0},{"x":1318,"y":593,"score":36,"level":0},{"x":1331,"y":593,"score":28,"level":0},{"x":443,"y":594,"score":27,"level":0},{"x":474,"y":594,"score":45,"level":0},{"x":632,"y":594,"score":32,"level":0},{"x":728,"y":594,"score":30,"level":0},{"x":844,"y":594,"score":62,"level":0},{"x":930,"y":594,"score":28,"level":0},{"x":1022,"y":594,"score":29,"level":0},{"x":1042,"y":594,"score":28,"level":0},{"x":1126,"y":594,"score":54,"level":0},{"x":1156,"y":594,"score":37,"level":0},{"x":1175,"y":594,"score":27,"level":0},{"x":1203,"y":594,"score":42,"level":0},{"x":1278,"y":594,"score":26,"level":0},{"x":1431,"y":594,"score":57,"level":0},{"x":428,"y":595,"score":36,"level":0},{"x":823,"y":595,"score":32,"level":0},{"x":870,"y":595,"score":36,"level":0},{"x":1108,"y":595,"score":32,"level":0},{"x":1221,"y":595,"score":59,"level":0},{"x":1268,"y":595,"score":26,"level":0},{"x":1299,"y":595,"score":29,"level":0},{"x":1318,"y":595,"score":38,"level":0},{"x":1451,"y":595,"score":38,"level":0},{"x":458,"y":596,"score":52,"level":0},{"x":463,"y":596,"score":52,"level":0},{"x":662,"y":596,"score":28,"level":0},{"x":733,"y":596,"score":58,"level":0},{"x":777,"y":596,"score":30,"level":0},{"x":786,"y":596,"score":41,"level":0},{"x":828,"y":596,"score":47,"level":0},{"x":849,"y":596,"score":79,"level":0},{"x":903,"y":596,"score":49,"level":0},{"x":975,"y":596,"score":28,"level":0},{"x":1029,"y":596,"score":31,"level":0},{"x":1218,"y":596,"score":46,"level":0},{"x":1228,"y":596,"score":45,"level":0},{"x":1310,"y":596,"score":37,"level":0},{"x":1361,"y":596,"score":30,"level":0},{"x":515,"y":597,"score":35,"level":0},{"x":651,"y":597,"score":27,"level":0},{"x":943,"y":597,"score":61,"level":0},{"x":965,"y":597,"score":35,"level":0},{"x":1115,"y":597,"score":28,"level":0},{"x":1117,"y":597,"score":41,"level":0},{"x":1243,"y":597,"score":48,"level":0},{"x":377,"y":598,"score":36,"level":0},{"x":934,"y":598,"score":41,"level":0},{"x":1008,"y":598,"score":28,"level":0},{"x":1069,"y":598,"score":30,"level":0},{"x":1169,"y":598,"score":27,"level":0},{"x":1253,"y":598,"score":26,"level":0},{"x":407,"y":599,"score":30,"level":0},{"x":557,"y":599,"score":48,"level":0},{"x":669,"y":599,"score":26,"level":0},{"x":792,"y":599,"score":31,"level":0},{"x":947,"y":599,"score":26,"level":0},{"x":999,"y":599,"score":40,"level":0},{"x":1050,"y":599,"score":49,"level":0},{"x":1296,"y":599,"score":37,"level":0},{"x":377,"y":600,"score":33,"level":0},{"x":413,"y":600,"score":47,"level":0},{"x":681,"y":600,"score":37,"level":0},{"x":696,"y":600,"score":56,"level":0},{"x":715,"y":600,"score":50,"level":0},{"x":782,"y":600,"score":31,"level":0},{"x":864,"y":600,"score":28,"level":0},{"x":897,"y":600,"score":40,"level":0},{"x":1027,"y":600,"score":28,"level":0},{"x":1132,"y":600,"score":35,"level":0},{"x":1159,"y":600,"score":26,"level":0},{"x":1242,"y":600,"score":45,"level":0},{"x":571,"y":601,"score":38,"level":0},{"x":573,"y":601,"score":30,"level":0},{"x":1069,"y":601,"score":29,"level":0},{"x":1206,"y":601,"score":66,"level":0},{"x":1223,"y":601,"score":54,"level":0},{"x":1296,"y":601,"score":44,"level":0},{"x":1431,"y":601,"score":36,"level":0},{"x":1450,"y":601,"score":35,"level":0},{"x":498,"y":602,"score":35,"level":0},{"x":582,"y":602,"score":38,"level":0},{"x":705,"y":602,"score":42,"level":0},{"x":786,"y":602,"score":26,"level":0},{"x":851,"y":602,"score":54,"level":0},{"x":887,"y":602,"score":27,"level":0},{"x":904,"y":602,"score":27,"level":0},{"x":1037,"y":602,"score":37,"level":0},{"x":1047,"y":602,"score":37,"level":0},{"x":1061,"y":602,"score":37,"level":0},{"x":1086,"y":602,"score":26,"level":0},{"x":1117,"y":602,"score":27,"level":0},{"x":1456,"y":602,"score":71,"level":0},{"x":615,"y":603,"score":56,"level":0},{"x":641,"y":603,"score":38,"level":0},{"x":826,"y":603,"score":90,"level":0},{"x":972,"y":603,"score":31,"level":0},{"x":1010,"y":603,"score":28,"level":0},{"x":1073,"y":603,"score":31,"level":0},{"x":1125,"y":603,"score":33,"level":0},{"x":1228,"y":603,"score":34,"level":0},{"x":1318,"y":603,"score":26,"level":0},{"x":377,"y":604,"score":38,"level":0},{"x":582,"y":604,"score":43,"level":0},{"x":609,"y":604,"score":42,"level":0},{"x":621,"y":604,"score":40,"level":0},{"x":858,"y":604,"score":42,"level":0},{"x":887,"y":604,"score":26,"level":0},{"x":944,"y":604,"score":34,"level":0},{"x":946,"y":604,"score":36,"level":0},{"x":986,"y":604,"score":31,"level":0},{"x":1016,"y":604,"score":32,"level":0},{"x":1066,"y":604,"score":65,"level":0},{"x":1207,"y":604,"score":47,"level":0},{"x":559,"y":605,"score":28,"level":0},{"x":569,"y":605,"score":37,"level":0},{"x":641,"y":605,"score":32,"level":0},{"x":716,"y":605,"score":72,"level":0},{"x":752,"y":605,"score":37,"level":0},{"x":757,"y":605,"score":30,"level":0},{"x":893,"y":605,"score":26,"level":0},{"x":895,"y":605,"score":26,"level":0},{"x":1042,"y":605,"score":39,"level":0},{"x":1111,"y":605,"score":39,"level":0},{"x":1213,"y":605,"score":26,"level":0},{"x":1276,"y":605,"score":27,"level":0},{"x":1365,"y":605,"score":34,"level":0},{"x":1384,"y":605,"score":43,"level":0},{"x":847,"y":606,"score":67,"level":0},{"x":940,"y":606,"score":46,"level":0},{"x":965,"y":606,"score":34,"level":0},{"x":1068,"y":606,"score":87,"level":0},{"x":1247,"y":606,"score":71,"level":0},{"x":1281,"y":606,"score":33,"level":0},{"x":428,"y":607,"score":27,"level":0},{"x":439,"y":607,"score":29,"level":0},{"x":505,"y":607,"score":26,"level":0},{"x":559,"y":607,"score":26,"level":0},{"x":576,"y":607,"score":55,"level":0},{"x":745,"y":607,"score":29,"level":0},{"x":951,"y":607,"score":30,"level":0},{"x":957,"y":607,"score":54,"level":0},{"x":1131,"y":607,"score":32,"level":0},{"x":1176,"y":607,"score":35,"level":0},{"x":1293,"y":607,"score":54,"level":0},{"x":541,"y":608,"score":55,"level":0},{"x":557,"y":608,"score":32,"level":0},{"x":920,"y":608,"score":40,"level":0},{"x":960,"y":608,"score":56,"level":0},{"x":1160,"y":608,"score":58,"level":0},{"x":1222,"y":608,"score":28,"level":0},{"x":460,"y":609,"score":31,"level":0},{"x":561,"y":609,"score":31,"level":0},{"x":678,"y":609,"score":26,"level":0},{"x":751,"y":609,"score":28,"level":0},{"x":812,"y":609,"score":32,"level":0},{"x":844,"y":609,"score":30,"level":0},{"x":858,"y":609,"score":44,"level":0},{"x":905,"y":609,"score":30,"level":0},{"x":907,"y":609,"score":39,"level":0},{"x":972,"y":609,"score":53,"level":0},{"x":1045,"y":609,"score":37,"level":0},{"x":1072,"y":609,"score":78,"level":0},{"x":1094,"y":609,"score":27,"level":0},{"x":1339,"y":609,"score":35,"level":0},{"x":1380,"y":609,"score":49,"level":0},{"x":600,"y":610,"score":81,"level":0},{"x":810,"y":610,"score":34,"level":0},{"x":928,"y":610,"score":32,"level":0},{"x":980,"y":610,"score":30,"level":0},{"x":1091,"y":610,"score":29,"level":0},{"x":1138,"y":610,"score":43,"level":0},{"x":1166,"y":610,"score":54,"level":0},{"x":1330,"y":610,"score":27,"level":0},{"x":1388,"y":610,"score":33,"level":0},{"x":391,"y":611,"score":28,"level":0},{"x":566,"y":611,"score":33,"level":0},{"x":732,"y":611,"score":26,"level":0},{"x":934,"y":611,"score":27,"level":0},{"x":948,"y":611,"score":32,"level":0},{"x":1028,"y":611,"score":68,"level":0},{"x":1034,"y":611,"score":39,"level":0},{"x":1066,"y":611,"score":50,"level":0},{"x":1353,"y":611,"score":32,"level":0},{"x":614,"y":612,"score":27,"level":0},{"x":648,"y":612,"score":30,"level":0},{"x":671,"y":612,"score":32,"level":0},{"x":801,"y":612,"score":28,"level":0},{"x":804,"y":612,"score":32,"level":0},{"x":944,"y":612,"score":37,"level":0},{"x":1090,"y":612,"score":38,"level":0},{"x":1320,"y":612,"score":46,"level":0},{"x":1369,"y":612,"score":64,"level":0},{"x":1458,"y":612,"score":26,"level":0},{"x":566,"y":613,"score":36,"level":0},{"x":690,"y":613,"score":63,"level":0},{"x":738,"y":613,"score":31,"level":0},{"x":773,"y":613,"score":33,"level":0},{"x":775,"y":613,"score":32,"level":0},{"x":812,"y":613,"score":33,"level":0},{"x":914,"y":613,"score":33,"level":0},{"x":389,"y":614,"score":33,"level":0},{"x":420,"y":614,"score":32,"level":0},{"x":507,"y":614,"score":26,"level":0},{"x":817,"y":614,"score":55,"level":0},{"x":919,"y":614,"score":27,"level":0},{"x":1027,"y":614,"score":29,"level":0},{"x":1050,"y":614,"score":41,"level":0},{"x":1052,"y":614,"score":27,"level":0},{"x":1214,"y":614,"score":34,"level":0},{"x":1241,"y":614,"score":79,"level":0},{"x":1339,"y":614,"score":28,"level":0},{"x":1416,"y":614,"score":26,"level":0},{"x":532,"y":615,"score":26,"level":0},{"x":579,"y":615,"score":26,"level":0},{"x":705,"y":615,"score":61,"level":0},{"x":712,"y":615,"score":65,"level":0},{"x":907,"y":615,"score":42,"level":0},{"x":1032,"y":615,"score":46,"level":0},{"x":1292,"y":615,"score":34,"level":0},{"x":1294,"y":615,"score":32,"level":0},{"x":1384,"y":615,"score":28,"level":0},{"x":1477,"y":615,"score":28,"level":0},{"x":435,"y":616,"score":28,"level":0},{"x":638,"y":616,"score":33,"level":0},{"x":916,"y":616,"score":40,"level":0},{"x":1151,"y":616,"score":38,"level":0},{"x":1164,"y":616,"score":56,"level":0},{"x":1215,"y":616,"score":26,"level":0},{"x":1287,"y":616,"score":26,"level":0},{"x":566,"y":617,"score":49,"level":0},{"x":824,"y":617,"score":50,"level":0},{"x":968,"y":617,"score":38,"level":0},{"x":1004,"y":617,"score":38,"level":0},{"x":1013,"y":617,"score":28,"level":0},{"x":1019,"y":617,"score":28,"level":0},{"x":1039,"y":617,"score":31,"level":0},{"x":1170,"y":617,"score":72,"level":0},{"x":1177,"y":617,"score":48,"level":0},{"x":1396,"y":617,"score":31,"level":0},{"x":1476,"y":617,"score":32,"level":0},{"x":539,"y":618,"score":27,"level":0},{"x":587,"y":618,"score":59,"level":0},{"x":620,"y":618,"score":35,"level":0},{"x":756,"y":618,"score":56,"level":0},{"x":808,"y":618,"score":27,"level":0},{"x":937,"y":618,"score":37,"level":0},{"x":943,"y":618,"score":34,"level":0},{"x":999,"y":618,"score":37,"level":0},{"x":1079,"y":618,"score":50,"level":0},{"x":1421,"y":618,"score":32,"level":0},{"x":598,"y":619,"score":42,"level":0},{"x":607,"y":619,"score":94,"level":0},{"x":735,"y":619,"score":37,"level":0},{"x":931,"y":619,"score":36,"level":0},{"x":958,"y":619,"score":27,"level":0},{"x":1022,"y":619,"score":44,"level":0},{"x":1071,"y":619,"score":53,"level":0},{"x":1152,"y":619,"score":30,"level":0},{"x":1169,"y":619,"score":102,"level":0},{"x":600,"y":620,"score":62,"level":0},{"x":823,"y":620,"score":46,"level":0},{"x":968,"y":620,"score":31,"level":0},{"x":1085,"y":620,"score":48,"level":0},{"x":1236,"y":620,"score":38,"level":0},{"x":1241,"y":620,"score":38,"level":0},{"x":1277,"y":620,"score":40,"level":0},{"x":1449,"y":620,"score":38,"level":0},{"x":475,"y":621,"score":28,"level":0},{"x":570,"y":621,"score":34,"level":0},{"x":582,"y":621,"score":34,"level":0},{"x":638,"y":621,"score":31,"level":0},{"x":767,"y":621,"score":40,"level":0},{"x":840,"y":621,"score":44,"level":0},{"x":886,"y":621,"score":44,"level":0},{"x":1147,"y":621,"score":86,"level":0},{"x":1221,"y":621,"score":27,"level":0},{"x":1289,"y":621,"score":28,"level":0},{"x":1387,"y":621,"score":47,"level":0},{"x":437,"y":622,"score":28,"level":0},{"x":644,"y":622,"score":33,"level":0},{"x":720,"y":622,"score":33,"level":0},{"x":811,"y":622,"score":28,"level":0},{"x":851,"y":622,"score":42,"level":0},{"x":980,"y":622,"score":40,"level":0},{"x":1044,"y":622,"score":30,"level":0},{"x":1297,"y":622,"score":37,"level":0},{"x":1372,"y":622,"score":29,"level":0},{"x":387,"y":623,"score":44,"level":0},{"x":393,"y":623,"score":42,"level":0},{"x":480,"y":623,"score":46,"level":0},{"x":542,"y":623,"score":34,"level":0},{"x":567,"y":623,"score":80,"level":0},{"x":601,"y":623,"score":48,"level":0},{"x":604,"y":623,"score":69,"level":0},{"x":610,"y":623,"score":59,"level":0},{"x":652,"y":623,"score":28,"level":0},{"x":829,"y":623,"score":79,"level":0},{"x":891,"y":623,"score":53,"level":0},{"x":944,"y":623,"score":33,"level":0},{"x":1004,"y":623,"score":26,"level":0},{"x":1209,"y":623,"score":38,"level":0},{"x":1270,"y":623,"score":44,"level":0},{"x":1350,"y":623,"score":29,"level":0},{"x":1366,"y":623,"score":35,"level":0},{"x":1387,"y":623,"score":47,"level":0},{"x":1401,"y":623,"score":36,"level":0},{"x":1475,"y":623,"score":31,"level":0},{"x":443,"y":624,"score":37,"level":0},{"x":619,"y":624,"score":48,"level":0},{"x":814,"y":624,"score":31,"level":0},{"x":980,"y":624,"score":28,"level":0},{"x":999,"y":624,"score":26,"level":0},{"x":1035,"y":624,"score":39,"level":0},{"x":1252,"y":624,"score":39,"level":0},{"x":1416,"y":624,"score":42,"level":0},{"x":476,"y":625,"score":29,"level":0},{"x":545,"y":625,"score":34,"level":0},{"x":591,"y":625,"score":29,"level":0},{"x":604,"y":625,"score":78,"level":0},{"x":614,"y":625,"score":40,"level":0},{"x":803,"y":625,"score":41,"level":0},{"x":1099,"y":625,"score":26,"level":0},{"x":1117,"y":625,"score":38,"level":0},{"x":1179,"y":625,"score":35,"level":0},{"x":1183,"y":625,"score":34,"level":0},{"x":1191,"y":625,"score":31,"level":0},{"x":1284,"y":625,"score":26,"level":0},{"x":1452,"y":625,"score":48,"level":0},{"x":572,"y":626,"score":38,"level":0},{"x":924,"y":626,"score":26,"level":0},{"x":955,"y":626,"score":78,"level":0},{"x":1082,"y":626,"score":26,"level":0},{"x":1123,"y":626,"score":28,"level":0},{"x":1176,"y":626,"score":50,"level":0},{"x":1289,"y":626,"score":28,"level":0},{"x":1446,"y":626,"score":31,"level":0},{"x":452,"y":627,"score":27,"level":0},{"x":481,"y":627,"score":38,"level":0},{"x":483,"y":627,"score":41,"level":0},{"x":500,"y":627,"score":32,"level":0},{"x":570,"y":627,"score":40,"level":0},{"x":723,"y":627,"score":66,"level":0},{"x":746,"y":627,"score":27,"level":0},{"x":1074,"y":627,"score":30,"level":0},{"x":1138,"y":627,"score":29,"level":0},{"x":1153,"y":627,"score":27,"level":0},{"x":504,"y":628,"score":27,"level":0},{"x":838,"y":628,"score":71,"level":0},{"x":843,"y":628,"score":41,"level":0},{"x":1059,"y":628,"score":31,"level":0},{"x":1148,"y":628,"score":30,"level":0},{"x":1189,"y":628,"score":47,"level":0},{"x":1242,"y":628,"score":37,"level":0},{"x":1312,"y":628,"score":28,"level":0},{"x":1342,"y":628,"score":32,"level":0},{"x":1436,"y":628,"score":29,"level":0},{"x":482,"y":629,"score":33,"level":0},{"x":534,"y":629,"score":27,"level":0},{"x":681,"y":629,"score":37,"level":0},{"x":703,"y":629,"score":44,"level":0},{"x":880,"y":629,"score":73,"level":0},{"x":901,"y":629,"score":31,"level":0},{"x":1015,"y":629,"score":26,"level":0},{"x":1062,"y":629,"score":32,"level":0},{"x":1093,"y":629,"score":39,"level":0},{"x":1251,"y":629,"score":79,"level":0},{"x":1330,"y":629,"score":31,"level":0},{"x":1336,"y":629,"score":34,"level":0},{"x":1355,"y":629,"score":29,"level":0},{"x":514,"y":630,"score":32,"level":0},{"x":771,"y":630,"score":28,"level":0},{"x":855,"y":630,"score":38,"level":0},{"x":1039,"y":630,"score":38,"level":0},{"x":1179,"y":630,"score":45,"level":0},{"x":1181,"y":630,"score":26,"level":0},{"x":420,"y":631,"score":34,"level":0},{"x":469,"y":631,"score":43,"level":0},{"x":681,"y":631,"score":34,"level":0},{"x":831,"y":631,"score":36,"level":0},{"x":833,"y":631,"score":58,"level":0},{"x":953,"y":631,"score":30,"level":0},{"x":959,"y":631,"score":35,"level":0},{"x":1090,"y":631,"score":42,"level":0},{"x":1187,"y":631,"score":59,"level":0},{"x":1261,"y":631,"score":101,"level":0},{"x":1386,"y":631,"score":35,"level":0},{"x":1398,"y":631,"score":58,"level":0},{"x":1434,"y":631,"score":42,"level":0},{"x":449,"y":632,"score":31,"level":0},{"x":467,"y":632,"score":27,"level":0},{"x":573,"y":632,"score":36,"level":0},{"x":576,"y":632,"score":31,"level":0},{"x":735,"y":632,"score":30,"level":0},{"x":815,"y":632,"score":38,"level":0},{"x":819,"y":632,"score":40,"level":0},{"x":1127,"y":632,"score":26,"level":0},{"x":1132,"y":632,"score":26,"level":0},{"x":1292,"y":632,"score":28,"level":0},{"x":1403,"y":632,"score":59,"level":0},{"x":1477,"y":632,"score":71,"level":0},{"x":1487,"y":632,"score":27,"level":0},{"x":835,"y":633,"score":83,"level":0},{"x":968,"y":633,"score":38,"level":0},{"x":1215,"y":633,"score":27,"level":0},{"x":1275,"y":633,"score":72,"level":0},{"x":1300,"y":633,"score":26,"level":0},{"x":1332,"y":633,"score":39,"level":0},{"x":1400,"y":633,"score":27,"level":0},{"x":1405,"y":633,"score":84,"level":0},{"x":1418,"y":633,"score":51,"level":0},{"x":1452,"y":633,"score":26,"level":0},{"x":407,"y":634,"score":30,"level":0},{"x":637,"y":634,"score":28,"level":0},{"x":698,"y":634,"score":28,"level":0},{"x":710,"y":634,"score":71,"level":0},{"x":841,"y":634,"score":84,"level":0},{"x":847,"y":634,"score":64,"level":0},{"x":1150,"y":634,"score":42,"level":0},{"x":1357,"y":634,"score":35,"level":0},{"x":1410,"y":634,"score":40,"level":0},{"x":472,"y":635,"score":40,"level":0},{"x":532,"y":635,"score":35,"level":0},{"x":602,"y":635,"score":53,"level":0},{"x":619,"y":635,"score":43,"level":0},{"x":671,"y":635,"score":34,"level":0},{"x":862,"y":635,"score":41,"level":0},{"x":991,"y":635,"score":42,"level":0},{"x":996,"y":635,"score":27,"level":0},{"x":1024,"y":635,"score":28,"level":0},{"x":1030,"y":635,"score":49,"level":0},{"x":1111,"y":635,"score":26,"level":0},{"x":1185,"y":635,"score":30,"level":0},{"x":1270,"y":635,"score":36,"level":0},{"x":1289,"y":635,"score":33,"level":0},{"x":1365,"y":635,"score":30,"level":0},{"x":1487,"y":635,"score":44,"level":0},{"x":377,"y":636,"score":64,"level":0},{"x":492,"y":636,"score":26,"level":0},{"x":730,"y":636,"score":26,"level":0},{"x":766,"y":636,"score":27,"level":0},{"x":771,"y":636,"score":52,"level":0},{"x":849,"y":636,"score":28,"level":0},{"x":896,"y":636,"score":26,"level":0},{"x":924,"y":636,"score":30,"level":0},{"x":951,"y":636,"score":36,"level":0},{"x":1005,"y":636,"score":28,"level":0},{"x":1035,"y":636,"score":36,"level":0},{"x":1177,"y":636,"score":56,"level":0},{"x":1238,"y":636,"score":49,"level":0},{"x":1261,"y":636,"score":90,"level":0},{"x":1389,"y":636,"score":34,"level":0},{"x":582,"y":637,"score":26,"level":0},{"x":715,"y":637,"score":31,"level":0},{"x":819,"y":637,"score":34,"level":0},{"x":832,"y":637,"score":32,"level":0},{"x":894,"y":637,"score":26,"level":0},{"x":920,"y":637,"score":30,"level":0},{"x":1010,"y":637,"score":28,"level":0},{"x":1414,"y":637,"score":35,"level":0},{"x":1430,"y":637,"score":95,"level":0},{"x":449,"y":638,"score":66,"level":0},{"x":813,"y":638,"score":30,"level":0},{"x":830,"y":638,"score":52,"level":0},{"x":860,"y":638,"score":62,"level":0},{"x":863,"y":638,"score":56,"level":0},{"x":1016,"y":638,"score":39,"level":0},{"x":1081,"y":638,"score":27,"level":0},{"x":1267,"y":638,"score":54,"level":0},{"x":1365,"y":638,"score":28,"level":0},{"x":1458,"y":638,"score":30,"level":0},{"x":1462,"y":638,"score":75,"level":0},{"x":540,"y":639,"score":48,"level":0},{"x":1101,"y":639,"score":28,"level":0},{"x":1255,"y":639,"score":42,"level":0},{"x":1269,"y":639,"score":43,"level":0},{"x":1346,"y":639,"score":62,"level":0},{"x":1464,"y":639,"score":85,"level":0},{"x":1481,"y":639,"score":95,"level":0},{"x":387,"y":640,"score":33,"level":0},{"x":553,"y":640,"score":29,"level":0},{"x":617,"y":640,"score":31,"level":0},{"x":635,"y":640,"score":28,"level":0},{"x":651,"y":640,"score":38,"level":0},{"x":714,"y":640,"score":37,"level":0},{"x":747,"y":640,"score":26,"level":0},{"x":807,"y":640,"score":26,"level":0},{"x":1099,"y":640,"score":36,"level":0},{"x":1271,"y":640,"score":27,"level":0},{"x":1399,"y":640,"score":28,"level":0},{"x":1466,"y":640,"score":108,"level":0},{"x":1472,"y":640,"score":28,"level":0},{"x":410,"y":641,"score":28,"level":0},{"x":412,"y":641,"score":26,"level":0},{"x":532,"y":641,"score":49,"level":0},{"x":545,"y":641,"score":34,"level":0},{"x":738,"y":641,"score":43,"level":0},{"x":802,"y":641,"score":26,"level":0},{"x":872,"y":641,"score":30,"level":0},{"x":949,"y":641,"score":30,"level":0},{"x":1025,"y":641,"score":41,"level":0},{"x":1034,"y":641,"score":39,"level":0},{"x":1077,"y":641,"score":37,"level":0},{"x":1428,"y":641,"score":43,"level":0},{"x":435,"y":642,"score":46,"level":0},{"x":617,"y":642,"score":39,"level":0},{"x":634,"y":642,"score":31,"level":0},{"x":769,"y":642,"score":29,"level":0},{"x":797,"y":642,"score":40,"level":0},{"x":939,"y":642,"score":26,"level":0},{"x":968,"y":642,"score":35,"level":0},{"x":1005,"y":642,"score":30,"level":0},{"x":1098,"y":642,"score":35,"level":0},{"x":1254,"y":642,"score":26,"level":0},{"x":1282,"y":642,"score":33,"level":0},{"x":1336,"y":642,"score":26,"level":0},{"x":1363,"y":642,"score":42,"level":0},{"x":630,"y":643,"score":30,"level":0},{"x":716,"y":643,"score":42,"level":0},{"x":762,"y":643,"score":47,"level":0},{"x":843,"y":643,"score":26,"level":0},{"x":886,"y":643,"score":50,"level":0},{"x":1284,"y":643,"score":38,"level":0},{"x":1302,"y":643,"score":186,"level":0},{"x":1321,"y":643,"score":43,"level":0},{"x":1332,"y":643,"score":65,"level":0},{"x":496,"y":644,"score":32,"level":0},{"x":600,"y":644,"score":49,"level":0},{"x":645,"y":644,"score":27,"level":0},{"x":841,"y":644,"score":32,"level":0},{"x":848,"y":644,"score":67,"level":0},{"x":866,"y":644,"score":51,"level":0},{"x":930,"y":644,"score":42,"level":0},{"x":996,"y":644,"score":28,"level":0},{"x":1091,"y":644,"score":32,"level":0},{"x":1121,"y":644,"score":30,"level":0},{"x":1129,"y":644,"score":38,"level":0},{"x":1279,"y":644,"score":71,"level":0},{"x":1346,"y":644,"score":40,"level":0},{"x":1368,"y":644,"score":30,"level":0},{"x":447,"y":645,"score":42,"level":0},{"x":528,"y":645,"score":26,"level":0},{"x":696,"y":645,"score":42,"level":0},{"x":762,"y":645,"score":48,"level":0},{"x":821,"y":645,"score":27,"level":0},{"x":895,"y":645,"score":29,"level":0},{"x":1150,"y":645,"score":26,"level":0},{"x":1207,"y":645,"score":30,"level":0},{"x":1448,"y":645,"score":32,"level":0},{"x":463,"y":646,"score":42,"level":0},{"x":626,"y":646,"score":28,"level":0},{"x":658,"y":646,"score":29,"level":0},{"x":1028,"y":646,"score":54,"level":0},{"x":1108,"y":646,"score":36,"level":0},{"x":1119,"y":646,"score":27,"level":0},{"x":1360,"y":646,"score":34,"level":0},{"x":1440,"y":646,"score":28,"level":0},{"x":417,"y":647,"score":34,"level":0},{"x":600,"y":647,"score":48,"level":0},{"x":785,"y":647,"score":33,"level":0},{"x":880,"y":647,"score":38,"level":0},{"x":1069,"y":647,"score":48,"level":0},{"x":1175,"y":647,"score":66,"level":0},{"x":1238,"y":647,"score":40,"level":0},{"x":680,"y":648,"score":30,"level":0},{"x":711,"y":648,"score":39,"level":0},{"x":870,"y":648,"score":69,"level":0},{"x":924,"y":648,"score":26,"level":0},{"x":1152,"y":648,"score":56,"level":0},{"x":1250,"y":648,"score":31,"level":0},{"x":1262,"y":648,"score":30,"level":0},{"x":1341,"y":648,"score":38,"level":0},{"x":377,"y":649,"score":26,"level":0},{"x":619,"y":649,"score":68,"level":0},{"x":691,"y":649,"score":44,"level":0},{"x":732,"y":649,"score":31,"level":0},{"x":919,"y":649,"score":31,"level":0},{"x":1296,"y":649,"score":31,"level":0},{"x":403,"y":650,"score":36,"level":0},{"x":449,"y":650,"score":104,"level":0},{"x":668,"y":650,"score":40,"level":0},{"x":811,"y":650,"score":27,"level":0},{"x":881,"y":650,"score":46,"level":0},{"x":938,"y":650,"score":41,"level":0},{"x":1015,"y":650,"score":62,"level":0},{"x":1033,"y":650,"score":32,"level":0},{"x":1332,"y":650,"score":35,"level":0},{"x":475,"y":651,"score":42,"level":0},{"x":539,"y":651,"score":58,"level":0},{"x":676,"y":651,"score":36,"level":0},{"x":1035,"y":651,"score":45,"level":0},{"x":1080,"y":651,"score":38,"level":0},{"x":1086,"y":651,"score":62,"level":0},{"x":1284,"y":651,"score":27,"level":0},{"x":1392,"y":651,"score":34,"level":0},{"x":1405,"y":651,"score":50,"level":0},{"x":377,"y":652,"score":34,"level":0},{"x":470,"y":652,"score":30,"level":0},{"x":481,"y":652,"score":33,"level":0},{"x":507,"y":652,"score":49,"level":0},{"x":560,"y":652,"score":28,"level":0},{"x":636,"y":652,"score":31,"level":0},{"x":737,"y":652,"score":47,"level":0},{"x":793,"y":652,"score":26,"level":0},{"x":948,"y":652,"score":61,"level":0},{"x":977,"y":652,"score":37,"level":0},{"x":1204,"y":652,"score":28,"level":0},{"x":1319,"y":652,"score":32,"level":0},{"x":1440,"y":652,"score":32,"level":0},{"x":1445,"y":652,"score":33,"level":0},{"x":514,"y":653,"score":30,"level":0},{"x":674,"y":653,"score":27,"level":0},{"x":909,"y":653,"score":35,"level":0},{"x":967,"y":653,"score":37,"level":0},{"x":1141,"y":653,"score":31,"level":0},{"x":1235,"y":653,"score":55,"level":0},{"x":1286,"y":653,"score":34,"level":0},{"x":1331,"y":653,"score":26,"level":0},{"x":1490,"y":653,"score":96,"level":0},{"x":459,"y":654,"score":64,"level":0},{"x":821,"y":654,"score":53,"level":0},{"x":828,"y":654,"score":36,"level":0},{"x":890,"y":654,"score":30,"level":0},{"x":1006,"y":654,"score":42,"level":0},{"x":1222,"y":654,"score":38,"level":0},{"x":1440,"y":654,"score":29,"level":0},{"x":377,"y":655,"score":29,"level":0},{"x":552,"y":655,"score":29,"level":0},{"x":597,"y":655,"score":38,"level":0},{"x":737,"y":655,"score":40,"level":0},{"x":769,"y":655,"score":46,"level":0},{"x":826,"y":655,"score":49,"level":0},{"x":1104,"y":655,"score":52,"level":0},{"x":1243,"y":655,"score":49,"level":0},{"x":1253,"y":655,"score":34,"level":0},{"x":1393,"y":655,"score":31,"level":0},{"x":411,"y":656,"score":47,"level":0},{"x":511,"y":656,"score":31,"level":0},{"x":572,"y":656,"score":28,"level":0},{"x":589,"y":656,"score":30,"level":0},{"x":771,"y":656,"score":33,"level":0},{"x":960,"y":656,"score":48,"level":0},{"x":994,"y":656,"score":33,"level":0},{"x":1056,"y":656,"score":50,"level":0},{"x":1061,"y":656,"score":27,"level":0},{"x":1076,"y":656,"score":39,"level":0},{"x":1116,"y":656,"score":34,"level":0},{"x":1192,"y":656,"score":31,"level":0},{"x":1305,"y":656,"score":35,"level":0},{"x":430,"y":657,"score":26,"level":0},{"x":490,"y":657,"score":33,"level":0},{"x":807,"y":657,"score":34,"level":0},{"x":1093,"y":657,"score":99,"level":0},{"x":1153,"y":657,"score":50,"level":0},{"x":1204,"y":657,"score":38,"level":0},{"x":1267,"y":657,"score":89,"level":0},{"x":1346,"y":657,"score":38,"level":0},{"x":421,"y":658,"score":29,"level":0},{"x":443,"y":658,"score":30,"level":0},{"x":603,"y":658,"score":60,"level":0},{"x":619,"y":658,"score":46,"level":0},{"x":780,"y":658,"score":28,"level":0},{"x":818,"y":658,"score":47,"level":0},{"x":934,"y":658,"score":37,"level":0},{"x":941,"y":658,"score":37,"level":0},{"x":962,"y":658,"score":49,"level":0},{"x":1026,"y":658,"score":62,"level":0},{"x":1102,"y":658,"score":82,"level":0},{"x":1340,"y":658,"score":32,"level":0},{"x":1389,"y":658,"score":80,"level":0},{"x":1431,"y":658,"score":35,"level":0},{"x":1436,"y":658,"score":39,"level":0},{"x":1468,"y":658,"score":32,"level":0},{"x":474,"y":659,"score":32,"level":0},{"x":640,"y":659,"score":28,"level":0},{"x":677,"y":659,"score":47,"level":0},{"x":685,"y":659,"score":31,"level":0},{"x":868,"y":659,"score":60,"level":0},{"x":1015,"y":659,"score":54,"level":0},{"x":1075,"y":659,"score":34,"level":0},{"x":1212,"y":659,"score":28,"level":0},{"x":1222,"y":659,"score":28,"level":0},{"x":1357,"y":659,"score":28,"level":0},{"x":462,"y":660,"score":28,"level":0},{"x":489,"y":660,"score":30,"level":0},{"x":687,"y":660,"score":40,"level":0},{"x":870,"y":660,"score":42,"level":0},{"x":977,"y":660,"score":27,"level":0},{"x":1048,"y":660,"score":45,"level":0},{"x":1255,"y":660,"score":33,"level":0},{"x":1467,"y":660,"score":64,"level":0},{"x":767,"y":661,"score":31,"level":0},{"x":783,"y":661,"score":26,"level":0},{"x":915,"y":661,"score":28,"level":0},{"x":979,"y":661,"score":31,"level":0},{"x":1182,"y":661,"score":27,"level":0},{"x":1193,"y":661,"score":43,"level":0},{"x":1259,"y":661,"score":36,"level":0},{"x":1261,"y":661,"score":49,"level":0},{"x":1284,"y":661,"score":59,"level":0},{"x":1331,"y":661,"score":39,"level":0},{"x":1363,"y":661,"score":56,"level":0},{"x":1392,"y":661,"score":40,"level":0},{"x":1410,"y":661,"score":28,"level":0},{"x":479,"y":662,"score":31,"level":0},{"x":484,"y":662,"score":36,"level":0},{"x":526,"y":662,"score":33,"level":0},{"x":532,"y":662,"score":35,"level":0},{"x":652,"y":662,"score":42,"level":0},{"x":679,"y":662,"score":40,"level":0},{"x":738,"y":662,"score":44,"level":0},{"x":1151,"y":662,"score":30,"level":0},{"x":1156,"y":662,"score":42,"level":0},{"x":1357,"y":662,"score":36,"level":0},{"x":1401,"y":662,"score":34,"level":0},{"x":549,"y":663,"score":38,"level":0},{"x":563,"y":663,"score":35,"level":0},{"x":814,"y":663,"score":33,"level":0},{"x":819,"y":663,"score":34,"level":0},{"x":898,"y":663,"score":33,"level":0},{"x":908,"y":663,"score":37,"level":0},{"x":1090,"y":663,"score":59,"level":0},{"x":1265,"y":663,"score":54,"level":0},{"x":1268,"y":663,"score":57,"level":0},{"x":384,"y":664,"score":29,"level":0},{"x":601,"y":664,"score":40,"level":0},{"x":860,"y":664,"score":28,"level":0},{"x":929,"y":664,"score":27,"level":0},{"x":987,"y":664,"score":34,"level":0},{"x":1017,"y":664,"score":40,"level":0},{"x":1101,"y":664,"score":61,"level":0},{"x":1242,"y":664,"score":69,"level":0},{"x":1256,"y":664,"score":56,"level":0},{"x":1271,"y":664,"score":118,"level":0},{"x":1400,"y":664,"score":31,"level":0},{"x":394,"y":665,"score":48,"level":0},{"x":533,"y":665,"score":39,"level":0},{"x":543,"y":665,"score":32,"level":0},{"x":613,"y":665,"score":54,"level":0},{"x":725,"y":665,"score":42,"level":0},{"x":777,"y":665,"score":52,"level":0},{"x":798,"y":665,"score":28,"level":0},{"x":1026,"y":665,"score":57,"level":0},{"x":1152,"y":665,"score":51,"level":0},{"x":1249,"y":665,"score":61,"level":0},{"x":377,"y":666,"score":62,"level":0},{"x":483,"y":666,"score":26,"level":0},{"x":559,"y":666,"score":38,"level":0},{"x":621,"y":666,"score":27,"level":0},{"x":878,"y":666,"score":42,"level":0},{"x":943,"y":666,"score":33,"level":0},{"x":1089,"y":666,"score":64,"level":0},{"x":1490,"y":666,"score":38,"level":0},{"x":489,"y":667,"score":34,"level":0},{"x":608,"y":667,"score":26,"level":0},{"x":756,"y":667,"score":32,"level":0},{"x":883,"y":667,"score":30,"level":0},{"x":914,"y":667,"score":36,"level":0},{"x":967,"y":667,"score":34,"level":0},{"x":1001,"y":667,"score":30,"level":0},{"x":1061,"y":667,"score":35,"level":0},{"x":1074,"y":667,"score":34,"level":0},{"x":1225,"y":667,"score":35,"level":0},{"x":1259,"y":667,"score":45,"level":0},{"x":1290,"y":667,"score":28,"level":0},{"x":1366,"y":667,"score":34,"level":0},{"x":1415,"y":667,"score":30,"level":0},{"x":1458,"y":667,"score":32,"level":0},{"x":461,"y":668,"score":38,"level":0},{"x":466,"y":668,"score":31,"level":0},{"x":534,"y":668,"score":64,"level":0},{"x":599,"y":668,"score":52,"level":0},{"x":684,"y":668,"score":46,"level":0},{"x":761,"y":668,"score":52,"level":0},{"x":770,"y":668,"score":27,"level":0},{"x":960,"y":668,"score":56,"level":0},{"x":1152,"y":668,"score":35,"level":0},{"x":1284,"y":668,"score":92,"level":0},{"x":1351,"y":668,"score":28,"level":0},{"x":1441,"y":668,"score":30,"level":0},{"x":377,"y":669,"score":37,"level":0},{"x":405,"y":669,"score":26,"level":0},{"x":433,"y":669,"score":47,"level":0},{"x":650,"y":669,"score":26,"level":0},{"x":833,"y":669,"score":45,"level":0},{"x":1125,"y":669,"score":26,"level":0},{"x":1227,"y":669,"score":34,"level":0},{"x":1232,"y":669,"score":30,"level":0},{"x":1326,"y":669,"score":52,"level":0},{"x":396,"y":670,"score":40,"level":0},{"x":455,"y":670,"score":65,"level":0},{"x":602,"y":670,"score":48,"level":0},{"x":657,"y":670,"score":37,"level":0},{"x":718,"y":670,"score":26,"level":0},{"x":738,"y":670,"score":46,"level":0},{"x":775,"y":670,"score":28,"level":0},{"x":801,"y":670,"score":55,"level":0},{"x":868,"y":670,"score":34,"level":0},{"x":1104,"y":670,"score":98,"level":0},{"x":1132,"y":670,"score":32,"level":0},{"x":1173,"y":670,"score":41,"level":0},{"x":1188,"y":670,"score":35,"level":0},{"x":1451,"y":670,"score":31,"level":0},{"x":1469,"y":670,"score":49,"level":0},{"x":446,"y":671,"score":27,"level":0},{"x":468,"y":671,"score":34,"level":0},{"x":539,"y":671,"score":28,"level":0},{"x":541,"y":671,"score":40,"level":0},{"x":600,"y":671,"score":27,"level":0},{"x":609,"y":671,"score":32,"level":0},{"x":706,"y":671,"score":32,"level":0},{"x":713,"y":671,"score":44,"level":0},{"x":773,"y":671,"score":26,"level":0},{"x":792,"y":671,"score":34,"level":0},{"x":841,"y":671,"score":34,"level":0},{"x":863,"y":671,"score":94,"level":0},{"x":1015,"y":671,"score":64,"level":0},{"x":1029,"y":671,"score":73,"level":0},{"x":1036,"y":671,"score":38,"level":0},{"x":1090,"y":671,"score":50,"level":0},{"x":1190,"y":671,"score":26,"level":0},{"x":1230,"y":671,"score":34,"level":0},{"x":1276,"y":671,"score":42,"level":0},{"x":1456,"y":671,"score":28,"level":0},{"x":398,"y":672,"score":64,"level":0},{"x":546,"y":672,"score":33,"level":0},{"x":549,"y":672,"score":35,"level":0},{"x":766,"y":672,"score":66,"level":0},{"x":1067,"y":672,"score":36,"level":0},{"x":1069,"y":672,"score":36,"level":0},{"x":1165,"y":672,"score":26,"level":0},{"x":1228,"y":672,"score":30,"level":0},{"x":1242,"y":672,"score":50,"level":0},{"x":504,"y":673,"score":29,"level":0},{"x":643,"y":673,"score":32,"level":0},{"x":687,"y":673,"score":28,"level":0},{"x":763,"y":673,"score":58,"level":0},{"x":869,"y":673,"score":42,"level":0},{"x":1001,"y":673,"score":39,"level":0},{"x":1045,"y":673,"score":39,"level":0},{"x":1054,"y":673,"score":30,"level":0},{"x":1255,"y":673,"score":64,"level":0},{"x":380,"y":674,"score":64,"level":0},{"x":400,"y":674,"score":38,"level":0},{"x":575,"y":674,"score":30,"level":0},{"x":740,"y":674,"score":34,"level":0},{"x":940,"y":674,"score":48,"level":0},{"x":999,"y":674,"score":28,"level":0},{"x":426,"y":675,"score":28,"level":0},{"x":436,"y":675,"score":45,"level":0},{"x":720,"y":675,"score":31,"level":0},{"x":884,"y":675,"score":34,"level":0},{"x":932,"y":675,"score":26,"level":0},{"x":937,"y":675,"score":52,"level":0},{"x":995,"y":675,"score":30,"level":0},{"x":1127,"y":675,"score":26,"level":0},{"x":1132,"y":675,"score":30,"level":0},{"x":1138,"y":675,"score":30,"level":0},{"x":1216,"y":675,"score":37,"level":0},{"x":539,"y":676,"score":41,"level":0},{"x":772,"y":676,"score":36,"level":0},{"x":822,"y":676,"score":34,"level":0},{"x":930,"y":676,"score":30,"level":0},{"x":991,"y":676,"score":31,"level":0},{"x":1057,"y":676,"score":29,"level":0},{"x":1059,"y":676,"score":33,"level":0},{"x":1083,"y":676,"score":26,"level":0},{"x":1207,"y":676,"score":37,"level":0},{"x":1415,"y":676,"score":31,"level":0},{"x":1420,"y":676,"score":34,"level":0},{"x":1425,"y":676,"score":28,"level":0},{"x":376,"y":677,"score":52,"level":0},{"x":385,"y":677,"score":44,"level":0},{"x":628,"y":677,"score":26,"level":0},{"x":726,"y":677,"score":37,"level":0},{"x":736,"y":677,"score":42,"level":0},{"x":777,"y":677,"score":26,"level":0},{"x":813,"y":677,"score":28,"level":0},{"x":903,"y":677,"score":30,"level":0},{"x":966,"y":677,"score":53,"level":0},{"x":1040,"y":677,"score":36,"level":0},{"x":1051,"y":677,"score":41,"level":0},{"x":1303,"y":677,"score":45,"level":0},{"x":403,"y":678,"score":37,"level":0},{"x":613,"y":678,"score":33,"level":0},{"x":648,"y":678,"score":32,"level":0},{"x":837,"y":678,"score":73,"level":0},{"x":908,"y":678,"score":34,"level":0},{"x":959,"y":678,"score":44,"level":0},{"x":987,"y":678,"score":45,"level":0},{"x":1003,"y":678,"score":60,"level":0},{"x":1013,"y":678,"score":68,"level":0},{"x":1076,"y":678,"score":35,"level":0},{"x":1150,"y":678,"score":37,"level":0},{"x":1167,"y":678,"score":32,"level":0},{"x":1180,"y":678,"score":33,"level":0},{"x":1435,"y":678,"score":26,"level":0},{"x":1468,"y":678,"score":34,"level":0},{"x":465,"y":679,"score":28,"level":0},{"x":473,"y":679,"score":26,"level":0},{"x":475,"y":679,"score":30,"level":0},{"x":526,"y":679,"score":36,"level":0},{"x":726,"y":679,"score":41,"level":0},{"x":867,"y":679,"score":45,"level":0},{"x":984,"y":679,"score":40,"level":0},{"x":1019,"y":679,"score":31,"level":0},{"x":1030,"y":679,"score":49,"level":0},{"x":1101,"y":679,"score":28,"level":0},{"x":1103,"y":679,"score":57,"level":0},{"x":1251,"y":679,"score":34,"level":0},{"x":388,"y":680,"score":35,"level":0},{"x":429,"y":680,"score":32,"level":0},{"x":489,"y":680,"score":30,"level":0},{"x":748,"y":680,"score":29,"level":0},{"x":875,"y":680,"score":44,"level":0},{"x":894,"y":680,"score":26,"level":0},{"x":925,"y":680,"score":32,"level":0},{"x":947,"y":680,"score":50,"level":0},{"x":981,"y":680,"score":58,"level":0},{"x":1270,"y":680,"score":29,"level":0},{"x":1387,"y":680,"score":32,"level":0},{"x":570,"y":681,"score":36,"level":0},{"x":583,"y":681,"score":31,"level":0},{"x":834,"y":681,"score":31,"level":0},{"x":842,"y":681,"score":44,"level":0},{"x":867,"y":681,"score":51,"level":0},{"x":920,"y":681,"score":42,"level":0},{"x":932,"y":681,"score":28,"level":0},{"x":937,"y":681,"score":62,"level":0},{"x":978,"y":681,"score":33,"level":0},{"x":1256,"y":681,"score":38,"level":0},{"x":1261,"y":681,"score":43,"level":0},{"x":1267,"y":681,"score":29,"level":0},{"x":426,"y":682,"score":34,"level":0},{"x":614,"y":682,"score":39,"level":0},{"x":619,"y":682,"score":29,"level":0},{"x":733,"y":682,"score":36,"level":0},{"x":1061,"y":682,"score":56,"level":0},{"x":1104,"y":682,"score":41,"level":0},{"x":1106,"y":682,"score":56,"level":0},{"x":1208,"y":682,"score":46,"level":0},{"x":1304,"y":682,"score":44,"level":0},{"x":1324,"y":682,"score":28,"level":0},{"x":1347,"y":682,"score":28,"level":0},{"x":1462,"y":682,"score":27,"level":0},{"x":639,"y":683,"score":34,"level":0},{"x":738,"y":683,"score":35,"level":0},{"x":1040,"y":683,"score":26,"level":0},{"x":1049,"y":683,"score":38,"level":0},{"x":1092,"y":683,"score":38,"level":0},{"x":1147,"y":683,"score":46,"level":0},{"x":1309,"y":683,"score":28,"level":0},{"x":377,"y":684,"score":51,"level":0},{"x":608,"y":684,"score":53,"level":0},{"x":676,"y":684,"score":52,"level":0},{"x":726,"y":684,"score":30,"level":0},{"x":985,"y":684,"score":29,"level":0},{"x":1090,"y":684,"score":40,"level":0},{"x":1098,"y":684,"score":28,"level":0},{"x":1172,"y":684,"score":30,"level":0},{"x":1178,"y":684,"score":27,"level":0},{"x":1183,"y":684,"score":26,"level":0},{"x":1209,"y":684,"score":30,"level":0},{"x":1435,"y":684,"score":26,"level":0},{"x":442,"y":685,"score":33,"level":0},{"x":573,"y":685,"score":27,"level":0},{"x":689,"y":685,"score":38,"level":0},{"x":900,"y":685,"score":35,"level":0},{"x":1214,"y":685,"score":46,"level":0},{"x":1318,"y":685,"score":32,"level":0},{"x":412,"y":686,"score":30,"level":0},{"x":491,"y":686,"score":44,"level":0},{"x":660,"y":686,"score":38,"level":0},{"x":706,"y":686,"score":28,"level":0},{"x":814,"y":686,"score":29,"level":0},{"x":895,"y":686,"score":36,"level":0},{"x":1019,"y":686,"score":98,"level":0},{"x":1035,"y":686,"score":44,"level":0},{"x":1043,"y":686,"score":61,"level":0},{"x":1232,"y":686,"score":48,"level":0},{"x":1396,"y":686,"score":26,"level":0},{"x":590,"y":687,"score":34,"level":0},{"x":751,"y":687,"score":27,"level":0},{"x":839,"y":687,"score":27,"level":0},{"x":902,"y":687,"score":32,"level":0},{"x":971,"y":687,"score":102,"level":0},{"x":977,"y":687,"score":183,"level":0},{"x":1037,"y":687,"score":50,"level":0},{"x":1145,"y":687,"score":34,"level":0},{"x":1282,"y":687,"score":34,"level":0},{"x":1327,"y":687,"score":50,"level":0},{"x":377,"y":688,"score":29,"level":0},{"x":700,"y":688,"score":44,"level":0},{"x":725,"y":688,"score":40,"level":0},{"x":769,"y":688,"score":28,"level":0},{"x":871,"y":688,"score":41,"level":0},{"x":911,"y":688,"score":54,"level":0},{"x":939,"y":688,"score":49,"level":0},{"x":1048,"y":688,"score":41,"level":0},{"x":1087,"y":688,"score":42,"level":0},{"x":1357,"y":688,"score":114,"level":0},{"x":1472,"y":688,"score":26,"level":0},{"x":474,"y":689,"score":33,"level":0},{"x":746,"y":689,"score":34,"level":0},{"x":824,"y":689,"score":28,"level":0},{"x":840,"y":689,"score":49,"level":0},{"x":1026,"y":689,"score":30,"level":0},{"x":1162,"y":689,"score":46,"level":0},{"x":1410,"y":689,"score":30,"level":0},{"x":1479,"y":689,"score":31,"level":0},{"x":549,"y":690,"score":53,"level":0},{"x":583,"y":690,"score":30,"level":0},{"x":772,"y":690,"score":31,"level":0},{"x":804,"y":690,"score":28,"level":0},{"x":867,"y":690,"score":45,"level":0},{"x":1002,"y":690,"score":26,"level":0},{"x":1096,"y":690,"score":64,"level":0},{"x":1165,"y":690,"score":31,"level":0},{"x":1207,"y":690,"score":28,"level":0},{"x":1443,"y":690,"score":36,"level":0},{"x":1456,"y":690,"score":26,"level":0},{"x":1461,"y":690,"score":43,"level":0},{"x":431,"y":691,"score":54,"level":0},{"x":467,"y":691,"score":38,"level":0},{"x":578,"y":691,"score":34,"level":0},{"x":834,"y":691,"score":36,"level":0},{"x":1044,"y":691,"score":50,"level":0},{"x":1378,"y":691,"score":26,"level":0},{"x":404,"y":692,"score":35,"level":0},{"x":534,"y":692,"score":31,"level":0},{"x":588,"y":692,"score":30,"level":0},{"x":678,"y":692,"score":49,"level":0},{"x":747,"y":692,"score":50,"level":0},{"x":768,"y":692,"score":39,"level":0},{"x":831,"y":692,"score":29,"level":0},{"x":895,"y":692,"score":26,"level":0},{"x":905,"y":692,"score":26,"level":0},{"x":959,"y":692,"score":46,"level":0},{"x":993,"y":692,"score":35,"level":0},{"x":1102,"y":692,"score":66,"level":0},{"x":1335,"y":692,"score":46,"level":0},{"x":656,"y":693,"score":29,"level":0},{"x":694,"y":693,"score":31,"level":0},{"x":744,"y":693,"score":32,"level":0},{"x":809,"y":693,"score":31,"level":0},{"x":816,"y":693,"score":31,"level":0},{"x":818,"y":693,"score":29,"level":0},{"x":847,"y":693,"score":35,"level":0},{"x":976,"y":693,"score":27,"level":0},{"x":1035,"y":693,"score":70,"level":0},{"x":1158,"y":693,"score":38,"level":0},{"x":1181,"y":693,"score":28,"level":0},{"x":1271,"y":693,"score":33,"level":0},{"x":1278,"y":693,"score":30,"level":0},{"x":1283,"y":693,"score":28,"level":0},{"x":1293,"y":693,"score":38,"level":0},{"x":479,"y":694,"score":31,"level":0},{"x":514,"y":694,"score":33,"level":0},{"x":961,"y":694,"score":28,"level":0},{"x":1041,"y":694,"score":68,"level":0},{"x":1194,"y":694,"score":33,"level":0},{"x":1219,"y":694,"score":32,"level":0},{"x":1416,"y":694,"score":38,"level":0},{"x":435,"y":695,"score":29,"level":0},{"x":661,"y":695,"score":51,"level":0},{"x":690,"y":695,"score":31,"level":0},{"x":971,"y":695,"score":40,"level":0},{"x":973,"y":695,"score":47,"level":0},{"x":982,"y":695,"score":30,"level":0},{"x":1111,"y":695,"score":30,"level":0},{"x":1138,"y":695,"score":55,"level":0},{"x":1383,"y":695,"score":77,"level":0},{"x":1396,"y":695,"score":50,"level":0},{"x":431,"y":696,"score":28,"level":0},{"x":571,"y":696,"score":30,"level":0},{"x":695,"y":696,"score":41,"level":0},{"x":707,"y":696,"score":30,"level":0},{"x":816,"y":696,"score":43,"level":0},{"x":923,"y":696,"score":36,"level":0},{"x":939,"y":696,"score":40,"level":0},{"x":1258,"y":696,"score":66,"level":0},{"x":1355,"y":696,"score":58,"level":0},{"x":1461,"y":696,"score":31,"level":0},{"x":444,"y":697,"score":38,"level":0},{"x":533,"y":697,"score":36,"level":0},{"x":562,"y":697,"score":29,"level":0},{"x":622,"y":697,"score":38,"level":0},{"x":729,"y":697,"score":38,"level":0},{"x":881,"y":697,"score":33,"level":0},{"x":945,"y":697,"score":31,"level":0},{"x":1060,"y":697,"score":54,"level":0},{"x":1361,"y":697,"score":29,"level":0},{"x":1468,"y":697,"score":44,"level":0},{"x":579,"y":698,"score":46,"level":0},{"x":734,"y":698,"score":28,"level":0},{"x":818,"y":698,"score":27,"level":0},{"x":869,"y":698,"score":30,"level":0},{"x":917,"y":698,"score":32,"level":0},{"x":940,"y":698,"score":32,"level":0},{"x":955,"y":698,"score":48,"level":0},{"x":1000,"y":698,"score":30,"level":0},{"x":1016,"y":698,"score":26,"level":0},{"x":1097,"y":698,"score":36,"level":0},{"x":1168,"y":698,"score":41,"level":0},{"x":1173,"y":698,"score":48,"level":0},{"x":1211,"y":698,"score":28,"level":0},{"x":1270,"y":698,"score":47,"level":0},{"x":1334,"y":698,"score":49,"level":0},{"x":1340,"y":698,"score":32,"level":0},{"x":1398,"y":698,"score":34,"level":0},{"x":1404,"y":698,"score":71,"level":0},{"x":1418,"y":698,"score":60,"level":0},{"x":1420,"y":698,"score":64,"level":0},{"x":428,"y":699,"score":33,"level":0},{"x":476,"y":699,"score":26,"level":0},{"x":838,"y":699,"score":34,"level":0},{"x":894,"y":699,"score":27,"level":0},{"x":1021,"y":699,"score":34,"level":0},{"x":1090,"y":699,"score":37,"level":0},{"x":1220,"y":699,"score":34,"level":0},{"x":402,"y":700,"score":27,"level":0},{"x":658,"y":700,"score":43,"level":0},{"x":930,"y":700,"score":31,"level":0},{"x":935,"y":700,"score":37,"level":0},{"x":956,"y":700,"score":47,"level":0},{"x":1102,"y":700,"score":34,"level":0},{"x":1309,"y":700,"score":29,"level":0},{"x":1350,"y":700,"score":28,"level":0},{"x":394,"y":701,"score":59,"level":0},{"x":487,"y":701,"score":66,"level":0},{"x":538,"y":701,"score":43,"level":0},{"x":569,"y":701,"score":44,"level":0},{"x":600,"y":701,"score":33,"level":0},{"x":664,"y":701,"score":49,"level":0},{"x":681,"y":701,"score":63,"level":0},{"x":695,"y":701,"score":36,"level":0},{"x":720,"y":701,"score":38,"level":0},{"x":889,"y":701,"score":29,"level":0},{"x":894,"y":701,"score":31,"level":0},{"x":1026,"y":701,"score":30,"level":0},{"x":1127,"y":701,"score":30,"level":0},{"x":1159,"y":701,"score":44,"level":0},{"x":1325,"y":701,"score":26,"level":0},{"x":1381,"y":701,"score":32,"level":0},{"x":1430,"y":701,"score":28,"level":0},{"x":1438,"y":701,"score":32,"level":0},{"x":492,"y":702,"score":39,"level":0},{"x":525,"y":702,"score":45,"level":0},{"x":557,"y":702,"score":29,"level":0},{"x":562,"y":702,"score":27,"level":0},{"x":615,"y":702,"score":26,"level":0},{"x":923,"y":702,"score":28,"level":0},{"x":950,"y":702,"score":26,"level":0},{"x":1188,"y":702,"score":26,"level":0},{"x":1193,"y":702,"score":29,"level":0},{"x":1201,"y":702,"score":28,"level":0},{"x":1341,"y":702,"score":28,"level":0},{"x":451,"y":703,"score":40,"level":0},{"x":631,"y":703,"score":31,"level":0},{"x":648,"y":703,"score":38,"level":0},{"x":656,"y":703,"score":66,"level":0},{"x":688,"y":703,"score":28,"level":0},{"x":702,"y":703,"score":38,"level":0},{"x":724,"y":703,"score":38,"level":0},{"x":740,"y":703,"score":28,"level":0},{"x":742,"y":703,"score":36,"level":0},{"x":804,"y":703,"score":36,"level":0},{"x":813,"y":703,"score":30,"level":0},{"x":818,"y":703,"score":28,"level":0},{"x":833,"y":703,"score":50,"level":0},{"x":1012,"y":703,"score":43,"level":0},{"x":1046,"y":703,"score":30,"level":0},{"x":1396,"y":703,"score":30,"level":0},{"x":1404,"y":703,"score":28,"level":0},{"x":1448,"y":703,"score":33,"level":0},{"x":625,"y":704,"score":32,"level":0},{"x":644,"y":704,"score":31,"level":0},{"x":727,"y":704,"score":33,"level":0},{"x":917,"y":704,"score":42,"level":0},{"x":996,"y":704,"score":30,"level":0},{"x":1092,"y":704,"score":81,"level":0},{"x":1168,"y":704,"score":31,"level":0},{"x":1346,"y":704,"score":34,"level":0},{"x":1393,"y":704,"score":49,"level":0},{"x":1398,"y":704,"score":33,"level":0},{"x":1420,"y":704,"score":30,"level":0},{"x":399,"y":705,"score":28,"level":0},{"x":553,"y":705,"score":43,"level":0},{"x":590,"y":705,"score":85,"level":0},{"x":603,"y":705,"score":40,"level":0},{"x":884,"y":705,"score":35,"level":0},{"x":936,"y":705,"score":49,"level":0},{"x":941,"y":705,"score":64,"level":0},{"x":1046,"y":705,"score":36,"level":0},{"x":1391,"y":705,"score":66,"level":0},{"x":388,"y":706,"score":38,"level":0},{"x":462,"y":706,"score":30,"level":0},{"x":927,"y":706,"score":34,"level":0},{"x":1044,"y":706,"score":30,"level":0},{"x":1101,"y":706,"score":28,"level":0},{"x":1178,"y":706,"score":27,"level":0},{"x":1464,"y":706,"score":32,"level":0},{"x":1469,"y":706,"score":27,"level":0},{"x":377,"y":707,"score":74,"level":0},{"x":488,"y":707,"score":26,"level":0},{"x":669,"y":707,"score":32,"level":0},{"x":1055,"y":707,"score":54,"level":0},{"x":1061,"y":707,"score":26,"level":0},{"x":1349,"y":707,"score":26,"level":0},{"x":1447,"y":707,"score":27,"level":0},{"x":565,"y":708,"score":36,"level":0},{"x":683,"y":708,"score":31,"level":0},{"x":688,"y":708,"score":37,"level":0},{"x":789,"y":708,"score":67,"level":0},{"x":848,"y":708,"score":90,"level":0},{"x":981,"y":708,"score":30,"level":0},{"x":1028,"y":708,"score":46,"level":0},{"x":1059,"y":708,"score":30,"level":0},{"x":1072,"y":708,"score":29,"level":0},{"x":1100,"y":708,"score":43,"level":0},{"x":1102,"y":708,"score":36,"level":0},{"x":1160,"y":708,"score":34,"level":0},{"x":1180,"y":708,"score":30,"level":0},{"x":1217,"y":708,"score":37,"level":0},{"x":1260,"y":708,"score":64,"level":0},{"x":1438,"y":708,"score":28,"level":0},{"x":394,"y":709,"score":30,"level":0},{"x":524,"y":709,"score":30,"level":0},{"x":586,"y":709,"score":45,"level":0},{"x":648,"y":709,"score":34,"level":0},{"x":654,"y":709,"score":52,"level":0},{"x":663,"y":709,"score":35,"level":0},{"x":697,"y":709,"score":50,"level":0},{"x":786,"y":709,"score":32,"level":0},{"x":836,"y":709,"score":26,"level":0},{"x":874,"y":709,"score":33,"level":0},{"x":1135,"y":709,"score":38,"level":0},{"x":1405,"y":709,"score":29,"level":0},{"x":1427,"y":709,"score":27,"level":0},{"x":612,"y":710,"score":32,"level":0},{"x":635,"y":710,"score":27,"level":0},{"x":689,"y":710,"score":39,"level":0},{"x":803,"y":710,"score":41,"level":0},{"x":840,"y":710,"score":78,"level":0},{"x":894,"y":710,"score":30,"level":0},{"x":1060,"y":710,"score":32,"level":0},{"x":1132,"y":710,"score":33,"level":0},{"x":1225,"y":710,"score":47,"level":0},{"x":515,"y":711,"score":32,"level":0},{"x":600,"y":711,"score":54,"level":0},{"x":655,"y":711,"score":57,"level":0},{"x":711,"y":711,"score":26,"level":0},{"x":716,"y":711,"score":36,"level":0},{"x":727,"y":711,"score":35,"level":0},{"x":742,"y":711,"score":38,"level":0},{"x":749,"y":711,"score":72,"level":0},{"x":826,"y":711,"score":36,"level":0},{"x":934,"y":711,"score":32,"level":0},{"x":1015,"y":711,"score":27,"level":0},{"x":1195,"y":711,"score":26,"level":0},{"x":1451,"y":711,"score":33,"level":0},{"x":417,"y":712,"score":40,"level":0},{"x":470,"y":712,"score":49,"level":0},{"x":497,"y":712,"score":68,"level":0},{"x":606,"y":712,"score":72,"level":0},{"x":650,"y":712,"score":41,"level":0},{"x":740,"y":712,"score":28,"level":0},{"x":1087,"y":712,"score":34,"level":0},{"x":464,"y":713,"score":26,"level":0},{"x":702,"y":713,"score":40,"level":0},{"x":720,"y":713,"score":32,"level":0},{"x":843,"y":713,"score":43,"level":0},{"x":846,"y":713,"score":41,"level":0},{"x":975,"y":713,"score":54,"level":0},{"x":1270,"y":713,"score":35,"level":0},{"x":1393,"y":713,"score":44,"level":0},{"x":1397,"y":713,"score":42,"level":0},{"x":1403,"y":713,"score":38,"level":0},{"x":666,"y":714,"score":48,"level":0},{"x":887,"y":714,"score":34,"level":0},{"x":1204,"y":714,"score":28,"level":0},{"x":1235,"y":714,"score":32,"level":0},{"x":1284,"y":714,"score":46,"level":0},{"x":1426,"y":714,"score":34,"level":0},{"x":1479,"y":714,"score":34,"level":0},{"x":376,"y":715,"score":32,"level":0},{"x":395,"y":715,"score":44,"level":0},{"x":488,"y":715,"score":42,"level":0},{"x":731,"y":715,"score":29,"level":0},{"x":739,"y":715,"score":31,"level":0},{"x":754,"y":715,"score":37,"level":0},{"x":770,"y":715,"score":62,"level":0},{"x":895,"y":715,"score":26,"level":0},{"x":960,"y":715,"score":72,"level":0},{"x":1005,"y":715,"score":26,"level":0},{"x":1237,"y":715,"score":35,"level":0},{"x":1458,"y":715,"score":42,"level":0},{"x":1463,"y":715,"score":39,"level":0},{"x":503,"y":716,"score":26,"level":0},{"x":521,"y":716,"score":34,"level":0},{"x":582,"y":716,"score":56,"level":0},{"x":639,"y":716,"score":36,"level":0},{"x":775,"y":716,"score":46,"level":0},{"x":946,"y":716,"score":26,"level":0},{"x":1256,"y":716,"score":32,"level":0},{"x":1276,"y":716,"score":26,"level":0},{"x":1441,"y":716,"score":37,"level":0},{"x":683,"y":717,"score":46,"level":0},{"x":711,"y":717,"score":28,"level":0},{"x":952,"y":717,"score":45,"level":0},{"x":959,"y":717,"score":43,"level":0},{"x":1024,"y":717,"score":30,"level":0},{"x":1041,"y":717,"score":70,"level":0},{"x":1182,"y":717,"score":47,"level":0},{"x":1185,"y":717,"score":52,"level":0},{"x":1190,"y":717,"score":28,"level":0},{"x":1410,"y":717,"score":34,"level":0},{"x":1417,"y":717,"score":44,"level":0},{"x":422,"y":718,"score":27,"level":0},{"x":558,"y":718,"score":31,"level":0},{"x":577,"y":718,"score":35,"level":0},{"x":650,"y":718,"score":31,"level":0},{"x":747,"y":718,"score":72,"level":0},{"x":773,"y":718,"score":40,"level":0},{"x":991,"y":718,"score":35,"level":0},{"x":997,"y":718,"score":29,"level":0},{"x":1046,"y":718,"score":36,"level":0},{"x":1121,"y":718,"score":28,"level":0},{"x":1162,"y":718,"score":28,"level":0},{"x":1168,"y":718,"score":41,"level":0},{"x":1217,"y":718,"score":30,"level":0},{"x":601,"y":719,"score":33,"level":0},{"x":713,"y":719,"score":30,"level":0},{"x":972,"y":719,"score":33,"level":0},{"x":1129,"y":719,"score":27,"level":0},{"x":1265,"y":719,"score":49,"level":0},{"x":1304,"y":719,"score":36,"level":0},{"x":1361,"y":719,"score":27,"level":0},{"x":1453,"y":719,"score":27,"level":0},{"x":385,"y":720,"score":44,"level":0},{"x":394,"y":720,"score":44,"level":0},{"x":539,"y":720,"score":58,"level":0},{"x":606,"y":720,"score":46,"level":0},{"x":684,"y":720,"score":57,"level":0},{"x":956,"y":720,"score":51,"level":0},{"x":1033,"y":720,"score":29,"level":0},{"x":1144,"y":720,"score":58,"level":0},{"x":391,"y":721,"score":40,"level":0},{"x":478,"y":721,"score":26,"level":0},{"x":487,"y":721,"score":42,"level":0},{"x":621,"y":721,"score":37,"level":0},{"x":634,"y":721,"score":44,"level":0},{"x":877,"y":721,"score":29,"level":0},{"x":999,"y":721,"score":28,"level":0},{"x":1300,"y":721,"score":27,"level":0},{"x":1453,"y":721,"score":33,"level":0},{"x":1458,"y":721,"score":27,"level":0},{"x":1464,"y":721,"score":32,"level":0},{"x":539,"y":722,"score":32,"level":0},{"x":541,"y":722,"score":33,"level":0},{"x":549,"y":722,"score":41,"level":0},{"x":555,"y":722,"score":70,"level":0},{"x":731,"y":722,"score":56,"level":0},{"x":736,"y":722,"score":44,"level":0},{"x":777,"y":722,"score":42,"level":0},{"x":796,"y":722,"score":42,"level":0},{"x":889,"y":722,"score":48,"level":0},{"x":904,"y":722,"score":26,"level":0},{"x":953,"y":722,"score":36,"level":0},{"x":1027,"y":722,"score":36,"level":0},{"x":1048,"y":722,"score":27,"level":0},{"x":1053,"y":722,"score":26,"level":0},{"x":1183,"y":722,"score":32,"level":0},{"x":1277,"y":722,"score":45,"level":0},{"x":1290,"y":722,"score":34,"level":0},{"x":1320,"y":722,"score":37,"level":0},{"x":1370,"y":722,"score":28,"level":0},{"x":1415,"y":722,"score":44,"level":0},{"x":700,"y":723,"score":32,"level":0},{"x":726,"y":723,"score":34,"level":0},{"x":742,"y":723,"score":40,"level":0},{"x":898,"y":723,"score":32,"level":0},{"x":940,"y":723,"score":39,"level":0},{"x":1211,"y":723,"score":27,"level":0},{"x":682,"y":724,"score":41,"level":0},{"x":685,"y":724,"score":38,"level":0},{"x":693,"y":724,"score":30,"level":0},{"x":736,"y":724,"score":58,"level":0},{"x":767,"y":724,"score":27,"level":0},{"x":804,"y":724,"score":33,"level":0},{"x":918,"y":724,"score":34,"level":0},{"x":1246,"y":724,"score":35,"level":0},{"x":1327,"y":724,"score":36,"level":0},{"x":415,"y":725,"score":27,"level":0},{"x":550,"y":725,"score":38,"level":0},{"x":567,"y":725,"score":29,"level":0},{"x":576,"y":725,"score":42,"level":0},{"x":581,"y":725,"score":33,"level":0},{"x":595,"y":725,"score":26,"level":0},{"x":650,"y":725,"score":31,"level":0},{"x":656,"y":725,"score":36,"level":0},{"x":747,"y":725,"score":33,"level":0},{"x":809,"y":725,"score":36,"level":0},{"x":882,"y":725,"score":40,"level":0},{"x":955,"y":725,"score":57,"level":0},{"x":1081,"y":725,"score":59,"level":0},{"x":1148,"y":725,"score":30,"level":0},{"x":1332,"y":725,"score":44,"level":0},{"x":379,"y":726,"score":48,"level":0},{"x":384,"y":726,"score":47,"level":0},{"x":390,"y":726,"score":42,"level":0},{"x":470,"y":726,"score":26,"level":0},{"x":544,"y":726,"score":28,"level":0},{"x":667,"y":726,"score":40,"level":0},{"x":850,"y":726,"score":27,"level":0},{"x":898,"y":726,"score":31,"level":0},{"x":1439,"y":726,"score":38,"level":0},{"x":1444,"y":726,"score":40,"level":0},{"x":388,"y":727,"score":43,"level":0},{"x":608,"y":727,"score":34,"level":0},{"x":631,"y":727,"score":26,"level":0},{"x":740,"y":727,"score":27,"level":0},{"x":774,"y":727,"score":27,"level":0},{"x":971,"y":727,"score":54,"level":0},{"x":1087,"y":727,"score":67,"level":0},{"x":1098,"y":727,"score":34,"level":0},{"x":1320,"y":727,"score":32,"level":0},{"x":1364,"y":727,"score":36,"level":0},{"x":1376,"y":727,"score":31,"level":0},{"x":544,"y":728,"score":28,"level":0},{"x":850,"y":728,"score":52,"level":0},{"x":936,"y":728,"score":45,"level":0},{"x":1029,"y":728,"score":46,"level":0},{"x":1044,"y":728,"score":28,"level":0},{"x":1046,"y":728,"score":28,"level":0},{"x":1170,"y":728,"score":54,"level":0},{"x":1201,"y":728,"score":39,"level":0},{"x":1207,"y":728,"score":30,"level":0},{"x":1249,"y":728,"score":34,"level":0},{"x":1404,"y":728,"score":40,"level":0},{"x":513,"y":729,"score":28,"level":0},{"x":590,"y":729,"score":36,"level":0},{"x":693,"y":729,"score":32,"level":0},{"x":708,"y":729,"score":28,"level":0},{"x":740,"y":729,"score":35,"level":0},{"x":765,"y":729,"score":41,"level":0},{"x":782,"y":729,"score":28,"level":0},{"x":877,"y":729,"score":46,"level":0},{"x":916,"y":729,"score":30,"level":0},{"x":981,"y":729,"score":32,"level":0},{"x":1006,"y":729,"score":36,"level":0},{"x":1074,"y":729,"score":26,"level":0},{"x":1096,"y":729,"score":39,"level":0},{"x":1123,"y":729,"score":27,"level":0},{"x":1144,"y":729,"score":45,"level":0},{"x":1326,"y":729,"score":32,"level":0},{"x":1427,"y":729,"score":30,"level":0},{"x":377,"y":730,"score":34,"level":0},{"x":413,"y":730,"score":26,"level":0},{"x":421,"y":730,"score":26,"level":0},{"x":436,"y":730,"score":32,"level":0},{"x":832,"y":730,"score":32,"level":0},{"x":1029,"y":730,"score":34,"level":0},{"x":1414,"y":730,"score":39,"level":0},{"x":660,"y":731,"score":41,"level":0},{"x":717,"y":731,"score":33,"level":0},{"x":821,"y":731,"score":40,"level":0},{"x":877,"y":731,"score":52,"level":0},{"x":957,"y":731,"score":53,"level":0},{"x":1168,"y":731,"score":52,"level":0},{"x":1400,"y":731,"score":36,"level":0},{"x":1486,"y":731,"score":30,"level":0},{"x":435,"y":732,"score":42,"level":0},{"x":775,"y":732,"score":33,"level":0},{"x":804,"y":732,"score":40,"level":0},{"x":810,"y":732,"score":36,"level":0},{"x":1012,"y":732,"score":40,"level":0},{"x":1025,"y":732,"score":69,"level":0},{"x":590,"y":733,"score":27,"level":0},{"x":640,"y":733,"score":30,"level":0},{"x":701,"y":733,"score":30,"level":0},{"x":821,"y":733,"score":32,"level":0},{"x":1048,"y":733,"score":26,"level":0},{"x":1115,"y":733,"score":30,"level":0},{"x":1294,"y":733,"score":29,"level":0},{"x":1426,"y":733,"score":50,"level":0},{"x":412,"y":734,"score":29,"level":0},{"x":626,"y":734,"score":51,"level":0},{"x":710,"y":734,"score":26,"level":0},{"x":846,"y":734,"score":50,"level":0},{"x":1121,"y":734,"score":32,"level":0},{"x":1179,"y":734,"score":32,"level":0},{"x":1247,"y":734,"score":81,"level":0},{"x":1288,"y":734,"score":40,"level":0},{"x":1408,"y":734,"score":55,"level":0},{"x":484,"y":735,"score":53,"level":0},{"x":570,"y":735,"score":48,"level":0},{"x":589,"y":735,"score":38,"level":0},{"x":699,"y":735,"score":35,"level":0},{"x":894,"y":735,"score":69,"level":0},{"x":899,"y":735,"score":34,"level":0},{"x":948,"y":735,"score":37,"level":0},{"x":953,"y":735,"score":57,"level":0},{"x":972,"y":735,"score":64,"level":0},{"x":1002,"y":735,"score":40,"level":0},{"x":1139,"y":735,"score":32,"level":0},{"x":1148,"y":735,"score":29,"level":0},{"x":1186,"y":735,"score":31,"level":0},{"x":1196,"y":735,"score":28,"level":0},{"x":1228,"y":735,"score":44,"level":0},{"x":1343,"y":735,"score":32,"level":0},{"x":1353,"y":735,"score":56,"level":0},{"x":1359,"y":735,"score":33,"level":0},{"x":647,"y":736,"score":29,"level":0},{"x":662,"y":736,"score":45,"level":0},{"x":677,"y":736,"score":38,"level":0},{"x":854,"y":736,"score":38,"level":0},{"x":889,"y":736,"score":40,"level":0},{"x":1271,"y":736,"score":69,"level":0},{"x":1460,"y":736,"score":39,"level":0},{"x":378,"y":737,"score":64,"level":0},{"x":391,"y":737,"score":28,"level":0},{"x":453,"y":737,"score":31,"level":0},{"x":459,"y":737,"score":63,"level":0},{"x":474,"y":737,"score":28,"level":0},{"x":482,"y":737,"score":63,"level":0},{"x":817,"y":737,"score":29,"level":0},{"x":925,"y":737,"score":32,"level":0},{"x":984,"y":737,"score":33,"level":0},{"x":1030,"y":737,"score":26,"level":0},{"x":1069,"y":737,"score":36,"level":0},{"x":1166,"y":737,"score":34,"level":0},{"x":396,"y":738,"score":32,"level":0},{"x":417,"y":738,"score":42,"level":0},{"x":437,"y":738,"score":50,"level":0},{"x":738,"y":738,"score":34,"level":0},{"x":854,"y":738,"score":44,"level":0},{"x":884,"y":738,"score":40,"level":0},{"x":915,"y":738,"score":33,"level":0},{"x":930,"y":738,"score":28,"level":0},{"x":1208,"y":738,"score":28,"level":0},{"x":513,"y":739,"score":27,"level":0},{"x":705,"y":739,"score":44,"level":0},{"x":778,"y":739,"score":40,"level":0},{"x":848,"y":739,"score":44,"level":0},{"x":895,"y":739,"score":43,"level":0},{"x":920,"y":739,"score":35,"level":0},{"x":1015,"y":739,"score":28,"level":0},{"x":1114,"y":739,"score":31,"level":0},{"x":1366,"y":739,"score":28,"level":0},{"x":1429,"y":739,"score":26,"level":0},{"x":1444,"y":739,"score":52,"level":0},{"x":418,"y":740,"score":45,"level":0},{"x":423,"y":740,"score":50,"level":0},{"x":602,"y":740,"score":30,"level":0},{"x":631,"y":740,"score":26,"level":0},{"x":679,"y":740,"score":30,"level":0},{"x":726,"y":740,"score":28,"level":0},{"x":807,"y":740,"score":26,"level":0},{"x":1039,"y":740,"score":62,"level":0},{"x":1439,"y":740,"score":60,"level":0},{"x":488,"y":741,"score":28,"level":0},{"x":533,"y":741,"score":44,"level":0},{"x":623,"y":741,"score":34,"level":0},{"x":687,"y":741,"score":26,"level":0},{"x":766,"y":741,"score":34,"level":0},{"x":856,"y":741,"score":58,"level":0},{"x":858,"y":741,"score":29,"level":0},{"x":942,"y":741,"score":32,"level":0},{"x":947,"y":741,"score":46,"level":0},{"x":1131,"y":741,"score":29,"level":0},{"x":1143,"y":741,"score":33,"level":0},{"x":1286,"y":741,"score":29,"level":0},{"x":1345,"y":741,"score":27,"level":0},{"x":1364,"y":741,"score":28,"level":0},{"x":1415,"y":741,"score":39,"level":0},{"x":1465,"y":741,"score":35,"level":0},{"x":410,"y":742,"score":42,"level":0},{"x":561,"y":742,"score":30,"level":0},{"x":950,"y":742,"score":26,"level":0},{"x":956,"y":742,"score":39,"level":0},{"x":982,"y":742,"score":41,"level":0},{"x":984,"y":742,"score":45,"level":0},{"x":1294,"y":742,"score":27,"level":0},{"x":1332,"y":742,"score":29,"level":0},{"x":1473,"y":742,"score":27,"level":0},{"x":529,"y":743,"score":39,"level":0},{"x":608,"y":743,"score":41,"level":0},{"x":655,"y":743,"score":48,"level":0},{"x":681,"y":743,"score":27,"level":0},{"x":701,"y":743,"score":31,"level":0},{"x":992,"y":743,"score":28,"level":0},{"x":1045,"y":743,"score":35,"level":0},{"x":1102,"y":743,"score":75,"level":0},{"x":1189,"y":743,"score":28,"level":0},{"x":1286,"y":743,"score":33,"level":0},{"x":1298,"y":743,"score":40,"level":0},{"x":406,"y":744,"score":26,"level":0},{"x":434,"y":744,"score":40,"level":0},{"x":771,"y":744,"score":35,"level":0},{"x":1025,"y":744,"score":26,"level":0},{"x":1085,"y":744,"score":38,"level":0},{"x":1322,"y":744,"score":27,"level":0},{"x":1327,"y":744,"score":27,"level":0},{"x":417,"y":745,"score":32,"level":0},{"x":543,"y":745,"score":48,"level":0},{"x":790,"y":745,"score":32,"level":0},{"x":819,"y":745,"score":30,"level":0},{"x":843,"y":745,"score":50,"level":0},{"x":848,"y":745,"score":40,"level":0},{"x":920,"y":745,"score":32,"level":0},{"x":938,"y":745,"score":26,"level":0},{"x":943,"y":745,"score":29,"level":0},{"x":967,"y":745,"score":35,"level":0},{"x":1307,"y":745,"score":27,"level":0},{"x":1337,"y":745,"score":30,"level":0},{"x":624,"y":746,"score":40,"level":0},{"x":678,"y":746,"score":31,"level":0},{"x":734,"y":746,"score":34,"level":0},{"x":807,"y":746,"score":33,"level":0},{"x":896,"y":746,"score":38,"level":0},{"x":1041,"y":746,"score":36,"level":0},{"x":1248,"y":746,"score":45,"level":0},{"x":1356,"y":746,"score":38,"level":0},{"x":1403,"y":746,"score":36,"level":0},{"x":1432,"y":746,"score":30,"level":0},{"x":377,"y":747,"score":56,"level":0},{"x":469,"y":747,"score":33,"level":0},{"x":476,"y":747,"score":27,"level":0},{"x":481,"y":747,"score":30,"level":0},{"x":658,"y":747,"score":37,"level":0},{"x":988,"y":747,"score":34,"level":0},{"x":1033,"y":747,"score":32,"level":0},{"x":1220,"y":747,"score":34,"level":0},{"x":1336,"y":747,"score":65,"level":0},{"x":1429,"y":747,"score":26,"level":0},{"x":1441,"y":747,"score":30,"level":0},{"x":454,"y":748,"score":26,"level":0},{"x":519,"y":748,"score":31,"level":0},{"x":586,"y":748,"score":83,"level":0},{"x":627,"y":748,"score":46,"level":0},{"x":691,"y":748,"score":32,"level":0},{"x":955,"y":748,"score":32,"level":0},{"x":1083,"y":748,"score":34,"level":0},{"x":1122,"y":748,"score":32,"level":0},{"x":1372,"y":748,"score":29,"level":0},{"x":1374,"y":748,"score":26,"level":0},{"x":475,"y":749,"score":34,"level":0},{"x":636,"y":749,"score":30,"level":0},{"x":671,"y":749,"score":37,"level":0},{"x":719,"y":749,"score":26,"level":0},{"x":846,"y":749,"score":55,"level":0},{"x":860,"y":749,"score":78,"level":0},{"x":868,"y":749,"score":67,"level":0},{"x":880,"y":749,"score":39,"level":0},{"x":1028,"y":749,"score":57,"level":0},{"x":425,"y":750,"score":54,"level":0},{"x":434,"y":750,"score":86,"level":0},{"x":553,"y":750,"score":46,"level":0},{"x":557,"y":750,"score":28,"level":0},{"x":591,"y":750,"score":33,"level":0},{"x":948,"y":750,"score":27,"level":0},{"x":984,"y":750,"score":42,"level":0},{"x":1083,"y":750,"score":34,"level":0},{"x":1132,"y":750,"score":29,"level":0},{"x":1137,"y":750,"score":38,"level":0},{"x":1154,"y":750,"score":27,"level":0},{"x":1417,"y":750,"score":26,"level":0},{"x":1423,"y":750,"score":64,"level":0},{"x":631,"y":751,"score":28,"level":0},{"x":888,"y":751,"score":32,"level":0},{"x":893,"y":751,"score":28,"level":0},{"x":970,"y":751,"score":30,"level":0},{"x":978,"y":751,"score":52,"level":0},{"x":1179,"y":751,"score":97,"level":0},{"x":417,"y":752,"score":26,"level":0},{"x":1073,"y":752,"score":31,"level":0},{"x":1114,"y":752,"score":56,"level":0},{"x":1162,"y":752,"score":55,"level":0},{"x":1344,"y":752,"score":43,"level":0},{"x":1378,"y":752,"score":26,"level":0},{"x":539,"y":753,"score":74,"level":0},{"x":598,"y":753,"score":37,"level":0},{"x":705,"y":753,"score":36,"level":0},{"x":849,"y":753,"score":34,"level":0},{"x":863,"y":753,"score":33,"level":0},{"x":946,"y":753,"score":34,"level":0},{"x":952,"y":753,"score":28,"level":0},{"x":1244,"y":753,"score":30,"level":0},{"x":1284,"y":753,"score":30,"level":0},{"x":1383,"y":753,"score":28,"level":0},{"x":1389,"y":753,"score":45,"level":0},{"x":1405,"y":753,"score":27,"level":0},{"x":1441,"y":753,"score":28,"level":0},{"x":1468,"y":753,"score":39,"level":0},{"x":463,"y":754,"score":46,"level":0},{"x":507,"y":754,"score":28,"level":0},{"x":530,"y":754,"score":30,"level":0},{"x":545,"y":754,"score":35,"level":0},{"x":579,"y":754,"score":42,"level":0},{"x":667,"y":754,"score":29,"level":0},{"x":710,"y":754,"score":30,"level":0},{"x":727,"y":754,"score":42,"level":0},{"x":772,"y":754,"score":35,"level":0},{"x":841,"y":754,"score":53,"level":0},{"x":846,"y":754,"score":31,"level":0},{"x":865,"y":754,"score":26,"level":0},{"x":885,"y":754,"score":32,"level":0},{"x":944,"y":754,"score":31,"level":0},{"x":1085,"y":754,"score":36,"level":0},{"x":1328,"y":754,"score":27,"level":0},{"x":1354,"y":754,"score":31,"level":0},{"x":1466,"y":754,"score":31,"level":0},{"x":447,"y":755,"score":58,"level":0},{"x":527,"y":755,"score":50,"level":0},{"x":807,"y":755,"score":34,"level":0},{"x":878,"y":755,"score":56,"level":0},{"x":917,"y":755,"score":34,"level":0},{"x":1249,"y":755,"score":56,"level":0},{"x":1432,"y":755,"score":61,"level":0},{"x":472,"y":756,"score":29,"level":0},{"x":572,"y":756,"score":30,"level":0},{"x":718,"y":756,"score":28,"level":0},{"x":810,"y":756,"score":30,"level":0},{"x":813,"y":756,"score":27,"level":0},{"x":871,"y":756,"score":56,"level":0},{"x":1131,"y":756,"score":27,"level":0},{"x":1317,"y":756,"score":42,"level":0},{"x":1336,"y":756,"score":37,"level":0},{"x":1416,"y":756,"score":54,"level":0},{"x":398,"y":757,"score":26,"level":0},{"x":403,"y":757,"score":32,"level":0},{"x":549,"y":757,"score":64,"level":0},{"x":864,"y":757,"score":31,"level":0},{"x":877,"y":757,"score":39,"level":0},{"x":978,"y":757,"score":33,"level":0},{"x":1035,"y":757,"score":47,"level":0},{"x":1041,"y":757,"score":28,"level":0},{"x":1186,"y":757,"score":49,"level":0},{"x":1190,"y":757,"score":32,"level":0},{"x":1276,"y":757,"score":38,"level":0},{"x":1330,"y":757,"score":27,"level":0},{"x":476,"y":758,"score":26,"level":0},{"x":557,"y":758,"score":40,"level":0},{"x":559,"y":758,"score":42,"level":0},{"x":617,"y":758,"score":30,"level":0},{"x":686,"y":758,"score":42,"level":0},{"x":705,"y":758,"score":28,"level":0},{"x":776,"y":758,"score":34,"level":0},{"x":830,"y":758,"score":50,"level":0},{"x":858,"y":758,"score":35,"level":0},{"x":927,"y":758,"score":46,"level":0},{"x":932,"y":758,"score":32,"level":0},{"x":1107,"y":758,"score":32,"level":0},{"x":1237,"y":758,"score":29,"level":0},{"x":1349,"y":758,"score":65,"level":0},{"x":1439,"y":758,"score":30,"level":0},{"x":538,"y":759,"score":39,"level":0},{"x":563,"y":759,"score":36,"level":0},{"x":608,"y":759,"score":26,"level":0},{"x":712,"y":759,"score":26,"level":0},{"x":720,"y":759,"score":32,"level":0},{"x":1029,"y":759,"score":41,"level":0},{"x":1153,"y":759,"score":29,"level":0},{"x":1195,"y":759,"score":40,"level":0},{"x":1284,"y":759,"score":44,"level":0},{"x":1292,"y":759,"score":32,"level":0},{"x":1340,"y":759,"score":27,"level":0},{"x":1358,"y":759,"score":68,"level":0},{"x":1361,"y":759,"score":29,"level":0},{"x":1464,"y":759,"score":28,"level":0},{"x":439,"y":760,"score":116,"level":0},{"x":467,"y":760,"score":36,"level":0},{"x":472,"y":760,"score":32,"level":0},{"x":505,"y":760,"score":32,"level":0},{"x":526,"y":760,"score":26,"level":0},{"x":749,"y":760,"score":30,"level":0},{"x":797,"y":760,"score":26,"level":0},{"x":873,"y":760,"score":55,"level":0},{"x":942,"y":760,"score":57,"level":0},{"x":989,"y":760,"score":32,"level":0},{"x":1182,"y":760,"score":79,"level":0},{"x":1289,"y":760,"score":30,"level":0},{"x":1375,"y":760,"score":38,"level":0},{"x":1402,"y":760,"score":29,"level":0},{"x":1474,"y":760,"score":29,"level":0},{"x":413,"y":761,"score":37,"level":0},{"x":538,"y":761,"score":44,"level":0},{"x":544,"y":761,"score":76,"level":0},{"x":677,"y":761,"score":45,"level":0},{"x":802,"y":761,"score":29,"level":0},{"x":839,"y":761,"score":29,"level":0},{"x":842,"y":761,"score":29,"level":0},{"x":1063,"y":761,"score":26,"level":0},{"x":1424,"y":761,"score":82,"level":0},{"x":1432,"y":761,"score":82,"level":0},{"x":1456,"y":761,"score":38,"level":0},{"x":1480,"y":761,"score":38,"level":0},{"x":523,"y":762,"score":30,"level":0},{"x":770,"y":762,"score":36,"level":0},{"x":873,"y":762,"score":26,"level":0},{"x":971,"y":762,"score":30,"level":0},{"x":979,"y":762,"score":68,"level":0},{"x":1107,"y":762,"score":31,"level":0},{"x":1272,"y":762,"score":41,"level":0},{"x":1411,"y":762,"score":28,"level":0},{"x":402,"y":763,"score":42,"level":0},{"x":419,"y":763,"score":44,"level":0},{"x":471,"y":763,"score":26,"level":0},{"x":541,"y":763,"score":37,"level":0},{"x":560,"y":763,"score":61,"level":0},{"x":566,"y":763,"score":26,"level":0},{"x":656,"y":763,"score":50,"level":0},{"x":823,"y":763,"score":37,"level":0},{"x":854,"y":763,"score":27,"level":0},{"x":1026,"y":763,"score":38,"level":0},{"x":1046,"y":763,"score":26,"level":0},{"x":1114,"y":763,"score":52,"level":0},{"x":1197,"y":763,"score":31,"level":0},{"x":1221,"y":763,"score":34,"level":0},{"x":1237,"y":763,"score":32,"level":0},{"x":531,"y":764,"score":50,"level":0},{"x":563,"y":764,"score":32,"level":0},{"x":616,"y":764,"score":36,"level":0},{"x":622,"y":764,"score":46,"level":0},{"x":701,"y":764,"score":26,"level":0},{"x":933,"y":764,"score":37,"level":0},{"x":940,"y":764,"score":29,"level":0},{"x":970,"y":764,"score":26,"level":0},{"x":1037,"y":764,"score":38,"level":0},{"x":1103,"y":764,"score":58,"level":0},{"x":1144,"y":764,"score":30,"level":0},{"x":1150,"y":764,"score":49,"level":0},{"x":1168,"y":764,"score":55,"level":0},{"x":1226,"y":764,"score":34,"level":0},{"x":1282,"y":764,"score":30,"level":0},{"x":1336,"y":764,"score":36,"level":0},{"x":1449,"y":764,"score":60,"level":0},{"x":413,"y":765,"score":37,"level":0},{"x":559,"y":765,"score":38,"level":0},{"x":602,"y":765,"score":50,"level":0},{"x":627,"y":765,"score":34,"level":0},{"x":656,"y":765,"score":28,"level":0},{"x":662,"y":765,"score":31,"level":0},{"x":664,"y":765,"score":56,"level":0},{"x":715,"y":765,"score":37,"level":0},{"x":720,"y":765,"score":28,"level":0},{"x":762,"y":765,"score":39,"level":0},{"x":833,"y":765,"score":31,"level":0},{"x":922,"y":765,"score":38,"level":0},{"x":1108,"y":765,"score":32,"level":0},{"x":1291,"y":765,"score":27,"level":0},{"x":1464,"y":765,"score":32,"level":0},{"x":496,"y":766,"score":40,"level":0},{"x":546,"y":766,"score":48,"level":0},{"x":725,"y":766,"score":47,"level":0},{"x":825,"y":766,"score":38,"level":0},{"x":1157,"y":766,"score":43,"level":0},{"x":1219,"y":766,"score":32,"level":0},{"x":440,"y":767,"score":64,"level":0},{"x":459,"y":767,"score":48,"level":0},{"x":505,"y":767,"score":54,"level":0},{"x":555,"y":767,"score":68,"level":0},{"x":590,"y":767,"score":33,"level":0},{"x":785,"y":767,"score":28,"level":0},{"x":883,"y":767,"score":64,"level":0},{"x":903,"y":767,"score":28,"level":0},{"x":914,"y":767,"score":35,"level":0},{"x":921,"y":767,"score":42,"level":0},{"x":926,"y":767,"score":29,"level":0},{"x":1252,"y":767,"score":30,"level":0},{"x":1317,"y":767,"score":26,"level":0},{"x":1327,"y":767,"score":29,"level":0},{"x":1435,"y":767,"score":32,"level":0},{"x":410,"y":768,"score":34,"level":0},{"x":474,"y":768,"score":28,"level":0},{"x":560,"y":768,"score":32,"level":0},{"x":706,"y":768,"score":32,"level":0},{"x":709,"y":768,"score":34,"level":0},{"x":901,"y":768,"score":28,"level":0},{"x":943,"y":768,"score":52,"level":0},{"x":981,"y":768,"score":45,"level":0},{"x":1340,"y":768,"score":67,"level":0},{"x":1359,"y":768,"score":61,"level":0},{"x":416,"y":769,"score":45,"level":0},{"x":593,"y":769,"score":30,"level":0},{"x":714,"y":769,"score":41,"level":0},{"x":863,"y":769,"score":39,"level":0},{"x":1037,"y":769,"score":29,"level":0},{"x":1209,"y":769,"score":32,"level":0},{"x":431,"y":770,"score":41,"level":0},{"x":460,"y":770,"score":76,"level":0},{"x":514,"y":770,"score":32,"level":0},{"x":580,"y":770,"score":26,"level":0},{"x":659,"y":770,"score":30,"level":0},{"x":702,"y":770,"score":30,"level":0},{"x":722,"y":770,"score":41,"level":0},{"x":796,"y":770,"score":32,"level":0},{"x":846,"y":770,"score":41,"level":0},{"x":985,"y":770,"score":30,"level":0},{"x":1080,"y":770,"score":32,"level":0},{"x":1459,"y":770,"score":89,"level":0},{"x":453,"y":771,"score":29,"level":0},{"x":497,"y":771,"score":29,"level":0},{"x":651,"y":771,"score":68,"level":0},{"x":656,"y":771,"score":60,"level":0},{"x":700,"y":771,"score":36,"level":0},{"x":832,"y":771,"score":30,"level":0},{"x":977,"y":771,"score":48,"level":0},{"x":1036,"y":771,"score":39,"level":0},{"x":1078,"y":771,"score":30,"level":0},{"x":1135,"y":771,"score":32,"level":0},{"x":1443,"y":771,"score":67,"level":0},{"x":424,"y":772,"score":33,"level":0},{"x":444,"y":772,"score":49,"level":0},{"x":481,"y":772,"score":34,"level":0},{"x":508,"y":772,"score":42,"level":0},{"x":568,"y":772,"score":38,"level":0},{"x":586,"y":772,"score":28,"level":0},{"x":649,"y":772,"score":49,"level":0},{"x":670,"y":772,"score":27,"level":0},{"x":928,"y":772,"score":31,"level":0},{"x":1156,"y":772,"score":32,"level":0},{"x":453,"y":773,"score":47,"level":0},{"x":459,"y":773,"score":60,"level":0},{"x":767,"y":773,"score":28,"level":0},{"x":801,"y":773,"score":27,"level":0},{"x":1183,"y":773,"score":42,"level":0},{"x":1188,"y":773,"score":34,"level":0},{"x":1273,"y":773,"score":86,"level":0},{"x":1346,"y":773,"score":29,"level":0},{"x":1414,"y":773,"score":28,"level":0},{"x":386,"y":774,"score":28,"level":0},{"x":897,"y":774,"score":38,"level":0},{"x":1005,"y":774,"score":48,"level":0},{"x":1305,"y":774,"score":30,"level":0},{"x":1337,"y":774,"score":26,"level":0},{"x":1468,"y":774,"score":32,"level":0},{"x":377,"y":775,"score":64,"level":0},{"x":426,"y":775,"score":36,"level":0},{"x":431,"y":775,"score":28,"level":0},{"x":436,"y":775,"score":31,"level":0},{"x":443,"y":775,"score":55,"level":0},{"x":471,"y":775,"score":37,"level":0},{"x":477,"y":775,"score":38,"level":0},{"x":774,"y":775,"score":27,"level":0},{"x":832,"y":775,"score":26,"level":0},{"x":878,"y":775,"score":30,"level":0},{"x":933,"y":775,"score":58,"level":0},{"x":938,"y":775,"score":52,"level":0},{"x":1022,"y":775,"score":36,"level":0},{"x":1225,"y":775,"score":33,"level":0},{"x":1405,"y":775,"score":28,"level":0},{"x":1433,"y":775,"score":31,"level":0},{"x":1449,"y":775,"score":34,"level":0},{"x":1457,"y":775,"score":35,"level":0},{"x":748,"y":776,"score":27,"level":0},{"x":977,"y":776,"score":68,"level":0},{"x":1069,"y":776,"score":26,"level":0},{"x":1269,"y":776,"score":43,"level":0},{"x":1379,"y":776,"score":26,"level":0},{"x":486,"y":777,"score":35,"level":0},{"x":515,"y":777,"score":28,"level":0},{"x":528,"y":777,"score":26,"level":0},{"x":579,"y":777,"score":33,"level":0},{"x":1040,"y":777,"score":37,"level":0},{"x":1165,"y":777,"score":48,"level":0},{"x":1220,"y":777,"score":37,"level":0},{"x":1233,"y":777,"score":40,"level":0},{"x":443,"y":778,"score":39,"level":0},{"x":546,"y":778,"score":38,"level":0},{"x":648,"y":778,"score":26,"level":0},{"x":829,"y":778,"score":28,"level":0},{"x":1161,"y":778,"score":27,"level":0},{"x":1264,"y":778,"score":33,"level":0},{"x":1276,"y":778,"score":28,"level":0},{"x":1398,"y":778,"score":29,"level":0},{"x":459,"y":779,"score":40,"level":0},{"x":561,"y":779,"score":37,"level":0},{"x":697,"y":779,"score":29,"level":0},{"x":840,"y":779,"score":46,"level":0},{"x":913,"y":779,"score":27,"level":0},{"x":1029,"y":779,"score":49,"level":0},{"x":1114,"y":779,"score":30,"level":0},{"x":1323,"y":779,"score":30,"level":0},{"x":1328,"y":779,"score":29,"level":0},{"x":1442,"y":779,"score":31,"level":0},{"x":1444,"y":779,"score":27,"level":0},{"x":1473,"y":779,"score":28,"level":0},{"x":403,"y":780,"score":33,"level":0},{"x":563,"y":780,"score":26,"level":0},{"x":603,"y":780,"score":41,"level":0},{"x":707,"y":780,"score":35,"level":0},{"x":717,"y":780,"score":62,"level":0},{"x":968,"y":780,"score":36,"level":0},{"x":1078,"y":780,"score":72,"level":0},{"x":1167,"y":780,"score":33,"level":0},{"x":1172,"y":780,"score":30,"level":0},{"x":1465,"y":780,"score":42,"level":0},{"x":446,"y":781,"score":70,"level":0},{"x":464,"y":781,"score":54,"level":0},{"x":554,"y":781,"score":60,"level":0},{"x":615,"y":781,"score":47,"level":0},{"x":794,"y":781,"score":30,"level":0},{"x":850,"y":781,"score":29,"level":0},{"x":865,"y":781,"score":43,"level":0},{"x":933,"y":781,"score":48,"level":0},{"x":983,"y":781,"score":26,"level":0},{"x":1014,"y":781,"score":44,"level":0},{"x":1030,"y":781,"score":43,"level":0},{"x":1045,"y":781,"score":27,"level":0},{"x":1387,"y":781,"score":35,"level":0},{"x":408,"y":782,"score":38,"level":0},{"x":503,"y":782,"score":40,"level":0},{"x":515,"y":782,"score":38,"level":0},{"x":530,"y":782,"score":32,"level":0},{"x":563,"y":782,"score":33,"level":0},{"x":684,"y":782,"score":31,"level":0},{"x":845,"y":782,"score":36,"level":0},{"x":913,"y":782,"score":35,"level":0},{"x":1188,"y":782,"score":38,"level":0},{"x":1340,"y":782,"score":34,"level":0},{"x":1359,"y":782,"score":39,"level":0},{"x":494,"y":783,"score":42,"level":0},{"x":588,"y":783,"score":28,"level":0},{"x":920,"y":783,"score":31,"level":0},{"x":941,"y":783,"score":43,"level":0},{"x":988,"y":783,"score":56,"level":0},{"x":1134,"y":783,"score":27,"level":0},{"x":1153,"y":783,"score":39,"level":0},{"x":1183,"y":783,"score":67,"level":0},{"x":1277,"y":783,"score":48,"level":0},{"x":1282,"y":783,"score":30,"level":0},{"x":1470,"y":783,"score":75,"level":0},{"x":418,"y":784,"score":34,"level":0},{"x":546,"y":784,"score":43,"level":0},{"x":1287,"y":784,"score":39,"level":0},{"x":1392,"y":784,"score":55,"level":0},{"x":1398,"y":784,"score":28,"level":0},{"x":1422,"y":784,"score":33,"level":0},{"x":617,"y":785,"score":29,"level":0},{"x":818,"y":785,"score":37,"level":0},{"x":1114,"y":785,"score":26,"level":0},{"x":1166,"y":785,"score":41,"level":0},{"x":1239,"y":785,"score":32,"level":0},{"x":1371,"y":785,"score":39,"level":0},{"x":1430,"y":785,"score":32,"level":0},{"x":485,"y":786,"score":27,"level":0},{"x":675,"y":786,"score":38,"level":0},{"x":869,"y":786,"score":45,"level":0},{"x":1008,"y":786,"score":34,"level":0},{"x":1229,"y":786,"score":32,"level":0},{"x":1339,"y":786,"score":37,"level":0},{"x":1363,"y":786,"score":62,"level":0},{"x":1382,"y":786,"score":86,"level":0},{"x":382,"y":787,"score":42,"level":0},{"x":403,"y":787,"score":35,"level":0},{"x":543,"y":787,"score":67,"level":0},{"x":549,"y":787,"score":49,"level":0},{"x":673,"y":787,"score":32,"level":0},{"x":764,"y":787,"score":36,"level":0},{"x":770,"y":787,"score":39,"level":0},{"x":772,"y":787,"score":38,"level":0},{"x":840,"y":787,"score":34,"level":0},{"x":850,"y":787,"score":31,"level":0},{"x":908,"y":787,"score":34,"level":0},{"x":1005,"y":787,"score":34,"level":0},{"x":1028,"y":787,"score":41,"level":0},{"x":1112,"y":787,"score":26,"level":0},{"x":1194,"y":787,"score":32,"level":0},{"x":1298,"y":787,"score":26,"level":0},{"x":1318,"y":787,"score":26,"level":0},{"x":1347,"y":787,"score":36,"level":0},{"x":1376,"y":787,"score":35,"level":0},{"x":1410,"y":787,"score":45,"level":0},{"x":1447,"y":787,"score":41,"level":0},{"x":1456,"y":787,"score":40,"level":0},{"x":502,"y":788,"score":30,"level":0},{"x":517,"y":788,"score":29,"level":0},{"x":662,"y":788,"score":30,"level":0},{"x":778,"y":788,"score":32,"level":0},{"x":923,"y":788,"score":54,"level":0},{"x":929,"y":788,"score":60,"level":0},{"x":971,"y":788,"score":44,"level":0},{"x":1153,"y":788,"score":31,"level":0},{"x":1242,"y":788,"score":26,"level":0},{"x":1345,"y":788,"score":39,"level":0},{"x":1389,"y":788,"score":65,"level":0},{"x":1468,"y":788,"score":49,"level":0},{"x":459,"y":789,"score":60,"level":0},{"x":464,"y":789,"score":27,"level":0},{"x":595,"y":789,"score":41,"level":0},{"x":665,"y":789,"score":27,"level":0},{"x":700,"y":789,"score":33,"level":0},{"x":736,"y":789,"score":48,"level":0},{"x":754,"y":789,"score":34,"level":0},{"x":980,"y":789,"score":37,"level":0},{"x":1139,"y":789,"score":36,"level":0},{"x":1361,"y":789,"score":40,"level":0},{"x":1401,"y":789,"score":37,"level":0},{"x":1415,"y":789,"score":30,"level":0},{"x":511,"y":790,"score":36,"level":0},{"x":604,"y":790,"score":38,"level":0},{"x":726,"y":790,"score":45,"level":0},{"x":1040,"y":790,"score":29,"level":0},{"x":1079,"y":790,"score":27,"level":0},{"x":1123,"y":790,"score":30,"level":0},{"x":1356,"y":790,"score":32,"level":0},{"x":1406,"y":790,"score":27,"level":0},{"x":492,"y":791,"score":28,"level":0},{"x":634,"y":791,"score":28,"level":0},{"x":636,"y":791,"score":50,"level":0},{"x":754,"y":791,"score":41,"level":0},{"x":851,"y":791,"score":33,"level":0},{"x":1034,"y":791,"score":30,"level":0},{"x":1280,"y":791,"score":64,"level":0},{"x":1381,"y":791,"score":48,"level":0},{"x":1463,"y":791,"score":54,"level":0},{"x":383,"y":792,"score":37,"level":0},{"x":557,"y":792,"score":40,"level":0},{"x":719,"y":792,"score":45,"level":0},{"x":728,"y":792,"score":34,"level":0},{"x":835,"y":792,"score":28,"level":0},{"x":1181,"y":792,"score":52,"level":0},{"x":1185,"y":792,"score":63,"level":0},{"x":1430,"y":792,"score":32,"level":0},{"x":405,"y":793,"score":26,"level":0},{"x":416,"y":793,"score":33,"level":0},{"x":437,"y":793,"score":33,"level":0},{"x":487,"y":793,"score":28,"level":0},{"x":520,"y":793,"score":33,"level":0},{"x":639,"y":793,"score":40,"level":0},{"x":884,"y":793,"score":30,"level":0},{"x":941,"y":793,"score":29,"level":0},{"x":990,"y":793,"score":26,"level":0},{"x":1211,"y":793,"score":34,"level":0},{"x":1376,"y":793,"score":70,"level":0},{"x":1468,"y":793,"score":26,"level":0},{"x":581,"y":794,"score":33,"level":0},{"x":647,"y":794,"score":28,"level":0},{"x":679,"y":794,"score":34,"level":0},{"x":790,"y":794,"score":37,"level":0},{"x":871,"y":794,"score":39,"level":0},{"x":979,"y":794,"score":36,"level":0},{"x":985,"y":794,"score":28,"level":0},{"x":995,"y":794,"score":30,"level":0},{"x":1206,"y":794,"score":27,"level":0},{"x":400,"y":795,"score":26,"level":0},{"x":475,"y":795,"score":27,"level":0},{"x":571,"y":795,"score":26,"level":0},{"x":827,"y":795,"score":31,"level":0},{"x":838,"y":795,"score":44,"level":0},{"x":893,"y":795,"score":40,"level":0},{"x":938,"y":795,"score":46,"level":0},{"x":1290,"y":795,"score":44,"level":0},{"x":1318,"y":795,"score":27,"level":0},{"x":458,"y":796,"score":38,"level":0},{"x":549,"y":796,"score":32,"level":0},{"x":659,"y":796,"score":29,"level":0},{"x":679,"y":796,"score":45,"level":0},{"x":690,"y":796,"score":34,"level":0},{"x":702,"y":796,"score":33,"level":0},{"x":717,"y":796,"score":27,"level":0},{"x":824,"y":796,"score":44,"level":0},{"x":1229,"y":796,"score":29,"level":0},{"x":1379,"y":796,"score":33,"level":0},{"x":1413,"y":796,"score":54,"level":0},{"x":481,"y":797,"score":29,"level":0},{"x":562,"y":797,"score":30,"level":0},{"x":639,"y":797,"score":35,"level":0},{"x":968,"y":797,"score":34,"level":0},{"x":1107,"y":797,"score":45,"level":0},{"x":1179,"y":797,"score":40,"level":0},{"x":1256,"y":797,"score":26,"level":0},{"x":1390,"y":797,"score":27,"level":0},{"x":389,"y":798,"score":38,"level":0},{"x":487,"y":798,"score":30,"level":0},{"x":598,"y":798,"score":27,"level":0},{"x":632,"y":798,"score":26,"level":0},{"x":688,"y":798,"score":27,"level":0},{"x":997,"y":798,"score":32,"level":0},{"x":1002,"y":798,"score":29,"level":0},{"x":1007,"y":798,"score":38,"level":0},{"x":1185,"y":798,"score":30,"level":0},{"x":1234,"y":798,"score":46,"level":0},{"x":1480,"y":798,"score":35,"level":0},{"x":377,"y":799,"score":51,"level":0},{"x":481,"y":799,"score":40,"level":0},{"x":492,"y":799,"score":28,"level":0},{"x":550,"y":799,"score":33,"level":0},{"x":642,"y":799,"score":46,"level":0},{"x":649,"y":799,"score":26,"level":0},{"x":723,"y":799,"score":26,"level":0},{"x":760,"y":799,"score":29,"level":0},{"x":1050,"y":799,"score":27,"level":0},{"x":1297,"y":799,"score":28,"level":0},{"x":1454,"y":799,"score":30,"level":0},{"x":1478,"y":799,"score":47,"level":0},{"x":390,"y":800,"score":28,"level":0},{"x":464,"y":800,"score":36,"level":0},{"x":472,"y":800,"score":31,"level":0},{"x":596,"y":800,"score":51,"level":0},{"x":733,"y":800,"score":31,"level":0},{"x":765,"y":800,"score":30,"level":0},{"x":783,"y":800,"score":54,"level":0},{"x":941,"y":800,"score":88,"level":0},{"x":1058,"y":800,"score":38,"level":0},{"x":1489,"y":800,"score":55,"level":0},{"x":393,"y":801,"score":28,"level":0},{"x":437,"y":801,"score":36,"level":0},{"x":771,"y":801,"score":51,"level":0},{"x":824,"y":801,"score":26,"level":0},{"x":1259,"y":801,"score":54,"level":0},{"x":1285,"y":801,"score":32,"level":0},{"x":1425,"y":801,"score":32,"level":0},{"x":431,"y":802,"score":29,"level":0},{"x":582,"y":802,"score":26,"level":0},{"x":810,"y":802,"score":30,"level":0},{"x":1070,"y":802,"score":51,"level":0},{"x":1317,"y":802,"score":38,"level":0},{"x":1440,"y":802,"score":31,"level":0},{"x":392,"y":803,"score":44,"level":0},{"x":453,"y":803,"score":36,"level":0},{"x":531,"y":803,"score":80,"level":0},{"x":552,"y":803,"score":38,"level":0},{"x":588,"y":803,"score":40,"level":0},{"x":816,"y":803,"score":38,"level":0},{"x":992,"y":803,"score":35,"level":0},{"x":997,"y":803,"score":33,"level":0},{"x":1432,"y":803,"score":52,"level":0},{"x":408,"y":804,"score":31,"level":0},{"x":557,"y":804,"score":27,"level":0},{"x":624,"y":804,"score":64,"level":0},{"x":648,"y":804,"score":30,"level":0},{"x":714,"y":804,"score":32,"level":0},{"x":884,"y":804,"score":28,"level":0},{"x":895,"y":804,"score":28,"level":0},{"x":900,"y":804,"score":34,"level":0},{"x":924,"y":804,"score":31,"level":0},{"x":1003,"y":804,"score":36,"level":0},{"x":1050,"y":804,"score":27,"level":0},{"x":1251,"y":804,"score":31,"level":0},{"x":1465,"y":804,"score":33,"level":0},{"x":413,"y":805,"score":44,"level":0},{"x":471,"y":805,"score":28,"level":0},{"x":616,"y":805,"score":34,"level":0},{"x":717,"y":805,"score":26,"level":0},{"x":937,"y":805,"score":62,"level":0},{"x":976,"y":805,"score":45,"level":0},{"x":1303,"y":805,"score":56,"level":0},{"x":1369,"y":805,"score":28,"level":0},{"x":1472,"y":805,"score":36,"level":0},{"x":383,"y":806,"score":29,"level":0},{"x":463,"y":806,"score":40,"level":0},{"x":517,"y":806,"score":26,"level":0},{"x":563,"y":806,"score":30,"level":0},{"x":587,"y":806,"score":46,"level":0},{"x":728,"y":806,"score":39,"level":0},{"x":734,"y":806,"score":30,"level":0},{"x":815,"y":806,"score":32,"level":0},{"x":847,"y":806,"score":31,"level":0},{"x":859,"y":806,"score":29,"level":0},{"x":944,"y":806,"score":29,"level":0},{"x":946,"y":806,"score":55,"level":0},{"x":1254,"y":806,"score":35,"level":0},{"x":1427,"y":806,"score":26,"level":0},{"x":584,"y":807,"score":27,"level":0},{"x":705,"y":807,"score":30,"level":0},{"x":781,"y":807,"score":63,"level":0},{"x":844,"y":807,"score":34,"level":0},{"x":891,"y":807,"score":28,"level":0},{"x":1282,"y":807,"score":27,"level":0},{"x":1440,"y":807,"score":33,"level":0},{"x":392,"y":808,"score":27,"level":0},{"x":423,"y":808,"score":36,"level":0},{"x":596,"y":808,"score":41,"level":0},{"x":696,"y":808,"score":37,"level":0},{"x":717,"y":808,"score":34,"level":0},{"x":974,"y":808,"score":64,"level":0},{"x":992,"y":808,"score":48,"level":0},{"x":1087,"y":808,"score":29,"level":0},{"x":1192,"y":808,"score":31,"level":0},{"x":1256,"y":808,"score":32,"level":0},{"x":1259,"y":808,"score":32,"level":0},{"x":1317,"y":808,"score":26,"level":0},{"x":377,"y":809,"score":44,"level":0},{"x":491,"y":809,"score":26,"level":0},{"x":549,"y":809,"score":54,"level":0},{"x":590,"y":809,"score":38,"level":0},{"x":773,"y":809,"score":30,"level":0},{"x":900,"y":809,"score":46,"level":0},{"x":987,"y":809,"score":46,"level":0},{"x":1050,"y":809,"score":28,"level":0},{"x":1057,"y":809,"score":38,"level":0},{"x":1215,"y":809,"score":30,"level":0},{"x":1389,"y":809,"score":51,"level":0},{"x":667,"y":810,"score":32,"level":0},{"x":850,"y":810,"score":39,"level":0},{"x":931,"y":810,"score":30,"level":0},{"x":937,"y":810,"score":27,"level":0},{"x":940,"y":810,"score":39,"level":0},{"x":1004,"y":810,"score":26,"level":0},{"x":1095,"y":810,"score":27,"level":0},{"x":1181,"y":810,"score":55,"level":0},{"x":1258,"y":810,"score":32,"level":0},{"x":1307,"y":810,"score":27,"level":0},{"x":531,"y":811,"score":28,"level":0},{"x":565,"y":811,"score":28,"level":0},{"x":615,"y":811,"score":61,"level":0},{"x":855,"y":811,"score":60,"level":0},{"x":882,"y":811,"score":40,"level":0},{"x":892,"y":811,"score":28,"level":0},{"x":981,"y":811,"score":30,"level":0},{"x":1030,"y":811,"score":37,"level":0},{"x":1040,"y":811,"score":28,"level":0},{"x":1137,"y":811,"score":38,"level":0},{"x":1346,"y":811,"score":28,"level":0},{"x":1464,"y":811,"score":28,"level":0},{"x":490,"y":812,"score":34,"level":0},{"x":549,"y":812,"score":35,"level":0},{"x":584,"y":812,"score":28,"level":0},{"x":718,"y":812,"score":32,"level":0},{"x":776,"y":812,"score":70,"level":0},{"x":820,"y":812,"score":50,"level":0},{"x":887,"y":812,"score":35,"level":0},{"x":1142,"y":812,"score":26,"level":0},{"x":1267,"y":812,"score":53,"level":0},{"x":1415,"y":812,"score":35,"level":0},{"x":1476,"y":812,"score":26,"level":0},{"x":377,"y":813,"score":37,"level":0},{"x":488,"y":813,"score":27,"level":0},{"x":501,"y":813,"score":37,"level":0},{"x":638,"y":813,"score":36,"level":0},{"x":698,"y":813,"score":72,"level":0},{"x":721,"y":813,"score":35,"level":0},{"x":761,"y":813,"score":29,"level":0},{"x":877,"y":813,"score":27,"level":0},{"x":1431,"y":813,"score":64,"level":0},{"x":424,"y":814,"score":46,"level":0},{"x":446,"y":814,"score":50,"level":0},{"x":496,"y":814,"score":37,"level":0},{"x":628,"y":814,"score":32,"level":0},{"x":1132,"y":814,"score":28,"level":0},{"x":1297,"y":814,"score":50,"level":0},{"x":1339,"y":814,"score":36,"level":0},{"x":1402,"y":814,"score":74,"level":0},{"x":511,"y":815,"score":73,"level":0},{"x":525,"y":815,"score":44,"level":0},{"x":677,"y":815,"score":31,"level":0},{"x":761,"y":815,"score":35,"level":0},{"x":771,"y":815,"score":30,"level":0},{"x":877,"y":815,"score":28,"level":0},{"x":1048,"y":815,"score":48,"level":0},{"x":1050,"y":815,"score":38,"level":0},{"x":1461,"y":815,"score":28,"level":0},{"x":583,"y":816,"score":32,"level":0},{"x":594,"y":816,"score":28,"level":0},{"x":892,"y":816,"score":29,"level":0},{"x":939,"y":816,"score":40,"level":0},{"x":1019,"y":816,"score":39,"level":0},{"x":1027,"y":816,"score":38,"level":0},{"x":1129,"y":816,"score":31,"level":0},{"x":1213,"y":816,"score":34,"level":0},{"x":1389,"y":816,"score":26,"level":0},{"x":418,"y":817,"score":29,"level":0},{"x":491,"y":817,"score":31,"level":0},{"x":536,"y":817,"score":28,"level":0},{"x":541,"y":817,"score":41,"level":0},{"x":588,"y":817,"score":26,"level":0},{"x":741,"y":817,"score":27,"level":0},{"x":764,"y":817,"score":73,"level":0},{"x":911,"y":817,"score":38,"level":0},{"x":1038,"y":817,"score":60,"level":0},{"x":1428,"y":817,"score":50,"level":0},{"x":389,"y":818,"score":43,"level":0},{"x":430,"y":818,"score":37,"level":0},{"x":482,"y":818,"score":36,"level":0},{"x":513,"y":818,"score":106,"level":0},{"x":924,"y":818,"score":40,"level":0},{"x":1057,"y":818,"score":51,"level":0},{"x":1084,"y":818,"score":28,"level":0},{"x":1092,"y":818,"score":52,"level":0},{"x":1130,"y":818,"score":29,"level":0},{"x":1178,"y":818,"score":69,"level":0},{"x":1266,"y":818,"score":27,"level":0},{"x":1271,"y":818,"score":32,"level":0},{"x":459,"y":819,"score":30,"level":0},{"x":566,"y":819,"score":33,"level":0},{"x":616,"y":819,"score":44,"level":0},{"x":1293,"y":819,"score":38,"level":0},{"x":1488,"y":819,"score":34,"level":0},{"x":569,"y":820,"score":39,"level":0},{"x":574,"y":820,"score":32,"level":0},{"x":577,"y":820,"score":45,"level":0},{"x":623,"y":820,"score":41,"level":0},{"x":643,"y":820,"score":26,"level":0},{"x":689,"y":820,"score":46,"level":0},{"x":1079,"y":820,"score":69,"level":0},{"x":1113,"y":820,"score":26,"level":0},{"x":1186,"y":820,"score":47,"level":0},{"x":1267,"y":820,"score":37,"level":0},{"x":1372,"y":820,"score":39,"level":0},{"x":1482,"y":820,"score":40,"level":0},{"x":493,"y":821,"score":26,"level":0},{"x":517,"y":821,"score":49,"level":0},{"x":694,"y":821,"score":36,"level":0},{"x":826,"y":821,"score":41,"level":0},{"x":856,"y":821,"score":63,"level":0},{"x":918,"y":821,"score":45,"level":0},{"x":955,"y":821,"score":67,"level":0},{"x":977,"y":821,"score":76,"level":0},{"x":1008,"y":821,"score":28,"level":0},{"x":1310,"y":821,"score":31,"level":0},{"x":1397,"y":821,"score":41,"level":0},{"x":535,"y":822,"score":33,"level":0},{"x":586,"y":822,"score":29,"level":0},{"x":719,"y":822,"score":29,"level":0},{"x":875,"y":822,"score":26,"level":0},{"x":985,"y":822,"score":48,"level":0},{"x":1024,"y":822,"score":26,"level":0},{"x":1028,"y":822,"score":32,"level":0},{"x":1038,"y":822,"score":35,"level":0},{"x":1338,"y":822,"score":50,"level":0},{"x":1344,"y":822,"score":28,"level":0},{"x":1351,"y":822,"score":27,"level":0},{"x":398,"y":823,"score":28,"level":0},{"x":444,"y":823,"score":54,"level":0},{"x":446,"y":823,"score":56,"level":0},{"x":525,"y":823,"score":79,"level":0},{"x":539,"y":823,"score":27,"level":0},{"x":550,"y":823,"score":32,"level":0},{"x":924,"y":823,"score":35,"level":0},{"x":926,"y":823,"score":29,"level":0},{"x":1301,"y":823,"score":26,"level":0},{"x":1372,"y":823,"score":27,"level":0},{"x":1382,"y":823,"score":28,"level":0},{"x":653,"y":824,"score":41,"level":0},{"x":781,"y":824,"score":53,"level":0},{"x":834,"y":824,"score":40,"level":0},{"x":864,"y":824,"score":35,"level":0},{"x":869,"y":824,"score":60,"level":0},{"x":880,"y":824,"score":26,"level":0},{"x":1130,"y":824,"score":27,"level":0},{"x":1226,"y":824,"score":26,"level":0},{"x":1325,"y":824,"score":32,"level":0},{"x":481,"y":825,"score":49,"level":0},{"x":766,"y":825,"score":30,"level":0},{"x":768,"y":825,"score":27,"level":0},{"x":796,"y":825,"score":33,"level":0},{"x":821,"y":825,"score":29,"level":0},{"x":932,"y":825,"score":30,"level":0},{"x":1189,"y":825,"score":30,"level":0},{"x":1359,"y":825,"score":26,"level":0},{"x":1486,"y":825,"score":30,"level":0},{"x":447,"y":826,"score":44,"level":0},{"x":512,"y":826,"score":103,"level":0},{"x":577,"y":826,"score":29,"level":0},{"x":582,"y":826,"score":31,"level":0},{"x":602,"y":826,"score":43,"level":0},{"x":607,"y":826,"score":69,"level":0},{"x":886,"y":826,"score":32,"level":0},{"x":939,"y":826,"score":33,"level":0},{"x":993,"y":826,"score":27,"level":0},{"x":1011,"y":826,"score":40,"level":0},{"x":1016,"y":826,"score":27,"level":0},{"x":1033,"y":826,"score":30,"level":0},{"x":1061,"y":826,"score":27,"level":0},{"x":1129,"y":826,"score":26,"level":0},{"x":1266,"y":826,"score":46,"level":0},{"x":1308,"y":826,"score":27,"level":0},{"x":1374,"y":826,"score":26,"level":0},{"x":1397,"y":826,"score":36,"level":0},{"x":1410,"y":826,"score":48,"level":0},{"x":1471,"y":826,"score":29,"level":0},{"x":384,"y":827,"score":30,"level":0},{"x":449,"y":827,"score":31,"level":0},{"x":463,"y":827,"score":27,"level":0},{"x":486,"y":827,"score":41,"level":0},{"x":612,"y":827,"score":31,"level":0},{"x":628,"y":827,"score":27,"level":0},{"x":638,"y":827,"score":28,"level":0},{"x":707,"y":827,"score":32,"level":0},{"x":783,"y":827,"score":75,"level":0},{"x":948,"y":827,"score":38,"level":0},{"x":965,"y":827,"score":33,"level":0},{"x":1074,"y":827,"score":29,"level":0},{"x":1079,"y":827,"score":63,"level":0},{"x":1271,"y":827,"score":29,"level":0},{"x":377,"y":828,"score":42,"level":0},{"x":536,"y":828,"score":52,"level":0},{"x":559,"y":828,"score":28,"level":0},{"x":724,"y":828,"score":30,"level":0},{"x":728,"y":828,"score":26,"level":0},{"x":762,"y":828,"score":36,"level":0},{"x":764,"y":828,"score":46,"level":0},{"x":812,"y":828,"score":35,"level":0},{"x":854,"y":828,"score":34,"level":0},{"x":1028,"y":828,"score":30,"level":0},{"x":1182,"y":828,"score":28,"level":0},{"x":1187,"y":828,"score":37,"level":0},{"x":1381,"y":828,"score":29,"level":0},{"x":1402,"y":828,"score":34,"level":0},{"x":1451,"y":828,"score":38,"level":0},{"x":496,"y":829,"score":33,"level":0},{"x":522,"y":829,"score":85,"level":0},{"x":634,"y":829,"score":34,"level":0},{"x":760,"y":829,"score":42,"level":0},{"x":865,"y":829,"score":38,"level":0},{"x":950,"y":829,"score":30,"level":0},{"x":1082,"y":829,"score":32,"level":0},{"x":1109,"y":829,"score":30,"level":0},{"x":1180,"y":829,"score":35,"level":0},{"x":1338,"y":829,"score":34,"level":0},{"x":1376,"y":829,"score":30,"level":0},{"x":616,"y":830,"score":36,"level":0},{"x":696,"y":830,"score":30,"level":0},{"x":736,"y":830,"score":48,"level":0},{"x":739,"y":830,"score":26,"level":0},{"x":815,"y":830,"score":26,"level":0},{"x":819,"y":830,"score":32,"level":0},{"x":860,"y":830,"score":48,"level":0},{"x":902,"y":830,"score":29,"level":0},{"x":1213,"y":830,"score":37,"level":0},{"x":1287,"y":830,"score":30,"level":0},{"x":1354,"y":830,"score":27,"level":0},{"x":1490,"y":830,"score":26,"level":0},{"x":492,"y":831,"score":30,"level":0},{"x":515,"y":831,"score":59,"level":0},{"x":589,"y":831,"score":62,"level":0},{"x":692,"y":831,"score":55,"level":0},{"x":751,"y":831,"score":53,"level":0},{"x":771,"y":831,"score":50,"level":0},{"x":793,"y":831,"score":32,"level":0},{"x":1181,"y":831,"score":54,"level":0},{"x":1190,"y":831,"score":31,"level":0},{"x":1216,"y":831,"score":30,"level":0},{"x":1282,"y":831,"score":31,"level":0},{"x":1325,"y":831,"score":50,"level":0},{"x":384,"y":832,"score":32,"level":0},{"x":414,"y":832,"score":26,"level":0},{"x":432,"y":832,"score":31,"level":0},{"x":539,"y":832,"score":32,"level":0},{"x":879,"y":832,"score":33,"level":0},{"x":1010,"y":832,"score":27,"level":0},{"x":1126,"y":832,"score":34,"level":0},{"x":1131,"y":832,"score":26,"level":0},{"x":1271,"y":832,"score":40,"level":0},{"x":537,"y":833,"score":48,"level":0},{"x":575,"y":833,"score":28,"level":0},{"x":976,"y":833,"score":52,"level":0},{"x":1001,"y":833,"score":44,"level":0},{"x":1149,"y":833,"score":38,"level":0},{"x":1254,"y":833,"score":38,"level":0},{"x":1308,"y":833,"score":58,"level":0},{"x":1409,"y":833,"score":36,"level":0},{"x":569,"y":834,"score":40,"level":0},{"x":708,"y":834,"score":26,"level":0},{"x":780,"y":834,"score":34,"level":0},{"x":809,"y":834,"score":30,"level":0},{"x":815,"y":834,"score":29,"level":0},{"x":829,"y":834,"score":41,"level":0},{"x":867,"y":834,"score":39,"level":0},{"x":872,"y":834,"score":36,"level":0},{"x":1047,"y":834,"score":26,"level":0},{"x":1204,"y":834,"score":41,"level":0},{"x":1259,"y":834,"score":30,"level":0},{"x":1284,"y":834,"score":62,"level":0},{"x":1315,"y":834,"score":33,"level":0},{"x":433,"y":835,"score":28,"level":0},{"x":578,"y":835,"score":27,"level":0},{"x":629,"y":835,"score":41,"level":0},{"x":634,"y":835,"score":28,"level":0},{"x":720,"y":835,"score":27,"level":0},{"x":739,"y":835,"score":29,"level":0},{"x":800,"y":835,"score":33,"level":0},{"x":951,"y":835,"score":36,"level":0},{"x":1303,"y":835,"score":32,"level":0},{"x":1375,"y":835,"score":29,"level":0},{"x":598,"y":836,"score":36,"level":0},{"x":611,"y":836,"score":31,"level":0},{"x":666,"y":836,"score":29,"level":0},{"x":737,"y":836,"score":26,"level":0},{"x":753,"y":836,"score":26,"level":0},{"x":985,"y":836,"score":30,"level":0},{"x":1044,"y":836,"score":32,"level":0},{"x":377,"y":837,"score":43,"level":0},{"x":464,"y":837,"score":27,"level":0},{"x":469,"y":837,"score":26,"level":0},{"x":709,"y":837,"score":36,"level":0},{"x":903,"y":837,"score":39,"level":0},{"x":1020,"y":837,"score":36,"level":0},{"x":1102,"y":837,"score":28,"level":0},{"x":1280,"y":837,"score":40,"level":0},{"x":1411,"y":837,"score":34,"level":0},{"x":533,"y":838,"score":28,"level":0},{"x":901,"y":838,"score":44,"level":0},{"x":913,"y":838,"score":32,"level":0},{"x":1197,"y":838,"score":32,"level":0},{"x":410,"y":839,"score":37,"level":0},{"x":523,"y":839,"score":36,"level":0},{"x":642,"y":839,"score":47,"level":0},{"x":652,"y":839,"score":44,"level":0},{"x":780,"y":839,"score":33,"level":0},{"x":794,"y":839,"score":30,"level":0},{"x":915,"y":839,"score":34,"level":0},{"x":1069,"y":839,"score":35,"level":0},{"x":463,"y":840,"score":27,"level":0},{"x":500,"y":840,"score":42,"level":0},{"x":505,"y":840,"score":30,"level":0},{"x":564,"y":840,"score":30,"level":0},{"x":604,"y":840,"score":27,"level":0},{"x":647,"y":840,"score":30,"level":0},{"x":887,"y":840,"score":35,"level":0},{"x":902,"y":840,"score":42,"level":0},{"x":1146,"y":840,"score":43,"level":0},{"x":434,"y":841,"score":74,"level":0},{"x":569,"y":841,"score":37,"level":0},{"x":813,"y":841,"score":29,"level":0},{"x":950,"y":841,"score":45,"level":0},{"x":979,"y":841,"score":39,"level":0},{"x":1033,"y":841,"score":64,"level":0},{"x":1073,"y":841,"score":32,"level":0},{"x":1152,"y":841,"score":48,"level":0},{"x":1192,"y":841,"score":31,"level":0},{"x":1225,"y":841,"score":29,"level":0},{"x":1309,"y":841,"score":48,"level":0},{"x":1315,"y":841,"score":37,"level":0},{"x":426,"y":842,"score":58,"level":0},{"x":571,"y":842,"score":48,"level":0},{"x":837,"y":842,"score":27,"level":0},{"x":1079,"y":842,"score":32,"level":0},{"x":1128,"y":842,"score":27,"level":0},{"x":1210,"y":842,"score":37,"level":0},{"x":1355,"y":842,"score":39,"level":0},{"x":1374,"y":842,"score":31,"level":0},{"x":1483,"y":842,"score":34,"level":0},{"x":544,"y":843,"score":35,"level":0},{"x":762,"y":843,"score":36,"level":0},{"x":922,"y":843,"score":35,"level":0},{"x":987,"y":843,"score":32,"level":0},{"x":1218,"y":843,"score":28,"level":0},{"x":1446,"y":843,"score":28,"level":0},{"x":514,"y":844,"score":31,"level":0},{"x":525,"y":844,"score":76,"level":0},{"x":571,"y":844,"score":48,"level":0},{"x":601,"y":844,"score":46,"level":0},{"x":624,"y":844,"score":46,"level":0},{"x":722,"y":844,"score":30,"level":0},{"x":751,"y":844,"score":33,"level":0},{"x":759,"y":844,"score":31,"level":0},{"x":778,"y":844,"score":28,"level":0},{"x":825,"y":844,"score":27,"level":0},{"x":981,"y":844,"score":36,"level":0},{"x":496,"y":845,"score":29,"level":0},{"x":531,"y":845,"score":32,"level":0},{"x":685,"y":845,"score":32,"level":0},{"x":697,"y":845,"score":45,"level":0},{"x":766,"y":845,"score":27,"level":0},{"x":924,"y":845,"score":54,"level":0},{"x":960,"y":845,"score":27,"level":0},{"x":1252,"y":845,"score":28,"level":0},{"x":1287,"y":845,"score":28,"level":0},{"x":1441,"y":845,"score":50,"level":0},{"x":1488,"y":845,"score":34,"level":0},{"x":486,"y":846,"score":28,"level":0},{"x":658,"y":846,"score":57,"level":0},{"x":664,"y":846,"score":39,"level":0},{"x":728,"y":846,"score":48,"level":0},{"x":784,"y":846,"score":44,"level":0},{"x":891,"y":846,"score":41,"level":0},{"x":1063,"y":846,"score":63,"level":0},{"x":1365,"y":846,"score":31,"level":0},{"x":1399,"y":846,"score":43,"level":0},{"x":1453,"y":846,"score":26,"level":0},{"x":423,"y":847,"score":41,"level":0},{"x":535,"y":847,"score":44,"level":0},{"x":540,"y":847,"score":27,"level":0},{"x":867,"y":847,"score":41,"level":0},{"x":967,"y":847,"score":49,"level":0},{"x":1006,"y":847,"score":29,"level":0},{"x":1033,"y":847,"score":34,"level":0},{"x":425,"y":848,"score":44,"level":0},{"x":463,"y":848,"score":27,"level":0},{"x":521,"y":848,"score":42,"level":0},{"x":715,"y":848,"score":29,"level":0},{"x":757,"y":848,"score":39,"level":0},{"x":762,"y":848,"score":46,"level":0},{"x":767,"y":848,"score":42,"level":0},{"x":880,"y":848,"score":54,"level":0},{"x":904,"y":848,"score":38,"level":0},{"x":985,"y":848,"score":32,"level":0},{"x":1098,"y":848,"score":38,"level":0},{"x":436,"y":849,"score":35,"level":0},{"x":443,"y":849,"score":32,"level":0},{"x":491,"y":849,"score":40,"level":0},{"x":499,"y":849,"score":30,"level":0},{"x":544,"y":849,"score":43,"level":0},{"x":549,"y":849,"score":31,"level":0},{"x":644,"y":849,"score":26,"level":0},{"x":681,"y":849,"score":45,"level":0},{"x":798,"y":849,"score":33,"level":0},{"x":954,"y":849,"score":54,"level":0},{"x":1143,"y":849,"score":34,"level":0},{"x":1145,"y":849,"score":44,"level":0},{"x":1200,"y":849,"score":28,"level":0},{"x":404,"y":850,"score":59,"level":0},{"x":817,"y":850,"score":28,"level":0},{"x":932,"y":850,"score":32,"level":0},{"x":1049,"y":850,"score":58,"level":0},{"x":1236,"y":850,"score":30,"level":0},{"x":1276,"y":850,"score":40,"level":0},{"x":1350,"y":850,"score":30,"level":0},{"x":695,"y":851,"score":26,"level":0},{"x":751,"y":851,"score":26,"level":0},{"x":757,"y":851,"score":44,"level":0},{"x":760,"y":851,"score":36,"level":0},{"x":925,"y":851,"score":30,"level":0},{"x":939,"y":851,"score":38,"level":0},{"x":1477,"y":851,"score":36,"level":0},{"x":428,"y":852,"score":48,"level":0},{"x":557,"y":852,"score":27,"level":0},{"x":575,"y":852,"score":33,"level":0},{"x":599,"y":852,"score":26,"level":0},{"x":889,"y":852,"score":28,"level":0},{"x":898,"y":852,"score":33,"level":0},{"x":1072,"y":852,"score":28,"level":0},{"x":1180,"y":852,"score":52,"level":0},{"x":1228,"y":852,"score":28,"level":0},{"x":1270,"y":852,"score":26,"level":0},{"x":450,"y":853,"score":30,"level":0},{"x":488,"y":853,"score":27,"level":0},{"x":679,"y":853,"score":26,"level":0},{"x":684,"y":853,"score":42,"level":0},{"x":999,"y":853,"score":29,"level":0},{"x":1051,"y":853,"score":47,"level":0},{"x":1108,"y":853,"score":32,"level":0},{"x":1138,"y":853,"score":38,"level":0},{"x":1247,"y":853,"score":39,"level":0},{"x":1323,"y":853,"score":40,"level":0},{"x":377,"y":854,"score":28,"level":0},{"x":401,"y":854,"score":36,"level":0},{"x":408,"y":854,"score":31,"level":0},{"x":429,"y":854,"score":49,"level":0},{"x":523,"y":854,"score":33,"level":0},{"x":528,"y":854,"score":26,"level":0},{"x":645,"y":854,"score":37,"level":0},{"x":660,"y":854,"score":52,"level":0},{"x":759,"y":854,"score":34,"level":0},{"x":877,"y":854,"score":44,"level":0},{"x":887,"y":854,"score":28,"level":0},{"x":1140,"y":854,"score":38,"level":0},{"x":1145,"y":854,"score":36,"level":0},{"x":1198,"y":854,"score":34,"level":0},{"x":421,"y":855,"score":90,"level":0},{"x":519,"y":855,"score":28,"level":0},{"x":574,"y":855,"score":33,"level":0},{"x":591,"y":855,"score":45,"level":0},{"x":597,"y":855,"score":34,"level":0},{"x":607,"y":855,"score":37,"level":0},{"x":921,"y":855,"score":30,"level":0},{"x":1115,"y":855,"score":29,"level":0},{"x":1117,"y":855,"score":30,"level":0},{"x":1414,"y":855,"score":60,"level":0},{"x":1450,"y":855,"score":32,"level":0},{"x":479,"y":856,"score":32,"level":0},{"x":558,"y":856,"score":31,"level":0},{"x":613,"y":856,"score":34,"level":0},{"x":683,"y":856,"score":44,"level":0},{"x":700,"y":856,"score":39,"level":0},{"x":833,"y":856,"score":33,"level":0},{"x":864,"y":856,"score":32,"level":0},{"x":869,"y":856,"score":45,"level":0},{"x":953,"y":856,"score":50,"level":0},{"x":958,"y":856,"score":29,"level":0},{"x":981,"y":856,"score":30,"level":0},{"x":1098,"y":856,"score":27,"level":0},{"x":1125,"y":856,"score":27,"level":0},{"x":1153,"y":856,"score":34,"level":0},{"x":1193,"y":856,"score":32,"level":0},{"x":1444,"y":856,"score":31,"level":0},{"x":482,"y":857,"score":29,"level":0},{"x":791,"y":857,"score":31,"level":0},{"x":847,"y":857,"score":35,"level":0},{"x":1084,"y":857,"score":39,"level":0},{"x":1086,"y":857,"score":37,"level":0},{"x":1169,"y":857,"score":34,"level":0},{"x":444,"y":858,"score":30,"level":0},{"x":459,"y":858,"score":40,"level":0},{"x":520,"y":858,"score":30,"level":0},{"x":579,"y":858,"score":30,"level":0},{"x":718,"y":858,"score":34,"level":0},{"x":780,"y":858,"score":30,"level":0},{"x":1065,"y":858,"score":32,"level":0},{"x":1180,"y":858,"score":28,"level":0},{"x":1292,"y":858,"score":66,"level":0},{"x":1321,"y":858,"score":46,"level":0},{"x":1409,"y":858,"score":32,"level":0},{"x":464,"y":859,"score":40,"level":0},{"x":522,"y":859,"score":38,"level":0},{"x":528,"y":859,"score":27,"level":0},{"x":544,"y":859,"score":26,"level":0},{"x":662,"y":859,"score":27,"level":0},{"x":797,"y":859,"score":39,"level":0},{"x":1041,"y":859,"score":26,"level":0},{"x":1217,"y":859,"score":26,"level":0},{"x":1279,"y":859,"score":34,"level":0},{"x":459,"y":860,"score":27,"level":0},{"x":484,"y":860,"score":37,"level":0},{"x":533,"y":860,"score":38,"level":0},{"x":572,"y":860,"score":56,"level":0},{"x":578,"y":860,"score":52,"level":0},{"x":675,"y":860,"score":28,"level":0},{"x":887,"y":860,"score":26,"level":0},{"x":905,"y":860,"score":29,"level":0},{"x":960,"y":860,"score":44,"level":0},{"x":965,"y":860,"score":27,"level":0},{"x":1047,"y":860,"score":49,"level":0},{"x":1449,"y":860,"score":32,"level":0},{"x":448,"y":861,"score":45,"level":0},{"x":604,"y":861,"score":49,"level":0},{"x":717,"y":861,"score":28,"level":0},{"x":909,"y":861,"score":33,"level":0},{"x":1013,"y":861,"score":46,"level":0},{"x":1158,"y":861,"score":38,"level":0},{"x":1257,"y":861,"score":42,"level":0},{"x":1268,"y":861,"score":42,"level":0},{"x":1397,"y":861,"score":43,"level":0},{"x":475,"y":862,"score":33,"level":0},{"x":593,"y":862,"score":44,"level":0},{"x":610,"y":862,"score":60,"level":0},{"x":618,"y":862,"score":35,"level":0},{"x":686,"y":862,"score":33,"level":0},{"x":701,"y":862,"score":30,"level":0},{"x":822,"y":862,"score":56,"level":0},{"x":868,"y":862,"score":39,"level":0},{"x":895,"y":862,"score":30,"level":0},{"x":912,"y":862,"score":28,"level":0},{"x":992,"y":862,"score":28,"level":0},{"x":1007,"y":862,"score":36,"level":0},{"x":1125,"y":862,"score":28,"level":0},{"x":1147,"y":862,"score":51,"level":0},{"x":1225,"y":862,"score":49,"level":0},{"x":1273,"y":862,"score":29,"level":0},{"x":1350,"y":862,"score":29,"level":0},{"x":1414,"y":862,"score":62,"level":0},{"x":391,"y":863,"score":26,"level":0},{"x":625,"y":863,"score":28,"level":0},{"x":754,"y":863,"score":40,"level":0},{"x":781,"y":863,"score":30,"level":0},{"x":879,"y":863,"score":26,"level":0},{"x":931,"y":863,"score":26,"level":0},{"x":1141,"y":863,"score":29,"level":0},{"x":1176,"y":863,"score":33,"level":0},{"x":1193,"y":863,"score":37,"level":0},{"x":1288,"y":863,"score":76,"level":0},{"x":448,"y":864,"score":31,"level":0},{"x":503,"y":864,"score":43,"level":0},{"x":652,"y":864,"score":34,"level":0},{"x":757,"y":864,"score":28,"level":0},{"x":902,"y":864,"score":26,"level":0},{"x":1043,"y":864,"score":67,"level":0},{"x":1166,"y":864,"score":32,"level":0},{"x":417,"y":865,"score":44,"level":0},{"x":465,"y":865,"score":28,"level":0},{"x":470,"y":865,"score":33,"level":0},{"x":718,"y":865,"score":35,"level":0},{"x":889,"y":865,"score":45,"level":0},{"x":1153,"y":865,"score":37,"level":0},{"x":1195,"y":865,"score":47,"level":0},{"x":1449,"y":865,"score":42,"level":0},{"x":456,"y":866,"score":30,"level":0},{"x":710,"y":866,"score":31,"level":0},{"x":723,"y":866,"score":36,"level":0},{"x":960,"y":866,"score":43,"level":0},{"x":993,"y":866,"score":28,"level":0},{"x":1107,"y":866,"score":29,"level":0},{"x":1391,"y":866,"score":37,"level":0},{"x":610,"y":867,"score":42,"level":0},{"x":686,"y":867,"score":41,"level":0},{"x":807,"y":867,"score":29,"level":0},{"x":812,"y":867,"score":32,"level":0},{"x":891,"y":867,"score":57,"level":0},{"x":979,"y":867,"score":28,"level":0},{"x":1212,"y":867,"score":64,"level":0},{"x":1265,"y":867,"score":33,"level":0},{"x":1409,"y":867,"score":50,"level":0},{"x":377,"y":868,"score":26,"level":0},{"x":427,"y":868,"score":29,"level":0},{"x":438,"y":868,"score":28,"level":0},{"x":594,"y":868,"score":45,"level":0},{"x":658,"y":868,"score":64,"level":0},{"x":819,"y":868,"score":26,"level":0},{"x":849,"y":868,"score":83,"level":0},{"x":851,"y":868,"score":64,"level":0},{"x":909,"y":868,"score":32,"level":0},{"x":918,"y":868,"score":38,"level":0},{"x":941,"y":868,"score":40,"level":0},{"x":943,"y":868,"score":36,"level":0},{"x":952,"y":868,"score":43,"level":0},{"x":960,"y":868,"score":46,"level":0},{"x":1090,"y":868,"score":60,"level":0},{"x":1095,"y":868,"score":26,"level":0},{"x":1197,"y":868,"score":66,"level":0},{"x":1325,"y":868,"score":31,"level":0},{"x":383,"y":869,"score":48,"level":0},{"x":562,"y":869,"score":40,"level":0},{"x":667,"y":869,"score":42,"level":0},{"x":760,"y":869,"score":42,"level":0},{"x":772,"y":869,"score":26,"level":0},{"x":791,"y":869,"score":30,"level":0},{"x":844,"y":869,"score":27,"level":0},{"x":871,"y":869,"score":32,"level":0},{"x":1040,"y":869,"score":90,"level":0},{"x":1099,"y":869,"score":30,"level":0},{"x":423,"y":870,"score":30,"level":0},{"x":463,"y":870,"score":32,"level":0},{"x":706,"y":870,"score":28,"level":0},{"x":826,"y":870,"score":38,"level":0},{"x":877,"y":870,"score":60,"level":0},{"x":963,"y":870,"score":64,"level":0},{"x":968,"y":870,"score":30,"level":0},{"x":1009,"y":870,"score":48,"level":0},{"x":1222,"y":870,"score":35,"level":0},{"x":1256,"y":870,"score":26,"level":0},{"x":1326,"y":870,"score":37,"level":0},{"x":446,"y":871,"score":35,"level":0},{"x":509,"y":871,"score":33,"level":0},{"x":515,"y":871,"score":28,"level":0},{"x":551,"y":871,"score":27,"level":0},{"x":674,"y":871,"score":30,"level":0},{"x":695,"y":871,"score":30,"level":0},{"x":1165,"y":871,"score":36,"level":0},{"x":1237,"y":871,"score":26,"level":0},{"x":1272,"y":871,"score":34,"level":0},{"x":1319,"y":871,"score":34,"level":0},{"x":385,"y":872,"score":67,"level":0},{"x":457,"y":872,"score":32,"level":0},{"x":505,"y":872,"score":35,"level":0},{"x":521,"y":872,"score":36,"level":0},{"x":617,"y":872,"score":37,"level":0},{"x":665,"y":872,"score":33,"level":0},{"x":676,"y":872,"score":55,"level":0},{"x":747,"y":872,"score":26,"level":0},{"x":798,"y":872,"score":32,"level":0},{"x":878,"y":872,"score":37,"level":0},{"x":1081,"y":872,"score":41,"level":0},{"x":1128,"y":872,"score":38,"level":0},{"x":630,"y":873,"score":48,"level":0},{"x":714,"y":873,"score":29,"level":0},{"x":753,"y":873,"score":57,"level":0},{"x":1186,"y":873,"score":34,"level":0},{"x":1287,"y":873,"score":46,"level":0},{"x":1405,"y":873,"score":33,"level":0},{"x":1456,"y":873,"score":35,"level":0},{"x":447,"y":874,"score":26,"level":0},{"x":469,"y":874,"score":26,"level":0},{"x":540,"y":874,"score":30,"level":0},{"x":545,"y":874,"score":40,"level":0},{"x":1443,"y":874,"score":36,"level":0},{"x":418,"y":875,"score":41,"level":0},{"x":424,"y":875,"score":27,"level":0},{"x":429,"y":875,"score":28,"level":0},{"x":463,"y":875,"score":42,"level":0},{"x":769,"y":875,"score":28,"level":0},{"x":778,"y":875,"score":30,"level":0},{"x":1041,"y":875,"score":49,"level":0},{"x":1171,"y":875,"score":30,"level":0},{"x":1212,"y":875,"score":37,"level":0},{"x":1247,"y":875,"score":30,"level":0},{"x":1411,"y":875,"score":35,"level":0},{"x":515,"y":876,"score":27,"level":0},{"x":551,"y":876,"score":42,"level":0},{"x":562,"y":876,"score":44,"level":0},{"x":576,"y":876,"score":51,"level":0},{"x":636,"y":876,"score":29,"level":0},{"x":725,"y":876,"score":32,"level":0},{"x":758,"y":876,"score":43,"level":0},{"x":1008,"y":876,"score":70,"level":0},{"x":1103,"y":876,"score":47,"level":0},{"x":474,"y":877,"score":36,"level":0},{"x":590,"y":877,"score":28,"level":0},{"x":597,"y":877,"score":29,"level":0},{"x":669,"y":877,"score":51,"level":0},{"x":888,"y":877,"score":44,"level":0},{"x":942,"y":877,"score":30,"level":0},{"x":989,"y":877,"score":32,"level":0},{"x":1049,"y":877,"score":33,"level":0},{"x":1109,"y":877,"score":32,"level":0},{"x":1198,"y":877,"score":40,"level":0},{"x":628,"y":878,"score":28,"level":0},{"x":790,"y":878,"score":31,"level":0},{"x":856,"y":878,"score":52,"level":0},{"x":893,"y":878,"score":33,"level":0},{"x":1193,"y":878,"score":59,"level":0},{"x":1392,"y":878,"score":30,"level":0},{"x":377,"y":879,"score":49,"level":0},{"x":410,"y":879,"score":26,"level":0},{"x":602,"y":879,"score":52,"level":0},{"x":631,"y":879,"score":29,"level":0},{"x":663,"y":879,"score":26,"level":0},{"x":672,"y":879,"score":36,"level":0},{"x":720,"y":879,"score":29,"level":0},{"x":913,"y":879,"score":30,"level":0},{"x":930,"y":879,"score":26,"level":0},{"x":1141,"y":879,"score":26,"level":0},{"x":1222,"y":879,"score":53,"level":0},{"x":1230,"y":879,"score":28,"level":0},{"x":1398,"y":879,"score":40,"level":0},{"x":1437,"y":879,"score":38,"level":0},{"x":1443,"y":879,"score":44,"level":0},{"x":512,"y":880,"score":44,"level":0},{"x":649,"y":880,"score":39,"level":0},{"x":702,"y":880,"score":43,"level":0},{"x":830,"y":880,"score":74,"level":0},{"x":882,"y":880,"score":26,"level":0},{"x":907,"y":880,"score":34,"level":0},{"x":920,"y":880,"score":44,"level":0},{"x":1062,"y":880,"score":26,"level":0},{"x":1165,"y":880,"score":26,"level":0},{"x":1250,"y":880,"score":45,"level":0},{"x":1350,"y":880,"score":28,"level":0},{"x":570,"y":881,"score":32,"level":0},{"x":586,"y":881,"score":40,"level":0},{"x":592,"y":881,"score":37,"level":0},{"x":594,"y":881,"score":33,"level":0},{"x":673,"y":881,"score":29,"level":0},{"x":834,"y":881,"score":32,"level":0},{"x":839,"y":881,"score":52,"level":0},{"x":925,"y":881,"score":34,"level":0},{"x":1103,"y":881,"score":30,"level":0},{"x":1188,"y":881,"score":35,"level":0},{"x":497,"y":882,"score":41,"level":0},{"x":502,"y":882,"score":71,"level":0},{"x":712,"y":882,"score":26,"level":0},{"x":845,"y":882,"score":28,"level":0},{"x":854,"y":882,"score":57,"level":0},{"x":1085,"y":882,"score":37,"level":0},{"x":1092,"y":882,"score":27,"level":0},{"x":1343,"y":882,"score":30,"level":0},{"x":407,"y":883,"score":30,"level":0},{"x":596,"y":883,"score":36,"level":0},{"x":676,"y":883,"score":46,"level":0},{"x":893,"y":883,"score":31,"level":0},{"x":962,"y":883,"score":42,"level":0},{"x":1006,"y":883,"score":27,"level":0},{"x":1155,"y":883,"score":36,"level":0},{"x":1165,"y":883,"score":35,"level":0},{"x":1284,"y":883,"score":42,"level":0},{"x":539,"y":884,"score":34,"level":0},{"x":607,"y":884,"score":33,"level":0},{"x":638,"y":884,"score":28,"level":0},{"x":774,"y":884,"score":30,"level":0},{"x":811,"y":884,"score":44,"level":0},{"x":813,"y":884,"score":32,"level":0},{"x":975,"y":884,"score":34,"level":0},{"x":1134,"y":884,"score":30,"level":0},{"x":1240,"y":884,"score":38,"level":0},{"x":414,"y":885,"score":39,"level":0},{"x":549,"y":885,"score":28,"level":0},{"x":555,"y":885,"score":39,"level":0},{"x":647,"y":885,"score":48,"level":0},{"x":745,"y":885,"score":35,"level":0},{"x":818,"y":885,"score":42,"level":0},{"x":820,"y":885,"score":62,"level":0},{"x":859,"y":885,"score":41,"level":0},{"x":864,"y":885,"score":70,"level":0},{"x":920,"y":885,"score":30,"level":0},{"x":1290,"y":885,"score":43,"level":0},{"x":589,"y":886,"score":31,"level":0},{"x":624,"y":886,"score":26,"level":0},{"x":638,"y":886,"score":27,"level":0},{"x":757,"y":886,"score":30,"level":0},{"x":792,"y":886,"score":36,"level":0},{"x":839,"y":886,"score":36,"level":0},{"x":1004,"y":886,"score":59,"level":0},{"x":1071,"y":886,"score":29,"level":0},{"x":1250,"y":886,"score":48,"level":0},{"x":397,"y":887,"score":30,"level":0},{"x":517,"y":887,"score":36,"level":0},{"x":523,"y":887,"score":35,"level":0},{"x":533,"y":887,"score":49,"level":0},{"x":723,"y":887,"score":61,"level":0},{"x":797,"y":887,"score":33,"level":0},{"x":886,"y":887,"score":31,"level":0},{"x":915,"y":887,"score":33,"level":0},{"x":942,"y":887,"score":28,"level":0},{"x":955,"y":887,"score":42,"level":0},{"x":1265,"y":887,"score":58,"level":0},{"x":1269,"y":887,"score":30,"level":0},{"x":473,"y":888,"score":36,"level":0},{"x":893,"y":888,"score":37,"level":0},{"x":403,"y":889,"score":36,"level":0},{"x":456,"y":889,"score":30,"level":0},{"x":539,"y":889,"score":27,"level":0},{"x":544,"y":889,"score":32,"level":0},{"x":586,"y":889,"score":40,"level":0},{"x":600,"y":889,"score":34,"level":0},{"x":756,"y":889,"score":26,"level":0},{"x":1036,"y":889,"score":40,"level":0},{"x":1041,"y":889,"score":60,"level":0},{"x":1128,"y":889,"score":26,"level":0},{"x":1188,"y":889,"score":28,"level":0},{"x":1240,"y":889,"score":30,"level":0},{"x":1436,"y":889,"score":35,"level":0},{"x":607,"y":890,"score":26,"level":0},{"x":678,"y":890,"score":32,"level":0},{"x":685,"y":890,"score":35,"level":0},{"x":795,"y":890,"score":29,"level":0},{"x":811,"y":890,"score":37,"level":0},{"x":1101,"y":890,"score":34,"level":0},{"x":1181,"y":890,"score":36,"level":0},{"x":1333,"y":890,"score":40,"level":0},{"x":1462,"y":890,"score":32,"level":0},{"x":1471,"y":890,"score":30,"level":0},{"x":408,"y":891,"score":36,"level":0},{"x":700,"y":891,"score":44,"level":0},{"x":705,"y":891,"score":54,"level":0},{"x":748,"y":891,"score":41,"level":0},{"x":864,"y":891,"score":65,"level":0},{"x":992,"y":891,"score":28,"level":0},{"x":1010,"y":891,"score":65,"level":0},{"x":1059,"y":891,"score":30,"level":0},{"x":1071,"y":891,"score":39,"level":0},{"x":1222,"y":891,"score":49,"level":0},{"x":459,"y":892,"score":35,"level":0},{"x":471,"y":892,"score":29,"level":0},{"x":494,"y":892,"score":62,"level":0},{"x":578,"y":892,"score":30,"level":0},{"x":753,"y":892,"score":36,"level":0},{"x":839,"y":892,"score":38,"level":0},{"x":1004,"y":892,"score":30,"level":0},{"x":1446,"y":892,"score":27,"level":0},{"x":508,"y":893,"score":28,"level":0},{"x":560,"y":893,"score":26,"level":0},{"x":646,"y":893,"score":44,"level":0},{"x":676,"y":893,"score":28,"level":0},{"x":697,"y":893,"score":28,"level":0},{"x":758,"y":893,"score":28,"level":0},{"x":760,"y":893,"score":36,"level":0},{"x":765,"y":893,"score":44,"level":0},{"x":927,"y":893,"score":41,"level":0},{"x":940,"y":893,"score":68,"level":0},{"x":945,"y":893,"score":45,"level":0},{"x":1010,"y":893,"score":73,"level":0},{"x":1394,"y":893,"score":30,"level":0},{"x":464,"y":894,"score":29,"level":0},{"x":466,"y":894,"score":30,"level":0},{"x":890,"y":894,"score":27,"level":0},{"x":999,"y":894,"score":30,"level":0},{"x":1030,"y":894,"score":30,"level":0},{"x":1131,"y":894,"score":39,"level":0},{"x":1401,"y":894,"score":57,"level":0},{"x":1440,"y":894,"score":34,"level":0},{"x":543,"y":895,"score":32,"level":0},{"x":581,"y":895,"score":70,"level":0},{"x":620,"y":895,"score":33,"level":0},{"x":720,"y":895,"score":30,"level":0},{"x":1191,"y":895,"score":44,"level":0},{"x":1242,"y":895,"score":33,"level":0},{"x":1290,"y":895,"score":46,"level":0},{"x":1364,"y":895,"score":37,"level":0},{"x":565,"y":896,"score":43,"level":0},{"x":594,"y":896,"score":32,"level":0},{"x":688,"y":896,"score":36,"level":0},{"x":778,"y":896,"score":26,"level":0},{"x":869,"y":896,"score":83,"level":0},{"x":912,"y":896,"score":35,"level":0},{"x":1058,"y":896,"score":34,"level":0},{"x":1254,"y":896,"score":45,"level":0},{"x":459,"y":897,"score":28,"level":0},{"x":550,"y":897,"score":30,"level":0},{"x":567,"y":897,"score":44,"level":0},{"x":599,"y":897,"score":30,"level":0},{"x":693,"y":897,"score":31,"level":0},{"x":867,"y":897,"score":45,"level":0},{"x":956,"y":897,"score":35,"level":0},{"x":1031,"y":897,"score":36,"level":0},{"x":1051,"y":897,"score":32,"level":0},{"x":1055,"y":897,"score":28,"level":0},{"x":1064,"y":897,"score":30,"level":0},{"x":1321,"y":897,"score":34,"level":0},{"x":1331,"y":897,"score":26,"level":0},{"x":1349,"y":897,"score":36,"level":0},{"x":1392,"y":897,"score":34,"level":0},{"x":1415,"y":897,"score":45,"level":0},{"x":527,"y":898,"score":43,"level":0},{"x":720,"y":898,"score":29,"level":0},{"x":817,"y":898,"score":36,"level":0},{"x":918,"y":898,"score":26,"level":0},{"x":1012,"y":898,"score":49,"level":0},{"x":1354,"y":898,"score":28,"level":0},{"x":1457,"y":898,"score":30,"level":0},{"x":423,"y":899,"score":38,"level":0},{"x":428,"y":899,"score":34,"level":0},{"x":438,"y":899,"score":27,"level":0},{"x":512,"y":899,"score":26,"level":0},{"x":695,"y":899,"score":30,"level":0},{"x":757,"y":899,"score":30,"level":0},{"x":991,"y":899,"score":33,"level":0},{"x":1164,"y":899,"score":37,"level":0},{"x":1462,"y":899,"score":30,"level":0},{"x":416,"y":900,"score":32,"level":0},{"x":510,"y":900,"score":36,"level":0},{"x":762,"y":900,"score":64,"level":0},{"x":826,"y":900,"score":26,"level":0},{"x":868,"y":900,"score":52,"level":0},{"x":1411,"y":900,"score":51,"level":0},{"x":392,"y":901,"score":40,"level":0},{"x":456,"y":901,"score":28,"level":0},{"x":498,"y":901,"score":36,"level":0},{"x":564,"y":901,"score":50,"level":0},{"x":581,"y":901,"score":27,"level":0},{"x":609,"y":901,"score":40,"level":0},{"x":709,"y":901,"score":28,"level":0},{"x":768,"y":901,"score":29,"level":0},{"x":770,"y":901,"score":30,"level":0},{"x":806,"y":901,"score":43,"level":0},{"x":837,"y":901,"score":53,"level":0},{"x":857,"y":901,"score":33,"level":0},{"x":916,"y":901,"score":38,"level":0},{"x":1045,"y":901,"score":30,"level":0},{"x":1227,"y":901,"score":46,"level":0},{"x":633,"y":902,"score":41,"level":0},{"x":750,"y":902,"score":29,"level":0},{"x":788,"y":902,"score":30,"level":0},{"x":868,"y":902,"score":35,"level":0},{"x":887,"y":902,"score":44,"level":0},{"x":893,"y":902,"score":26,"level":0},{"x":924,"y":902,"score":35,"level":0},{"x":927,"y":902,"score":36,"level":0},{"x":978,"y":902,"score":29,"level":0},{"x":1153,"y":902,"score":27,"level":0},{"x":1222,"y":902,"score":32,"level":0},{"x":1443,"y":902,"score":30,"level":0},{"x":400,"y":903,"score":44,"level":0},{"x":466,"y":903,"score":66,"level":0},{"x":531,"y":903,"score":37,"level":0},{"x":571,"y":903,"score":51,"level":0},{"x":610,"y":903,"score":40,"level":0},{"x":785,"y":903,"score":34,"level":0},{"x":903,"y":903,"score":56,"level":0},{"x":905,"y":903,"score":45,"level":0},{"x":910,"y":903,"score":58,"level":0},{"x":949,"y":903,"score":32,"level":0},{"x":1131,"y":903,"score":30,"level":0},{"x":1178,"y":903,"score":27,"level":0},{"x":1237,"y":903,"score":35,"level":0},{"x":1468,"y":903,"score":40,"level":0},{"x":1470,"y":903,"score":40,"level":0},{"x":475,"y":904,"score":43,"level":0},{"x":544,"y":904,"score":38,"level":0},{"x":561,"y":904,"score":35,"level":0},{"x":577,"y":904,"score":26,"level":0},{"x":593,"y":904,"score":38,"level":0},{"x":643,"y":904,"score":70,"level":0},{"x":747,"y":904,"score":42,"level":0},{"x":763,"y":904,"score":46,"level":0},{"x":1141,"y":904,"score":28,"level":0},{"x":1277,"y":904,"score":34,"level":0},{"x":1325,"y":904,"score":34,"level":0},{"x":1330,"y":904,"score":28,"level":0},{"x":1489,"y":904,"score":26,"level":0},{"x":525,"y":905,"score":32,"level":0},{"x":752,"y":905,"score":46,"level":0},{"x":761,"y":905,"score":41,"level":0},{"x":827,"y":905,"score":35,"level":0},{"x":920,"y":905,"score":29,"level":0},{"x":938,"y":905,"score":43,"level":0},{"x":1124,"y":905,"score":32,"level":0},{"x":1282,"y":905,"score":52,"level":0},{"x":492,"y":906,"score":33,"level":0},{"x":496,"y":906,"score":26,"level":0},{"x":771,"y":906,"score":33,"level":0},{"x":784,"y":906,"score":30,"level":0},{"x":813,"y":906,"score":28,"level":0},{"x":1032,"y":906,"score":73,"level":0},{"x":1038,"y":906,"score":29,"level":0},{"x":1042,"y":906,"score":48,"level":0},{"x":1055,"y":906,"score":29,"level":0},{"x":1060,"y":906,"score":33,"level":0},{"x":1198,"y":906,"score":61,"level":0},{"x":1250,"y":906,"score":27,"level":0},{"x":1451,"y":906,"score":26,"level":0},{"x":428,"y":907,"score":40,"level":0},{"x":586,"y":907,"score":33,"level":0},{"x":642,"y":907,"score":26,"level":0},{"x":719,"y":907,"score":52,"level":0},{"x":845,"y":907,"score":36,"level":0},{"x":870,"y":907,"score":42,"level":0},{"x":902,"y":907,"score":29,"level":0},{"x":955,"y":907,"score":30,"level":0},{"x":1030,"y":907,"score":68,"level":0},{"x":1075,"y":907,"score":26,"level":0},{"x":1288,"y":907,"score":45,"level":0},{"x":1342,"y":907,"score":40,"level":0},{"x":1414,"y":907,"score":39,"level":0},{"x":460,"y":908,"score":56,"level":0},{"x":596,"y":908,"score":36,"level":0},{"x":619,"y":908,"score":45,"level":0},{"x":724,"y":908,"score":32,"level":0},{"x":836,"y":908,"score":34,"level":0},{"x":1004,"y":908,"score":52,"level":0},{"x":1154,"y":908,"score":26,"level":0},{"x":1226,"y":908,"score":53,"level":0},{"x":1293,"y":908,"score":41,"level":0},{"x":1446,"y":908,"score":38,"level":0},{"x":418,"y":909,"score":35,"level":0},{"x":423,"y":909,"score":31,"level":0},{"x":465,"y":909,"score":45,"level":0},{"x":574,"y":909,"score":36,"level":0},{"x":867,"y":909,"score":26,"level":0},{"x":994,"y":909,"score":27,"level":0},{"x":1126,"y":909,"score":28,"level":0},{"x":1191,"y":909,"score":26,"level":0},{"x":611,"y":910,"score":30,"level":0},{"x":827,"y":910,"score":46,"level":0},{"x":861,"y":910,"score":30,"level":0},{"x":941,"y":910,"score":42,"level":0},{"x":1270,"y":910,"score":32,"level":0},{"x":383,"y":911,"score":28,"level":0},{"x":496,"y":911,"score":44,"level":0},{"x":508,"y":911,"score":27,"level":0},{"x":563,"y":911,"score":28,"level":0},{"x":763,"y":911,"score":54,"level":0},{"x":785,"y":911,"score":48,"level":0},{"x":1421,"y":911,"score":51,"level":0},{"x":1450,"y":911,"score":27,"level":0},{"x":516,"y":912,"score":34,"level":0},{"x":668,"y":912,"score":30,"level":0},{"x":776,"y":912,"score":27,"level":0},{"x":987,"y":912,"score":26,"level":0},{"x":1202,"y":912,"score":38,"level":0},{"x":1454,"y":912,"score":38,"level":0},{"x":1472,"y":912,"score":28,"level":0},{"x":1490,"y":912,"score":32,"level":0},{"x":720,"y":913,"score":28,"level":0},{"x":746,"y":913,"score":55,"level":0},{"x":755,"y":913,"score":27,"level":0},{"x":874,"y":913,"score":28,"level":0},{"x":885,"y":913,"score":54,"level":0},{"x":1041,"y":913,"score":28,"level":0},{"x":1081,"y":913,"score":29,"level":0},{"x":1122,"y":913,"score":27,"level":0},{"x":1459,"y":913,"score":43,"level":0},{"x":394,"y":914,"score":28,"level":0},{"x":417,"y":914,"score":41,"level":0},{"x":489,"y":914,"score":26,"level":0},{"x":503,"y":914,"score":41,"level":0},{"x":631,"y":914,"score":29,"level":0},{"x":650,"y":914,"score":30,"level":0},{"x":668,"y":914,"score":29,"level":0},{"x":1007,"y":914,"score":28,"level":0},{"x":1047,"y":914,"score":40,"level":0},{"x":1101,"y":914,"score":70,"level":0},{"x":1174,"y":914,"score":28,"level":0},{"x":1234,"y":914,"score":34,"level":0},{"x":1467,"y":914,"score":29,"level":0},{"x":468,"y":915,"score":31,"level":0},{"x":584,"y":915,"score":33,"level":0},{"x":655,"y":915,"score":50,"level":0},{"x":658,"y":915,"score":36,"level":0},{"x":718,"y":915,"score":35,"level":0},{"x":744,"y":915,"score":27,"level":0},{"x":832,"y":915,"score":38,"level":0},{"x":862,"y":915,"score":39,"level":0},{"x":1055,"y":915,"score":26,"level":0},{"x":1060,"y":915,"score":28,"level":0},{"x":1186,"y":915,"score":36,"level":0},{"x":1480,"y":915,"score":27,"level":0},{"x":596,"y":916,"score":36,"level":0},{"x":768,"y":916,"score":44,"level":0},{"x":777,"y":916,"score":56,"level":0},{"x":918,"y":916,"score":48,"level":0},{"x":1006,"y":916,"score":34,"level":0},{"x":1288,"y":916,"score":26,"level":0},{"x":1329,"y":916,"score":39,"level":0},{"x":550,"y":917,"score":32,"level":0},{"x":630,"y":917,"score":32,"level":0},{"x":641,"y":917,"score":36,"level":0},{"x":692,"y":917,"score":53,"level":0},{"x":694,"y":917,"score":54,"level":0},{"x":749,"y":917,"score":45,"level":0},{"x":774,"y":917,"score":27,"level":0},{"x":853,"y":917,"score":30,"level":0},{"x":899,"y":917,"score":44,"level":0},{"x":1140,"y":917,"score":31,"level":0},{"x":1451,"y":917,"score":42,"level":0},{"x":449,"y":918,"score":26,"level":0},{"x":577,"y":918,"score":36,"level":0},{"x":610,"y":918,"score":82,"level":0},{"x":613,"y":918,"score":49,"level":0},{"x":617,"y":918,"score":47,"level":0},{"x":628,"y":918,"score":31,"level":0},{"x":671,"y":918,"score":28,"level":0},{"x":825,"y":918,"score":40,"level":0},{"x":869,"y":918,"score":58,"level":0},{"x":887,"y":918,"score":29,"level":0},{"x":974,"y":918,"score":43,"level":0},{"x":1033,"y":918,"score":38,"level":0},{"x":1038,"y":918,"score":32,"level":0},{"x":1331,"y":918,"score":36,"level":0},{"x":418,"y":919,"score":33,"level":0},{"x":423,"y":919,"score":26,"level":0},{"x":431,"y":919,"score":28,"level":0},{"x":491,"y":919,"score":64,"level":0},{"x":496,"y":919,"score":34,"level":0},{"x":651,"y":919,"score":34,"level":0},{"x":680,"y":919,"score":40,"level":0},{"x":904,"y":919,"score":34,"level":0},{"x":926,"y":919,"score":30,"level":0},{"x":944,"y":919,"score":46,"level":0},{"x":1087,"y":919,"score":36,"level":0},{"x":1127,"y":919,"score":56,"level":0},{"x":1234,"y":919,"score":39,"level":0},{"x":1239,"y":919,"score":40,"level":0},{"x":460,"y":920,"score":26,"level":0},{"x":556,"y":920,"score":58,"level":0},{"x":698,"y":920,"score":32,"level":0},{"x":870,"y":920,"score":52,"level":0},{"x":1008,"y":920,"score":28,"level":0},{"x":1476,"y":920,"score":26,"level":0},{"x":768,"y":921,"score":47,"level":0},{"x":950,"y":921,"score":31,"level":0},{"x":960,"y":921,"score":38,"level":0},{"x":1170,"y":921,"score":41,"level":0},{"x":1291,"y":921,"score":26,"level":0},{"x":1354,"y":921,"score":46,"level":0},{"x":1374,"y":921,"score":32,"level":0},{"x":1379,"y":921,"score":29,"level":0},{"x":1448,"y":921,"score":28,"level":0},{"x":550,"y":922,"score":48,"level":0},{"x":552,"y":922,"score":46,"level":0},{"x":653,"y":922,"score":29,"level":0},{"x":672,"y":922,"score":32,"level":0},{"x":681,"y":922,"score":37,"level":0},{"x":750,"y":922,"score":42,"level":0},{"x":889,"y":922,"score":28,"level":0},{"x":975,"y":922,"score":33,"level":0},{"x":984,"y":922,"score":27,"level":0},{"x":1197,"y":922,"score":70,"level":0},{"x":1250,"y":922,"score":30,"level":0},{"x":520,"y":923,"score":40,"level":0},{"x":569,"y":923,"score":32,"level":0},{"x":690,"y":923,"score":31,"level":0},{"x":980,"y":923,"score":45,"level":0},{"x":1097,"y":923,"score":34,"level":0},{"x":1325,"y":923,"score":51,"level":0},{"x":1411,"y":923,"score":32,"level":0},{"x":1460,"y":923,"score":32,"level":0},{"x":380,"y":924,"score":56,"level":0},{"x":392,"y":924,"score":31,"level":0},{"x":534,"y":924,"score":31,"level":0},{"x":621,"y":924,"score":31,"level":0},{"x":628,"y":924,"score":29,"level":0},{"x":706,"y":924,"score":54,"level":0},{"x":737,"y":924,"score":40,"level":0},{"x":860,"y":924,"score":41,"level":0},{"x":1030,"y":924,"score":28,"level":0},{"x":1340,"y":924,"score":36,"level":0},{"x":537,"y":925,"score":50,"level":0},{"x":699,"y":925,"score":27,"level":0},{"x":769,"y":925,"score":35,"level":0},{"x":927,"y":925,"score":84,"level":0},{"x":944,"y":925,"score":40,"level":0},{"x":997,"y":925,"score":34,"level":0},{"x":1124,"y":925,"score":39,"level":0},{"x":402,"y":926,"score":26,"level":0},{"x":506,"y":926,"score":53,"level":0},{"x":579,"y":926,"score":28,"level":0},{"x":742,"y":926,"score":44,"level":0},{"x":844,"y":926,"score":26,"level":0},{"x":870,"y":926,"score":30,"level":0},{"x":911,"y":926,"score":30,"level":0},{"x":1027,"y":926,"score":54,"level":0},{"x":1222,"y":926,"score":50,"level":0},{"x":1373,"y":926,"score":29,"level":0},{"x":683,"y":927,"score":51,"level":0},{"x":794,"y":927,"score":88,"level":0},{"x":816,"y":927,"score":54,"level":0},{"x":821,"y":927,"score":37,"level":0},{"x":920,"y":927,"score":46,"level":0},{"x":962,"y":927,"score":28,"level":0},{"x":1289,"y":927,"score":52,"level":0},{"x":1352,"y":927,"score":46,"level":0},{"x":552,"y":928,"score":26,"level":0},{"x":668,"y":928,"score":41,"level":0},{"x":1055,"y":928,"score":30,"level":0},{"x":1262,"y":928,"score":38,"level":0},{"x":408,"y":929,"score":27,"level":0},{"x":434,"y":929,"score":33,"level":0},{"x":490,"y":929,"score":75,"level":0},{"x":622,"y":929,"score":27,"level":0},{"x":633,"y":929,"score":68,"level":0},{"x":689,"y":929,"score":40,"level":0},{"x":721,"y":929,"score":42,"level":0},{"x":737,"y":929,"score":35,"level":0},{"x":752,"y":929,"score":61,"level":0},{"x":761,"y":929,"score":40,"level":0},{"x":782,"y":929,"score":27,"level":0},{"x":952,"y":929,"score":26,"level":0},{"x":1127,"y":929,"score":56,"level":0},{"x":1325,"y":929,"score":42,"level":0},{"x":1453,"y":929,"score":58,"level":0},{"x":447,"y":930,"score":36,"level":0},{"x":498,"y":930,"score":42,"level":0},{"x":701,"y":930,"score":39,"level":0},{"x":709,"y":930,"score":114,"level":0},{"x":712,"y":930,"score":42,"level":0},{"x":727,"y":930,"score":45,"level":0},{"x":795,"y":930,"score":33,"level":0},{"x":879,"y":930,"score":79,"level":0},{"x":1098,"y":930,"score":26,"level":0},{"x":1138,"y":930,"score":26,"level":0},{"x":1254,"y":930,"score":26,"level":0},{"x":1294,"y":930,"score":27,"level":0},{"x":1321,"y":930,"score":36,"level":0},{"x":575,"y":931,"score":34,"level":0},{"x":504,"y":932,"score":42,"level":0},{"x":596,"y":932,"score":50,"level":0},{"x":634,"y":932,"score":57,"level":0},{"x":653,"y":932,"score":44,"level":0},{"x":754,"y":932,"score":38,"level":0},{"x":762,"y":932,"score":30,"level":0},{"x":847,"y":932,"score":31,"level":0},{"x":964,"y":932,"score":27,"level":0},{"x":1026,"y":932,"score":49,"level":0},{"x":1144,"y":932,"score":26,"level":0},{"x":530,"y":933,"score":43,"level":0},{"x":772,"y":933,"score":48,"level":0},{"x":843,"y":933,"score":44,"level":0},{"x":923,"y":933,"score":26,"level":0},{"x":1033,"y":933,"score":52,"level":0},{"x":1124,"y":933,"score":26,"level":0},{"x":1214,"y":933,"score":40,"level":0},{"x":382,"y":934,"score":32,"level":0},{"x":494,"y":934,"score":32,"level":0},{"x":509,"y":934,"score":26,"level":0},{"x":608,"y":934,"score":62,"level":0},{"x":854,"y":934,"score":56,"level":0},{"x":991,"y":934,"score":33,"level":0},{"x":1150,"y":934,"score":31,"level":0},{"x":1402,"y":934,"score":26,"level":0},{"x":1469,"y":934,"score":142,"level":0},{"x":1475,"y":934,"score":125,"level":0},{"x":1489,"y":934,"score":37,"level":0},{"x":482,"y":935,"score":33,"level":0},{"x":511,"y":935,"score":35,"level":0},{"x":553,"y":935,"score":30,"level":0},{"x":639,"y":935,"score":66,"level":0},{"x":673,"y":935,"score":74,"level":0},{"x":676,"y":935,"score":50,"level":0},{"x":682,"y":935,"score":37,"level":0},{"x":688,"y":935,"score":36,"level":0},{"x":732,"y":935,"score":31,"level":0},{"x":738,"y":935,"score":40,"level":0},{"x":763,"y":935,"score":38,"level":0},{"x":885,"y":935,"score":35,"level":0},{"x":929,"y":935,"score":29,"level":0},{"x":1201,"y":935,"score":50,"level":0},{"x":1242,"y":935,"score":29,"level":0},{"x":1247,"y":935,"score":34,"level":0},{"x":1345,"y":935,"score":33,"level":0},{"x":456,"y":936,"score":27,"level":0},{"x":567,"y":936,"score":29,"level":0},{"x":645,"y":936,"score":63,"level":0},{"x":693,"y":936,"score":30,"level":0},{"x":719,"y":936,"score":30,"level":0},{"x":811,"y":936,"score":26,"level":0},{"x":831,"y":936,"score":44,"level":0},{"x":900,"y":936,"score":30,"level":0},{"x":924,"y":936,"score":28,"level":0},{"x":945,"y":936,"score":55,"level":0},{"x":1073,"y":936,"score":30,"level":0},{"x":1325,"y":936,"score":31,"level":0},{"x":1422,"y":936,"score":36,"level":0},{"x":482,"y":937,"score":44,"level":0},{"x":729,"y":937,"score":52,"level":0},{"x":759,"y":937,"score":26,"level":0},{"x":804,"y":937,"score":28,"level":0},{"x":877,"y":937,"score":44,"level":0},{"x":962,"y":937,"score":26,"level":0},{"x":1179,"y":937,"score":28,"level":0},{"x":1226,"y":937,"score":42,"level":0},{"x":1320,"y":937,"score":52,"level":0},{"x":377,"y":938,"score":44,"level":0},{"x":417,"y":938,"score":29,"level":0},{"x":598,"y":938,"score":52,"level":0},{"x":688,"y":938,"score":49,"level":0},{"x":697,"y":938,"score":29,"level":0},{"x":839,"y":938,"score":34,"level":0},{"x":843,"y":938,"score":60,"level":0},{"x":884,"y":938,"score":36,"level":0},{"x":887,"y":938,"score":35,"level":0},{"x":1030,"y":938,"score":36,"level":0},{"x":1167,"y":938,"score":31,"level":0},{"x":1231,"y":938,"score":34,"level":0},{"x":1235,"y":938,"score":46,"level":0},{"x":1259,"y":938,"score":32,"level":0},{"x":435,"y":939,"score":34,"level":0},{"x":448,"y":939,"score":49,"level":0},{"x":507,"y":939,"score":34,"level":0},{"x":686,"y":939,"score":26,"level":0},{"x":694,"y":939,"score":48,"level":0},{"x":756,"y":939,"score":46,"level":0},{"x":771,"y":939,"score":27,"level":0},{"x":776,"y":939,"score":39,"level":0},{"x":1130,"y":939,"score":52,"level":0},{"x":1276,"y":939,"score":27,"level":0},{"x":427,"y":940,"score":30,"level":0},{"x":429,"y":940,"score":44,"level":0},{"x":606,"y":940,"score":62,"level":0},{"x":699,"y":940,"score":44,"level":0},{"x":712,"y":940,"score":35,"level":0},{"x":1007,"y":940,"score":60,"level":0},{"x":1082,"y":940,"score":28,"level":0},{"x":1087,"y":940,"score":31,"level":0},{"x":1112,"y":940,"score":27,"level":0},{"x":1241,"y":940,"score":29,"level":0},{"x":1326,"y":940,"score":31,"level":0},{"x":1377,"y":940,"score":28,"level":0},{"x":1390,"y":940,"score":34,"level":0},{"x":1458,"y":940,"score":66,"level":0},{"x":1470,"y":940,"score":43,"level":0},{"x":1484,"y":940,"score":139,"level":0},{"x":392,"y":941,"score":40,"level":0},{"x":462,"y":941,"score":48,"level":0},{"x":475,"y":941,"score":38,"level":0},{"x":477,"y":941,"score":57,"level":0},{"x":517,"y":941,"score":31,"level":0},{"x":553,"y":941,"score":32,"level":0},{"x":715,"y":941,"score":47,"level":0},{"x":753,"y":941,"score":47,"level":0},{"x":921,"y":941,"score":29,"level":0},{"x":1077,"y":941,"score":48,"level":0},{"x":1360,"y":941,"score":26,"level":0},{"x":1422,"y":941,"score":32,"level":0},{"x":394,"y":942,"score":32,"level":0},{"x":482,"y":942,"score":47,"level":0},{"x":487,"y":942,"score":27,"level":0},{"x":491,"y":942,"score":29,"level":0},{"x":545,"y":942,"score":29,"level":0},{"x":658,"y":942,"score":60,"level":0},{"x":664,"y":942,"score":60,"level":0},{"x":857,"y":942,"score":46,"level":0},{"x":891,"y":942,"score":49,"level":0},{"x":896,"y":942,"score":29,"level":0},{"x":1049,"y":942,"score":33,"level":0},{"x":1104,"y":942,"score":46,"level":0},{"x":383,"y":943,"score":40,"level":0},{"x":550,"y":943,"score":26,"level":0},{"x":684,"y":943,"score":62,"level":0},{"x":752,"y":943,"score":50,"level":0},{"x":764,"y":943,"score":26,"level":0},{"x":766,"y":943,"score":36,"level":0},{"x":834,"y":943,"score":33,"level":0},{"x":878,"y":943,"score":100,"level":0},{"x":1260,"y":943,"score":28,"level":0},{"x":1324,"y":943,"score":80,"level":0},{"x":1349,"y":943,"score":30,"level":0},{"x":385,"y":944,"score":35,"level":0},{"x":412,"y":944,"score":32,"level":0},{"x":636,"y":944,"score":62,"level":0},{"x":642,"y":944,"score":29,"level":0},{"x":679,"y":944,"score":42,"level":0},{"x":778,"y":944,"score":35,"level":0},{"x":803,"y":944,"score":34,"level":0},{"x":844,"y":944,"score":31,"level":0},{"x":1340,"y":944,"score":29,"level":0},{"x":1477,"y":944,"score":52,"level":0},{"x":434,"y":945,"score":26,"level":0},{"x":448,"y":945,"score":43,"level":0},{"x":722,"y":945,"score":49,"level":0},{"x":792,"y":945,"score":31,"level":0},{"x":916,"y":945,"score":36,"level":0},{"x":961,"y":945,"score":52,"level":0},{"x":1125,"y":945,"score":41,"level":0},{"x":1132,"y":945,"score":47,"level":0},{"x":1153,"y":945,"score":29,"level":0},{"x":1216,"y":945,"score":29,"level":0},{"x":385,"y":946,"score":28,"level":0},{"x":539,"y":946,"score":38,"level":0},{"x":578,"y":946,"score":64,"level":0},{"x":584,"y":946,"score":129,"level":0},{"x":668,"y":946,"score":26,"level":0},{"x":842,"y":946,"score":38,"level":0},{"x":981,"y":946,"score":32,"level":0},{"x":1119,"y":946,"score":70,"level":0},{"x":1315,"y":946,"score":35,"level":0},{"x":1327,"y":946,"score":32,"level":0},{"x":398,"y":947,"score":34,"level":0},{"x":455,"y":947,"score":45,"level":0},{"x":526,"y":947,"score":41,"level":0},{"x":532,"y":947,"score":26,"level":0},{"x":1027,"y":947,"score":46,"level":0},{"x":1194,"y":947,"score":28,"level":0},{"x":1240,"y":947,"score":31,"level":0},{"x":1289,"y":947,"score":33,"level":0},{"x":403,"y":948,"score":34,"level":0},{"x":654,"y":948,"score":31,"level":0},{"x":866,"y":948,"score":76,"level":0},{"x":891,"y":948,"score":34,"level":0},{"x":953,"y":948,"score":60,"level":0},{"x":1032,"y":948,"score":31,"level":0},{"x":1059,"y":948,"score":38,"level":0},{"x":1085,"y":948,"score":40,"level":0},{"x":1255,"y":948,"score":30,"level":0},{"x":1377,"y":948,"score":30,"level":0},{"x":1430,"y":948,"score":45,"level":0},{"x":1436,"y":948,"score":44,"level":0},{"x":652,"y":949,"score":50,"level":0},{"x":679,"y":949,"score":54,"level":0},{"x":692,"y":949,"score":34,"level":0},{"x":707,"y":949,"score":30,"level":0},{"x":1139,"y":949,"score":32,"level":0},{"x":1298,"y":949,"score":61,"level":0},{"x":473,"y":950,"score":43,"level":0},{"x":517,"y":950,"score":31,"level":0},{"x":598,"y":950,"score":82,"level":0},{"x":654,"y":950,"score":41,"level":0},{"x":697,"y":950,"score":48,"level":0},{"x":715,"y":950,"score":37,"level":0},{"x":745,"y":950,"score":40,"level":0},{"x":763,"y":950,"score":42,"level":0},{"x":858,"y":950,"score":28,"level":0},{"x":1046,"y":950,"score":28,"level":0},{"x":1172,"y":950,"score":32,"level":0},{"x":1334,"y":950,"score":28,"level":0},{"x":419,"y":951,"score":34,"level":0},{"x":652,"y":951,"score":35,"level":0},{"x":776,"y":951,"score":28,"level":0},{"x":876,"y":951,"score":72,"level":0},{"x":896,"y":951,"score":36,"level":0},{"x":904,"y":951,"score":34,"level":0},{"x":946,"y":951,"score":74,"level":0},{"x":1009,"y":951,"score":26,"level":0},{"x":1197,"y":951,"score":33,"level":0},{"x":1325,"y":951,"score":86,"level":0},{"x":1401,"y":951,"score":42,"level":0},{"x":416,"y":952,"score":54,"level":0},{"x":440,"y":952,"score":50,"level":0},{"x":642,"y":952,"score":50,"level":0},{"x":684,"y":952,"score":52,"level":0},{"x":689,"y":952,"score":39,"level":0},{"x":790,"y":952,"score":29,"level":0},{"x":887,"y":952,"score":36,"level":0},{"x":964,"y":952,"score":50,"level":0},{"x":1245,"y":952,"score":30,"level":0},{"x":1266,"y":952,"score":42,"level":0},{"x":1420,"y":952,"score":38,"level":0},{"x":378,"y":953,"score":30,"level":0},{"x":478,"y":953,"score":40,"level":0},{"x":526,"y":953,"score":57,"level":0},{"x":647,"y":953,"score":33,"level":0},{"x":713,"y":953,"score":29,"level":0},{"x":733,"y":953,"score":38,"level":0},{"x":759,"y":953,"score":57,"level":0},{"x":954,"y":953,"score":58,"level":0},{"x":996,"y":953,"score":34,"level":0},{"x":1095,"y":953,"score":43,"level":0},{"x":1241,"y":953,"score":37,"level":0},{"x":1255,"y":953,"score":32,"level":0},{"x":1264,"y":953,"score":32,"level":0},{"x":469,"y":954,"score":32,"level":0},{"x":630,"y":954,"score":87,"level":0},{"x":920,"y":954,"score":28,"level":0},{"x":929,"y":954,"score":26,"level":0},{"x":961,"y":954,"score":34,"level":0},{"x":971,"y":954,"score":36,"level":0},{"x":976,"y":954,"score":31,"level":0},{"x":1278,"y":954,"score":30,"level":0},{"x":1377,"y":954,"score":26,"level":0},{"x":529,"y":955,"score":49,"level":0},{"x":543,"y":955,"score":40,"level":0},{"x":594,"y":955,"score":34,"level":0},{"x":645,"y":955,"score":30,"level":0},{"x":903,"y":955,"score":36,"level":0},{"x":1039,"y":955,"score":34,"level":0},{"x":1217,"y":955,"score":30,"level":0},{"x":1233,"y":955,"score":34,"level":0},{"x":1284,"y":955,"score":36,"level":0},{"x":1467,"y":955,"score":32,"level":0},{"x":1471,"y":955,"score":42,"level":0},{"x":392,"y":956,"score":45,"level":0},{"x":460,"y":956,"score":33,"level":0},{"x":498,"y":956,"score":31,"level":0},{"x":705,"y":956,"score":33,"level":0},{"x":746,"y":956,"score":46,"level":0},{"x":776,"y":956,"score":32,"level":0},{"x":781,"y":956,"score":59,"level":0},{"x":847,"y":956,"score":54,"level":0},{"x":1127,"y":956,"score":78,"level":0},{"x":1276,"y":956,"score":30,"level":0},{"x":1327,"y":956,"score":55,"level":0},{"x":1334,"y":956,"score":47,"level":0},{"x":1435,"y":956,"score":43,"level":0},{"x":403,"y":957,"score":35,"level":0},{"x":442,"y":957,"score":41,"level":0},{"x":697,"y":957,"score":32,"level":0},{"x":740,"y":957,"score":28,"level":0},{"x":771,"y":957,"score":34,"level":0},{"x":1133,"y":957,"score":43,"level":0},{"x":1356,"y":957,"score":32,"level":0},{"x":1389,"y":957,"score":27,"level":0},{"x":377,"y":958,"score":28,"level":0},{"x":587,"y":958,"score":28,"level":0},{"x":678,"y":958,"score":47,"level":0},{"x":788,"y":958,"score":97,"level":0},{"x":808,"y":958,"score":29,"level":0},{"x":889,"y":958,"score":39,"level":0},{"x":1153,"y":958,"score":74,"level":0},{"x":1406,"y":958,"score":38,"level":0},{"x":1455,"y":958,"score":29,"level":0},{"x":1461,"y":958,"score":64,"level":0},{"x":552,"y":959,"score":34,"level":0},{"x":596,"y":959,"score":33,"level":0},{"x":665,"y":959,"score":28,"level":0},{"x":961,"y":959,"score":44,"level":0},{"x":1159,"y":959,"score":45,"level":0},{"x":475,"y":960,"score":27,"level":0},{"x":485,"y":960,"score":29,"level":0},{"x":557,"y":960,"score":30,"level":0},{"x":560,"y":960,"score":42,"level":0},{"x":695,"y":960,"score":37,"level":0},{"x":731,"y":960,"score":27,"level":0},{"x":794,"y":960,"score":34,"level":0},{"x":819,"y":960,"score":44,"level":0},{"x":824,"y":960,"score":29,"level":0},{"x":953,"y":960,"score":29,"level":0},{"x":1083,"y":960,"score":28,"level":0},{"x":1180,"y":960,"score":56,"level":0},{"x":1185,"y":960,"score":30,"level":0},{"x":1476,"y":960,"score":48,"level":0},{"x":503,"y":961,"score":46,"level":0},{"x":524,"y":961,"score":27,"level":0},{"x":529,"y":961,"score":44,"level":0},{"x":605,"y":961,"score":54,"level":0},{"x":636,"y":961,"score":64,"level":0},{"x":670,"y":961,"score":40,"level":0},{"x":690,"y":961,"score":48,"level":0},{"x":866,"y":961,"score":38,"level":0},{"x":892,"y":961,"score":31,"level":0},{"x":964,"y":961,"score":26,"level":0},{"x":975,"y":961,"score":30,"level":0},{"x":1174,"y":961,"score":44,"level":0},{"x":1272,"y":961,"score":34,"level":0},{"x":1275,"y":961,"score":28,"level":0},{"x":1345,"y":961,"score":38,"level":0},{"x":1413,"y":961,"score":30,"level":0},{"x":1423,"y":961,"score":37,"level":0},{"x":464,"y":962,"score":28,"level":0},{"x":631,"y":962,"score":64,"level":0},{"x":664,"y":962,"score":29,"level":0},{"x":746,"y":962,"score":63,"level":0},{"x":754,"y":962,"score":41,"level":0},{"x":933,"y":962,"score":45,"level":0},{"x":1093,"y":962,"score":31,"level":0},{"x":1198,"y":962,"score":72,"level":0},{"x":1333,"y":962,"score":32,"level":0},{"x":468,"y":963,"score":32,"level":0},{"x":544,"y":963,"score":42,"level":0},{"x":669,"y":963,"score":32,"level":0},{"x":725,"y":963,"score":28,"level":0},{"x":906,"y":963,"score":37,"level":0},{"x":979,"y":963,"score":30,"level":0},{"x":1063,"y":963,"score":30,"level":0},{"x":1100,"y":963,"score":47,"level":0},{"x":1164,"y":963,"score":48,"level":0},{"x":1221,"y":963,"score":47,"level":0},{"x":1281,"y":963,"score":37,"level":0},{"x":1454,"y":963,"score":47,"level":0},{"x":405,"y":964,"score":26,"level":0},{"x":500,"y":964,"score":51,"level":0},{"x":583,"y":964,"score":37,"level":0},{"x":603,"y":964,"score":50,"level":0},{"x":605,"y":964,"score":80,"level":0},{"x":860,"y":964,"score":67,"level":0},{"x":900,"y":964,"score":26,"level":0},{"x":1029,"y":964,"score":52,"level":0},{"x":1056,"y":964,"score":29,"level":0},{"x":1158,"y":964,"score":63,"level":0},{"x":1170,"y":964,"score":35,"level":0},{"x":1359,"y":964,"score":30,"level":0},{"x":1364,"y":964,"score":29,"level":0},{"x":492,"y":965,"score":46,"level":0},{"x":552,"y":965,"score":29,"level":0},{"x":709,"y":965,"score":30,"level":0},{"x":758,"y":965,"score":56,"level":0},{"x":850,"y":965,"score":36,"level":0},{"x":865,"y":965,"score":54,"level":0},{"x":887,"y":965,"score":31,"level":0},{"x":994,"y":965,"score":44,"level":0},{"x":1010,"y":965,"score":59,"level":0},{"x":1080,"y":965,"score":28,"level":0},{"x":1175,"y":965,"score":29,"level":0},{"x":1297,"y":965,"score":31,"level":0},{"x":1373,"y":965,"score":30,"level":0},{"x":636,"y":966,"score":38,"level":0},{"x":714,"y":966,"score":54,"level":0},{"x":719,"y":966,"score":50,"level":0},{"x":809,"y":966,"score":28,"level":0},{"x":814,"y":966,"score":32,"level":0},{"x":990,"y":966,"score":32,"level":0},{"x":1332,"y":966,"score":30,"level":0},{"x":418,"y":967,"score":43,"level":0},{"x":424,"y":967,"score":36,"level":0},{"x":458,"y":967,"score":35,"level":0},{"x":464,"y":967,"score":27,"level":0},{"x":564,"y":967,"score":35,"level":0},{"x":641,"y":967,"score":64,"level":0},{"x":678,"y":967,"score":32,"level":0},{"x":788,"y":967,"score":49,"level":0},{"x":799,"y":967,"score":28,"level":0},{"x":840,"y":967,"score":34,"level":0},{"x":893,"y":967,"score":62,"level":0},{"x":1065,"y":967,"score":28,"level":0},{"x":1124,"y":967,"score":52,"level":0},{"x":1148,"y":967,"score":29,"level":0},{"x":1213,"y":967,"score":65,"level":0},{"x":1260,"y":967,"score":29,"level":0},{"x":1265,"y":967,"score":97,"level":0},{"x":1487,"y":967,"score":28,"level":0},{"x":435,"y":968,"score":29,"level":0},{"x":601,"y":968,"score":28,"level":0},{"x":649,"y":968,"score":28,"level":0},{"x":708,"y":968,"score":48,"level":0},{"x":845,"y":968,"score":35,"level":0},{"x":1006,"y":968,"score":55,"level":0},{"x":1165,"y":968,"score":46,"level":0},{"x":1234,"y":968,"score":41,"level":0},{"x":405,"y":969,"score":26,"level":0},{"x":589,"y":969,"score":26,"level":0},{"x":630,"y":969,"score":46,"level":0},{"x":668,"y":969,"score":34,"level":0},{"x":674,"y":969,"score":30,"level":0},{"x":726,"y":969,"score":32,"level":0},{"x":765,"y":969,"score":54,"level":0},{"x":935,"y":969,"score":27,"level":0},{"x":1125,"y":969,"score":39,"level":0},{"x":1134,"y":969,"score":26,"level":0},{"x":1172,"y":969,"score":56,"level":0},{"x":1195,"y":969,"score":44,"level":0},{"x":1289,"y":969,"score":29,"level":0},{"x":1452,"y":969,"score":76,"level":0},{"x":412,"y":970,"score":33,"level":0},{"x":416,"y":970,"score":36,"level":0},{"x":547,"y":970,"score":42,"level":0},{"x":582,"y":970,"score":26,"level":0},{"x":686,"y":970,"score":37,"level":0},{"x":737,"y":970,"score":27,"level":0},{"x":742,"y":970,"score":52,"level":0},{"x":781,"y":970,"score":35,"level":0},{"x":918,"y":970,"score":28,"level":0},{"x":942,"y":970,"score":26,"level":0},{"x":1158,"y":970,"score":44,"level":0},{"x":1409,"y":970,"score":43,"level":0},{"x":525,"y":971,"score":27,"level":0},{"x":865,"y":971,"score":44,"level":0},{"x":1387,"y":971,"score":27,"level":0},{"x":1404,"y":971,"score":26,"level":0},{"x":1470,"y":971,"score":44,"level":0},{"x":463,"y":972,"score":28,"level":0},{"x":476,"y":972,"score":28,"level":0},{"x":514,"y":972,"score":50,"level":0},{"x":654,"y":972,"score":44,"level":0},{"x":713,"y":972,"score":39,"level":0},{"x":718,"y":972,"score":29,"level":0},{"x":808,"y":972,"score":35,"level":0},{"x":885,"y":972,"score":36,"level":0},{"x":460,"y":973,"score":32,"level":0},{"x":659,"y":973,"score":68,"level":0},{"x":676,"y":973,"score":28,"level":0},{"x":783,"y":973,"score":33,"level":0},{"x":826,"y":973,"score":41,"level":0},{"x":844,"y":973,"score":26,"level":0},{"x":979,"y":973,"score":32,"level":0},{"x":1162,"y":973,"score":30,"level":0},{"x":1183,"y":973,"score":44,"level":0},{"x":1219,"y":973,"score":32,"level":0},{"x":1487,"y":973,"score":35,"level":0},{"x":449,"y":974,"score":44,"level":0},{"x":454,"y":974,"score":39,"level":0},{"x":572,"y":974,"score":38,"level":0},{"x":646,"y":974,"score":36,"level":0},{"x":890,"y":974,"score":32,"level":0},{"x":970,"y":974,"score":45,"level":0},{"x":1009,"y":974,"score":35,"level":0},{"x":1199,"y":974,"score":45,"level":0},{"x":1294,"y":974,"score":53,"level":0},{"x":1321,"y":974,"score":62,"level":0},{"x":438,"y":975,"score":40,"level":0},{"x":470,"y":975,"score":30,"level":0},{"x":736,"y":975,"score":48,"level":0},{"x":788,"y":975,"score":34,"level":0},{"x":968,"y":975,"score":51,"level":0},{"x":986,"y":975,"score":26,"level":0},{"x":1056,"y":975,"score":28,"level":0},{"x":1273,"y":975,"score":36,"level":0},{"x":1474,"y":975,"score":40,"level":0},{"x":497,"y":976,"score":40,"level":0},{"x":546,"y":976,"score":27,"level":0},{"x":769,"y":976,"score":55,"level":0},{"x":790,"y":976,"score":40,"level":0},{"x":1008,"y":976,"score":28,"level":0},{"x":435,"y":977,"score":53,"level":0},{"x":585,"y":977,"score":54,"level":0},{"x":624,"y":977,"score":43,"level":0},{"x":630,"y":977,"score":54,"level":0},{"x":763,"y":977,"score":78,"level":0},{"x":899,"y":977,"score":30,"level":0},{"x":901,"y":977,"score":29,"level":0},{"x":1028,"y":977,"score":75,"level":0},{"x":1196,"y":977,"score":26,"level":0},{"x":1335,"y":977,"score":26,"level":0},{"x":400,"y":978,"score":28,"level":0},{"x":481,"y":978,"score":58,"level":0},{"x":532,"y":978,"score":38,"level":0},{"x":594,"y":978,"score":31,"level":0},{"x":603,"y":978,"score":42,"level":0},{"x":721,"y":978,"score":34,"level":0},{"x":728,"y":978,"score":37,"level":0},{"x":775,"y":978,"score":26,"level":0},{"x":801,"y":978,"score":37,"level":0},{"x":960,"y":978,"score":36,"level":0},{"x":1070,"y":978,"score":31,"level":0},{"x":1329,"y":978,"score":48,"level":0},{"x":1406,"y":978,"score":44,"level":0},{"x":385,"y":979,"score":29,"level":0},{"x":840,"y":979,"score":30,"level":0},{"x":1008,"y":979,"score":44,"level":0},{"x":1034,"y":979,"score":65,"level":0},{"x":1093,"y":979,"score":31,"level":0},{"x":1098,"y":979,"score":26,"level":0},{"x":1144,"y":979,"score":44,"level":0},{"x":1150,"y":979,"score":48,"level":0},{"x":1176,"y":979,"score":27,"level":0},{"x":1202,"y":979,"score":34,"level":0},{"x":1255,"y":979,"score":28,"level":0},{"x":1457,"y":979,"score":36,"level":0},{"x":441,"y":980,"score":46,"level":0},{"x":447,"y":980,"score":33,"level":0},{"x":711,"y":980,"score":26,"level":0},{"x":752,"y":980,"score":31,"level":0},{"x":942,"y":980,"score":31,"level":0},{"x":1022,"y":980,"score":97,"level":0},{"x":1062,"y":980,"score":35,"level":0},{"x":563,"y":981,"score":26,"level":0},{"x":701,"y":981,"score":26,"level":0},{"x":740,"y":981,"score":32,"level":0},{"x":854,"y":981,"score":29,"level":0},{"x":893,"y":981,"score":35,"level":0},{"x":1044,"y":981,"score":35,"level":0},{"x":1171,"y":981,"score":39,"level":0},{"x":1374,"y":981,"score":28,"level":0},{"x":1388,"y":981,"score":32,"level":0},{"x":1439,"y":981,"score":26,"level":0},{"x":430,"y":982,"score":37,"level":0},{"x":624,"y":982,"score":26,"level":0},{"x":731,"y":982,"score":28,"level":0},{"x":765,"y":982,"score":44,"level":0},{"x":915,"y":982,"score":32,"level":0},{"x":957,"y":982,"score":26,"level":0},{"x":1216,"y":982,"score":31,"level":0},{"x":481,"y":983,"score":26,"level":0},{"x":510,"y":983,"score":35,"level":0},{"x":726,"y":983,"score":47,"level":0},{"x":728,"y":983,"score":30,"level":0},{"x":936,"y":983,"score":27,"level":0},{"x":1019,"y":983,"score":29,"level":0},{"x":1027,"y":983,"score":262,"level":0},{"x":529,"y":984,"score":32,"level":0},{"x":681,"y":984,"score":30,"level":0},{"x":799,"y":984,"score":32,"level":0},{"x":801,"y":984,"score":33,"level":0},{"x":831,"y":984,"score":32,"level":0},{"x":863,"y":984,"score":27,"level":0},{"x":992,"y":984,"score":33,"level":0},{"x":1003,"y":984,"score":30,"level":0},{"x":1153,"y":984,"score":26,"level":0},{"x":1196,"y":984,"score":75,"level":0},{"x":1353,"y":984,"score":26,"level":0},{"x":421,"y":985,"score":26,"level":0},{"x":517,"y":985,"score":34,"level":0},{"x":523,"y":985,"score":40,"level":0},{"x":570,"y":985,"score":31,"level":0},{"x":583,"y":985,"score":37,"level":0},{"x":646,"y":985,"score":52,"level":0},{"x":1078,"y":985,"score":39,"level":0},{"x":1168,"y":985,"score":26,"level":0},{"x":1339,"y":985,"score":29,"level":0},{"x":481,"y":986,"score":42,"level":0},{"x":597,"y":986,"score":57,"level":0},{"x":685,"y":986,"score":26,"level":0},{"x":784,"y":986,"score":35,"level":0},{"x":874,"y":986,"score":35,"level":0},{"x":1034,"y":986,"score":128,"level":0},{"x":1148,"y":986,"score":34,"level":0},{"x":1163,"y":986,"score":68,"level":0},{"x":1188,"y":986,"score":36,"level":0},{"x":1438,"y":986,"score":28,"level":0},{"x":1467,"y":986,"score":30,"level":0},{"x":455,"y":987,"score":34,"level":0},{"x":458,"y":987,"score":39,"level":0},{"x":542,"y":987,"score":27,"level":0},{"x":555,"y":987,"score":54,"level":0},{"x":652,"y":987,"score":26,"level":0},{"x":752,"y":987,"score":128,"level":0},{"x":854,"y":987,"score":42,"level":0},{"x":898,"y":987,"score":42,"level":0},{"x":1040,"y":987,"score":27,"level":0},{"x":1043,"y":987,"score":56,"level":0},{"x":1317,"y":987,"score":54,"level":0},{"x":535,"y":988,"score":35,"level":0},{"x":722,"y":988,"score":35,"level":0},{"x":969,"y":988,"score":32,"level":0},{"x":1366,"y":988,"score":27,"level":0},{"x":1433,"y":988,"score":51,"level":0},{"x":427,"y":989,"score":39,"level":0},{"x":529,"y":989,"score":35,"level":0},{"x":542,"y":989,"score":26,"level":0},{"x":565,"y":989,"score":30,"level":0},{"x":747,"y":989,"score":26,"level":0},{"x":757,"y":989,"score":54,"level":0},{"x":770,"y":989,"score":27,"level":0},{"x":801,"y":989,"score":36,"level":0},{"x":814,"y":989,"score":28,"level":0},{"x":843,"y":989,"score":38,"level":0},{"x":1088,"y":989,"score":31,"level":0},{"x":1110,"y":989,"score":30,"level":0},{"x":1400,"y":989,"score":57,"level":0},{"x":402,"y":990,"score":36,"level":0},{"x":577,"y":990,"score":40,"level":0},{"x":807,"y":990,"score":27,"level":0},{"x":832,"y":990,"score":27,"level":0},{"x":890,"y":990,"score":37,"level":0},{"x":948,"y":990,"score":33,"level":0},{"x":1048,"y":990,"score":42,"level":0},{"x":1055,"y":990,"score":64,"level":0},{"x":1140,"y":990,"score":30,"level":0},{"x":1200,"y":990,"score":27,"level":0},{"x":1270,"y":990,"score":34,"level":0},{"x":1412,"y":990,"score":30,"level":0},{"x":1484,"y":990,"score":26,"level":0},{"x":399,"y":991,"score":41,"level":0},{"x":407,"y":991,"score":30,"level":0},{"x":438,"y":991,"score":64,"level":0},{"x":681,"y":991,"score":42,"level":0},{"x":717,"y":991,"score":32,"level":0},{"x":965,"y":991,"score":35,"level":0},{"x":994,"y":991,"score":44,"level":0},{"x":1031,"y":991,"score":83,"level":0},{"x":1072,"y":991,"score":48,"level":0},{"x":1239,"y":991,"score":34,"level":0},{"x":1313,"y":991,"score":57,"level":0},{"x":413,"y":992,"score":26,"level":0},{"x":492,"y":992,"score":54,"level":0},{"x":511,"y":992,"score":37,"level":0},{"x":535,"y":992,"score":31,"level":0},{"x":547,"y":992,"score":37,"level":0},{"x":592,"y":992,"score":44,"level":0},{"x":705,"y":992,"score":38,"level":0},{"x":710,"y":992,"score":28,"level":0},{"x":751,"y":992,"score":36,"level":0},{"x":773,"y":992,"score":44,"level":0},{"x":778,"y":992,"score":39,"level":0},{"x":873,"y":992,"score":38,"level":0},{"x":953,"y":992,"score":28,"level":0},{"x":982,"y":992,"score":33,"level":0},{"x":1000,"y":992,"score":42,"level":0},{"x":1002,"y":992,"score":31,"level":0},{"x":1164,"y":992,"score":32,"level":0},{"x":1233,"y":992,"score":29,"level":0},{"x":1287,"y":992,"score":62,"level":0},{"x":1329,"y":992,"score":49,"level":0},{"x":1356,"y":992,"score":28,"level":0},{"x":1412,"y":992,"score":37,"level":0}]}');
});
require.register("noflo-noflo-image/spec/fixtures/noText/flickr-8132786781-small.jpg.corners.json", function(exports, require, module){
module.exports = JSON.parse('{"corners":[{"x":377,"y":247,"score":36,"level":0},{"x":965,"y":248,"score":30,"level":0},{"x":1031,"y":248,"score":26,"level":0},{"x":869,"y":249,"score":44,"level":0},{"x":969,"y":250,"score":122,"level":0},{"x":1011,"y":251,"score":30,"level":0},{"x":1168,"y":251,"score":105,"level":0},{"x":1444,"y":251,"score":32,"level":0},{"x":372,"y":252,"score":46,"level":0},{"x":377,"y":252,"score":235,"level":0},{"x":388,"y":252,"score":33,"level":0},{"x":403,"y":252,"score":40,"level":0},{"x":435,"y":252,"score":83,"level":0},{"x":438,"y":252,"score":76,"level":0},{"x":452,"y":252,"score":127,"level":0},{"x":468,"y":252,"score":26,"level":0},{"x":476,"y":252,"score":90,"level":0},{"x":479,"y":252,"score":121,"level":0},{"x":491,"y":252,"score":114,"level":0},{"x":494,"y":252,"score":26,"level":0},{"x":507,"y":252,"score":149,"level":0},{"x":511,"y":252,"score":88,"level":0},{"x":513,"y":252,"score":95,"level":0},{"x":542,"y":252,"score":112,"level":0},{"x":559,"y":252,"score":176,"level":0},{"x":599,"y":252,"score":33,"level":0},{"x":606,"y":252,"score":88,"level":0},{"x":632,"y":252,"score":100,"level":0},{"x":659,"y":252,"score":104,"level":0},{"x":693,"y":252,"score":97,"level":0},{"x":704,"y":252,"score":81,"level":0},{"x":733,"y":252,"score":30,"level":0},{"x":735,"y":252,"score":36,"level":0},{"x":746,"y":252,"score":143,"level":0},{"x":756,"y":252,"score":61,"level":0},{"x":813,"y":252,"score":123,"level":0},{"x":826,"y":252,"score":137,"level":0},{"x":843,"y":252,"score":243,"level":0},{"x":877,"y":252,"score":197,"level":0},{"x":887,"y":252,"score":266,"level":0},{"x":908,"y":252,"score":51,"level":0},{"x":923,"y":252,"score":46,"level":0},{"x":932,"y":252,"score":76,"level":0},{"x":944,"y":252,"score":108,"level":0},{"x":953,"y":252,"score":28,"level":0},{"x":962,"y":252,"score":134,"level":0},{"x":989,"y":252,"score":79,"level":0},{"x":1017,"y":252,"score":141,"level":0},{"x":1026,"y":252,"score":80,"level":0},{"x":1051,"y":252,"score":229,"level":0},{"x":1063,"y":252,"score":274,"level":0},{"x":1075,"y":252,"score":113,"level":0},{"x":1086,"y":252,"score":124,"level":0},{"x":1093,"y":252,"score":38,"level":0},{"x":1096,"y":252,"score":34,"level":0},{"x":1113,"y":252,"score":172,"level":0},{"x":1127,"y":252,"score":54,"level":0},{"x":1130,"y":252,"score":26,"level":0},{"x":1141,"y":252,"score":145,"level":0},{"x":1152,"y":252,"score":138,"level":0},{"x":1163,"y":252,"score":223,"level":0},{"x":1173,"y":252,"score":159,"level":0},{"x":1194,"y":252,"score":35,"level":0},{"x":1206,"y":252,"score":136,"level":0},{"x":1219,"y":252,"score":68,"level":0},{"x":1228,"y":252,"score":73,"level":0},{"x":1236,"y":252,"score":74,"level":0},{"x":1255,"y":252,"score":51,"level":0},{"x":1265,"y":252,"score":132,"level":0},{"x":1275,"y":252,"score":231,"level":0},{"x":1286,"y":252,"score":29,"level":0},{"x":1293,"y":252,"score":55,"level":0},{"x":1323,"y":252,"score":94,"level":0},{"x":1334,"y":252,"score":105,"level":0},{"x":1344,"y":252,"score":70,"level":0},{"x":1352,"y":252,"score":60,"level":0},{"x":1360,"y":252,"score":28,"level":0},{"x":1366,"y":252,"score":69,"level":0},{"x":1368,"y":252,"score":145,"level":0},{"x":1391,"y":252,"score":30,"level":0},{"x":1395,"y":252,"score":27,"level":0},{"x":1397,"y":252,"score":56,"level":0},{"x":1411,"y":252,"score":112,"level":0},{"x":1424,"y":252,"score":52,"level":0},{"x":1438,"y":252,"score":34,"level":0},{"x":1453,"y":252,"score":148,"level":0},{"x":1474,"y":252,"score":80,"level":0},{"x":410,"y":253,"score":226,"level":0},{"x":415,"y":253,"score":48,"level":0},{"x":442,"y":253,"score":126,"level":0},{"x":618,"y":253,"score":69,"level":0},{"x":762,"y":253,"score":62,"level":0},{"x":1005,"y":253,"score":124,"level":0},{"x":1119,"y":253,"score":134,"level":0},{"x":1317,"y":253,"score":246,"level":0},{"x":1468,"y":253,"score":47,"level":0},{"x":1484,"y":253,"score":211,"level":0},{"x":501,"y":254,"score":253,"level":0},{"x":561,"y":254,"score":224,"level":0},{"x":900,"y":254,"score":252,"level":0},{"x":988,"y":254,"score":80,"level":0},{"x":1012,"y":254,"score":86,"level":0},{"x":1343,"y":254,"score":88,"level":0},{"x":1381,"y":254,"score":78,"level":0},{"x":1490,"y":254,"score":115,"level":0},{"x":377,"y":255,"score":142,"level":0},{"x":674,"y":255,"score":103,"level":0},{"x":868,"y":255,"score":213,"level":0},{"x":893,"y":255,"score":47,"level":0},{"x":1004,"y":255,"score":86,"level":0},{"x":1029,"y":255,"score":150,"level":0},{"x":1034,"y":255,"score":39,"level":0},{"x":1056,"y":255,"score":71,"level":0},{"x":1121,"y":255,"score":48,"level":0},{"x":1195,"y":255,"score":86,"level":0},{"x":1281,"y":255,"score":58,"level":0},{"x":1297,"y":255,"score":68,"level":0},{"x":1325,"y":255,"score":132,"level":0},{"x":1368,"y":255,"score":230,"level":0},{"x":495,"y":256,"score":44,"level":0},{"x":567,"y":256,"score":28,"level":0},{"x":679,"y":256,"score":58,"level":0},{"x":834,"y":256,"score":76,"level":0},{"x":926,"y":256,"score":30,"level":0},{"x":972,"y":256,"score":80,"level":0},{"x":994,"y":256,"score":90,"level":0},{"x":1233,"y":256,"score":39,"level":0},{"x":1337,"y":256,"score":28,"level":0},{"x":1450,"y":256,"score":141,"level":0},{"x":383,"y":257,"score":70,"level":0},{"x":486,"y":257,"score":66,"level":0},{"x":557,"y":257,"score":45,"level":0},{"x":595,"y":257,"score":44,"level":0},{"x":661,"y":257,"score":79,"level":0},{"x":718,"y":257,"score":29,"level":0},{"x":804,"y":257,"score":30,"level":0},{"x":875,"y":257,"score":149,"level":0},{"x":931,"y":257,"score":26,"level":0},{"x":953,"y":257,"score":72,"level":0},{"x":1207,"y":257,"score":97,"level":0},{"x":1281,"y":257,"score":49,"level":0},{"x":377,"y":258,"score":78,"level":0},{"x":513,"y":258,"score":41,"level":0},{"x":834,"y":258,"score":78,"level":0},{"x":936,"y":258,"score":49,"level":0},{"x":958,"y":258,"score":33,"level":0},{"x":999,"y":258,"score":36,"level":0},{"x":1116,"y":258,"score":54,"level":0},{"x":1148,"y":258,"score":87,"level":0},{"x":1174,"y":258,"score":72,"level":0},{"x":1267,"y":258,"score":155,"level":0},{"x":1395,"y":258,"score":53,"level":0},{"x":1421,"y":258,"score":48,"level":0},{"x":1435,"y":258,"score":56,"level":0},{"x":1441,"y":258,"score":30,"level":0},{"x":1458,"y":258,"score":100,"level":0},{"x":1465,"y":258,"score":89,"level":0},{"x":1468,"y":258,"score":116,"level":0},{"x":450,"y":259,"score":153,"level":0},{"x":816,"y":259,"score":34,"level":0},{"x":942,"y":259,"score":38,"level":0},{"x":963,"y":259,"score":88,"level":0},{"x":982,"y":259,"score":53,"level":0},{"x":1122,"y":259,"score":48,"level":0},{"x":1130,"y":259,"score":38,"level":0},{"x":1227,"y":259,"score":139,"level":0},{"x":1403,"y":259,"score":26,"level":0},{"x":417,"y":260,"score":30,"level":0},{"x":555,"y":260,"score":40,"level":0},{"x":619,"y":260,"score":26,"level":0},{"x":624,"y":260,"score":42,"level":0},{"x":715,"y":260,"score":45,"level":0},{"x":863,"y":260,"score":36,"level":0},{"x":888,"y":260,"score":30,"level":0},{"x":912,"y":260,"score":81,"level":0},{"x":917,"y":260,"score":115,"level":0},{"x":925,"y":260,"score":109,"level":0},{"x":1016,"y":260,"score":49,"level":0},{"x":1051,"y":260,"score":116,"level":0},{"x":1143,"y":260,"score":42,"level":0},{"x":1216,"y":260,"score":70,"level":0},{"x":1222,"y":260,"score":94,"level":0},{"x":1234,"y":260,"score":52,"level":0},{"x":1243,"y":260,"score":39,"level":0},{"x":1246,"y":260,"score":36,"level":0},{"x":1270,"y":260,"score":108,"level":0},{"x":1360,"y":260,"score":123,"level":0},{"x":444,"y":261,"score":42,"level":0},{"x":470,"y":261,"score":83,"level":0},{"x":590,"y":261,"score":30,"level":0},{"x":642,"y":261,"score":37,"level":0},{"x":721,"y":261,"score":56,"level":0},{"x":991,"y":261,"score":45,"level":0},{"x":1046,"y":261,"score":124,"level":0},{"x":1176,"y":261,"score":44,"level":0},{"x":1192,"y":261,"score":50,"level":0},{"x":1231,"y":261,"score":89,"level":0},{"x":1251,"y":261,"score":70,"level":0},{"x":1258,"y":261,"score":46,"level":0},{"x":1278,"y":261,"score":196,"level":0},{"x":1321,"y":261,"score":118,"level":0},{"x":1490,"y":261,"score":61,"level":0},{"x":412,"y":262,"score":52,"level":0},{"x":456,"y":262,"score":53,"level":0},{"x":698,"y":262,"score":46,"level":0},{"x":763,"y":262,"score":36,"level":0},{"x":823,"y":262,"score":54,"level":0},{"x":907,"y":262,"score":69,"level":0},{"x":947,"y":262,"score":66,"level":0},{"x":1061,"y":262,"score":64,"level":0},{"x":1080,"y":262,"score":77,"level":0},{"x":1094,"y":262,"score":36,"level":0},{"x":1153,"y":262,"score":58,"level":0},{"x":1161,"y":262,"score":154,"level":0},{"x":1169,"y":262,"score":84,"level":0},{"x":1237,"y":262,"score":46,"level":0},{"x":1312,"y":262,"score":34,"level":0},{"x":1345,"y":262,"score":79,"level":0},{"x":1391,"y":262,"score":28,"level":0},{"x":1414,"y":262,"score":27,"level":0},{"x":1472,"y":262,"score":64,"level":0},{"x":383,"y":263,"score":54,"level":0},{"x":463,"y":263,"score":46,"level":0},{"x":525,"y":263,"score":31,"level":0},{"x":636,"y":263,"score":68,"level":0},{"x":671,"y":263,"score":30,"level":0},{"x":740,"y":263,"score":33,"level":0},{"x":840,"y":263,"score":144,"level":0},{"x":972,"y":263,"score":73,"level":0},{"x":1012,"y":263,"score":51,"level":0},{"x":1076,"y":263,"score":51,"level":0},{"x":1085,"y":263,"score":85,"level":0},{"x":1114,"y":263,"score":48,"level":0},{"x":1174,"y":263,"score":48,"level":0},{"x":1426,"y":263,"score":44,"level":0},{"x":1443,"y":263,"score":29,"level":0},{"x":1455,"y":263,"score":31,"level":0},{"x":1490,"y":263,"score":64,"level":0},{"x":435,"y":264,"score":44,"level":0},{"x":511,"y":264,"score":121,"level":0},{"x":567,"y":264,"score":50,"level":0},{"x":611,"y":264,"score":33,"level":0},{"x":729,"y":264,"score":82,"level":0},{"x":751,"y":264,"score":36,"level":0},{"x":778,"y":264,"score":49,"level":0},{"x":811,"y":264,"score":26,"level":0},{"x":829,"y":264,"score":140,"level":0},{"x":845,"y":264,"score":56,"level":0},{"x":915,"y":264,"score":33,"level":0},{"x":1030,"y":264,"score":105,"level":0},{"x":1047,"y":264,"score":150,"level":0},{"x":1139,"y":264,"score":36,"level":0},{"x":1219,"y":264,"score":32,"level":0},{"x":1273,"y":264,"score":44,"level":0},{"x":1333,"y":264,"score":72,"level":0},{"x":1396,"y":264,"score":26,"level":0},{"x":1465,"y":264,"score":51,"level":0},{"x":412,"y":265,"score":62,"level":0},{"x":443,"y":265,"score":67,"level":0},{"x":453,"y":265,"score":110,"level":0},{"x":530,"y":265,"score":32,"level":0},{"x":562,"y":265,"score":109,"level":0},{"x":578,"y":265,"score":28,"level":0},{"x":717,"y":265,"score":28,"level":0},{"x":931,"y":265,"score":41,"level":0},{"x":975,"y":265,"score":27,"level":0},{"x":1077,"y":265,"score":52,"level":0},{"x":1095,"y":265,"score":54,"level":0},{"x":1107,"y":265,"score":37,"level":0},{"x":1120,"y":265,"score":86,"level":0},{"x":1127,"y":265,"score":39,"level":0},{"x":1132,"y":265,"score":37,"level":0},{"x":1144,"y":265,"score":37,"level":0},{"x":1149,"y":265,"score":26,"level":0},{"x":1200,"y":265,"score":72,"level":0},{"x":1210,"y":265,"score":52,"level":0},{"x":1223,"y":265,"score":28,"level":0},{"x":1246,"y":265,"score":78,"level":0},{"x":1263,"y":265,"score":73,"level":0},{"x":1381,"y":265,"score":44,"level":0},{"x":1407,"y":265,"score":74,"level":0},{"x":1432,"y":265,"score":41,"level":0},{"x":387,"y":266,"score":101,"level":0},{"x":433,"y":266,"score":52,"level":0},{"x":515,"y":266,"score":33,"level":0},{"x":520,"y":266,"score":26,"level":0},{"x":537,"y":266,"score":29,"level":0},{"x":571,"y":266,"score":43,"level":0},{"x":601,"y":266,"score":70,"level":0},{"x":669,"y":266,"score":27,"level":0},{"x":679,"y":266,"score":30,"level":0},{"x":685,"y":266,"score":58,"level":0},{"x":726,"y":266,"score":50,"level":0},{"x":801,"y":266,"score":48,"level":0},{"x":888,"y":266,"score":60,"level":0},{"x":903,"y":266,"score":58,"level":0},{"x":1001,"y":266,"score":118,"level":0},{"x":1014,"y":266,"score":32,"level":0},{"x":1019,"y":266,"score":49,"level":0},{"x":1089,"y":266,"score":28,"level":0},{"x":1191,"y":266,"score":74,"level":0},{"x":1228,"y":266,"score":110,"level":0},{"x":1365,"y":266,"score":132,"level":0},{"x":1421,"y":266,"score":32,"level":0},{"x":448,"y":267,"score":32,"level":0},{"x":472,"y":267,"score":42,"level":0},{"x":490,"y":267,"score":110,"level":0},{"x":495,"y":267,"score":85,"level":0},{"x":553,"y":267,"score":33,"level":0},{"x":690,"y":267,"score":34,"level":0},{"x":693,"y":267,"score":34,"level":0},{"x":794,"y":267,"score":26,"level":0},{"x":835,"y":267,"score":69,"level":0},{"x":883,"y":267,"score":40,"level":0},{"x":953,"y":267,"score":29,"level":0},{"x":1131,"y":267,"score":28,"level":0},{"x":1149,"y":267,"score":32,"level":0},{"x":1234,"y":267,"score":34,"level":0},{"x":377,"y":268,"score":48,"level":0},{"x":428,"y":268,"score":26,"level":0},{"x":484,"y":268,"score":58,"level":0},{"x":519,"y":268,"score":57,"level":0},{"x":555,"y":268,"score":41,"level":0},{"x":873,"y":268,"score":29,"level":0},{"x":1085,"y":268,"score":73,"level":0},{"x":1158,"y":268,"score":81,"level":0},{"x":1475,"y":268,"score":34,"level":0},{"x":521,"y":269,"score":40,"level":0},{"x":527,"y":269,"score":120,"level":0},{"x":536,"y":269,"score":70,"level":0},{"x":542,"y":269,"score":28,"level":0},{"x":568,"y":269,"score":27,"level":0},{"x":638,"y":269,"score":48,"level":0},{"x":645,"y":269,"score":52,"level":0},{"x":652,"y":269,"score":53,"level":0},{"x":701,"y":269,"score":108,"level":0},{"x":714,"y":269,"score":34,"level":0},{"x":878,"y":269,"score":32,"level":0},{"x":884,"y":269,"score":28,"level":0},{"x":897,"y":269,"score":89,"level":0},{"x":957,"y":269,"score":28,"level":0},{"x":1059,"y":269,"score":36,"level":0},{"x":1125,"y":269,"score":56,"level":0},{"x":1191,"y":269,"score":30,"level":0},{"x":1217,"y":269,"score":89,"level":0},{"x":1234,"y":269,"score":28,"level":0},{"x":1241,"y":269,"score":34,"level":0},{"x":1317,"y":269,"score":110,"level":0},{"x":1449,"y":269,"score":97,"level":0},{"x":688,"y":270,"score":26,"level":0},{"x":818,"y":270,"score":106,"level":0},{"x":841,"y":270,"score":99,"level":0},{"x":866,"y":270,"score":53,"level":0},{"x":996,"y":270,"score":78,"level":0},{"x":1016,"y":270,"score":97,"level":0},{"x":1065,"y":270,"score":78,"level":0},{"x":1109,"y":270,"score":42,"level":0},{"x":1118,"y":270,"score":74,"level":0},{"x":1275,"y":270,"score":239,"level":0},{"x":1411,"y":270,"score":33,"level":0},{"x":1429,"y":270,"score":58,"level":0},{"x":1435,"y":270,"score":107,"level":0},{"x":1441,"y":270,"score":40,"level":0},{"x":386,"y":271,"score":43,"level":0},{"x":400,"y":271,"score":40,"level":0},{"x":450,"y":271,"score":52,"level":0},{"x":612,"y":271,"score":85,"level":0},{"x":735,"y":271,"score":104,"level":0},{"x":829,"y":271,"score":138,"level":0},{"x":962,"y":271,"score":37,"level":0},{"x":974,"y":271,"score":62,"level":0},{"x":1005,"y":271,"score":91,"level":0},{"x":1096,"y":271,"score":104,"level":0},{"x":1152,"y":271,"score":100,"level":0},{"x":1209,"y":271,"score":176,"level":0},{"x":1224,"y":271,"score":67,"level":0},{"x":1280,"y":271,"score":44,"level":0},{"x":1332,"y":271,"score":112,"level":0},{"x":1466,"y":271,"score":57,"level":0},{"x":1488,"y":271,"score":103,"level":0},{"x":475,"y":272,"score":29,"level":0},{"x":563,"y":272,"score":92,"level":0},{"x":661,"y":272,"score":75,"level":0},{"x":692,"y":272,"score":78,"level":0},{"x":759,"y":272,"score":31,"level":0},{"x":988,"y":272,"score":176,"level":0},{"x":1059,"y":272,"score":48,"level":0},{"x":1078,"y":272,"score":114,"level":0},{"x":1091,"y":272,"score":51,"level":0},{"x":1102,"y":272,"score":144,"level":0},{"x":1146,"y":272,"score":34,"level":0},{"x":1154,"y":272,"score":31,"level":0},{"x":1192,"y":272,"score":50,"level":0},{"x":1194,"y":272,"score":37,"level":0},{"x":1229,"y":272,"score":43,"level":0},{"x":1256,"y":272,"score":45,"level":0},{"x":1321,"y":272,"score":91,"level":0},{"x":1327,"y":272,"score":58,"level":0},{"x":1337,"y":272,"score":26,"level":0},{"x":1365,"y":272,"score":161,"level":0},{"x":1443,"y":272,"score":70,"level":0},{"x":462,"y":273,"score":123,"level":0},{"x":468,"y":273,"score":44,"level":0},{"x":484,"y":273,"score":55,"level":0},{"x":611,"y":273,"score":72,"level":0},{"x":674,"y":273,"score":49,"level":0},{"x":685,"y":273,"score":32,"level":0},{"x":710,"y":273,"score":81,"level":0},{"x":730,"y":273,"score":89,"level":0},{"x":834,"y":273,"score":85,"level":0},{"x":922,"y":273,"score":47,"level":0},{"x":927,"y":273,"score":48,"level":0},{"x":937,"y":273,"score":66,"level":0},{"x":1028,"y":273,"score":100,"level":0},{"x":1073,"y":273,"score":136,"level":0},{"x":1083,"y":273,"score":212,"level":0},{"x":1111,"y":273,"score":71,"level":0},{"x":1162,"y":273,"score":86,"level":0},{"x":1389,"y":273,"score":76,"level":0},{"x":1403,"y":273,"score":195,"level":0},{"x":1409,"y":273,"score":55,"level":0},{"x":546,"y":274,"score":27,"level":0},{"x":554,"y":274,"score":57,"level":0},{"x":640,"y":274,"score":32,"level":0},{"x":697,"y":274,"score":62,"level":0},{"x":726,"y":274,"score":51,"level":0},{"x":732,"y":274,"score":53,"level":0},{"x":740,"y":274,"score":59,"level":0},{"x":768,"y":274,"score":56,"level":0},{"x":801,"y":274,"score":36,"level":0},{"x":804,"y":274,"score":50,"level":0},{"x":889,"y":274,"score":53,"level":0},{"x":944,"y":274,"score":72,"level":0},{"x":960,"y":274,"score":31,"level":0},{"x":1000,"y":274,"score":116,"level":0},{"x":1053,"y":274,"score":71,"level":0},{"x":1089,"y":274,"score":28,"level":0},{"x":1097,"y":274,"score":54,"level":0},{"x":1122,"y":274,"score":50,"level":0},{"x":1125,"y":274,"score":66,"level":0},{"x":1134,"y":274,"score":108,"level":0},{"x":1149,"y":274,"score":46,"level":0},{"x":1241,"y":274,"score":40,"level":0},{"x":1247,"y":274,"score":72,"level":0},{"x":1456,"y":274,"score":58,"level":0},{"x":436,"y":275,"score":60,"level":0},{"x":527,"y":275,"score":32,"level":0},{"x":619,"y":275,"score":44,"level":0},{"x":625,"y":275,"score":108,"level":0},{"x":671,"y":275,"score":33,"level":0},{"x":689,"y":275,"score":46,"level":0},{"x":734,"y":275,"score":36,"level":0},{"x":886,"y":275,"score":152,"level":0},{"x":894,"y":275,"score":26,"level":0},{"x":901,"y":275,"score":89,"level":0},{"x":931,"y":275,"score":33,"level":0},{"x":965,"y":275,"score":29,"level":0},{"x":991,"y":275,"score":37,"level":0},{"x":1041,"y":275,"score":32,"level":0},{"x":1046,"y":275,"score":81,"level":0},{"x":1058,"y":275,"score":44,"level":0},{"x":1062,"y":275,"score":62,"level":0},{"x":1179,"y":275,"score":49,"level":0},{"x":1234,"y":275,"score":94,"level":0},{"x":1303,"y":275,"score":34,"level":0},{"x":1312,"y":275,"score":48,"level":0},{"x":1358,"y":275,"score":94,"level":0},{"x":1379,"y":275,"score":27,"level":0},{"x":1381,"y":275,"score":47,"level":0},{"x":1408,"y":275,"score":58,"level":0},{"x":1425,"y":275,"score":102,"level":0},{"x":1448,"y":275,"score":36,"level":0},{"x":1469,"y":275,"score":84,"level":0},{"x":1474,"y":275,"score":46,"level":0},{"x":386,"y":276,"score":50,"level":0},{"x":400,"y":276,"score":95,"level":0},{"x":414,"y":276,"score":66,"level":0},{"x":507,"y":276,"score":135,"level":0},{"x":680,"y":276,"score":78,"level":0},{"x":751,"y":276,"score":120,"level":0},{"x":774,"y":276,"score":34,"level":0},{"x":831,"y":276,"score":126,"level":0},{"x":1168,"y":276,"score":32,"level":0},{"x":1175,"y":276,"score":56,"level":0},{"x":1185,"y":276,"score":37,"level":0},{"x":1191,"y":276,"score":30,"level":0},{"x":1199,"y":276,"score":74,"level":0},{"x":1275,"y":276,"score":43,"level":0},{"x":1277,"y":276,"score":130,"level":0},{"x":1300,"y":276,"score":36,"level":0},{"x":1317,"y":276,"score":42,"level":0},{"x":1366,"y":276,"score":185,"level":0},{"x":1465,"y":276,"score":141,"level":0},{"x":378,"y":277,"score":170,"level":0},{"x":442,"y":277,"score":36,"level":0},{"x":553,"y":277,"score":30,"level":0},{"x":651,"y":277,"score":120,"level":0},{"x":829,"y":277,"score":160,"level":0},{"x":873,"y":277,"score":41,"level":0},{"x":879,"y":277,"score":46,"level":0},{"x":1065,"y":277,"score":54,"level":0},{"x":1102,"y":277,"score":61,"level":0},{"x":1234,"y":277,"score":39,"level":0},{"x":1269,"y":277,"score":33,"level":0},{"x":1336,"y":277,"score":67,"level":0},{"x":1490,"y":277,"score":54,"level":0},{"x":395,"y":278,"score":40,"level":0},{"x":406,"y":278,"score":83,"level":0},{"x":607,"y":278,"score":110,"level":0},{"x":658,"y":278,"score":88,"level":0},{"x":673,"y":278,"score":31,"level":0},{"x":745,"y":278,"score":105,"level":0},{"x":821,"y":278,"score":74,"level":0},{"x":836,"y":278,"score":30,"level":0},{"x":911,"y":278,"score":66,"level":0},{"x":926,"y":278,"score":58,"level":0},{"x":977,"y":278,"score":72,"level":0},{"x":996,"y":278,"score":54,"level":0},{"x":1017,"y":278,"score":30,"level":0},{"x":1073,"y":278,"score":107,"level":0},{"x":1114,"y":278,"score":89,"level":0},{"x":1135,"y":278,"score":74,"level":0},{"x":1142,"y":278,"score":109,"level":0},{"x":1160,"y":278,"score":66,"level":0},{"x":1221,"y":278,"score":116,"level":0},{"x":1229,"y":278,"score":113,"level":0},{"x":1350,"y":278,"score":73,"level":0},{"x":1363,"y":278,"score":37,"level":0},{"x":1370,"y":278,"score":57,"level":0},{"x":1391,"y":278,"score":67,"level":0},{"x":435,"y":279,"score":26,"level":0},{"x":454,"y":279,"score":30,"level":0},{"x":513,"y":279,"score":26,"level":0},{"x":519,"y":279,"score":36,"level":0},{"x":564,"y":279,"score":26,"level":0},{"x":597,"y":279,"score":64,"level":0},{"x":695,"y":279,"score":55,"level":0},{"x":709,"y":279,"score":82,"level":0},{"x":763,"y":279,"score":107,"level":0},{"x":804,"y":279,"score":35,"level":0},{"x":814,"y":279,"score":60,"level":0},{"x":816,"y":279,"score":58,"level":0},{"x":941,"y":279,"score":35,"level":0},{"x":959,"y":279,"score":54,"level":0},{"x":1045,"y":279,"score":111,"level":0},{"x":1057,"y":279,"score":107,"level":0},{"x":1080,"y":279,"score":51,"level":0},{"x":1153,"y":279,"score":95,"level":0},{"x":1183,"y":279,"score":70,"level":0},{"x":1238,"y":279,"score":54,"level":0},{"x":1243,"y":279,"score":41,"level":0},{"x":1251,"y":279,"score":70,"level":0},{"x":1253,"y":279,"score":56,"level":0},{"x":1260,"y":279,"score":37,"level":0},{"x":1355,"y":279,"score":41,"level":0},{"x":1384,"y":279,"score":26,"level":0},{"x":1396,"y":279,"score":40,"level":0},{"x":612,"y":280,"score":75,"level":0},{"x":632,"y":280,"score":80,"level":0},{"x":658,"y":280,"score":59,"level":0},{"x":736,"y":280,"score":55,"level":0},{"x":771,"y":280,"score":41,"level":0},{"x":807,"y":280,"score":30,"level":0},{"x":926,"y":280,"score":43,"level":0},{"x":968,"y":280,"score":40,"level":0},{"x":1025,"y":280,"score":28,"level":0},{"x":1030,"y":280,"score":65,"level":0},{"x":1062,"y":280,"score":32,"level":0},{"x":1108,"y":280,"score":35,"level":0},{"x":1112,"y":280,"score":89,"level":0},{"x":1121,"y":280,"score":66,"level":0},{"x":1174,"y":280,"score":26,"level":0},{"x":1212,"y":280,"score":27,"level":0},{"x":1379,"y":280,"score":74,"level":0},{"x":1452,"y":280,"score":35,"level":0},{"x":1483,"y":280,"score":32,"level":0},{"x":397,"y":281,"score":56,"level":0},{"x":444,"y":281,"score":113,"level":0},{"x":449,"y":281,"score":77,"level":0},{"x":475,"y":281,"score":94,"level":0},{"x":526,"y":281,"score":56,"level":0},{"x":537,"y":281,"score":59,"level":0},{"x":548,"y":281,"score":61,"level":0},{"x":616,"y":281,"score":31,"level":0},{"x":621,"y":281,"score":49,"level":0},{"x":643,"y":281,"score":56,"level":0},{"x":698,"y":281,"score":43,"level":0},{"x":756,"y":281,"score":26,"level":0},{"x":931,"y":281,"score":95,"level":0},{"x":937,"y":281,"score":73,"level":0},{"x":960,"y":281,"score":35,"level":0},{"x":963,"y":281,"score":41,"level":0},{"x":991,"y":281,"score":38,"level":0},{"x":1045,"y":281,"score":61,"level":0},{"x":1169,"y":281,"score":41,"level":0},{"x":1192,"y":281,"score":111,"level":0},{"x":1217,"y":281,"score":50,"level":0},{"x":1226,"y":281,"score":150,"level":0},{"x":1239,"y":281,"score":95,"level":0},{"x":1244,"y":281,"score":38,"level":0},{"x":1258,"y":281,"score":39,"level":0},{"x":1283,"y":281,"score":100,"level":0},{"x":1374,"y":281,"score":29,"level":0},{"x":383,"y":282,"score":39,"level":0},{"x":455,"y":282,"score":98,"level":0},{"x":745,"y":282,"score":32,"level":0},{"x":788,"y":282,"score":90,"level":0},{"x":875,"y":282,"score":44,"level":0},{"x":885,"y":282,"score":72,"level":0},{"x":945,"y":282,"score":38,"level":0},{"x":1075,"y":282,"score":114,"level":0},{"x":1107,"y":282,"score":47,"level":0},{"x":1253,"y":282,"score":91,"level":0},{"x":1272,"y":282,"score":97,"level":0},{"x":1316,"y":282,"score":50,"level":0},{"x":1456,"y":282,"score":46,"level":0},{"x":1471,"y":282,"score":37,"level":0},{"x":1490,"y":282,"score":51,"level":0},{"x":403,"y":283,"score":78,"level":0},{"x":494,"y":283,"score":63,"level":0},{"x":637,"y":283,"score":87,"level":0},{"x":715,"y":283,"score":52,"level":0},{"x":720,"y":283,"score":46,"level":0},{"x":730,"y":283,"score":49,"level":0},{"x":776,"y":283,"score":100,"level":0},{"x":778,"y":283,"score":50,"level":0},{"x":826,"y":283,"score":85,"level":0},{"x":880,"y":283,"score":57,"level":0},{"x":919,"y":283,"score":28,"level":0},{"x":975,"y":283,"score":45,"level":0},{"x":1014,"y":283,"score":30,"level":0},{"x":1092,"y":283,"score":82,"level":0},{"x":1099,"y":283,"score":38,"level":0},{"x":1142,"y":283,"score":28,"level":0},{"x":1228,"y":283,"score":147,"level":0},{"x":1277,"y":283,"score":27,"level":0},{"x":1327,"y":283,"score":99,"level":0},{"x":1351,"y":283,"score":98,"level":0},{"x":1441,"y":283,"score":91,"level":0},{"x":1466,"y":283,"score":202,"level":0},{"x":607,"y":284,"score":50,"level":0},{"x":645,"y":284,"score":103,"level":0},{"x":652,"y":284,"score":60,"level":0},{"x":672,"y":284,"score":61,"level":0},{"x":702,"y":284,"score":46,"level":0},{"x":761,"y":284,"score":37,"level":0},{"x":864,"y":284,"score":103,"level":0},{"x":952,"y":284,"score":59,"level":0},{"x":954,"y":284,"score":51,"level":0},{"x":966,"y":284,"score":33,"level":0},{"x":1118,"y":284,"score":29,"level":0},{"x":1164,"y":284,"score":88,"level":0},{"x":1234,"y":284,"score":32,"level":0},{"x":1333,"y":284,"score":112,"level":0},{"x":1346,"y":284,"score":60,"level":0},{"x":1477,"y":284,"score":67,"level":0},{"x":477,"y":285,"score":67,"level":0},{"x":630,"y":285,"score":77,"level":0},{"x":650,"y":285,"score":61,"level":0},{"x":707,"y":285,"score":52,"level":0},{"x":715,"y":285,"score":53,"level":0},{"x":814,"y":285,"score":42,"level":0},{"x":889,"y":285,"score":58,"level":0},{"x":986,"y":285,"score":58,"level":0},{"x":1044,"y":285,"score":41,"level":0},{"x":1084,"y":285,"score":80,"level":0},{"x":1179,"y":285,"score":159,"level":0},{"x":1236,"y":285,"score":44,"level":0},{"x":1238,"y":285,"score":53,"level":0},{"x":1247,"y":285,"score":56,"level":0},{"x":1272,"y":285,"score":32,"level":0},{"x":1277,"y":285,"score":41,"level":0},{"x":1339,"y":285,"score":144,"level":0},{"x":1364,"y":285,"score":133,"level":0},{"x":1389,"y":285,"score":42,"level":0},{"x":415,"y":286,"score":218,"level":0},{"x":514,"y":286,"score":96,"level":0},{"x":537,"y":286,"score":82,"level":0},{"x":551,"y":286,"score":82,"level":0},{"x":556,"y":286,"score":62,"level":0},{"x":610,"y":286,"score":68,"level":0},{"x":668,"y":286,"score":38,"level":0},{"x":683,"y":286,"score":35,"level":0},{"x":739,"y":286,"score":45,"level":0},{"x":802,"y":286,"score":42,"level":0},{"x":915,"y":286,"score":52,"level":0},{"x":918,"y":286,"score":40,"level":0},{"x":924,"y":286,"score":37,"level":0},{"x":930,"y":286,"score":43,"level":0},{"x":959,"y":286,"score":36,"level":0},{"x":964,"y":286,"score":56,"level":0},{"x":969,"y":286,"score":66,"level":0},{"x":1023,"y":286,"score":119,"level":0},{"x":1029,"y":286,"score":143,"level":0},{"x":1146,"y":286,"score":72,"level":0},{"x":1358,"y":286,"score":147,"level":0},{"x":1398,"y":286,"score":28,"level":0},{"x":377,"y":287,"score":123,"level":0},{"x":384,"y":287,"score":29,"level":0},{"x":462,"y":287,"score":57,"level":0},{"x":470,"y":287,"score":46,"level":0},{"x":524,"y":287,"score":46,"level":0},{"x":543,"y":287,"score":26,"level":0},{"x":558,"y":287,"score":31,"level":0},{"x":597,"y":287,"score":36,"level":0},{"x":726,"y":287,"score":29,"level":0},{"x":791,"y":287,"score":36,"level":0},{"x":830,"y":287,"score":50,"level":0},{"x":910,"y":287,"score":54,"level":0},{"x":1015,"y":287,"score":49,"level":0},{"x":1117,"y":287,"score":28,"level":0},{"x":1241,"y":287,"score":50,"level":0},{"x":1258,"y":287,"score":40,"level":0},{"x":1263,"y":287,"score":76,"level":0},{"x":1439,"y":287,"score":53,"level":0},{"x":440,"y":288,"score":145,"level":0},{"x":451,"y":288,"score":42,"level":0},{"x":636,"y":288,"score":82,"level":0},{"x":663,"y":288,"score":50,"level":0},{"x":689,"y":288,"score":53,"level":0},{"x":696,"y":288,"score":65,"level":0},{"x":749,"y":288,"score":86,"level":0},{"x":764,"y":288,"score":42,"level":0},{"x":795,"y":288,"score":47,"level":0},{"x":1077,"y":288,"score":67,"level":0},{"x":1148,"y":288,"score":36,"level":0},{"x":1154,"y":288,"score":83,"level":0},{"x":1175,"y":288,"score":40,"level":0},{"x":1253,"y":288,"score":82,"level":0},{"x":1473,"y":288,"score":29,"level":0},{"x":446,"y":289,"score":108,"level":0},{"x":507,"y":289,"score":28,"level":0},{"x":538,"y":289,"score":76,"level":0},{"x":609,"y":289,"score":29,"level":0},{"x":658,"y":289,"score":52,"level":0},{"x":770,"y":289,"score":29,"level":0},{"x":785,"y":289,"score":28,"level":0},{"x":958,"y":289,"score":34,"level":0},{"x":975,"y":289,"score":111,"level":0},{"x":1017,"y":289,"score":68,"level":0},{"x":1056,"y":289,"score":98,"level":0},{"x":1062,"y":289,"score":51,"level":0},{"x":1093,"y":289,"score":30,"level":0},{"x":1095,"y":289,"score":74,"level":0},{"x":1109,"y":289,"score":30,"level":0},{"x":1169,"y":289,"score":77,"level":0},{"x":1187,"y":289,"score":56,"level":0},{"x":1217,"y":289,"score":66,"level":0},{"x":1272,"y":289,"score":69,"level":0},{"x":1335,"y":289,"score":158,"level":0},{"x":1349,"y":289,"score":52,"level":0},{"x":1381,"y":289,"score":42,"level":0},{"x":1430,"y":289,"score":76,"level":0},{"x":1437,"y":289,"score":58,"level":0},{"x":1445,"y":289,"score":34,"level":0},{"x":393,"y":290,"score":46,"level":0},{"x":404,"y":290,"score":138,"level":0},{"x":457,"y":290,"score":85,"level":0},{"x":607,"y":290,"score":76,"level":0},{"x":622,"y":290,"score":103,"level":0},{"x":631,"y":290,"score":30,"level":0},{"x":715,"y":290,"score":42,"level":0},{"x":822,"y":290,"score":32,"level":0},{"x":995,"y":290,"score":28,"level":0},{"x":1001,"y":290,"score":100,"level":0},{"x":1163,"y":290,"score":42,"level":0},{"x":1184,"y":290,"score":39,"level":0},{"x":1236,"y":290,"score":129,"level":0},{"x":1246,"y":290,"score":55,"level":0},{"x":1453,"y":290,"score":44,"level":0},{"x":397,"y":291,"score":115,"level":0},{"x":489,"y":291,"score":117,"level":0},{"x":495,"y":291,"score":64,"level":0},{"x":544,"y":291,"score":32,"level":0},{"x":668,"y":291,"score":82,"level":0},{"x":692,"y":291,"score":36,"level":0},{"x":704,"y":291,"score":36,"level":0},{"x":802,"y":291,"score":36,"level":0},{"x":925,"y":291,"score":62,"level":0},{"x":930,"y":291,"score":76,"level":0},{"x":951,"y":291,"score":58,"level":0},{"x":985,"y":291,"score":130,"level":0},{"x":1056,"y":291,"score":75,"level":0},{"x":1137,"y":291,"score":49,"level":0},{"x":1143,"y":291,"score":80,"level":0},{"x":1150,"y":291,"score":39,"level":0},{"x":1195,"y":291,"score":52,"level":0},{"x":1214,"y":291,"score":42,"level":0},{"x":1226,"y":291,"score":42,"level":0},{"x":1316,"y":291,"score":78,"level":0},{"x":1485,"y":291,"score":89,"level":0},{"x":408,"y":292,"score":32,"level":0},{"x":417,"y":292,"score":117,"level":0},{"x":514,"y":292,"score":96,"level":0},{"x":538,"y":292,"score":28,"level":0},{"x":602,"y":292,"score":100,"level":0},{"x":617,"y":292,"score":42,"level":0},{"x":680,"y":292,"score":91,"level":0},{"x":747,"y":292,"score":31,"level":0},{"x":831,"y":292,"score":99,"level":0},{"x":836,"y":292,"score":38,"level":0},{"x":877,"y":292,"score":100,"level":0},{"x":947,"y":292,"score":45,"level":0},{"x":995,"y":292,"score":73,"level":0},{"x":1050,"y":292,"score":80,"level":0},{"x":1096,"y":292,"score":70,"level":0},{"x":1155,"y":292,"score":42,"level":0},{"x":1223,"y":292,"score":52,"level":0},{"x":1271,"y":292,"score":52,"level":0},{"x":1337,"y":292,"score":83,"level":0},{"x":1394,"y":292,"score":29,"level":0},{"x":549,"y":293,"score":32,"level":0},{"x":556,"y":293,"score":59,"level":0},{"x":566,"y":293,"score":35,"level":0},{"x":612,"y":293,"score":117,"level":0},{"x":695,"y":293,"score":37,"level":0},{"x":780,"y":293,"score":42,"level":0},{"x":809,"y":293,"score":75,"level":0},{"x":865,"y":293,"score":117,"level":0},{"x":922,"y":293,"score":44,"level":0},{"x":989,"y":293,"score":38,"level":0},{"x":1015,"y":293,"score":127,"level":0},{"x":1022,"y":293,"score":32,"level":0},{"x":1079,"y":293,"score":50,"level":0},{"x":1091,"y":293,"score":58,"level":0},{"x":1116,"y":293,"score":84,"level":0},{"x":1122,"y":293,"score":64,"level":0},{"x":1158,"y":293,"score":30,"level":0},{"x":1165,"y":293,"score":116,"level":0},{"x":1265,"y":293,"score":42,"level":0},{"x":1329,"y":293,"score":176,"level":0},{"x":502,"y":294,"score":34,"level":0},{"x":686,"y":294,"score":80,"level":0},{"x":714,"y":294,"score":27,"level":0},{"x":764,"y":294,"score":149,"level":0},{"x":825,"y":294,"score":34,"level":0},{"x":879,"y":294,"score":33,"level":0},{"x":907,"y":294,"score":42,"level":0},{"x":912,"y":294,"score":52,"level":0},{"x":956,"y":294,"score":56,"level":0},{"x":980,"y":294,"score":33,"level":0},{"x":1031,"y":294,"score":37,"level":0},{"x":1043,"y":294,"score":112,"level":0},{"x":1127,"y":294,"score":58,"level":0},{"x":1150,"y":294,"score":36,"level":0},{"x":1240,"y":294,"score":42,"level":0},{"x":1259,"y":294,"score":85,"level":0},{"x":1277,"y":294,"score":99,"level":0},{"x":1335,"y":294,"score":87,"level":0},{"x":1353,"y":294,"score":61,"level":0},{"x":1386,"y":294,"score":29,"level":0},{"x":1476,"y":294,"score":49,"level":0},{"x":1489,"y":294,"score":36,"level":0},{"x":419,"y":295,"score":67,"level":0},{"x":464,"y":295,"score":116,"level":0},{"x":652,"y":295,"score":89,"level":0},{"x":759,"y":295,"score":53,"level":0},{"x":816,"y":295,"score":60,"level":0},{"x":871,"y":295,"score":81,"level":0},{"x":884,"y":295,"score":101,"level":0},{"x":962,"y":295,"score":91,"level":0},{"x":989,"y":295,"score":83,"level":0},{"x":1067,"y":295,"score":50,"level":0},{"x":1113,"y":295,"score":54,"level":0},{"x":1155,"y":295,"score":35,"level":0},{"x":1176,"y":295,"score":45,"level":0},{"x":1187,"y":295,"score":120,"level":0},{"x":1198,"y":295,"score":50,"level":0},{"x":1234,"y":295,"score":73,"level":0},{"x":1253,"y":295,"score":43,"level":0},{"x":1432,"y":295,"score":46,"level":0},{"x":1437,"y":295,"score":109,"level":0},{"x":1457,"y":295,"score":70,"level":0},{"x":1459,"y":295,"score":71,"level":0},{"x":1465,"y":295,"score":66,"level":0},{"x":441,"y":296,"score":180,"level":0},{"x":458,"y":296,"score":64,"level":0},{"x":480,"y":296,"score":74,"level":0},{"x":506,"y":296,"score":40,"level":0},{"x":644,"y":296,"score":50,"level":0},{"x":708,"y":296,"score":90,"level":0},{"x":725,"y":296,"score":42,"level":0},{"x":820,"y":296,"score":108,"level":0},{"x":927,"y":296,"score":52,"level":0},{"x":936,"y":296,"score":69,"level":0},{"x":938,"y":296,"score":80,"level":0},{"x":1026,"y":296,"score":98,"level":0},{"x":1069,"y":296,"score":64,"level":0},{"x":1137,"y":296,"score":64,"level":0},{"x":1170,"y":296,"score":32,"level":0},{"x":1208,"y":296,"score":80,"level":0},{"x":1261,"y":296,"score":68,"level":0},{"x":1371,"y":296,"score":46,"level":0},{"x":1398,"y":296,"score":29,"level":0},{"x":1481,"y":296,"score":53,"level":0},{"x":1486,"y":296,"score":56,"level":0},{"x":397,"y":297,"score":61,"level":0},{"x":402,"y":297,"score":78,"level":0},{"x":456,"y":297,"score":58,"level":0},{"x":500,"y":297,"score":49,"level":0},{"x":540,"y":297,"score":50,"level":0},{"x":553,"y":297,"score":29,"level":0},{"x":604,"y":297,"score":111,"level":0},{"x":611,"y":297,"score":98,"level":0},{"x":619,"y":297,"score":54,"level":0},{"x":678,"y":297,"score":48,"level":0},{"x":722,"y":297,"score":36,"level":0},{"x":838,"y":297,"score":142,"level":0},{"x":932,"y":297,"score":89,"level":0},{"x":947,"y":297,"score":41,"level":0},{"x":953,"y":297,"score":57,"level":0},{"x":967,"y":297,"score":36,"level":0},{"x":1048,"y":297,"score":31,"level":0},{"x":1140,"y":297,"score":28,"level":0},{"x":1233,"y":297,"score":63,"level":0},{"x":1320,"y":297,"score":93,"level":0},{"x":1325,"y":297,"score":107,"level":0},{"x":1438,"y":297,"score":88,"level":0},{"x":1453,"y":297,"score":34,"level":0},{"x":1470,"y":297,"score":41,"level":0},{"x":377,"y":298,"score":76,"level":0},{"x":494,"y":298,"score":33,"level":0},{"x":579,"y":298,"score":31,"level":0},{"x":649,"y":298,"score":30,"level":0},{"x":660,"y":298,"score":45,"level":0},{"x":685,"y":298,"score":93,"level":0},{"x":694,"y":298,"score":99,"level":0},{"x":813,"y":298,"score":31,"level":0},{"x":991,"y":298,"score":81,"level":0},{"x":1083,"y":298,"score":78,"level":0},{"x":1101,"y":298,"score":42,"level":0},{"x":1103,"y":298,"score":50,"level":0},{"x":1122,"y":298,"score":95,"level":0},{"x":1151,"y":298,"score":40,"level":0},{"x":1167,"y":298,"score":130,"level":0},{"x":1179,"y":298,"score":72,"level":0},{"x":1192,"y":298,"score":54,"level":0},{"x":1225,"y":298,"score":28,"level":0},{"x":1311,"y":298,"score":26,"level":0},{"x":1350,"y":298,"score":74,"level":0},{"x":1367,"y":298,"score":32,"level":0},{"x":1387,"y":298,"score":47,"level":0},{"x":1465,"y":298,"score":32,"level":0},{"x":1472,"y":298,"score":95,"level":0},{"x":390,"y":299,"score":64,"level":0},{"x":688,"y":299,"score":90,"level":0},{"x":700,"y":299,"score":52,"level":0},{"x":712,"y":299,"score":62,"level":0},{"x":729,"y":299,"score":51,"level":0},{"x":747,"y":299,"score":30,"level":0},{"x":782,"y":299,"score":120,"level":0},{"x":801,"y":299,"score":51,"level":0},{"x":879,"y":299,"score":66,"level":0},{"x":985,"y":299,"score":84,"level":0},{"x":1003,"y":299,"score":29,"level":0},{"x":1027,"y":299,"score":94,"level":0},{"x":1237,"y":299,"score":51,"level":0},{"x":1250,"y":299,"score":56,"level":0},{"x":1258,"y":299,"score":28,"level":0},{"x":1355,"y":299,"score":44,"level":0},{"x":1374,"y":299,"score":37,"level":0},{"x":1477,"y":299,"score":55,"level":0},{"x":384,"y":300,"score":36,"level":0},{"x":392,"y":300,"score":76,"level":0},{"x":412,"y":300,"score":34,"level":0},{"x":483,"y":300,"score":41,"level":0},{"x":499,"y":300,"score":36,"level":0},{"x":671,"y":300,"score":60,"level":0},{"x":761,"y":300,"score":71,"level":0},{"x":770,"y":300,"score":105,"level":0},{"x":871,"y":300,"score":56,"level":0},{"x":890,"y":300,"score":50,"level":0},{"x":939,"y":300,"score":49,"level":0},{"x":991,"y":300,"score":66,"level":0},{"x":1020,"y":300,"score":36,"level":0},{"x":1054,"y":300,"score":68,"level":0},{"x":1088,"y":300,"score":27,"level":0},{"x":1136,"y":300,"score":51,"level":0},{"x":1145,"y":300,"score":111,"level":0},{"x":1155,"y":300,"score":35,"level":0},{"x":1186,"y":300,"score":50,"level":0},{"x":475,"y":301,"score":26,"level":0},{"x":504,"y":301,"score":29,"level":0},{"x":562,"y":301,"score":80,"level":0},{"x":636,"y":301,"score":98,"level":0},{"x":642,"y":301,"score":60,"level":0},{"x":702,"y":301,"score":35,"level":0},{"x":753,"y":301,"score":32,"level":0},{"x":766,"y":301,"score":92,"level":0},{"x":785,"y":301,"score":135,"level":0},{"x":928,"y":301,"score":49,"level":0},{"x":948,"y":301,"score":81,"level":0},{"x":973,"y":301,"score":102,"level":0},{"x":979,"y":301,"score":28,"level":0},{"x":1007,"y":301,"score":31,"level":0},{"x":1042,"y":301,"score":68,"level":0},{"x":1063,"y":301,"score":42,"level":0},{"x":1074,"y":301,"score":58,"level":0},{"x":1108,"y":301,"score":30,"level":0},{"x":1243,"y":301,"score":69,"level":0},{"x":1280,"y":301,"score":73,"level":0},{"x":1324,"y":301,"score":40,"level":0},{"x":1429,"y":301,"score":99,"level":0},{"x":1473,"y":301,"score":56,"level":0},{"x":1481,"y":301,"score":38,"level":0},{"x":401,"y":302,"score":39,"level":0},{"x":406,"y":302,"score":36,"level":0},{"x":484,"y":302,"score":59,"level":0},{"x":489,"y":302,"score":29,"level":0},{"x":530,"y":302,"score":71,"level":0},{"x":552,"y":302,"score":110,"level":0},{"x":560,"y":302,"score":71,"level":0},{"x":618,"y":302,"score":128,"level":0},{"x":721,"y":302,"score":46,"level":0},{"x":822,"y":302,"score":34,"level":0},{"x":828,"y":302,"score":66,"level":0},{"x":932,"y":302,"score":82,"level":0},{"x":1149,"y":302,"score":47,"level":0},{"x":1165,"y":302,"score":96,"level":0},{"x":1238,"y":302,"score":35,"level":0},{"x":1329,"y":302,"score":79,"level":0},{"x":1334,"y":302,"score":57,"level":0},{"x":1343,"y":302,"score":34,"level":0},{"x":1438,"y":302,"score":63,"level":0},{"x":1444,"y":302,"score":50,"level":0},{"x":1453,"y":302,"score":32,"level":0},{"x":440,"y":303,"score":72,"level":0},{"x":523,"y":303,"score":76,"level":0},{"x":546,"y":303,"score":28,"level":0},{"x":649,"y":303,"score":77,"level":0},{"x":655,"y":303,"score":46,"level":0},{"x":759,"y":303,"score":48,"level":0},{"x":1016,"y":303,"score":121,"level":0},{"x":1112,"y":303,"score":74,"level":0},{"x":1137,"y":303,"score":48,"level":0},{"x":1174,"y":303,"score":67,"level":0},{"x":1181,"y":303,"score":81,"level":0},{"x":1214,"y":303,"score":83,"level":0},{"x":1225,"y":303,"score":146,"level":0},{"x":1270,"y":303,"score":143,"level":0},{"x":1353,"y":303,"score":95,"level":0},{"x":1393,"y":303,"score":46,"level":0},{"x":377,"y":304,"score":274,"level":0},{"x":417,"y":304,"score":88,"level":0},{"x":660,"y":304,"score":34,"level":0},{"x":707,"y":304,"score":55,"level":0},{"x":712,"y":304,"score":33,"level":0},{"x":793,"y":304,"score":187,"level":0},{"x":833,"y":304,"score":37,"level":0},{"x":864,"y":304,"score":174,"level":0},{"x":890,"y":304,"score":64,"level":0},{"x":937,"y":304,"score":34,"level":0},{"x":967,"y":304,"score":54,"level":0},{"x":984,"y":304,"score":57,"level":0},{"x":1117,"y":304,"score":114,"level":0},{"x":1276,"y":304,"score":110,"level":0},{"x":1291,"y":304,"score":39,"level":0},{"x":1357,"y":304,"score":54,"level":0},{"x":1387,"y":304,"score":60,"level":0},{"x":1462,"y":304,"score":91,"level":0},{"x":1485,"y":304,"score":91,"level":0},{"x":1488,"y":304,"score":65,"level":0},{"x":431,"y":305,"score":45,"level":0},{"x":447,"y":305,"score":69,"level":0},{"x":462,"y":305,"score":109,"level":0},{"x":499,"y":305,"score":69,"level":0},{"x":523,"y":305,"score":37,"level":0},{"x":607,"y":305,"score":46,"level":0},{"x":613,"y":305,"score":49,"level":0},{"x":655,"y":305,"score":51,"level":0},{"x":697,"y":305,"score":91,"level":0},{"x":781,"y":305,"score":112,"level":0},{"x":902,"y":305,"score":83,"level":0},{"x":942,"y":305,"score":47,"level":0},{"x":1093,"y":305,"score":53,"level":0},{"x":1124,"y":305,"score":44,"level":0},{"x":1129,"y":305,"score":63,"level":0},{"x":1148,"y":305,"score":37,"level":0},{"x":1165,"y":305,"score":49,"level":0},{"x":1187,"y":305,"score":28,"level":0},{"x":1213,"y":305,"score":48,"level":0},{"x":1252,"y":305,"score":59,"level":0},{"x":1348,"y":305,"score":138,"level":0},{"x":1449,"y":305,"score":36,"level":0},{"x":452,"y":306,"score":37,"level":0},{"x":489,"y":306,"score":27,"level":0},{"x":643,"y":306,"score":31,"level":0},{"x":704,"y":306,"score":53,"level":0},{"x":767,"y":306,"score":120,"level":0},{"x":774,"y":306,"score":74,"level":0},{"x":801,"y":306,"score":60,"level":0},{"x":832,"y":306,"score":37,"level":0},{"x":869,"y":306,"score":58,"level":0},{"x":955,"y":306,"score":96,"level":0},{"x":1002,"y":306,"score":156,"level":0},{"x":1007,"y":306,"score":81,"level":0},{"x":1082,"y":306,"score":83,"level":0},{"x":1088,"y":306,"score":37,"level":0},{"x":1193,"y":306,"score":27,"level":0},{"x":1199,"y":306,"score":70,"level":0},{"x":1260,"y":306,"score":38,"level":0},{"x":1375,"y":306,"score":38,"level":0},{"x":1421,"y":306,"score":28,"level":0},{"x":1430,"y":306,"score":35,"level":0},{"x":1446,"y":306,"score":39,"level":0},{"x":1457,"y":306,"score":44,"level":0},{"x":1484,"y":306,"score":52,"level":0},{"x":408,"y":307,"score":55,"level":0},{"x":510,"y":307,"score":48,"level":0},{"x":552,"y":307,"score":37,"level":0},{"x":557,"y":307,"score":26,"level":0},{"x":599,"y":307,"score":34,"level":0},{"x":692,"y":307,"score":48,"level":0},{"x":883,"y":307,"score":45,"level":0},{"x":948,"y":307,"score":199,"level":0},{"x":968,"y":307,"score":42,"level":0},{"x":1140,"y":307,"score":92,"level":0},{"x":1153,"y":307,"score":31,"level":0},{"x":1162,"y":307,"score":41,"level":0},{"x":1212,"y":307,"score":59,"level":0},{"x":1316,"y":307,"score":74,"level":0},{"x":1340,"y":307,"score":52,"level":0},{"x":1361,"y":307,"score":120,"level":0},{"x":1452,"y":307,"score":36,"level":0},{"x":1479,"y":307,"score":147,"level":0},{"x":400,"y":308,"score":113,"level":0},{"x":406,"y":308,"score":72,"level":0},{"x":547,"y":308,"score":105,"level":0},{"x":752,"y":308,"score":102,"level":0},{"x":761,"y":308,"score":69,"level":0},{"x":1103,"y":308,"score":40,"level":0},{"x":1112,"y":308,"score":88,"level":0},{"x":1181,"y":308,"score":93,"level":0},{"x":1234,"y":308,"score":55,"level":0},{"x":1248,"y":308,"score":32,"level":0},{"x":1280,"y":308,"score":121,"level":0},{"x":1335,"y":308,"score":72,"level":0},{"x":1377,"y":308,"score":30,"level":0},{"x":1398,"y":308,"score":29,"level":0},{"x":1469,"y":308,"score":32,"level":0},{"x":435,"y":309,"score":35,"level":0},{"x":451,"y":309,"score":31,"level":0},{"x":721,"y":309,"score":44,"level":0},{"x":724,"y":309,"score":31,"level":0},{"x":1018,"y":309,"score":52,"level":0},{"x":1095,"y":309,"score":56,"level":0},{"x":1100,"y":309,"score":60,"level":0},{"x":1210,"y":309,"score":90,"level":0},{"x":1272,"y":309,"score":45,"level":0},{"x":1443,"y":309,"score":70,"level":0},{"x":548,"y":310,"score":98,"level":0},{"x":711,"y":310,"score":104,"level":0},{"x":745,"y":310,"score":62,"level":0},{"x":783,"y":310,"score":82,"level":0},{"x":806,"y":310,"score":143,"level":0},{"x":839,"y":310,"score":26,"level":0},{"x":1025,"y":310,"score":101,"level":0},{"x":1117,"y":310,"score":35,"level":0},{"x":1290,"y":310,"score":80,"level":0},{"x":380,"y":311,"score":123,"level":0},{"x":399,"y":311,"score":153,"level":0},{"x":467,"y":311,"score":30,"level":0},{"x":566,"y":311,"score":210,"level":0},{"x":607,"y":311,"score":126,"level":0},{"x":613,"y":311,"score":130,"level":0},{"x":618,"y":311,"score":53,"level":0},{"x":623,"y":311,"score":80,"level":0},{"x":640,"y":311,"score":35,"level":0},{"x":696,"y":311,"score":66,"level":0},{"x":720,"y":311,"score":32,"level":0},{"x":800,"y":311,"score":181,"level":0},{"x":872,"y":311,"score":29,"level":0},{"x":906,"y":311,"score":41,"level":0},{"x":978,"y":311,"score":30,"level":0},{"x":987,"y":311,"score":43,"level":0},{"x":995,"y":311,"score":48,"level":0},{"x":1078,"y":311,"score":58,"level":0},{"x":1132,"y":311,"score":75,"level":0},{"x":1144,"y":311,"score":104,"level":0},{"x":1191,"y":311,"score":46,"level":0},{"x":1227,"y":311,"score":58,"level":0},{"x":1229,"y":311,"score":94,"level":0},{"x":1268,"y":311,"score":55,"level":0},{"x":1353,"y":311,"score":43,"level":0},{"x":1456,"y":311,"score":35,"level":0},{"x":1469,"y":311,"score":35,"level":0},{"x":393,"y":312,"score":101,"level":0},{"x":551,"y":312,"score":95,"level":0},{"x":556,"y":312,"score":124,"level":0},{"x":633,"y":312,"score":41,"level":0},{"x":660,"y":312,"score":29,"level":0},{"x":716,"y":312,"score":38,"level":0},{"x":735,"y":312,"score":46,"level":0},{"x":786,"y":312,"score":108,"level":0},{"x":942,"y":312,"score":47,"level":0},{"x":1056,"y":312,"score":39,"level":0},{"x":1106,"y":312,"score":32,"level":0},{"x":1150,"y":312,"score":44,"level":0},{"x":1186,"y":312,"score":35,"level":0},{"x":1245,"y":312,"score":45,"level":0},{"x":1339,"y":312,"score":34,"level":0},{"x":1376,"y":312,"score":26,"level":0},{"x":1464,"y":312,"score":88,"level":0},{"x":403,"y":313,"score":69,"level":0},{"x":441,"y":313,"score":108,"level":0},{"x":513,"y":313,"score":70,"level":0},{"x":655,"y":313,"score":68,"level":0},{"x":675,"y":313,"score":99,"level":0},{"x":728,"y":313,"score":32,"level":0},{"x":826,"y":313,"score":73,"level":0},{"x":924,"y":313,"score":44,"level":0},{"x":1002,"y":313,"score":48,"level":0},{"x":1121,"y":313,"score":70,"level":0},{"x":1175,"y":313,"score":30,"level":0},{"x":1200,"y":313,"score":148,"level":0},{"x":1205,"y":313,"score":123,"level":0},{"x":1278,"y":313,"score":84,"level":0},{"x":1451,"y":313,"score":45,"level":0},{"x":1458,"y":313,"score":76,"level":0},{"x":1488,"y":313,"score":29,"level":0},{"x":413,"y":314,"score":51,"level":0},{"x":436,"y":314,"score":66,"level":0},{"x":627,"y":314,"score":38,"level":0},{"x":670,"y":314,"score":52,"level":0},{"x":685,"y":314,"score":71,"level":0},{"x":791,"y":314,"score":161,"level":0},{"x":834,"y":314,"score":46,"level":0},{"x":948,"y":314,"score":61,"level":0},{"x":992,"y":314,"score":26,"level":0},{"x":1040,"y":314,"score":58,"level":0},{"x":1091,"y":314,"score":81,"level":0},{"x":1164,"y":314,"score":48,"level":0},{"x":1170,"y":314,"score":44,"level":0},{"x":1180,"y":314,"score":60,"level":0},{"x":1220,"y":314,"score":26,"level":0},{"x":1251,"y":314,"score":37,"level":0},{"x":1270,"y":314,"score":47,"level":0},{"x":1332,"y":314,"score":50,"level":0},{"x":1337,"y":314,"score":92,"level":0},{"x":1355,"y":314,"score":34,"level":0},{"x":1365,"y":314,"score":45,"level":0},{"x":1386,"y":314,"score":30,"level":0},{"x":1474,"y":314,"score":45,"level":0},{"x":1477,"y":314,"score":124,"level":0},{"x":1484,"y":314,"score":95,"level":0},{"x":497,"y":315,"score":156,"level":0},{"x":738,"y":315,"score":28,"level":0},{"x":891,"y":315,"score":152,"level":0},{"x":904,"y":315,"score":58,"level":0},{"x":954,"y":315,"score":42,"level":0},{"x":995,"y":315,"score":85,"level":0},{"x":1003,"y":315,"score":51,"level":0},{"x":1008,"y":315,"score":32,"level":0},{"x":1059,"y":315,"score":63,"level":0},{"x":1103,"y":315,"score":36,"level":0},{"x":1121,"y":315,"score":72,"level":0},{"x":1127,"y":315,"score":26,"level":0},{"x":1233,"y":315,"score":40,"level":0},{"x":1346,"y":315,"score":35,"level":0},{"x":1360,"y":315,"score":159,"level":0},{"x":1388,"y":315,"score":35,"level":0},{"x":1390,"y":315,"score":47,"level":0},{"x":490,"y":316,"score":57,"level":0},{"x":552,"y":316,"score":26,"level":0},{"x":570,"y":316,"score":51,"level":0},{"x":702,"y":316,"score":42,"level":0},{"x":717,"y":316,"score":120,"level":0},{"x":730,"y":316,"score":39,"level":0},{"x":740,"y":316,"score":46,"level":0},{"x":809,"y":316,"score":151,"level":0},{"x":827,"y":316,"score":60,"level":0},{"x":866,"y":316,"score":56,"level":0},{"x":875,"y":316,"score":60,"level":0},{"x":889,"y":316,"score":168,"level":0},{"x":919,"y":316,"score":36,"level":0},{"x":1057,"y":316,"score":61,"level":0},{"x":1290,"y":316,"score":151,"level":0},{"x":1295,"y":316,"score":54,"level":0},{"x":399,"y":317,"score":61,"level":0},{"x":506,"y":317,"score":116,"level":0},{"x":547,"y":317,"score":157,"level":0},{"x":642,"y":317,"score":53,"level":0},{"x":711,"y":317,"score":28,"level":0},{"x":794,"y":317,"score":132,"level":0},{"x":801,"y":317,"score":104,"level":0},{"x":879,"y":317,"score":40,"level":0},{"x":980,"y":317,"score":29,"level":0},{"x":1001,"y":317,"score":35,"level":0},{"x":1007,"y":317,"score":40,"level":0},{"x":1068,"y":317,"score":49,"level":0},{"x":1086,"y":317,"score":44,"level":0},{"x":1146,"y":317,"score":26,"level":0},{"x":1155,"y":317,"score":77,"level":0},{"x":1379,"y":317,"score":54,"level":0},{"x":1463,"y":317,"score":30,"level":0},{"x":1470,"y":317,"score":31,"level":0},{"x":419,"y":318,"score":126,"level":0},{"x":470,"y":318,"score":114,"level":0},{"x":504,"y":318,"score":118,"level":0},{"x":527,"y":318,"score":68,"level":0},{"x":564,"y":318,"score":35,"level":0},{"x":907,"y":318,"score":42,"level":0},{"x":924,"y":318,"score":32,"level":0},{"x":1091,"y":318,"score":54,"level":0},{"x":1102,"y":318,"score":48,"level":0},{"x":1230,"y":318,"score":48,"level":0},{"x":1256,"y":318,"score":32,"level":0},{"x":1285,"y":318,"score":35,"level":0},{"x":1328,"y":318,"score":55,"level":0},{"x":1396,"y":318,"score":56,"level":0},{"x":1483,"y":318,"score":93,"level":0},{"x":377,"y":319,"score":63,"level":0},{"x":383,"y":319,"score":149,"level":0},{"x":482,"y":319,"score":56,"level":0},{"x":521,"y":319,"score":53,"level":0},{"x":582,"y":319,"score":40,"level":0},{"x":612,"y":319,"score":60,"level":0},{"x":689,"y":319,"score":208,"level":0},{"x":789,"y":319,"score":64,"level":0},{"x":839,"y":319,"score":59,"level":0},{"x":934,"y":319,"score":36,"level":0},{"x":1053,"y":319,"score":116,"level":0},{"x":1115,"y":319,"score":95,"level":0},{"x":1206,"y":319,"score":147,"level":0},{"x":1235,"y":319,"score":51,"level":0},{"x":1272,"y":319,"score":54,"level":0},{"x":1277,"y":319,"score":44,"level":0},{"x":1317,"y":319,"score":48,"level":0},{"x":1335,"y":319,"score":42,"level":0},{"x":1339,"y":319,"score":27,"level":0},{"x":1341,"y":319,"score":50,"level":0},{"x":1357,"y":319,"score":142,"level":0},{"x":1393,"y":319,"score":29,"level":0},{"x":1455,"y":319,"score":44,"level":0},{"x":393,"y":320,"score":104,"level":0},{"x":403,"y":320,"score":89,"level":0},{"x":449,"y":320,"score":188,"level":0},{"x":507,"y":320,"score":67,"level":0},{"x":527,"y":320,"score":40,"level":0},{"x":601,"y":320,"score":92,"level":0},{"x":633,"y":320,"score":44,"level":0},{"x":654,"y":320,"score":39,"level":0},{"x":682,"y":320,"score":89,"level":0},{"x":745,"y":320,"score":46,"level":0},{"x":818,"y":320,"score":70,"level":0},{"x":823,"y":320,"score":155,"level":0},{"x":985,"y":320,"score":130,"level":0},{"x":991,"y":320,"score":50,"level":0},{"x":1010,"y":320,"score":86,"level":0},{"x":1012,"y":320,"score":39,"level":0},{"x":1021,"y":320,"score":56,"level":0},{"x":1051,"y":320,"score":105,"level":0},{"x":1066,"y":320,"score":74,"level":0},{"x":1139,"y":320,"score":66,"level":0},{"x":1192,"y":320,"score":33,"level":0},{"x":1252,"y":320,"score":26,"level":0},{"x":1388,"y":320,"score":44,"level":0},{"x":438,"y":321,"score":33,"level":0},{"x":476,"y":321,"score":77,"level":0},{"x":505,"y":321,"score":80,"level":0},{"x":531,"y":321,"score":30,"level":0},{"x":612,"y":321,"score":105,"level":0},{"x":638,"y":321,"score":88,"level":0},{"x":662,"y":321,"score":36,"level":0},{"x":703,"y":321,"score":52,"level":0},{"x":997,"y":321,"score":232,"level":0},{"x":1061,"y":321,"score":42,"level":0},{"x":1109,"y":321,"score":104,"level":0},{"x":1122,"y":321,"score":67,"level":0},{"x":1184,"y":321,"score":60,"level":0},{"x":1189,"y":321,"score":28,"level":0},{"x":1443,"y":321,"score":74,"level":0},{"x":1469,"y":321,"score":55,"level":0},{"x":443,"y":322,"score":68,"level":0},{"x":510,"y":322,"score":27,"level":0},{"x":715,"y":322,"score":64,"level":0},{"x":726,"y":322,"score":46,"level":0},{"x":745,"y":322,"score":26,"level":0},{"x":886,"y":322,"score":37,"level":0},{"x":904,"y":322,"score":30,"level":0},{"x":970,"y":322,"score":31,"level":0},{"x":1027,"y":322,"score":78,"level":0},{"x":1039,"y":322,"score":30,"level":0},{"x":1070,"y":322,"score":104,"level":0},{"x":1076,"y":322,"score":51,"level":0},{"x":1105,"y":322,"score":47,"level":0},{"x":1114,"y":322,"score":63,"level":0},{"x":1166,"y":322,"score":83,"level":0},{"x":1268,"y":322,"score":51,"level":0},{"x":1273,"y":322,"score":77,"level":0},{"x":1339,"y":322,"score":43,"level":0},{"x":1458,"y":322,"score":58,"level":0},{"x":389,"y":323,"score":80,"level":0},{"x":397,"y":323,"score":32,"level":0},{"x":523,"y":323,"score":162,"level":0},{"x":551,"y":323,"score":47,"level":0},{"x":585,"y":323,"score":52,"level":0},{"x":708,"y":323,"score":27,"level":0},{"x":912,"y":323,"score":33,"level":0},{"x":918,"y":323,"score":69,"level":0},{"x":973,"y":323,"score":30,"level":0},{"x":979,"y":323,"score":95,"level":0},{"x":1009,"y":323,"score":69,"level":0},{"x":1054,"y":323,"score":26,"level":0},{"x":1063,"y":323,"score":27,"level":0},{"x":1096,"y":323,"score":58,"level":0},{"x":1219,"y":323,"score":149,"level":0},{"x":1259,"y":323,"score":89,"level":0},{"x":1430,"y":323,"score":32,"level":0},{"x":407,"y":324,"score":30,"level":0},{"x":473,"y":324,"score":79,"level":0},{"x":483,"y":324,"score":28,"level":0},{"x":560,"y":324,"score":47,"level":0},{"x":591,"y":324,"score":103,"level":0},{"x":594,"y":324,"score":117,"level":0},{"x":619,"y":324,"score":209,"level":0},{"x":957,"y":324,"score":121,"level":0},{"x":1014,"y":324,"score":63,"level":0},{"x":1019,"y":324,"score":35,"level":0},{"x":1058,"y":324,"score":57,"level":0},{"x":1156,"y":324,"score":44,"level":0},{"x":1161,"y":324,"score":66,"level":0},{"x":1225,"y":324,"score":106,"level":0},{"x":1244,"y":324,"score":85,"level":0},{"x":1372,"y":324,"score":53,"level":0},{"x":1377,"y":324,"score":31,"level":0},{"x":1380,"y":324,"score":30,"level":0},{"x":1480,"y":324,"score":154,"level":0},{"x":529,"y":325,"score":126,"level":0},{"x":534,"y":325,"score":49,"level":0},{"x":605,"y":325,"score":33,"level":0},{"x":612,"y":325,"score":35,"level":0},{"x":632,"y":325,"score":67,"level":0},{"x":733,"y":325,"score":39,"level":0},{"x":740,"y":325,"score":81,"level":0},{"x":985,"y":325,"score":95,"level":0},{"x":1062,"y":325,"score":66,"level":0},{"x":1101,"y":325,"score":100,"level":0},{"x":1136,"y":325,"score":87,"level":0},{"x":1346,"y":325,"score":43,"level":0},{"x":1351,"y":325,"score":60,"level":0},{"x":1362,"y":325,"score":55,"level":0},{"x":396,"y":326,"score":75,"level":0},{"x":425,"y":326,"score":38,"level":0},{"x":463,"y":326,"score":146,"level":0},{"x":544,"y":326,"score":119,"level":0},{"x":553,"y":326,"score":29,"level":0},{"x":603,"y":326,"score":75,"level":0},{"x":638,"y":326,"score":41,"level":0},{"x":897,"y":326,"score":26,"level":0},{"x":972,"y":326,"score":43,"level":0},{"x":979,"y":326,"score":100,"level":0},{"x":1080,"y":326,"score":133,"level":0},{"x":1129,"y":326,"score":76,"level":0},{"x":1152,"y":326,"score":78,"level":0},{"x":1184,"y":326,"score":37,"level":0},{"x":1206,"y":326,"score":182,"level":0},{"x":1263,"y":326,"score":66,"level":0},{"x":1317,"y":326,"score":48,"level":0},{"x":1357,"y":326,"score":115,"level":0},{"x":1367,"y":326,"score":34,"level":0},{"x":1451,"y":326,"score":87,"level":0},{"x":418,"y":327,"score":57,"level":0},{"x":461,"y":327,"score":110,"level":0},{"x":476,"y":327,"score":33,"level":0},{"x":536,"y":327,"score":41,"level":0},{"x":556,"y":327,"score":29,"level":0},{"x":609,"y":327,"score":65,"level":0},{"x":613,"y":327,"score":67,"level":0},{"x":624,"y":327,"score":41,"level":0},{"x":655,"y":327,"score":95,"level":0},{"x":666,"y":327,"score":68,"level":0},{"x":693,"y":327,"score":100,"level":0},{"x":729,"y":327,"score":49,"level":0},{"x":838,"y":327,"score":46,"level":0},{"x":889,"y":327,"score":85,"level":0},{"x":966,"y":327,"score":136,"level":0},{"x":1023,"y":327,"score":42,"level":0},{"x":1060,"y":327,"score":96,"level":0},{"x":1121,"y":327,"score":41,"level":0},{"x":1253,"y":327,"score":28,"level":0},{"x":1348,"y":327,"score":50,"level":0},{"x":1465,"y":327,"score":150,"level":0},{"x":1481,"y":327,"score":72,"level":0},{"x":1487,"y":327,"score":69,"level":0},{"x":386,"y":328,"score":51,"level":0},{"x":451,"y":328,"score":30,"level":0},{"x":496,"y":328,"score":96,"level":0},{"x":549,"y":328,"score":72,"level":0},{"x":640,"y":328,"score":57,"level":0},{"x":647,"y":328,"score":104,"level":0},{"x":865,"y":328,"score":139,"level":0},{"x":919,"y":328,"score":41,"level":0},{"x":1008,"y":328,"score":105,"level":0},{"x":1053,"y":328,"score":130,"level":0},{"x":1196,"y":328,"score":40,"level":0},{"x":1211,"y":328,"score":61,"level":0},{"x":1236,"y":328,"score":29,"level":0},{"x":1338,"y":328,"score":52,"level":0},{"x":1400,"y":328,"score":28,"level":0},{"x":456,"y":329,"score":144,"level":0},{"x":464,"y":329,"score":120,"level":0},{"x":470,"y":329,"score":53,"level":0},{"x":484,"y":329,"score":48,"level":0},{"x":490,"y":329,"score":88,"level":0},{"x":503,"y":329,"score":73,"level":0},{"x":619,"y":329,"score":35,"level":0},{"x":669,"y":329,"score":28,"level":0},{"x":680,"y":329,"score":73,"level":0},{"x":819,"y":329,"score":137,"level":0},{"x":876,"y":329,"score":196,"level":0},{"x":892,"y":329,"score":41,"level":0},{"x":926,"y":329,"score":96,"level":0},{"x":947,"y":329,"score":64,"level":0},{"x":956,"y":329,"score":178,"level":0},{"x":969,"y":329,"score":153,"level":0},{"x":1050,"y":329,"score":91,"level":0},{"x":1218,"y":329,"score":165,"level":0},{"x":1266,"y":329,"score":32,"level":0},{"x":1272,"y":329,"score":89,"level":0},{"x":1366,"y":329,"score":50,"level":0},{"x":1440,"y":329,"score":87,"level":0},{"x":393,"y":330,"score":136,"level":0},{"x":598,"y":330,"score":58,"level":0},{"x":611,"y":330,"score":68,"level":0},{"x":663,"y":330,"score":93,"level":0},{"x":674,"y":330,"score":68,"level":0},{"x":713,"y":330,"score":72,"level":0},{"x":725,"y":330,"score":31,"level":0},{"x":732,"y":330,"score":168,"level":0},{"x":886,"y":330,"score":78,"level":0},{"x":980,"y":330,"score":89,"level":0},{"x":992,"y":330,"score":86,"level":0},{"x":1268,"y":330,"score":30,"level":0},{"x":1333,"y":330,"score":41,"level":0},{"x":1356,"y":330,"score":41,"level":0},{"x":1427,"y":330,"score":30,"level":0},{"x":1453,"y":330,"score":32,"level":0},{"x":1475,"y":330,"score":94,"level":0},{"x":1480,"y":330,"score":79,"level":0},{"x":1490,"y":330,"score":38,"level":0},{"x":404,"y":331,"score":91,"level":0},{"x":446,"y":331,"score":48,"level":0},{"x":652,"y":331,"score":47,"level":0},{"x":659,"y":331,"score":34,"level":0},{"x":952,"y":331,"score":114,"level":0},{"x":985,"y":331,"score":176,"level":0},{"x":1008,"y":331,"score":34,"level":0},{"x":1049,"y":331,"score":66,"level":0},{"x":1067,"y":331,"score":91,"level":0},{"x":1105,"y":331,"score":58,"level":0},{"x":1187,"y":331,"score":56,"level":0},{"x":1224,"y":331,"score":113,"level":0},{"x":1234,"y":331,"score":28,"level":0},{"x":1243,"y":331,"score":107,"level":0},{"x":417,"y":332,"score":52,"level":0},{"x":422,"y":332,"score":126,"level":0},{"x":435,"y":332,"score":31,"level":0},{"x":467,"y":332,"score":85,"level":0},{"x":588,"y":332,"score":34,"level":0},{"x":604,"y":332,"score":62,"level":0},{"x":666,"y":332,"score":77,"level":0},{"x":674,"y":332,"score":51,"level":0},{"x":839,"y":332,"score":29,"level":0},{"x":860,"y":332,"score":44,"level":0},{"x":870,"y":332,"score":27,"level":0},{"x":1002,"y":332,"score":94,"level":0},{"x":1044,"y":332,"score":66,"level":0},{"x":1092,"y":332,"score":61,"level":0},{"x":1259,"y":332,"score":93,"level":0},{"x":1278,"y":332,"score":216,"level":0},{"x":1334,"y":332,"score":62,"level":0},{"x":1348,"y":332,"score":44,"level":0},{"x":1355,"y":332,"score":52,"level":0},{"x":1468,"y":332,"score":44,"level":0},{"x":1490,"y":332,"score":27,"level":0},{"x":411,"y":333,"score":44,"level":0},{"x":446,"y":333,"score":38,"level":0},{"x":496,"y":333,"score":64,"level":0},{"x":509,"y":333,"score":26,"level":0},{"x":622,"y":333,"score":59,"level":0},{"x":629,"y":333,"score":88,"level":0},{"x":635,"y":333,"score":152,"level":0},{"x":701,"y":333,"score":55,"level":0},{"x":892,"y":333,"score":51,"level":0},{"x":898,"y":333,"score":32,"level":0},{"x":963,"y":333,"score":209,"level":0},{"x":974,"y":333,"score":52,"level":0},{"x":1060,"y":333,"score":27,"level":0},{"x":1128,"y":333,"score":120,"level":0},{"x":1196,"y":333,"score":32,"level":0},{"x":1204,"y":333,"score":66,"level":0},{"x":1256,"y":333,"score":68,"level":0},{"x":1449,"y":333,"score":26,"level":0},{"x":399,"y":334,"score":57,"level":0},{"x":455,"y":334,"score":94,"level":0},{"x":504,"y":334,"score":37,"level":0},{"x":524,"y":334,"score":140,"level":0},{"x":526,"y":334,"score":132,"level":0},{"x":531,"y":334,"score":80,"level":0},{"x":554,"y":334,"score":31,"level":0},{"x":641,"y":334,"score":119,"level":0},{"x":647,"y":334,"score":28,"level":0},{"x":665,"y":334,"score":61,"level":0},{"x":682,"y":334,"score":177,"level":0},{"x":693,"y":334,"score":72,"level":0},{"x":912,"y":334,"score":52,"level":0},{"x":947,"y":334,"score":119,"level":0},{"x":955,"y":334,"score":137,"level":0},{"x":1007,"y":334,"score":28,"level":0},{"x":1116,"y":334,"score":42,"level":0},{"x":1177,"y":334,"score":88,"level":0},{"x":1230,"y":334,"score":98,"level":0},{"x":1266,"y":334,"score":44,"level":0},{"x":1327,"y":334,"score":44,"level":0},{"x":1360,"y":334,"score":29,"level":0},{"x":1375,"y":334,"score":34,"level":0},{"x":1390,"y":334,"score":43,"level":0},{"x":1457,"y":334,"score":53,"level":0},{"x":476,"y":335,"score":33,"level":0},{"x":540,"y":335,"score":37,"level":0},{"x":717,"y":335,"score":67,"level":0},{"x":738,"y":335,"score":74,"level":0},{"x":905,"y":335,"score":160,"level":0},{"x":926,"y":335,"score":152,"level":0},{"x":982,"y":335,"score":113,"level":0},{"x":1055,"y":335,"score":96,"level":0},{"x":1215,"y":335,"score":176,"level":0},{"x":1222,"y":335,"score":63,"level":0},{"x":1271,"y":335,"score":228,"level":0},{"x":1335,"y":335,"score":33,"level":0},{"x":1462,"y":335,"score":26,"level":0},{"x":1479,"y":335,"score":132,"level":0},{"x":383,"y":336,"score":76,"level":0},{"x":416,"y":336,"score":182,"level":0},{"x":443,"y":336,"score":68,"level":0},{"x":529,"y":336,"score":54,"level":0},{"x":569,"y":336,"score":44,"level":0},{"x":574,"y":336,"score":30,"level":0},{"x":610,"y":336,"score":143,"level":0},{"x":674,"y":336,"score":35,"level":0},{"x":712,"y":336,"score":82,"level":0},{"x":722,"y":336,"score":158,"level":0},{"x":871,"y":336,"score":71,"level":0},{"x":960,"y":336,"score":63,"level":0},{"x":1016,"y":336,"score":68,"level":0},{"x":1073,"y":336,"score":49,"level":0},{"x":1109,"y":336,"score":96,"level":0},{"x":1119,"y":336,"score":66,"level":0},{"x":1146,"y":336,"score":56,"level":0},{"x":1200,"y":336,"score":26,"level":0},{"x":1210,"y":336,"score":109,"level":0},{"x":1237,"y":336,"score":92,"level":0},{"x":1484,"y":336,"score":123,"level":0},{"x":389,"y":337,"score":56,"level":0},{"x":394,"y":337,"score":132,"level":0},{"x":399,"y":337,"score":89,"level":0},{"x":514,"y":337,"score":71,"level":0},{"x":660,"y":337,"score":34,"level":0},{"x":669,"y":337,"score":116,"level":0},{"x":864,"y":337,"score":77,"level":0},{"x":888,"y":337,"score":32,"level":0},{"x":933,"y":337,"score":39,"level":0},{"x":1030,"y":337,"score":54,"level":0},{"x":1114,"y":337,"score":71,"level":0},{"x":1189,"y":337,"score":55,"level":0},{"x":1191,"y":337,"score":61,"level":0},{"x":1226,"y":337,"score":44,"level":0},{"x":1261,"y":337,"score":77,"level":0},{"x":1312,"y":337,"score":35,"level":0},{"x":1326,"y":337,"score":34,"level":0},{"x":1347,"y":337,"score":42,"level":0},{"x":1427,"y":337,"score":29,"level":0},{"x":450,"y":338,"score":81,"level":0},{"x":459,"y":338,"score":39,"level":0},{"x":496,"y":338,"score":48,"level":0},{"x":517,"y":338,"score":56,"level":0},{"x":520,"y":338,"score":33,"level":0},{"x":913,"y":338,"score":158,"level":0},{"x":967,"y":338,"score":64,"level":0},{"x":974,"y":338,"score":56,"level":0},{"x":1061,"y":338,"score":66,"level":0},{"x":1102,"y":338,"score":63,"level":0},{"x":1131,"y":338,"score":71,"level":0},{"x":1146,"y":338,"score":43,"level":0},{"x":1168,"y":338,"score":32,"level":0},{"x":1179,"y":338,"score":75,"level":0},{"x":1238,"y":338,"score":103,"level":0},{"x":1336,"y":338,"score":26,"level":0},{"x":1342,"y":338,"score":95,"level":0},{"x":1398,"y":338,"score":33,"level":0},{"x":1464,"y":338,"score":58,"level":0},{"x":1473,"y":338,"score":54,"level":0},{"x":377,"y":339,"score":48,"level":0},{"x":479,"y":339,"score":151,"level":0},{"x":524,"y":339,"score":47,"level":0},{"x":529,"y":339,"score":33,"level":0},{"x":641,"y":339,"score":165,"level":0},{"x":923,"y":339,"score":108,"level":0},{"x":947,"y":339,"score":63,"level":0},{"x":977,"y":339,"score":76,"level":0},{"x":1023,"y":339,"score":69,"level":0},{"x":1087,"y":339,"score":56,"level":0},{"x":1093,"y":339,"score":65,"level":0},{"x":1109,"y":339,"score":106,"level":0},{"x":1173,"y":339,"score":77,"level":0},{"x":1188,"y":339,"score":70,"level":0},{"x":1199,"y":339,"score":50,"level":0},{"x":1378,"y":339,"score":38,"level":0},{"x":1439,"y":339,"score":36,"level":0},{"x":389,"y":340,"score":41,"level":0},{"x":403,"y":340,"score":117,"level":0},{"x":412,"y":340,"score":76,"level":0},{"x":456,"y":340,"score":96,"level":0},{"x":473,"y":340,"score":117,"level":0},{"x":534,"y":340,"score":29,"level":0},{"x":540,"y":340,"score":94,"level":0},{"x":570,"y":340,"score":33,"level":0},{"x":647,"y":340,"score":84,"level":0},{"x":653,"y":340,"score":34,"level":0},{"x":955,"y":340,"score":87,"level":0},{"x":1017,"y":340,"score":31,"level":0},{"x":1135,"y":340,"score":55,"level":0},{"x":1183,"y":340,"score":66,"level":0},{"x":1204,"y":340,"score":113,"level":0},{"x":1286,"y":340,"score":138,"level":0},{"x":1448,"y":340,"score":54,"level":0},{"x":1459,"y":340,"score":34,"level":0},{"x":409,"y":341,"score":81,"level":0},{"x":445,"y":341,"score":51,"level":0},{"x":467,"y":341,"score":141,"level":0},{"x":681,"y":341,"score":72,"level":0},{"x":721,"y":341,"score":36,"level":0},{"x":741,"y":341,"score":26,"level":0},{"x":871,"y":341,"score":43,"level":0},{"x":938,"y":341,"score":69,"level":0},{"x":1047,"y":341,"score":39,"level":0},{"x":1106,"y":341,"score":68,"level":0},{"x":1224,"y":341,"score":140,"level":0},{"x":1245,"y":341,"score":102,"level":0},{"x":1377,"y":341,"score":30,"level":0},{"x":1439,"y":341,"score":45,"level":0},{"x":501,"y":342,"score":30,"level":0},{"x":606,"y":342,"score":58,"level":0},{"x":656,"y":342,"score":70,"level":0},{"x":675,"y":342,"score":50,"level":0},{"x":746,"y":342,"score":39,"level":0},{"x":823,"y":342,"score":169,"level":0},{"x":881,"y":342,"score":126,"level":0},{"x":906,"y":342,"score":34,"level":0},{"x":1052,"y":342,"score":81,"level":0},{"x":1057,"y":342,"score":74,"level":0},{"x":1069,"y":342,"score":157,"level":0},{"x":1090,"y":342,"score":37,"level":0},{"x":1117,"y":342,"score":125,"level":0},{"x":1157,"y":342,"score":95,"level":0},{"x":1162,"y":342,"score":191,"level":0},{"x":1182,"y":342,"score":83,"level":0},{"x":1207,"y":342,"score":107,"level":0},{"x":1293,"y":342,"score":246,"level":0},{"x":1360,"y":342,"score":34,"level":0},{"x":1468,"y":342,"score":69,"level":0},{"x":1473,"y":342,"score":46,"level":0},{"x":1481,"y":342,"score":50,"level":0},{"x":390,"y":343,"score":50,"level":0},{"x":398,"y":343,"score":110,"level":0},{"x":409,"y":343,"score":97,"level":0},{"x":420,"y":343,"score":77,"level":0},{"x":450,"y":343,"score":157,"level":0},{"x":524,"y":343,"score":40,"level":0},{"x":555,"y":343,"score":44,"level":0},{"x":707,"y":343,"score":68,"level":0},{"x":735,"y":343,"score":92,"level":0},{"x":820,"y":343,"score":104,"level":0},{"x":840,"y":343,"score":66,"level":0},{"x":861,"y":343,"score":47,"level":0},{"x":900,"y":343,"score":86,"level":0},{"x":913,"y":343,"score":55,"level":0},{"x":988,"y":343,"score":46,"level":0},{"x":1078,"y":343,"score":53,"level":0},{"x":1213,"y":343,"score":76,"level":0},{"x":1237,"y":343,"score":76,"level":0},{"x":1248,"y":343,"score":74,"level":0},{"x":1320,"y":343,"score":37,"level":0},{"x":1330,"y":343,"score":40,"level":0},{"x":1347,"y":343,"score":69,"level":0},{"x":508,"y":344,"score":41,"level":0},{"x":692,"y":344,"score":26,"level":0},{"x":720,"y":344,"score":55,"level":0},{"x":828,"y":344,"score":28,"level":0},{"x":927,"y":344,"score":38,"level":0},{"x":964,"y":344,"score":46,"level":0},{"x":969,"y":344,"score":102,"level":0},{"x":1004,"y":344,"score":46,"level":0},{"x":1026,"y":344,"score":66,"level":0},{"x":1098,"y":344,"score":73,"level":0},{"x":1231,"y":344,"score":94,"level":0},{"x":1315,"y":344,"score":92,"level":0},{"x":1342,"y":344,"score":63,"level":0},{"x":1468,"y":344,"score":73,"level":0},{"x":1476,"y":344,"score":90,"level":0},{"x":377,"y":345,"score":199,"level":0},{"x":424,"y":345,"score":132,"level":0},{"x":493,"y":345,"score":70,"level":0},{"x":564,"y":345,"score":40,"level":0},{"x":752,"y":345,"score":56,"level":0},{"x":920,"y":345,"score":102,"level":0},{"x":951,"y":345,"score":90,"level":0},{"x":1048,"y":345,"score":87,"level":0},{"x":1084,"y":345,"score":58,"level":0},{"x":1096,"y":345,"score":97,"level":0},{"x":1135,"y":345,"score":49,"level":0},{"x":1168,"y":345,"score":118,"level":0},{"x":1189,"y":345,"score":106,"level":0},{"x":1274,"y":345,"score":63,"level":0},{"x":1303,"y":345,"score":97,"level":0},{"x":1429,"y":345,"score":52,"level":0},{"x":1438,"y":345,"score":26,"level":0},{"x":1451,"y":345,"score":79,"level":0},{"x":453,"y":346,"score":79,"level":0},{"x":542,"y":346,"score":46,"level":0},{"x":550,"y":346,"score":59,"level":0},{"x":570,"y":346,"score":53,"level":0},{"x":649,"y":346,"score":41,"level":0},{"x":667,"y":346,"score":83,"level":0},{"x":701,"y":346,"score":75,"level":0},{"x":712,"y":346,"score":54,"level":0},{"x":754,"y":346,"score":60,"level":0},{"x":867,"y":346,"score":68,"level":0},{"x":915,"y":346,"score":27,"level":0},{"x":933,"y":346,"score":30,"level":0},{"x":979,"y":346,"score":42,"level":0},{"x":1200,"y":346,"score":41,"level":0},{"x":1226,"y":346,"score":36,"level":0},{"x":1319,"y":346,"score":42,"level":0},{"x":1324,"y":346,"score":78,"level":0},{"x":1354,"y":346,"score":167,"level":0},{"x":1433,"y":346,"score":38,"level":0},{"x":1462,"y":346,"score":26,"level":0},{"x":402,"y":347,"score":92,"level":0},{"x":405,"y":347,"score":43,"level":0},{"x":417,"y":347,"score":83,"level":0},{"x":423,"y":347,"score":108,"level":0},{"x":614,"y":347,"score":76,"level":0},{"x":634,"y":347,"score":67,"level":0},{"x":719,"y":347,"score":27,"level":0},{"x":737,"y":347,"score":56,"level":0},{"x":829,"y":347,"score":41,"level":0},{"x":906,"y":347,"score":276,"level":0},{"x":1021,"y":347,"score":91,"level":0},{"x":1048,"y":347,"score":79,"level":0},{"x":1052,"y":347,"score":66,"level":0},{"x":1058,"y":347,"score":109,"level":0},{"x":1066,"y":347,"score":35,"level":0},{"x":1112,"y":347,"score":60,"level":0},{"x":1154,"y":347,"score":164,"level":0},{"x":1177,"y":347,"score":62,"level":0},{"x":1183,"y":347,"score":69,"level":0},{"x":1260,"y":347,"score":78,"level":0},{"x":1285,"y":347,"score":97,"level":0},{"x":1293,"y":347,"score":180,"level":0},{"x":1391,"y":347,"score":42,"level":0},{"x":498,"y":348,"score":106,"level":0},{"x":523,"y":348,"score":106,"level":0},{"x":532,"y":348,"score":56,"level":0},{"x":550,"y":348,"score":61,"level":0},{"x":650,"y":348,"score":60,"level":0},{"x":655,"y":348,"score":138,"level":0},{"x":686,"y":348,"score":66,"level":0},{"x":708,"y":348,"score":48,"level":0},{"x":864,"y":348,"score":46,"level":0},{"x":879,"y":348,"score":41,"level":0},{"x":913,"y":348,"score":48,"level":0},{"x":1106,"y":348,"score":129,"level":0},{"x":1142,"y":348,"score":34,"level":0},{"x":1246,"y":348,"score":205,"level":0},{"x":1309,"y":348,"score":101,"level":0},{"x":374,"y":349,"score":85,"level":0},{"x":390,"y":349,"score":207,"level":0},{"x":398,"y":349,"score":72,"level":0},{"x":443,"y":349,"score":34,"level":0},{"x":692,"y":349,"score":63,"level":0},{"x":729,"y":349,"score":60,"level":0},{"x":819,"y":349,"score":58,"level":0},{"x":893,"y":349,"score":214,"level":0},{"x":960,"y":349,"score":34,"level":0},{"x":997,"y":349,"score":50,"level":0},{"x":1002,"y":349,"score":32,"level":0},{"x":1021,"y":349,"score":78,"level":0},{"x":1026,"y":349,"score":49,"level":0},{"x":1076,"y":349,"score":37,"level":0},{"x":1125,"y":349,"score":51,"level":0},{"x":1130,"y":349,"score":38,"level":0},{"x":1147,"y":349,"score":88,"level":0},{"x":1211,"y":349,"score":105,"level":0},{"x":1254,"y":349,"score":142,"level":0},{"x":1478,"y":349,"score":80,"level":0},{"x":493,"y":350,"score":32,"level":0},{"x":539,"y":350,"score":29,"level":0},{"x":589,"y":350,"score":31,"level":0},{"x":676,"y":350,"score":41,"level":0},{"x":938,"y":350,"score":44,"level":0},{"x":944,"y":350,"score":57,"level":0},{"x":1081,"y":350,"score":82,"level":0},{"x":1120,"y":350,"score":71,"level":0},{"x":1172,"y":350,"score":117,"level":0},{"x":1177,"y":350,"score":44,"level":0},{"x":1205,"y":350,"score":85,"level":0},{"x":1219,"y":350,"score":176,"level":0},{"x":1224,"y":350,"score":86,"level":0},{"x":1238,"y":350,"score":28,"level":0},{"x":1263,"y":350,"score":88,"level":0},{"x":1268,"y":350,"score":69,"level":0},{"x":1323,"y":350,"score":94,"level":0},{"x":1351,"y":350,"score":153,"level":0},{"x":1390,"y":350,"score":29,"level":0},{"x":499,"y":351,"score":41,"level":0},{"x":607,"y":351,"score":137,"level":0},{"x":618,"y":351,"score":71,"level":0},{"x":656,"y":351,"score":137,"level":0},{"x":727,"y":351,"score":67,"level":0},{"x":828,"y":351,"score":72,"level":0},{"x":840,"y":351,"score":40,"level":0},{"x":868,"y":351,"score":46,"level":0},{"x":884,"y":351,"score":56,"level":0},{"x":923,"y":351,"score":29,"level":0},{"x":961,"y":351,"score":50,"level":0},{"x":1024,"y":351,"score":39,"level":0},{"x":1099,"y":351,"score":37,"level":0},{"x":381,"y":352,"score":61,"level":0},{"x":417,"y":352,"score":74,"level":0},{"x":454,"y":352,"score":27,"level":0},{"x":469,"y":352,"score":60,"level":0},{"x":526,"y":352,"score":43,"level":0},{"x":554,"y":352,"score":71,"level":0},{"x":572,"y":352,"score":54,"level":0},{"x":624,"y":352,"score":37,"level":0},{"x":741,"y":352,"score":76,"level":0},{"x":748,"y":352,"score":59,"level":0},{"x":951,"y":352,"score":28,"level":0},{"x":1006,"y":352,"score":50,"level":0},{"x":1026,"y":352,"score":34,"level":0},{"x":1121,"y":352,"score":28,"level":0},{"x":1127,"y":352,"score":30,"level":0},{"x":1157,"y":352,"score":121,"level":0},{"x":1200,"y":352,"score":27,"level":0},{"x":1294,"y":352,"score":34,"level":0},{"x":1387,"y":352,"score":36,"level":0},{"x":1438,"y":352,"score":44,"level":0},{"x":426,"y":353,"score":47,"level":0},{"x":431,"y":353,"score":30,"level":0},{"x":482,"y":353,"score":112,"level":0},{"x":510,"y":353,"score":32,"level":0},{"x":649,"y":353,"score":52,"level":0},{"x":668,"y":353,"score":158,"level":0},{"x":701,"y":353,"score":42,"level":0},{"x":875,"y":353,"score":80,"level":0},{"x":910,"y":353,"score":61,"level":0},{"x":922,"y":353,"score":63,"level":0},{"x":971,"y":353,"score":63,"level":0},{"x":973,"y":353,"score":55,"level":0},{"x":1052,"y":353,"score":63,"level":0},{"x":1058,"y":353,"score":122,"level":0},{"x":1064,"y":353,"score":63,"level":0},{"x":1132,"y":353,"score":61,"level":0},{"x":1134,"y":353,"score":60,"level":0},{"x":1142,"y":353,"score":63,"level":0},{"x":1151,"y":353,"score":44,"level":0},{"x":1209,"y":353,"score":100,"level":0},{"x":1258,"y":353,"score":101,"level":0},{"x":1307,"y":353,"score":78,"level":0},{"x":1322,"y":353,"score":82,"level":0},{"x":1349,"y":353,"score":105,"level":0},{"x":1443,"y":353,"score":29,"level":0},{"x":468,"y":354,"score":59,"level":0},{"x":499,"y":354,"score":63,"level":0},{"x":550,"y":354,"score":75,"level":0},{"x":613,"y":354,"score":185,"level":0},{"x":673,"y":354,"score":27,"level":0},{"x":680,"y":354,"score":78,"level":0},{"x":694,"y":354,"score":90,"level":0},{"x":741,"y":354,"score":116,"level":0},{"x":927,"y":354,"score":67,"level":0},{"x":952,"y":354,"score":55,"level":0},{"x":990,"y":354,"score":30,"level":0},{"x":1001,"y":354,"score":64,"level":0},{"x":1106,"y":354,"score":96,"level":0},{"x":1110,"y":354,"score":75,"level":0},{"x":1116,"y":354,"score":95,"level":0},{"x":1121,"y":354,"score":74,"level":0},{"x":1223,"y":354,"score":198,"level":0},{"x":1264,"y":354,"score":88,"level":0},{"x":1269,"y":354,"score":62,"level":0},{"x":1310,"y":354,"score":78,"level":0},{"x":1312,"y":354,"score":99,"level":0},{"x":1338,"y":354,"score":30,"level":0},{"x":377,"y":355,"score":156,"level":0},{"x":402,"y":355,"score":85,"level":0},{"x":421,"y":355,"score":35,"level":0},{"x":458,"y":355,"score":74,"level":0},{"x":533,"y":355,"score":72,"level":0},{"x":568,"y":355,"score":28,"level":0},{"x":626,"y":355,"score":26,"level":0},{"x":820,"y":355,"score":110,"level":0},{"x":942,"y":355,"score":26,"level":0},{"x":996,"y":355,"score":99,"level":0},{"x":1006,"y":355,"score":91,"level":0},{"x":1045,"y":355,"score":64,"level":0},{"x":1077,"y":355,"score":122,"level":0},{"x":1134,"y":355,"score":52,"level":0},{"x":1159,"y":355,"score":47,"level":0},{"x":1185,"y":355,"score":62,"level":0},{"x":1246,"y":355,"score":37,"level":0},{"x":1280,"y":355,"score":47,"level":0},{"x":1300,"y":355,"score":62,"level":0},{"x":1355,"y":355,"score":127,"level":0},{"x":1381,"y":355,"score":47,"level":0},{"x":1393,"y":355,"score":36,"level":0},{"x":1437,"y":355,"score":40,"level":0},{"x":1444,"y":355,"score":31,"level":0},{"x":409,"y":356,"score":70,"level":0},{"x":494,"y":356,"score":55,"level":0},{"x":619,"y":356,"score":95,"level":0},{"x":710,"y":356,"score":163,"level":0},{"x":726,"y":356,"score":57,"level":0},{"x":731,"y":356,"score":105,"level":0},{"x":861,"y":356,"score":73,"level":0},{"x":934,"y":356,"score":55,"level":0},{"x":1014,"y":356,"score":88,"level":0},{"x":1055,"y":356,"score":41,"level":0},{"x":1062,"y":356,"score":59,"level":0},{"x":1166,"y":356,"score":111,"level":0},{"x":1218,"y":356,"score":292,"level":0},{"x":1240,"y":356,"score":37,"level":0},{"x":1291,"y":356,"score":122,"level":0},{"x":1361,"y":356,"score":35,"level":0},{"x":1463,"y":356,"score":109,"level":0},{"x":1469,"y":356,"score":52,"level":0},{"x":387,"y":357,"score":83,"level":0},{"x":463,"y":357,"score":124,"level":0},{"x":509,"y":357,"score":54,"level":0},{"x":520,"y":357,"score":96,"level":0},{"x":636,"y":357,"score":26,"level":0},{"x":655,"y":357,"score":140,"level":0},{"x":745,"y":357,"score":49,"level":0},{"x":1099,"y":357,"score":29,"level":0},{"x":1145,"y":357,"score":34,"level":0},{"x":1193,"y":357,"score":36,"level":0},{"x":1211,"y":357,"score":106,"level":0},{"x":1322,"y":357,"score":88,"level":0},{"x":1344,"y":357,"score":66,"level":0},{"x":1476,"y":357,"score":31,"level":0},{"x":418,"y":358,"score":47,"level":0},{"x":454,"y":358,"score":56,"level":0},{"x":620,"y":358,"score":42,"level":0},{"x":724,"y":358,"score":30,"level":0},{"x":939,"y":358,"score":30,"level":0},{"x":995,"y":358,"score":102,"level":0},{"x":1150,"y":358,"score":32,"level":0},{"x":1262,"y":358,"score":78,"level":0},{"x":1356,"y":358,"score":37,"level":0},{"x":1368,"y":358,"score":32,"level":0},{"x":410,"y":359,"score":84,"level":0},{"x":529,"y":359,"score":174,"level":0},{"x":636,"y":359,"score":84,"level":0},{"x":664,"y":359,"score":80,"level":0},{"x":669,"y":359,"score":31,"level":0},{"x":718,"y":359,"score":59,"level":0},{"x":754,"y":359,"score":81,"level":0},{"x":835,"y":359,"score":84,"level":0},{"x":879,"y":359,"score":63,"level":0},{"x":884,"y":359,"score":37,"level":0},{"x":971,"y":359,"score":41,"level":0},{"x":1071,"y":359,"score":96,"level":0},{"x":1100,"y":359,"score":55,"level":0},{"x":1114,"y":359,"score":32,"level":0},{"x":1146,"y":359,"score":50,"level":0},{"x":1266,"y":359,"score":57,"level":0},{"x":1377,"y":359,"score":39,"level":0},{"x":1395,"y":359,"score":92,"level":0},{"x":399,"y":360,"score":127,"level":0},{"x":458,"y":360,"score":74,"level":0},{"x":508,"y":360,"score":72,"level":0},{"x":539,"y":360,"score":207,"level":0},{"x":561,"y":360,"score":113,"level":0},{"x":568,"y":360,"score":262,"level":0},{"x":915,"y":360,"score":86,"level":0},{"x":924,"y":360,"score":83,"level":0},{"x":975,"y":360,"score":89,"level":0},{"x":1002,"y":360,"score":70,"level":0},{"x":1066,"y":360,"score":64,"level":0},{"x":1126,"y":360,"score":41,"level":0},{"x":1253,"y":360,"score":41,"level":0},{"x":1285,"y":360,"score":52,"level":0},{"x":1382,"y":360,"score":120,"level":0},{"x":1444,"y":360,"score":69,"level":0},{"x":1477,"y":360,"score":39,"level":0},{"x":422,"y":361,"score":35,"level":0},{"x":620,"y":361,"score":30,"level":0},{"x":701,"y":361,"score":197,"level":0},{"x":929,"y":361,"score":41,"level":0},{"x":1050,"y":361,"score":69,"level":0},{"x":1061,"y":361,"score":32,"level":0},{"x":1261,"y":361,"score":73,"level":0},{"x":1302,"y":361,"score":143,"level":0},{"x":1321,"y":361,"score":68,"level":0},{"x":1327,"y":361,"score":93,"level":0},{"x":1357,"y":361,"score":32,"level":0},{"x":1390,"y":361,"score":43,"level":0},{"x":1438,"y":361,"score":112,"level":0},{"x":1456,"y":361,"score":33,"level":0},{"x":1488,"y":361,"score":41,"level":0},{"x":419,"y":362,"score":36,"level":0},{"x":550,"y":362,"score":29,"level":0},{"x":683,"y":362,"score":64,"level":0},{"x":691,"y":362,"score":52,"level":0},{"x":709,"y":362,"score":76,"level":0},{"x":724,"y":362,"score":45,"level":0},{"x":830,"y":362,"score":70,"level":0},{"x":867,"y":362,"score":29,"level":0},{"x":946,"y":362,"score":92,"level":0},{"x":1008,"y":362,"score":42,"level":0},{"x":1014,"y":362,"score":41,"level":0},{"x":1044,"y":362,"score":46,"level":0},{"x":1090,"y":362,"score":69,"level":0},{"x":1147,"y":362,"score":41,"level":0},{"x":1158,"y":362,"score":72,"level":0},{"x":1191,"y":362,"score":84,"level":0},{"x":1194,"y":362,"score":44,"level":0},{"x":1207,"y":362,"score":61,"level":0},{"x":1223,"y":362,"score":64,"level":0},{"x":1229,"y":362,"score":80,"level":0},{"x":1255,"y":362,"score":60,"level":0},{"x":1275,"y":362,"score":64,"level":0},{"x":1290,"y":362,"score":89,"level":0},{"x":1342,"y":362,"score":47,"level":0},{"x":1367,"y":362,"score":48,"level":0},{"x":1465,"y":362,"score":28,"level":0},{"x":403,"y":363,"score":34,"level":0},{"x":408,"y":363,"score":40,"level":0},{"x":414,"y":363,"score":155,"level":0},{"x":456,"y":363,"score":38,"level":0},{"x":458,"y":363,"score":34,"level":0},{"x":474,"y":363,"score":36,"level":0},{"x":613,"y":363,"score":61,"level":0},{"x":628,"y":363,"score":34,"level":0},{"x":662,"y":363,"score":71,"level":0},{"x":712,"y":363,"score":48,"level":0},{"x":863,"y":363,"score":82,"level":0},{"x":872,"y":363,"score":43,"level":0},{"x":885,"y":363,"score":38,"level":0},{"x":906,"y":363,"score":111,"level":0},{"x":928,"y":363,"score":70,"level":0},{"x":953,"y":363,"score":49,"level":0},{"x":970,"y":363,"score":42,"level":0},{"x":1025,"y":363,"score":52,"level":0},{"x":1061,"y":363,"score":33,"level":0},{"x":1106,"y":363,"score":82,"level":0},{"x":1115,"y":363,"score":68,"level":0},{"x":1120,"y":363,"score":57,"level":0},{"x":1258,"y":363,"score":38,"level":0},{"x":1264,"y":363,"score":47,"level":0},{"x":1340,"y":363,"score":54,"level":0},{"x":1428,"y":363,"score":59,"level":0},{"x":1483,"y":363,"score":41,"level":0},{"x":433,"y":364,"score":32,"level":0},{"x":531,"y":364,"score":27,"level":0},{"x":572,"y":364,"score":45,"level":0},{"x":622,"y":364,"score":48,"level":0},{"x":642,"y":364,"score":61,"level":0},{"x":678,"y":364,"score":38,"level":0},{"x":743,"y":364,"score":51,"level":0},{"x":778,"y":364,"score":119,"level":0},{"x":878,"y":364,"score":49,"level":0},{"x":1048,"y":364,"score":26,"level":0},{"x":1101,"y":364,"score":37,"level":0},{"x":1164,"y":364,"score":220,"level":0},{"x":1169,"y":364,"score":79,"level":0},{"x":1245,"y":364,"score":57,"level":0},{"x":1269,"y":364,"score":154,"level":0},{"x":1298,"y":364,"score":37,"level":0},{"x":1374,"y":364,"score":44,"level":0},{"x":1449,"y":364,"score":57,"level":0},{"x":388,"y":365,"score":88,"level":0},{"x":403,"y":365,"score":84,"level":0},{"x":631,"y":365,"score":134,"level":0},{"x":749,"y":365,"score":62,"level":0},{"x":840,"y":365,"score":40,"level":0},{"x":960,"y":365,"score":41,"level":0},{"x":973,"y":365,"score":56,"level":0},{"x":997,"y":365,"score":122,"level":0},{"x":1009,"y":365,"score":33,"level":0},{"x":1126,"y":365,"score":41,"level":0},{"x":1145,"y":365,"score":72,"level":0},{"x":1152,"y":365,"score":60,"level":0},{"x":1157,"y":365,"score":30,"level":0},{"x":1258,"y":365,"score":31,"level":0},{"x":1260,"y":365,"score":81,"level":0},{"x":1275,"y":365,"score":48,"level":0},{"x":1357,"y":365,"score":64,"level":0},{"x":1382,"y":365,"score":51,"level":0},{"x":1428,"y":365,"score":62,"level":0},{"x":1434,"y":365,"score":37,"level":0},{"x":1482,"y":365,"score":28,"level":0},{"x":416,"y":366,"score":84,"level":0},{"x":479,"y":366,"score":128,"level":0},{"x":493,"y":366,"score":101,"level":0},{"x":539,"y":366,"score":86,"level":0},{"x":555,"y":366,"score":55,"level":0},{"x":572,"y":366,"score":80,"level":0},{"x":613,"y":366,"score":34,"level":0},{"x":649,"y":366,"score":35,"level":0},{"x":653,"y":366,"score":98,"level":0},{"x":698,"y":366,"score":120,"level":0},{"x":758,"y":366,"score":78,"level":0},{"x":773,"y":366,"score":30,"level":0},{"x":957,"y":366,"score":54,"level":0},{"x":968,"y":366,"score":74,"level":0},{"x":1004,"y":366,"score":34,"level":0},{"x":1041,"y":366,"score":29,"level":0},{"x":1120,"y":366,"score":49,"level":0},{"x":1233,"y":366,"score":63,"level":0},{"x":1270,"y":366,"score":159,"level":0},{"x":1364,"y":366,"score":100,"level":0},{"x":1389,"y":366,"score":91,"level":0},{"x":1408,"y":366,"score":31,"level":0},{"x":395,"y":367,"score":126,"level":0},{"x":428,"y":367,"score":143,"level":0},{"x":636,"y":367,"score":100,"level":0},{"x":821,"y":367,"score":128,"level":0},{"x":893,"y":367,"score":34,"level":0},{"x":1031,"y":367,"score":42,"level":0},{"x":1045,"y":367,"score":54,"level":0},{"x":1063,"y":367,"score":74,"level":0},{"x":1076,"y":367,"score":103,"level":0},{"x":1090,"y":367,"score":32,"level":0},{"x":1114,"y":367,"score":38,"level":0},{"x":1143,"y":367,"score":94,"level":0},{"x":1168,"y":367,"score":88,"level":0},{"x":1243,"y":367,"score":56,"level":0},{"x":1289,"y":367,"score":78,"level":0},{"x":1369,"y":367,"score":36,"level":0},{"x":724,"y":368,"score":36,"level":0},{"x":735,"y":368,"score":30,"level":0},{"x":827,"y":368,"score":91,"level":0},{"x":834,"y":368,"score":41,"level":0},{"x":840,"y":368,"score":54,"level":0},{"x":880,"y":368,"score":58,"level":0},{"x":925,"y":368,"score":52,"level":0},{"x":1047,"y":368,"score":69,"level":0},{"x":1177,"y":368,"score":28,"level":0},{"x":1195,"y":368,"score":55,"level":0},{"x":1223,"y":368,"score":26,"level":0},{"x":1358,"y":368,"score":68,"level":0},{"x":1376,"y":368,"score":30,"level":0},{"x":1428,"y":368,"score":30,"level":0},{"x":412,"y":369,"score":99,"level":0},{"x":563,"y":369,"score":93,"level":0},{"x":657,"y":369,"score":122,"level":0},{"x":670,"y":369,"score":68,"level":0},{"x":690,"y":369,"score":36,"level":0},{"x":702,"y":369,"score":118,"level":0},{"x":709,"y":369,"score":145,"level":0},{"x":744,"y":369,"score":47,"level":0},{"x":936,"y":369,"score":40,"level":0},{"x":954,"y":369,"score":159,"level":0},{"x":1018,"y":369,"score":66,"level":0},{"x":1099,"y":369,"score":27,"level":0},{"x":1115,"y":369,"score":54,"level":0},{"x":1204,"y":369,"score":53,"level":0},{"x":1252,"y":369,"score":41,"level":0},{"x":1296,"y":369,"score":50,"level":0},{"x":1340,"y":369,"score":64,"level":0},{"x":1347,"y":369,"score":59,"level":0},{"x":469,"y":370,"score":106,"level":0},{"x":500,"y":370,"score":73,"level":0},{"x":647,"y":370,"score":58,"level":0},{"x":654,"y":370,"score":93,"level":0},{"x":875,"y":370,"score":125,"level":0},{"x":884,"y":370,"score":44,"level":0},{"x":917,"y":370,"score":31,"level":0},{"x":960,"y":370,"score":78,"level":0},{"x":1000,"y":370,"score":57,"level":0},{"x":1026,"y":370,"score":44,"level":0},{"x":1059,"y":370,"score":57,"level":0},{"x":1071,"y":370,"score":59,"level":0},{"x":1082,"y":370,"score":44,"level":0},{"x":1086,"y":370,"score":82,"level":0},{"x":1093,"y":370,"score":38,"level":0},{"x":1108,"y":370,"score":77,"level":0},{"x":1157,"y":370,"score":58,"level":0},{"x":1166,"y":370,"score":86,"level":0},{"x":1172,"y":370,"score":33,"level":0},{"x":1220,"y":370,"score":60,"level":0},{"x":1228,"y":370,"score":91,"level":0},{"x":1310,"y":370,"score":143,"level":0},{"x":1316,"y":370,"score":31,"level":0},{"x":1462,"y":370,"score":61,"level":0},{"x":1467,"y":370,"score":51,"level":0},{"x":405,"y":371,"score":56,"level":0},{"x":410,"y":371,"score":41,"level":0},{"x":459,"y":371,"score":41,"level":0},{"x":481,"y":371,"score":50,"level":0},{"x":508,"y":371,"score":61,"level":0},{"x":624,"y":371,"score":167,"level":0},{"x":631,"y":371,"score":140,"level":0},{"x":640,"y":371,"score":45,"level":0},{"x":692,"y":371,"score":98,"level":0},{"x":879,"y":371,"score":48,"level":0},{"x":970,"y":371,"score":116,"level":0},{"x":995,"y":371,"score":156,"level":0},{"x":1049,"y":371,"score":28,"level":0},{"x":1199,"y":371,"score":102,"level":0},{"x":1245,"y":371,"score":67,"level":0},{"x":1260,"y":371,"score":31,"level":0},{"x":1333,"y":371,"score":32,"level":0},{"x":1335,"y":371,"score":27,"level":0},{"x":1442,"y":371,"score":27,"level":0},{"x":1487,"y":371,"score":75,"level":0},{"x":449,"y":372,"score":47,"level":0},{"x":454,"y":372,"score":142,"level":0},{"x":478,"y":372,"score":115,"level":0},{"x":514,"y":372,"score":170,"level":0},{"x":539,"y":372,"score":98,"level":0},{"x":665,"y":372,"score":126,"level":0},{"x":679,"y":372,"score":29,"level":0},{"x":796,"y":372,"score":76,"level":0},{"x":864,"y":372,"score":42,"level":0},{"x":906,"y":372,"score":44,"level":0},{"x":1007,"y":372,"score":53,"level":0},{"x":1012,"y":372,"score":150,"level":0},{"x":1088,"y":372,"score":52,"level":0},{"x":1147,"y":372,"score":168,"level":0},{"x":1271,"y":372,"score":40,"level":0},{"x":1395,"y":372,"score":48,"level":0},{"x":1433,"y":372,"score":26,"level":0},{"x":396,"y":373,"score":51,"level":0},{"x":550,"y":373,"score":31,"level":0},{"x":569,"y":373,"score":30,"level":0},{"x":617,"y":373,"score":202,"level":0},{"x":726,"y":373,"score":49,"level":0},{"x":843,"y":373,"score":50,"level":0},{"x":866,"y":373,"score":82,"level":0},{"x":939,"y":373,"score":55,"level":0},{"x":1131,"y":373,"score":40,"level":0},{"x":1137,"y":373,"score":40,"level":0},{"x":1173,"y":373,"score":29,"level":0},{"x":1236,"y":373,"score":35,"level":0},{"x":1265,"y":373,"score":118,"level":0},{"x":1478,"y":373,"score":36,"level":0},{"x":386,"y":374,"score":36,"level":0},{"x":391,"y":374,"score":43,"level":0},{"x":495,"y":374,"score":157,"level":0},{"x":558,"y":374,"score":65,"level":0},{"x":564,"y":374,"score":118,"level":0},{"x":575,"y":374,"score":29,"level":0},{"x":602,"y":374,"score":37,"level":0},{"x":659,"y":374,"score":120,"level":0},{"x":698,"y":374,"score":144,"level":0},{"x":711,"y":374,"score":68,"level":0},{"x":733,"y":374,"score":30,"level":0},{"x":735,"y":374,"score":68,"level":0},{"x":748,"y":374,"score":62,"level":0},{"x":796,"y":374,"score":71,"level":0},{"x":822,"y":374,"score":47,"level":0},{"x":882,"y":374,"score":32,"level":0},{"x":968,"y":374,"score":91,"level":0},{"x":1065,"y":374,"score":168,"level":0},{"x":1110,"y":374,"score":27,"level":0},{"x":1129,"y":374,"score":55,"level":0},{"x":1234,"y":374,"score":57,"level":0},{"x":1314,"y":374,"score":34,"level":0},{"x":1320,"y":374,"score":30,"level":0},{"x":1340,"y":374,"score":42,"level":0},{"x":1376,"y":374,"score":61,"level":0},{"x":1382,"y":374,"score":64,"level":0},{"x":1428,"y":374,"score":116,"level":0},{"x":1433,"y":374,"score":28,"level":0},{"x":423,"y":375,"score":128,"level":0},{"x":631,"y":375,"score":188,"level":0},{"x":672,"y":375,"score":61,"level":0},{"x":688,"y":375,"score":61,"level":0},{"x":713,"y":375,"score":44,"level":0},{"x":877,"y":375,"score":163,"level":0},{"x":906,"y":375,"score":48,"level":0},{"x":963,"y":375,"score":100,"level":0},{"x":978,"y":375,"score":86,"level":0},{"x":1075,"y":375,"score":129,"level":0},{"x":1099,"y":375,"score":67,"level":0},{"x":1212,"y":375,"score":240,"level":0},{"x":1227,"y":375,"score":164,"level":0},{"x":1249,"y":375,"score":38,"level":0},{"x":1259,"y":375,"score":109,"level":0},{"x":1346,"y":375,"score":170,"level":0},{"x":1362,"y":375,"score":119,"level":0},{"x":1458,"y":375,"score":67,"level":0},{"x":400,"y":376,"score":28,"level":0},{"x":405,"y":376,"score":61,"level":0},{"x":412,"y":376,"score":64,"level":0},{"x":429,"y":376,"score":55,"level":0},{"x":570,"y":376,"score":29,"level":0},{"x":830,"y":376,"score":118,"level":0},{"x":866,"y":376,"score":27,"level":0},{"x":887,"y":376,"score":56,"level":0},{"x":919,"y":376,"score":88,"level":0},{"x":1080,"y":376,"score":57,"level":0},{"x":1275,"y":376,"score":82,"level":0},{"x":1337,"y":376,"score":65,"level":0},{"x":480,"y":377,"score":154,"level":0},{"x":573,"y":377,"score":32,"level":0},{"x":623,"y":377,"score":66,"level":0},{"x":727,"y":377,"score":80,"level":0},{"x":759,"y":377,"score":39,"level":0},{"x":973,"y":377,"score":65,"level":0},{"x":982,"y":377,"score":69,"level":0},{"x":1204,"y":377,"score":98,"level":0},{"x":1310,"y":377,"score":31,"level":0},{"x":1335,"y":377,"score":81,"level":0},{"x":1358,"y":377,"score":144,"level":0},{"x":1471,"y":377,"score":79,"level":0},{"x":420,"y":378,"score":88,"level":0},{"x":489,"y":378,"score":36,"level":0},{"x":508,"y":378,"score":138,"level":0},{"x":513,"y":378,"score":44,"level":0},{"x":531,"y":378,"score":45,"level":0},{"x":550,"y":378,"score":66,"level":0},{"x":617,"y":378,"score":57,"level":0},{"x":664,"y":378,"score":116,"level":0},{"x":745,"y":378,"score":185,"level":0},{"x":840,"y":378,"score":122,"level":0},{"x":870,"y":378,"score":63,"level":0},{"x":937,"y":378,"score":38,"level":0},{"x":984,"y":378,"score":71,"level":0},{"x":1004,"y":378,"score":68,"level":0},{"x":1051,"y":378,"score":35,"level":0},{"x":1115,"y":378,"score":117,"level":0},{"x":1148,"y":378,"score":134,"level":0},{"x":1163,"y":378,"score":70,"level":0},{"x":1193,"y":378,"score":210,"level":0},{"x":1236,"y":378,"score":30,"level":0},{"x":1253,"y":378,"score":67,"level":0},{"x":1270,"y":378,"score":51,"level":0},{"x":1306,"y":378,"score":55,"level":0},{"x":1329,"y":378,"score":118,"level":0},{"x":1353,"y":378,"score":106,"level":0},{"x":377,"y":379,"score":71,"level":0},{"x":415,"y":379,"score":92,"level":0},{"x":454,"y":379,"score":211,"level":0},{"x":465,"y":379,"score":37,"level":0},{"x":520,"y":379,"score":145,"level":0},{"x":556,"y":379,"score":94,"level":0},{"x":628,"y":379,"score":74,"level":0},{"x":670,"y":379,"score":85,"level":0},{"x":697,"y":379,"score":188,"level":0},{"x":703,"y":379,"score":70,"level":0},{"x":825,"y":379,"score":43,"level":0},{"x":929,"y":379,"score":59,"level":0},{"x":978,"y":379,"score":46,"level":0},{"x":993,"y":379,"score":34,"level":0},{"x":1121,"y":379,"score":51,"level":0},{"x":1129,"y":379,"score":115,"level":0},{"x":1137,"y":379,"score":36,"level":0},{"x":1144,"y":379,"score":40,"level":0},{"x":1167,"y":379,"score":50,"level":0},{"x":1180,"y":379,"score":70,"level":0},{"x":1187,"y":379,"score":105,"level":0},{"x":1367,"y":379,"score":151,"level":0},{"x":494,"y":380,"score":51,"level":0},{"x":516,"y":380,"score":66,"level":0},{"x":546,"y":380,"score":63,"level":0},{"x":602,"y":380,"score":54,"level":0},{"x":617,"y":380,"score":54,"level":0},{"x":642,"y":380,"score":29,"level":0},{"x":647,"y":380,"score":81,"level":0},{"x":739,"y":380,"score":41,"level":0},{"x":742,"y":380,"score":65,"level":0},{"x":990,"y":380,"score":32,"level":0},{"x":1025,"y":380,"score":98,"level":0},{"x":1042,"y":380,"score":95,"level":0},{"x":1081,"y":380,"score":30,"level":0},{"x":1093,"y":380,"score":38,"level":0},{"x":1102,"y":380,"score":42,"level":0},{"x":1107,"y":380,"score":99,"level":0},{"x":1229,"y":380,"score":224,"level":0},{"x":1234,"y":380,"score":33,"level":0},{"x":1265,"y":380,"score":98,"level":0},{"x":1485,"y":380,"score":27,"level":0},{"x":410,"y":381,"score":32,"level":0},{"x":424,"y":381,"score":133,"level":0},{"x":553,"y":381,"score":105,"level":0},{"x":583,"y":381,"score":36,"level":0},{"x":638,"y":381,"score":26,"level":0},{"x":683,"y":381,"score":72,"level":0},{"x":688,"y":381,"score":70,"level":0},{"x":690,"y":381,"score":64,"level":0},{"x":716,"y":381,"score":58,"level":0},{"x":723,"y":381,"score":26,"level":0},{"x":821,"y":381,"score":50,"level":0},{"x":826,"y":381,"score":33,"level":0},{"x":877,"y":381,"score":30,"level":0},{"x":1003,"y":381,"score":68,"level":0},{"x":1133,"y":381,"score":29,"level":0},{"x":1150,"y":381,"score":58,"level":0},{"x":1206,"y":381,"score":69,"level":0},{"x":1212,"y":381,"score":168,"level":0},{"x":1224,"y":381,"score":26,"level":0},{"x":1375,"y":381,"score":74,"level":0},{"x":1476,"y":381,"score":30,"level":0},{"x":403,"y":382,"score":53,"level":0},{"x":429,"y":382,"score":88,"level":0},{"x":572,"y":382,"score":141,"level":0},{"x":614,"y":382,"score":49,"level":0},{"x":661,"y":382,"score":45,"level":0},{"x":706,"y":382,"score":120,"level":0},{"x":844,"y":382,"score":29,"level":0},{"x":971,"y":382,"score":54,"level":0},{"x":1009,"y":382,"score":30,"level":0},{"x":1024,"y":382,"score":62,"level":0},{"x":1139,"y":382,"score":71,"level":0},{"x":1156,"y":382,"score":74,"level":0},{"x":1319,"y":382,"score":52,"level":0},{"x":1326,"y":382,"score":32,"level":0},{"x":1349,"y":382,"score":40,"level":0},{"x":1441,"y":382,"score":32,"level":0},{"x":1467,"y":382,"score":34,"level":0},{"x":673,"y":383,"score":28,"level":0},{"x":719,"y":383,"score":78,"level":0},{"x":864,"y":383,"score":156,"level":0},{"x":875,"y":383,"score":99,"level":0},{"x":905,"y":383,"score":91,"level":0},{"x":915,"y":383,"score":56,"level":0},{"x":920,"y":383,"score":63,"level":0},{"x":958,"y":383,"score":38,"level":0},{"x":973,"y":383,"score":82,"level":0},{"x":1007,"y":383,"score":29,"level":0},{"x":1021,"y":383,"score":74,"level":0},{"x":1073,"y":383,"score":42,"level":0},{"x":1112,"y":383,"score":52,"level":0},{"x":1195,"y":383,"score":226,"level":0},{"x":1217,"y":383,"score":34,"level":0},{"x":1238,"y":383,"score":129,"level":0},{"x":1270,"y":383,"score":56,"level":0},{"x":1329,"y":383,"score":27,"level":0},{"x":1338,"y":383,"score":36,"level":0},{"x":1355,"y":383,"score":126,"level":0},{"x":1360,"y":383,"score":63,"level":0},{"x":1394,"y":383,"score":71,"level":0},{"x":1475,"y":383,"score":59,"level":0},{"x":414,"y":384,"score":61,"level":0},{"x":454,"y":384,"score":87,"level":0},{"x":478,"y":384,"score":60,"level":0},{"x":524,"y":384,"score":46,"level":0},{"x":534,"y":384,"score":147,"level":0},{"x":550,"y":384,"score":36,"level":0},{"x":621,"y":384,"score":154,"level":0},{"x":652,"y":384,"score":123,"level":0},{"x":670,"y":384,"score":102,"level":0},{"x":733,"y":384,"score":60,"level":0},{"x":825,"y":384,"score":151,"level":0},{"x":880,"y":384,"score":26,"level":0},{"x":949,"y":384,"score":56,"level":0},{"x":965,"y":384,"score":242,"level":0},{"x":982,"y":384,"score":113,"level":0},{"x":1012,"y":384,"score":33,"level":0},{"x":1051,"y":384,"score":36,"level":0},{"x":1057,"y":384,"score":34,"level":0},{"x":1082,"y":384,"score":36,"level":0},{"x":1087,"y":384,"score":77,"level":0},{"x":1118,"y":384,"score":58,"level":0},{"x":1123,"y":384,"score":53,"level":0},{"x":1189,"y":384,"score":104,"level":0},{"x":1222,"y":384,"score":45,"level":0},{"x":1244,"y":384,"score":52,"level":0},{"x":1311,"y":384,"score":72,"level":0},{"x":1318,"y":384,"score":97,"level":0},{"x":1372,"y":384,"score":46,"level":0},{"x":1484,"y":384,"score":55,"level":0},{"x":385,"y":385,"score":102,"level":0},{"x":461,"y":385,"score":27,"level":0},{"x":491,"y":385,"score":171,"level":0},{"x":529,"y":385,"score":35,"level":0},{"x":617,"y":385,"score":30,"level":0},{"x":659,"y":385,"score":51,"level":0},{"x":886,"y":385,"score":30,"level":0},{"x":911,"y":385,"score":42,"level":0},{"x":951,"y":385,"score":50,"level":0},{"x":1020,"y":385,"score":39,"level":0},{"x":1227,"y":385,"score":180,"level":0},{"x":1256,"y":385,"score":58,"level":0},{"x":1276,"y":385,"score":30,"level":0},{"x":1366,"y":385,"score":34,"level":0},{"x":1458,"y":385,"score":94,"level":0},{"x":1470,"y":385,"score":98,"level":0},{"x":471,"y":386,"score":49,"level":0},{"x":497,"y":386,"score":53,"level":0},{"x":545,"y":386,"score":46,"level":0},{"x":664,"y":386,"score":94,"level":0},{"x":699,"y":386,"score":74,"level":0},{"x":752,"y":386,"score":39,"level":0},{"x":921,"y":386,"score":46,"level":0},{"x":934,"y":386,"score":79,"level":0},{"x":960,"y":386,"score":58,"level":0},{"x":1029,"y":386,"score":65,"level":0},{"x":1050,"y":386,"score":31,"level":0},{"x":1086,"y":386,"score":63,"level":0},{"x":1133,"y":386,"score":76,"level":0},{"x":1167,"y":386,"score":57,"level":0},{"x":1447,"y":386,"score":48,"level":0},{"x":401,"y":387,"score":64,"level":0},{"x":419,"y":387,"score":121,"level":0},{"x":499,"y":387,"score":60,"level":0},{"x":528,"y":387,"score":83,"level":0},{"x":574,"y":387,"score":65,"level":0},{"x":747,"y":387,"score":115,"level":0},{"x":840,"y":387,"score":40,"level":0},{"x":878,"y":387,"score":32,"level":0},{"x":977,"y":387,"score":84,"level":0},{"x":987,"y":387,"score":33,"level":0},{"x":1007,"y":387,"score":27,"level":0},{"x":1139,"y":387,"score":34,"level":0},{"x":1143,"y":387,"score":50,"level":0},{"x":1214,"y":387,"score":122,"level":0},{"x":1246,"y":387,"score":58,"level":0},{"x":1326,"y":387,"score":98,"level":0},{"x":1345,"y":387,"score":76,"level":0},{"x":1382,"y":387,"score":82,"level":0},{"x":1387,"y":387,"score":44,"level":0},{"x":1389,"y":387,"score":57,"level":0},{"x":1438,"y":387,"score":114,"level":0},{"x":727,"y":388,"score":26,"level":0},{"x":804,"y":388,"score":42,"level":0},{"x":824,"y":388,"score":122,"level":0},{"x":845,"y":388,"score":60,"level":0},{"x":945,"y":388,"score":37,"level":0},{"x":995,"y":388,"score":105,"level":0},{"x":1042,"y":388,"score":112,"level":0},{"x":1098,"y":388,"score":64,"level":0},{"x":1113,"y":388,"score":47,"level":0},{"x":1147,"y":388,"score":62,"level":0},{"x":1206,"y":388,"score":44,"level":0},{"x":1230,"y":388,"score":33,"level":0},{"x":1334,"y":388,"score":28,"level":0},{"x":1350,"y":388,"score":60,"level":0},{"x":1393,"y":388,"score":26,"level":0},{"x":1450,"y":388,"score":60,"level":0},{"x":1463,"y":388,"score":76,"level":0},{"x":1490,"y":388,"score":44,"level":0},{"x":652,"y":389,"score":86,"level":0},{"x":675,"y":389,"score":53,"level":0},{"x":721,"y":389,"score":95,"level":0},{"x":738,"y":389,"score":38,"level":0},{"x":814,"y":389,"score":28,"level":0},{"x":893,"y":389,"score":66,"level":0},{"x":997,"y":389,"score":147,"level":0},{"x":1004,"y":389,"score":108,"level":0},{"x":1078,"y":389,"score":34,"level":0},{"x":1235,"y":389,"score":118,"level":0},{"x":1243,"y":389,"score":30,"level":0},{"x":1252,"y":389,"score":55,"level":0},{"x":1263,"y":389,"score":66,"level":0},{"x":1318,"y":389,"score":50,"level":0},{"x":1336,"y":389,"score":41,"level":0},{"x":1389,"y":389,"score":55,"level":0},{"x":1444,"y":389,"score":42,"level":0},{"x":1479,"y":389,"score":31,"level":0},{"x":1482,"y":389,"score":44,"level":0},{"x":392,"y":390,"score":112,"level":0},{"x":416,"y":390,"score":67,"level":0},{"x":423,"y":390,"score":72,"level":0},{"x":495,"y":390,"score":34,"level":0},{"x":505,"y":390,"score":97,"level":0},{"x":539,"y":390,"score":46,"level":0},{"x":552,"y":390,"score":64,"level":0},{"x":622,"y":390,"score":120,"level":0},{"x":627,"y":390,"score":150,"level":0},{"x":647,"y":390,"score":104,"level":0},{"x":660,"y":390,"score":146,"level":0},{"x":692,"y":390,"score":50,"level":0},{"x":863,"y":390,"score":47,"level":0},{"x":882,"y":390,"score":95,"level":0},{"x":925,"y":390,"score":29,"level":0},{"x":972,"y":390,"score":47,"level":0},{"x":977,"y":390,"score":81,"level":0},{"x":1021,"y":390,"score":62,"level":0},{"x":1049,"y":390,"score":42,"level":0},{"x":1257,"y":390,"score":57,"level":0},{"x":1366,"y":390,"score":82,"level":0},{"x":1376,"y":390,"score":60,"level":0},{"x":1453,"y":390,"score":64,"level":0},{"x":1463,"y":390,"score":100,"level":0},{"x":377,"y":391,"score":152,"level":0},{"x":454,"y":391,"score":65,"level":0},{"x":481,"y":391,"score":69,"level":0},{"x":546,"y":391,"score":28,"level":0},{"x":671,"y":391,"score":38,"level":0},{"x":682,"y":391,"score":57,"level":0},{"x":707,"y":391,"score":36,"level":0},{"x":829,"y":391,"score":139,"level":0},{"x":869,"y":391,"score":86,"level":0},{"x":913,"y":391,"score":36,"level":0},{"x":928,"y":391,"score":29,"level":0},{"x":933,"y":391,"score":124,"level":0},{"x":953,"y":391,"score":53,"level":0},{"x":966,"y":391,"score":113,"level":0},{"x":987,"y":391,"score":70,"level":0},{"x":1016,"y":391,"score":144,"level":0},{"x":1047,"y":391,"score":29,"level":0},{"x":1068,"y":391,"score":48,"level":0},{"x":1106,"y":391,"score":42,"level":0},{"x":1133,"y":391,"score":32,"level":0},{"x":1160,"y":391,"score":94,"level":0},{"x":1240,"y":391,"score":46,"level":0},{"x":1314,"y":391,"score":56,"level":0},{"x":1354,"y":391,"score":46,"level":0},{"x":1432,"y":391,"score":40,"level":0},{"x":401,"y":392,"score":67,"level":0},{"x":413,"y":392,"score":50,"level":0},{"x":521,"y":392,"score":27,"level":0},{"x":533,"y":392,"score":120,"level":0},{"x":539,"y":392,"score":36,"level":0},{"x":573,"y":392,"score":94,"level":0},{"x":922,"y":392,"score":35,"level":0},{"x":1124,"y":392,"score":33,"level":0},{"x":1144,"y":392,"score":90,"level":0},{"x":1156,"y":392,"score":70,"level":0},{"x":1245,"y":392,"score":118,"level":0},{"x":1273,"y":392,"score":141,"level":0},{"x":1308,"y":392,"score":32,"level":0},{"x":1327,"y":392,"score":114,"level":0},{"x":1372,"y":392,"score":57,"level":0},{"x":1454,"y":392,"score":48,"level":0},{"x":1475,"y":392,"score":65,"level":0},{"x":1488,"y":392,"score":42,"level":0},{"x":419,"y":393,"score":136,"level":0},{"x":455,"y":393,"score":104,"level":0},{"x":462,"y":393,"score":63,"level":0},{"x":560,"y":393,"score":80,"level":0},{"x":796,"y":393,"score":28,"level":0},{"x":824,"y":393,"score":181,"level":0},{"x":861,"y":393,"score":29,"level":0},{"x":876,"y":393,"score":58,"level":0},{"x":946,"y":393,"score":111,"level":0},{"x":986,"y":393,"score":80,"level":0},{"x":1004,"y":393,"score":36,"level":0},{"x":1024,"y":393,"score":148,"level":0},{"x":1047,"y":393,"score":38,"level":0},{"x":1097,"y":393,"score":59,"level":0},{"x":1137,"y":393,"score":29,"level":0},{"x":1208,"y":393,"score":72,"level":0},{"x":1215,"y":393,"score":110,"level":0},{"x":1346,"y":393,"score":90,"level":0},{"x":1360,"y":393,"score":97,"level":0},{"x":1365,"y":393,"score":26,"level":0},{"x":1438,"y":393,"score":72,"level":0},{"x":1440,"y":393,"score":55,"level":0},{"x":407,"y":394,"score":30,"level":0},{"x":639,"y":394,"score":42,"level":0},{"x":658,"y":394,"score":104,"level":0},{"x":699,"y":394,"score":118,"level":0},{"x":747,"y":394,"score":39,"level":0},{"x":766,"y":394,"score":28,"level":0},{"x":818,"y":394,"score":30,"level":0},{"x":840,"y":394,"score":29,"level":0},{"x":906,"y":394,"score":87,"level":0},{"x":1011,"y":394,"score":70,"level":0},{"x":1063,"y":394,"score":135,"level":0},{"x":1200,"y":394,"score":27,"level":0},{"x":1229,"y":394,"score":75,"level":0},{"x":1234,"y":394,"score":104,"level":0},{"x":1254,"y":394,"score":91,"level":0},{"x":1279,"y":394,"score":88,"level":0},{"x":1372,"y":394,"score":84,"level":0},{"x":1394,"y":394,"score":181,"level":0},{"x":1434,"y":394,"score":62,"level":0},{"x":1458,"y":394,"score":115,"level":0},{"x":1463,"y":394,"score":43,"level":0},{"x":413,"y":395,"score":60,"level":0},{"x":418,"y":395,"score":35,"level":0},{"x":497,"y":395,"score":54,"level":0},{"x":667,"y":395,"score":74,"level":0},{"x":694,"y":395,"score":49,"level":0},{"x":713,"y":395,"score":79,"level":0},{"x":865,"y":395,"score":106,"level":0},{"x":881,"y":395,"score":52,"level":0},{"x":885,"y":395,"score":60,"level":0},{"x":971,"y":395,"score":72,"level":0},{"x":1001,"y":395,"score":121,"level":0},{"x":1084,"y":395,"score":97,"level":0},{"x":1111,"y":395,"score":48,"level":0},{"x":1135,"y":395,"score":44,"level":0},{"x":1160,"y":395,"score":29,"level":0},{"x":1318,"y":395,"score":139,"level":0},{"x":1378,"y":395,"score":168,"level":0},{"x":1441,"y":395,"score":26,"level":0},{"x":1448,"y":395,"score":81,"level":0},{"x":394,"y":396,"score":55,"level":0},{"x":431,"y":396,"score":64,"level":0},{"x":568,"y":396,"score":32,"level":0},{"x":627,"y":396,"score":41,"level":0},{"x":800,"y":396,"score":38,"level":0},{"x":807,"y":396,"score":41,"level":0},{"x":912,"y":396,"score":32,"level":0},{"x":928,"y":396,"score":65,"level":0},{"x":1017,"y":396,"score":57,"level":0},{"x":1046,"y":396,"score":39,"level":0},{"x":1052,"y":396,"score":79,"level":0},{"x":1105,"y":396,"score":49,"level":0},{"x":1198,"y":396,"score":67,"level":0},{"x":1240,"y":396,"score":30,"level":0},{"x":1287,"y":396,"score":185,"level":0},{"x":1426,"y":396,"score":94,"level":0},{"x":1468,"y":396,"score":43,"level":0},{"x":382,"y":397,"score":49,"level":0},{"x":400,"y":397,"score":54,"level":0},{"x":416,"y":397,"score":51,"level":0},{"x":502,"y":397,"score":83,"level":0},{"x":528,"y":397,"score":57,"level":0},{"x":539,"y":397,"score":135,"level":0},{"x":548,"y":397,"score":97,"level":0},{"x":570,"y":397,"score":42,"level":0},{"x":661,"y":397,"score":88,"level":0},{"x":667,"y":397,"score":102,"level":0},{"x":827,"y":397,"score":29,"level":0},{"x":946,"y":397,"score":63,"level":0},{"x":948,"y":397,"score":120,"level":0},{"x":954,"y":397,"score":159,"level":0},{"x":1142,"y":397,"score":41,"level":0},{"x":1177,"y":397,"score":35,"level":0},{"x":1246,"y":397,"score":31,"level":0},{"x":1248,"y":397,"score":52,"level":0},{"x":1262,"y":397,"score":62,"level":0},{"x":1293,"y":397,"score":27,"level":0},{"x":1339,"y":397,"score":73,"level":0},{"x":1432,"y":397,"score":58,"level":0},{"x":1443,"y":397,"score":67,"level":0},{"x":1488,"y":397,"score":88,"level":0},{"x":389,"y":398,"score":30,"level":0},{"x":489,"y":398,"score":164,"level":0},{"x":635,"y":398,"score":34,"level":0},{"x":656,"y":398,"score":48,"level":0},{"x":689,"y":398,"score":31,"level":0},{"x":704,"y":398,"score":48,"level":0},{"x":725,"y":398,"score":136,"level":0},{"x":748,"y":398,"score":35,"level":0},{"x":753,"y":398,"score":60,"level":0},{"x":882,"y":398,"score":31,"level":0},{"x":937,"y":398,"score":108,"level":0},{"x":1008,"y":398,"score":39,"level":0},{"x":1042,"y":398,"score":98,"level":0},{"x":1072,"y":398,"score":44,"level":0},{"x":1123,"y":398,"score":82,"level":0},{"x":1192,"y":398,"score":106,"level":0},{"x":1222,"y":398,"score":111,"level":0},{"x":1230,"y":398,"score":95,"level":0},{"x":1253,"y":398,"score":39,"level":0},{"x":1372,"y":398,"score":44,"level":0},{"x":407,"y":399,"score":55,"level":0},{"x":458,"y":399,"score":56,"level":0},{"x":463,"y":399,"score":118,"level":0},{"x":471,"y":399,"score":164,"level":0},{"x":495,"y":399,"score":31,"level":0},{"x":528,"y":399,"score":51,"level":0},{"x":567,"y":399,"score":40,"level":0},{"x":629,"y":399,"score":26,"level":0},{"x":662,"y":399,"score":77,"level":0},{"x":684,"y":399,"score":109,"level":0},{"x":847,"y":399,"score":78,"level":0},{"x":920,"y":399,"score":83,"level":0},{"x":962,"y":399,"score":32,"level":0},{"x":971,"y":399,"score":76,"level":0},{"x":1173,"y":399,"score":36,"level":0},{"x":1330,"y":399,"score":33,"level":0},{"x":1357,"y":399,"score":185,"level":0},{"x":1367,"y":399,"score":169,"level":0},{"x":1434,"y":399,"score":98,"level":0},{"x":413,"y":400,"score":122,"level":0},{"x":562,"y":400,"score":49,"level":0},{"x":612,"y":400,"score":38,"level":0},{"x":797,"y":400,"score":47,"level":0},{"x":877,"y":400,"score":48,"level":0},{"x":884,"y":400,"score":68,"level":0},{"x":976,"y":400,"score":96,"level":0},{"x":990,"y":400,"score":101,"level":0},{"x":1024,"y":400,"score":54,"level":0},{"x":1072,"y":400,"score":29,"level":0},{"x":1129,"y":400,"score":39,"level":0},{"x":1154,"y":400,"score":156,"level":0},{"x":1160,"y":400,"score":105,"level":0},{"x":1282,"y":400,"score":53,"level":0},{"x":1335,"y":400,"score":84,"level":0},{"x":1342,"y":400,"score":35,"level":0},{"x":1381,"y":400,"score":62,"level":0},{"x":1395,"y":400,"score":32,"level":0},{"x":1473,"y":400,"score":57,"level":0},{"x":386,"y":401,"score":61,"level":0},{"x":482,"y":401,"score":76,"level":0},{"x":503,"y":401,"score":32,"level":0},{"x":510,"y":401,"score":52,"level":0},{"x":518,"y":401,"score":37,"level":0},{"x":687,"y":401,"score":49,"level":0},{"x":792,"y":401,"score":31,"level":0},{"x":825,"y":401,"score":36,"level":0},{"x":963,"y":401,"score":32,"level":0},{"x":999,"y":401,"score":59,"level":0},{"x":1017,"y":401,"score":30,"level":0},{"x":1112,"y":401,"score":56,"level":0},{"x":1139,"y":401,"score":61,"level":0},{"x":1146,"y":401,"score":32,"level":0},{"x":1178,"y":401,"score":58,"level":0},{"x":1247,"y":401,"score":46,"level":0},{"x":1255,"y":401,"score":120,"level":0},{"x":1270,"y":401,"score":98,"level":0},{"x":1275,"y":401,"score":117,"level":0},{"x":1371,"y":401,"score":84,"level":0},{"x":1435,"y":401,"score":80,"level":0},{"x":1442,"y":401,"score":32,"level":0},{"x":1461,"y":401,"score":54,"level":0},{"x":377,"y":402,"score":39,"level":0},{"x":432,"y":402,"score":53,"level":0},{"x":441,"y":402,"score":35,"level":0},{"x":538,"y":402,"score":39,"level":0},{"x":703,"y":402,"score":29,"level":0},{"x":738,"y":402,"score":170,"level":0},{"x":765,"y":402,"score":65,"level":0},{"x":851,"y":402,"score":70,"level":0},{"x":913,"y":402,"score":44,"level":0},{"x":940,"y":402,"score":26,"level":0},{"x":949,"y":402,"score":119,"level":0},{"x":961,"y":402,"score":50,"level":0},{"x":1058,"y":402,"score":68,"level":0},{"x":1137,"y":402,"score":52,"level":0},{"x":1218,"y":402,"score":33,"level":0},{"x":1261,"y":402,"score":101,"level":0},{"x":1389,"y":402,"score":42,"level":0},{"x":1451,"y":402,"score":46,"level":0},{"x":398,"y":403,"score":41,"level":0},{"x":415,"y":403,"score":88,"level":0},{"x":461,"y":403,"score":52,"level":0},{"x":472,"y":403,"score":49,"level":0},{"x":477,"y":403,"score":43,"level":0},{"x":522,"y":403,"score":44,"level":0},{"x":552,"y":403,"score":105,"level":0},{"x":576,"y":403,"score":29,"level":0},{"x":640,"y":403,"score":65,"level":0},{"x":672,"y":403,"score":30,"level":0},{"x":686,"y":403,"score":75,"level":0},{"x":900,"y":403,"score":34,"level":0},{"x":926,"y":403,"score":48,"level":0},{"x":955,"y":403,"score":101,"level":0},{"x":1103,"y":403,"score":51,"level":0},{"x":1143,"y":403,"score":59,"level":0},{"x":1201,"y":403,"score":35,"level":0},{"x":1355,"y":403,"score":43,"level":0},{"x":1454,"y":403,"score":54,"level":0},{"x":1456,"y":403,"score":39,"level":0},{"x":1469,"y":403,"score":32,"level":0},{"x":1488,"y":403,"score":115,"level":0},{"x":533,"y":404,"score":78,"level":0},{"x":568,"y":404,"score":65,"level":0},{"x":617,"y":404,"score":120,"level":0},{"x":662,"y":404,"score":29,"level":0},{"x":666,"y":404,"score":64,"level":0},{"x":678,"y":404,"score":181,"level":0},{"x":741,"y":404,"score":66,"level":0},{"x":747,"y":404,"score":26,"level":0},{"x":829,"y":404,"score":123,"level":0},{"x":840,"y":404,"score":50,"level":0},{"x":845,"y":404,"score":62,"level":0},{"x":885,"y":404,"score":48,"level":0},{"x":895,"y":404,"score":40,"level":0},{"x":1072,"y":404,"score":61,"level":0},{"x":1077,"y":404,"score":37,"level":0},{"x":1089,"y":404,"score":38,"level":0},{"x":1092,"y":404,"score":32,"level":0},{"x":1114,"y":404,"score":39,"level":0},{"x":1135,"y":404,"score":36,"level":0},{"x":1187,"y":404,"score":81,"level":0},{"x":1242,"y":404,"score":124,"level":0},{"x":1325,"y":404,"score":51,"level":0},{"x":1331,"y":404,"score":50,"level":0},{"x":1360,"y":404,"score":83,"level":0},{"x":1477,"y":404,"score":94,"level":0},{"x":423,"y":405,"score":28,"level":0},{"x":456,"y":405,"score":33,"level":0},{"x":490,"y":405,"score":48,"level":0},{"x":630,"y":405,"score":92,"level":0},{"x":726,"y":405,"score":50,"level":0},{"x":926,"y":405,"score":79,"level":0},{"x":950,"y":405,"score":136,"level":0},{"x":970,"y":405,"score":43,"level":0},{"x":1020,"y":405,"score":68,"level":0},{"x":1047,"y":405,"score":89,"level":0},{"x":1067,"y":405,"score":27,"level":0},{"x":1178,"y":405,"score":110,"level":0},{"x":1196,"y":405,"score":36,"level":0},{"x":1426,"y":405,"score":89,"level":0},{"x":1465,"y":405,"score":28,"level":0},{"x":412,"y":406,"score":55,"level":0},{"x":435,"y":406,"score":99,"level":0},{"x":472,"y":406,"score":70,"level":0},{"x":530,"y":406,"score":77,"level":0},{"x":684,"y":406,"score":62,"level":0},{"x":697,"y":406,"score":30,"level":0},{"x":800,"y":406,"score":50,"level":0},{"x":820,"y":406,"score":26,"level":0},{"x":865,"y":406,"score":138,"level":0},{"x":895,"y":406,"score":66,"level":0},{"x":998,"y":406,"score":73,"level":0},{"x":1130,"y":406,"score":42,"level":0},{"x":1192,"y":406,"score":106,"level":0},{"x":1234,"y":406,"score":87,"level":0},{"x":1380,"y":406,"score":41,"level":0},{"x":394,"y":407,"score":38,"level":0},{"x":430,"y":407,"score":216,"level":0},{"x":463,"y":407,"score":68,"level":0},{"x":483,"y":407,"score":58,"level":0},{"x":622,"y":407,"score":32,"level":0},{"x":631,"y":407,"score":31,"level":0},{"x":689,"y":407,"score":139,"level":0},{"x":722,"y":407,"score":68,"level":0},{"x":738,"y":407,"score":39,"level":0},{"x":786,"y":407,"score":73,"level":0},{"x":815,"y":407,"score":39,"level":0},{"x":965,"y":407,"score":82,"level":0},{"x":971,"y":407,"score":83,"level":0},{"x":976,"y":407,"score":42,"level":0},{"x":1008,"y":407,"score":26,"level":0},{"x":1155,"y":407,"score":69,"level":0},{"x":1220,"y":407,"score":150,"level":0},{"x":1265,"y":407,"score":150,"level":0},{"x":1318,"y":407,"score":59,"level":0},{"x":1336,"y":407,"score":43,"level":0},{"x":1367,"y":407,"score":106,"level":0},{"x":1373,"y":407,"score":239,"level":0},{"x":1470,"y":407,"score":92,"level":0},{"x":494,"y":408,"score":53,"level":0},{"x":542,"y":408,"score":85,"level":0},{"x":562,"y":408,"score":76,"level":0},{"x":644,"y":408,"score":29,"level":0},{"x":687,"y":408,"score":131,"level":0},{"x":730,"y":408,"score":31,"level":0},{"x":937,"y":408,"score":91,"level":0},{"x":1141,"y":408,"score":45,"level":0},{"x":1167,"y":408,"score":42,"level":0},{"x":1275,"y":408,"score":103,"level":0},{"x":1289,"y":408,"score":33,"level":0},{"x":1392,"y":408,"score":71,"level":0},{"x":1428,"y":408,"score":76,"level":0},{"x":1484,"y":408,"score":33,"level":0},{"x":390,"y":409,"score":37,"level":0},{"x":456,"y":409,"score":83,"level":0},{"x":468,"y":409,"score":144,"level":0},{"x":502,"y":409,"score":59,"level":0},{"x":533,"y":409,"score":45,"level":0},{"x":574,"y":409,"score":136,"level":0},{"x":707,"y":409,"score":43,"level":0},{"x":717,"y":409,"score":148,"level":0},{"x":742,"y":409,"score":112,"level":0},{"x":876,"y":409,"score":62,"level":0},{"x":885,"y":409,"score":103,"level":0},{"x":947,"y":409,"score":36,"level":0},{"x":957,"y":409,"score":29,"level":0},{"x":1009,"y":409,"score":34,"level":0},{"x":1123,"y":409,"score":57,"level":0},{"x":1128,"y":409,"score":70,"level":0},{"x":1188,"y":409,"score":53,"level":0},{"x":1204,"y":409,"score":52,"level":0},{"x":1249,"y":409,"score":146,"level":0},{"x":1256,"y":409,"score":29,"level":0},{"x":1323,"y":409,"score":26,"level":0},{"x":1345,"y":409,"score":66,"level":0},{"x":1384,"y":409,"score":94,"level":0},{"x":1453,"y":409,"score":26,"level":0},{"x":1479,"y":409,"score":109,"level":0},{"x":473,"y":410,"score":58,"level":0},{"x":629,"y":410,"score":39,"level":0},{"x":652,"y":410,"score":26,"level":0},{"x":693,"y":410,"score":76,"level":0},{"x":810,"y":410,"score":28,"level":0},{"x":880,"y":410,"score":44,"level":0},{"x":927,"y":410,"score":45,"level":0},{"x":952,"y":410,"score":42,"level":0},{"x":976,"y":410,"score":134,"level":0},{"x":1014,"y":410,"score":65,"level":0},{"x":1062,"y":410,"score":51,"level":0},{"x":1075,"y":410,"score":30,"level":0},{"x":1080,"y":410,"score":39,"level":0},{"x":1146,"y":410,"score":44,"level":0},{"x":1172,"y":410,"score":67,"level":0},{"x":1238,"y":410,"score":28,"level":0},{"x":1316,"y":410,"score":81,"level":0},{"x":1321,"y":410,"score":29,"level":0},{"x":1340,"y":410,"score":72,"level":0},{"x":1446,"y":410,"score":41,"level":0},{"x":424,"y":411,"score":34,"level":0},{"x":525,"y":411,"score":52,"level":0},{"x":530,"y":411,"score":58,"level":0},{"x":635,"y":411,"score":34,"level":0},{"x":676,"y":411,"score":154,"level":0},{"x":681,"y":411,"score":68,"level":0},{"x":713,"y":411,"score":36,"level":0},{"x":956,"y":411,"score":27,"level":0},{"x":967,"y":411,"score":114,"level":0},{"x":982,"y":411,"score":64,"level":0},{"x":988,"y":411,"score":137,"level":0},{"x":1000,"y":411,"score":130,"level":0},{"x":1017,"y":411,"score":65,"level":0},{"x":1161,"y":411,"score":103,"level":0},{"x":1166,"y":411,"score":51,"level":0},{"x":1435,"y":411,"score":92,"level":0},{"x":384,"y":412,"score":58,"level":0},{"x":479,"y":412,"score":86,"level":0},{"x":491,"y":412,"score":62,"level":0},{"x":619,"y":412,"score":70,"level":0},{"x":725,"y":412,"score":44,"level":0},{"x":818,"y":412,"score":35,"level":0},{"x":917,"y":412,"score":39,"level":0},{"x":1009,"y":412,"score":74,"level":0},{"x":1053,"y":412,"score":60,"level":0},{"x":1106,"y":412,"score":47,"level":0},{"x":1229,"y":412,"score":100,"level":0},{"x":1235,"y":412,"score":34,"level":0},{"x":1253,"y":412,"score":70,"level":0},{"x":1256,"y":412,"score":38,"level":0},{"x":1260,"y":412,"score":56,"level":0},{"x":405,"y":413,"score":82,"level":0},{"x":409,"y":413,"score":92,"level":0},{"x":746,"y":413,"score":51,"level":0},{"x":786,"y":413,"score":160,"level":0},{"x":808,"y":413,"score":51,"level":0},{"x":936,"y":413,"score":38,"level":0},{"x":974,"y":413,"score":48,"level":0},{"x":999,"y":413,"score":99,"level":0},{"x":1152,"y":413,"score":73,"level":0},{"x":1193,"y":413,"score":43,"level":0},{"x":1213,"y":413,"score":35,"level":0},{"x":1221,"y":413,"score":42,"level":0},{"x":1246,"y":413,"score":31,"level":0},{"x":1339,"y":413,"score":26,"level":0},{"x":1386,"y":413,"score":36,"level":0},{"x":1392,"y":413,"score":112,"level":0},{"x":1455,"y":413,"score":27,"level":0},{"x":384,"y":414,"score":42,"level":0},{"x":389,"y":414,"score":130,"level":0},{"x":421,"y":414,"score":110,"level":0},{"x":468,"y":414,"score":78,"level":0},{"x":533,"y":414,"score":53,"level":0},{"x":542,"y":414,"score":86,"level":0},{"x":572,"y":414,"score":47,"level":0},{"x":670,"y":414,"score":87,"level":0},{"x":702,"y":414,"score":46,"level":0},{"x":707,"y":414,"score":27,"level":0},{"x":711,"y":414,"score":72,"level":0},{"x":717,"y":414,"score":68,"level":0},{"x":876,"y":414,"score":80,"level":0},{"x":903,"y":414,"score":119,"level":0},{"x":916,"y":414,"score":39,"level":0},{"x":953,"y":414,"score":88,"level":0},{"x":1017,"y":414,"score":85,"level":0},{"x":1066,"y":414,"score":51,"level":0},{"x":1079,"y":414,"score":37,"level":0},{"x":1123,"y":414,"score":48,"level":0},{"x":1130,"y":414,"score":149,"level":0},{"x":1157,"y":414,"score":82,"level":0},{"x":1166,"y":414,"score":53,"level":0},{"x":1234,"y":414,"score":68,"level":0},{"x":1241,"y":414,"score":99,"level":0},{"x":1275,"y":414,"score":72,"level":0},{"x":1305,"y":414,"score":36,"level":0},{"x":1382,"y":414,"score":54,"level":0},{"x":401,"y":415,"score":46,"level":0},{"x":484,"y":415,"score":30,"level":0},{"x":491,"y":415,"score":44,"level":0},{"x":516,"y":415,"score":34,"level":0},{"x":575,"y":415,"score":60,"level":0},{"x":618,"y":415,"score":40,"level":0},{"x":684,"y":415,"score":229,"level":0},{"x":741,"y":415,"score":36,"level":0},{"x":958,"y":415,"score":112,"level":0},{"x":973,"y":415,"score":64,"level":0},{"x":1023,"y":415,"score":91,"level":0},{"x":1056,"y":415,"score":65,"level":0},{"x":1374,"y":415,"score":78,"level":0},{"x":1462,"y":415,"score":82,"level":0},{"x":1468,"y":415,"score":64,"level":0},{"x":1485,"y":415,"score":31,"level":0},{"x":410,"y":416,"score":49,"level":0},{"x":414,"y":416,"score":43,"level":0},{"x":462,"y":416,"score":69,"level":0},{"x":479,"y":416,"score":33,"level":0},{"x":613,"y":416,"score":30,"level":0},{"x":639,"y":416,"score":49,"level":0},{"x":805,"y":416,"score":44,"level":0},{"x":810,"y":416,"score":68,"level":0},{"x":860,"y":416,"score":40,"level":0},{"x":1010,"y":416,"score":37,"level":0},{"x":1016,"y":416,"score":66,"level":0},{"x":1060,"y":416,"score":26,"level":0},{"x":1103,"y":416,"score":38,"level":0},{"x":1131,"y":416,"score":167,"level":0},{"x":1190,"y":416,"score":26,"level":0},{"x":1197,"y":416,"score":32,"level":0},{"x":1246,"y":416,"score":42,"level":0},{"x":1314,"y":416,"score":102,"level":0},{"x":1320,"y":416,"score":56,"level":0},{"x":1328,"y":416,"score":70,"level":0},{"x":570,"y":417,"score":67,"level":0},{"x":633,"y":417,"score":29,"level":0},{"x":666,"y":417,"score":100,"level":0},{"x":679,"y":417,"score":120,"level":0},{"x":825,"y":417,"score":130,"level":0},{"x":833,"y":417,"score":86,"level":0},{"x":901,"y":417,"score":43,"level":0},{"x":908,"y":417,"score":106,"level":0},{"x":922,"y":417,"score":64,"level":0},{"x":942,"y":417,"score":144,"level":0},{"x":948,"y":417,"score":55,"level":0},{"x":1092,"y":417,"score":46,"level":0},{"x":1097,"y":417,"score":31,"level":0},{"x":1145,"y":417,"score":30,"level":0},{"x":1156,"y":417,"score":40,"level":0},{"x":1181,"y":417,"score":103,"level":0},{"x":1186,"y":417,"score":124,"level":0},{"x":1206,"y":417,"score":55,"level":0},{"x":1251,"y":417,"score":90,"level":0},{"x":1379,"y":417,"score":32,"level":0},{"x":1462,"y":417,"score":70,"level":0},{"x":410,"y":418,"score":31,"level":0},{"x":424,"y":418,"score":40,"level":0},{"x":431,"y":418,"score":98,"level":0},{"x":548,"y":418,"score":98,"level":0},{"x":671,"y":418,"score":37,"level":0},{"x":746,"y":418,"score":69,"level":0},{"x":828,"y":418,"score":74,"level":0},{"x":840,"y":418,"score":79,"level":0},{"x":979,"y":418,"score":47,"level":0},{"x":1045,"y":418,"score":103,"level":0},{"x":1062,"y":418,"score":70,"level":0},{"x":1077,"y":418,"score":38,"level":0},{"x":1167,"y":418,"score":36,"level":0},{"x":1188,"y":418,"score":76,"level":0},{"x":1216,"y":418,"score":110,"level":0},{"x":1222,"y":418,"score":87,"level":0},{"x":1227,"y":418,"score":43,"level":0},{"x":1259,"y":418,"score":224,"level":0},{"x":1269,"y":418,"score":83,"level":0},{"x":1301,"y":418,"score":51,"level":0},{"x":1386,"y":418,"score":219,"level":0},{"x":1447,"y":418,"score":48,"level":0},{"x":377,"y":419,"score":85,"level":0},{"x":392,"y":419,"score":28,"level":0},{"x":406,"y":419,"score":142,"level":0},{"x":458,"y":419,"score":40,"level":0},{"x":474,"y":419,"score":102,"level":0},{"x":505,"y":419,"score":28,"level":0},{"x":511,"y":419,"score":26,"level":0},{"x":575,"y":419,"score":37,"level":0},{"x":615,"y":419,"score":55,"level":0},{"x":622,"y":419,"score":37,"level":0},{"x":628,"y":419,"score":63,"level":0},{"x":865,"y":419,"score":43,"level":0},{"x":877,"y":419,"score":44,"level":0},{"x":881,"y":419,"score":27,"level":0},{"x":961,"y":419,"score":87,"level":0},{"x":1040,"y":419,"score":151,"level":0},{"x":1127,"y":419,"score":34,"level":0},{"x":1142,"y":419,"score":31,"level":0},{"x":1203,"y":419,"score":27,"level":0},{"x":1281,"y":419,"score":30,"level":0},{"x":1394,"y":419,"score":36,"level":0},{"x":1434,"y":419,"score":65,"level":0},{"x":1441,"y":419,"score":28,"level":0},{"x":1457,"y":419,"score":104,"level":0},{"x":1462,"y":419,"score":52,"level":0},{"x":1484,"y":419,"score":32,"level":0},{"x":1490,"y":419,"score":76,"level":0},{"x":485,"y":420,"score":59,"level":0},{"x":532,"y":420,"score":41,"level":0},{"x":567,"y":420,"score":28,"level":0},{"x":642,"y":420,"score":70,"level":0},{"x":690,"y":420,"score":89,"level":0},{"x":718,"y":420,"score":87,"level":0},{"x":724,"y":420,"score":49,"level":0},{"x":932,"y":420,"score":37,"level":0},{"x":946,"y":420,"score":99,"level":0},{"x":970,"y":420,"score":55,"level":0},{"x":1011,"y":420,"score":41,"level":0},{"x":1070,"y":420,"score":71,"level":0},{"x":1098,"y":420,"score":38,"level":0},{"x":1183,"y":420,"score":40,"level":0},{"x":1243,"y":420,"score":56,"level":0},{"x":1275,"y":420,"score":106,"level":0},{"x":1285,"y":420,"score":98,"level":0},{"x":1362,"y":420,"score":46,"level":0},{"x":1446,"y":420,"score":37,"level":0},{"x":1470,"y":420,"score":34,"level":0},{"x":1478,"y":420,"score":50,"level":0},{"x":432,"y":421,"score":73,"level":0},{"x":675,"y":421,"score":26,"level":0},{"x":685,"y":421,"score":76,"level":0},{"x":736,"y":421,"score":94,"level":0},{"x":748,"y":421,"score":44,"level":0},{"x":798,"y":421,"score":36,"level":0},{"x":801,"y":421,"score":30,"level":0},{"x":885,"y":421,"score":67,"level":0},{"x":936,"y":421,"score":82,"level":0},{"x":985,"y":421,"score":89,"level":0},{"x":1001,"y":421,"score":50,"level":0},{"x":1016,"y":421,"score":87,"level":0},{"x":1057,"y":421,"score":85,"level":0},{"x":1123,"y":421,"score":30,"level":0},{"x":1138,"y":421,"score":63,"level":0},{"x":1155,"y":421,"score":43,"level":0},{"x":1197,"y":421,"score":165,"level":0},{"x":1231,"y":421,"score":41,"level":0},{"x":1303,"y":421,"score":36,"level":0},{"x":1339,"y":421,"score":107,"level":0},{"x":1381,"y":421,"score":126,"level":0},{"x":670,"y":422,"score":34,"level":0},{"x":775,"y":422,"score":30,"level":0},{"x":796,"y":422,"score":37,"level":0},{"x":840,"y":422,"score":62,"level":0},{"x":845,"y":422,"score":30,"level":0},{"x":864,"y":422,"score":132,"level":0},{"x":927,"y":422,"score":50,"level":0},{"x":987,"y":422,"score":88,"level":0},{"x":1153,"y":422,"score":46,"level":0},{"x":1178,"y":422,"score":161,"level":0},{"x":1243,"y":422,"score":43,"level":0},{"x":1254,"y":422,"score":95,"level":0},{"x":1263,"y":422,"score":152,"level":0},{"x":1316,"y":422,"score":58,"level":0},{"x":1334,"y":422,"score":41,"level":0},{"x":1377,"y":422,"score":52,"level":0},{"x":1470,"y":422,"score":44,"level":0},{"x":466,"y":423,"score":92,"level":0},{"x":486,"y":423,"score":44,"level":0},{"x":492,"y":423,"score":42,"level":0},{"x":543,"y":423,"score":83,"level":0},{"x":562,"y":423,"score":128,"level":0},{"x":582,"y":423,"score":26,"level":0},{"x":680,"y":423,"score":132,"level":0},{"x":702,"y":423,"score":225,"level":0},{"x":731,"y":423,"score":73,"level":0},{"x":740,"y":423,"score":43,"level":0},{"x":754,"y":423,"score":38,"level":0},{"x":783,"y":423,"score":28,"level":0},{"x":804,"y":423,"score":43,"level":0},{"x":810,"y":423,"score":70,"level":0},{"x":921,"y":423,"score":153,"level":0},{"x":958,"y":423,"score":127,"level":0},{"x":964,"y":423,"score":60,"level":0},{"x":985,"y":423,"score":92,"level":0},{"x":1058,"y":423,"score":86,"level":0},{"x":1087,"y":423,"score":43,"level":0},{"x":1296,"y":423,"score":134,"level":0},{"x":1425,"y":423,"score":56,"level":0},{"x":425,"y":424,"score":107,"level":0},{"x":572,"y":424,"score":60,"level":0},{"x":665,"y":424,"score":126,"level":0},{"x":711,"y":424,"score":266,"level":0},{"x":722,"y":424,"score":63,"level":0},{"x":748,"y":424,"score":103,"level":0},{"x":802,"y":424,"score":49,"level":0},{"x":877,"y":424,"score":31,"level":0},{"x":883,"y":424,"score":79,"level":0},{"x":909,"y":424,"score":72,"level":0},{"x":948,"y":424,"score":60,"level":0},{"x":1039,"y":424,"score":57,"level":0},{"x":1047,"y":424,"score":57,"level":0},{"x":1065,"y":424,"score":34,"level":0},{"x":1203,"y":424,"score":111,"level":0},{"x":1215,"y":424,"score":106,"level":0},{"x":1224,"y":424,"score":44,"level":0},{"x":1269,"y":424,"score":80,"level":0},{"x":1311,"y":424,"score":62,"level":0},{"x":1393,"y":424,"score":79,"level":0},{"x":1423,"y":424,"score":46,"level":0},{"x":1428,"y":424,"score":48,"level":0},{"x":1444,"y":424,"score":41,"level":0},{"x":1465,"y":424,"score":35,"level":0},{"x":411,"y":425,"score":43,"level":0},{"x":530,"y":425,"score":27,"level":0},{"x":535,"y":425,"score":42,"level":0},{"x":628,"y":425,"score":43,"level":0},{"x":678,"y":425,"score":164,"level":0},{"x":690,"y":425,"score":81,"level":0},{"x":761,"y":425,"score":29,"level":0},{"x":821,"y":425,"score":38,"level":0},{"x":897,"y":425,"score":96,"level":0},{"x":954,"y":425,"score":90,"level":0},{"x":976,"y":425,"score":128,"level":0},{"x":1006,"y":425,"score":54,"level":0},{"x":1012,"y":425,"score":83,"level":0},{"x":1024,"y":425,"score":79,"level":0},{"x":1052,"y":425,"score":52,"level":0},{"x":1111,"y":425,"score":44,"level":0},{"x":1157,"y":425,"score":215,"level":0},{"x":1191,"y":425,"score":212,"level":0},{"x":1239,"y":425,"score":40,"level":0},{"x":1336,"y":425,"score":40,"level":0},{"x":1341,"y":425,"score":58,"level":0},{"x":1353,"y":425,"score":49,"level":0},{"x":1361,"y":425,"score":70,"level":0},{"x":1368,"y":425,"score":33,"level":0},{"x":1420,"y":425,"score":33,"level":0},{"x":1439,"y":425,"score":98,"level":0},{"x":377,"y":426,"score":29,"level":0},{"x":434,"y":426,"score":50,"level":0},{"x":457,"y":426,"score":53,"level":0},{"x":685,"y":426,"score":114,"level":0},{"x":727,"y":426,"score":125,"level":0},{"x":733,"y":426,"score":45,"level":0},{"x":826,"y":426,"score":233,"level":0},{"x":834,"y":426,"score":86,"level":0},{"x":915,"y":426,"score":45,"level":0},{"x":941,"y":426,"score":163,"level":0},{"x":981,"y":426,"score":40,"level":0},{"x":1001,"y":426,"score":43,"level":0},{"x":1048,"y":426,"score":53,"level":0},{"x":1081,"y":426,"score":102,"level":0},{"x":1145,"y":426,"score":64,"level":0},{"x":1166,"y":426,"score":93,"level":0},{"x":1172,"y":426,"score":30,"level":0},{"x":1181,"y":426,"score":106,"level":0},{"x":1185,"y":426,"score":155,"level":0},{"x":1258,"y":426,"score":125,"level":0},{"x":1300,"y":426,"score":99,"level":0},{"x":1351,"y":426,"score":57,"level":0},{"x":653,"y":427,"score":35,"level":0},{"x":788,"y":427,"score":103,"level":0},{"x":877,"y":427,"score":41,"level":0},{"x":882,"y":427,"score":77,"level":0},{"x":892,"y":427,"score":60,"level":0},{"x":925,"y":427,"score":26,"level":0},{"x":935,"y":427,"score":60,"level":0},{"x":962,"y":427,"score":98,"level":0},{"x":1005,"y":427,"score":30,"level":0},{"x":1016,"y":427,"score":98,"level":0},{"x":1061,"y":427,"score":36,"level":0},{"x":1092,"y":427,"score":88,"level":0},{"x":1139,"y":427,"score":79,"level":0},{"x":1248,"y":427,"score":28,"level":0},{"x":493,"y":428,"score":47,"level":0},{"x":551,"y":428,"score":129,"level":0},{"x":572,"y":428,"score":33,"level":0},{"x":613,"y":428,"score":35,"level":0},{"x":619,"y":428,"score":122,"level":0},{"x":638,"y":428,"score":115,"level":0},{"x":644,"y":428,"score":97,"level":0},{"x":708,"y":428,"score":77,"level":0},{"x":751,"y":428,"score":46,"level":0},{"x":972,"y":428,"score":116,"level":0},{"x":1055,"y":428,"score":51,"level":0},{"x":1100,"y":428,"score":88,"level":0},{"x":1119,"y":428,"score":89,"level":0},{"x":1128,"y":428,"score":68,"level":0},{"x":1162,"y":428,"score":33,"level":0},{"x":1177,"y":428,"score":66,"level":0},{"x":1212,"y":428,"score":91,"level":0},{"x":1265,"y":428,"score":181,"level":0},{"x":1270,"y":428,"score":36,"level":0},{"x":1296,"y":428,"score":62,"level":0},{"x":386,"y":429,"score":138,"level":0},{"x":393,"y":429,"score":26,"level":0},{"x":398,"y":429,"score":108,"level":0},{"x":428,"y":429,"score":97,"level":0},{"x":507,"y":429,"score":37,"level":0},{"x":587,"y":429,"score":27,"level":0},{"x":695,"y":429,"score":28,"level":0},{"x":703,"y":429,"score":173,"level":0},{"x":711,"y":429,"score":71,"level":0},{"x":892,"y":429,"score":61,"level":0},{"x":897,"y":429,"score":70,"level":0},{"x":1038,"y":429,"score":70,"level":0},{"x":1049,"y":429,"score":33,"level":0},{"x":1164,"y":429,"score":30,"level":0},{"x":1221,"y":429,"score":45,"level":0},{"x":1304,"y":429,"score":50,"level":0},{"x":1322,"y":429,"score":128,"level":0},{"x":1347,"y":429,"score":30,"level":0},{"x":1368,"y":429,"score":45,"level":0},{"x":1391,"y":429,"score":26,"level":0},{"x":1423,"y":429,"score":27,"level":0},{"x":1489,"y":429,"score":33,"level":0},{"x":406,"y":430,"score":33,"level":0},{"x":516,"y":430,"score":35,"level":0},{"x":602,"y":430,"score":39,"level":0},{"x":671,"y":430,"score":68,"level":0},{"x":681,"y":430,"score":51,"level":0},{"x":876,"y":430,"score":84,"level":0},{"x":885,"y":430,"score":85,"level":0},{"x":933,"y":430,"score":41,"level":0},{"x":1007,"y":430,"score":76,"level":0},{"x":1072,"y":430,"score":113,"level":0},{"x":1084,"y":430,"score":77,"level":0},{"x":1197,"y":430,"score":80,"level":0},{"x":1217,"y":430,"score":40,"level":0},{"x":1227,"y":430,"score":37,"level":0},{"x":1361,"y":430,"score":34,"level":0},{"x":1428,"y":430,"score":39,"level":0},{"x":438,"y":431,"score":26,"level":0},{"x":474,"y":431,"score":93,"level":0},{"x":538,"y":431,"score":64,"level":0},{"x":691,"y":431,"score":26,"level":0},{"x":907,"y":431,"score":28,"level":0},{"x":916,"y":431,"score":38,"level":0},{"x":953,"y":431,"score":123,"level":0},{"x":985,"y":431,"score":96,"level":0},{"x":1176,"y":431,"score":62,"level":0},{"x":1188,"y":431,"score":145,"level":0},{"x":1231,"y":431,"score":35,"level":0},{"x":1237,"y":431,"score":30,"level":0},{"x":1269,"y":431,"score":32,"level":0},{"x":1334,"y":431,"score":44,"level":0},{"x":1351,"y":431,"score":37,"level":0},{"x":1357,"y":431,"score":28,"level":0},{"x":1443,"y":431,"score":31,"level":0},{"x":463,"y":432,"score":41,"level":0},{"x":566,"y":432,"score":58,"level":0},{"x":641,"y":432,"score":77,"level":0},{"x":681,"y":432,"score":89,"level":0},{"x":734,"y":432,"score":59,"level":0},{"x":786,"y":432,"score":30,"level":0},{"x":826,"y":432,"score":87,"level":0},{"x":832,"y":432,"score":93,"level":0},{"x":864,"y":432,"score":132,"level":0},{"x":961,"y":432,"score":29,"level":0},{"x":1000,"y":432,"score":88,"level":0},{"x":1005,"y":432,"score":31,"level":0},{"x":1129,"y":432,"score":38,"level":0},{"x":1162,"y":432,"score":151,"level":0},{"x":1251,"y":432,"score":109,"level":0},{"x":1256,"y":432,"score":36,"level":0},{"x":1316,"y":432,"score":74,"level":0},{"x":1448,"y":432,"score":34,"level":0},{"x":415,"y":433,"score":72,"level":0},{"x":501,"y":433,"score":61,"level":0},{"x":572,"y":433,"score":151,"level":0},{"x":774,"y":433,"score":41,"level":0},{"x":920,"y":433,"score":95,"level":0},{"x":994,"y":433,"score":65,"level":0},{"x":1043,"y":433,"score":81,"level":0},{"x":1103,"y":433,"score":80,"level":0},{"x":1109,"y":433,"score":33,"level":0},{"x":1165,"y":433,"score":38,"level":0},{"x":1193,"y":433,"score":28,"level":0},{"x":1343,"y":433,"score":30,"level":0},{"x":1415,"y":433,"score":41,"level":0},{"x":653,"y":434,"score":147,"level":0},{"x":705,"y":434,"score":29,"level":0},{"x":724,"y":434,"score":39,"level":0},{"x":787,"y":434,"score":44,"level":0},{"x":858,"y":434,"score":27,"level":0},{"x":936,"y":434,"score":37,"level":0},{"x":978,"y":434,"score":38,"level":0},{"x":1049,"y":434,"score":64,"level":0},{"x":1065,"y":434,"score":102,"level":0},{"x":1087,"y":434,"score":37,"level":0},{"x":1247,"y":434,"score":45,"level":0},{"x":1269,"y":434,"score":54,"level":0},{"x":1303,"y":434,"score":55,"level":0},{"x":1347,"y":434,"score":54,"level":0},{"x":1374,"y":434,"score":50,"level":0},{"x":1423,"y":434,"score":100,"level":0},{"x":1432,"y":434,"score":81,"level":0},{"x":1447,"y":434,"score":30,"level":0},{"x":1467,"y":434,"score":49,"level":0},{"x":392,"y":435,"score":33,"level":0},{"x":488,"y":435,"score":108,"level":0},{"x":546,"y":435,"score":62,"level":0},{"x":793,"y":435,"score":64,"level":0},{"x":795,"y":435,"score":69,"level":0},{"x":889,"y":435,"score":68,"level":0},{"x":1017,"y":435,"score":188,"level":0},{"x":1058,"y":435,"score":55,"level":0},{"x":1076,"y":435,"score":27,"level":0},{"x":1190,"y":435,"score":124,"level":0},{"x":1224,"y":435,"score":34,"level":0},{"x":1367,"y":435,"score":249,"level":0},{"x":1455,"y":435,"score":46,"level":0},{"x":386,"y":436,"score":257,"level":0},{"x":431,"y":436,"score":74,"level":0},{"x":437,"y":436,"score":65,"level":0},{"x":478,"y":436,"score":38,"level":0},{"x":519,"y":436,"score":110,"level":0},{"x":558,"y":436,"score":123,"level":0},{"x":624,"y":436,"score":28,"level":0},{"x":634,"y":436,"score":56,"level":0},{"x":697,"y":436,"score":109,"level":0},{"x":749,"y":436,"score":112,"level":0},{"x":754,"y":436,"score":60,"level":0},{"x":841,"y":436,"score":61,"level":0},{"x":877,"y":436,"score":45,"level":0},{"x":884,"y":436,"score":65,"level":0},{"x":906,"y":436,"score":126,"level":0},{"x":958,"y":436,"score":163,"level":0},{"x":989,"y":436,"score":60,"level":0},{"x":1007,"y":436,"score":137,"level":0},{"x":1096,"y":436,"score":60,"level":0},{"x":1320,"y":436,"score":130,"level":0},{"x":1362,"y":436,"score":30,"level":0},{"x":1377,"y":436,"score":30,"level":0},{"x":1460,"y":436,"score":31,"level":0},{"x":1480,"y":436,"score":49,"level":0},{"x":718,"y":437,"score":52,"level":0},{"x":891,"y":437,"score":44,"level":0},{"x":935,"y":437,"score":56,"level":0},{"x":951,"y":437,"score":33,"level":0},{"x":963,"y":437,"score":92,"level":0},{"x":1039,"y":437,"score":70,"level":0},{"x":1060,"y":437,"score":119,"level":0},{"x":1072,"y":437,"score":82,"level":0},{"x":1174,"y":437,"score":38,"level":0},{"x":1179,"y":437,"score":72,"level":0},{"x":1312,"y":437,"score":56,"level":0},{"x":1466,"y":437,"score":34,"level":0},{"x":399,"y":438,"score":46,"level":0},{"x":411,"y":438,"score":56,"level":0},{"x":436,"y":438,"score":30,"level":0},{"x":464,"y":438,"score":81,"level":0},{"x":513,"y":438,"score":27,"level":0},{"x":528,"y":438,"score":33,"level":0},{"x":635,"y":438,"score":55,"level":0},{"x":641,"y":438,"score":43,"level":0},{"x":740,"y":438,"score":43,"level":0},{"x":921,"y":438,"score":66,"level":0},{"x":939,"y":438,"score":132,"level":0},{"x":997,"y":438,"score":70,"level":0},{"x":1012,"y":438,"score":39,"level":0},{"x":1043,"y":438,"score":34,"level":0},{"x":1068,"y":438,"score":32,"level":0},{"x":1142,"y":438,"score":86,"level":0},{"x":1164,"y":438,"score":40,"level":0},{"x":1184,"y":438,"score":147,"level":0},{"x":1195,"y":438,"score":42,"level":0},{"x":1211,"y":438,"score":36,"level":0},{"x":1317,"y":438,"score":41,"level":0},{"x":1326,"y":438,"score":31,"level":0},{"x":1442,"y":438,"score":30,"level":0},{"x":377,"y":439,"score":38,"level":0},{"x":394,"y":439,"score":70,"level":0},{"x":416,"y":439,"score":45,"level":0},{"x":459,"y":439,"score":145,"level":0},{"x":483,"y":439,"score":93,"level":0},{"x":502,"y":439,"score":74,"level":0},{"x":516,"y":439,"score":78,"level":0},{"x":565,"y":439,"score":56,"level":0},{"x":629,"y":439,"score":27,"level":0},{"x":674,"y":439,"score":89,"level":0},{"x":679,"y":439,"score":113,"level":0},{"x":705,"y":439,"score":46,"level":0},{"x":728,"y":439,"score":36,"level":0},{"x":735,"y":439,"score":105,"level":0},{"x":807,"y":439,"score":56,"level":0},{"x":876,"y":439,"score":77,"level":0},{"x":988,"y":439,"score":47,"level":0},{"x":1048,"y":439,"score":88,"level":0},{"x":1078,"y":439,"score":37,"level":0},{"x":1093,"y":439,"score":62,"level":0},{"x":1122,"y":439,"score":44,"level":0},{"x":1218,"y":439,"score":162,"level":0},{"x":1228,"y":439,"score":69,"level":0},{"x":1257,"y":439,"score":59,"level":0},{"x":1269,"y":439,"score":44,"level":0},{"x":1331,"y":439,"score":57,"level":0},{"x":1439,"y":439,"score":50,"level":0},{"x":489,"y":440,"score":35,"level":0},{"x":494,"y":440,"score":47,"level":0},{"x":600,"y":440,"score":29,"level":0},{"x":707,"y":440,"score":45,"level":0},{"x":717,"y":440,"score":76,"level":0},{"x":852,"y":440,"score":72,"level":0},{"x":895,"y":440,"score":30,"level":0},{"x":1088,"y":440,"score":91,"level":0},{"x":1226,"y":440,"score":32,"level":0},{"x":1322,"y":440,"score":43,"level":0},{"x":1449,"y":440,"score":63,"level":0},{"x":497,"y":441,"score":54,"level":0},{"x":509,"y":441,"score":34,"level":0},{"x":557,"y":441,"score":180,"level":0},{"x":565,"y":441,"score":51,"level":0},{"x":829,"y":441,"score":56,"level":0},{"x":912,"y":441,"score":77,"level":0},{"x":918,"y":441,"score":53,"level":0},{"x":946,"y":441,"score":117,"level":0},{"x":966,"y":441,"score":69,"level":0},{"x":1005,"y":441,"score":70,"level":0},{"x":1048,"y":441,"score":67,"level":0},{"x":1058,"y":441,"score":60,"level":0},{"x":1077,"y":441,"score":45,"level":0},{"x":1134,"y":441,"score":32,"level":0},{"x":1144,"y":441,"score":63,"level":0},{"x":1269,"y":441,"score":26,"level":0},{"x":1432,"y":441,"score":60,"level":0},{"x":383,"y":442,"score":60,"level":0},{"x":471,"y":442,"score":75,"level":0},{"x":621,"y":442,"score":49,"level":0},{"x":623,"y":442,"score":74,"level":0},{"x":649,"y":442,"score":39,"level":0},{"x":737,"y":442,"score":141,"level":0},{"x":834,"y":442,"score":90,"level":0},{"x":891,"y":442,"score":53,"level":0},{"x":924,"y":442,"score":180,"level":0},{"x":943,"y":442,"score":42,"level":0},{"x":957,"y":442,"score":70,"level":0},{"x":972,"y":442,"score":83,"level":0},{"x":979,"y":442,"score":112,"level":0},{"x":988,"y":442,"score":37,"level":0},{"x":1053,"y":442,"score":44,"level":0},{"x":1073,"y":442,"score":32,"level":0},{"x":1091,"y":442,"score":77,"level":0},{"x":1124,"y":442,"score":92,"level":0},{"x":1150,"y":442,"score":26,"level":0},{"x":1201,"y":442,"score":48,"level":0},{"x":1242,"y":442,"score":75,"level":0},{"x":1247,"y":442,"score":102,"level":0},{"x":1254,"y":442,"score":42,"level":0},{"x":1263,"y":442,"score":92,"level":0},{"x":1338,"y":442,"score":34,"level":0},{"x":1343,"y":442,"score":27,"level":0},{"x":1425,"y":442,"score":149,"level":0},{"x":1488,"y":442,"score":62,"level":0},{"x":410,"y":443,"score":40,"level":0},{"x":500,"y":443,"score":55,"level":0},{"x":512,"y":443,"score":33,"level":0},{"x":547,"y":443,"score":71,"level":0},{"x":561,"y":443,"score":43,"level":0},{"x":637,"y":443,"score":32,"level":0},{"x":1035,"y":443,"score":108,"level":0},{"x":1129,"y":443,"score":108,"level":0},{"x":1190,"y":443,"score":91,"level":0},{"x":1195,"y":443,"score":160,"level":0},{"x":1224,"y":443,"score":38,"level":0},{"x":1384,"y":443,"score":129,"level":0},{"x":1436,"y":443,"score":88,"level":0},{"x":1480,"y":443,"score":48,"level":0},{"x":419,"y":444,"score":42,"level":0},{"x":615,"y":444,"score":40,"level":0},{"x":694,"y":444,"score":26,"level":0},{"x":732,"y":444,"score":43,"level":0},{"x":939,"y":444,"score":56,"level":0},{"x":954,"y":444,"score":91,"level":0},{"x":1045,"y":444,"score":44,"level":0},{"x":1076,"y":444,"score":45,"level":0},{"x":1080,"y":444,"score":44,"level":0},{"x":1104,"y":444,"score":50,"level":0},{"x":1112,"y":444,"score":112,"level":0},{"x":1162,"y":444,"score":63,"level":0},{"x":1264,"y":444,"score":80,"level":0},{"x":1298,"y":444,"score":138,"level":0},{"x":1335,"y":444,"score":32,"level":0},{"x":1348,"y":444,"score":44,"level":0},{"x":1375,"y":444,"score":63,"level":0},{"x":1417,"y":444,"score":40,"level":0},{"x":1464,"y":444,"score":66,"level":0},{"x":1477,"y":444,"score":36,"level":0},{"x":489,"y":445,"score":97,"level":0},{"x":494,"y":445,"score":188,"level":0},{"x":566,"y":445,"score":30,"level":0},{"x":571,"y":445,"score":96,"level":0},{"x":600,"y":445,"score":226,"level":0},{"x":606,"y":445,"score":84,"level":0},{"x":686,"y":445,"score":67,"level":0},{"x":702,"y":445,"score":58,"level":0},{"x":850,"y":445,"score":36,"level":0},{"x":910,"y":445,"score":28,"level":0},{"x":914,"y":445,"score":66,"level":0},{"x":1095,"y":445,"score":50,"level":0},{"x":1150,"y":445,"score":67,"level":0},{"x":1154,"y":445,"score":85,"level":0},{"x":1185,"y":445,"score":72,"level":0},{"x":1255,"y":445,"score":29,"level":0},{"x":1365,"y":445,"score":32,"level":0},{"x":1444,"y":445,"score":43,"level":0},{"x":388,"y":446,"score":27,"level":0},{"x":394,"y":446,"score":70,"level":0},{"x":430,"y":446,"score":95,"level":0},{"x":519,"y":446,"score":61,"level":0},{"x":573,"y":446,"score":78,"level":0},{"x":632,"y":446,"score":45,"level":0},{"x":639,"y":446,"score":76,"level":0},{"x":676,"y":446,"score":51,"level":0},{"x":681,"y":446,"score":93,"level":0},{"x":829,"y":446,"score":108,"level":0},{"x":881,"y":446,"score":39,"level":0},{"x":962,"y":446,"score":62,"level":0},{"x":1011,"y":446,"score":64,"level":0},{"x":1016,"y":446,"score":161,"level":0},{"x":1217,"y":446,"score":123,"level":0},{"x":1294,"y":446,"score":51,"level":0},{"x":1334,"y":446,"score":49,"level":0},{"x":1459,"y":446,"score":32,"level":0},{"x":377,"y":447,"score":62,"level":0},{"x":460,"y":447,"score":266,"level":0},{"x":465,"y":447,"score":96,"level":0},{"x":554,"y":447,"score":94,"level":0},{"x":648,"y":447,"score":36,"level":0},{"x":650,"y":447,"score":60,"level":0},{"x":698,"y":447,"score":52,"level":0},{"x":713,"y":447,"score":81,"level":0},{"x":739,"y":447,"score":72,"level":0},{"x":863,"y":447,"score":104,"level":0},{"x":898,"y":447,"score":140,"level":0},{"x":904,"y":447,"score":30,"level":0},{"x":922,"y":447,"score":75,"level":0},{"x":945,"y":447,"score":45,"level":0},{"x":971,"y":447,"score":36,"level":0},{"x":986,"y":447,"score":76,"level":0},{"x":995,"y":447,"score":100,"level":0},{"x":1021,"y":447,"score":63,"level":0},{"x":1051,"y":447,"score":44,"level":0},{"x":1055,"y":447,"score":53,"level":0},{"x":1067,"y":447,"score":88,"level":0},{"x":1170,"y":447,"score":82,"level":0},{"x":1202,"y":447,"score":32,"level":0},{"x":1257,"y":447,"score":66,"level":0},{"x":1311,"y":447,"score":34,"level":0},{"x":1404,"y":447,"score":33,"level":0},{"x":1446,"y":447,"score":74,"level":0},{"x":506,"y":448,"score":87,"level":0},{"x":677,"y":448,"score":38,"level":0},{"x":732,"y":448,"score":87,"level":0},{"x":888,"y":448,"score":69,"level":0},{"x":977,"y":448,"score":62,"level":0},{"x":1110,"y":448,"score":64,"level":0},{"x":1127,"y":448,"score":42,"level":0},{"x":1143,"y":448,"score":98,"level":0},{"x":1305,"y":448,"score":36,"level":0},{"x":1322,"y":448,"score":83,"level":0},{"x":1377,"y":448,"score":49,"level":0},{"x":1420,"y":448,"score":52,"level":0},{"x":1429,"y":448,"score":27,"level":0},{"x":1468,"y":448,"score":30,"level":0},{"x":377,"y":449,"score":83,"level":0},{"x":533,"y":449,"score":44,"level":0},{"x":553,"y":449,"score":68,"level":0},{"x":743,"y":449,"score":35,"level":0},{"x":753,"y":449,"score":31,"level":0},{"x":793,"y":449,"score":34,"level":0},{"x":874,"y":449,"score":48,"level":0},{"x":891,"y":449,"score":56,"level":0},{"x":913,"y":449,"score":89,"level":0},{"x":1003,"y":449,"score":29,"level":0},{"x":1050,"y":449,"score":27,"level":0},{"x":1076,"y":449,"score":118,"level":0},{"x":1086,"y":449,"score":27,"level":0},{"x":1180,"y":449,"score":101,"level":0},{"x":1260,"y":449,"score":37,"level":0},{"x":1269,"y":449,"score":96,"level":0},{"x":1299,"y":449,"score":92,"level":0},{"x":1310,"y":449,"score":47,"level":0},{"x":1357,"y":449,"score":119,"level":0},{"x":1368,"y":449,"score":172,"level":0},{"x":1480,"y":449,"score":42,"level":0},{"x":418,"y":450,"score":80,"level":0},{"x":498,"y":450,"score":69,"level":0},{"x":558,"y":450,"score":33,"level":0},{"x":646,"y":450,"score":33,"level":0},{"x":648,"y":450,"score":28,"level":0},{"x":737,"y":450,"score":54,"level":0},{"x":778,"y":450,"score":134,"level":0},{"x":945,"y":450,"score":55,"level":0},{"x":988,"y":450,"score":69,"level":0},{"x":1079,"y":450,"score":67,"level":0},{"x":1100,"y":450,"score":85,"level":0},{"x":1238,"y":450,"score":35,"level":0},{"x":1338,"y":450,"score":120,"level":0},{"x":1438,"y":450,"score":156,"level":0},{"x":1453,"y":450,"score":123,"level":0},{"x":1456,"y":450,"score":90,"level":0},{"x":1472,"y":450,"score":50,"level":0},{"x":1483,"y":450,"score":44,"level":0},{"x":396,"y":451,"score":27,"level":0},{"x":474,"y":451,"score":204,"level":0},{"x":484,"y":451,"score":178,"level":0},{"x":500,"y":451,"score":39,"level":0},{"x":561,"y":451,"score":72,"level":0},{"x":567,"y":451,"score":42,"level":0},{"x":656,"y":451,"score":29,"level":0},{"x":660,"y":451,"score":35,"level":0},{"x":674,"y":451,"score":41,"level":0},{"x":710,"y":451,"score":102,"level":0},{"x":745,"y":451,"score":36,"level":0},{"x":839,"y":451,"score":28,"level":0},{"x":881,"y":451,"score":28,"level":0},{"x":893,"y":451,"score":70,"level":0},{"x":934,"y":451,"score":45,"level":0},{"x":961,"y":451,"score":89,"level":0},{"x":980,"y":451,"score":32,"level":0},{"x":1010,"y":451,"score":61,"level":0},{"x":1015,"y":451,"score":69,"level":0},{"x":1019,"y":451,"score":52,"level":0},{"x":1103,"y":451,"score":74,"level":0},{"x":1148,"y":451,"score":114,"level":0},{"x":1156,"y":451,"score":212,"level":0},{"x":1169,"y":451,"score":89,"level":0},{"x":1269,"y":451,"score":108,"level":0},{"x":1351,"y":451,"score":29,"level":0},{"x":1432,"y":451,"score":59,"level":0},{"x":398,"y":452,"score":45,"level":0},{"x":423,"y":452,"score":50,"level":0},{"x":429,"y":452,"score":28,"level":0},{"x":648,"y":452,"score":42,"level":0},{"x":664,"y":452,"score":55,"level":0},{"x":684,"y":452,"score":85,"level":0},{"x":834,"y":452,"score":59,"level":0},{"x":899,"y":452,"score":44,"level":0},{"x":903,"y":452,"score":72,"level":0},{"x":994,"y":452,"score":70,"level":0},{"x":999,"y":452,"score":77,"level":0},{"x":1004,"y":452,"score":31,"level":0},{"x":1083,"y":452,"score":44,"level":0},{"x":1114,"y":452,"score":44,"level":0},{"x":1197,"y":452,"score":112,"level":0},{"x":1362,"y":452,"score":70,"level":0},{"x":1448,"y":452,"score":34,"level":0},{"x":394,"y":453,"score":47,"level":0},{"x":493,"y":453,"score":85,"level":0},{"x":718,"y":453,"score":30,"level":0},{"x":734,"y":453,"score":29,"level":0},{"x":888,"y":453,"score":100,"level":0},{"x":896,"y":453,"score":76,"level":0},{"x":922,"y":453,"score":179,"level":0},{"x":985,"y":453,"score":38,"level":0},{"x":1096,"y":453,"score":45,"level":0},{"x":1141,"y":453,"score":63,"level":0},{"x":1354,"y":453,"score":52,"level":0},{"x":1372,"y":453,"score":32,"level":0},{"x":1389,"y":453,"score":61,"level":0},{"x":489,"y":454,"score":58,"level":0},{"x":505,"y":454,"score":34,"level":0},{"x":553,"y":454,"score":68,"level":0},{"x":559,"y":454,"score":49,"level":0},{"x":609,"y":454,"score":26,"level":0},{"x":705,"y":454,"score":91,"level":0},{"x":727,"y":454,"score":61,"level":0},{"x":750,"y":454,"score":165,"level":0},{"x":890,"y":454,"score":85,"level":0},{"x":1017,"y":454,"score":114,"level":0},{"x":1055,"y":454,"score":81,"level":0},{"x":1109,"y":454,"score":49,"level":0},{"x":1118,"y":454,"score":38,"level":0},{"x":1123,"y":454,"score":43,"level":0},{"x":1242,"y":454,"score":123,"level":0},{"x":1260,"y":454,"score":123,"level":0},{"x":1427,"y":454,"score":106,"level":0},{"x":575,"y":455,"score":116,"level":0},{"x":642,"y":455,"score":59,"level":0},{"x":864,"y":455,"score":73,"level":0},{"x":905,"y":455,"score":71,"level":0},{"x":946,"y":455,"score":99,"level":0},{"x":974,"y":455,"score":65,"level":0},{"x":1043,"y":455,"score":134,"level":0},{"x":1077,"y":455,"score":62,"level":0},{"x":1090,"y":455,"score":87,"level":0},{"x":1202,"y":455,"score":32,"level":0},{"x":1379,"y":455,"score":35,"level":0},{"x":1384,"y":455,"score":29,"level":0},{"x":1449,"y":455,"score":113,"level":0},{"x":418,"y":456,"score":49,"level":0},{"x":457,"y":456,"score":40,"level":0},{"x":502,"y":456,"score":35,"level":0},{"x":547,"y":456,"score":48,"level":0},{"x":672,"y":456,"score":47,"level":0},{"x":696,"y":456,"score":95,"level":0},{"x":701,"y":456,"score":73,"level":0},{"x":931,"y":456,"score":202,"level":0},{"x":1001,"y":456,"score":70,"level":0},{"x":1085,"y":456,"score":73,"level":0},{"x":1100,"y":456,"score":52,"level":0},{"x":1166,"y":456,"score":30,"level":0},{"x":1381,"y":456,"score":62,"level":0},{"x":1490,"y":456,"score":244,"level":0},{"x":404,"y":457,"score":206,"level":0},{"x":429,"y":457,"score":88,"level":0},{"x":462,"y":457,"score":145,"level":0},{"x":468,"y":457,"score":52,"level":0},{"x":471,"y":457,"score":86,"level":0},{"x":601,"y":457,"score":56,"level":0},{"x":693,"y":457,"score":51,"level":0},{"x":900,"y":457,"score":122,"level":0},{"x":937,"y":457,"score":52,"level":0},{"x":1004,"y":457,"score":48,"level":0},{"x":1154,"y":457,"score":90,"level":0},{"x":1173,"y":457,"score":29,"level":0},{"x":1187,"y":457,"score":102,"level":0},{"x":1247,"y":457,"score":76,"level":0},{"x":1254,"y":457,"score":40,"level":0},{"x":1423,"y":457,"score":64,"level":0},{"x":424,"y":458,"score":77,"level":0},{"x":487,"y":458,"score":40,"level":0},{"x":725,"y":458,"score":80,"level":0},{"x":875,"y":458,"score":49,"level":0},{"x":905,"y":458,"score":47,"level":0},{"x":954,"y":458,"score":76,"level":0},{"x":979,"y":458,"score":116,"level":0},{"x":1111,"y":458,"score":61,"level":0},{"x":1134,"y":458,"score":29,"level":0},{"x":1161,"y":458,"score":61,"level":0},{"x":1167,"y":458,"score":29,"level":0},{"x":1229,"y":458,"score":138,"level":0},{"x":1306,"y":458,"score":45,"level":0},{"x":1312,"y":458,"score":103,"level":0},{"x":1317,"y":458,"score":115,"level":0},{"x":1337,"y":458,"score":36,"level":0},{"x":1342,"y":458,"score":90,"level":0},{"x":1463,"y":458,"score":30,"level":0},{"x":1468,"y":458,"score":33,"level":0},{"x":377,"y":459,"score":131,"level":0},{"x":436,"y":459,"score":112,"level":0},{"x":649,"y":459,"score":33,"level":0},{"x":654,"y":459,"score":42,"level":0},{"x":668,"y":459,"score":115,"level":0},{"x":768,"y":459,"score":159,"level":0},{"x":783,"y":459,"score":39,"level":0},{"x":877,"y":459,"score":69,"level":0},{"x":925,"y":459,"score":138,"level":0},{"x":959,"y":459,"score":28,"level":0},{"x":973,"y":459,"score":57,"level":0},{"x":1052,"y":459,"score":27,"level":0},{"x":1069,"y":459,"score":169,"level":0},{"x":1081,"y":459,"score":33,"level":0},{"x":1108,"y":459,"score":97,"level":0},{"x":1123,"y":459,"score":43,"level":0},{"x":1131,"y":459,"score":37,"level":0},{"x":1154,"y":459,"score":162,"level":0},{"x":1260,"y":459,"score":47,"level":0},{"x":1332,"y":459,"score":106,"level":0},{"x":1371,"y":459,"score":55,"level":0},{"x":1485,"y":459,"score":29,"level":0},{"x":441,"y":460,"score":35,"level":0},{"x":660,"y":460,"score":84,"level":0},{"x":685,"y":460,"score":62,"level":0},{"x":733,"y":460,"score":111,"level":0},{"x":752,"y":460,"score":27,"level":0},{"x":918,"y":460,"score":132,"level":0},{"x":941,"y":460,"score":146,"level":0},{"x":947,"y":460,"score":41,"level":0},{"x":1013,"y":460,"score":26,"level":0},{"x":1084,"y":460,"score":43,"level":0},{"x":1144,"y":460,"score":30,"level":0},{"x":1171,"y":460,"score":45,"level":0},{"x":1223,"y":460,"score":149,"level":0},{"x":1359,"y":460,"score":26,"level":0},{"x":1463,"y":460,"score":60,"level":0},{"x":422,"y":461,"score":34,"level":0},{"x":643,"y":461,"score":162,"level":0},{"x":665,"y":461,"score":123,"level":0},{"x":709,"y":461,"score":62,"level":0},{"x":720,"y":461,"score":42,"level":0},{"x":878,"y":461,"score":38,"level":0},{"x":911,"y":461,"score":54,"level":0},{"x":963,"y":461,"score":48,"level":0},{"x":1040,"y":461,"score":69,"level":0},{"x":1062,"y":461,"score":42,"level":0},{"x":1242,"y":461,"score":67,"level":0},{"x":1255,"y":461,"score":43,"level":0},{"x":1379,"y":461,"score":42,"level":0},{"x":1384,"y":461,"score":27,"level":0},{"x":1450,"y":461,"score":127,"level":0},{"x":1455,"y":461,"score":248,"level":0},{"x":1475,"y":461,"score":28,"level":0},{"x":450,"y":462,"score":29,"level":0},{"x":467,"y":462,"score":175,"level":0},{"x":474,"y":462,"score":33,"level":0},{"x":627,"y":462,"score":76,"level":0},{"x":681,"y":462,"score":110,"level":0},{"x":690,"y":462,"score":156,"level":0},{"x":728,"y":462,"score":107,"level":0},{"x":779,"y":462,"score":66,"level":0},{"x":829,"y":462,"score":34,"level":0},{"x":935,"y":462,"score":106,"level":0},{"x":997,"y":462,"score":81,"level":0},{"x":1022,"y":462,"score":28,"level":0},{"x":1056,"y":462,"score":33,"level":0},{"x":1090,"y":462,"score":92,"level":0},{"x":1101,"y":462,"score":27,"level":0},{"x":1137,"y":462,"score":28,"level":0},{"x":1197,"y":462,"score":172,"level":0},{"x":1246,"y":462,"score":50,"level":0},{"x":1248,"y":462,"score":30,"level":0},{"x":1269,"y":462,"score":46,"level":0},{"x":1325,"y":462,"score":49,"level":0},{"x":1330,"y":462,"score":80,"level":0},{"x":1345,"y":462,"score":34,"level":0},{"x":1352,"y":462,"score":43,"level":0},{"x":1436,"y":462,"score":161,"level":0},{"x":1490,"y":462,"score":33,"level":0},{"x":391,"y":463,"score":55,"level":0},{"x":458,"y":463,"score":33,"level":0},{"x":485,"y":463,"score":89,"level":0},{"x":579,"y":463,"score":31,"level":0},{"x":631,"y":463,"score":42,"level":0},{"x":1004,"y":463,"score":120,"level":0},{"x":1035,"y":463,"score":28,"level":0},{"x":1111,"y":463,"score":29,"level":0},{"x":1214,"y":463,"score":51,"level":0},{"x":1222,"y":463,"score":200,"level":0},{"x":1238,"y":463,"score":83,"level":0},{"x":1320,"y":463,"score":69,"level":0},{"x":1424,"y":463,"score":51,"level":0},{"x":421,"y":464,"score":89,"level":0},{"x":592,"y":464,"score":34,"level":0},{"x":598,"y":464,"score":30,"level":0},{"x":746,"y":464,"score":145,"level":0},{"x":781,"y":464,"score":123,"level":0},{"x":871,"y":464,"score":41,"level":0},{"x":904,"y":464,"score":26,"level":0},{"x":915,"y":464,"score":87,"level":0},{"x":982,"y":464,"score":104,"level":0},{"x":1009,"y":464,"score":91,"level":0},{"x":1053,"y":464,"score":93,"level":0},{"x":1066,"y":464,"score":72,"level":0},{"x":1157,"y":464,"score":67,"level":0},{"x":1227,"y":464,"score":144,"level":0},{"x":1261,"y":464,"score":60,"level":0},{"x":1263,"y":464,"score":62,"level":0},{"x":1339,"y":464,"score":100,"level":0},{"x":1383,"y":464,"score":45,"level":0},{"x":1386,"y":464,"score":32,"level":0},{"x":1484,"y":464,"score":111,"level":0},{"x":397,"y":465,"score":37,"level":0},{"x":409,"y":465,"score":96,"level":0},{"x":648,"y":465,"score":62,"level":0},{"x":656,"y":465,"score":42,"level":0},{"x":897,"y":465,"score":115,"level":0},{"x":928,"y":465,"score":52,"level":0},{"x":940,"y":465,"score":43,"level":0},{"x":968,"y":465,"score":35,"level":0},{"x":1017,"y":465,"score":60,"level":0},{"x":1071,"y":465,"score":40,"level":0},{"x":1077,"y":465,"score":54,"level":0},{"x":1126,"y":465,"score":73,"level":0},{"x":1143,"y":465,"score":42,"level":0},{"x":1169,"y":465,"score":180,"level":0},{"x":1185,"y":465,"score":38,"level":0},{"x":1234,"y":465,"score":74,"level":0},{"x":1315,"y":465,"score":102,"level":0},{"x":1362,"y":465,"score":41,"level":0},{"x":420,"y":466,"score":96,"level":0},{"x":429,"y":466,"score":105,"level":0},{"x":477,"y":466,"score":143,"level":0},{"x":506,"y":466,"score":30,"level":0},{"x":626,"y":466,"score":51,"level":0},{"x":665,"y":466,"score":81,"level":0},{"x":672,"y":466,"score":146,"level":0},{"x":720,"y":466,"score":62,"level":0},{"x":840,"y":466,"score":68,"level":0},{"x":862,"y":466,"score":84,"level":0},{"x":950,"y":466,"score":119,"level":0},{"x":964,"y":466,"score":30,"level":0},{"x":1040,"y":466,"score":38,"level":0},{"x":1042,"y":466,"score":41,"level":0},{"x":1069,"y":466,"score":103,"level":0},{"x":1074,"y":466,"score":41,"level":0},{"x":1164,"y":466,"score":44,"level":0},{"x":1179,"y":466,"score":208,"level":0},{"x":1255,"y":466,"score":43,"level":0},{"x":1302,"y":466,"score":65,"level":0},{"x":1307,"y":466,"score":64,"level":0},{"x":1419,"y":466,"score":45,"level":0},{"x":382,"y":467,"score":264,"level":0},{"x":465,"y":467,"score":62,"level":0},{"x":471,"y":467,"score":121,"level":0},{"x":575,"y":467,"score":37,"level":0},{"x":640,"y":467,"score":41,"level":0},{"x":709,"y":467,"score":58,"level":0},{"x":778,"y":467,"score":76,"level":0},{"x":834,"y":467,"score":154,"level":0},{"x":878,"y":467,"score":86,"level":0},{"x":884,"y":467,"score":32,"level":0},{"x":889,"y":467,"score":69,"level":0},{"x":1002,"y":467,"score":29,"level":0},{"x":1005,"y":467,"score":123,"level":0},{"x":1078,"y":467,"score":67,"level":0},{"x":1080,"y":467,"score":36,"level":0},{"x":1101,"y":467,"score":67,"level":0},{"x":1158,"y":467,"score":88,"level":0},{"x":1234,"y":467,"score":78,"level":0},{"x":1317,"y":467,"score":80,"level":0},{"x":1455,"y":467,"score":33,"level":0},{"x":1461,"y":467,"score":53,"level":0},{"x":1487,"y":467,"score":32,"level":0},{"x":377,"y":468,"score":72,"level":0},{"x":488,"y":468,"score":42,"level":0},{"x":570,"y":468,"score":67,"level":0},{"x":688,"y":468,"score":36,"level":0},{"x":700,"y":468,"score":48,"level":0},{"x":724,"y":468,"score":97,"level":0},{"x":733,"y":468,"score":62,"level":0},{"x":738,"y":468,"score":179,"level":0},{"x":862,"y":468,"score":75,"level":0},{"x":1072,"y":468,"score":30,"level":0},{"x":1121,"y":468,"score":84,"level":0},{"x":1144,"y":468,"score":58,"level":0},{"x":1238,"y":468,"score":59,"level":0},{"x":1266,"y":468,"score":42,"level":0},{"x":1358,"y":468,"score":30,"level":0},{"x":1375,"y":468,"score":32,"level":0},{"x":1426,"y":468,"score":105,"level":0},{"x":1434,"y":468,"score":38,"level":0},{"x":1448,"y":468,"score":120,"level":0},{"x":403,"y":469,"score":104,"level":0},{"x":439,"y":469,"score":126,"level":0},{"x":526,"y":469,"score":38,"level":0},{"x":542,"y":469,"score":34,"level":0},{"x":650,"y":469,"score":117,"level":0},{"x":896,"y":469,"score":33,"level":0},{"x":900,"y":469,"score":60,"level":0},{"x":1017,"y":469,"score":36,"level":0},{"x":1114,"y":469,"score":55,"level":0},{"x":1157,"y":469,"score":33,"level":0},{"x":1193,"y":469,"score":77,"level":0},{"x":1221,"y":469,"score":109,"level":0},{"x":1231,"y":469,"score":77,"level":0},{"x":1246,"y":469,"score":37,"level":0},{"x":1340,"y":469,"score":93,"level":0},{"x":1353,"y":469,"score":41,"level":0},{"x":1431,"y":469,"score":47,"level":0},{"x":1484,"y":469,"score":47,"level":0},{"x":393,"y":470,"score":81,"level":0},{"x":423,"y":470,"score":31,"level":0},{"x":441,"y":470,"score":74,"level":0},{"x":460,"y":470,"score":95,"level":0},{"x":514,"y":470,"score":77,"level":0},{"x":565,"y":470,"score":31,"level":0},{"x":622,"y":470,"score":51,"level":0},{"x":660,"y":470,"score":61,"level":0},{"x":666,"y":470,"score":31,"level":0},{"x":678,"y":470,"score":40,"level":0},{"x":715,"y":470,"score":111,"level":0},{"x":731,"y":470,"score":28,"level":0},{"x":831,"y":470,"score":215,"level":0},{"x":865,"y":470,"score":89,"level":0},{"x":871,"y":470,"score":144,"level":0},{"x":985,"y":470,"score":141,"level":0},{"x":1077,"y":470,"score":45,"level":0},{"x":1104,"y":470,"score":26,"level":0},{"x":1167,"y":470,"score":46,"level":0},{"x":1312,"y":470,"score":121,"level":0},{"x":427,"y":471,"score":39,"level":0},{"x":475,"y":471,"score":138,"level":0},{"x":506,"y":471,"score":132,"level":0},{"x":626,"y":471,"score":49,"level":0},{"x":750,"y":471,"score":178,"level":0},{"x":910,"y":471,"score":33,"level":0},{"x":937,"y":471,"score":38,"level":0},{"x":957,"y":471,"score":195,"level":0},{"x":996,"y":471,"score":108,"level":0},{"x":1008,"y":471,"score":109,"level":0},{"x":1041,"y":471,"score":62,"level":0},{"x":1062,"y":471,"score":56,"level":0},{"x":1096,"y":471,"score":107,"level":0},{"x":1249,"y":471,"score":70,"level":0},{"x":431,"y":472,"score":72,"level":0},{"x":481,"y":472,"score":48,"level":0},{"x":486,"y":472,"score":48,"level":0},{"x":498,"y":472,"score":26,"level":0},{"x":512,"y":472,"score":58,"level":0},{"x":535,"y":472,"score":34,"level":0},{"x":542,"y":472,"score":29,"level":0},{"x":629,"y":472,"score":40,"level":0},{"x":633,"y":472,"score":36,"level":0},{"x":917,"y":472,"score":103,"level":0},{"x":930,"y":472,"score":107,"level":0},{"x":950,"y":472,"score":51,"level":0},{"x":991,"y":472,"score":54,"level":0},{"x":1017,"y":472,"score":52,"level":0},{"x":1159,"y":472,"score":148,"level":0},{"x":1220,"y":472,"score":52,"level":0},{"x":1243,"y":472,"score":28,"level":0},{"x":1328,"y":472,"score":70,"level":0},{"x":1379,"y":472,"score":26,"level":0},{"x":1434,"y":472,"score":123,"level":0},{"x":1454,"y":472,"score":63,"level":0},{"x":1467,"y":472,"score":29,"level":0},{"x":645,"y":473,"score":99,"level":0},{"x":680,"y":473,"score":38,"level":0},{"x":700,"y":473,"score":44,"level":0},{"x":723,"y":473,"score":118,"level":0},{"x":732,"y":473,"score":41,"level":0},{"x":743,"y":473,"score":136,"level":0},{"x":837,"y":473,"score":30,"level":0},{"x":878,"y":473,"score":39,"level":0},{"x":883,"y":473,"score":32,"level":0},{"x":893,"y":473,"score":78,"level":0},{"x":944,"y":473,"score":78,"level":0},{"x":1080,"y":473,"score":28,"level":0},{"x":1140,"y":473,"score":55,"level":0},{"x":1154,"y":473,"score":162,"level":0},{"x":1173,"y":473,"score":84,"level":0},{"x":1262,"y":473,"score":73,"level":0},{"x":1333,"y":473,"score":39,"level":0},{"x":383,"y":474,"score":86,"level":0},{"x":403,"y":474,"score":46,"level":0},{"x":409,"y":474,"score":61,"level":0},{"x":414,"y":474,"score":34,"level":0},{"x":468,"y":474,"score":38,"level":0},{"x":695,"y":474,"score":70,"level":0},{"x":921,"y":474,"score":73,"level":0},{"x":973,"y":474,"score":230,"level":0},{"x":1038,"y":474,"score":111,"level":0},{"x":1052,"y":474,"score":49,"level":0},{"x":1066,"y":474,"score":56,"level":0},{"x":1068,"y":474,"score":36,"level":0},{"x":1071,"y":474,"score":38,"level":0},{"x":1075,"y":474,"score":136,"level":0},{"x":1091,"y":474,"score":59,"level":0},{"x":1127,"y":474,"score":63,"level":0},{"x":1133,"y":474,"score":218,"level":0},{"x":1160,"y":474,"score":96,"level":0},{"x":1191,"y":474,"score":29,"level":0},{"x":1203,"y":474,"score":252,"level":0},{"x":1230,"y":474,"score":68,"level":0},{"x":1275,"y":474,"score":114,"level":0},{"x":394,"y":475,"score":48,"level":0},{"x":419,"y":475,"score":132,"level":0},{"x":492,"y":475,"score":33,"level":0},{"x":539,"y":475,"score":74,"level":0},{"x":638,"y":475,"score":62,"level":0},{"x":837,"y":475,"score":49,"level":0},{"x":863,"y":475,"score":129,"level":0},{"x":871,"y":475,"score":36,"level":0},{"x":873,"y":475,"score":63,"level":0},{"x":938,"y":475,"score":64,"level":0},{"x":962,"y":475,"score":63,"level":0},{"x":968,"y":475,"score":71,"level":0},{"x":1197,"y":475,"score":78,"level":0},{"x":1269,"y":475,"score":60,"level":0},{"x":1440,"y":475,"score":102,"level":0},{"x":1449,"y":475,"score":138,"level":0},{"x":1457,"y":475,"score":60,"level":0},{"x":424,"y":476,"score":120,"level":0},{"x":467,"y":476,"score":48,"level":0},{"x":647,"y":476,"score":36,"level":0},{"x":672,"y":476,"score":94,"level":0},{"x":677,"y":476,"score":102,"level":0},{"x":707,"y":476,"score":198,"level":0},{"x":882,"y":476,"score":66,"level":0},{"x":979,"y":476,"score":177,"level":0},{"x":1001,"y":476,"score":127,"level":0},{"x":1043,"y":476,"score":26,"level":0},{"x":1115,"y":476,"score":27,"level":0},{"x":1122,"y":476,"score":102,"level":0},{"x":1239,"y":476,"score":110,"level":0},{"x":1311,"y":476,"score":61,"level":0},{"x":1319,"y":476,"score":80,"level":0},{"x":1460,"y":476,"score":72,"level":0},{"x":414,"y":477,"score":85,"level":0},{"x":475,"y":477,"score":33,"level":0},{"x":511,"y":477,"score":26,"level":0},{"x":528,"y":477,"score":68,"level":0},{"x":550,"y":477,"score":93,"level":0},{"x":556,"y":477,"score":44,"level":0},{"x":605,"y":477,"score":28,"level":0},{"x":633,"y":477,"score":67,"level":0},{"x":925,"y":477,"score":70,"level":0},{"x":943,"y":477,"score":112,"level":0},{"x":1010,"y":477,"score":80,"level":0},{"x":1015,"y":477,"score":30,"level":0},{"x":1049,"y":477,"score":40,"level":0},{"x":1065,"y":477,"score":50,"level":0},{"x":1101,"y":477,"score":35,"level":0},{"x":1106,"y":477,"score":26,"level":0},{"x":1165,"y":477,"score":47,"level":0},{"x":1241,"y":477,"score":90,"level":0},{"x":1352,"y":477,"score":52,"level":0},{"x":1364,"y":477,"score":44,"level":0},{"x":1377,"y":477,"score":38,"level":0},{"x":1443,"y":477,"score":105,"level":0},{"x":377,"y":478,"score":94,"level":0},{"x":431,"y":478,"score":73,"level":0},{"x":436,"y":478,"score":77,"level":0},{"x":464,"y":478,"score":40,"level":0},{"x":535,"y":478,"score":79,"level":0},{"x":638,"y":478,"score":94,"level":0},{"x":678,"y":478,"score":137,"level":0},{"x":713,"y":478,"score":68,"level":0},{"x":735,"y":478,"score":92,"level":0},{"x":746,"y":478,"score":97,"level":0},{"x":861,"y":478,"score":33,"level":0},{"x":920,"y":478,"score":33,"level":0},{"x":934,"y":478,"score":74,"level":0},{"x":959,"y":478,"score":53,"level":0},{"x":1019,"y":478,"score":28,"level":0},{"x":1021,"y":478,"score":30,"level":0},{"x":1080,"y":478,"score":167,"level":0},{"x":1369,"y":478,"score":30,"level":0},{"x":1380,"y":478,"score":57,"level":0},{"x":1430,"y":478,"score":80,"level":0},{"x":1434,"y":478,"score":114,"level":0},{"x":1439,"y":478,"score":98,"level":0},{"x":403,"y":479,"score":68,"level":0},{"x":459,"y":479,"score":76,"level":0},{"x":508,"y":479,"score":69,"level":0},{"x":574,"y":479,"score":42,"level":0},{"x":624,"y":479,"score":44,"level":0},{"x":627,"y":479,"score":34,"level":0},{"x":668,"y":479,"score":41,"level":0},{"x":877,"y":479,"score":42,"level":0},{"x":914,"y":479,"score":102,"level":0},{"x":1054,"y":479,"score":128,"level":0},{"x":1075,"y":479,"score":267,"level":0},{"x":1088,"y":479,"score":68,"level":0},{"x":1094,"y":479,"score":142,"level":0},{"x":1144,"y":479,"score":64,"level":0},{"x":1154,"y":479,"score":34,"level":0},{"x":1158,"y":479,"score":106,"level":0},{"x":1226,"y":479,"score":120,"level":0},{"x":1263,"y":479,"score":43,"level":0},{"x":1291,"y":479,"score":29,"level":0},{"x":1382,"y":479,"score":67,"level":0},{"x":415,"y":480,"score":73,"level":0},{"x":495,"y":480,"score":113,"level":0},{"x":567,"y":480,"score":87,"level":0},{"x":632,"y":480,"score":35,"level":0},{"x":646,"y":480,"score":39,"level":0},{"x":695,"y":480,"score":147,"level":0},{"x":725,"y":480,"score":59,"level":0},{"x":892,"y":480,"score":56,"level":0},{"x":938,"y":480,"score":66,"level":0},{"x":955,"y":480,"score":58,"level":0},{"x":1003,"y":480,"score":40,"level":0},{"x":1181,"y":480,"score":95,"level":0},{"x":1190,"y":480,"score":100,"level":0},{"x":1202,"y":480,"score":115,"level":0},{"x":1209,"y":480,"score":137,"level":0},{"x":1214,"y":480,"score":75,"level":0},{"x":1270,"y":480,"score":54,"level":0},{"x":1314,"y":480,"score":53,"level":0},{"x":503,"y":481,"score":74,"level":0},{"x":542,"y":481,"score":55,"level":0},{"x":690,"y":481,"score":67,"level":0},{"x":741,"y":481,"score":72,"level":0},{"x":835,"y":481,"score":111,"level":0},{"x":870,"y":481,"score":56,"level":0},{"x":880,"y":481,"score":40,"level":0},{"x":886,"y":481,"score":76,"level":0},{"x":899,"y":481,"score":48,"level":0},{"x":949,"y":481,"score":27,"level":0},{"x":965,"y":481,"score":131,"level":0},{"x":1013,"y":481,"score":75,"level":0},{"x":1032,"y":481,"score":31,"level":0},{"x":1037,"y":481,"score":36,"level":0},{"x":1043,"y":481,"score":107,"level":0},{"x":1239,"y":481,"score":41,"level":0},{"x":1251,"y":481,"score":60,"level":0},{"x":1340,"y":481,"score":28,"level":0},{"x":1418,"y":481,"score":105,"level":0},{"x":377,"y":482,"score":70,"level":0},{"x":462,"y":482,"score":56,"level":0},{"x":472,"y":482,"score":87,"level":0},{"x":485,"y":482,"score":73,"level":0},{"x":532,"y":482,"score":29,"level":0},{"x":550,"y":482,"score":33,"level":0},{"x":557,"y":482,"score":83,"level":0},{"x":687,"y":482,"score":172,"level":0},{"x":700,"y":482,"score":35,"level":0},{"x":705,"y":482,"score":67,"level":0},{"x":744,"y":482,"score":35,"level":0},{"x":1018,"y":482,"score":42,"level":0},{"x":1057,"y":482,"score":87,"level":0},{"x":1083,"y":482,"score":33,"level":0},{"x":1114,"y":482,"score":189,"level":0},{"x":1130,"y":482,"score":32,"level":0},{"x":1142,"y":482,"score":58,"level":0},{"x":1166,"y":482,"score":86,"level":0},{"x":1170,"y":482,"score":38,"level":0},{"x":1268,"y":482,"score":29,"level":0},{"x":1325,"y":482,"score":128,"level":0},{"x":1445,"y":482,"score":70,"level":0},{"x":513,"y":483,"score":56,"level":0},{"x":517,"y":483,"score":66,"level":0},{"x":662,"y":483,"score":110,"level":0},{"x":873,"y":483,"score":30,"level":0},{"x":945,"y":483,"score":54,"level":0},{"x":980,"y":483,"score":54,"level":0},{"x":1000,"y":483,"score":32,"level":0},{"x":1008,"y":483,"score":30,"level":0},{"x":1048,"y":483,"score":32,"level":0},{"x":1069,"y":483,"score":84,"level":0},{"x":1120,"y":483,"score":88,"level":0},{"x":1150,"y":483,"score":62,"level":0},{"x":1255,"y":483,"score":40,"level":0},{"x":1300,"y":483,"score":51,"level":0},{"x":1330,"y":483,"score":73,"level":0},{"x":397,"y":484,"score":48,"level":0},{"x":479,"y":484,"score":26,"level":0},{"x":547,"y":484,"score":44,"level":0},{"x":554,"y":484,"score":43,"level":0},{"x":628,"y":484,"score":97,"level":0},{"x":638,"y":484,"score":90,"level":0},{"x":704,"y":484,"score":82,"level":0},{"x":878,"y":484,"score":41,"level":0},{"x":975,"y":484,"score":109,"level":0},{"x":1073,"y":484,"score":72,"level":0},{"x":1075,"y":484,"score":83,"level":0},{"x":1094,"y":484,"score":75,"level":0},{"x":1175,"y":484,"score":52,"level":0},{"x":1208,"y":484,"score":128,"level":0},{"x":1381,"y":484,"score":104,"level":0},{"x":1440,"y":484,"score":132,"level":0},{"x":402,"y":485,"score":50,"level":0},{"x":437,"y":485,"score":46,"level":0},{"x":500,"y":485,"score":63,"level":0},{"x":505,"y":485,"score":38,"level":0},{"x":574,"y":485,"score":116,"level":0},{"x":633,"y":485,"score":56,"level":0},{"x":679,"y":485,"score":33,"level":0},{"x":694,"y":485,"score":61,"level":0},{"x":907,"y":485,"score":33,"level":0},{"x":1044,"y":485,"score":54,"level":0},{"x":1083,"y":485,"score":92,"level":0},{"x":1142,"y":485,"score":75,"level":0},{"x":1252,"y":485,"score":36,"level":0},{"x":1267,"y":485,"score":102,"level":0},{"x":1322,"y":485,"score":32,"level":0},{"x":1365,"y":485,"score":31,"level":0},{"x":1367,"y":485,"score":48,"level":0},{"x":1372,"y":485,"score":104,"level":0},{"x":1435,"y":485,"score":82,"level":0},{"x":1461,"y":485,"score":71,"level":0},{"x":391,"y":486,"score":36,"level":0},{"x":420,"y":486,"score":95,"level":0},{"x":425,"y":486,"score":58,"level":0},{"x":517,"y":486,"score":50,"level":0},{"x":609,"y":486,"score":99,"level":0},{"x":689,"y":486,"score":117,"level":0},{"x":725,"y":486,"score":79,"level":0},{"x":749,"y":486,"score":96,"level":0},{"x":855,"y":486,"score":69,"level":0},{"x":861,"y":486,"score":122,"level":0},{"x":916,"y":486,"score":122,"level":0},{"x":980,"y":486,"score":35,"level":0},{"x":985,"y":486,"score":59,"level":0},{"x":1010,"y":486,"score":110,"level":0},{"x":1032,"y":486,"score":31,"level":0},{"x":1062,"y":486,"score":32,"level":0},{"x":1078,"y":486,"score":39,"level":0},{"x":1089,"y":486,"score":105,"level":0},{"x":1125,"y":486,"score":81,"level":0},{"x":1154,"y":486,"score":84,"level":0},{"x":1221,"y":486,"score":60,"level":0},{"x":1244,"y":486,"score":28,"level":0},{"x":1399,"y":486,"score":34,"level":0},{"x":380,"y":487,"score":28,"level":0},{"x":384,"y":487,"score":48,"level":0},{"x":464,"y":487,"score":27,"level":0},{"x":470,"y":487,"score":53,"level":0},{"x":480,"y":487,"score":45,"level":0},{"x":495,"y":487,"score":60,"level":0},{"x":506,"y":487,"score":28,"level":0},{"x":509,"y":487,"score":56,"level":0},{"x":533,"y":487,"score":48,"level":0},{"x":540,"y":487,"score":26,"level":0},{"x":573,"y":487,"score":66,"level":0},{"x":644,"y":487,"score":31,"level":0},{"x":723,"y":487,"score":58,"level":0},{"x":746,"y":487,"score":98,"level":0},{"x":833,"y":487,"score":135,"level":0},{"x":879,"y":487,"score":51,"level":0},{"x":885,"y":487,"score":87,"level":0},{"x":941,"y":487,"score":105,"level":0},{"x":1004,"y":487,"score":74,"level":0},{"x":1099,"y":487,"score":54,"level":0},{"x":1109,"y":487,"score":44,"level":0},{"x":1168,"y":487,"score":74,"level":0},{"x":1195,"y":487,"score":85,"level":0},{"x":1240,"y":487,"score":38,"level":0},{"x":1304,"y":487,"score":51,"level":0},{"x":459,"y":488,"score":134,"level":0},{"x":475,"y":488,"score":46,"level":0},{"x":583,"y":488,"score":70,"level":0},{"x":684,"y":488,"score":241,"level":0},{"x":718,"y":488,"score":35,"level":0},{"x":890,"y":488,"score":168,"level":0},{"x":931,"y":488,"score":56,"level":0},{"x":1018,"y":488,"score":61,"level":0},{"x":1023,"y":488,"score":70,"level":0},{"x":1039,"y":488,"score":138,"level":0},{"x":1070,"y":488,"score":60,"level":0},{"x":1204,"y":488,"score":179,"level":0},{"x":1227,"y":488,"score":26,"level":0},{"x":1315,"y":488,"score":50,"level":0},{"x":1321,"y":488,"score":82,"level":0},{"x":1360,"y":488,"score":51,"level":0},{"x":1369,"y":488,"score":26,"level":0},{"x":1458,"y":488,"score":34,"level":0},{"x":1470,"y":488,"score":30,"level":0},{"x":430,"y":489,"score":52,"level":0},{"x":534,"y":489,"score":71,"level":0},{"x":563,"y":489,"score":49,"level":0},{"x":571,"y":489,"score":61,"level":0},{"x":656,"y":489,"score":44,"level":0},{"x":811,"y":489,"score":30,"level":0},{"x":849,"y":489,"score":56,"level":0},{"x":873,"y":489,"score":68,"level":0},{"x":911,"y":489,"score":54,"level":0},{"x":921,"y":489,"score":30,"level":0},{"x":967,"y":489,"score":41,"level":0},{"x":977,"y":489,"score":42,"level":0},{"x":997,"y":489,"score":70,"level":0},{"x":1002,"y":489,"score":40,"level":0},{"x":1042,"y":489,"score":36,"level":0},{"x":1094,"y":489,"score":76,"level":0},{"x":1096,"y":489,"score":70,"level":0},{"x":1106,"y":489,"score":32,"level":0},{"x":1162,"y":489,"score":138,"level":0},{"x":1209,"y":489,"score":103,"level":0},{"x":1218,"y":489,"score":219,"level":0},{"x":1233,"y":489,"score":89,"level":0},{"x":1375,"y":489,"score":29,"level":0},{"x":1381,"y":489,"score":151,"level":0},{"x":1425,"y":489,"score":104,"level":0},{"x":1443,"y":489,"score":94,"level":0},{"x":1453,"y":489,"score":29,"level":0},{"x":1482,"y":489,"score":49,"level":0},{"x":436,"y":490,"score":130,"level":0},{"x":580,"y":490,"score":50,"level":0},{"x":590,"y":490,"score":146,"level":0},{"x":637,"y":490,"score":71,"level":0},{"x":715,"y":490,"score":92,"level":0},{"x":875,"y":490,"score":137,"level":0},{"x":946,"y":490,"score":182,"level":0},{"x":984,"y":490,"score":52,"level":0},{"x":1045,"y":490,"score":34,"level":0},{"x":1047,"y":490,"score":37,"level":0},{"x":1104,"y":490,"score":62,"level":0},{"x":1175,"y":490,"score":40,"level":0},{"x":1180,"y":490,"score":124,"level":0},{"x":1337,"y":490,"score":38,"level":0},{"x":1348,"y":490,"score":36,"level":0},{"x":1360,"y":490,"score":48,"level":0},{"x":391,"y":491,"score":83,"level":0},{"x":393,"y":491,"score":83,"level":0},{"x":398,"y":491,"score":95,"level":0},{"x":486,"y":491,"score":58,"level":0},{"x":519,"y":491,"score":47,"level":0},{"x":574,"y":491,"score":52,"level":0},{"x":673,"y":491,"score":98,"level":0},{"x":700,"y":491,"score":98,"level":0},{"x":730,"y":491,"score":83,"level":0},{"x":740,"y":491,"score":61,"level":0},{"x":752,"y":491,"score":68,"level":0},{"x":837,"y":491,"score":51,"level":0},{"x":902,"y":491,"score":93,"level":0},{"x":934,"y":491,"score":116,"level":0},{"x":1075,"y":491,"score":64,"level":0},{"x":1083,"y":491,"score":146,"level":0},{"x":1142,"y":491,"score":44,"level":0},{"x":1262,"y":491,"score":193,"level":0},{"x":1448,"y":491,"score":203,"level":0},{"x":1456,"y":491,"score":50,"level":0},{"x":1466,"y":491,"score":57,"level":0},{"x":442,"y":492,"score":31,"level":0},{"x":475,"y":492,"score":109,"level":0},{"x":493,"y":492,"score":158,"level":0},{"x":653,"y":492,"score":68,"level":0},{"x":662,"y":492,"score":119,"level":0},{"x":735,"y":492,"score":90,"level":0},{"x":849,"y":492,"score":34,"level":0},{"x":868,"y":492,"score":84,"level":0},{"x":880,"y":492,"score":99,"level":0},{"x":940,"y":492,"score":37,"level":0},{"x":984,"y":492,"score":67,"level":0},{"x":1061,"y":492,"score":27,"level":0},{"x":1088,"y":492,"score":69,"level":0},{"x":1113,"y":492,"score":70,"level":0},{"x":1130,"y":492,"score":44,"level":0},{"x":1145,"y":492,"score":78,"level":0},{"x":1164,"y":492,"score":56,"level":0},{"x":1189,"y":492,"score":44,"level":0},{"x":1241,"y":492,"score":32,"level":0},{"x":1321,"y":492,"score":61,"level":0},{"x":1461,"y":492,"score":39,"level":0},{"x":1486,"y":492,"score":38,"level":0},{"x":377,"y":493,"score":49,"level":0},{"x":382,"y":493,"score":60,"level":0},{"x":527,"y":493,"score":138,"level":0},{"x":637,"y":493,"score":31,"level":0},{"x":682,"y":493,"score":43,"level":0},{"x":705,"y":493,"score":53,"level":0},{"x":757,"y":493,"score":48,"level":0},{"x":823,"y":493,"score":29,"level":0},{"x":911,"y":493,"score":63,"level":0},{"x":915,"y":493,"score":45,"level":0},{"x":994,"y":493,"score":48,"level":0},{"x":1036,"y":493,"score":101,"level":0},{"x":1069,"y":493,"score":101,"level":0},{"x":1180,"y":493,"score":88,"level":0},{"x":1186,"y":493,"score":69,"level":0},{"x":1209,"y":493,"score":89,"level":0},{"x":1424,"y":493,"score":47,"level":0},{"x":413,"y":494,"score":139,"level":0},{"x":429,"y":494,"score":70,"level":0},{"x":506,"y":494,"score":107,"level":0},{"x":543,"y":494,"score":90,"level":0},{"x":570,"y":494,"score":131,"level":0},{"x":575,"y":494,"score":48,"level":0},{"x":582,"y":494,"score":41,"level":0},{"x":627,"y":494,"score":89,"level":0},{"x":633,"y":494,"score":33,"level":0},{"x":677,"y":494,"score":79,"level":0},{"x":691,"y":494,"score":109,"level":0},{"x":696,"y":494,"score":36,"level":0},{"x":751,"y":494,"score":32,"level":0},{"x":928,"y":494,"score":40,"level":0},{"x":1055,"y":494,"score":183,"level":0},{"x":1326,"y":494,"score":98,"level":0},{"x":1374,"y":494,"score":82,"level":0},{"x":1431,"y":494,"score":48,"level":0},{"x":405,"y":495,"score":92,"level":0},{"x":515,"y":495,"score":94,"level":0},{"x":541,"y":495,"score":82,"level":0},{"x":710,"y":495,"score":66,"level":0},{"x":720,"y":495,"score":95,"level":0},{"x":725,"y":495,"score":57,"level":0},{"x":734,"y":495,"score":96,"level":0},{"x":854,"y":495,"score":91,"level":0},{"x":906,"y":495,"score":79,"level":0},{"x":986,"y":495,"score":70,"level":0},{"x":991,"y":495,"score":40,"level":0},{"x":1090,"y":495,"score":77,"level":0},{"x":1099,"y":495,"score":88,"level":0},{"x":1112,"y":495,"score":36,"level":0},{"x":1126,"y":495,"score":43,"level":0},{"x":1204,"y":495,"score":228,"level":0},{"x":1212,"y":495,"score":51,"level":0},{"x":1217,"y":495,"score":183,"level":0},{"x":1335,"y":495,"score":41,"level":0},{"x":1459,"y":495,"score":38,"level":0},{"x":1465,"y":495,"score":42,"level":0},{"x":463,"y":496,"score":71,"level":0},{"x":520,"y":496,"score":51,"level":0},{"x":669,"y":496,"score":60,"level":0},{"x":782,"y":496,"score":35,"level":0},{"x":790,"y":496,"score":29,"level":0},{"x":800,"y":496,"score":81,"level":0},{"x":849,"y":496,"score":30,"level":0},{"x":860,"y":496,"score":162,"level":0},{"x":894,"y":496,"score":119,"level":0},{"x":953,"y":496,"score":30,"level":0},{"x":1006,"y":496,"score":172,"level":0},{"x":1014,"y":496,"score":53,"level":0},{"x":1050,"y":496,"score":37,"level":0},{"x":1075,"y":496,"score":128,"level":0},{"x":1083,"y":496,"score":48,"level":0},{"x":1129,"y":496,"score":29,"level":0},{"x":1135,"y":496,"score":80,"level":0},{"x":1159,"y":496,"score":108,"level":0},{"x":1174,"y":496,"score":35,"level":0},{"x":1179,"y":496,"score":28,"level":0},{"x":1188,"y":496,"score":72,"level":0},{"x":1374,"y":496,"score":78,"level":0},{"x":1417,"y":496,"score":76,"level":0},{"x":1430,"y":496,"score":90,"level":0},{"x":1489,"y":496,"score":82,"level":0},{"x":405,"y":497,"score":116,"level":0},{"x":416,"y":497,"score":129,"level":0},{"x":425,"y":497,"score":31,"level":0},{"x":437,"y":497,"score":38,"level":0},{"x":566,"y":497,"score":40,"level":0},{"x":632,"y":497,"score":35,"level":0},{"x":655,"y":497,"score":46,"level":0},{"x":660,"y":497,"score":88,"level":0},{"x":750,"y":497,"score":39,"level":0},{"x":752,"y":497,"score":30,"level":0},{"x":834,"y":497,"score":98,"level":0},{"x":839,"y":497,"score":27,"level":0},{"x":868,"y":497,"score":59,"level":0},{"x":881,"y":497,"score":63,"level":0},{"x":1001,"y":497,"score":101,"level":0},{"x":1093,"y":497,"score":33,"level":0},{"x":1105,"y":497,"score":72,"level":0},{"x":1142,"y":497,"score":174,"level":0},{"x":1183,"y":497,"score":26,"level":0},{"x":1193,"y":497,"score":40,"level":0},{"x":1238,"y":497,"score":158,"level":0},{"x":1256,"y":497,"score":83,"level":0},{"x":1270,"y":497,"score":156,"level":0},{"x":1355,"y":497,"score":51,"level":0},{"x":1448,"y":497,"score":63,"level":0},{"x":1454,"y":497,"score":64,"level":0},{"x":1460,"y":497,"score":82,"level":0},{"x":1466,"y":497,"score":70,"level":0},{"x":1485,"y":497,"score":48,"level":0},{"x":386,"y":498,"score":118,"level":0},{"x":391,"y":498,"score":104,"level":0},{"x":486,"y":498,"score":32,"level":0},{"x":577,"y":498,"score":83,"level":0},{"x":670,"y":498,"score":64,"level":0},{"x":695,"y":498,"score":35,"level":0},{"x":708,"y":498,"score":32,"level":0},{"x":756,"y":498,"score":54,"level":0},{"x":776,"y":498,"score":46,"level":0},{"x":783,"y":498,"score":50,"level":0},{"x":829,"y":498,"score":77,"level":0},{"x":886,"y":498,"score":73,"level":0},{"x":902,"y":498,"score":80,"level":0},{"x":917,"y":498,"score":47,"level":0},{"x":929,"y":498,"score":90,"level":0},{"x":985,"y":498,"score":52,"level":0},{"x":1163,"y":498,"score":55,"level":0},{"x":1198,"y":498,"score":118,"level":0},{"x":1316,"y":498,"score":77,"level":0},{"x":1321,"y":498,"score":92,"level":0},{"x":1362,"y":498,"score":32,"level":0},{"x":1437,"y":498,"score":62,"level":0},{"x":398,"y":499,"score":64,"level":0},{"x":467,"y":499,"score":144,"level":0},{"x":493,"y":499,"score":38,"level":0},{"x":499,"y":499,"score":115,"level":0},{"x":532,"y":499,"score":47,"level":0},{"x":572,"y":499,"score":208,"level":0},{"x":638,"y":499,"score":136,"level":0},{"x":677,"y":499,"score":51,"level":0},{"x":684,"y":499,"score":199,"level":0},{"x":789,"y":499,"score":28,"level":0},{"x":812,"y":499,"score":37,"level":0},{"x":817,"y":499,"score":84,"level":0},{"x":957,"y":499,"score":32,"level":0},{"x":1040,"y":499,"score":41,"level":0},{"x":1045,"y":499,"score":34,"level":0},{"x":1065,"y":499,"score":240,"level":0},{"x":1142,"y":499,"score":146,"level":0},{"x":1147,"y":499,"score":70,"level":0},{"x":1227,"y":499,"score":57,"level":0},{"x":1289,"y":499,"score":70,"level":0},{"x":1338,"y":499,"score":39,"level":0},{"x":1345,"y":499,"score":82,"level":0},{"x":1367,"y":499,"score":31,"level":0},{"x":1374,"y":499,"score":36,"level":0},{"x":1412,"y":499,"score":46,"level":0},{"x":1417,"y":499,"score":65,"level":0},{"x":1432,"y":499,"score":70,"level":0},{"x":1457,"y":499,"score":57,"level":0},{"x":1464,"y":499,"score":50,"level":0},{"x":1470,"y":499,"score":100,"level":0},{"x":473,"y":500,"score":27,"level":0},{"x":526,"y":500,"score":28,"level":0},{"x":541,"y":500,"score":31,"level":0},{"x":561,"y":500,"score":85,"level":0},{"x":615,"y":500,"score":37,"level":0},{"x":628,"y":500,"score":148,"level":0},{"x":649,"y":500,"score":54,"level":0},{"x":651,"y":500,"score":57,"level":0},{"x":689,"y":500,"score":50,"level":0},{"x":720,"y":500,"score":58,"level":0},{"x":725,"y":500,"score":46,"level":0},{"x":850,"y":500,"score":31,"level":0},{"x":859,"y":500,"score":28,"level":0},{"x":876,"y":500,"score":160,"level":0},{"x":896,"y":500,"score":157,"level":0},{"x":902,"y":500,"score":94,"level":0},{"x":982,"y":500,"score":133,"level":0},{"x":993,"y":500,"score":131,"level":0},{"x":1013,"y":500,"score":76,"level":0},{"x":1055,"y":500,"score":136,"level":0},{"x":1080,"y":500,"score":118,"level":0},{"x":1103,"y":500,"score":38,"level":0},{"x":1205,"y":500,"score":198,"level":0},{"x":1269,"y":500,"score":99,"level":0},{"x":1335,"y":500,"score":26,"level":0},{"x":1377,"y":500,"score":40,"level":0},{"x":1383,"y":500,"score":46,"level":0},{"x":476,"y":501,"score":40,"level":0},{"x":487,"y":501,"score":51,"level":0},{"x":514,"y":501,"score":40,"level":0},{"x":577,"y":501,"score":44,"level":0},{"x":582,"y":501,"score":27,"level":0},{"x":702,"y":501,"score":60,"level":0},{"x":732,"y":501,"score":66,"level":0},{"x":749,"y":501,"score":53,"level":0},{"x":799,"y":501,"score":54,"level":0},{"x":894,"y":501,"score":112,"level":0},{"x":966,"y":501,"score":53,"level":0},{"x":1043,"y":501,"score":26,"level":0},{"x":1051,"y":501,"score":72,"level":0},{"x":1075,"y":501,"score":145,"level":0},{"x":1088,"y":501,"score":63,"level":0},{"x":1118,"y":501,"score":50,"level":0},{"x":1120,"y":501,"score":55,"level":0},{"x":1167,"y":501,"score":172,"level":0},{"x":1180,"y":501,"score":142,"level":0},{"x":1185,"y":501,"score":37,"level":0},{"x":1196,"y":501,"score":208,"level":0},{"x":1244,"y":501,"score":92,"level":0},{"x":1351,"y":501,"score":61,"level":0},{"x":1426,"y":501,"score":69,"level":0},{"x":382,"y":502,"score":64,"level":0},{"x":399,"y":502,"score":86,"level":0},{"x":413,"y":502,"score":83,"level":0},{"x":430,"y":502,"score":42,"level":0},{"x":481,"y":502,"score":166,"level":0},{"x":503,"y":502,"score":182,"level":0},{"x":508,"y":502,"score":88,"level":0},{"x":536,"y":502,"score":49,"level":0},{"x":556,"y":502,"score":82,"level":0},{"x":655,"y":502,"score":86,"level":0},{"x":767,"y":502,"score":28,"level":0},{"x":864,"y":502,"score":109,"level":0},{"x":944,"y":502,"score":88,"level":0},{"x":993,"y":502,"score":32,"level":0},{"x":1109,"y":502,"score":35,"level":0},{"x":1112,"y":502,"score":50,"level":0},{"x":1130,"y":502,"score":149,"level":0},{"x":1139,"y":502,"score":66,"level":0},{"x":1249,"y":502,"score":182,"level":0},{"x":1419,"y":502,"score":59,"level":0},{"x":435,"y":503,"score":46,"level":0},{"x":464,"y":503,"score":84,"level":0},{"x":476,"y":503,"score":81,"level":0},{"x":523,"y":503,"score":46,"level":0},{"x":550,"y":503,"score":53,"level":0},{"x":560,"y":503,"score":62,"level":0},{"x":648,"y":503,"score":47,"level":0},{"x":683,"y":503,"score":64,"level":0},{"x":773,"y":503,"score":70,"level":0},{"x":782,"y":503,"score":28,"level":0},{"x":815,"y":503,"score":84,"level":0},{"x":859,"y":503,"score":26,"level":0},{"x":886,"y":503,"score":141,"level":0},{"x":969,"y":503,"score":109,"level":0},{"x":1096,"y":503,"score":91,"level":0},{"x":1106,"y":503,"score":60,"level":0},{"x":1141,"y":503,"score":33,"level":0},{"x":1190,"y":503,"score":93,"level":0},{"x":1269,"y":503,"score":38,"level":0},{"x":1279,"y":503,"score":34,"level":0},{"x":1406,"y":503,"score":30,"level":0},{"x":1444,"y":503,"score":170,"level":0},{"x":1461,"y":503,"score":48,"level":0},{"x":409,"y":504,"score":107,"level":0},{"x":678,"y":504,"score":202,"level":0},{"x":697,"y":504,"score":41,"level":0},{"x":759,"y":504,"score":65,"level":0},{"x":793,"y":504,"score":48,"level":0},{"x":821,"y":504,"score":59,"level":0},{"x":928,"y":504,"score":124,"level":0},{"x":978,"y":504,"score":45,"level":0},{"x":989,"y":504,"score":126,"level":0},{"x":1025,"y":504,"score":35,"level":0},{"x":1043,"y":504,"score":66,"level":0},{"x":1174,"y":504,"score":67,"level":0},{"x":1236,"y":504,"score":72,"level":0},{"x":1371,"y":504,"score":39,"level":0},{"x":1426,"y":504,"score":31,"level":0},{"x":400,"y":505,"score":45,"level":0},{"x":424,"y":505,"score":55,"level":0},{"x":505,"y":505,"score":44,"level":0},{"x":529,"y":505,"score":40,"level":0},{"x":579,"y":505,"score":34,"level":0},{"x":639,"y":505,"score":72,"level":0},{"x":771,"y":505,"score":70,"level":0},{"x":773,"y":505,"score":59,"level":0},{"x":785,"y":505,"score":30,"level":0},{"x":830,"y":505,"score":75,"level":0},{"x":876,"y":505,"score":36,"level":0},{"x":912,"y":505,"score":27,"level":0},{"x":938,"y":505,"score":36,"level":0},{"x":948,"y":505,"score":76,"level":0},{"x":955,"y":505,"score":195,"level":0},{"x":1036,"y":505,"score":98,"level":0},{"x":1046,"y":505,"score":32,"level":0},{"x":1119,"y":505,"score":54,"level":0},{"x":1135,"y":505,"score":28,"level":0},{"x":1183,"y":505,"score":57,"level":0},{"x":1379,"y":505,"score":76,"level":0},{"x":1429,"y":505,"score":48,"level":0},{"x":393,"y":506,"score":92,"level":0},{"x":432,"y":506,"score":60,"level":0},{"x":519,"y":506,"score":28,"level":0},{"x":563,"y":506,"score":66,"level":0},{"x":627,"y":506,"score":162,"level":0},{"x":654,"y":506,"score":142,"level":0},{"x":664,"y":506,"score":143,"level":0},{"x":718,"y":506,"score":37,"level":0},{"x":840,"y":506,"score":33,"level":0},{"x":843,"y":506,"score":56,"level":0},{"x":868,"y":506,"score":28,"level":0},{"x":879,"y":506,"score":46,"level":0},{"x":907,"y":506,"score":151,"level":0},{"x":921,"y":506,"score":124,"level":0},{"x":975,"y":506,"score":60,"level":0},{"x":1000,"y":506,"score":114,"level":0},{"x":1010,"y":506,"score":66,"level":0},{"x":1033,"y":506,"score":39,"level":0},{"x":1039,"y":506,"score":72,"level":0},{"x":1050,"y":506,"score":168,"level":0},{"x":1186,"y":506,"score":31,"level":0},{"x":1205,"y":506,"score":69,"level":0},{"x":1288,"y":506,"score":278,"level":0},{"x":1297,"y":506,"score":46,"level":0},{"x":1322,"y":506,"score":81,"level":0},{"x":1333,"y":506,"score":45,"level":0},{"x":1342,"y":506,"score":48,"level":0},{"x":1360,"y":506,"score":48,"level":0},{"x":488,"y":507,"score":49,"level":0},{"x":543,"y":507,"score":63,"level":0},{"x":573,"y":507,"score":53,"level":0},{"x":737,"y":507,"score":99,"level":0},{"x":764,"y":507,"score":54,"level":0},{"x":791,"y":507,"score":27,"level":0},{"x":962,"y":507,"score":96,"level":0},{"x":1083,"y":507,"score":103,"level":0},{"x":1108,"y":507,"score":61,"level":0},{"x":1147,"y":507,"score":100,"level":0},{"x":1158,"y":507,"score":48,"level":0},{"x":1161,"y":507,"score":54,"level":0},{"x":1220,"y":507,"score":212,"level":0},{"x":1228,"y":507,"score":99,"level":0},{"x":1270,"y":507,"score":64,"level":0},{"x":1317,"y":507,"score":48,"level":0},{"x":1424,"y":507,"score":78,"level":0},{"x":429,"y":508,"score":53,"level":0},{"x":501,"y":508,"score":49,"level":0},{"x":525,"y":508,"score":56,"level":0},{"x":571,"y":508,"score":51,"level":0},{"x":609,"y":508,"score":150,"level":0},{"x":647,"y":508,"score":117,"level":0},{"x":702,"y":508,"score":44,"level":0},{"x":722,"y":508,"score":40,"level":0},{"x":743,"y":508,"score":64,"level":0},{"x":853,"y":508,"score":76,"level":0},{"x":862,"y":508,"score":194,"level":0},{"x":936,"y":508,"score":111,"level":0},{"x":999,"y":508,"score":136,"level":0},{"x":1007,"y":508,"score":76,"level":0},{"x":1013,"y":508,"score":30,"level":0},{"x":1033,"y":508,"score":39,"level":0},{"x":1095,"y":508,"score":76,"level":0},{"x":1097,"y":508,"score":56,"level":0},{"x":1167,"y":508,"score":101,"level":0},{"x":1193,"y":508,"score":29,"level":0},{"x":1203,"y":508,"score":35,"level":0},{"x":1261,"y":508,"score":65,"level":0},{"x":1279,"y":508,"score":103,"level":0},{"x":1372,"y":508,"score":31,"level":0},{"x":1449,"y":508,"score":105,"level":0},{"x":508,"y":509,"score":28,"level":0},{"x":546,"y":509,"score":40,"level":0},{"x":707,"y":509,"score":39,"level":0},{"x":713,"y":509,"score":135,"level":0},{"x":775,"y":509,"score":28,"level":0},{"x":930,"y":509,"score":78,"level":0},{"x":994,"y":509,"score":62,"level":0},{"x":1018,"y":509,"score":52,"level":0},{"x":1023,"y":509,"score":34,"level":0},{"x":1130,"y":509,"score":93,"level":0},{"x":1173,"y":509,"score":71,"level":0},{"x":1184,"y":509,"score":29,"level":0},{"x":1189,"y":509,"score":100,"level":0},{"x":1214,"y":509,"score":29,"level":0},{"x":1250,"y":509,"score":126,"level":0},{"x":1266,"y":509,"score":30,"level":0},{"x":1428,"y":509,"score":28,"level":0},{"x":1469,"y":509,"score":114,"level":0},{"x":459,"y":510,"score":58,"level":0},{"x":491,"y":510,"score":39,"level":0},{"x":498,"y":510,"score":52,"level":0},{"x":553,"y":510,"score":113,"level":0},{"x":641,"y":510,"score":87,"level":0},{"x":659,"y":510,"score":27,"level":0},{"x":692,"y":510,"score":95,"level":0},{"x":697,"y":510,"score":154,"level":0},{"x":727,"y":510,"score":146,"level":0},{"x":738,"y":510,"score":65,"level":0},{"x":761,"y":510,"score":33,"level":0},{"x":794,"y":510,"score":77,"level":0},{"x":815,"y":510,"score":139,"level":0},{"x":874,"y":510,"score":29,"level":0},{"x":1007,"y":510,"score":100,"level":0},{"x":1037,"y":510,"score":63,"level":0},{"x":1045,"y":510,"score":60,"level":0},{"x":1165,"y":510,"score":98,"level":0},{"x":1374,"y":510,"score":50,"level":0},{"x":1379,"y":510,"score":29,"level":0},{"x":1416,"y":510,"score":54,"level":0},{"x":1444,"y":510,"score":146,"level":0},{"x":387,"y":511,"score":112,"level":0},{"x":465,"y":511,"score":119,"level":0},{"x":522,"y":511,"score":67,"level":0},{"x":529,"y":511,"score":68,"level":0},{"x":681,"y":511,"score":56,"level":0},{"x":687,"y":511,"score":51,"level":0},{"x":783,"y":511,"score":45,"level":0},{"x":797,"y":511,"score":49,"level":0},{"x":882,"y":511,"score":137,"level":0},{"x":941,"y":511,"score":113,"level":0},{"x":1010,"y":511,"score":63,"level":0},{"x":1027,"y":511,"score":74,"level":0},{"x":1069,"y":511,"score":78,"level":0},{"x":1078,"y":511,"score":35,"level":0},{"x":1115,"y":511,"score":41,"level":0},{"x":1135,"y":511,"score":246,"level":0},{"x":1242,"y":511,"score":40,"level":0},{"x":1273,"y":511,"score":143,"level":0},{"x":1293,"y":511,"score":26,"level":0},{"x":1303,"y":511,"score":59,"level":0},{"x":1305,"y":511,"score":64,"level":0},{"x":1312,"y":511,"score":116,"level":0},{"x":1352,"y":511,"score":35,"level":0},{"x":1355,"y":511,"score":54,"level":0},{"x":1370,"y":511,"score":32,"level":0},{"x":1376,"y":511,"score":55,"level":0},{"x":1381,"y":511,"score":78,"level":0},{"x":1421,"y":511,"score":44,"level":0},{"x":1429,"y":511,"score":27,"level":0},{"x":1433,"y":511,"score":51,"level":0},{"x":1438,"y":511,"score":123,"level":0},{"x":1455,"y":511,"score":50,"level":0},{"x":1462,"y":511,"score":87,"level":0},{"x":394,"y":512,"score":90,"level":0},{"x":409,"y":512,"score":143,"level":0},{"x":533,"y":512,"score":83,"level":0},{"x":561,"y":512,"score":174,"level":0},{"x":627,"y":512,"score":46,"level":0},{"x":636,"y":512,"score":108,"level":0},{"x":657,"y":512,"score":35,"level":0},{"x":667,"y":512,"score":119,"level":0},{"x":674,"y":512,"score":66,"level":0},{"x":734,"y":512,"score":71,"level":0},{"x":749,"y":512,"score":78,"level":0},{"x":789,"y":512,"score":29,"level":0},{"x":804,"y":512,"score":106,"level":0},{"x":823,"y":512,"score":165,"level":0},{"x":842,"y":512,"score":29,"level":0},{"x":946,"y":512,"score":127,"level":0},{"x":962,"y":512,"score":76,"level":0},{"x":1088,"y":512,"score":135,"level":0},{"x":1117,"y":512,"score":92,"level":0},{"x":1178,"y":512,"score":28,"level":0},{"x":1192,"y":512,"score":56,"level":0},{"x":1288,"y":512,"score":26,"level":0},{"x":1330,"y":512,"score":75,"level":0},{"x":631,"y":513,"score":78,"level":0},{"x":744,"y":513,"score":85,"level":0},{"x":854,"y":513,"score":70,"level":0},{"x":867,"y":513,"score":35,"level":0},{"x":932,"y":513,"score":55,"level":0},{"x":979,"y":513,"score":201,"level":0},{"x":1020,"y":513,"score":42,"level":0},{"x":1045,"y":513,"score":72,"level":0},{"x":1098,"y":513,"score":106,"level":0},{"x":1106,"y":513,"score":187,"level":0},{"x":1355,"y":513,"score":62,"level":0},{"x":1372,"y":513,"score":34,"level":0},{"x":1427,"y":513,"score":47,"level":0},{"x":1433,"y":513,"score":44,"level":0},{"x":1455,"y":513,"score":35,"level":0},{"x":423,"y":514,"score":138,"level":0},{"x":524,"y":514,"score":26,"level":0},{"x":547,"y":514,"score":31,"level":0},{"x":576,"y":514,"score":139,"level":0},{"x":627,"y":514,"score":44,"level":0},{"x":640,"y":514,"score":50,"level":0},{"x":673,"y":514,"score":76,"level":0},{"x":694,"y":514,"score":45,"level":0},{"x":707,"y":514,"score":233,"level":0},{"x":712,"y":514,"score":41,"level":0},{"x":785,"y":514,"score":51,"level":0},{"x":787,"y":514,"score":47,"level":0},{"x":836,"y":514,"score":28,"level":0},{"x":985,"y":514,"score":54,"level":0},{"x":1017,"y":514,"score":76,"level":0},{"x":1038,"y":514,"score":114,"level":0},{"x":1162,"y":514,"score":64,"level":0},{"x":1219,"y":514,"score":71,"level":0},{"x":404,"y":515,"score":259,"level":0},{"x":414,"y":515,"score":101,"level":0},{"x":419,"y":515,"score":33,"level":0},{"x":460,"y":515,"score":106,"level":0},{"x":476,"y":515,"score":46,"level":0},{"x":513,"y":515,"score":90,"level":0},{"x":518,"y":515,"score":49,"level":0},{"x":532,"y":515,"score":31,"level":0},{"x":689,"y":515,"score":66,"level":0},{"x":699,"y":515,"score":86,"level":0},{"x":809,"y":515,"score":109,"level":0},{"x":861,"y":515,"score":104,"level":0},{"x":995,"y":515,"score":65,"level":0},{"x":1000,"y":515,"score":118,"level":0},{"x":1101,"y":515,"score":73,"level":0},{"x":1138,"y":515,"score":110,"level":0},{"x":1277,"y":515,"score":97,"level":0},{"x":1332,"y":515,"score":55,"level":0},{"x":1349,"y":515,"score":31,"level":0},{"x":1424,"y":515,"score":36,"level":0},{"x":1481,"y":515,"score":60,"level":0},{"x":377,"y":516,"score":33,"level":0},{"x":507,"y":516,"score":62,"level":0},{"x":526,"y":516,"score":75,"level":0},{"x":538,"y":516,"score":104,"level":0},{"x":551,"y":516,"score":127,"level":0},{"x":577,"y":516,"score":100,"level":0},{"x":583,"y":516,"score":41,"level":0},{"x":644,"y":516,"score":93,"level":0},{"x":651,"y":516,"score":96,"level":0},{"x":754,"y":516,"score":84,"level":0},{"x":756,"y":516,"score":35,"level":0},{"x":814,"y":516,"score":106,"level":0},{"x":844,"y":516,"score":68,"level":0},{"x":872,"y":516,"score":37,"level":0},{"x":956,"y":516,"score":108,"level":0},{"x":1007,"y":516,"score":102,"level":0},{"x":1013,"y":516,"score":47,"level":0},{"x":1028,"y":516,"score":140,"level":0},{"x":1127,"y":516,"score":28,"level":0},{"x":1132,"y":516,"score":108,"level":0},{"x":1144,"y":516,"score":29,"level":0},{"x":1174,"y":516,"score":56,"level":0},{"x":1207,"y":516,"score":28,"level":0},{"x":1293,"y":516,"score":28,"level":0},{"x":1354,"y":516,"score":41,"level":0},{"x":1371,"y":516,"score":32,"level":0},{"x":1402,"y":516,"score":34,"level":0},{"x":1440,"y":516,"score":100,"level":0},{"x":1450,"y":516,"score":47,"level":0},{"x":428,"y":517,"score":104,"level":0},{"x":436,"y":517,"score":131,"level":0},{"x":636,"y":517,"score":81,"level":0},{"x":656,"y":517,"score":36,"level":0},{"x":685,"y":517,"score":33,"level":0},{"x":717,"y":517,"score":96,"level":0},{"x":723,"y":517,"score":106,"level":0},{"x":732,"y":517,"score":126,"level":0},{"x":769,"y":517,"score":135,"level":0},{"x":801,"y":517,"score":66,"level":0},{"x":842,"y":517,"score":42,"level":0},{"x":888,"y":517,"score":41,"level":0},{"x":917,"y":517,"score":46,"level":0},{"x":945,"y":517,"score":36,"level":0},{"x":969,"y":517,"score":104,"level":0},{"x":1044,"y":517,"score":42,"level":0},{"x":1239,"y":517,"score":113,"level":0},{"x":1339,"y":517,"score":27,"level":0},{"x":1346,"y":517,"score":27,"level":0},{"x":1365,"y":517,"score":48,"level":0},{"x":1375,"y":517,"score":32,"level":0},{"x":1379,"y":517,"score":29,"level":0},{"x":1455,"y":517,"score":32,"level":0},{"x":1467,"y":517,"score":88,"level":0},{"x":395,"y":518,"score":40,"level":0},{"x":433,"y":518,"score":76,"level":0},{"x":473,"y":518,"score":50,"level":0},{"x":503,"y":518,"score":28,"level":0},{"x":556,"y":518,"score":47,"level":0},{"x":562,"y":518,"score":107,"level":0},{"x":624,"y":518,"score":57,"level":0},{"x":648,"y":518,"score":30,"level":0},{"x":671,"y":518,"score":29,"level":0},{"x":680,"y":518,"score":52,"level":0},{"x":748,"y":518,"score":93,"level":0},{"x":789,"y":518,"score":60,"level":0},{"x":821,"y":518,"score":50,"level":0},{"x":852,"y":518,"score":48,"level":0},{"x":1023,"y":518,"score":55,"level":0},{"x":1060,"y":518,"score":54,"level":0},{"x":1097,"y":518,"score":156,"level":0},{"x":1104,"y":518,"score":62,"level":0},{"x":1186,"y":518,"score":80,"level":0},{"x":1232,"y":518,"score":78,"level":0},{"x":1355,"y":518,"score":52,"level":0},{"x":1460,"y":518,"score":46,"level":0},{"x":382,"y":519,"score":60,"level":0},{"x":481,"y":519,"score":160,"level":0},{"x":506,"y":519,"score":42,"level":0},{"x":676,"y":519,"score":94,"level":0},{"x":696,"y":519,"score":56,"level":0},{"x":703,"y":519,"score":88,"level":0},{"x":756,"y":519,"score":40,"level":0},{"x":830,"y":519,"score":37,"level":0},{"x":928,"y":519,"score":71,"level":0},{"x":936,"y":519,"score":59,"level":0},{"x":976,"y":519,"score":56,"level":0},{"x":1019,"y":519,"score":28,"level":0},{"x":1035,"y":519,"score":43,"level":0},{"x":1079,"y":519,"score":116,"level":0},{"x":1137,"y":519,"score":57,"level":0},{"x":1201,"y":519,"score":180,"level":0},{"x":1273,"y":519,"score":50,"level":0},{"x":1426,"y":519,"score":38,"level":0},{"x":1440,"y":519,"score":127,"level":0},{"x":1472,"y":519,"score":47,"level":0},{"x":399,"y":520,"score":68,"level":0},{"x":404,"y":520,"score":166,"level":0},{"x":412,"y":520,"score":48,"level":0},{"x":510,"y":520,"score":50,"level":0},{"x":652,"y":520,"score":39,"level":0},{"x":693,"y":520,"score":28,"level":0},{"x":710,"y":520,"score":70,"level":0},{"x":753,"y":520,"score":31,"level":0},{"x":785,"y":520,"score":39,"level":0},{"x":954,"y":520,"score":50,"level":0},{"x":1098,"y":520,"score":75,"level":0},{"x":1107,"y":520,"score":41,"level":0},{"x":1151,"y":520,"score":50,"level":0},{"x":1159,"y":520,"score":102,"level":0},{"x":1163,"y":520,"score":90,"level":0},{"x":1208,"y":520,"score":83,"level":0},{"x":1332,"y":520,"score":80,"level":0},{"x":1447,"y":520,"score":138,"level":0},{"x":456,"y":521,"score":66,"level":0},{"x":530,"y":521,"score":53,"level":0},{"x":557,"y":521,"score":76,"level":0},{"x":611,"y":521,"score":58,"level":0},{"x":662,"y":521,"score":129,"level":0},{"x":686,"y":521,"score":134,"level":0},{"x":721,"y":521,"score":77,"level":0},{"x":864,"y":521,"score":46,"level":0},{"x":946,"y":521,"score":101,"level":0},{"x":964,"y":521,"score":148,"level":0},{"x":1028,"y":521,"score":27,"level":0},{"x":1052,"y":521,"score":196,"level":0},{"x":1081,"y":521,"score":111,"level":0},{"x":1119,"y":521,"score":28,"level":0},{"x":1127,"y":521,"score":36,"level":0},{"x":1138,"y":521,"score":81,"level":0},{"x":1191,"y":521,"score":62,"level":0},{"x":1301,"y":521,"score":45,"level":0},{"x":1326,"y":521,"score":26,"level":0},{"x":1481,"y":521,"score":135,"level":0},{"x":417,"y":522,"score":79,"level":0},{"x":488,"y":522,"score":126,"level":0},{"x":494,"y":522,"score":122,"level":0},{"x":521,"y":522,"score":27,"level":0},{"x":620,"y":522,"score":68,"level":0},{"x":641,"y":522,"score":76,"level":0},{"x":657,"y":522,"score":134,"level":0},{"x":874,"y":522,"score":43,"level":0},{"x":1056,"y":522,"score":69,"level":0},{"x":1092,"y":522,"score":26,"level":0},{"x":1295,"y":522,"score":42,"level":0},{"x":1318,"y":522,"score":56,"level":0},{"x":1430,"y":522,"score":87,"level":0},{"x":1468,"y":522,"score":34,"level":0},{"x":1489,"y":522,"score":90,"level":0},{"x":579,"y":523,"score":147,"level":0},{"x":634,"y":523,"score":298,"level":0},{"x":662,"y":523,"score":90,"level":0},{"x":800,"y":523,"score":82,"level":0},{"x":952,"y":523,"score":38,"level":0},{"x":1005,"y":523,"score":33,"level":0},{"x":1059,"y":523,"score":89,"level":0},{"x":1087,"y":523,"score":94,"level":0},{"x":1215,"y":523,"score":60,"level":0},{"x":1221,"y":523,"score":121,"level":0},{"x":1283,"y":523,"score":39,"level":0},{"x":1444,"y":523,"score":82,"level":0},{"x":426,"y":524,"score":155,"level":0},{"x":470,"y":524,"score":190,"level":0},{"x":477,"y":524,"score":53,"level":0},{"x":550,"y":524,"score":103,"level":0},{"x":624,"y":524,"score":127,"level":0},{"x":648,"y":524,"score":240,"level":0},{"x":667,"y":524,"score":27,"level":0},{"x":677,"y":524,"score":78,"level":0},{"x":740,"y":524,"score":136,"level":0},{"x":757,"y":524,"score":32,"level":0},{"x":789,"y":524,"score":115,"level":0},{"x":936,"y":524,"score":37,"level":0},{"x":1078,"y":524,"score":94,"level":0},{"x":1137,"y":524,"score":119,"level":0},{"x":1270,"y":524,"score":34,"level":0},{"x":1342,"y":524,"score":44,"level":0},{"x":1439,"y":524,"score":30,"level":0},{"x":1467,"y":524,"score":40,"level":0},{"x":410,"y":525,"score":68,"level":0},{"x":442,"y":525,"score":88,"level":0},{"x":462,"y":525,"score":70,"level":0},{"x":504,"y":525,"score":42,"level":0},{"x":511,"y":525,"score":44,"level":0},{"x":513,"y":525,"score":34,"level":0},{"x":585,"y":525,"score":37,"level":0},{"x":747,"y":525,"score":46,"level":0},{"x":753,"y":525,"score":40,"level":0},{"x":776,"y":525,"score":86,"level":0},{"x":1020,"y":525,"score":28,"level":0},{"x":1178,"y":525,"score":29,"level":0},{"x":1199,"y":525,"score":205,"level":0},{"x":1206,"y":525,"score":106,"level":0},{"x":1246,"y":525,"score":32,"level":0},{"x":1326,"y":525,"score":58,"level":0},{"x":1463,"y":525,"score":87,"level":0},{"x":404,"y":526,"score":61,"level":0},{"x":437,"y":526,"score":28,"level":0},{"x":484,"y":526,"score":61,"level":0},{"x":527,"y":526,"score":82,"level":0},{"x":529,"y":526,"score":64,"level":0},{"x":539,"y":526,"score":170,"level":0},{"x":557,"y":526,"score":44,"level":0},{"x":576,"y":526,"score":165,"level":0},{"x":718,"y":526,"score":46,"level":0},{"x":731,"y":526,"score":116,"level":0},{"x":805,"y":526,"score":28,"level":0},{"x":885,"y":526,"score":38,"level":0},{"x":934,"y":526,"score":38,"level":0},{"x":977,"y":526,"score":44,"level":0},{"x":985,"y":526,"score":50,"level":0},{"x":1079,"y":526,"score":49,"level":0},{"x":1120,"y":526,"score":60,"level":0},{"x":1186,"y":526,"score":105,"level":0},{"x":1192,"y":526,"score":131,"level":0},{"x":1350,"y":526,"score":27,"level":0},{"x":500,"y":527,"score":78,"level":0},{"x":516,"y":527,"score":29,"level":0},{"x":641,"y":527,"score":196,"level":0},{"x":688,"y":527,"score":119,"level":0},{"x":696,"y":527,"score":97,"level":0},{"x":837,"y":527,"score":54,"level":0},{"x":867,"y":527,"score":74,"level":0},{"x":890,"y":527,"score":39,"level":0},{"x":964,"y":527,"score":93,"level":0},{"x":1054,"y":527,"score":36,"level":0},{"x":1068,"y":527,"score":40,"level":0},{"x":1092,"y":527,"score":28,"level":0},{"x":1247,"y":527,"score":46,"level":0},{"x":1295,"y":527,"score":41,"level":0},{"x":1302,"y":527,"score":127,"level":0},{"x":1318,"y":527,"score":27,"level":0},{"x":1375,"y":527,"score":33,"level":0},{"x":1414,"y":527,"score":28,"level":0},{"x":1460,"y":527,"score":35,"level":0},{"x":1463,"y":527,"score":94,"level":0},{"x":1470,"y":527,"score":137,"level":0},{"x":474,"y":528,"score":80,"level":0},{"x":582,"y":528,"score":73,"level":0},{"x":619,"y":528,"score":118,"level":0},{"x":708,"y":528,"score":80,"level":0},{"x":782,"y":528,"score":44,"level":0},{"x":852,"y":528,"score":31,"level":0},{"x":859,"y":528,"score":40,"level":0},{"x":898,"y":528,"score":39,"level":0},{"x":953,"y":528,"score":32,"level":0},{"x":1088,"y":528,"score":26,"level":0},{"x":1149,"y":528,"score":33,"level":0},{"x":1273,"y":528,"score":33,"level":0},{"x":1308,"y":528,"score":35,"level":0},{"x":1478,"y":528,"score":113,"level":0},{"x":1482,"y":528,"score":45,"level":0},{"x":493,"y":529,"score":80,"level":0},{"x":849,"y":529,"score":42,"level":0},{"x":978,"y":529,"score":88,"level":0},{"x":1340,"y":529,"score":28,"level":0},{"x":1459,"y":529,"score":31,"level":0},{"x":1488,"y":529,"score":111,"level":0},{"x":427,"y":530,"score":33,"level":0},{"x":510,"y":530,"score":29,"level":0},{"x":514,"y":530,"score":59,"level":0},{"x":580,"y":530,"score":92,"level":0},{"x":628,"y":530,"score":34,"level":0},{"x":905,"y":530,"score":32,"level":0},{"x":1074,"y":530,"score":36,"level":0},{"x":1219,"y":530,"score":31,"level":0},{"x":1296,"y":530,"score":26,"level":0},{"x":1316,"y":530,"score":39,"level":0},{"x":442,"y":531,"score":116,"level":0},{"x":519,"y":531,"score":54,"level":0},{"x":545,"y":531,"score":76,"level":0},{"x":648,"y":531,"score":92,"level":0},{"x":841,"y":531,"score":39,"level":0},{"x":954,"y":531,"score":34,"level":0},{"x":1200,"y":531,"score":41,"level":0},{"x":1223,"y":531,"score":37,"level":0},{"x":1363,"y":531,"score":31,"level":0},{"x":394,"y":532,"score":50,"level":0},{"x":467,"y":532,"score":117,"level":0},{"x":537,"y":532,"score":32,"level":0},{"x":640,"y":532,"score":87,"level":0},{"x":698,"y":532,"score":71,"level":0},{"x":706,"y":532,"score":81,"level":0},{"x":718,"y":532,"score":75,"level":0},{"x":732,"y":532,"score":120,"level":0},{"x":739,"y":532,"score":40,"level":0},{"x":751,"y":532,"score":31,"level":0},{"x":805,"y":532,"score":51,"level":0},{"x":867,"y":532,"score":32,"level":0},{"x":890,"y":532,"score":91,"level":0},{"x":1077,"y":532,"score":26,"level":0},{"x":1262,"y":532,"score":30,"level":0},{"x":1268,"y":532,"score":31,"level":0},{"x":1443,"y":532,"score":128,"level":0},{"x":1469,"y":532,"score":127,"level":0},{"x":448,"y":533,"score":53,"level":0},{"x":500,"y":533,"score":53,"level":0},{"x":690,"y":533,"score":82,"level":0},{"x":852,"y":533,"score":44,"level":0},{"x":864,"y":533,"score":28,"level":0},{"x":870,"y":533,"score":47,"level":0},{"x":899,"y":533,"score":30,"level":0},{"x":1273,"y":533,"score":59,"level":0},{"x":1287,"y":533,"score":83,"level":0},{"x":1356,"y":533,"score":37,"level":0},{"x":1361,"y":533,"score":26,"level":0},{"x":1477,"y":533,"score":133,"level":0},{"x":1483,"y":533,"score":38,"level":0},{"x":443,"y":534,"score":69,"level":0},{"x":492,"y":534,"score":54,"level":0},{"x":573,"y":534,"score":104,"level":0},{"x":674,"y":534,"score":62,"level":0},{"x":743,"y":534,"score":42,"level":0},{"x":775,"y":534,"score":32,"level":0},{"x":780,"y":534,"score":94,"level":0},{"x":786,"y":534,"score":60,"level":0},{"x":849,"y":534,"score":76,"level":0},{"x":856,"y":534,"score":51,"level":0},{"x":890,"y":534,"score":42,"level":0},{"x":942,"y":534,"score":97,"level":0},{"x":1349,"y":534,"score":46,"level":0},{"x":1402,"y":534,"score":28,"level":0},{"x":1417,"y":534,"score":142,"level":0},{"x":1433,"y":534,"score":64,"level":0},{"x":421,"y":535,"score":33,"level":0},{"x":435,"y":535,"score":52,"level":0},{"x":448,"y":535,"score":49,"level":0},{"x":467,"y":535,"score":74,"level":0},{"x":511,"y":535,"score":27,"level":0},{"x":527,"y":535,"score":130,"level":0},{"x":556,"y":535,"score":128,"level":0},{"x":580,"y":535,"score":139,"level":0},{"x":630,"y":535,"score":65,"level":0},{"x":681,"y":535,"score":38,"level":0},{"x":726,"y":535,"score":133,"level":0},{"x":788,"y":535,"score":56,"level":0},{"x":975,"y":535,"score":44,"level":0},{"x":984,"y":535,"score":57,"level":0},{"x":1150,"y":535,"score":191,"level":0},{"x":1156,"y":535,"score":36,"level":0},{"x":1189,"y":535,"score":34,"level":0},{"x":1219,"y":535,"score":27,"level":0},{"x":1303,"y":535,"score":34,"level":0},{"x":1364,"y":535,"score":64,"level":0},{"x":1436,"y":535,"score":34,"level":0},{"x":1469,"y":535,"score":110,"level":0},{"x":1487,"y":535,"score":79,"level":0},{"x":429,"y":536,"score":58,"level":0},{"x":461,"y":536,"score":26,"level":0},{"x":507,"y":536,"score":94,"level":0},{"x":546,"y":536,"score":48,"level":0},{"x":567,"y":536,"score":135,"level":0},{"x":768,"y":536,"score":39,"level":0},{"x":882,"y":536,"score":57,"level":0},{"x":898,"y":536,"score":44,"level":0},{"x":993,"y":536,"score":44,"level":0},{"x":1032,"y":536,"score":64,"level":0},{"x":1217,"y":536,"score":32,"level":0},{"x":1246,"y":536,"score":36,"level":0},{"x":1339,"y":536,"score":54,"level":0},{"x":1429,"y":536,"score":47,"level":0},{"x":1485,"y":536,"score":90,"level":0},{"x":562,"y":537,"score":52,"level":0},{"x":625,"y":537,"score":138,"level":0},{"x":630,"y":537,"score":81,"level":0},{"x":644,"y":537,"score":39,"level":0},{"x":732,"y":537,"score":83,"level":0},{"x":864,"y":537,"score":80,"level":0},{"x":1123,"y":537,"score":81,"level":0},{"x":1327,"y":537,"score":27,"level":0},{"x":1377,"y":537,"score":33,"level":0},{"x":1424,"y":537,"score":56,"level":0},{"x":1433,"y":537,"score":42,"level":0},{"x":1440,"y":537,"score":66,"level":0},{"x":402,"y":538,"score":34,"level":0},{"x":484,"y":538,"score":51,"level":0},{"x":490,"y":538,"score":155,"level":0},{"x":500,"y":538,"score":93,"level":0},{"x":521,"y":538,"score":207,"level":0},{"x":567,"y":538,"score":72,"level":0},{"x":614,"y":538,"score":27,"level":0},{"x":718,"y":538,"score":176,"level":0},{"x":737,"y":538,"score":78,"level":0},{"x":861,"y":538,"score":59,"level":0},{"x":878,"y":538,"score":82,"level":0},{"x":1276,"y":538,"score":95,"level":0},{"x":1479,"y":538,"score":43,"level":0},{"x":405,"y":539,"score":47,"level":0},{"x":413,"y":539,"score":37,"level":0},{"x":590,"y":539,"score":35,"level":0},{"x":633,"y":539,"score":71,"level":0},{"x":649,"y":539,"score":32,"level":0},{"x":763,"y":539,"score":49,"level":0},{"x":783,"y":539,"score":54,"level":0},{"x":799,"y":539,"score":34,"level":0},{"x":804,"y":539,"score":32,"level":0},{"x":849,"y":539,"score":50,"level":0},{"x":855,"y":539,"score":75,"level":0},{"x":998,"y":539,"score":43,"level":0},{"x":1127,"y":539,"score":116,"level":0},{"x":581,"y":540,"score":119,"level":0},{"x":593,"y":540,"score":33,"level":0},{"x":641,"y":540,"score":152,"level":0},{"x":677,"y":540,"score":49,"level":0},{"x":726,"y":540,"score":32,"level":0},{"x":770,"y":540,"score":30,"level":0},{"x":778,"y":540,"score":93,"level":0},{"x":792,"y":540,"score":69,"level":0},{"x":902,"y":540,"score":27,"level":0},{"x":925,"y":540,"score":56,"level":0},{"x":1063,"y":540,"score":26,"level":0},{"x":1140,"y":540,"score":34,"level":0},{"x":1146,"y":540,"score":95,"level":0},{"x":1183,"y":540,"score":36,"level":0},{"x":1268,"y":540,"score":66,"level":0},{"x":1270,"y":540,"score":54,"level":0},{"x":1293,"y":540,"score":77,"level":0},{"x":1342,"y":540,"score":44,"level":0},{"x":1368,"y":540,"score":58,"level":0},{"x":1391,"y":540,"score":27,"level":0},{"x":1465,"y":540,"score":27,"level":0},{"x":1468,"y":540,"score":51,"level":0},{"x":1472,"y":540,"score":57,"level":0},{"x":528,"y":541,"score":81,"level":0},{"x":546,"y":541,"score":27,"level":0},{"x":657,"y":541,"score":30,"level":0},{"x":731,"y":541,"score":69,"level":0},{"x":765,"y":541,"score":27,"level":0},{"x":836,"y":541,"score":108,"level":0},{"x":885,"y":541,"score":51,"level":0},{"x":943,"y":541,"score":97,"level":0},{"x":1154,"y":541,"score":46,"level":0},{"x":1325,"y":541,"score":54,"level":0},{"x":1420,"y":541,"score":56,"level":0},{"x":1486,"y":541,"score":102,"level":0},{"x":443,"y":542,"score":48,"level":0},{"x":564,"y":542,"score":51,"level":0},{"x":582,"y":542,"score":119,"level":0},{"x":608,"y":542,"score":39,"level":0},{"x":652,"y":542,"score":29,"level":0},{"x":706,"y":542,"score":96,"level":0},{"x":711,"y":542,"score":47,"level":0},{"x":713,"y":542,"score":48,"level":0},{"x":814,"y":542,"score":34,"level":0},{"x":841,"y":542,"score":84,"level":0},{"x":864,"y":542,"score":50,"level":0},{"x":985,"y":542,"score":26,"level":0},{"x":1032,"y":542,"score":67,"level":0},{"x":1117,"y":542,"score":50,"level":0},{"x":1242,"y":542,"score":34,"level":0},{"x":1288,"y":542,"score":106,"level":0},{"x":1314,"y":542,"score":30,"level":0},{"x":1417,"y":542,"score":60,"level":0},{"x":1424,"y":542,"score":57,"level":0},{"x":1469,"y":542,"score":32,"level":0},{"x":1473,"y":542,"score":47,"level":0},{"x":454,"y":543,"score":29,"level":0},{"x":570,"y":543,"score":38,"level":0},{"x":720,"y":543,"score":101,"level":0},{"x":727,"y":543,"score":84,"level":0},{"x":742,"y":543,"score":81,"level":0},{"x":744,"y":543,"score":84,"level":0},{"x":777,"y":543,"score":31,"level":0},{"x":848,"y":543,"score":131,"level":0},{"x":854,"y":543,"score":73,"level":0},{"x":1346,"y":543,"score":28,"level":0},{"x":1412,"y":543,"score":34,"level":0},{"x":1421,"y":543,"score":58,"level":0},{"x":533,"y":544,"score":73,"level":0},{"x":643,"y":544,"score":141,"level":0},{"x":764,"y":544,"score":41,"level":0},{"x":868,"y":544,"score":31,"level":0},{"x":1337,"y":544,"score":55,"level":0},{"x":1417,"y":544,"score":89,"level":0},{"x":1459,"y":544,"score":54,"level":0},{"x":407,"y":545,"score":50,"level":0},{"x":521,"y":545,"score":84,"level":0},{"x":681,"y":545,"score":32,"level":0},{"x":786,"y":545,"score":35,"level":0},{"x":792,"y":545,"score":95,"level":0},{"x":798,"y":545,"score":53,"level":0},{"x":1134,"y":545,"score":26,"level":0},{"x":1301,"y":545,"score":31,"level":0},{"x":1434,"y":545,"score":93,"level":0},{"x":1490,"y":545,"score":89,"level":0},{"x":388,"y":546,"score":26,"level":0},{"x":653,"y":546,"score":32,"level":0},{"x":676,"y":546,"score":68,"level":0},{"x":735,"y":546,"score":82,"level":0},{"x":831,"y":546,"score":44,"level":0},{"x":1140,"y":546,"score":102,"level":0},{"x":1437,"y":546,"score":60,"level":0},{"x":1486,"y":546,"score":163,"level":0},{"x":384,"y":547,"score":28,"level":0},{"x":419,"y":547,"score":42,"level":0},{"x":685,"y":547,"score":115,"level":0},{"x":756,"y":547,"score":36,"level":0},{"x":841,"y":547,"score":106,"level":0},{"x":867,"y":547,"score":66,"level":0},{"x":918,"y":547,"score":50,"level":0},{"x":1036,"y":547,"score":47,"level":0},{"x":1038,"y":547,"score":41,"level":0},{"x":1405,"y":547,"score":39,"level":0},{"x":1463,"y":547,"score":53,"level":0},{"x":661,"y":548,"score":70,"level":0},{"x":673,"y":548,"score":52,"level":0},{"x":696,"y":548,"score":55,"level":0},{"x":1235,"y":548,"score":42,"level":0},{"x":1430,"y":548,"score":41,"level":0},{"x":1452,"y":548,"score":77,"level":0},{"x":1473,"y":548,"score":176,"level":0},{"x":610,"y":549,"score":26,"level":0},{"x":644,"y":549,"score":45,"level":0},{"x":701,"y":549,"score":36,"level":0},{"x":715,"y":549,"score":44,"level":0},{"x":762,"y":549,"score":34,"level":0},{"x":767,"y":549,"score":64,"level":0},{"x":803,"y":549,"score":54,"level":0},{"x":847,"y":549,"score":138,"level":0},{"x":853,"y":549,"score":85,"level":0},{"x":1027,"y":549,"score":53,"level":0},{"x":1219,"y":549,"score":34,"level":0},{"x":1372,"y":549,"score":98,"level":0},{"x":1436,"y":549,"score":46,"level":0},{"x":397,"y":550,"score":41,"level":0},{"x":514,"y":550,"score":38,"level":0},{"x":623,"y":550,"score":47,"level":0},{"x":633,"y":550,"score":65,"level":0},{"x":667,"y":550,"score":31,"level":0},{"x":742,"y":550,"score":138,"level":0},{"x":1342,"y":550,"score":191,"level":0},{"x":1347,"y":550,"score":27,"level":0},{"x":1479,"y":550,"score":80,"level":0},{"x":1485,"y":550,"score":30,"level":0},{"x":395,"y":551,"score":36,"level":0},{"x":512,"y":551,"score":45,"level":0},{"x":581,"y":551,"score":33,"level":0},{"x":615,"y":551,"score":78,"level":0},{"x":723,"y":551,"score":68,"level":0},{"x":791,"y":551,"score":88,"level":0},{"x":1427,"y":551,"score":38,"level":0},{"x":1437,"y":551,"score":36,"level":0},{"x":384,"y":552,"score":32,"level":0},{"x":424,"y":552,"score":40,"level":0},{"x":509,"y":552,"score":31,"level":0},{"x":521,"y":552,"score":45,"level":0},{"x":539,"y":552,"score":32,"level":0},{"x":570,"y":552,"score":35,"level":0},{"x":638,"y":552,"score":37,"level":0},{"x":685,"y":552,"score":27,"level":0},{"x":696,"y":552,"score":41,"level":0},{"x":716,"y":552,"score":83,"level":0},{"x":830,"y":552,"score":30,"level":0},{"x":1377,"y":552,"score":62,"level":0},{"x":1419,"y":552,"score":80,"level":0},{"x":1464,"y":552,"score":132,"level":0},{"x":1469,"y":552,"score":114,"level":0},{"x":380,"y":553,"score":30,"level":0},{"x":444,"y":553,"score":54,"level":0},{"x":450,"y":553,"score":52,"level":0},{"x":506,"y":553,"score":50,"level":0},{"x":610,"y":553,"score":28,"level":0},{"x":675,"y":553,"score":31,"level":0},{"x":679,"y":553,"score":46,"level":0},{"x":710,"y":553,"score":114,"level":0},{"x":728,"y":553,"score":74,"level":0},{"x":752,"y":553,"score":99,"level":0},{"x":842,"y":553,"score":39,"level":0},{"x":898,"y":553,"score":28,"level":0},{"x":1035,"y":553,"score":50,"level":0},{"x":1109,"y":553,"score":61,"level":0},{"x":1209,"y":553,"score":36,"level":0},{"x":1361,"y":553,"score":45,"level":0},{"x":1403,"y":553,"score":32,"level":0},{"x":1413,"y":553,"score":53,"level":0},{"x":1430,"y":553,"score":41,"level":0},{"x":377,"y":554,"score":48,"level":0},{"x":469,"y":554,"score":36,"level":0},{"x":504,"y":554,"score":75,"level":0},{"x":578,"y":554,"score":33,"level":0},{"x":621,"y":554,"score":49,"level":0},{"x":654,"y":554,"score":28,"level":0},{"x":737,"y":554,"score":180,"level":0},{"x":776,"y":554,"score":60,"level":0},{"x":782,"y":554,"score":80,"level":0},{"x":819,"y":554,"score":67,"level":0},{"x":1041,"y":554,"score":42,"level":0},{"x":1159,"y":554,"score":56,"level":0},{"x":1388,"y":554,"score":87,"level":0},{"x":1394,"y":554,"score":66,"level":0},{"x":1408,"y":554,"score":54,"level":0},{"x":1432,"y":554,"score":84,"level":0},{"x":1444,"y":554,"score":82,"level":0},{"x":1452,"y":554,"score":104,"level":0},{"x":1477,"y":554,"score":34,"level":0},{"x":1490,"y":554,"score":26,"level":0},{"x":425,"y":555,"score":49,"level":0},{"x":431,"y":555,"score":43,"level":0},{"x":464,"y":555,"score":32,"level":0},{"x":499,"y":555,"score":34,"level":0},{"x":541,"y":555,"score":26,"level":0},{"x":568,"y":555,"score":36,"level":0},{"x":666,"y":555,"score":34,"level":0},{"x":679,"y":555,"score":30,"level":0},{"x":743,"y":555,"score":39,"level":0},{"x":835,"y":555,"score":44,"level":0},{"x":1030,"y":555,"score":49,"level":0},{"x":1136,"y":555,"score":32,"level":0},{"x":1221,"y":555,"score":27,"level":0},{"x":1347,"y":555,"score":160,"level":0},{"x":1458,"y":555,"score":75,"level":0},{"x":574,"y":556,"score":86,"level":0},{"x":686,"y":556,"score":62,"level":0},{"x":833,"y":556,"score":45,"level":0},{"x":846,"y":556,"score":128,"level":0},{"x":866,"y":556,"score":43,"level":0},{"x":876,"y":556,"score":46,"level":0},{"x":892,"y":556,"score":49,"level":0},{"x":1142,"y":556,"score":46,"level":0},{"x":1247,"y":556,"score":56,"level":0},{"x":1303,"y":556,"score":27,"level":0},{"x":1366,"y":556,"score":48,"level":0},{"x":1426,"y":556,"score":26,"level":0},{"x":377,"y":557,"score":42,"level":0},{"x":425,"y":557,"score":42,"level":0},{"x":481,"y":557,"score":50,"level":0},{"x":519,"y":557,"score":42,"level":0},{"x":684,"y":557,"score":37,"level":0},{"x":696,"y":557,"score":174,"level":0},{"x":732,"y":557,"score":33,"level":0},{"x":736,"y":557,"score":138,"level":0},{"x":775,"y":557,"score":71,"level":0},{"x":1089,"y":557,"score":32,"level":0},{"x":1131,"y":557,"score":48,"level":0},{"x":1216,"y":557,"score":63,"level":0},{"x":1416,"y":557,"score":84,"level":0},{"x":1469,"y":557,"score":70,"level":0},{"x":1477,"y":557,"score":60,"level":0},{"x":478,"y":558,"score":47,"level":0},{"x":629,"y":558,"score":30,"level":0},{"x":663,"y":558,"score":48,"level":0},{"x":703,"y":558,"score":40,"level":0},{"x":819,"y":558,"score":32,"level":0},{"x":853,"y":558,"score":162,"level":0},{"x":1016,"y":558,"score":38,"level":0},{"x":1070,"y":558,"score":34,"level":0},{"x":1360,"y":558,"score":121,"level":0},{"x":1461,"y":558,"score":65,"level":0},{"x":474,"y":559,"score":70,"level":0},{"x":674,"y":559,"score":104,"level":0},{"x":683,"y":559,"score":101,"level":0},{"x":720,"y":559,"score":59,"level":0},{"x":751,"y":559,"score":85,"level":0},{"x":780,"y":559,"score":94,"level":0},{"x":785,"y":559,"score":182,"level":0},{"x":1485,"y":559,"score":137,"level":0},{"x":461,"y":560,"score":107,"level":0},{"x":470,"y":560,"score":98,"level":0},{"x":482,"y":560,"score":30,"level":0},{"x":496,"y":560,"score":29,"level":0},{"x":540,"y":560,"score":65,"level":0},{"x":568,"y":560,"score":46,"level":0},{"x":707,"y":560,"score":104,"level":0},{"x":743,"y":560,"score":123,"level":0},{"x":808,"y":560,"score":68,"level":0},{"x":838,"y":560,"score":61,"level":0},{"x":896,"y":560,"score":36,"level":0},{"x":1221,"y":560,"score":58,"level":0},{"x":1346,"y":560,"score":26,"level":0},{"x":1389,"y":560,"score":59,"level":0},{"x":527,"y":561,"score":41,"level":0},{"x":652,"y":561,"score":60,"level":0},{"x":687,"y":561,"score":71,"level":0},{"x":757,"y":561,"score":35,"level":0},{"x":844,"y":561,"score":44,"level":0},{"x":872,"y":561,"score":43,"level":0},{"x":1192,"y":561,"score":26,"level":0},{"x":1254,"y":561,"score":49,"level":0},{"x":1263,"y":561,"score":32,"level":0},{"x":1348,"y":561,"score":38,"level":0},{"x":1353,"y":561,"score":26,"level":0},{"x":1420,"y":561,"score":33,"level":0},{"x":1457,"y":561,"score":68,"level":0},{"x":1466,"y":561,"score":88,"level":0},{"x":481,"y":562,"score":37,"level":0},{"x":573,"y":562,"score":34,"level":0},{"x":678,"y":562,"score":40,"level":0},{"x":697,"y":562,"score":76,"level":0},{"x":770,"y":562,"score":160,"level":0},{"x":804,"y":562,"score":63,"level":0},{"x":839,"y":562,"score":40,"level":0},{"x":1210,"y":562,"score":32,"level":0},{"x":1340,"y":562,"score":27,"level":0},{"x":1362,"y":562,"score":44,"level":0},{"x":1404,"y":562,"score":72,"level":0},{"x":1415,"y":562,"score":26,"level":0},{"x":498,"y":563,"score":63,"level":0},{"x":507,"y":563,"score":69,"level":0},{"x":584,"y":563,"score":94,"level":0},{"x":609,"y":563,"score":59,"level":0},{"x":663,"y":563,"score":31,"level":0},{"x":736,"y":563,"score":131,"level":0},{"x":819,"y":563,"score":73,"level":0},{"x":1023,"y":563,"score":31,"level":0},{"x":1030,"y":563,"score":49,"level":0},{"x":1337,"y":563,"score":26,"level":0},{"x":1432,"y":563,"score":35,"level":0},{"x":1445,"y":563,"score":115,"level":0},{"x":1484,"y":563,"score":70,"level":0},{"x":474,"y":564,"score":53,"level":0},{"x":529,"y":564,"score":33,"level":0},{"x":623,"y":564,"score":58,"level":0},{"x":629,"y":564,"score":79,"level":0},{"x":651,"y":564,"score":41,"level":0},{"x":653,"y":564,"score":46,"level":0},{"x":703,"y":564,"score":96,"level":0},{"x":713,"y":564,"score":141,"level":0},{"x":725,"y":564,"score":87,"level":0},{"x":741,"y":564,"score":31,"level":0},{"x":761,"y":564,"score":61,"level":0},{"x":832,"y":564,"score":35,"level":0},{"x":970,"y":564,"score":30,"level":0},{"x":1141,"y":564,"score":66,"level":0},{"x":1482,"y":564,"score":68,"level":0},{"x":1490,"y":564,"score":75,"level":0},{"x":430,"y":565,"score":56,"level":0},{"x":461,"y":565,"score":30,"level":0},{"x":497,"y":565,"score":70,"level":0},{"x":676,"y":565,"score":135,"level":0},{"x":691,"y":565,"score":63,"level":0},{"x":755,"y":565,"score":56,"level":0},{"x":785,"y":565,"score":127,"level":0},{"x":827,"y":565,"score":48,"level":0},{"x":1156,"y":565,"score":33,"level":0},{"x":1342,"y":565,"score":71,"level":0},{"x":1346,"y":565,"score":26,"level":0},{"x":1354,"y":565,"score":32,"level":0},{"x":1415,"y":565,"score":58,"level":0},{"x":441,"y":566,"score":43,"level":0},{"x":572,"y":566,"score":43,"level":0},{"x":585,"y":566,"score":63,"level":0},{"x":630,"y":566,"score":54,"level":0},{"x":688,"y":566,"score":60,"level":0},{"x":778,"y":566,"score":79,"level":0},{"x":795,"y":566,"score":69,"level":0},{"x":863,"y":566,"score":49,"level":0},{"x":1201,"y":566,"score":50,"level":0},{"x":1348,"y":566,"score":26,"level":0},{"x":1369,"y":566,"score":119,"level":0},{"x":1374,"y":566,"score":128,"level":0},{"x":1391,"y":566,"score":26,"level":0},{"x":1411,"y":566,"score":43,"level":0},{"x":1453,"y":566,"score":48,"level":0},{"x":1472,"y":566,"score":90,"level":0},{"x":503,"y":567,"score":61,"level":0},{"x":644,"y":567,"score":29,"level":0},{"x":771,"y":567,"score":103,"level":0},{"x":835,"y":567,"score":49,"level":0},{"x":1024,"y":567,"score":114,"level":0},{"x":1211,"y":567,"score":29,"level":0},{"x":1218,"y":567,"score":39,"level":0},{"x":1340,"y":567,"score":49,"level":0},{"x":1362,"y":567,"score":74,"level":0},{"x":1365,"y":567,"score":57,"level":0},{"x":1396,"y":567,"score":70,"level":0},{"x":1401,"y":567,"score":122,"level":0},{"x":1419,"y":567,"score":87,"level":0},{"x":1460,"y":567,"score":96,"level":0},{"x":395,"y":568,"score":28,"level":0},{"x":462,"y":568,"score":76,"level":0},{"x":709,"y":568,"score":42,"level":0},{"x":723,"y":568,"score":77,"level":0},{"x":864,"y":568,"score":34,"level":0},{"x":902,"y":568,"score":29,"level":0},{"x":1040,"y":568,"score":39,"level":0},{"x":1235,"y":568,"score":42,"level":0},{"x":1382,"y":568,"score":147,"level":0},{"x":1444,"y":568,"score":58,"level":0},{"x":1462,"y":568,"score":97,"level":0},{"x":420,"y":569,"score":113,"level":0},{"x":468,"y":569,"score":68,"level":0},{"x":585,"y":569,"score":40,"level":0},{"x":662,"y":569,"score":37,"level":0},{"x":667,"y":569,"score":31,"level":0},{"x":738,"y":569,"score":43,"level":0},{"x":743,"y":569,"score":61,"level":0},{"x":749,"y":569,"score":94,"level":0},{"x":761,"y":569,"score":154,"level":0},{"x":788,"y":569,"score":218,"level":0},{"x":797,"y":569,"score":101,"level":0},{"x":800,"y":569,"score":79,"level":0},{"x":806,"y":569,"score":99,"level":0},{"x":1008,"y":569,"score":41,"level":0},{"x":1026,"y":569,"score":103,"level":0},{"x":1045,"y":569,"score":33,"level":0},{"x":1059,"y":569,"score":32,"level":0},{"x":1079,"y":569,"score":26,"level":0},{"x":1460,"y":569,"score":110,"level":0},{"x":1481,"y":569,"score":101,"level":0},{"x":1490,"y":569,"score":65,"level":0},{"x":384,"y":570,"score":26,"level":0},{"x":672,"y":570,"score":48,"level":0},{"x":681,"y":570,"score":34,"level":0},{"x":724,"y":570,"score":72,"level":0},{"x":791,"y":570,"score":123,"level":0},{"x":855,"y":570,"score":91,"level":0},{"x":865,"y":570,"score":35,"level":0},{"x":961,"y":570,"score":39,"level":0},{"x":1089,"y":570,"score":32,"level":0},{"x":1351,"y":570,"score":48,"level":0},{"x":1358,"y":570,"score":78,"level":0},{"x":1408,"y":570,"score":169,"level":0},{"x":1416,"y":570,"score":56,"level":0},{"x":396,"y":571,"score":60,"level":0},{"x":452,"y":571,"score":80,"level":0},{"x":470,"y":571,"score":84,"level":0},{"x":487,"y":571,"score":35,"level":0},{"x":510,"y":571,"score":59,"level":0},{"x":569,"y":571,"score":48,"level":0},{"x":631,"y":571,"score":110,"level":0},{"x":694,"y":571,"score":34,"level":0},{"x":1369,"y":571,"score":96,"level":0},{"x":1398,"y":571,"score":43,"level":0},{"x":1452,"y":571,"score":57,"level":0},{"x":438,"y":572,"score":174,"level":0},{"x":596,"y":572,"score":36,"level":0},{"x":656,"y":572,"score":205,"level":0},{"x":739,"y":572,"score":47,"level":0},{"x":772,"y":572,"score":141,"level":0},{"x":829,"y":572,"score":27,"level":0},{"x":866,"y":572,"score":35,"level":0},{"x":1031,"y":572,"score":29,"level":0},{"x":1307,"y":572,"score":50,"level":0},{"x":1373,"y":572,"score":43,"level":0},{"x":1388,"y":572,"score":124,"level":0},{"x":1422,"y":572,"score":104,"level":0},{"x":1450,"y":572,"score":54,"level":0},{"x":1455,"y":572,"score":54,"level":0},{"x":1489,"y":572,"score":29,"level":0},{"x":377,"y":573,"score":197,"level":0},{"x":432,"y":573,"score":28,"level":0},{"x":482,"y":573,"score":90,"level":0},{"x":502,"y":573,"score":41,"level":0},{"x":650,"y":573,"score":41,"level":0},{"x":732,"y":573,"score":38,"level":0},{"x":755,"y":573,"score":36,"level":0},{"x":760,"y":573,"score":144,"level":0},{"x":997,"y":573,"score":69,"level":0},{"x":1012,"y":573,"score":55,"level":0},{"x":1066,"y":573,"score":28,"level":0},{"x":1376,"y":573,"score":84,"level":0},{"x":1383,"y":573,"score":64,"level":0},{"x":674,"y":574,"score":64,"level":0},{"x":806,"y":574,"score":63,"level":0},{"x":811,"y":574,"score":123,"level":0},{"x":913,"y":574,"score":28,"level":0},{"x":918,"y":574,"score":50,"level":0},{"x":1432,"y":574,"score":68,"level":0},{"x":1444,"y":574,"score":53,"level":0},{"x":519,"y":575,"score":73,"level":0},{"x":606,"y":575,"score":46,"level":0},{"x":637,"y":575,"score":80,"level":0},{"x":679,"y":575,"score":56,"level":0},{"x":685,"y":575,"score":30,"level":0},{"x":749,"y":575,"score":41,"level":0},{"x":788,"y":575,"score":110,"level":0},{"x":791,"y":575,"score":70,"level":0},{"x":847,"y":575,"score":45,"level":0},{"x":852,"y":575,"score":29,"level":0},{"x":1248,"y":575,"score":181,"level":0},{"x":1255,"y":575,"score":80,"level":0},{"x":1423,"y":575,"score":76,"level":0},{"x":1437,"y":575,"score":32,"level":0},{"x":1486,"y":575,"score":43,"level":0},{"x":509,"y":576,"score":60,"level":0},{"x":666,"y":576,"score":85,"level":0},{"x":694,"y":576,"score":44,"level":0},{"x":723,"y":576,"score":90,"level":0},{"x":764,"y":576,"score":45,"level":0},{"x":780,"y":576,"score":143,"level":0},{"x":839,"y":576,"score":26,"level":0},{"x":897,"y":576,"score":56,"level":0},{"x":1229,"y":576,"score":32,"level":0},{"x":1368,"y":576,"score":83,"level":0},{"x":1380,"y":576,"score":124,"level":0},{"x":1409,"y":576,"score":124,"level":0},{"x":1418,"y":576,"score":62,"level":0},{"x":1474,"y":576,"score":59,"level":0},{"x":1480,"y":576,"score":60,"level":0},{"x":611,"y":577,"score":31,"level":0},{"x":717,"y":577,"score":48,"level":0},{"x":774,"y":577,"score":33,"level":0},{"x":886,"y":577,"score":36,"level":0},{"x":1026,"y":577,"score":46,"level":0},{"x":1241,"y":577,"score":76,"level":0},{"x":1254,"y":577,"score":35,"level":0},{"x":1278,"y":577,"score":50,"level":0},{"x":1359,"y":577,"score":86,"level":0},{"x":1371,"y":577,"score":62,"level":0},{"x":1403,"y":577,"score":174,"level":0},{"x":1448,"y":577,"score":90,"level":0},{"x":1461,"y":577,"score":108,"level":0},{"x":1467,"y":577,"score":159,"level":0},{"x":1488,"y":577,"score":29,"level":0},{"x":388,"y":578,"score":49,"level":0},{"x":495,"y":578,"score":33,"level":0},{"x":740,"y":578,"score":62,"level":0},{"x":745,"y":578,"score":117,"level":0},{"x":851,"y":578,"score":39,"level":0},{"x":917,"y":578,"score":70,"level":0},{"x":1226,"y":578,"score":47,"level":0},{"x":1338,"y":578,"score":38,"level":0},{"x":1390,"y":578,"score":78,"level":0},{"x":1396,"y":578,"score":168,"level":0},{"x":1410,"y":578,"score":174,"level":0},{"x":1459,"y":578,"score":117,"level":0},{"x":427,"y":579,"score":29,"level":0},{"x":444,"y":579,"score":90,"level":0},{"x":471,"y":579,"score":57,"level":0},{"x":517,"y":579,"score":73,"level":0},{"x":579,"y":579,"score":28,"level":0},{"x":678,"y":579,"score":52,"level":0},{"x":799,"y":579,"score":27,"level":0},{"x":912,"y":579,"score":53,"level":0},{"x":992,"y":579,"score":32,"level":0},{"x":1185,"y":579,"score":26,"level":0},{"x":1206,"y":579,"score":45,"level":0},{"x":1243,"y":579,"score":124,"level":0},{"x":1345,"y":579,"score":48,"level":0},{"x":1365,"y":579,"score":66,"level":0},{"x":1386,"y":579,"score":124,"level":0},{"x":1433,"y":579,"score":106,"level":0},{"x":1461,"y":579,"score":39,"level":0},{"x":442,"y":580,"score":64,"level":0},{"x":492,"y":580,"score":50,"level":0},{"x":614,"y":580,"score":29,"level":0},{"x":731,"y":580,"score":26,"level":0},{"x":757,"y":580,"score":120,"level":0},{"x":767,"y":580,"score":27,"level":0},{"x":817,"y":580,"score":130,"level":0},{"x":851,"y":580,"score":57,"level":0},{"x":926,"y":580,"score":36,"level":0},{"x":971,"y":580,"score":80,"level":0},{"x":1032,"y":580,"score":29,"level":0},{"x":1371,"y":580,"score":33,"level":0},{"x":1405,"y":580,"score":115,"level":0},{"x":1456,"y":580,"score":46,"level":0},{"x":379,"y":581,"score":44,"level":0},{"x":385,"y":581,"score":28,"level":0},{"x":625,"y":581,"score":85,"level":0},{"x":630,"y":581,"score":171,"level":0},{"x":637,"y":581,"score":36,"level":0},{"x":662,"y":581,"score":282,"level":0},{"x":743,"y":581,"score":54,"level":0},{"x":750,"y":581,"score":67,"level":0},{"x":762,"y":581,"score":29,"level":0},{"x":790,"y":581,"score":106,"level":0},{"x":793,"y":581,"score":75,"level":0},{"x":891,"y":581,"score":45,"level":0},{"x":923,"y":581,"score":37,"level":0},{"x":1199,"y":581,"score":53,"level":0},{"x":1220,"y":581,"score":84,"level":0},{"x":1226,"y":581,"score":60,"level":0},{"x":1376,"y":581,"score":41,"level":0},{"x":1408,"y":581,"score":26,"level":0},{"x":1418,"y":581,"score":108,"level":0},{"x":1440,"y":581,"score":32,"level":0},{"x":466,"y":582,"score":28,"level":0},{"x":504,"y":582,"score":52,"level":0},{"x":698,"y":582,"score":44,"level":0},{"x":775,"y":582,"score":56,"level":0},{"x":781,"y":582,"score":80,"level":0},{"x":788,"y":582,"score":94,"level":0},{"x":807,"y":582,"score":176,"level":0},{"x":853,"y":582,"score":39,"level":0},{"x":1010,"y":582,"score":41,"level":0},{"x":1402,"y":582,"score":106,"level":0},{"x":1405,"y":582,"score":50,"level":0},{"x":1448,"y":582,"score":172,"level":0},{"x":1467,"y":582,"score":54,"level":0},{"x":520,"y":583,"score":43,"level":0},{"x":587,"y":583,"score":49,"level":0},{"x":682,"y":583,"score":62,"level":0},{"x":711,"y":583,"score":39,"level":0},{"x":1215,"y":583,"score":101,"level":0},{"x":1227,"y":583,"score":28,"level":0},{"x":1254,"y":583,"score":94,"level":0},{"x":1338,"y":583,"score":35,"level":0},{"x":1366,"y":583,"score":39,"level":0},{"x":1413,"y":583,"score":65,"level":0},{"x":1439,"y":583,"score":28,"level":0},{"x":1455,"y":583,"score":92,"level":0},{"x":1458,"y":583,"score":32,"level":0},{"x":415,"y":584,"score":43,"level":0},{"x":566,"y":584,"score":34,"level":0},{"x":582,"y":584,"score":41,"level":0},{"x":635,"y":584,"score":60,"level":0},{"x":672,"y":584,"score":35,"level":0},{"x":736,"y":584,"score":45,"level":0},{"x":790,"y":584,"score":76,"level":0},{"x":799,"y":584,"score":126,"level":0},{"x":826,"y":584,"score":55,"level":0},{"x":978,"y":584,"score":40,"level":0},{"x":1020,"y":584,"score":65,"level":0},{"x":1028,"y":584,"score":51,"level":0},{"x":1141,"y":584,"score":36,"level":0},{"x":1239,"y":584,"score":158,"level":0},{"x":1356,"y":584,"score":50,"level":0},{"x":1386,"y":584,"score":133,"level":0},{"x":1395,"y":584,"score":109,"level":0},{"x":1415,"y":584,"score":35,"level":0},{"x":1462,"y":584,"score":130,"level":0},{"x":1468,"y":584,"score":110,"level":0},{"x":588,"y":585,"score":54,"level":0},{"x":657,"y":585,"score":50,"level":0},{"x":714,"y":585,"score":44,"level":0},{"x":728,"y":585,"score":34,"level":0},{"x":971,"y":585,"score":28,"level":0},{"x":1015,"y":585,"score":46,"level":0},{"x":1212,"y":585,"score":69,"level":0},{"x":1237,"y":585,"score":86,"level":0},{"x":1264,"y":585,"score":30,"level":0},{"x":1381,"y":585,"score":173,"level":0},{"x":1490,"y":585,"score":132,"level":0},{"x":522,"y":586,"score":131,"level":0},{"x":607,"y":586,"score":28,"level":0},{"x":617,"y":586,"score":29,"level":0},{"x":739,"y":586,"score":43,"level":0},{"x":744,"y":586,"score":94,"level":0},{"x":757,"y":586,"score":90,"level":0},{"x":770,"y":586,"score":66,"level":0},{"x":786,"y":586,"score":106,"level":0},{"x":912,"y":586,"score":115,"level":0},{"x":1428,"y":586,"score":31,"level":0},{"x":1463,"y":586,"score":106,"level":0},{"x":392,"y":587,"score":77,"level":0},{"x":398,"y":587,"score":32,"level":0},{"x":505,"y":587,"score":155,"level":0},{"x":545,"y":587,"score":28,"level":0},{"x":781,"y":587,"score":81,"level":0},{"x":821,"y":587,"score":51,"level":0},{"x":1140,"y":587,"score":42,"level":0},{"x":1374,"y":587,"score":112,"level":0},{"x":1419,"y":587,"score":70,"level":0},{"x":1444,"y":587,"score":55,"level":0},{"x":1456,"y":587,"score":35,"level":0},{"x":426,"y":588,"score":39,"level":0},{"x":491,"y":588,"score":72,"level":0},{"x":575,"y":588,"score":52,"level":0},{"x":601,"y":588,"score":31,"level":0},{"x":648,"y":588,"score":54,"level":0},{"x":726,"y":588,"score":27,"level":0},{"x":800,"y":588,"score":26,"level":0},{"x":813,"y":588,"score":60,"level":0},{"x":823,"y":588,"score":41,"level":0},{"x":839,"y":588,"score":76,"level":0},{"x":1014,"y":588,"score":69,"level":0},{"x":1148,"y":588,"score":52,"level":0},{"x":1215,"y":588,"score":148,"level":0},{"x":1217,"y":588,"score":178,"level":0},{"x":1227,"y":588,"score":176,"level":0},{"x":1361,"y":588,"score":29,"level":0},{"x":1407,"y":588,"score":79,"level":0},{"x":1439,"y":588,"score":39,"level":0},{"x":377,"y":589,"score":66,"level":0},{"x":438,"y":589,"score":53,"level":0},{"x":511,"y":589,"score":62,"level":0},{"x":554,"y":589,"score":28,"level":0},{"x":849,"y":589,"score":58,"level":0},{"x":1012,"y":589,"score":34,"level":0},{"x":1022,"y":589,"score":65,"level":0},{"x":1030,"y":589,"score":102,"level":0},{"x":1246,"y":589,"score":106,"level":0},{"x":1354,"y":589,"score":182,"level":0},{"x":1403,"y":589,"score":60,"level":0},{"x":1429,"y":589,"score":60,"level":0},{"x":1434,"y":589,"score":70,"level":0},{"x":1453,"y":589,"score":75,"level":0},{"x":448,"y":590,"score":78,"level":0},{"x":467,"y":590,"score":27,"level":0},{"x":528,"y":590,"score":65,"level":0},{"x":541,"y":590,"score":43,"level":0},{"x":560,"y":590,"score":28,"level":0},{"x":618,"y":590,"score":35,"level":0},{"x":752,"y":590,"score":97,"level":0},{"x":772,"y":590,"score":52,"level":0},{"x":805,"y":590,"score":65,"level":0},{"x":890,"y":590,"score":30,"level":0},{"x":918,"y":590,"score":26,"level":0},{"x":924,"y":590,"score":40,"level":0},{"x":1017,"y":590,"score":41,"level":0},{"x":1028,"y":590,"score":152,"level":0},{"x":1080,"y":590,"score":54,"level":0},{"x":1174,"y":590,"score":31,"level":0},{"x":1192,"y":590,"score":92,"level":0},{"x":1195,"y":590,"score":98,"level":0},{"x":1201,"y":590,"score":124,"level":0},{"x":1252,"y":590,"score":30,"level":0},{"x":1260,"y":590,"score":63,"level":0},{"x":1284,"y":590,"score":34,"level":0},{"x":1410,"y":590,"score":34,"level":0},{"x":1479,"y":590,"score":40,"level":0},{"x":1486,"y":590,"score":114,"level":0},{"x":712,"y":591,"score":30,"level":0},{"x":733,"y":591,"score":47,"level":0},{"x":738,"y":591,"score":31,"level":0},{"x":745,"y":591,"score":81,"level":0},{"x":786,"y":591,"score":31,"level":0},{"x":932,"y":591,"score":53,"level":0},{"x":1184,"y":591,"score":27,"level":0},{"x":1264,"y":591,"score":63,"level":0},{"x":1287,"y":591,"score":35,"level":0},{"x":1382,"y":591,"score":51,"level":0},{"x":1386,"y":591,"score":58,"level":0},{"x":1388,"y":591,"score":29,"level":0},{"x":1467,"y":591,"score":58,"level":0},{"x":1489,"y":591,"score":79,"level":0},{"x":377,"y":592,"score":48,"level":0},{"x":513,"y":592,"score":28,"level":0},{"x":636,"y":592,"score":95,"level":0},{"x":769,"y":592,"score":60,"level":0},{"x":777,"y":592,"score":41,"level":0},{"x":796,"y":592,"score":36,"level":0},{"x":912,"y":592,"score":44,"level":0},{"x":1006,"y":592,"score":39,"level":0},{"x":1033,"y":592,"score":50,"level":0},{"x":1415,"y":592,"score":56,"level":0},{"x":1454,"y":592,"score":158,"level":0},{"x":399,"y":593,"score":31,"level":0},{"x":537,"y":593,"score":104,"level":0},{"x":581,"y":593,"score":30,"level":0},{"x":653,"y":593,"score":52,"level":0},{"x":801,"y":593,"score":41,"level":0},{"x":813,"y":593,"score":88,"level":0},{"x":839,"y":593,"score":136,"level":0},{"x":875,"y":593,"score":32,"level":0},{"x":881,"y":593,"score":126,"level":0},{"x":965,"y":593,"score":54,"level":0},{"x":1190,"y":593,"score":128,"level":0},{"x":1203,"y":593,"score":92,"level":0},{"x":1225,"y":593,"score":70,"level":0},{"x":1233,"y":593,"score":79,"level":0},{"x":1273,"y":593,"score":50,"level":0},{"x":1293,"y":593,"score":57,"level":0},{"x":1369,"y":593,"score":125,"level":0},{"x":1400,"y":593,"score":124,"level":0},{"x":1406,"y":593,"score":279,"level":0},{"x":1420,"y":593,"score":145,"level":0},{"x":1425,"y":593,"score":57,"level":0},{"x":1462,"y":593,"score":156,"level":0},{"x":1467,"y":593,"score":40,"level":0},{"x":394,"y":594,"score":64,"level":0},{"x":519,"y":594,"score":58,"level":0},{"x":631,"y":594,"score":43,"level":0},{"x":715,"y":594,"score":38,"level":0},{"x":790,"y":594,"score":153,"level":0},{"x":849,"y":594,"score":33,"level":0},{"x":895,"y":594,"score":28,"level":0},{"x":979,"y":594,"score":42,"level":0},{"x":988,"y":594,"score":55,"level":0},{"x":1011,"y":594,"score":45,"level":0},{"x":1214,"y":594,"score":175,"level":0},{"x":1239,"y":594,"score":33,"level":0},{"x":1282,"y":594,"score":140,"level":0},{"x":1355,"y":594,"score":34,"level":0},{"x":1362,"y":594,"score":43,"level":0},{"x":377,"y":595,"score":26,"level":0},{"x":437,"y":595,"score":118,"level":0},{"x":454,"y":595,"score":38,"level":0},{"x":540,"y":595,"score":34,"level":0},{"x":588,"y":595,"score":40,"level":0},{"x":593,"y":595,"score":27,"level":0},{"x":749,"y":595,"score":51,"level":0},{"x":761,"y":595,"score":152,"level":0},{"x":767,"y":595,"score":80,"level":0},{"x":835,"y":595,"score":29,"level":0},{"x":913,"y":595,"score":42,"level":0},{"x":918,"y":595,"score":55,"level":0},{"x":938,"y":595,"score":44,"level":0},{"x":971,"y":595,"score":60,"level":0},{"x":1245,"y":595,"score":83,"level":0},{"x":1278,"y":595,"score":44,"level":0},{"x":1284,"y":595,"score":140,"level":0},{"x":1289,"y":595,"score":66,"level":0},{"x":1348,"y":595,"score":39,"level":0},{"x":1358,"y":595,"score":137,"level":0},{"x":1385,"y":595,"score":52,"level":0},{"x":1391,"y":595,"score":63,"level":0},{"x":1414,"y":595,"score":47,"level":0},{"x":1427,"y":595,"score":85,"level":0},{"x":1435,"y":595,"score":199,"level":0},{"x":1441,"y":595,"score":26,"level":0},{"x":1478,"y":595,"score":136,"level":0},{"x":448,"y":596,"score":144,"level":0},{"x":463,"y":596,"score":31,"level":0},{"x":573,"y":596,"score":30,"level":0},{"x":576,"y":596,"score":71,"level":0},{"x":690,"y":596,"score":51,"level":0},{"x":727,"y":596,"score":138,"level":0},{"x":1023,"y":596,"score":106,"level":0},{"x":1175,"y":596,"score":99,"level":0},{"x":1207,"y":596,"score":86,"level":0},{"x":1304,"y":596,"score":92,"level":0},{"x":1416,"y":596,"score":58,"level":0},{"x":1462,"y":596,"score":107,"level":0},{"x":685,"y":597,"score":33,"level":0},{"x":696,"y":597,"score":75,"level":0},{"x":786,"y":597,"score":242,"level":0},{"x":827,"y":597,"score":68,"level":0},{"x":853,"y":597,"score":92,"level":0},{"x":927,"y":597,"score":42,"level":0},{"x":993,"y":597,"score":168,"level":0},{"x":1163,"y":597,"score":28,"level":0},{"x":1204,"y":597,"score":163,"level":0},{"x":1230,"y":597,"score":41,"level":0},{"x":1240,"y":597,"score":93,"level":0},{"x":1260,"y":597,"score":53,"level":0},{"x":1265,"y":597,"score":81,"level":0},{"x":1313,"y":597,"score":71,"level":0},{"x":1383,"y":597,"score":44,"level":0},{"x":1412,"y":597,"score":52,"level":0},{"x":1423,"y":597,"score":42,"level":0},{"x":1454,"y":597,"score":114,"level":0},{"x":1471,"y":597,"score":48,"level":0},{"x":406,"y":598,"score":26,"level":0},{"x":432,"y":598,"score":41,"level":0},{"x":448,"y":598,"score":88,"level":0},{"x":511,"y":598,"score":69,"level":0},{"x":517,"y":598,"score":115,"level":0},{"x":581,"y":598,"score":76,"level":0},{"x":756,"y":598,"score":91,"level":0},{"x":772,"y":598,"score":103,"level":0},{"x":780,"y":598,"score":68,"level":0},{"x":808,"y":598,"score":34,"level":0},{"x":813,"y":598,"score":48,"level":0},{"x":843,"y":598,"score":83,"level":0},{"x":867,"y":598,"score":91,"level":0},{"x":875,"y":598,"score":26,"level":0},{"x":964,"y":598,"score":57,"level":0},{"x":1012,"y":598,"score":70,"level":0},{"x":1180,"y":598,"score":51,"level":0},{"x":1189,"y":598,"score":105,"level":0},{"x":1249,"y":598,"score":34,"level":0},{"x":1288,"y":598,"score":88,"level":0},{"x":1294,"y":598,"score":149,"level":0},{"x":1322,"y":598,"score":26,"level":0},{"x":1339,"y":598,"score":70,"level":0},{"x":1344,"y":598,"score":36,"level":0},{"x":1359,"y":598,"score":158,"level":0},{"x":1405,"y":598,"score":56,"level":0},{"x":1430,"y":598,"score":60,"level":0},{"x":1443,"y":598,"score":84,"level":0},{"x":1445,"y":598,"score":57,"level":0},{"x":1449,"y":598,"score":50,"level":0},{"x":1485,"y":598,"score":82,"level":0},{"x":389,"y":599,"score":36,"level":0},{"x":545,"y":599,"score":40,"level":0},{"x":796,"y":599,"score":167,"level":0},{"x":881,"y":599,"score":104,"level":0},{"x":893,"y":599,"score":77,"level":0},{"x":901,"y":599,"score":58,"level":0},{"x":970,"y":599,"score":32,"level":0},{"x":992,"y":599,"score":248,"level":0},{"x":1033,"y":599,"score":69,"level":0},{"x":1214,"y":599,"score":30,"level":0},{"x":1275,"y":599,"score":172,"level":0},{"x":1306,"y":599,"score":37,"level":0},{"x":1351,"y":599,"score":76,"level":0},{"x":1366,"y":599,"score":33,"level":0},{"x":1391,"y":599,"score":123,"level":0},{"x":1425,"y":599,"score":32,"level":0},{"x":1474,"y":599,"score":34,"level":0},{"x":468,"y":600,"score":33,"level":0},{"x":585,"y":600,"score":122,"level":0},{"x":740,"y":600,"score":29,"level":0},{"x":761,"y":600,"score":111,"level":0},{"x":825,"y":600,"score":91,"level":0},{"x":957,"y":600,"score":222,"level":0},{"x":1038,"y":600,"score":100,"level":0},{"x":1052,"y":600,"score":104,"level":0},{"x":1100,"y":600,"score":48,"level":0},{"x":1149,"y":600,"score":31,"level":0},{"x":1156,"y":600,"score":33,"level":0},{"x":1159,"y":600,"score":65,"level":0},{"x":1278,"y":600,"score":95,"level":0},{"x":1328,"y":600,"score":102,"level":0},{"x":1381,"y":600,"score":84,"level":0},{"x":552,"y":601,"score":122,"level":0},{"x":574,"y":601,"score":61,"level":0},{"x":684,"y":601,"score":59,"level":0},{"x":716,"y":601,"score":99,"level":0},{"x":725,"y":601,"score":26,"level":0},{"x":727,"y":601,"score":54,"level":0},{"x":911,"y":601,"score":46,"level":0},{"x":914,"y":601,"score":43,"level":0},{"x":943,"y":601,"score":44,"level":0},{"x":950,"y":601,"score":33,"level":0},{"x":1019,"y":601,"score":90,"level":0},{"x":1022,"y":601,"score":71,"level":0},{"x":1064,"y":601,"score":37,"level":0},{"x":1116,"y":601,"score":36,"level":0},{"x":1137,"y":601,"score":34,"level":0},{"x":1224,"y":601,"score":73,"level":0},{"x":1233,"y":601,"score":96,"level":0},{"x":1243,"y":601,"score":36,"level":0},{"x":1256,"y":601,"score":58,"level":0},{"x":1345,"y":601,"score":84,"level":0},{"x":1351,"y":601,"score":136,"level":0},{"x":1410,"y":601,"score":31,"level":0},{"x":1479,"y":601,"score":32,"level":0},{"x":449,"y":602,"score":79,"level":0},{"x":489,"y":602,"score":30,"level":0},{"x":540,"y":602,"score":33,"level":0},{"x":766,"y":602,"score":198,"level":0},{"x":782,"y":602,"score":121,"level":0},{"x":791,"y":602,"score":32,"level":0},{"x":873,"y":602,"score":54,"level":0},{"x":981,"y":602,"score":86,"level":0},{"x":1001,"y":602,"score":77,"level":0},{"x":1114,"y":602,"score":27,"level":0},{"x":1143,"y":602,"score":38,"level":0},{"x":1174,"y":602,"score":163,"level":0},{"x":1236,"y":602,"score":127,"level":0},{"x":1245,"y":602,"score":117,"level":0},{"x":1403,"y":602,"score":168,"level":0},{"x":1421,"y":602,"score":53,"level":0},{"x":1437,"y":602,"score":54,"level":0},{"x":1445,"y":602,"score":41,"level":0},{"x":1467,"y":602,"score":36,"level":0},{"x":420,"y":603,"score":131,"level":0},{"x":426,"y":603,"score":29,"level":0},{"x":524,"y":603,"score":68,"level":0},{"x":566,"y":603,"score":100,"level":0},{"x":594,"y":603,"score":29,"level":0},{"x":604,"y":603,"score":28,"level":0},{"x":733,"y":603,"score":75,"level":0},{"x":806,"y":603,"score":60,"level":0},{"x":819,"y":603,"score":53,"level":0},{"x":857,"y":603,"score":112,"level":0},{"x":875,"y":603,"score":75,"level":0},{"x":884,"y":603,"score":90,"level":0},{"x":938,"y":603,"score":50,"level":0},{"x":964,"y":603,"score":44,"level":0},{"x":986,"y":603,"score":152,"level":0},{"x":1047,"y":603,"score":78,"level":0},{"x":1361,"y":603,"score":90,"level":0},{"x":1396,"y":603,"score":56,"level":0},{"x":1426,"y":603,"score":30,"level":0},{"x":1441,"y":603,"score":53,"level":0},{"x":1462,"y":603,"score":103,"level":0},{"x":474,"y":604,"score":35,"level":0},{"x":558,"y":604,"score":91,"level":0},{"x":575,"y":604,"score":65,"level":0},{"x":583,"y":604,"score":67,"level":0},{"x":711,"y":604,"score":57,"level":0},{"x":735,"y":604,"score":97,"level":0},{"x":747,"y":604,"score":32,"level":0},{"x":756,"y":604,"score":112,"level":0},{"x":772,"y":604,"score":161,"level":0},{"x":812,"y":604,"score":39,"level":0},{"x":837,"y":604,"score":180,"level":0},{"x":852,"y":604,"score":37,"level":0},{"x":920,"y":604,"score":151,"level":0},{"x":1003,"y":604,"score":30,"level":0},{"x":1032,"y":604,"score":87,"level":0},{"x":1076,"y":604,"score":85,"level":0},{"x":1088,"y":604,"score":54,"level":0},{"x":1126,"y":604,"score":64,"level":0},{"x":1179,"y":604,"score":63,"level":0},{"x":1288,"y":604,"score":78,"level":0},{"x":1300,"y":604,"score":201,"level":0},{"x":1373,"y":604,"score":45,"level":0},{"x":415,"y":605,"score":43,"level":0},{"x":432,"y":605,"score":68,"level":0},{"x":438,"y":605,"score":34,"level":0},{"x":444,"y":605,"score":30,"level":0},{"x":509,"y":605,"score":31,"level":0},{"x":649,"y":605,"score":66,"level":0},{"x":687,"y":605,"score":89,"level":0},{"x":694,"y":605,"score":106,"level":0},{"x":726,"y":605,"score":60,"level":0},{"x":818,"y":605,"score":64,"level":0},{"x":903,"y":605,"score":33,"level":0},{"x":933,"y":605,"score":182,"level":0},{"x":1050,"y":605,"score":55,"level":0},{"x":1070,"y":605,"score":126,"level":0},{"x":1190,"y":605,"score":102,"level":0},{"x":1275,"y":605,"score":97,"level":0},{"x":1318,"y":605,"score":33,"level":0},{"x":1327,"y":605,"score":46,"level":0},{"x":1352,"y":605,"score":100,"level":0},{"x":1381,"y":605,"score":42,"level":0},{"x":1456,"y":605,"score":141,"level":0},{"x":1483,"y":605,"score":66,"level":0},{"x":507,"y":606,"score":43,"level":0},{"x":586,"y":606,"score":32,"level":0},{"x":683,"y":606,"score":32,"level":0},{"x":719,"y":606,"score":95,"level":0},{"x":799,"y":606,"score":60,"level":0},{"x":842,"y":606,"score":77,"level":0},{"x":848,"y":606,"score":28,"level":0},{"x":853,"y":606,"score":28,"level":0},{"x":896,"y":606,"score":73,"level":0},{"x":983,"y":606,"score":33,"level":0},{"x":990,"y":606,"score":77,"level":0},{"x":1030,"y":606,"score":114,"level":0},{"x":1105,"y":606,"score":59,"level":0},{"x":1118,"y":606,"score":80,"level":0},{"x":1156,"y":606,"score":30,"level":0},{"x":1164,"y":606,"score":73,"level":0},{"x":1197,"y":606,"score":66,"level":0},{"x":1252,"y":606,"score":27,"level":0},{"x":1310,"y":606,"score":116,"level":0},{"x":1315,"y":606,"score":27,"level":0},{"x":1451,"y":606,"score":140,"level":0},{"x":1471,"y":606,"score":37,"level":0},{"x":575,"y":607,"score":54,"level":0},{"x":580,"y":607,"score":97,"level":0},{"x":652,"y":607,"score":68,"level":0},{"x":674,"y":607,"score":68,"level":0},{"x":730,"y":607,"score":66,"level":0},{"x":758,"y":607,"score":55,"level":0},{"x":855,"y":607,"score":40,"level":0},{"x":873,"y":607,"score":40,"level":0},{"x":981,"y":607,"score":51,"level":0},{"x":1010,"y":607,"score":134,"level":0},{"x":1016,"y":607,"score":41,"level":0},{"x":1025,"y":607,"score":46,"level":0},{"x":1045,"y":607,"score":27,"level":0},{"x":1065,"y":607,"score":50,"level":0},{"x":1306,"y":607,"score":41,"level":0},{"x":1364,"y":607,"score":135,"level":0},{"x":1387,"y":607,"score":78,"level":0},{"x":1424,"y":607,"score":80,"level":0},{"x":1445,"y":607,"score":72,"level":0},{"x":765,"y":608,"score":81,"level":0},{"x":784,"y":608,"score":29,"level":0},{"x":806,"y":608,"score":28,"level":0},{"x":857,"y":608,"score":41,"level":0},{"x":881,"y":608,"score":58,"level":0},{"x":894,"y":608,"score":27,"level":0},{"x":1113,"y":608,"score":62,"level":0},{"x":1147,"y":608,"score":29,"level":0},{"x":1159,"y":608,"score":128,"level":0},{"x":1183,"y":608,"score":55,"level":0},{"x":1213,"y":608,"score":54,"level":0},{"x":1259,"y":608,"score":124,"level":0},{"x":1359,"y":608,"score":118,"level":0},{"x":1371,"y":608,"score":61,"level":0},{"x":1431,"y":608,"score":62,"level":0},{"x":1448,"y":608,"score":43,"level":0},{"x":1451,"y":608,"score":106,"level":0},{"x":1472,"y":608,"score":55,"level":0},{"x":1478,"y":608,"score":142,"level":0},{"x":511,"y":609,"score":27,"level":0},{"x":520,"y":609,"score":36,"level":0},{"x":683,"y":609,"score":62,"level":0},{"x":723,"y":609,"score":38,"level":0},{"x":776,"y":609,"score":115,"level":0},{"x":793,"y":609,"score":55,"level":0},{"x":822,"y":609,"score":26,"level":0},{"x":828,"y":609,"score":96,"level":0},{"x":838,"y":609,"score":96,"level":0},{"x":846,"y":609,"score":27,"level":0},{"x":852,"y":609,"score":26,"level":0},{"x":868,"y":609,"score":68,"level":0},{"x":924,"y":609,"score":56,"level":0},{"x":969,"y":609,"score":107,"level":0},{"x":1035,"y":609,"score":137,"level":0},{"x":1054,"y":609,"score":39,"level":0},{"x":1059,"y":609,"score":118,"level":0},{"x":1065,"y":609,"score":80,"level":0},{"x":1099,"y":609,"score":86,"level":0},{"x":1126,"y":609,"score":125,"level":0},{"x":1166,"y":609,"score":26,"level":0},{"x":1169,"y":609,"score":33,"level":0},{"x":1222,"y":609,"score":112,"level":0},{"x":1243,"y":609,"score":228,"level":0},{"x":1272,"y":609,"score":36,"level":0},{"x":1300,"y":609,"score":104,"level":0},{"x":1316,"y":609,"score":49,"level":0},{"x":1334,"y":609,"score":66,"level":0},{"x":1375,"y":609,"score":38,"level":0},{"x":1396,"y":609,"score":86,"level":0},{"x":1412,"y":609,"score":99,"level":0},{"x":1435,"y":609,"score":48,"level":0},{"x":1461,"y":609,"score":215,"level":0},{"x":469,"y":610,"score":38,"level":0},{"x":569,"y":610,"score":31,"level":0},{"x":574,"y":610,"score":68,"level":0},{"x":632,"y":610,"score":30,"level":0},{"x":638,"y":610,"score":159,"level":0},{"x":695,"y":610,"score":49,"level":0},{"x":705,"y":610,"score":30,"level":0},{"x":737,"y":610,"score":43,"level":0},{"x":833,"y":610,"score":29,"level":0},{"x":910,"y":610,"score":85,"level":0},{"x":1049,"y":610,"score":84,"level":0},{"x":1088,"y":610,"score":177,"level":0},{"x":1191,"y":610,"score":75,"level":0},{"x":1220,"y":610,"score":29,"level":0},{"x":1322,"y":610,"score":126,"level":0},{"x":1330,"y":610,"score":31,"level":0},{"x":1340,"y":610,"score":29,"level":0},{"x":1355,"y":610,"score":43,"level":0},{"x":1384,"y":610,"score":32,"level":0},{"x":1440,"y":610,"score":96,"level":0},{"x":521,"y":611,"score":35,"level":0},{"x":552,"y":611,"score":36,"level":0},{"x":618,"y":611,"score":57,"level":0},{"x":670,"y":611,"score":38,"level":0},{"x":716,"y":611,"score":27,"level":0},{"x":753,"y":611,"score":42,"level":0},{"x":758,"y":611,"score":51,"level":0},{"x":788,"y":611,"score":36,"level":0},{"x":801,"y":611,"score":125,"level":0},{"x":839,"y":611,"score":104,"level":0},{"x":847,"y":611,"score":146,"level":0},{"x":897,"y":611,"score":38,"level":0},{"x":903,"y":611,"score":33,"level":0},{"x":917,"y":611,"score":82,"level":0},{"x":927,"y":611,"score":65,"level":0},{"x":977,"y":611,"score":50,"level":0},{"x":1119,"y":611,"score":30,"level":0},{"x":1139,"y":611,"score":133,"level":0},{"x":1144,"y":611,"score":84,"level":0},{"x":1241,"y":611,"score":101,"level":0},{"x":1277,"y":611,"score":28,"level":0},{"x":1420,"y":611,"score":107,"level":0},{"x":1449,"y":611,"score":51,"level":0},{"x":1461,"y":611,"score":150,"level":0},{"x":540,"y":612,"score":80,"level":0},{"x":647,"y":612,"score":64,"level":0},{"x":653,"y":612,"score":59,"level":0},{"x":690,"y":612,"score":117,"level":0},{"x":729,"y":612,"score":94,"level":0},{"x":762,"y":612,"score":66,"level":0},{"x":769,"y":612,"score":84,"level":0},{"x":779,"y":612,"score":59,"level":0},{"x":783,"y":612,"score":28,"level":0},{"x":815,"y":612,"score":53,"level":0},{"x":863,"y":612,"score":46,"level":0},{"x":929,"y":612,"score":100,"level":0},{"x":942,"y":612,"score":62,"level":0},{"x":947,"y":612,"score":58,"level":0},{"x":969,"y":612,"score":42,"level":0},{"x":974,"y":612,"score":62,"level":0},{"x":982,"y":612,"score":194,"level":0},{"x":1017,"y":612,"score":147,"level":0},{"x":1093,"y":612,"score":45,"level":0},{"x":1104,"y":612,"score":42,"level":0},{"x":1180,"y":612,"score":38,"level":0},{"x":1227,"y":612,"score":87,"level":0},{"x":1235,"y":612,"score":129,"level":0},{"x":1244,"y":612,"score":72,"level":0},{"x":1264,"y":612,"score":56,"level":0},{"x":1291,"y":612,"score":50,"level":0},{"x":1329,"y":612,"score":40,"level":0},{"x":1332,"y":612,"score":34,"level":0},{"x":1348,"y":612,"score":35,"level":0},{"x":1425,"y":612,"score":67,"level":0},{"x":449,"y":613,"score":90,"level":0},{"x":491,"y":613,"score":52,"level":0},{"x":528,"y":613,"score":36,"level":0},{"x":545,"y":613,"score":44,"level":0},{"x":569,"y":613,"score":35,"level":0},{"x":578,"y":613,"score":131,"level":0},{"x":588,"y":613,"score":47,"level":0},{"x":675,"y":613,"score":51,"level":0},{"x":726,"y":613,"score":34,"level":0},{"x":748,"y":613,"score":68,"level":0},{"x":767,"y":613,"score":53,"level":0},{"x":856,"y":613,"score":44,"level":0},{"x":892,"y":613,"score":83,"level":0},{"x":905,"y":613,"score":45,"level":0},{"x":955,"y":613,"score":52,"level":0},{"x":987,"y":613,"score":77,"level":0},{"x":1003,"y":613,"score":127,"level":0},{"x":1027,"y":613,"score":110,"level":0},{"x":1074,"y":613,"score":35,"level":0},{"x":1169,"y":613,"score":139,"level":0},{"x":1185,"y":613,"score":28,"level":0},{"x":1214,"y":613,"score":100,"level":0},{"x":1312,"y":613,"score":126,"level":0},{"x":1336,"y":613,"score":75,"level":0},{"x":1353,"y":613,"score":37,"level":0},{"x":1371,"y":613,"score":33,"level":0},{"x":1389,"y":613,"score":130,"level":0},{"x":1405,"y":613,"score":78,"level":0},{"x":1432,"y":613,"score":80,"level":0},{"x":1446,"y":613,"score":135,"level":0},{"x":1490,"y":613,"score":37,"level":0},{"x":420,"y":614,"score":145,"level":0},{"x":484,"y":614,"score":117,"level":0},{"x":496,"y":614,"score":39,"level":0},{"x":510,"y":614,"score":182,"level":0},{"x":516,"y":614,"score":77,"level":0},{"x":554,"y":614,"score":28,"level":0},{"x":698,"y":614,"score":119,"level":0},{"x":743,"y":614,"score":42,"level":0},{"x":765,"y":614,"score":99,"level":0},{"x":823,"y":614,"score":118,"level":0},{"x":830,"y":614,"score":157,"level":0},{"x":879,"y":614,"score":70,"level":0},{"x":941,"y":614,"score":95,"level":0},{"x":968,"y":614,"score":48,"level":0},{"x":1035,"y":614,"score":115,"level":0},{"x":1123,"y":614,"score":63,"level":0},{"x":1194,"y":614,"score":67,"level":0},{"x":1300,"y":614,"score":161,"level":0},{"x":1396,"y":614,"score":54,"level":0},{"x":1417,"y":614,"score":60,"level":0},{"x":1444,"y":614,"score":159,"level":0},{"x":1456,"y":614,"score":55,"level":0},{"x":1472,"y":614,"score":61,"level":0},{"x":583,"y":615,"score":140,"level":0},{"x":671,"y":615,"score":64,"level":0},{"x":711,"y":615,"score":111,"level":0},{"x":738,"y":615,"score":95,"level":0},{"x":845,"y":615,"score":32,"level":0},{"x":859,"y":615,"score":42,"level":0},{"x":910,"y":615,"score":91,"level":0},{"x":923,"y":615,"score":101,"level":0},{"x":957,"y":615,"score":95,"level":0},{"x":1032,"y":615,"score":124,"level":0},{"x":1058,"y":615,"score":125,"level":0},{"x":1064,"y":615,"score":120,"level":0},{"x":1069,"y":615,"score":90,"level":0},{"x":1098,"y":615,"score":57,"level":0},{"x":1132,"y":615,"score":192,"level":0},{"x":1162,"y":615,"score":72,"level":0},{"x":1356,"y":615,"score":126,"level":0},{"x":1411,"y":615,"score":197,"level":0},{"x":1423,"y":615,"score":33,"level":0},{"x":1439,"y":615,"score":63,"level":0},{"x":1465,"y":615,"score":116,"level":0},{"x":1484,"y":615,"score":58,"level":0},{"x":439,"y":616,"score":94,"level":0},{"x":499,"y":616,"score":58,"level":0},{"x":504,"y":616,"score":58,"level":0},{"x":663,"y":616,"score":179,"level":0},{"x":676,"y":616,"score":29,"level":0},{"x":687,"y":616,"score":104,"level":0},{"x":744,"y":616,"score":43,"level":0},{"x":789,"y":616,"score":199,"level":0},{"x":799,"y":616,"score":45,"level":0},{"x":851,"y":616,"score":79,"level":0},{"x":950,"y":616,"score":103,"level":0},{"x":1051,"y":616,"score":50,"level":0},{"x":1117,"y":616,"score":74,"level":0},{"x":1140,"y":616,"score":271,"level":0},{"x":1148,"y":616,"score":74,"level":0},{"x":1156,"y":616,"score":62,"level":0},{"x":1175,"y":616,"score":220,"level":0},{"x":1200,"y":616,"score":26,"level":0},{"x":1221,"y":616,"score":50,"level":0},{"x":1234,"y":616,"score":109,"level":0},{"x":1245,"y":616,"score":29,"level":0},{"x":1283,"y":616,"score":38,"level":0},{"x":1298,"y":616,"score":221,"level":0},{"x":1324,"y":616,"score":63,"level":0},{"x":1391,"y":616,"score":127,"level":0},{"x":561,"y":617,"score":30,"level":0},{"x":615,"y":617,"score":26,"level":0},{"x":638,"y":617,"score":74,"level":0},{"x":647,"y":617,"score":143,"level":0},{"x":652,"y":617,"score":174,"level":0},{"x":718,"y":617,"score":154,"level":0},{"x":783,"y":617,"score":124,"level":0},{"x":802,"y":617,"score":104,"level":0},{"x":815,"y":617,"score":57,"level":0},{"x":842,"y":617,"score":30,"level":0},{"x":863,"y":617,"score":51,"level":0},{"x":896,"y":617,"score":58,"level":0},{"x":931,"y":617,"score":171,"level":0},{"x":936,"y":617,"score":52,"level":0},{"x":1046,"y":617,"score":49,"level":0},{"x":1082,"y":617,"score":48,"level":0},{"x":1166,"y":617,"score":150,"level":0},{"x":1198,"y":617,"score":50,"level":0},{"x":1243,"y":617,"score":57,"level":0},{"x":1290,"y":617,"score":124,"level":0},{"x":1422,"y":617,"score":39,"level":0},{"x":1428,"y":617,"score":58,"level":0},{"x":1442,"y":617,"score":124,"level":0},{"x":1449,"y":617,"score":162,"level":0},{"x":1460,"y":617,"score":50,"level":0},{"x":491,"y":618,"score":40,"level":0},{"x":526,"y":618,"score":40,"level":0},{"x":547,"y":618,"score":92,"level":0},{"x":668,"y":618,"score":49,"level":0},{"x":740,"y":618,"score":67,"level":0},{"x":748,"y":618,"score":70,"level":0},{"x":773,"y":618,"score":71,"level":0},{"x":820,"y":618,"score":120,"level":0},{"x":826,"y":618,"score":80,"level":0},{"x":900,"y":618,"score":70,"level":0},{"x":982,"y":618,"score":48,"level":0},{"x":1033,"y":618,"score":188,"level":0},{"x":1092,"y":618,"score":34,"level":0},{"x":1184,"y":618,"score":81,"level":0},{"x":1214,"y":618,"score":26,"level":0},{"x":1252,"y":618,"score":40,"level":0},{"x":1255,"y":618,"score":55,"level":0},{"x":1306,"y":618,"score":122,"level":0},{"x":1405,"y":618,"score":63,"level":0},{"x":1434,"y":618,"score":107,"level":0},{"x":1480,"y":618,"score":98,"level":0},{"x":404,"y":619,"score":134,"level":0},{"x":532,"y":619,"score":104,"level":0},{"x":556,"y":619,"score":66,"level":0},{"x":569,"y":619,"score":46,"level":0},{"x":634,"y":619,"score":107,"level":0},{"x":657,"y":619,"score":66,"level":0},{"x":696,"y":619,"score":81,"level":0},{"x":786,"y":619,"score":137,"level":0},{"x":944,"y":619,"score":76,"level":0},{"x":988,"y":619,"score":46,"level":0},{"x":1119,"y":619,"score":74,"level":0},{"x":1124,"y":619,"score":133,"level":0},{"x":1157,"y":619,"score":104,"level":0},{"x":1188,"y":619,"score":142,"level":0},{"x":1193,"y":619,"score":155,"level":0},{"x":1260,"y":619,"score":130,"level":0},{"x":1263,"y":619,"score":90,"level":0},{"x":1275,"y":619,"score":243,"level":0},{"x":1294,"y":619,"score":104,"level":0},{"x":1333,"y":619,"score":38,"level":0},{"x":1372,"y":619,"score":41,"level":0},{"x":1397,"y":619,"score":45,"level":0},{"x":1415,"y":619,"score":31,"level":0},{"x":1456,"y":619,"score":144,"level":0},{"x":1489,"y":619,"score":32,"level":0},{"x":397,"y":620,"score":165,"level":0},{"x":598,"y":620,"score":26,"level":0},{"x":690,"y":620,"score":87,"level":0},{"x":765,"y":620,"score":98,"level":0},{"x":875,"y":620,"score":40,"level":0},{"x":883,"y":620,"score":38,"level":0},{"x":1004,"y":620,"score":90,"level":0},{"x":1025,"y":620,"score":34,"level":0},{"x":1039,"y":620,"score":136,"level":0},{"x":1056,"y":620,"score":38,"level":0},{"x":1116,"y":620,"score":32,"level":0},{"x":1133,"y":620,"score":106,"level":0},{"x":1238,"y":620,"score":57,"level":0},{"x":1270,"y":620,"score":119,"level":0},{"x":1362,"y":620,"score":136,"level":0},{"x":1371,"y":620,"score":73,"level":0},{"x":1378,"y":620,"score":78,"level":0},{"x":1388,"y":620,"score":86,"level":0},{"x":1463,"y":620,"score":91,"level":0},{"x":469,"y":621,"score":48,"level":0},{"x":475,"y":621,"score":142,"level":0},{"x":495,"y":621,"score":111,"level":0},{"x":500,"y":621,"score":30,"level":0},{"x":540,"y":621,"score":56,"level":0},{"x":674,"y":621,"score":48,"level":0},{"x":806,"y":621,"score":60,"level":0},{"x":870,"y":621,"score":51,"level":0},{"x":888,"y":621,"score":45,"level":0},{"x":908,"y":621,"score":86,"level":0},{"x":928,"y":621,"score":49,"level":0},{"x":1028,"y":621,"score":44,"level":0},{"x":1034,"y":621,"score":159,"level":0},{"x":1078,"y":621,"score":48,"level":0},{"x":1105,"y":621,"score":132,"level":0},{"x":1112,"y":621,"score":105,"level":0},{"x":1144,"y":621,"score":39,"level":0},{"x":1153,"y":621,"score":40,"level":0},{"x":1212,"y":621,"score":58,"level":0},{"x":1227,"y":621,"score":107,"level":0},{"x":1233,"y":621,"score":71,"level":0},{"x":1284,"y":621,"score":83,"level":0},{"x":427,"y":622,"score":82,"level":0},{"x":450,"y":622,"score":69,"level":0},{"x":561,"y":622,"score":115,"level":0},{"x":578,"y":622,"score":51,"level":0},{"x":593,"y":622,"score":61,"level":0},{"x":635,"y":622,"score":44,"level":0},{"x":646,"y":622,"score":104,"level":0},{"x":653,"y":622,"score":87,"level":0},{"x":756,"y":622,"score":60,"level":0},{"x":770,"y":622,"score":49,"level":0},{"x":792,"y":622,"score":168,"level":0},{"x":802,"y":622,"score":32,"level":0},{"x":852,"y":622,"score":108,"level":0},{"x":867,"y":622,"score":66,"level":0},{"x":913,"y":622,"score":98,"level":0},{"x":920,"y":622,"score":87,"level":0},{"x":943,"y":622,"score":49,"level":0},{"x":960,"y":622,"score":50,"level":0},{"x":1011,"y":622,"score":144,"level":0},{"x":1052,"y":622,"score":57,"level":0},{"x":1057,"y":622,"score":33,"level":0},{"x":1139,"y":622,"score":40,"level":0},{"x":1176,"y":622,"score":148,"level":0},{"x":1310,"y":622,"score":144,"level":0},{"x":1329,"y":622,"score":34,"level":0},{"x":1351,"y":622,"score":96,"level":0},{"x":1385,"y":622,"score":57,"level":0},{"x":1425,"y":622,"score":89,"level":0},{"x":1440,"y":622,"score":65,"level":0},{"x":1446,"y":622,"score":103,"level":0},{"x":1451,"y":622,"score":60,"level":0},{"x":1458,"y":622,"score":107,"level":0},{"x":1469,"y":622,"score":130,"level":0},{"x":382,"y":623,"score":55,"level":0},{"x":387,"y":623,"score":72,"level":0},{"x":413,"y":623,"score":134,"level":0},{"x":422,"y":623,"score":39,"level":0},{"x":433,"y":623,"score":131,"level":0},{"x":516,"y":623,"score":55,"level":0},{"x":527,"y":623,"score":82,"level":0},{"x":544,"y":623,"score":75,"level":0},{"x":703,"y":623,"score":51,"level":0},{"x":740,"y":623,"score":39,"level":0},{"x":819,"y":623,"score":103,"level":0},{"x":825,"y":623,"score":62,"level":0},{"x":833,"y":623,"score":44,"level":0},{"x":873,"y":623,"score":42,"level":0},{"x":981,"y":623,"score":41,"level":0},{"x":996,"y":623,"score":88,"level":0},{"x":1182,"y":623,"score":61,"level":0},{"x":1200,"y":623,"score":103,"level":0},{"x":1205,"y":623,"score":34,"level":0},{"x":1217,"y":623,"score":81,"level":0},{"x":1219,"y":623,"score":76,"level":0},{"x":1222,"y":623,"score":78,"level":0},{"x":1224,"y":623,"score":65,"level":0},{"x":1243,"y":623,"score":182,"level":0},{"x":1252,"y":623,"score":73,"level":0},{"x":1257,"y":623,"score":48,"level":0},{"x":1304,"y":623,"score":89,"level":0},{"x":1326,"y":623,"score":35,"level":0},{"x":1358,"y":623,"score":86,"level":0},{"x":1393,"y":623,"score":104,"level":0},{"x":1406,"y":623,"score":112,"level":0},{"x":1437,"y":623,"score":80,"level":0},{"x":1480,"y":623,"score":89,"level":0},{"x":533,"y":624,"score":61,"level":0},{"x":637,"y":624,"score":44,"level":0},{"x":751,"y":624,"score":89,"level":0},{"x":775,"y":624,"score":75,"level":0},{"x":805,"y":624,"score":35,"level":0},{"x":934,"y":624,"score":36,"level":0},{"x":1051,"y":624,"score":66,"level":0},{"x":1058,"y":624,"score":36,"level":0},{"x":1159,"y":624,"score":31,"level":0},{"x":1168,"y":624,"score":133,"level":0},{"x":1193,"y":624,"score":68,"level":0},{"x":1295,"y":624,"score":260,"level":0},{"x":1375,"y":624,"score":84,"level":0},{"x":1442,"y":624,"score":38,"level":0},{"x":1487,"y":624,"score":47,"level":0},{"x":398,"y":625,"score":113,"level":0},{"x":460,"y":625,"score":30,"level":0},{"x":634,"y":625,"score":30,"level":0},{"x":675,"y":625,"score":46,"level":0},{"x":779,"y":625,"score":60,"level":0},{"x":861,"y":625,"score":92,"level":0},{"x":878,"y":625,"score":31,"level":0},{"x":884,"y":625,"score":47,"level":0},{"x":894,"y":625,"score":133,"level":0},{"x":927,"y":625,"score":155,"level":0},{"x":956,"y":625,"score":98,"level":0},{"x":1044,"y":625,"score":61,"level":0},{"x":1071,"y":625,"score":68,"level":0},{"x":1079,"y":625,"score":35,"level":0},{"x":1088,"y":625,"score":82,"level":0},{"x":1097,"y":625,"score":94,"level":0},{"x":1197,"y":625,"score":44,"level":0},{"x":1237,"y":625,"score":63,"level":0},{"x":1269,"y":625,"score":29,"level":0},{"x":1333,"y":625,"score":112,"level":0},{"x":1371,"y":625,"score":32,"level":0},{"x":1461,"y":625,"score":45,"level":0},{"x":476,"y":626,"score":202,"level":0},{"x":491,"y":626,"score":26,"level":0},{"x":542,"y":626,"score":27,"level":0},{"x":548,"y":626,"score":33,"level":0},{"x":661,"y":626,"score":72,"level":0},{"x":690,"y":626,"score":54,"level":0},{"x":754,"y":626,"score":44,"level":0},{"x":784,"y":626,"score":42,"level":0},{"x":789,"y":626,"score":46,"level":0},{"x":806,"y":626,"score":140,"level":0},{"x":958,"y":626,"score":67,"level":0},{"x":975,"y":626,"score":47,"level":0},{"x":1006,"y":626,"score":36,"level":0},{"x":1017,"y":626,"score":188,"level":0},{"x":1023,"y":626,"score":109,"level":0},{"x":1034,"y":626,"score":63,"level":0},{"x":1113,"y":626,"score":104,"level":0},{"x":1128,"y":626,"score":83,"level":0},{"x":1212,"y":626,"score":52,"level":0},{"x":1228,"y":626,"score":122,"level":0},{"x":1257,"y":626,"score":41,"level":0},{"x":1280,"y":626,"score":64,"level":0},{"x":1320,"y":626,"score":42,"level":0},{"x":1389,"y":626,"score":46,"level":0},{"x":1395,"y":626,"score":52,"level":0},{"x":1415,"y":626,"score":239,"level":0},{"x":1430,"y":626,"score":119,"level":0},{"x":1435,"y":626,"score":28,"level":0},{"x":1446,"y":626,"score":104,"level":0},{"x":1472,"y":626,"score":92,"level":0},{"x":520,"y":627,"score":45,"level":0},{"x":579,"y":627,"score":47,"level":0},{"x":861,"y":627,"score":74,"level":0},{"x":909,"y":627,"score":83,"level":0},{"x":960,"y":627,"score":41,"level":0},{"x":999,"y":627,"score":44,"level":0},{"x":1038,"y":627,"score":80,"level":0},{"x":1138,"y":627,"score":59,"level":0},{"x":1144,"y":627,"score":130,"level":0},{"x":1232,"y":627,"score":142,"level":0},{"x":1263,"y":627,"score":27,"level":0},{"x":1284,"y":627,"score":67,"level":0},{"x":1317,"y":627,"score":62,"level":0},{"x":1328,"y":627,"score":33,"level":0},{"x":1354,"y":627,"score":116,"level":0},{"x":1367,"y":627,"score":149,"level":0},{"x":1373,"y":627,"score":41,"level":0},{"x":1382,"y":627,"score":39,"level":0},{"x":1409,"y":627,"score":38,"level":0},{"x":1453,"y":627,"score":110,"level":0},{"x":1470,"y":627,"score":107,"level":0},{"x":1490,"y":627,"score":60,"level":0},{"x":387,"y":628,"score":35,"level":0},{"x":406,"y":628,"score":73,"level":0},{"x":437,"y":628,"score":118,"level":0},{"x":444,"y":628,"score":155,"level":0},{"x":470,"y":628,"score":28,"level":0},{"x":492,"y":628,"score":48,"level":0},{"x":531,"y":628,"score":31,"level":0},{"x":545,"y":628,"score":64,"level":0},{"x":638,"y":628,"score":52,"level":0},{"x":681,"y":628,"score":122,"level":0},{"x":701,"y":628,"score":32,"level":0},{"x":727,"y":628,"score":62,"level":0},{"x":837,"y":628,"score":37,"level":0},{"x":883,"y":628,"score":37,"level":0},{"x":917,"y":628,"score":55,"level":0},{"x":984,"y":628,"score":117,"level":0},{"x":994,"y":628,"score":46,"level":0},{"x":1108,"y":628,"score":141,"level":0},{"x":1132,"y":628,"score":102,"level":0},{"x":1155,"y":628,"score":73,"level":0},{"x":1179,"y":628,"score":36,"level":0},{"x":1198,"y":628,"score":50,"level":0},{"x":1222,"y":628,"score":79,"level":0},{"x":1251,"y":628,"score":63,"level":0},{"x":1260,"y":628,"score":65,"level":0},{"x":1267,"y":628,"score":29,"level":0},{"x":1340,"y":628,"score":82,"level":0},{"x":1358,"y":628,"score":204,"level":0},{"x":1440,"y":628,"score":64,"level":0},{"x":1455,"y":628,"score":60,"level":0},{"x":1462,"y":628,"score":29,"level":0},{"x":1480,"y":628,"score":108,"level":0},{"x":389,"y":629,"score":48,"level":0},{"x":496,"y":629,"score":58,"level":0},{"x":523,"y":629,"score":28,"level":0},{"x":568,"y":629,"score":46,"level":0},{"x":656,"y":629,"score":61,"level":0},{"x":763,"y":629,"score":64,"level":0},{"x":804,"y":629,"score":74,"level":0},{"x":807,"y":629,"score":31,"level":0},{"x":810,"y":629,"score":28,"level":0},{"x":835,"y":629,"score":42,"level":0},{"x":871,"y":629,"score":209,"level":0},{"x":889,"y":629,"score":215,"level":0},{"x":936,"y":629,"score":164,"level":0},{"x":970,"y":629,"score":31,"level":0},{"x":978,"y":629,"score":52,"level":0},{"x":1012,"y":629,"score":77,"level":0},{"x":1032,"y":629,"score":63,"level":0},{"x":1175,"y":629,"score":86,"level":0},{"x":1184,"y":629,"score":52,"level":0},{"x":1216,"y":629,"score":84,"level":0},{"x":1255,"y":629,"score":100,"level":0},{"x":1295,"y":629,"score":57,"level":0},{"x":1308,"y":629,"score":47,"level":0},{"x":451,"y":630,"score":108,"level":0},{"x":526,"y":630,"score":52,"level":0},{"x":531,"y":630,"score":51,"level":0},{"x":536,"y":630,"score":107,"level":0},{"x":687,"y":630,"score":70,"level":0},{"x":693,"y":630,"score":87,"level":0},{"x":779,"y":630,"score":26,"level":0},{"x":901,"y":630,"score":135,"level":0},{"x":943,"y":630,"score":60,"level":0},{"x":956,"y":630,"score":47,"level":0},{"x":1007,"y":630,"score":31,"level":0},{"x":1021,"y":630,"score":186,"level":0},{"x":1026,"y":630,"score":185,"level":0},{"x":1050,"y":630,"score":127,"level":0},{"x":1059,"y":630,"score":64,"level":0},{"x":1076,"y":630,"score":94,"level":0},{"x":1088,"y":630,"score":164,"level":0},{"x":1100,"y":630,"score":50,"level":0},{"x":1168,"y":630,"score":103,"level":0},{"x":1303,"y":630,"score":73,"level":0},{"x":1349,"y":630,"score":248,"level":0},{"x":1433,"y":630,"score":28,"level":0},{"x":402,"y":631,"score":98,"level":0},{"x":426,"y":631,"score":65,"level":0},{"x":486,"y":631,"score":34,"level":0},{"x":539,"y":631,"score":89,"level":0},{"x":618,"y":631,"score":72,"level":0},{"x":707,"y":631,"score":26,"level":0},{"x":755,"y":631,"score":63,"level":0},{"x":786,"y":631,"score":39,"level":0},{"x":803,"y":631,"score":108,"level":0},{"x":862,"y":631,"score":88,"level":0},{"x":875,"y":631,"score":49,"level":0},{"x":1110,"y":631,"score":82,"level":0},{"x":1113,"y":631,"score":35,"level":0},{"x":1200,"y":631,"score":62,"level":0},{"x":1216,"y":631,"score":90,"level":0},{"x":1226,"y":631,"score":40,"level":0},{"x":1243,"y":631,"score":98,"level":0},{"x":1263,"y":631,"score":61,"level":0},{"x":1265,"y":631,"score":56,"level":0},{"x":1276,"y":631,"score":122,"level":0},{"x":1404,"y":631,"score":99,"level":0},{"x":1436,"y":631,"score":32,"level":0},{"x":1464,"y":631,"score":35,"level":0},{"x":1484,"y":631,"score":196,"level":0},{"x":499,"y":632,"score":76,"level":0},{"x":509,"y":632,"score":68,"level":0},{"x":516,"y":632,"score":33,"level":0},{"x":568,"y":632,"score":38,"level":0},{"x":634,"y":632,"score":37,"level":0},{"x":671,"y":632,"score":91,"level":0},{"x":739,"y":632,"score":44,"level":0},{"x":993,"y":632,"score":34,"level":0},{"x":1063,"y":632,"score":74,"level":0},{"x":1081,"y":632,"score":126,"level":0},{"x":1163,"y":632,"score":38,"level":0},{"x":1195,"y":632,"score":39,"level":0},{"x":1210,"y":632,"score":72,"level":0},{"x":1251,"y":632,"score":91,"level":0},{"x":1318,"y":632,"score":61,"level":0},{"x":1327,"y":632,"score":197,"level":0},{"x":1339,"y":632,"score":90,"level":0},{"x":1373,"y":632,"score":64,"level":0},{"x":1376,"y":632,"score":62,"level":0},{"x":1444,"y":632,"score":77,"level":0},{"x":1449,"y":632,"score":28,"level":0},{"x":1453,"y":632,"score":28,"level":0},{"x":1477,"y":632,"score":149,"level":0},{"x":410,"y":633,"score":118,"level":0},{"x":437,"y":633,"score":36,"level":0},{"x":475,"y":633,"score":79,"level":0},{"x":484,"y":633,"score":62,"level":0},{"x":521,"y":633,"score":27,"level":0},{"x":653,"y":633,"score":62,"level":0},{"x":718,"y":633,"score":58,"level":0},{"x":724,"y":633,"score":112,"level":0},{"x":782,"y":633,"score":28,"level":0},{"x":933,"y":633,"score":53,"level":0},{"x":952,"y":633,"score":104,"level":0},{"x":985,"y":633,"score":44,"level":0},{"x":1000,"y":633,"score":41,"level":0},{"x":1009,"y":633,"score":28,"level":0},{"x":1125,"y":633,"score":198,"level":0},{"x":1133,"y":633,"score":36,"level":0},{"x":1145,"y":633,"score":58,"level":0},{"x":1179,"y":633,"score":85,"level":0},{"x":1379,"y":633,"score":61,"level":0},{"x":1434,"y":633,"score":35,"level":0},{"x":1457,"y":633,"score":45,"level":0},{"x":1460,"y":633,"score":31,"level":0},{"x":1470,"y":633,"score":139,"level":0},{"x":383,"y":634,"score":74,"level":0},{"x":397,"y":634,"score":100,"level":0},{"x":419,"y":634,"score":145,"level":0},{"x":444,"y":634,"score":170,"level":0},{"x":624,"y":634,"score":56,"level":0},{"x":640,"y":634,"score":69,"level":0},{"x":660,"y":634,"score":87,"level":0},{"x":662,"y":634,"score":92,"level":0},{"x":675,"y":634,"score":61,"level":0},{"x":680,"y":634,"score":82,"level":0},{"x":735,"y":634,"score":39,"level":0},{"x":776,"y":634,"score":47,"level":0},{"x":792,"y":634,"score":41,"level":0},{"x":809,"y":634,"score":74,"level":0},{"x":847,"y":634,"score":39,"level":0},{"x":916,"y":634,"score":125,"level":0},{"x":940,"y":634,"score":37,"level":0},{"x":966,"y":634,"score":74,"level":0},{"x":1005,"y":634,"score":32,"level":0},{"x":1015,"y":634,"score":61,"level":0},{"x":1072,"y":634,"score":40,"level":0},{"x":1092,"y":634,"score":99,"level":0},{"x":1147,"y":634,"score":60,"level":0},{"x":1183,"y":634,"score":58,"level":0},{"x":1366,"y":634,"score":68,"level":0},{"x":1372,"y":634,"score":45,"level":0},{"x":1390,"y":634,"score":40,"level":0},{"x":1409,"y":634,"score":26,"level":0},{"x":1442,"y":634,"score":63,"level":0},{"x":399,"y":635,"score":106,"level":0},{"x":405,"y":635,"score":50,"level":0},{"x":484,"y":635,"score":137,"level":0},{"x":502,"y":635,"score":40,"level":0},{"x":532,"y":635,"score":60,"level":0},{"x":630,"y":635,"score":26,"level":0},{"x":645,"y":635,"score":112,"level":0},{"x":654,"y":635,"score":39,"level":0},{"x":693,"y":635,"score":31,"level":0},{"x":765,"y":635,"score":74,"level":0},{"x":853,"y":635,"score":152,"level":0},{"x":875,"y":635,"score":44,"level":0},{"x":900,"y":635,"score":140,"level":0},{"x":946,"y":635,"score":101,"level":0},{"x":995,"y":635,"score":52,"level":0},{"x":1026,"y":635,"score":94,"level":0},{"x":1057,"y":635,"score":63,"level":0},{"x":1114,"y":635,"score":176,"level":0},{"x":1119,"y":635,"score":161,"level":0},{"x":1185,"y":635,"score":167,"level":0},{"x":1222,"y":635,"score":43,"level":0},{"x":1225,"y":635,"score":49,"level":0},{"x":1232,"y":635,"score":83,"level":0},{"x":1316,"y":635,"score":142,"level":0},{"x":1344,"y":635,"score":83,"level":0},{"x":1349,"y":635,"score":216,"level":0},{"x":1402,"y":635,"score":107,"level":0},{"x":380,"y":636,"score":79,"level":0},{"x":427,"y":636,"score":38,"level":0},{"x":429,"y":636,"score":29,"level":0},{"x":448,"y":636,"score":29,"level":0},{"x":587,"y":636,"score":39,"level":0},{"x":595,"y":636,"score":34,"level":0},{"x":640,"y":636,"score":76,"level":0},{"x":699,"y":636,"score":88,"level":0},{"x":704,"y":636,"score":157,"level":0},{"x":710,"y":636,"score":62,"level":0},{"x":715,"y":636,"score":46,"level":0},{"x":767,"y":636,"score":91,"level":0},{"x":773,"y":636,"score":45,"level":0},{"x":855,"y":636,"score":106,"level":0},{"x":867,"y":636,"score":50,"level":0},{"x":891,"y":636,"score":130,"level":0},{"x":925,"y":636,"score":92,"level":0},{"x":952,"y":636,"score":85,"level":0},{"x":989,"y":636,"score":114,"level":0},{"x":1003,"y":636,"score":66,"level":0},{"x":1040,"y":636,"score":113,"level":0},{"x":1049,"y":636,"score":122,"level":0},{"x":1087,"y":636,"score":85,"level":0},{"x":1239,"y":636,"score":57,"level":0},{"x":1254,"y":636,"score":77,"level":0},{"x":1266,"y":636,"score":62,"level":0},{"x":1276,"y":636,"score":193,"level":0},{"x":1307,"y":636,"score":322,"level":0},{"x":1404,"y":636,"score":39,"level":0},{"x":1409,"y":636,"score":42,"level":0},{"x":1424,"y":636,"score":56,"level":0},{"x":1441,"y":636,"score":67,"level":0},{"x":377,"y":637,"score":160,"level":0},{"x":389,"y":637,"score":27,"level":0},{"x":456,"y":637,"score":31,"level":0},{"x":507,"y":637,"score":178,"level":0},{"x":635,"y":637,"score":26,"level":0},{"x":671,"y":637,"score":36,"level":0},{"x":739,"y":637,"score":49,"level":0},{"x":741,"y":637,"score":43,"level":0},{"x":779,"y":637,"score":33,"level":0},{"x":799,"y":637,"score":86,"level":0},{"x":802,"y":637,"score":55,"level":0},{"x":814,"y":637,"score":51,"level":0},{"x":858,"y":637,"score":31,"level":0},{"x":960,"y":637,"score":95,"level":0},{"x":1032,"y":637,"score":199,"level":0},{"x":1063,"y":637,"score":105,"level":0},{"x":1070,"y":637,"score":33,"level":0},{"x":1072,"y":637,"score":50,"level":0},{"x":1101,"y":637,"score":28,"level":0},{"x":1139,"y":637,"score":34,"level":0},{"x":1176,"y":637,"score":69,"level":0},{"x":1214,"y":637,"score":29,"level":0},{"x":1219,"y":637,"score":58,"level":0},{"x":1244,"y":637,"score":128,"level":0},{"x":1252,"y":637,"score":120,"level":0},{"x":1282,"y":637,"score":125,"level":0},{"x":1321,"y":637,"score":30,"level":0},{"x":1327,"y":637,"score":33,"level":0},{"x":1334,"y":637,"score":84,"level":0},{"x":1421,"y":637,"score":68,"level":0},{"x":1445,"y":637,"score":42,"level":0},{"x":1450,"y":637,"score":36,"level":0},{"x":1464,"y":637,"score":96,"level":0},{"x":1476,"y":637,"score":163,"level":0},{"x":686,"y":638,"score":29,"level":0},{"x":761,"y":638,"score":26,"level":0},{"x":794,"y":638,"score":35,"level":0},{"x":823,"y":638,"score":29,"level":0},{"x":849,"y":638,"score":94,"level":0},{"x":878,"y":638,"score":111,"level":0},{"x":883,"y":638,"score":148,"level":0},{"x":999,"y":638,"score":46,"level":0},{"x":1079,"y":638,"score":79,"level":0},{"x":1106,"y":638,"score":26,"level":0},{"x":1129,"y":638,"score":39,"level":0},{"x":1154,"y":638,"score":89,"level":0},{"x":1186,"y":638,"score":47,"level":0},{"x":1203,"y":638,"score":105,"level":0},{"x":1295,"y":638,"score":96,"level":0},{"x":1360,"y":638,"score":39,"level":0},{"x":1368,"y":638,"score":56,"level":0},{"x":1370,"y":638,"score":34,"level":0},{"x":1378,"y":638,"score":116,"level":0},{"x":1396,"y":638,"score":137,"level":0},{"x":1425,"y":638,"score":57,"level":0},{"x":1431,"y":638,"score":78,"level":0},{"x":1436,"y":638,"score":55,"level":0},{"x":1460,"y":638,"score":126,"level":0},{"x":1467,"y":638,"score":67,"level":0},{"x":467,"y":639,"score":78,"level":0},{"x":645,"y":639,"score":47,"level":0},{"x":661,"y":639,"score":83,"level":0},{"x":667,"y":639,"score":55,"level":0},{"x":756,"y":639,"score":82,"level":0},{"x":929,"y":639,"score":63,"level":0},{"x":940,"y":639,"score":116,"level":0},{"x":956,"y":639,"score":56,"level":0},{"x":979,"y":639,"score":50,"level":0},{"x":1014,"y":639,"score":108,"level":0},{"x":1071,"y":639,"score":41,"level":0},{"x":1091,"y":639,"score":37,"level":0},{"x":1102,"y":639,"score":44,"level":0},{"x":1165,"y":639,"score":43,"level":0},{"x":1191,"y":639,"score":177,"level":0},{"x":1211,"y":639,"score":79,"level":0},{"x":1230,"y":639,"score":88,"level":0},{"x":1268,"y":639,"score":149,"level":0},{"x":1331,"y":639,"score":36,"level":0},{"x":1389,"y":639,"score":75,"level":0},{"x":1413,"y":639,"score":29,"level":0},{"x":1481,"y":639,"score":100,"level":0},{"x":403,"y":640,"score":58,"level":0},{"x":405,"y":640,"score":49,"level":0},{"x":425,"y":640,"score":36,"level":0},{"x":479,"y":640,"score":70,"level":0},{"x":528,"y":640,"score":28,"level":0},{"x":650,"y":640,"score":73,"level":0},{"x":678,"y":640,"score":66,"level":0},{"x":711,"y":640,"score":45,"level":0},{"x":719,"y":640,"score":72,"level":0},{"x":728,"y":640,"score":123,"level":0},{"x":830,"y":640,"score":97,"level":0},{"x":875,"y":640,"score":75,"level":0},{"x":900,"y":640,"score":81,"level":0},{"x":987,"y":640,"score":102,"level":0},{"x":1009,"y":640,"score":42,"level":0},{"x":1017,"y":640,"score":77,"level":0},{"x":1054,"y":640,"score":67,"level":0},{"x":1067,"y":640,"score":144,"level":0},{"x":1111,"y":640,"score":32,"level":0},{"x":1115,"y":640,"score":49,"level":0},{"x":1125,"y":640,"score":102,"level":0},{"x":1135,"y":640,"score":69,"level":0},{"x":1154,"y":640,"score":40,"level":0},{"x":1179,"y":640,"score":108,"level":0},{"x":1199,"y":640,"score":68,"level":0},{"x":1239,"y":640,"score":93,"level":0},{"x":1315,"y":640,"score":187,"level":0},{"x":1350,"y":640,"score":82,"level":0},{"x":1407,"y":640,"score":89,"level":0},{"x":1420,"y":640,"score":154,"level":0},{"x":1428,"y":640,"score":30,"level":0},{"x":1436,"y":640,"score":102,"level":0},{"x":1461,"y":640,"score":105,"level":0},{"x":382,"y":641,"score":66,"level":0},{"x":388,"y":641,"score":60,"level":0},{"x":430,"y":641,"score":67,"level":0},{"x":486,"y":641,"score":42,"level":0},{"x":695,"y":641,"score":109,"level":0},{"x":735,"y":641,"score":80,"level":0},{"x":766,"y":641,"score":106,"level":0},{"x":771,"y":641,"score":54,"level":0},{"x":795,"y":641,"score":51,"level":0},{"x":808,"y":641,"score":98,"level":0},{"x":892,"y":641,"score":83,"level":0},{"x":993,"y":641,"score":58,"level":0},{"x":1060,"y":641,"score":102,"level":0},{"x":1120,"y":641,"score":232,"level":0},{"x":1210,"y":641,"score":41,"level":0},{"x":1216,"y":641,"score":67,"level":0},{"x":1286,"y":641,"score":83,"level":0},{"x":1340,"y":641,"score":75,"level":0},{"x":1342,"y":641,"score":31,"level":0},{"x":1357,"y":641,"score":26,"level":0},{"x":1374,"y":641,"score":51,"level":0},{"x":1385,"y":641,"score":135,"level":0},{"x":1415,"y":641,"score":46,"level":0},{"x":1424,"y":641,"score":46,"level":0},{"x":1453,"y":641,"score":99,"level":0},{"x":1479,"y":641,"score":150,"level":0},{"x":400,"y":642,"score":44,"level":0},{"x":432,"y":642,"score":89,"level":0},{"x":531,"y":642,"score":31,"level":0},{"x":570,"y":642,"score":44,"level":0},{"x":631,"y":642,"score":30,"level":0},{"x":640,"y":642,"score":98,"level":0},{"x":671,"y":642,"score":154,"level":0},{"x":785,"y":642,"score":114,"level":0},{"x":803,"y":642,"score":39,"level":0},{"x":960,"y":642,"score":94,"level":0},{"x":965,"y":642,"score":61,"level":0},{"x":1024,"y":642,"score":40,"level":0},{"x":1029,"y":642,"score":73,"level":0},{"x":1043,"y":642,"score":66,"level":0},{"x":1050,"y":642,"score":122,"level":0},{"x":1083,"y":642,"score":32,"level":0},{"x":1096,"y":642,"score":46,"level":0},{"x":1163,"y":642,"score":33,"level":0},{"x":1257,"y":642,"score":118,"level":0},{"x":1262,"y":642,"score":108,"level":0},{"x":1298,"y":642,"score":72,"level":0},{"x":1304,"y":642,"score":158,"level":0},{"x":1325,"y":642,"score":188,"level":0},{"x":1330,"y":642,"score":39,"level":0},{"x":1471,"y":642,"score":80,"level":0},{"x":1474,"y":642,"score":55,"level":0},{"x":407,"y":643,"score":100,"level":0},{"x":450,"y":643,"score":69,"level":0},{"x":568,"y":643,"score":36,"level":0},{"x":587,"y":643,"score":51,"level":0},{"x":613,"y":643,"score":30,"level":0},{"x":655,"y":643,"score":59,"level":0},{"x":725,"y":643,"score":26,"level":0},{"x":771,"y":643,"score":34,"level":0},{"x":817,"y":643,"score":76,"level":0},{"x":883,"y":643,"score":109,"level":0},{"x":1000,"y":643,"score":29,"level":0},{"x":1022,"y":643,"score":79,"level":0},{"x":1089,"y":643,"score":38,"level":0},{"x":1129,"y":643,"score":26,"level":0},{"x":1134,"y":643,"score":130,"level":0},{"x":1243,"y":643,"score":104,"level":0},{"x":1271,"y":643,"score":122,"level":0},{"x":1281,"y":643,"score":81,"level":0},{"x":1319,"y":643,"score":114,"level":0},{"x":1423,"y":643,"score":50,"level":0},{"x":1429,"y":643,"score":36,"level":0},{"x":1453,"y":643,"score":74,"level":0},{"x":1465,"y":643,"score":30,"level":0},{"x":1490,"y":643,"score":72,"level":0},{"x":414,"y":644,"score":110,"level":0},{"x":504,"y":644,"score":96,"level":0},{"x":512,"y":644,"score":31,"level":0},{"x":574,"y":644,"score":34,"level":0},{"x":661,"y":644,"score":117,"level":0},{"x":687,"y":644,"score":123,"level":0},{"x":721,"y":644,"score":39,"level":0},{"x":750,"y":644,"score":51,"level":0},{"x":755,"y":644,"score":47,"level":0},{"x":787,"y":644,"score":118,"level":0},{"x":922,"y":644,"score":126,"level":0},{"x":932,"y":644,"score":96,"level":0},{"x":947,"y":644,"score":115,"level":0},{"x":949,"y":644,"score":31,"level":0},{"x":979,"y":644,"score":80,"level":0},{"x":993,"y":644,"score":27,"level":0},{"x":995,"y":644,"score":37,"level":0},{"x":1030,"y":644,"score":35,"level":0},{"x":1038,"y":644,"score":215,"level":0},{"x":1072,"y":644,"score":208,"level":0},{"x":1105,"y":644,"score":137,"level":0},{"x":1150,"y":644,"score":189,"level":0},{"x":1175,"y":644,"score":122,"level":0},{"x":1185,"y":644,"score":85,"level":0},{"x":1197,"y":644,"score":64,"level":0},{"x":1203,"y":644,"score":71,"level":0},{"x":1298,"y":644,"score":66,"level":0},{"x":1325,"y":644,"score":296,"level":0},{"x":1331,"y":644,"score":76,"level":0},{"x":1337,"y":644,"score":125,"level":0},{"x":1348,"y":644,"score":72,"level":0},{"x":1380,"y":644,"score":114,"level":0},{"x":1418,"y":644,"score":55,"level":0},{"x":1435,"y":644,"score":105,"level":0},{"x":1467,"y":644,"score":56,"level":0},{"x":678,"y":645,"score":76,"level":0},{"x":777,"y":645,"score":125,"level":0},{"x":861,"y":645,"score":48,"level":0},{"x":890,"y":645,"score":46,"level":0},{"x":913,"y":645,"score":210,"level":0},{"x":987,"y":645,"score":95,"level":0},{"x":1018,"y":645,"score":65,"level":0},{"x":1045,"y":645,"score":148,"level":0},{"x":1066,"y":645,"score":32,"level":0},{"x":1183,"y":645,"score":101,"level":0},{"x":1314,"y":645,"score":50,"level":0},{"x":1354,"y":645,"score":136,"level":0},{"x":1364,"y":645,"score":90,"level":0},{"x":1369,"y":645,"score":101,"level":0},{"x":395,"y":646,"score":54,"level":0},{"x":442,"y":646,"score":83,"level":0},{"x":602,"y":646,"score":28,"level":0},{"x":670,"y":646,"score":32,"level":0},{"x":729,"y":646,"score":67,"level":0},{"x":767,"y":646,"score":33,"level":0},{"x":779,"y":646,"score":138,"level":0},{"x":808,"y":646,"score":185,"level":0},{"x":855,"y":646,"score":49,"level":0},{"x":869,"y":646,"score":38,"level":0},{"x":901,"y":646,"score":34,"level":0},{"x":918,"y":646,"score":143,"level":0},{"x":1022,"y":646,"score":103,"level":0},{"x":1115,"y":646,"score":110,"level":0},{"x":1120,"y":646,"score":49,"level":0},{"x":1180,"y":646,"score":44,"level":0},{"x":1216,"y":646,"score":72,"level":0},{"x":1236,"y":646,"score":100,"level":0},{"x":1361,"y":646,"score":67,"level":0},{"x":1425,"y":646,"score":74,"level":0},{"x":1448,"y":646,"score":184,"level":0},{"x":1488,"y":646,"score":68,"level":0},{"x":400,"y":647,"score":134,"level":0},{"x":425,"y":647,"score":88,"level":0},{"x":482,"y":647,"score":52,"level":0},{"x":487,"y":647,"score":28,"level":0},{"x":641,"y":647,"score":62,"level":0},{"x":697,"y":647,"score":70,"level":0},{"x":761,"y":647,"score":138,"level":0},{"x":793,"y":647,"score":33,"level":0},{"x":802,"y":647,"score":180,"level":0},{"x":858,"y":647,"score":67,"level":0},{"x":952,"y":647,"score":77,"level":0},{"x":984,"y":647,"score":62,"level":0},{"x":1047,"y":647,"score":56,"level":0},{"x":1081,"y":647,"score":44,"level":0},{"x":1083,"y":647,"score":81,"level":0},{"x":1097,"y":647,"score":146,"level":0},{"x":1158,"y":647,"score":195,"level":0},{"x":1225,"y":647,"score":55,"level":0},{"x":1251,"y":647,"score":52,"level":0},{"x":1279,"y":647,"score":38,"level":0},{"x":1289,"y":647,"score":99,"level":0},{"x":1295,"y":647,"score":67,"level":0},{"x":1304,"y":647,"score":84,"level":0},{"x":1315,"y":647,"score":27,"level":0},{"x":1334,"y":647,"score":109,"level":0},{"x":1343,"y":647,"score":251,"level":0},{"x":1443,"y":647,"score":184,"level":0},{"x":389,"y":648,"score":90,"level":0},{"x":552,"y":648,"score":34,"level":0},{"x":572,"y":648,"score":37,"level":0},{"x":665,"y":648,"score":40,"level":0},{"x":686,"y":648,"score":46,"level":0},{"x":725,"y":648,"score":29,"level":0},{"x":755,"y":648,"score":51,"level":0},{"x":784,"y":648,"score":72,"level":0},{"x":846,"y":648,"score":152,"level":0},{"x":940,"y":648,"score":139,"level":0},{"x":964,"y":648,"score":118,"level":0},{"x":973,"y":648,"score":103,"level":0},{"x":1014,"y":648,"score":138,"level":0},{"x":1029,"y":648,"score":157,"level":0},{"x":1042,"y":648,"score":170,"level":0},{"x":1075,"y":648,"score":43,"level":0},{"x":1088,"y":648,"score":86,"level":0},{"x":1108,"y":648,"score":42,"level":0},{"x":1111,"y":648,"score":65,"level":0},{"x":1163,"y":648,"score":223,"level":0},{"x":1220,"y":648,"score":51,"level":0},{"x":1274,"y":648,"score":179,"level":0},{"x":1364,"y":648,"score":41,"level":0},{"x":1399,"y":648,"score":82,"level":0},{"x":1430,"y":648,"score":133,"level":0},{"x":1454,"y":648,"score":152,"level":0},{"x":1460,"y":648,"score":115,"level":0},{"x":476,"y":649,"score":61,"level":0},{"x":576,"y":649,"score":49,"level":0},{"x":626,"y":649,"score":45,"level":0},{"x":692,"y":649,"score":46,"level":0},{"x":706,"y":649,"score":43,"level":0},{"x":720,"y":649,"score":63,"level":0},{"x":823,"y":649,"score":62,"level":0},{"x":840,"y":649,"score":108,"level":0},{"x":906,"y":649,"score":96,"level":0},{"x":919,"y":649,"score":44,"level":0},{"x":1008,"y":649,"score":224,"level":0},{"x":1035,"y":649,"score":41,"level":0},{"x":1140,"y":649,"score":80,"level":0},{"x":1186,"y":649,"score":100,"level":0},{"x":1286,"y":649,"score":81,"level":0},{"x":1328,"y":649,"score":57,"level":0},{"x":1336,"y":649,"score":78,"level":0},{"x":1341,"y":649,"score":47,"level":0},{"x":1350,"y":649,"score":72,"level":0},{"x":1357,"y":649,"score":124,"level":0},{"x":1382,"y":649,"score":62,"level":0},{"x":1387,"y":649,"score":67,"level":0},{"x":1405,"y":649,"score":80,"level":0},{"x":1413,"y":649,"score":127,"level":0},{"x":1418,"y":649,"score":151,"level":0},{"x":1435,"y":649,"score":156,"level":0},{"x":414,"y":650,"score":129,"level":0},{"x":581,"y":650,"score":119,"level":0},{"x":642,"y":650,"score":46,"level":0},{"x":680,"y":650,"score":126,"level":0},{"x":743,"y":650,"score":53,"level":0},{"x":757,"y":650,"score":31,"level":0},{"x":837,"y":650,"score":94,"level":0},{"x":865,"y":650,"score":68,"level":0},{"x":896,"y":650,"score":95,"level":0},{"x":933,"y":650,"score":161,"level":0},{"x":939,"y":650,"score":58,"level":0},{"x":945,"y":650,"score":45,"level":0},{"x":1021,"y":650,"score":122,"level":0},{"x":1057,"y":650,"score":330,"level":0},{"x":1063,"y":650,"score":117,"level":0},{"x":1142,"y":650,"score":57,"level":0},{"x":1191,"y":650,"score":105,"level":0},{"x":1198,"y":650,"score":174,"level":0},{"x":1205,"y":650,"score":110,"level":0},{"x":1212,"y":650,"score":112,"level":0},{"x":1243,"y":650,"score":86,"level":0},{"x":1314,"y":650,"score":58,"level":0},{"x":1319,"y":650,"score":53,"level":0},{"x":1466,"y":650,"score":148,"level":0},{"x":572,"y":651,"score":64,"level":0},{"x":632,"y":651,"score":45,"level":0},{"x":637,"y":651,"score":40,"level":0},{"x":652,"y":651,"score":61,"level":0},{"x":768,"y":651,"score":54,"level":0},{"x":956,"y":651,"score":51,"level":0},{"x":969,"y":651,"score":90,"level":0},{"x":975,"y":651,"score":42,"level":0},{"x":1039,"y":651,"score":205,"level":0},{"x":1045,"y":651,"score":108,"level":0},{"x":1122,"y":651,"score":203,"level":0},{"x":1135,"y":651,"score":41,"level":0},{"x":1169,"y":651,"score":90,"level":0},{"x":1229,"y":651,"score":48,"level":0},{"x":1257,"y":651,"score":39,"level":0},{"x":1294,"y":651,"score":39,"level":0},{"x":1406,"y":651,"score":147,"level":0},{"x":1449,"y":651,"score":94,"level":0},{"x":1478,"y":651,"score":133,"level":0},{"x":1488,"y":651,"score":160,"level":0},{"x":377,"y":652,"score":136,"level":0},{"x":398,"y":652,"score":121,"level":0},{"x":434,"y":652,"score":67,"level":0},{"x":564,"y":652,"score":78,"level":0},{"x":647,"y":652,"score":29,"level":0},{"x":747,"y":652,"score":41,"level":0},{"x":824,"y":652,"score":37,"level":0},{"x":853,"y":652,"score":192,"level":0},{"x":923,"y":652,"score":141,"level":0},{"x":948,"y":652,"score":51,"level":0},{"x":1070,"y":652,"score":59,"level":0},{"x":1178,"y":652,"score":168,"level":0},{"x":1224,"y":652,"score":32,"level":0},{"x":1284,"y":652,"score":65,"level":0},{"x":1345,"y":652,"score":121,"level":0},{"x":1364,"y":652,"score":111,"level":0},{"x":1375,"y":652,"score":110,"level":0},{"x":1395,"y":652,"score":242,"level":0},{"x":1409,"y":652,"score":38,"level":0},{"x":1439,"y":652,"score":128,"level":0},{"x":1444,"y":652,"score":122,"level":0},{"x":536,"y":653,"score":28,"level":0},{"x":633,"y":653,"score":106,"level":0},{"x":664,"y":653,"score":34,"level":0},{"x":671,"y":653,"score":177,"level":0},{"x":683,"y":653,"score":76,"level":0},{"x":724,"y":653,"score":38,"level":0},{"x":734,"y":653,"score":97,"level":0},{"x":776,"y":653,"score":27,"level":0},{"x":779,"y":653,"score":28,"level":0},{"x":803,"y":653,"score":61,"level":0},{"x":833,"y":653,"score":60,"level":0},{"x":861,"y":653,"score":100,"level":0},{"x":874,"y":653,"score":88,"level":0},{"x":910,"y":653,"score":42,"level":0},{"x":988,"y":653,"score":98,"level":0},{"x":994,"y":653,"score":77,"level":0},{"x":1001,"y":653,"score":156,"level":0},{"x":1079,"y":653,"score":106,"level":0},{"x":1086,"y":653,"score":135,"level":0},{"x":1104,"y":653,"score":56,"level":0},{"x":1115,"y":653,"score":80,"level":0},{"x":1136,"y":653,"score":34,"level":0},{"x":1145,"y":653,"score":84,"level":0},{"x":1154,"y":653,"score":124,"level":0},{"x":1306,"y":653,"score":45,"level":0},{"x":1311,"y":653,"score":62,"level":0},{"x":1352,"y":653,"score":86,"level":0},{"x":1390,"y":653,"score":48,"level":0},{"x":1401,"y":653,"score":35,"level":0},{"x":1411,"y":653,"score":51,"level":0},{"x":1426,"y":653,"score":72,"level":0},{"x":1469,"y":653,"score":62,"level":0},{"x":382,"y":654,"score":58,"level":0},{"x":410,"y":654,"score":29,"level":0},{"x":575,"y":654,"score":56,"level":0},{"x":628,"y":654,"score":113,"level":0},{"x":643,"y":654,"score":46,"level":0},{"x":772,"y":654,"score":33,"level":0},{"x":877,"y":654,"score":27,"level":0},{"x":881,"y":654,"score":62,"level":0},{"x":887,"y":654,"score":181,"level":0},{"x":919,"y":654,"score":182,"level":0},{"x":925,"y":654,"score":191,"level":0},{"x":962,"y":654,"score":129,"level":0},{"x":1007,"y":654,"score":150,"level":0},{"x":1028,"y":654,"score":162,"level":0},{"x":1074,"y":654,"score":46,"level":0},{"x":1207,"y":654,"score":45,"level":0},{"x":1241,"y":654,"score":38,"level":0},{"x":1258,"y":654,"score":84,"level":0},{"x":1341,"y":654,"score":31,"level":0},{"x":1357,"y":654,"score":71,"level":0},{"x":1429,"y":654,"score":26,"level":0},{"x":1457,"y":654,"score":29,"level":0},{"x":393,"y":655,"score":29,"level":0},{"x":419,"y":655,"score":32,"level":0},{"x":439,"y":655,"score":34,"level":0},{"x":677,"y":655,"score":65,"level":0},{"x":712,"y":655,"score":78,"level":0},{"x":742,"y":655,"score":170,"level":0},{"x":763,"y":655,"score":112,"level":0},{"x":817,"y":655,"score":32,"level":0},{"x":845,"y":655,"score":46,"level":0},{"x":866,"y":655,"score":61,"level":0},{"x":906,"y":655,"score":60,"level":0},{"x":980,"y":655,"score":69,"level":0},{"x":1015,"y":655,"score":99,"level":0},{"x":1020,"y":655,"score":119,"level":0},{"x":1032,"y":655,"score":202,"level":0},{"x":1055,"y":655,"score":99,"level":0},{"x":1077,"y":655,"score":56,"level":0},{"x":1107,"y":655,"score":70,"level":0},{"x":1227,"y":655,"score":40,"level":0},{"x":1243,"y":655,"score":26,"level":0},{"x":1382,"y":655,"score":38,"level":0},{"x":1421,"y":655,"score":146,"level":0},{"x":1453,"y":655,"score":53,"level":0},{"x":1462,"y":655,"score":89,"level":0},{"x":1474,"y":655,"score":60,"level":0},{"x":474,"y":656,"score":61,"level":0},{"x":486,"y":656,"score":168,"level":0},{"x":491,"y":656,"score":103,"level":0},{"x":520,"y":656,"score":36,"level":0},{"x":529,"y":656,"score":43,"level":0},{"x":554,"y":656,"score":45,"level":0},{"x":562,"y":656,"score":34,"level":0},{"x":579,"y":656,"score":65,"level":0},{"x":644,"y":656,"score":59,"level":0},{"x":649,"y":656,"score":43,"level":0},{"x":720,"y":656,"score":87,"level":0},{"x":728,"y":656,"score":67,"level":0},{"x":757,"y":656,"score":155,"level":0},{"x":875,"y":656,"score":35,"level":0},{"x":1042,"y":656,"score":96,"level":0},{"x":1062,"y":656,"score":110,"level":0},{"x":1134,"y":656,"score":79,"level":0},{"x":1186,"y":656,"score":171,"level":0},{"x":1275,"y":656,"score":38,"level":0},{"x":1286,"y":656,"score":117,"level":0},{"x":1331,"y":656,"score":164,"level":0},{"x":1483,"y":656,"score":71,"level":0},{"x":396,"y":657,"score":78,"level":0},{"x":548,"y":657,"score":55,"level":0},{"x":653,"y":657,"score":30,"level":0},{"x":696,"y":657,"score":61,"level":0},{"x":799,"y":657,"score":49,"level":0},{"x":860,"y":657,"score":52,"level":0},{"x":879,"y":657,"score":33,"level":0},{"x":930,"y":657,"score":26,"level":0},{"x":948,"y":657,"score":172,"level":0},{"x":1128,"y":657,"score":120,"level":0},{"x":1202,"y":657,"score":94,"level":0},{"x":1268,"y":657,"score":90,"level":0},{"x":1325,"y":657,"score":197,"level":0},{"x":1345,"y":657,"score":121,"level":0},{"x":1440,"y":657,"score":44,"level":0},{"x":1453,"y":657,"score":57,"level":0},{"x":377,"y":658,"score":39,"level":0},{"x":435,"y":658,"score":36,"level":0},{"x":452,"y":658,"score":54,"level":0},{"x":457,"y":658,"score":28,"level":0},{"x":671,"y":658,"score":32,"level":0},{"x":683,"y":658,"score":42,"level":0},{"x":751,"y":658,"score":44,"level":0},{"x":776,"y":658,"score":39,"level":0},{"x":841,"y":658,"score":26,"level":0},{"x":853,"y":658,"score":63,"level":0},{"x":972,"y":658,"score":150,"level":0},{"x":1000,"y":658,"score":28,"level":0},{"x":1042,"y":658,"score":113,"level":0},{"x":1048,"y":658,"score":160,"level":0},{"x":1085,"y":658,"score":125,"level":0},{"x":1095,"y":658,"score":165,"level":0},{"x":1104,"y":658,"score":60,"level":0},{"x":1447,"y":658,"score":74,"level":0},{"x":1465,"y":658,"score":54,"level":0},{"x":1468,"y":658,"score":29,"level":0},{"x":390,"y":659,"score":38,"level":0},{"x":409,"y":659,"score":36,"level":0},{"x":501,"y":659,"score":38,"level":0},{"x":503,"y":659,"score":78,"level":0},{"x":632,"y":659,"score":85,"level":0},{"x":642,"y":659,"score":28,"level":0},{"x":650,"y":659,"score":50,"level":0},{"x":704,"y":659,"score":76,"level":0},{"x":727,"y":659,"score":63,"level":0},{"x":772,"y":659,"score":75,"level":0},{"x":814,"y":659,"score":88,"level":0},{"x":825,"y":659,"score":96,"level":0},{"x":906,"y":659,"score":81,"level":0},{"x":921,"y":659,"score":36,"level":0},{"x":926,"y":659,"score":47,"level":0},{"x":1125,"y":659,"score":107,"level":0},{"x":1146,"y":659,"score":134,"level":0},{"x":1153,"y":659,"score":38,"level":0},{"x":1157,"y":659,"score":40,"level":0},{"x":1189,"y":659,"score":90,"level":0},{"x":1207,"y":659,"score":35,"level":0},{"x":1212,"y":659,"score":67,"level":0},{"x":1243,"y":659,"score":141,"level":0},{"x":1247,"y":659,"score":108,"level":0},{"x":1298,"y":659,"score":85,"level":0},{"x":1304,"y":659,"score":199,"level":0},{"x":1316,"y":659,"score":115,"level":0},{"x":1360,"y":659,"score":40,"level":0},{"x":1363,"y":659,"score":36,"level":0},{"x":1434,"y":659,"score":45,"level":0},{"x":1442,"y":659,"score":79,"level":0},{"x":1459,"y":659,"score":34,"level":0},{"x":1479,"y":659,"score":41,"level":0},{"x":1490,"y":659,"score":52,"level":0},{"x":520,"y":660,"score":121,"level":0},{"x":538,"y":660,"score":54,"level":0},{"x":548,"y":660,"score":50,"level":0},{"x":550,"y":660,"score":46,"level":0},{"x":677,"y":660,"score":120,"level":0},{"x":696,"y":660,"score":51,"level":0},{"x":743,"y":660,"score":77,"level":0},{"x":745,"y":660,"score":72,"level":0},{"x":788,"y":660,"score":127,"level":0},{"x":800,"y":660,"score":30,"level":0},{"x":864,"y":660,"score":63,"level":0},{"x":868,"y":660,"score":128,"level":0},{"x":955,"y":660,"score":39,"level":0},{"x":977,"y":660,"score":160,"level":0},{"x":1021,"y":660,"score":38,"level":0},{"x":1057,"y":660,"score":62,"level":0},{"x":1166,"y":660,"score":49,"level":0},{"x":1170,"y":660,"score":29,"level":0},{"x":1172,"y":660,"score":43,"level":0},{"x":1230,"y":660,"score":45,"level":0},{"x":1321,"y":660,"score":154,"level":0},{"x":1393,"y":660,"score":126,"level":0},{"x":1399,"y":660,"score":186,"level":0},{"x":448,"y":661,"score":32,"level":0},{"x":476,"y":661,"score":45,"level":0},{"x":486,"y":661,"score":72,"level":0},{"x":554,"y":661,"score":54,"level":0},{"x":575,"y":661,"score":78,"level":0},{"x":624,"y":661,"score":38,"level":0},{"x":643,"y":661,"score":78,"level":0},{"x":661,"y":661,"score":163,"level":0},{"x":720,"y":661,"score":92,"level":0},{"x":795,"y":661,"score":77,"level":0},{"x":830,"y":661,"score":71,"level":0},{"x":876,"y":661,"score":93,"level":0},{"x":900,"y":661,"score":40,"level":0},{"x":934,"y":661,"score":43,"level":0},{"x":1032,"y":661,"score":33,"level":0},{"x":1044,"y":661,"score":124,"level":0},{"x":1074,"y":661,"score":45,"level":0},{"x":1103,"y":661,"score":31,"level":0},{"x":1134,"y":661,"score":101,"level":0},{"x":1139,"y":661,"score":125,"level":0},{"x":1223,"y":661,"score":122,"level":0},{"x":1237,"y":661,"score":118,"level":0},{"x":1266,"y":661,"score":26,"level":0},{"x":1280,"y":661,"score":81,"level":0},{"x":1309,"y":661,"score":50,"level":0},{"x":1352,"y":661,"score":105,"level":0},{"x":1363,"y":661,"score":34,"level":0},{"x":1371,"y":661,"score":59,"level":0},{"x":1376,"y":661,"score":204,"level":0},{"x":1385,"y":661,"score":90,"level":0},{"x":1410,"y":661,"score":80,"level":0},{"x":1423,"y":661,"score":100,"level":0},{"x":1474,"y":661,"score":108,"level":0},{"x":407,"y":662,"score":118,"level":0},{"x":426,"y":662,"score":28,"level":0},{"x":432,"y":662,"score":36,"level":0},{"x":495,"y":662,"score":105,"level":0},{"x":572,"y":662,"score":100,"level":0},{"x":599,"y":662,"score":34,"level":0},{"x":651,"y":662,"score":27,"level":0},{"x":655,"y":662,"score":55,"level":0},{"x":718,"y":662,"score":102,"level":0},{"x":885,"y":662,"score":120,"level":0},{"x":912,"y":662,"score":80,"level":0},{"x":945,"y":662,"score":60,"level":0},{"x":950,"y":662,"score":69,"level":0},{"x":965,"y":662,"score":115,"level":0},{"x":975,"y":662,"score":83,"level":0},{"x":985,"y":662,"score":97,"level":0},{"x":990,"y":662,"score":75,"level":0},{"x":1083,"y":662,"score":61,"level":0},{"x":1089,"y":662,"score":129,"level":0},{"x":1108,"y":662,"score":153,"level":0},{"x":1142,"y":662,"score":87,"level":0},{"x":1162,"y":662,"score":119,"level":0},{"x":1202,"y":662,"score":27,"level":0},{"x":1275,"y":662,"score":59,"level":0},{"x":1313,"y":662,"score":45,"level":0},{"x":1329,"y":662,"score":39,"level":0},{"x":1334,"y":662,"score":54,"level":0},{"x":1387,"y":662,"score":77,"level":0},{"x":1490,"y":662,"score":44,"level":0},{"x":377,"y":663,"score":37,"level":0},{"x":386,"y":663,"score":118,"level":0},{"x":445,"y":663,"score":26,"level":0},{"x":477,"y":663,"score":56,"level":0},{"x":646,"y":663,"score":46,"level":0},{"x":675,"y":663,"score":120,"level":0},{"x":710,"y":663,"score":93,"level":0},{"x":734,"y":663,"score":33,"level":0},{"x":762,"y":663,"score":46,"level":0},{"x":802,"y":663,"score":145,"level":0},{"x":810,"y":663,"score":157,"level":0},{"x":1079,"y":663,"score":36,"level":0},{"x":1177,"y":663,"score":43,"level":0},{"x":1255,"y":663,"score":68,"level":0},{"x":1300,"y":663,"score":182,"level":0},{"x":1339,"y":663,"score":229,"level":0},{"x":1346,"y":663,"score":127,"level":0},{"x":1357,"y":663,"score":43,"level":0},{"x":1482,"y":663,"score":144,"level":0},{"x":402,"y":664,"score":74,"level":0},{"x":414,"y":664,"score":167,"level":0},{"x":536,"y":664,"score":48,"level":0},{"x":562,"y":664,"score":75,"level":0},{"x":684,"y":664,"score":63,"level":0},{"x":697,"y":664,"score":70,"level":0},{"x":703,"y":664,"score":29,"level":0},{"x":738,"y":664,"score":48,"level":0},{"x":774,"y":664,"score":55,"level":0},{"x":839,"y":664,"score":60,"level":0},{"x":864,"y":664,"score":55,"level":0},{"x":890,"y":664,"score":79,"level":0},{"x":951,"y":664,"score":82,"level":0},{"x":981,"y":664,"score":27,"level":0},{"x":993,"y":664,"score":33,"level":0},{"x":1006,"y":664,"score":26,"level":0},{"x":1027,"y":664,"score":48,"level":0},{"x":1043,"y":664,"score":115,"level":0},{"x":1048,"y":664,"score":167,"level":0},{"x":1103,"y":664,"score":128,"level":0},{"x":1118,"y":664,"score":120,"level":0},{"x":1168,"y":664,"score":98,"level":0},{"x":1244,"y":664,"score":27,"level":0},{"x":1257,"y":664,"score":48,"level":0},{"x":1270,"y":664,"score":75,"level":0},{"x":1285,"y":664,"score":81,"level":0},{"x":1315,"y":664,"score":152,"level":0},{"x":1418,"y":664,"score":61,"level":0},{"x":1427,"y":664,"score":115,"level":0},{"x":1431,"y":664,"score":129,"level":0},{"x":1440,"y":664,"score":126,"level":0},{"x":1467,"y":664,"score":119,"level":0},{"x":1475,"y":664,"score":35,"level":0},{"x":1480,"y":664,"score":80,"level":0},{"x":518,"y":665,"score":45,"level":0},{"x":552,"y":665,"score":79,"level":0},{"x":558,"y":665,"score":46,"level":0},{"x":637,"y":665,"score":69,"level":0},{"x":655,"y":665,"score":103,"level":0},{"x":728,"y":665,"score":30,"level":0},{"x":849,"y":665,"score":64,"level":0},{"x":854,"y":665,"score":48,"level":0},{"x":964,"y":665,"score":105,"level":0},{"x":973,"y":665,"score":111,"level":0},{"x":1053,"y":665,"score":100,"level":0},{"x":1077,"y":665,"score":62,"level":0},{"x":1206,"y":665,"score":186,"level":0},{"x":1218,"y":665,"score":159,"level":0},{"x":1247,"y":665,"score":127,"level":0},{"x":1250,"y":665,"score":61,"level":0},{"x":1296,"y":665,"score":150,"level":0},{"x":1319,"y":665,"score":47,"level":0},{"x":1327,"y":665,"score":67,"level":0},{"x":1333,"y":665,"score":27,"level":0},{"x":1399,"y":665,"score":52,"level":0},{"x":1406,"y":665,"score":27,"level":0},{"x":378,"y":666,"score":68,"level":0},{"x":400,"y":666,"score":52,"level":0},{"x":425,"y":666,"score":78,"level":0},{"x":527,"y":666,"score":31,"level":0},{"x":562,"y":666,"score":28,"level":0},{"x":575,"y":666,"score":26,"level":0},{"x":708,"y":666,"score":162,"level":0},{"x":715,"y":666,"score":77,"level":0},{"x":720,"y":666,"score":95,"level":0},{"x":829,"y":666,"score":70,"level":0},{"x":861,"y":666,"score":32,"level":0},{"x":894,"y":666,"score":52,"level":0},{"x":915,"y":666,"score":123,"level":0},{"x":936,"y":666,"score":51,"level":0},{"x":957,"y":666,"score":142,"level":0},{"x":968,"y":666,"score":45,"level":0},{"x":981,"y":666,"score":84,"level":0},{"x":1015,"y":666,"score":193,"level":0},{"x":1035,"y":666,"score":80,"level":0},{"x":1091,"y":666,"score":67,"level":0},{"x":1138,"y":666,"score":138,"level":0},{"x":1190,"y":666,"score":52,"level":0},{"x":1200,"y":666,"score":60,"level":0},{"x":1274,"y":666,"score":48,"level":0},{"x":1279,"y":666,"score":62,"level":0},{"x":1393,"y":666,"score":67,"level":0},{"x":1423,"y":666,"score":98,"level":0},{"x":1436,"y":666,"score":94,"level":0},{"x":1443,"y":666,"score":191,"level":0},{"x":410,"y":667,"score":54,"level":0},{"x":555,"y":667,"score":69,"level":0},{"x":572,"y":667,"score":30,"level":0},{"x":632,"y":667,"score":56,"level":0},{"x":634,"y":667,"score":40,"level":0},{"x":663,"y":667,"score":57,"level":0},{"x":669,"y":667,"score":42,"level":0},{"x":679,"y":667,"score":168,"level":0},{"x":761,"y":667,"score":27,"level":0},{"x":765,"y":667,"score":42,"level":0},{"x":806,"y":667,"score":34,"level":0},{"x":847,"y":667,"score":34,"level":0},{"x":885,"y":667,"score":100,"level":0},{"x":929,"y":667,"score":95,"level":0},{"x":972,"y":667,"score":46,"level":0},{"x":1059,"y":667,"score":108,"level":0},{"x":1074,"y":667,"score":71,"level":0},{"x":1107,"y":667,"score":64,"level":0},{"x":1134,"y":667,"score":40,"level":0},{"x":1150,"y":667,"score":43,"level":0},{"x":1162,"y":667,"score":68,"level":0},{"x":1222,"y":667,"score":72,"level":0},{"x":1233,"y":667,"score":286,"level":0},{"x":1243,"y":667,"score":74,"level":0},{"x":1309,"y":667,"score":112,"level":0},{"x":1353,"y":667,"score":181,"level":0},{"x":1389,"y":667,"score":43,"level":0},{"x":1455,"y":667,"score":151,"level":0},{"x":1490,"y":667,"score":45,"level":0},{"x":418,"y":668,"score":40,"level":0},{"x":446,"y":668,"score":48,"level":0},{"x":496,"y":668,"score":48,"level":0},{"x":508,"y":668,"score":29,"level":0},{"x":546,"y":668,"score":28,"level":0},{"x":642,"y":668,"score":171,"level":0},{"x":700,"y":668,"score":33,"level":0},{"x":713,"y":668,"score":27,"level":0},{"x":718,"y":668,"score":61,"level":0},{"x":733,"y":668,"score":30,"level":0},{"x":809,"y":668,"score":29,"level":0},{"x":819,"y":668,"score":180,"level":0},{"x":834,"y":668,"score":107,"level":0},{"x":921,"y":668,"score":144,"level":0},{"x":998,"y":668,"score":84,"level":0},{"x":1025,"y":668,"score":156,"level":0},{"x":1035,"y":668,"score":69,"level":0},{"x":1038,"y":668,"score":27,"level":0},{"x":1072,"y":668,"score":33,"level":0},{"x":1097,"y":668,"score":96,"level":0},{"x":1153,"y":668,"score":27,"level":0},{"x":1183,"y":668,"score":119,"level":0},{"x":1216,"y":668,"score":88,"level":0},{"x":1226,"y":668,"score":96,"level":0},{"x":1240,"y":668,"score":48,"level":0},{"x":1253,"y":668,"score":111,"level":0},{"x":1361,"y":668,"score":69,"level":0},{"x":1450,"y":668,"score":86,"level":0},{"x":1461,"y":668,"score":88,"level":0},{"x":400,"y":669,"score":51,"level":0},{"x":484,"y":669,"score":81,"level":0},{"x":489,"y":669,"score":162,"level":0},{"x":652,"y":669,"score":39,"level":0},{"x":669,"y":669,"score":45,"level":0},{"x":688,"y":669,"score":117,"level":0},{"x":738,"y":669,"score":53,"level":0},{"x":749,"y":669,"score":108,"level":0},{"x":769,"y":669,"score":81,"level":0},{"x":774,"y":669,"score":107,"level":0},{"x":803,"y":669,"score":62,"level":0},{"x":836,"y":669,"score":123,"level":0},{"x":856,"y":669,"score":109,"level":0},{"x":864,"y":669,"score":122,"level":0},{"x":896,"y":669,"score":61,"level":0},{"x":907,"y":669,"score":206,"level":0},{"x":935,"y":669,"score":138,"level":0},{"x":984,"y":669,"score":45,"level":0},{"x":993,"y":669,"score":58,"level":0},{"x":1043,"y":669,"score":60,"level":0},{"x":1080,"y":669,"score":105,"level":0},{"x":1088,"y":669,"score":174,"level":0},{"x":1093,"y":669,"score":68,"level":0},{"x":1133,"y":669,"score":60,"level":0},{"x":1167,"y":669,"score":67,"level":0},{"x":1267,"y":669,"score":94,"level":0},{"x":1292,"y":669,"score":75,"level":0},{"x":1294,"y":669,"score":84,"level":0},{"x":1332,"y":669,"score":73,"level":0},{"x":1335,"y":669,"score":79,"level":0},{"x":1346,"y":669,"score":89,"level":0},{"x":1374,"y":669,"score":92,"level":0},{"x":1427,"y":669,"score":151,"level":0},{"x":390,"y":670,"score":48,"level":0},{"x":424,"y":670,"score":30,"level":0},{"x":538,"y":670,"score":40,"level":0},{"x":625,"y":670,"score":28,"level":0},{"x":631,"y":670,"score":52,"level":0},{"x":697,"y":670,"score":39,"level":0},{"x":787,"y":670,"score":52,"level":0},{"x":850,"y":670,"score":72,"level":0},{"x":870,"y":670,"score":61,"level":0},{"x":1010,"y":670,"score":32,"level":0},{"x":1019,"y":670,"score":97,"level":0},{"x":1031,"y":670,"score":46,"level":0},{"x":1049,"y":670,"score":60,"level":0},{"x":1066,"y":670,"score":73,"level":0},{"x":1211,"y":670,"score":75,"level":0},{"x":1246,"y":670,"score":47,"level":0},{"x":1272,"y":670,"score":83,"level":0},{"x":1312,"y":670,"score":46,"level":0},{"x":1338,"y":670,"score":63,"level":0},{"x":1366,"y":670,"score":62,"level":0},{"x":1423,"y":670,"score":56,"level":0},{"x":1468,"y":670,"score":153,"level":0},{"x":1475,"y":670,"score":111,"level":0},{"x":377,"y":671,"score":84,"level":0},{"x":519,"y":671,"score":35,"level":0},{"x":657,"y":671,"score":77,"level":0},{"x":682,"y":671,"score":82,"level":0},{"x":708,"y":671,"score":48,"level":0},{"x":754,"y":671,"score":108,"level":0},{"x":768,"y":671,"score":45,"level":0},{"x":781,"y":671,"score":53,"level":0},{"x":799,"y":671,"score":36,"level":0},{"x":804,"y":671,"score":70,"level":0},{"x":810,"y":671,"score":46,"level":0},{"x":840,"y":671,"score":55,"level":0},{"x":862,"y":671,"score":30,"level":0},{"x":873,"y":671,"score":74,"level":0},{"x":901,"y":671,"score":180,"level":0},{"x":917,"y":671,"score":45,"level":0},{"x":949,"y":671,"score":39,"level":0},{"x":977,"y":671,"score":98,"level":0},{"x":1092,"y":671,"score":70,"level":0},{"x":1105,"y":671,"score":161,"level":0},{"x":1121,"y":671,"score":70,"level":0},{"x":1189,"y":671,"score":187,"level":0},{"x":1275,"y":671,"score":54,"level":0},{"x":1313,"y":671,"score":30,"level":0},{"x":1350,"y":671,"score":81,"level":0},{"x":435,"y":672,"score":101,"level":0},{"x":452,"y":672,"score":135,"level":0},{"x":478,"y":672,"score":29,"level":0},{"x":541,"y":672,"score":46,"level":0},{"x":547,"y":672,"score":26,"level":0},{"x":565,"y":672,"score":51,"level":0},{"x":652,"y":672,"score":72,"level":0},{"x":663,"y":672,"score":57,"level":0},{"x":725,"y":672,"score":124,"level":0},{"x":730,"y":672,"score":70,"level":0},{"x":827,"y":672,"score":96,"level":0},{"x":884,"y":672,"score":61,"level":0},{"x":889,"y":672,"score":148,"level":0},{"x":932,"y":672,"score":61,"level":0},{"x":962,"y":672,"score":91,"level":0},{"x":982,"y":672,"score":120,"level":0},{"x":1012,"y":672,"score":49,"level":0},{"x":1058,"y":672,"score":161,"level":0},{"x":1130,"y":672,"score":32,"level":0},{"x":1206,"y":672,"score":180,"level":0},{"x":1240,"y":672,"score":123,"level":0},{"x":1251,"y":672,"score":72,"level":0},{"x":1300,"y":672,"score":175,"level":0},{"x":1306,"y":672,"score":81,"level":0},{"x":1336,"y":672,"score":81,"level":0},{"x":1380,"y":672,"score":163,"level":0},{"x":1386,"y":672,"score":166,"level":0},{"x":1403,"y":672,"score":89,"level":0},{"x":1422,"y":672,"score":66,"level":0},{"x":1455,"y":672,"score":73,"level":0},{"x":600,"y":673,"score":60,"level":0},{"x":686,"y":673,"score":26,"level":0},{"x":776,"y":673,"score":31,"level":0},{"x":817,"y":673,"score":38,"level":0},{"x":847,"y":673,"score":37,"level":0},{"x":940,"y":673,"score":27,"level":0},{"x":989,"y":673,"score":147,"level":0},{"x":998,"y":673,"score":55,"level":0},{"x":1040,"y":673,"score":43,"level":0},{"x":1053,"y":673,"score":226,"level":0},{"x":1099,"y":673,"score":52,"level":0},{"x":1126,"y":673,"score":37,"level":0},{"x":1168,"y":673,"score":68,"level":0},{"x":1180,"y":673,"score":68,"level":0},{"x":1223,"y":673,"score":119,"level":0},{"x":1284,"y":673,"score":263,"level":0},{"x":1291,"y":673,"score":75,"level":0},{"x":1317,"y":673,"score":59,"level":0},{"x":1352,"y":673,"score":61,"level":0},{"x":1417,"y":673,"score":32,"level":0},{"x":1437,"y":673,"score":177,"level":0},{"x":1444,"y":673,"score":136,"level":0},{"x":428,"y":674,"score":99,"level":0},{"x":444,"y":674,"score":46,"level":0},{"x":551,"y":674,"score":36,"level":0},{"x":692,"y":674,"score":106,"level":0},{"x":718,"y":674,"score":88,"level":0},{"x":740,"y":674,"score":70,"level":0},{"x":759,"y":674,"score":40,"level":0},{"x":764,"y":674,"score":164,"level":0},{"x":769,"y":674,"score":64,"level":0},{"x":784,"y":674,"score":31,"level":0},{"x":806,"y":674,"score":34,"level":0},{"x":855,"y":674,"score":114,"level":0},{"x":931,"y":674,"score":45,"level":0},{"x":956,"y":674,"score":124,"level":0},{"x":1035,"y":674,"score":65,"level":0},{"x":1111,"y":674,"score":232,"level":0},{"x":1131,"y":674,"score":85,"level":0},{"x":1149,"y":674,"score":37,"level":0},{"x":1195,"y":674,"score":110,"level":0},{"x":1256,"y":674,"score":44,"level":0},{"x":1264,"y":674,"score":206,"level":0},{"x":1327,"y":674,"score":48,"level":0},{"x":1364,"y":674,"score":37,"level":0},{"x":452,"y":675,"score":72,"level":0},{"x":561,"y":675,"score":65,"level":0},{"x":577,"y":675,"score":40,"level":0},{"x":637,"y":675,"score":26,"level":0},{"x":643,"y":675,"score":76,"level":0},{"x":648,"y":675,"score":38,"level":0},{"x":681,"y":675,"score":120,"level":0},{"x":820,"y":675,"score":122,"level":0},{"x":878,"y":675,"score":35,"level":0},{"x":908,"y":675,"score":100,"level":0},{"x":936,"y":675,"score":41,"level":0},{"x":984,"y":675,"score":78,"level":0},{"x":1019,"y":675,"score":33,"level":0},{"x":1028,"y":675,"score":99,"level":0},{"x":1088,"y":675,"score":118,"level":0},{"x":1095,"y":675,"score":54,"level":0},{"x":1118,"y":675,"score":42,"level":0},{"x":1322,"y":675,"score":158,"level":0},{"x":1342,"y":675,"score":53,"level":0},{"x":1358,"y":675,"score":52,"level":0},{"x":1434,"y":675,"score":154,"level":0},{"x":545,"y":676,"score":41,"level":0},{"x":565,"y":676,"score":100,"level":0},{"x":834,"y":676,"score":47,"level":0},{"x":840,"y":676,"score":114,"level":0},{"x":864,"y":676,"score":43,"level":0},{"x":949,"y":676,"score":143,"level":0},{"x":955,"y":676,"score":123,"level":0},{"x":968,"y":676,"score":106,"level":0},{"x":1067,"y":676,"score":143,"level":0},{"x":1104,"y":676,"score":85,"level":0},{"x":1133,"y":676,"score":75,"level":0},{"x":1189,"y":676,"score":72,"level":0},{"x":1252,"y":676,"score":40,"level":0},{"x":1274,"y":676,"score":131,"level":0},{"x":1288,"y":676,"score":203,"level":0},{"x":1336,"y":676,"score":186,"level":0},{"x":1392,"y":676,"score":35,"level":0},{"x":1397,"y":676,"score":116,"level":0},{"x":1411,"y":676,"score":34,"level":0},{"x":1453,"y":676,"score":96,"level":0},{"x":1459,"y":676,"score":27,"level":0},{"x":387,"y":677,"score":49,"level":0},{"x":419,"y":677,"score":30,"level":0},{"x":423,"y":677,"score":122,"level":0},{"x":430,"y":677,"score":54,"level":0},{"x":436,"y":677,"score":87,"level":0},{"x":477,"y":677,"score":66,"level":0},{"x":484,"y":677,"score":55,"level":0},{"x":517,"y":677,"score":139,"level":0},{"x":531,"y":677,"score":52,"level":0},{"x":563,"y":677,"score":104,"level":0},{"x":606,"y":677,"score":29,"level":0},{"x":700,"y":677,"score":54,"level":0},{"x":725,"y":677,"score":119,"level":0},{"x":730,"y":677,"score":116,"level":0},{"x":898,"y":677,"score":138,"level":0},{"x":904,"y":677,"score":81,"level":0},{"x":917,"y":677,"score":142,"level":0},{"x":922,"y":677,"score":98,"level":0},{"x":977,"y":677,"score":85,"level":0},{"x":1018,"y":677,"score":33,"level":0},{"x":1061,"y":677,"score":54,"level":0},{"x":1137,"y":677,"score":116,"level":0},{"x":1175,"y":677,"score":167,"level":0},{"x":1218,"y":677,"score":122,"level":0},{"x":1243,"y":677,"score":236,"level":0},{"x":1309,"y":677,"score":55,"level":0},{"x":1385,"y":677,"score":162,"level":0},{"x":1413,"y":677,"score":46,"level":0},{"x":394,"y":678,"score":58,"level":0},{"x":443,"y":678,"score":112,"level":0},{"x":498,"y":678,"score":31,"level":0},{"x":533,"y":678,"score":62,"level":0},{"x":601,"y":678,"score":55,"level":0},{"x":634,"y":678,"score":60,"level":0},{"x":744,"y":678,"score":95,"level":0},{"x":792,"y":678,"score":40,"level":0},{"x":827,"y":678,"score":114,"level":0},{"x":830,"y":678,"score":76,"level":0},{"x":884,"y":678,"score":222,"level":0},{"x":889,"y":678,"score":95,"level":0},{"x":927,"y":678,"score":90,"level":0},{"x":967,"y":678,"score":162,"level":0},{"x":985,"y":678,"score":111,"level":0},{"x":1011,"y":678,"score":130,"level":0},{"x":1024,"y":678,"score":157,"level":0},{"x":1033,"y":678,"score":46,"level":0},{"x":1127,"y":678,"score":88,"level":0},{"x":1169,"y":678,"score":136,"level":0},{"x":1180,"y":678,"score":142,"level":0},{"x":1203,"y":678,"score":194,"level":0},{"x":1237,"y":678,"score":96,"level":0},{"x":1299,"y":678,"score":115,"level":0},{"x":1353,"y":678,"score":88,"level":0},{"x":1397,"y":678,"score":128,"level":0},{"x":1407,"y":678,"score":27,"level":0},{"x":1436,"y":678,"score":115,"level":0},{"x":1466,"y":678,"score":206,"level":0},{"x":1480,"y":678,"score":186,"level":0},{"x":1490,"y":678,"score":57,"level":0},{"x":377,"y":679,"score":60,"level":0},{"x":477,"y":679,"score":61,"level":0},{"x":525,"y":679,"score":78,"level":0},{"x":580,"y":679,"score":32,"level":0},{"x":662,"y":679,"score":37,"level":0},{"x":711,"y":679,"score":234,"level":0},{"x":717,"y":679,"score":73,"level":0},{"x":775,"y":679,"score":136,"level":0},{"x":805,"y":679,"score":79,"level":0},{"x":811,"y":679,"score":69,"level":0},{"x":877,"y":679,"score":35,"level":0},{"x":979,"y":679,"score":33,"level":0},{"x":1000,"y":679,"score":26,"level":0},{"x":1080,"y":679,"score":29,"level":0},{"x":1085,"y":679,"score":76,"level":0},{"x":1213,"y":679,"score":251,"level":0},{"x":1260,"y":679,"score":131,"level":0},{"x":1265,"y":679,"score":32,"level":0},{"x":1269,"y":679,"score":66,"level":0},{"x":1280,"y":679,"score":126,"level":0},{"x":1286,"y":679,"score":44,"level":0},{"x":1420,"y":679,"score":126,"level":0},{"x":1429,"y":679,"score":210,"level":0},{"x":380,"y":680,"score":57,"level":0},{"x":542,"y":680,"score":70,"level":0},{"x":643,"y":680,"score":65,"level":0},{"x":680,"y":680,"score":84,"level":0},{"x":708,"y":680,"score":145,"level":0},{"x":728,"y":680,"score":36,"level":0},{"x":784,"y":680,"score":119,"level":0},{"x":908,"y":680,"score":35,"level":0},{"x":940,"y":680,"score":84,"level":0},{"x":962,"y":680,"score":31,"level":0},{"x":1016,"y":680,"score":80,"level":0},{"x":1070,"y":680,"score":41,"level":0},{"x":1095,"y":680,"score":66,"level":0},{"x":1104,"y":680,"score":74,"level":0},{"x":1111,"y":680,"score":47,"level":0},{"x":1124,"y":680,"score":128,"level":0},{"x":1134,"y":680,"score":73,"level":0},{"x":1148,"y":680,"score":74,"level":0},{"x":1191,"y":680,"score":72,"level":0},{"x":1311,"y":680,"score":56,"level":0},{"x":1345,"y":680,"score":110,"level":0},{"x":1350,"y":680,"score":108,"level":0},{"x":1374,"y":680,"score":159,"level":0},{"x":1409,"y":680,"score":54,"level":0},{"x":383,"y":681,"score":80,"level":0},{"x":411,"y":681,"score":118,"level":0},{"x":558,"y":681,"score":98,"level":0},{"x":735,"y":681,"score":154,"level":0},{"x":740,"y":681,"score":57,"level":0},{"x":760,"y":681,"score":29,"level":0},{"x":879,"y":681,"score":61,"level":0},{"x":956,"y":681,"score":45,"level":0},{"x":995,"y":681,"score":189,"level":0},{"x":1006,"y":681,"score":146,"level":0},{"x":1075,"y":681,"score":232,"level":0},{"x":1085,"y":681,"score":107,"level":0},{"x":1143,"y":681,"score":124,"level":0},{"x":1292,"y":681,"score":157,"level":0},{"x":1323,"y":681,"score":78,"level":0},{"x":1421,"y":681,"score":58,"level":0},{"x":1460,"y":681,"score":89,"level":0},{"x":1487,"y":681,"score":125,"level":0},{"x":418,"y":682,"score":30,"level":0},{"x":449,"y":682,"score":178,"level":0},{"x":494,"y":682,"score":74,"level":0},{"x":506,"y":682,"score":151,"level":0},{"x":513,"y":682,"score":138,"level":0},{"x":577,"y":682,"score":109,"level":0},{"x":638,"y":682,"score":35,"level":0},{"x":697,"y":682,"score":58,"level":0},{"x":762,"y":682,"score":52,"level":0},{"x":868,"y":682,"score":52,"level":0},{"x":915,"y":682,"score":54,"level":0},{"x":935,"y":682,"score":37,"level":0},{"x":945,"y":682,"score":43,"level":0},{"x":974,"y":682,"score":96,"level":0},{"x":976,"y":682,"score":82,"level":0},{"x":998,"y":682,"score":83,"level":0},{"x":1064,"y":682,"score":81,"level":0},{"x":1112,"y":682,"score":30,"level":0},{"x":1120,"y":682,"score":184,"level":0},{"x":1137,"y":682,"score":65,"level":0},{"x":1199,"y":682,"score":37,"level":0},{"x":1223,"y":682,"score":212,"level":0},{"x":1242,"y":682,"score":49,"level":0},{"x":1251,"y":682,"score":216,"level":0},{"x":1276,"y":682,"score":64,"level":0},{"x":1282,"y":682,"score":89,"level":0},{"x":1312,"y":682,"score":83,"level":0},{"x":1358,"y":682,"score":30,"level":0},{"x":1363,"y":682,"score":192,"level":0},{"x":1393,"y":682,"score":44,"level":0},{"x":1434,"y":682,"score":39,"level":0},{"x":1453,"y":682,"score":159,"level":0},{"x":422,"y":683,"score":91,"level":0},{"x":484,"y":683,"score":56,"level":0},{"x":516,"y":683,"score":197,"level":0},{"x":522,"y":683,"score":47,"level":0},{"x":543,"y":683,"score":39,"level":0},{"x":564,"y":683,"score":45,"level":0},{"x":597,"y":683,"score":40,"level":0},{"x":621,"y":683,"score":32,"level":0},{"x":702,"y":683,"score":57,"level":0},{"x":739,"y":683,"score":69,"level":0},{"x":745,"y":683,"score":85,"level":0},{"x":752,"y":683,"score":161,"level":0},{"x":827,"y":683,"score":72,"level":0},{"x":831,"y":683,"score":47,"level":0},{"x":841,"y":683,"score":77,"level":0},{"x":852,"y":683,"score":184,"level":0},{"x":858,"y":683,"score":66,"level":0},{"x":924,"y":683,"score":152,"level":0},{"x":970,"y":683,"score":48,"level":0},{"x":1011,"y":683,"score":34,"level":0},{"x":1062,"y":683,"score":64,"level":0},{"x":1103,"y":683,"score":44,"level":0},{"x":1166,"y":683,"score":56,"level":0},{"x":1169,"y":683,"score":65,"level":0},{"x":1183,"y":683,"score":84,"level":0},{"x":1230,"y":683,"score":158,"level":0},{"x":1237,"y":683,"score":47,"level":0},{"x":1298,"y":683,"score":244,"level":0},{"x":1337,"y":683,"score":185,"level":0},{"x":1407,"y":683,"score":117,"level":0},{"x":1415,"y":683,"score":85,"level":0},{"x":1470,"y":683,"score":220,"level":0},{"x":1480,"y":683,"score":167,"level":0},{"x":441,"y":684,"score":53,"level":0},{"x":444,"y":684,"score":48,"level":0},{"x":553,"y":684,"score":63,"level":0},{"x":569,"y":684,"score":38,"level":0},{"x":804,"y":684,"score":66,"level":0},{"x":888,"y":684,"score":28,"level":0},{"x":898,"y":684,"score":86,"level":0},{"x":912,"y":684,"score":136,"level":0},{"x":950,"y":684,"score":52,"level":0},{"x":1019,"y":684,"score":30,"level":0},{"x":1044,"y":684,"score":125,"level":0},{"x":1051,"y":684,"score":108,"level":0},{"x":1093,"y":684,"score":83,"level":0},{"x":1128,"y":684,"score":262,"level":0},{"x":1134,"y":684,"score":56,"level":0},{"x":1207,"y":684,"score":32,"level":0},{"x":1212,"y":684,"score":120,"level":0},{"x":1245,"y":684,"score":73,"level":0},{"x":1257,"y":684,"score":227,"level":0},{"x":1350,"y":684,"score":119,"level":0},{"x":1355,"y":684,"score":186,"level":0},{"x":1383,"y":684,"score":38,"level":0},{"x":1392,"y":684,"score":84,"level":0},{"x":1419,"y":684,"score":64,"level":0},{"x":1428,"y":684,"score":133,"level":0},{"x":1442,"y":684,"score":114,"level":0},{"x":397,"y":685,"score":100,"level":0},{"x":474,"y":685,"score":91,"level":0},{"x":499,"y":685,"score":32,"level":0},{"x":622,"y":685,"score":63,"level":0},{"x":664,"y":685,"score":68,"level":0},{"x":679,"y":685,"score":42,"level":0},{"x":710,"y":685,"score":49,"level":0},{"x":722,"y":685,"score":58,"level":0},{"x":764,"y":685,"score":161,"level":0},{"x":784,"y":685,"score":314,"level":0},{"x":835,"y":685,"score":117,"level":0},{"x":841,"y":685,"score":52,"level":0},{"x":877,"y":685,"score":78,"level":0},{"x":932,"y":685,"score":27,"level":0},{"x":1179,"y":685,"score":171,"level":0},{"x":1206,"y":685,"score":88,"level":0},{"x":1307,"y":685,"score":26,"level":0},{"x":1369,"y":685,"score":42,"level":0},{"x":1373,"y":685,"score":51,"level":0},{"x":1408,"y":685,"score":196,"level":0},{"x":413,"y":686,"score":79,"level":0},{"x":419,"y":686,"score":30,"level":0},{"x":424,"y":686,"score":139,"level":0},{"x":480,"y":686,"score":62,"level":0},{"x":544,"y":686,"score":41,"level":0},{"x":602,"y":686,"score":165,"level":0},{"x":773,"y":686,"score":26,"level":0},{"x":921,"y":686,"score":40,"level":0},{"x":993,"y":686,"score":41,"level":0},{"x":1059,"y":686,"score":45,"level":0},{"x":1100,"y":686,"score":68,"level":0},{"x":1174,"y":686,"score":67,"level":0},{"x":1187,"y":686,"score":77,"level":0},{"x":1242,"y":686,"score":38,"level":0},{"x":1323,"y":686,"score":88,"level":0},{"x":1346,"y":686,"score":83,"level":0},{"x":1421,"y":686,"score":92,"level":0},{"x":406,"y":687,"score":98,"level":0},{"x":447,"y":687,"score":101,"level":0},{"x":510,"y":687,"score":64,"level":0},{"x":558,"y":687,"score":48,"level":0},{"x":573,"y":687,"score":153,"level":0},{"x":635,"y":687,"score":61,"level":0},{"x":715,"y":687,"score":44,"level":0},{"x":830,"y":687,"score":45,"level":0},{"x":917,"y":687,"score":54,"level":0},{"x":1072,"y":687,"score":85,"level":0},{"x":1086,"y":687,"score":52,"level":0},{"x":1091,"y":687,"score":60,"level":0},{"x":1138,"y":687,"score":203,"level":0},{"x":1288,"y":687,"score":53,"level":0},{"x":1297,"y":687,"score":56,"level":0},{"x":1302,"y":687,"score":113,"level":0},{"x":1366,"y":687,"score":142,"level":0},{"x":1448,"y":687,"score":102,"level":0},{"x":412,"y":688,"score":120,"level":0},{"x":565,"y":688,"score":62,"level":0},{"x":645,"y":688,"score":80,"level":0},{"x":700,"y":688,"score":74,"level":0},{"x":740,"y":688,"score":160,"level":0},{"x":746,"y":688,"score":107,"level":0},{"x":799,"y":688,"score":42,"level":0},{"x":814,"y":688,"score":48,"level":0},{"x":866,"y":688,"score":91,"level":0},{"x":900,"y":688,"score":27,"level":0},{"x":909,"y":688,"score":103,"level":0},{"x":926,"y":688,"score":34,"level":0},{"x":985,"y":688,"score":89,"level":0},{"x":1063,"y":688,"score":49,"level":0},{"x":1105,"y":688,"score":31,"level":0},{"x":1133,"y":688,"score":129,"level":0},{"x":1154,"y":688,"score":85,"level":0},{"x":1164,"y":688,"score":26,"level":0},{"x":1171,"y":688,"score":108,"level":0},{"x":1230,"y":688,"score":26,"level":0},{"x":1333,"y":688,"score":30,"level":0},{"x":1397,"y":688,"score":38,"level":0},{"x":1427,"y":688,"score":243,"level":0},{"x":1462,"y":688,"score":30,"level":0},{"x":1466,"y":688,"score":37,"level":0},{"x":1472,"y":688,"score":39,"level":0},{"x":1485,"y":688,"score":72,"level":0},{"x":1490,"y":688,"score":119,"level":0},{"x":434,"y":689,"score":74,"level":0},{"x":497,"y":689,"score":91,"level":0},{"x":534,"y":689,"score":122,"level":0},{"x":556,"y":689,"score":118,"level":0},{"x":702,"y":689,"score":83,"level":0},{"x":808,"y":689,"score":34,"level":0},{"x":855,"y":689,"score":140,"level":0},{"x":1045,"y":689,"score":142,"level":0},{"x":1103,"y":689,"score":45,"level":0},{"x":1128,"y":689,"score":46,"level":0},{"x":1151,"y":689,"score":205,"level":0},{"x":1194,"y":689,"score":35,"level":0},{"x":1204,"y":689,"score":51,"level":0},{"x":1238,"y":689,"score":140,"level":0},{"x":1241,"y":689,"score":57,"level":0},{"x":1244,"y":689,"score":54,"level":0},{"x":1284,"y":689,"score":135,"level":0},{"x":1293,"y":689,"score":121,"level":0},{"x":1314,"y":689,"score":52,"level":0},{"x":1342,"y":689,"score":106,"level":0},{"x":1355,"y":689,"score":212,"level":0},{"x":1361,"y":689,"score":67,"level":0},{"x":1411,"y":689,"score":105,"level":0},{"x":1434,"y":689,"score":172,"level":0},{"x":1449,"y":689,"score":108,"level":0},{"x":377,"y":690,"score":130,"level":0},{"x":396,"y":690,"score":180,"level":0},{"x":627,"y":690,"score":26,"level":0},{"x":651,"y":690,"score":50,"level":0},{"x":710,"y":690,"score":51,"level":0},{"x":765,"y":690,"score":165,"level":0},{"x":931,"y":690,"score":252,"level":0},{"x":957,"y":690,"score":56,"level":0},{"x":1077,"y":690,"score":123,"level":0},{"x":1145,"y":690,"score":176,"level":0},{"x":1273,"y":690,"score":119,"level":0},{"x":1337,"y":690,"score":188,"level":0},{"x":1373,"y":690,"score":54,"level":0},{"x":1395,"y":690,"score":58,"level":0},{"x":1401,"y":690,"score":67,"level":0},{"x":1414,"y":690,"score":96,"level":0},{"x":1442,"y":690,"score":79,"level":0},{"x":402,"y":691,"score":117,"level":0},{"x":454,"y":691,"score":102,"level":0},{"x":488,"y":691,"score":32,"level":0},{"x":619,"y":691,"score":26,"level":0},{"x":663,"y":691,"score":107,"level":0},{"x":684,"y":691,"score":30,"level":0},{"x":759,"y":691,"score":46,"level":0},{"x":822,"y":691,"score":62,"level":0},{"x":834,"y":691,"score":80,"level":0},{"x":884,"y":691,"score":34,"level":0},{"x":896,"y":691,"score":54,"level":0},{"x":916,"y":691,"score":30,"level":0},{"x":923,"y":691,"score":170,"level":0},{"x":1008,"y":691,"score":88,"level":0},{"x":1054,"y":691,"score":58,"level":0},{"x":1059,"y":691,"score":149,"level":0},{"x":1100,"y":691,"score":98,"level":0},{"x":1115,"y":691,"score":50,"level":0},{"x":1121,"y":691,"score":64,"level":0},{"x":1158,"y":691,"score":26,"level":0},{"x":1198,"y":691,"score":40,"level":0},{"x":1279,"y":691,"score":155,"level":0},{"x":1314,"y":691,"score":72,"level":0},{"x":1325,"y":691,"score":224,"level":0},{"x":1420,"y":691,"score":39,"level":0},{"x":381,"y":692,"score":60,"level":0},{"x":434,"y":692,"score":110,"level":0},{"x":445,"y":692,"score":88,"level":0},{"x":490,"y":692,"score":65,"level":0},{"x":501,"y":692,"score":57,"level":0},{"x":514,"y":692,"score":28,"level":0},{"x":522,"y":692,"score":49,"level":0},{"x":550,"y":692,"score":83,"level":0},{"x":565,"y":692,"score":31,"level":0},{"x":609,"y":692,"score":26,"level":0},{"x":744,"y":692,"score":38,"level":0},{"x":776,"y":692,"score":75,"level":0},{"x":816,"y":692,"score":95,"level":0},{"x":841,"y":692,"score":78,"level":0},{"x":851,"y":692,"score":59,"level":0},{"x":1109,"y":692,"score":102,"level":0},{"x":1126,"y":692,"score":76,"level":0},{"x":1163,"y":692,"score":40,"level":0},{"x":1175,"y":692,"score":38,"level":0},{"x":1219,"y":692,"score":138,"level":0},{"x":1244,"y":692,"score":36,"level":0},{"x":1289,"y":692,"score":137,"level":0},{"x":1389,"y":692,"score":100,"level":0},{"x":1425,"y":692,"score":45,"level":0},{"x":1468,"y":692,"score":32,"level":0},{"x":1473,"y":692,"score":37,"level":0},{"x":387,"y":693,"score":103,"level":0},{"x":483,"y":693,"score":63,"level":0},{"x":541,"y":693,"score":32,"level":0},{"x":653,"y":693,"score":83,"level":0},{"x":738,"y":693,"score":69,"level":0},{"x":771,"y":693,"score":72,"level":0},{"x":826,"y":693,"score":26,"level":0},{"x":848,"y":693,"score":80,"level":0},{"x":1133,"y":693,"score":136,"level":0},{"x":1139,"y":693,"score":162,"level":0},{"x":1170,"y":693,"score":36,"level":0},{"x":1193,"y":693,"score":53,"level":0},{"x":1225,"y":693,"score":129,"level":0},{"x":1232,"y":693,"score":101,"level":0},{"x":1302,"y":693,"score":86,"level":0},{"x":1331,"y":693,"score":80,"level":0},{"x":1345,"y":693,"score":99,"level":0},{"x":1360,"y":693,"score":87,"level":0},{"x":1454,"y":693,"score":164,"level":0},{"x":431,"y":694,"score":81,"level":0},{"x":468,"y":694,"score":31,"level":0},{"x":504,"y":694,"score":38,"level":0},{"x":518,"y":694,"score":31,"level":0},{"x":602,"y":694,"score":30,"level":0},{"x":716,"y":694,"score":42,"level":0},{"x":725,"y":694,"score":59,"level":0},{"x":789,"y":694,"score":37,"level":0},{"x":796,"y":694,"score":117,"level":0},{"x":887,"y":694,"score":42,"level":0},{"x":902,"y":694,"score":26,"level":0},{"x":994,"y":694,"score":31,"level":0},{"x":1015,"y":694,"score":32,"level":0},{"x":1046,"y":694,"score":105,"level":0},{"x":1078,"y":694,"score":112,"level":0},{"x":1155,"y":694,"score":45,"level":0},{"x":1160,"y":694,"score":63,"level":0},{"x":1183,"y":694,"score":130,"level":0},{"x":1206,"y":694,"score":102,"level":0},{"x":1243,"y":694,"score":81,"level":0},{"x":1249,"y":694,"score":49,"level":0},{"x":1283,"y":694,"score":58,"level":0},{"x":1286,"y":694,"score":92,"level":0},{"x":1340,"y":694,"score":79,"level":0},{"x":1428,"y":694,"score":100,"level":0},{"x":1481,"y":694,"score":76,"level":0},{"x":447,"y":695,"score":130,"level":0},{"x":481,"y":695,"score":103,"level":0},{"x":572,"y":695,"score":31,"level":0},{"x":658,"y":695,"score":125,"level":0},{"x":695,"y":695,"score":53,"level":0},{"x":810,"y":695,"score":141,"level":0},{"x":816,"y":695,"score":126,"level":0},{"x":821,"y":695,"score":40,"level":0},{"x":951,"y":695,"score":33,"level":0},{"x":978,"y":695,"score":179,"level":0},{"x":1029,"y":695,"score":69,"level":0},{"x":1152,"y":695,"score":68,"level":0},{"x":1201,"y":695,"score":32,"level":0},{"x":1213,"y":695,"score":29,"level":0},{"x":1305,"y":695,"score":74,"level":0},{"x":1354,"y":695,"score":152,"level":0},{"x":1366,"y":695,"score":37,"level":0},{"x":1372,"y":695,"score":30,"level":0},{"x":1413,"y":695,"score":203,"level":0},{"x":1438,"y":695,"score":31,"level":0},{"x":1448,"y":695,"score":71,"level":0},{"x":1471,"y":695,"score":65,"level":0},{"x":1487,"y":695,"score":96,"level":0},{"x":402,"y":696,"score":70,"level":0},{"x":429,"y":696,"score":48,"level":0},{"x":453,"y":696,"score":136,"level":0},{"x":498,"y":696,"score":62,"level":0},{"x":525,"y":696,"score":175,"level":0},{"x":552,"y":696,"score":38,"level":0},{"x":755,"y":696,"score":102,"level":0},{"x":831,"y":696,"score":76,"level":0},{"x":913,"y":696,"score":37,"level":0},{"x":917,"y":696,"score":39,"level":0},{"x":962,"y":696,"score":175,"level":0},{"x":967,"y":696,"score":128,"level":0},{"x":989,"y":696,"score":82,"level":0},{"x":1086,"y":696,"score":115,"level":0},{"x":1108,"y":696,"score":107,"level":0},{"x":1113,"y":696,"score":27,"level":0},{"x":1121,"y":696,"score":45,"level":0},{"x":1189,"y":696,"score":158,"level":0},{"x":1261,"y":696,"score":43,"level":0},{"x":1335,"y":696,"score":323,"level":0},{"x":1341,"y":696,"score":75,"level":0},{"x":1361,"y":696,"score":48,"level":0},{"x":1420,"y":696,"score":100,"level":0},{"x":520,"y":697,"score":83,"level":0},{"x":651,"y":697,"score":118,"level":0},{"x":656,"y":697,"score":80,"level":0},{"x":663,"y":697,"score":44,"level":0},{"x":776,"y":697,"score":48,"level":0},{"x":840,"y":697,"score":32,"level":0},{"x":923,"y":697,"score":126,"level":0},{"x":997,"y":697,"score":54,"level":0},{"x":1021,"y":697,"score":30,"level":0},{"x":1162,"y":697,"score":184,"level":0},{"x":1177,"y":697,"score":170,"level":0},{"x":1219,"y":697,"score":47,"level":0},{"x":1268,"y":697,"score":42,"level":0},{"x":1289,"y":697,"score":101,"level":0},{"x":1329,"y":697,"score":136,"level":0},{"x":1387,"y":697,"score":41,"level":0},{"x":1397,"y":697,"score":102,"level":0},{"x":1457,"y":697,"score":43,"level":0},{"x":407,"y":698,"score":60,"level":0},{"x":547,"y":698,"score":39,"level":0},{"x":565,"y":698,"score":187,"level":0},{"x":930,"y":698,"score":139,"level":0},{"x":941,"y":698,"score":27,"level":0},{"x":1040,"y":698,"score":62,"level":0},{"x":1064,"y":698,"score":129,"level":0},{"x":1136,"y":698,"score":81,"level":0},{"x":1156,"y":698,"score":113,"level":0},{"x":1209,"y":698,"score":43,"level":0},{"x":1232,"y":698,"score":29,"level":0},{"x":1313,"y":698,"score":66,"level":0},{"x":1403,"y":698,"score":291,"level":0},{"x":1490,"y":698,"score":42,"level":0},{"x":387,"y":699,"score":30,"level":0},{"x":537,"y":699,"score":73,"level":0},{"x":559,"y":699,"score":50,"level":0},{"x":664,"y":699,"score":37,"level":0},{"x":681,"y":699,"score":39,"level":0},{"x":800,"y":699,"score":48,"level":0},{"x":843,"y":699,"score":26,"level":0},{"x":845,"y":699,"score":39,"level":0},{"x":886,"y":699,"score":60,"level":0},{"x":1042,"y":699,"score":61,"level":0},{"x":1046,"y":699,"score":96,"level":0},{"x":1058,"y":699,"score":52,"level":0},{"x":1099,"y":699,"score":86,"level":0},{"x":1145,"y":699,"score":50,"level":0},{"x":1234,"y":699,"score":60,"level":0},{"x":1244,"y":699,"score":87,"level":0},{"x":1252,"y":699,"score":29,"level":0},{"x":1257,"y":699,"score":33,"level":0},{"x":1340,"y":699,"score":38,"level":0},{"x":1414,"y":699,"score":147,"level":0},{"x":1430,"y":699,"score":156,"level":0},{"x":1463,"y":699,"score":83,"level":0},{"x":1474,"y":699,"score":52,"level":0},{"x":1480,"y":699,"score":242,"level":0},{"x":399,"y":700,"score":58,"level":0},{"x":437,"y":700,"score":90,"level":0},{"x":446,"y":700,"score":36,"level":0},{"x":481,"y":700,"score":29,"level":0},{"x":495,"y":700,"score":88,"level":0},{"x":521,"y":700,"score":44,"level":0},{"x":564,"y":700,"score":169,"level":0},{"x":622,"y":700,"score":28,"level":0},{"x":643,"y":700,"score":30,"level":0},{"x":736,"y":700,"score":28,"level":0},{"x":767,"y":700,"score":138,"level":0},{"x":785,"y":700,"score":80,"level":0},{"x":833,"y":700,"score":38,"level":0},{"x":852,"y":700,"score":59,"level":0},{"x":937,"y":700,"score":71,"level":0},{"x":978,"y":700,"score":225,"level":0},{"x":991,"y":700,"score":35,"level":0},{"x":1004,"y":700,"score":56,"level":0},{"x":1012,"y":700,"score":57,"level":0},{"x":1052,"y":700,"score":33,"level":0},{"x":1062,"y":700,"score":65,"level":0},{"x":1129,"y":700,"score":97,"level":0},{"x":1147,"y":700,"score":54,"level":0},{"x":1156,"y":700,"score":103,"level":0},{"x":1167,"y":700,"score":31,"level":0},{"x":1240,"y":700,"score":69,"level":0},{"x":1269,"y":700,"score":36,"level":0},{"x":1296,"y":700,"score":52,"level":0},{"x":1354,"y":700,"score":146,"level":0},{"x":1364,"y":700,"score":105,"level":0},{"x":1424,"y":700,"score":37,"level":0},{"x":1438,"y":700,"score":36,"level":0},{"x":1452,"y":700,"score":121,"level":0},{"x":428,"y":701,"score":54,"level":0},{"x":500,"y":701,"score":38,"level":0},{"x":531,"y":701,"score":73,"level":0},{"x":667,"y":701,"score":41,"level":0},{"x":730,"y":701,"score":34,"level":0},{"x":765,"y":701,"score":90,"level":0},{"x":814,"y":701,"score":70,"level":0},{"x":912,"y":701,"score":55,"level":0},{"x":917,"y":701,"score":107,"level":0},{"x":926,"y":701,"score":78,"level":0},{"x":931,"y":701,"score":156,"level":0},{"x":968,"y":701,"score":150,"level":0},{"x":1015,"y":701,"score":66,"level":0},{"x":1107,"y":701,"score":38,"level":0},{"x":1121,"y":701,"score":35,"level":0},{"x":1172,"y":701,"score":96,"level":0},{"x":1205,"y":701,"score":44,"level":0},{"x":1214,"y":701,"score":92,"level":0},{"x":1257,"y":701,"score":48,"level":0},{"x":1370,"y":701,"score":229,"level":0},{"x":1393,"y":701,"score":48,"level":0},{"x":1399,"y":701,"score":37,"level":0},{"x":1486,"y":701,"score":45,"level":0},{"x":417,"y":702,"score":54,"level":0},{"x":453,"y":702,"score":34,"level":0},{"x":468,"y":702,"score":52,"level":0},{"x":487,"y":702,"score":74,"level":0},{"x":541,"y":702,"score":176,"level":0},{"x":659,"y":702,"score":46,"level":0},{"x":835,"y":702,"score":29,"level":0},{"x":875,"y":702,"score":66,"level":0},{"x":1021,"y":702,"score":68,"level":0},{"x":1081,"y":702,"score":59,"level":0},{"x":1087,"y":702,"score":225,"level":0},{"x":1094,"y":702,"score":229,"level":0},{"x":1199,"y":702,"score":38,"level":0},{"x":1250,"y":702,"score":37,"level":0},{"x":1334,"y":702,"score":30,"level":0},{"x":1344,"y":702,"score":44,"level":0},{"x":1348,"y":702,"score":85,"level":0},{"x":1375,"y":702,"score":94,"level":0},{"x":409,"y":703,"score":87,"level":0},{"x":603,"y":703,"score":36,"level":0},{"x":669,"y":703,"score":33,"level":0},{"x":707,"y":703,"score":54,"level":0},{"x":897,"y":703,"score":177,"level":0},{"x":905,"y":703,"score":40,"level":0},{"x":941,"y":703,"score":162,"level":0},{"x":984,"y":703,"score":53,"level":0},{"x":994,"y":703,"score":44,"level":0},{"x":1058,"y":703,"score":149,"level":0},{"x":1063,"y":703,"score":28,"level":0},{"x":1193,"y":703,"score":42,"level":0},{"x":1210,"y":703,"score":148,"level":0},{"x":1217,"y":703,"score":64,"level":0},{"x":1263,"y":703,"score":42,"level":0},{"x":1316,"y":703,"score":76,"level":0},{"x":1385,"y":703,"score":74,"level":0},{"x":1403,"y":703,"score":92,"level":0},{"x":1418,"y":703,"score":277,"level":0},{"x":1458,"y":703,"score":58,"level":0},{"x":460,"y":704,"score":35,"level":0},{"x":524,"y":704,"score":40,"level":0},{"x":597,"y":704,"score":190,"level":0},{"x":682,"y":704,"score":49,"level":0},{"x":801,"y":704,"score":61,"level":0},{"x":865,"y":704,"score":89,"level":0},{"x":1003,"y":704,"score":62,"level":0},{"x":1014,"y":704,"score":31,"level":0},{"x":1052,"y":704,"score":42,"level":0},{"x":1160,"y":704,"score":82,"level":0},{"x":1204,"y":704,"score":54,"level":0},{"x":1225,"y":704,"score":36,"level":0},{"x":1244,"y":704,"score":86,"level":0},{"x":1292,"y":704,"score":52,"level":0},{"x":1325,"y":704,"score":32,"level":0},{"x":1361,"y":704,"score":57,"level":0},{"x":1380,"y":704,"score":83,"level":0},{"x":1411,"y":704,"score":169,"level":0},{"x":1430,"y":704,"score":63,"level":0},{"x":1445,"y":704,"score":88,"level":0},{"x":1464,"y":704,"score":86,"level":0},{"x":447,"y":705,"score":104,"level":0},{"x":546,"y":705,"score":31,"level":0},{"x":568,"y":705,"score":42,"level":0},{"x":604,"y":705,"score":36,"level":0},{"x":704,"y":705,"score":44,"level":0},{"x":754,"y":705,"score":68,"level":0},{"x":784,"y":705,"score":37,"level":0},{"x":797,"y":705,"score":29,"level":0},{"x":828,"y":705,"score":41,"level":0},{"x":888,"y":705,"score":90,"level":0},{"x":928,"y":705,"score":57,"level":0},{"x":934,"y":705,"score":48,"level":0},{"x":968,"y":705,"score":64,"level":0},{"x":1009,"y":705,"score":130,"level":0},{"x":1044,"y":705,"score":35,"level":0},{"x":1130,"y":705,"score":83,"level":0},{"x":1137,"y":705,"score":97,"level":0},{"x":1260,"y":705,"score":27,"level":0},{"x":1309,"y":705,"score":148,"level":0},{"x":1340,"y":705,"score":80,"level":0},{"x":1375,"y":705,"score":54,"level":0},{"x":1389,"y":705,"score":72,"level":0},{"x":1471,"y":705,"score":179,"level":0},{"x":1478,"y":705,"score":105,"level":0},{"x":377,"y":706,"score":187,"level":0},{"x":392,"y":706,"score":38,"level":0},{"x":433,"y":706,"score":48,"level":0},{"x":494,"y":706,"score":113,"level":0},{"x":563,"y":706,"score":82,"level":0},{"x":731,"y":706,"score":36,"level":0},{"x":745,"y":706,"score":49,"level":0},{"x":791,"y":706,"score":134,"level":0},{"x":811,"y":706,"score":32,"level":0},{"x":1016,"y":706,"score":89,"level":0},{"x":1069,"y":706,"score":208,"level":0},{"x":1101,"y":706,"score":72,"level":0},{"x":1118,"y":706,"score":172,"level":0},{"x":1169,"y":706,"score":159,"level":0},{"x":1183,"y":706,"score":94,"level":0},{"x":1231,"y":706,"score":162,"level":0},{"x":1280,"y":706,"score":32,"level":0},{"x":1319,"y":706,"score":31,"level":0},{"x":1452,"y":706,"score":136,"level":0},{"x":1485,"y":706,"score":162,"level":0},{"x":388,"y":707,"score":56,"level":0},{"x":426,"y":707,"score":171,"level":0},{"x":488,"y":707,"score":84,"level":0},{"x":501,"y":707,"score":105,"level":0},{"x":658,"y":707,"score":140,"level":0},{"x":818,"y":707,"score":66,"level":0},{"x":851,"y":707,"score":31,"level":0},{"x":874,"y":707,"score":71,"level":0},{"x":882,"y":707,"score":75,"level":0},{"x":969,"y":707,"score":136,"level":0},{"x":983,"y":707,"score":71,"level":0},{"x":1027,"y":707,"score":107,"level":0},{"x":1106,"y":707,"score":100,"level":0},{"x":1123,"y":707,"score":42,"level":0},{"x":1297,"y":707,"score":143,"level":0},{"x":1312,"y":707,"score":85,"level":0},{"x":1331,"y":707,"score":48,"level":0},{"x":1340,"y":707,"score":84,"level":0},{"x":1354,"y":707,"score":114,"level":0},{"x":1369,"y":707,"score":116,"level":0},{"x":1375,"y":707,"score":146,"level":0},{"x":1384,"y":707,"score":47,"level":0},{"x":1397,"y":707,"score":92,"level":0},{"x":415,"y":708,"score":33,"level":0},{"x":432,"y":708,"score":28,"level":0},{"x":439,"y":708,"score":61,"level":0},{"x":483,"y":708,"score":40,"level":0},{"x":569,"y":708,"score":33,"level":0},{"x":608,"y":708,"score":46,"level":0},{"x":644,"y":708,"score":41,"level":0},{"x":670,"y":708,"score":148,"level":0},{"x":736,"y":708,"score":135,"level":0},{"x":743,"y":708,"score":83,"level":0},{"x":763,"y":708,"score":178,"level":0},{"x":901,"y":708,"score":62,"level":0},{"x":938,"y":708,"score":30,"level":0},{"x":959,"y":708,"score":155,"level":0},{"x":987,"y":708,"score":82,"level":0},{"x":999,"y":708,"score":38,"level":0},{"x":1021,"y":708,"score":120,"level":0},{"x":1032,"y":708,"score":121,"level":0},{"x":1089,"y":708,"score":96,"level":0},{"x":1095,"y":708,"score":131,"level":0},{"x":1140,"y":708,"score":108,"level":0},{"x":1178,"y":708,"score":71,"level":0},{"x":1203,"y":708,"score":79,"level":0},{"x":1215,"y":708,"score":212,"level":0},{"x":1285,"y":708,"score":169,"level":0},{"x":1436,"y":708,"score":114,"level":0},{"x":445,"y":709,"score":122,"level":0},{"x":455,"y":709,"score":99,"level":0},{"x":518,"y":709,"score":48,"level":0},{"x":694,"y":709,"score":55,"level":0},{"x":769,"y":709,"score":112,"level":0},{"x":774,"y":709,"score":54,"level":0},{"x":781,"y":709,"score":110,"level":0},{"x":795,"y":709,"score":30,"level":0},{"x":810,"y":709,"score":132,"level":0},{"x":862,"y":709,"score":69,"level":0},{"x":951,"y":709,"score":62,"level":0},{"x":994,"y":709,"score":202,"level":0},{"x":1004,"y":709,"score":91,"level":0},{"x":1015,"y":709,"score":76,"level":0},{"x":1038,"y":709,"score":168,"level":0},{"x":1162,"y":709,"score":56,"level":0},{"x":1229,"y":709,"score":66,"level":0},{"x":1336,"y":709,"score":34,"level":0},{"x":1354,"y":709,"score":185,"level":0},{"x":1375,"y":709,"score":63,"level":0},{"x":1380,"y":709,"score":63,"level":0},{"x":1389,"y":709,"score":104,"level":0},{"x":1425,"y":709,"score":192,"level":0},{"x":1431,"y":709,"score":74,"level":0},{"x":411,"y":710,"score":72,"level":0},{"x":418,"y":710,"score":59,"level":0},{"x":473,"y":710,"score":26,"level":0},{"x":571,"y":710,"score":26,"level":0},{"x":598,"y":710,"score":60,"level":0},{"x":679,"y":710,"score":80,"level":0},{"x":721,"y":710,"score":88,"level":0},{"x":755,"y":710,"score":127,"level":0},{"x":800,"y":710,"score":94,"level":0},{"x":835,"y":710,"score":40,"level":0},{"x":888,"y":710,"score":172,"level":0},{"x":933,"y":710,"score":42,"level":0},{"x":1053,"y":710,"score":149,"level":0},{"x":1134,"y":710,"score":64,"level":0},{"x":1139,"y":710,"score":71,"level":0},{"x":1197,"y":710,"score":38,"level":0},{"x":1206,"y":710,"score":41,"level":0},{"x":1234,"y":710,"score":71,"level":0},{"x":1451,"y":710,"score":46,"level":0},{"x":1470,"y":710,"score":43,"level":0},{"x":381,"y":711,"score":40,"level":0},{"x":396,"y":711,"score":55,"level":0},{"x":421,"y":711,"score":34,"level":0},{"x":439,"y":711,"score":27,"level":0},{"x":504,"y":711,"score":34,"level":0},{"x":527,"y":711,"score":44,"level":0},{"x":529,"y":711,"score":76,"level":0},{"x":552,"y":711,"score":63,"level":0},{"x":558,"y":711,"score":55,"level":0},{"x":563,"y":711,"score":50,"level":0},{"x":596,"y":711,"score":37,"level":0},{"x":675,"y":711,"score":73,"level":0},{"x":1072,"y":711,"score":37,"level":0},{"x":1144,"y":711,"score":46,"level":0},{"x":1210,"y":711,"score":52,"level":0},{"x":1275,"y":711,"score":100,"level":0},{"x":1318,"y":711,"score":228,"level":0},{"x":1323,"y":711,"score":28,"level":0},{"x":1337,"y":711,"score":134,"level":0},{"x":1363,"y":711,"score":62,"level":0},{"x":1390,"y":711,"score":94,"level":0},{"x":1395,"y":711,"score":180,"level":0},{"x":1404,"y":711,"score":39,"level":0},{"x":1443,"y":711,"score":202,"level":0},{"x":1477,"y":711,"score":217,"level":0},{"x":1485,"y":711,"score":121,"level":0},{"x":426,"y":712,"score":42,"level":0},{"x":468,"y":712,"score":31,"level":0},{"x":539,"y":712,"score":44,"level":0},{"x":637,"y":712,"score":42,"level":0},{"x":640,"y":712,"score":37,"level":0},{"x":666,"y":712,"score":87,"level":0},{"x":671,"y":712,"score":80,"level":0},{"x":691,"y":712,"score":46,"level":0},{"x":796,"y":712,"score":103,"level":0},{"x":875,"y":712,"score":149,"level":0},{"x":915,"y":712,"score":99,"level":0},{"x":935,"y":712,"score":39,"level":0},{"x":963,"y":712,"score":62,"level":0},{"x":970,"y":712,"score":116,"level":0},{"x":981,"y":712,"score":63,"level":0},{"x":989,"y":712,"score":39,"level":0},{"x":1047,"y":712,"score":88,"level":0},{"x":1117,"y":712,"score":190,"level":0},{"x":1123,"y":712,"score":66,"level":0},{"x":1131,"y":712,"score":66,"level":0},{"x":1297,"y":712,"score":71,"level":0},{"x":1347,"y":712,"score":83,"level":0},{"x":403,"y":713,"score":63,"level":0},{"x":422,"y":713,"score":33,"level":0},{"x":431,"y":713,"score":68,"level":0},{"x":473,"y":713,"score":26,"level":0},{"x":509,"y":713,"score":142,"level":0},{"x":553,"y":713,"score":53,"level":0},{"x":680,"y":713,"score":60,"level":0},{"x":685,"y":713,"score":94,"level":0},{"x":737,"y":713,"score":103,"level":0},{"x":824,"y":713,"score":96,"level":0},{"x":929,"y":713,"score":37,"level":0},{"x":959,"y":713,"score":51,"level":0},{"x":1022,"y":713,"score":28,"level":0},{"x":1087,"y":713,"score":119,"level":0},{"x":1097,"y":713,"score":41,"level":0},{"x":1136,"y":713,"score":65,"level":0},{"x":1166,"y":713,"score":47,"level":0},{"x":1185,"y":713,"score":202,"level":0},{"x":1277,"y":713,"score":113,"level":0},{"x":1358,"y":713,"score":40,"level":0},{"x":1385,"y":713,"score":93,"level":0},{"x":388,"y":714,"score":42,"level":0},{"x":409,"y":714,"score":26,"level":0},{"x":445,"y":714,"score":73,"level":0},{"x":482,"y":714,"score":50,"level":0},{"x":488,"y":714,"score":50,"level":0},{"x":501,"y":714,"score":26,"level":0},{"x":559,"y":714,"score":108,"level":0},{"x":571,"y":714,"score":36,"level":0},{"x":745,"y":714,"score":209,"level":0},{"x":751,"y":714,"score":122,"level":0},{"x":758,"y":714,"score":36,"level":0},{"x":763,"y":714,"score":103,"level":0},{"x":946,"y":714,"score":85,"level":0},{"x":954,"y":714,"score":62,"level":0},{"x":1041,"y":714,"score":81,"level":0},{"x":1055,"y":714,"score":28,"level":0},{"x":1141,"y":714,"score":36,"level":0},{"x":1162,"y":714,"score":53,"level":0},{"x":1172,"y":714,"score":27,"level":0},{"x":1174,"y":714,"score":83,"level":0},{"x":1196,"y":714,"score":115,"level":0},{"x":1285,"y":714,"score":65,"level":0},{"x":1294,"y":714,"score":84,"level":0},{"x":1345,"y":714,"score":154,"level":0},{"x":1355,"y":714,"score":96,"level":0},{"x":1487,"y":714,"score":59,"level":0},{"x":403,"y":715,"score":41,"level":0},{"x":423,"y":715,"score":34,"level":0},{"x":448,"y":715,"score":93,"level":0},{"x":459,"y":715,"score":47,"level":0},{"x":530,"y":715,"score":57,"level":0},{"x":536,"y":715,"score":72,"level":0},{"x":686,"y":715,"score":74,"level":0},{"x":698,"y":715,"score":43,"level":0},{"x":708,"y":715,"score":58,"level":0},{"x":769,"y":715,"score":77,"level":0},{"x":797,"y":715,"score":75,"level":0},{"x":801,"y":715,"score":50,"level":0},{"x":900,"y":715,"score":49,"level":0},{"x":910,"y":715,"score":36,"level":0},{"x":929,"y":715,"score":86,"level":0},{"x":977,"y":715,"score":71,"level":0},{"x":1180,"y":715,"score":98,"level":0},{"x":1235,"y":715,"score":116,"level":0},{"x":1242,"y":715,"score":113,"level":0},{"x":1278,"y":715,"score":74,"level":0},{"x":1296,"y":715,"score":88,"level":0},{"x":1335,"y":715,"score":40,"level":0},{"x":1374,"y":715,"score":126,"level":0},{"x":1391,"y":715,"score":103,"level":0},{"x":1404,"y":715,"score":124,"level":0},{"x":1452,"y":715,"score":41,"level":0},{"x":474,"y":716,"score":27,"level":0},{"x":481,"y":716,"score":46,"level":0},{"x":515,"y":716,"score":42,"level":0},{"x":571,"y":716,"score":33,"level":0},{"x":664,"y":716,"score":146,"level":0},{"x":785,"y":716,"score":235,"level":0},{"x":835,"y":716,"score":60,"level":0},{"x":861,"y":716,"score":65,"level":0},{"x":1011,"y":716,"score":50,"level":0},{"x":1066,"y":716,"score":52,"level":0},{"x":1092,"y":716,"score":38,"level":0},{"x":1107,"y":716,"score":130,"level":0},{"x":1127,"y":716,"score":68,"level":0},{"x":1202,"y":716,"score":165,"level":0},{"x":1217,"y":716,"score":207,"level":0},{"x":1256,"y":716,"score":161,"level":0},{"x":1265,"y":716,"score":79,"level":0},{"x":1409,"y":716,"score":106,"level":0},{"x":1424,"y":716,"score":215,"level":0},{"x":1471,"y":716,"score":105,"level":0},{"x":392,"y":717,"score":69,"level":0},{"x":397,"y":717,"score":39,"level":0},{"x":493,"y":717,"score":28,"level":0},{"x":526,"y":717,"score":51,"level":0},{"x":654,"y":717,"score":147,"level":0},{"x":778,"y":717,"score":87,"level":0},{"x":915,"y":717,"score":42,"level":0},{"x":986,"y":717,"score":63,"level":0},{"x":1125,"y":717,"score":59,"level":0},{"x":1152,"y":717,"score":75,"level":0},{"x":1212,"y":717,"score":121,"level":0},{"x":1273,"y":717,"score":216,"level":0},{"x":1290,"y":717,"score":133,"level":0},{"x":1301,"y":717,"score":255,"level":0},{"x":1358,"y":717,"score":102,"level":0},{"x":1490,"y":717,"score":77,"level":0},{"x":508,"y":718,"score":50,"level":0},{"x":532,"y":718,"score":31,"level":0},{"x":556,"y":718,"score":87,"level":0},{"x":690,"y":718,"score":55,"level":0},{"x":809,"y":718,"score":75,"level":0},{"x":888,"y":718,"score":48,"level":0},{"x":893,"y":718,"score":36,"level":0},{"x":904,"y":718,"score":32,"level":0},{"x":907,"y":718,"score":65,"level":0},{"x":1150,"y":718,"score":30,"level":0},{"x":1204,"y":718,"score":170,"level":0},{"x":1307,"y":718,"score":27,"level":0},{"x":1350,"y":718,"score":95,"level":0},{"x":1382,"y":718,"score":84,"level":0},{"x":1395,"y":718,"score":64,"level":0},{"x":1430,"y":718,"score":26,"level":0},{"x":385,"y":719,"score":108,"level":0},{"x":633,"y":719,"score":26,"level":0},{"x":677,"y":719,"score":53,"level":0},{"x":743,"y":719,"score":36,"level":0},{"x":757,"y":719,"score":66,"level":0},{"x":794,"y":719,"score":85,"level":0},{"x":1041,"y":719,"score":93,"level":0},{"x":1189,"y":719,"score":194,"level":0},{"x":1236,"y":719,"score":55,"level":0},{"x":1257,"y":719,"score":254,"level":0},{"x":1282,"y":719,"score":114,"level":0},{"x":1290,"y":719,"score":110,"level":0},{"x":1327,"y":719,"score":211,"level":0},{"x":1397,"y":719,"score":118,"level":0},{"x":1483,"y":719,"score":118,"level":0},{"x":376,"y":720,"score":63,"level":0},{"x":403,"y":720,"score":64,"level":0},{"x":406,"y":720,"score":30,"level":0},{"x":413,"y":720,"score":69,"level":0},{"x":423,"y":720,"score":63,"level":0},{"x":545,"y":720,"score":70,"level":0},{"x":673,"y":720,"score":78,"level":0},{"x":697,"y":720,"score":51,"level":0},{"x":714,"y":720,"score":38,"level":0},{"x":723,"y":720,"score":40,"level":0},{"x":765,"y":720,"score":190,"level":0},{"x":799,"y":720,"score":78,"level":0},{"x":804,"y":720,"score":46,"level":0},{"x":852,"y":720,"score":52,"level":0},{"x":923,"y":720,"score":111,"level":0},{"x":929,"y":720,"score":30,"level":0},{"x":984,"y":720,"score":34,"level":0},{"x":1025,"y":720,"score":41,"level":0},{"x":1036,"y":720,"score":92,"level":0},{"x":1083,"y":720,"score":81,"level":0},{"x":1094,"y":720,"score":86,"level":0},{"x":1135,"y":720,"score":54,"level":0},{"x":1163,"y":720,"score":31,"level":0},{"x":1184,"y":720,"score":148,"level":0},{"x":1229,"y":720,"score":134,"level":0},{"x":1243,"y":720,"score":238,"level":0},{"x":1284,"y":720,"score":92,"level":0},{"x":1348,"y":720,"score":125,"level":0},{"x":1379,"y":720,"score":125,"level":0},{"x":1403,"y":720,"score":104,"level":0},{"x":1417,"y":720,"score":49,"level":0},{"x":1435,"y":720,"score":154,"level":0},{"x":1441,"y":720,"score":192,"level":0},{"x":1462,"y":720,"score":66,"level":0},{"x":409,"y":721,"score":57,"level":0},{"x":428,"y":721,"score":27,"level":0},{"x":461,"y":721,"score":51,"level":0},{"x":473,"y":721,"score":38,"level":0},{"x":599,"y":721,"score":58,"level":0},{"x":649,"y":721,"score":53,"level":0},{"x":685,"y":721,"score":46,"level":0},{"x":754,"y":721,"score":89,"level":0},{"x":785,"y":721,"score":32,"level":0},{"x":814,"y":721,"score":38,"level":0},{"x":816,"y":721,"score":53,"level":0},{"x":865,"y":721,"score":54,"level":0},{"x":896,"y":721,"score":75,"level":0},{"x":978,"y":721,"score":110,"level":0},{"x":1023,"y":721,"score":37,"level":0},{"x":1088,"y":721,"score":49,"level":0},{"x":1138,"y":721,"score":59,"level":0},{"x":1209,"y":721,"score":65,"level":0},{"x":1401,"y":721,"score":120,"level":0},{"x":1408,"y":721,"score":86,"level":0},{"x":1457,"y":721,"score":83,"level":0},{"x":1468,"y":721,"score":65,"level":0},{"x":418,"y":722,"score":39,"level":0},{"x":515,"y":722,"score":78,"level":0},{"x":538,"y":722,"score":91,"level":0},{"x":679,"y":722,"score":208,"level":0},{"x":825,"y":722,"score":115,"level":0},{"x":918,"y":722,"score":115,"level":0},{"x":988,"y":722,"score":52,"level":0},{"x":1057,"y":722,"score":49,"level":0},{"x":1171,"y":722,"score":130,"level":0},{"x":1200,"y":722,"score":28,"level":0},{"x":1218,"y":722,"score":42,"level":0},{"x":1277,"y":722,"score":46,"level":0},{"x":1289,"y":722,"score":53,"level":0},{"x":1341,"y":722,"score":70,"level":0},{"x":1354,"y":722,"score":43,"level":0},{"x":1390,"y":722,"score":87,"level":0},{"x":1478,"y":722,"score":211,"level":0},{"x":393,"y":723,"score":71,"level":0},{"x":592,"y":723,"score":43,"level":0},{"x":645,"y":723,"score":68,"level":0},{"x":703,"y":723,"score":115,"level":0},{"x":799,"y":723,"score":132,"level":0},{"x":882,"y":723,"score":41,"level":0},{"x":909,"y":723,"score":190,"level":0},{"x":978,"y":723,"score":28,"level":0},{"x":993,"y":723,"score":124,"level":0},{"x":1015,"y":723,"score":86,"level":0},{"x":1030,"y":723,"score":180,"level":0},{"x":1110,"y":723,"score":97,"level":0},{"x":1295,"y":723,"score":142,"level":0},{"x":1488,"y":723,"score":67,"level":0},{"x":398,"y":724,"score":70,"level":0},{"x":504,"y":724,"score":68,"level":0},{"x":557,"y":724,"score":32,"level":0},{"x":604,"y":724,"score":110,"level":0},{"x":662,"y":724,"score":68,"level":0},{"x":729,"y":724,"score":137,"level":0},{"x":759,"y":724,"score":61,"level":0},{"x":775,"y":724,"score":31,"level":0},{"x":892,"y":724,"score":96,"level":0},{"x":960,"y":724,"score":109,"level":0},{"x":983,"y":724,"score":94,"level":0},{"x":1017,"y":724,"score":100,"level":0},{"x":1052,"y":724,"score":101,"level":0},{"x":1068,"y":724,"score":34,"level":0},{"x":1085,"y":724,"score":31,"level":0},{"x":1102,"y":724,"score":31,"level":0},{"x":1107,"y":724,"score":119,"level":0},{"x":1144,"y":724,"score":112,"level":0},{"x":1173,"y":724,"score":178,"level":0},{"x":1194,"y":724,"score":30,"level":0},{"x":1232,"y":724,"score":144,"level":0},{"x":1272,"y":724,"score":88,"level":0},{"x":1298,"y":724,"score":119,"level":0},{"x":1303,"y":724,"score":57,"level":0},{"x":1405,"y":724,"score":59,"level":0},{"x":1433,"y":724,"score":42,"level":0},{"x":377,"y":725,"score":170,"level":0},{"x":417,"y":725,"score":44,"level":0},{"x":445,"y":725,"score":30,"level":0},{"x":533,"y":725,"score":137,"level":0},{"x":545,"y":725,"score":45,"level":0},{"x":561,"y":725,"score":38,"level":0},{"x":689,"y":725,"score":147,"level":0},{"x":696,"y":725,"score":135,"level":0},{"x":704,"y":725,"score":113,"level":0},{"x":709,"y":725,"score":29,"level":0},{"x":714,"y":725,"score":113,"level":0},{"x":791,"y":725,"score":57,"level":0},{"x":870,"y":725,"score":138,"level":0},{"x":876,"y":725,"score":30,"level":0},{"x":1114,"y":725,"score":58,"level":0},{"x":1119,"y":725,"score":276,"level":0},{"x":1184,"y":725,"score":73,"level":0},{"x":1238,"y":725,"score":40,"level":0},{"x":1253,"y":725,"score":32,"level":0},{"x":1258,"y":725,"score":57,"level":0},{"x":1347,"y":725,"score":87,"level":0},{"x":1377,"y":725,"score":259,"level":0},{"x":1399,"y":725,"score":71,"level":0},{"x":1479,"y":725,"score":201,"level":0},{"x":447,"y":726,"score":29,"level":0},{"x":461,"y":726,"score":31,"level":0},{"x":469,"y":726,"score":125,"level":0},{"x":499,"y":726,"score":28,"level":0},{"x":739,"y":726,"score":77,"level":0},{"x":766,"y":726,"score":39,"level":0},{"x":825,"y":726,"score":94,"level":0},{"x":830,"y":726,"score":79,"level":0},{"x":886,"y":726,"score":120,"level":0},{"x":897,"y":726,"score":241,"level":0},{"x":916,"y":726,"score":49,"level":0},{"x":936,"y":726,"score":89,"level":0},{"x":1035,"y":726,"score":65,"level":0},{"x":1125,"y":726,"score":116,"level":0},{"x":1155,"y":726,"score":43,"level":0},{"x":1226,"y":726,"score":99,"level":0},{"x":1284,"y":726,"score":99,"level":0},{"x":1409,"y":726,"score":33,"level":0},{"x":1441,"y":726,"score":40,"level":0},{"x":1470,"y":726,"score":121,"level":0},{"x":514,"y":727,"score":64,"level":0},{"x":558,"y":727,"score":45,"level":0},{"x":684,"y":727,"score":73,"level":0},{"x":747,"y":727,"score":26,"level":0},{"x":756,"y":727,"score":61,"level":0},{"x":821,"y":727,"score":43,"level":0},{"x":987,"y":727,"score":92,"level":0},{"x":1047,"y":727,"score":135,"level":0},{"x":1057,"y":727,"score":53,"level":0},{"x":1098,"y":727,"score":48,"level":0},{"x":1133,"y":727,"score":184,"level":0},{"x":1178,"y":727,"score":59,"level":0},{"x":1211,"y":727,"score":148,"level":0},{"x":1368,"y":727,"score":225,"level":0},{"x":1454,"y":727,"score":101,"level":0},{"x":419,"y":728,"score":92,"level":0},{"x":544,"y":728,"score":48,"level":0},{"x":672,"y":728,"score":76,"level":0},{"x":772,"y":728,"score":53,"level":0},{"x":995,"y":728,"score":106,"level":0},{"x":1065,"y":728,"score":54,"level":0},{"x":1077,"y":728,"score":56,"level":0},{"x":1115,"y":728,"score":78,"level":0},{"x":1159,"y":728,"score":33,"level":0},{"x":1162,"y":728,"score":31,"level":0},{"x":1215,"y":728,"score":90,"level":0},{"x":1234,"y":728,"score":97,"level":0},{"x":1267,"y":728,"score":35,"level":0},{"x":1294,"y":728,"score":59,"level":0},{"x":1305,"y":728,"score":68,"level":0},{"x":1447,"y":728,"score":139,"level":0},{"x":1487,"y":728,"score":192,"level":0},{"x":385,"y":729,"score":41,"level":0},{"x":391,"y":729,"score":46,"level":0},{"x":493,"y":729,"score":44,"level":0},{"x":579,"y":729,"score":63,"level":0},{"x":592,"y":729,"score":85,"level":0},{"x":602,"y":729,"score":57,"level":0},{"x":729,"y":729,"score":85,"level":0},{"x":738,"y":729,"score":78,"level":0},{"x":802,"y":729,"score":71,"level":0},{"x":842,"y":729,"score":137,"level":0},{"x":924,"y":729,"score":157,"level":0},{"x":938,"y":729,"score":46,"level":0},{"x":1060,"y":729,"score":55,"level":0},{"x":1170,"y":729,"score":61,"level":0},{"x":1271,"y":729,"score":73,"level":0},{"x":1298,"y":729,"score":84,"level":0},{"x":1384,"y":729,"score":171,"level":0},{"x":405,"y":730,"score":26,"level":0},{"x":440,"y":730,"score":75,"level":0},{"x":454,"y":730,"score":49,"level":0},{"x":480,"y":730,"score":80,"level":0},{"x":644,"y":730,"score":114,"level":0},{"x":654,"y":730,"score":49,"level":0},{"x":707,"y":730,"score":133,"level":0},{"x":715,"y":730,"score":31,"level":0},{"x":720,"y":730,"score":101,"level":0},{"x":793,"y":730,"score":64,"level":0},{"x":838,"y":730,"score":126,"level":0},{"x":850,"y":730,"score":58,"level":0},{"x":947,"y":730,"score":139,"level":0},{"x":1017,"y":730,"score":94,"level":0},{"x":1196,"y":730,"score":180,"level":0},{"x":1202,"y":730,"score":33,"level":0},{"x":1240,"y":730,"score":94,"level":0},{"x":1280,"y":730,"score":53,"level":0},{"x":1289,"y":730,"score":36,"level":0},{"x":1294,"y":730,"score":78,"level":0},{"x":1377,"y":730,"score":217,"level":0},{"x":1423,"y":730,"score":82,"level":0},{"x":1426,"y":730,"score":34,"level":0},{"x":377,"y":731,"score":37,"level":0},{"x":502,"y":731,"score":70,"level":0},{"x":508,"y":731,"score":85,"level":0},{"x":548,"y":731,"score":60,"level":0},{"x":694,"y":731,"score":52,"level":0},{"x":712,"y":731,"score":70,"level":0},{"x":765,"y":731,"score":102,"level":0},{"x":776,"y":731,"score":35,"level":0},{"x":859,"y":731,"score":33,"level":0},{"x":926,"y":731,"score":172,"level":0},{"x":936,"y":731,"score":50,"level":0},{"x":983,"y":731,"score":305,"level":0},{"x":1000,"y":731,"score":163,"level":0},{"x":1258,"y":731,"score":162,"level":0},{"x":1274,"y":731,"score":70,"level":0},{"x":1322,"y":731,"score":28,"level":0},{"x":1334,"y":731,"score":188,"level":0},{"x":1402,"y":731,"score":86,"level":0},{"x":396,"y":732,"score":65,"level":0},{"x":421,"y":732,"score":67,"level":0},{"x":461,"y":732,"score":36,"level":0},{"x":571,"y":732,"score":73,"level":0},{"x":577,"y":732,"score":43,"level":0},{"x":664,"y":732,"score":52,"level":0},{"x":738,"y":732,"score":68,"level":0},{"x":760,"y":732,"score":72,"level":0},{"x":887,"y":732,"score":27,"level":0},{"x":941,"y":732,"score":81,"level":0},{"x":975,"y":732,"score":102,"level":0},{"x":1009,"y":732,"score":38,"level":0},{"x":1027,"y":732,"score":31,"level":0},{"x":1033,"y":732,"score":254,"level":0},{"x":1043,"y":732,"score":33,"level":0},{"x":1073,"y":732,"score":39,"level":0},{"x":1126,"y":732,"score":139,"level":0},{"x":1232,"y":732,"score":27,"level":0},{"x":1375,"y":732,"score":117,"level":0},{"x":1416,"y":732,"score":87,"level":0},{"x":1440,"y":732,"score":92,"level":0},{"x":1467,"y":732,"score":81,"level":0},{"x":383,"y":733,"score":34,"level":0},{"x":449,"y":733,"score":42,"level":0},{"x":469,"y":733,"score":51,"level":0},{"x":475,"y":733,"score":85,"level":0},{"x":498,"y":733,"score":70,"level":0},{"x":598,"y":733,"score":143,"level":0},{"x":604,"y":733,"score":56,"level":0},{"x":670,"y":733,"score":63,"level":0},{"x":753,"y":733,"score":47,"level":0},{"x":865,"y":733,"score":102,"level":0},{"x":902,"y":733,"score":116,"level":0},{"x":931,"y":733,"score":26,"level":0},{"x":969,"y":733,"score":72,"level":0},{"x":998,"y":733,"score":189,"level":0},{"x":1022,"y":733,"score":31,"level":0},{"x":1105,"y":733,"score":32,"level":0},{"x":1111,"y":733,"score":44,"level":0},{"x":1140,"y":733,"score":124,"level":0},{"x":1148,"y":733,"score":40,"level":0},{"x":1175,"y":733,"score":40,"level":0},{"x":1211,"y":733,"score":49,"level":0},{"x":1227,"y":733,"score":242,"level":0},{"x":1253,"y":733,"score":60,"level":0},{"x":1267,"y":733,"score":121,"level":0},{"x":1304,"y":733,"score":44,"level":0},{"x":1308,"y":733,"score":59,"level":0},{"x":1405,"y":733,"score":30,"level":0},{"x":417,"y":734,"score":54,"level":0},{"x":432,"y":734,"score":58,"level":0},{"x":640,"y":734,"score":224,"level":0},{"x":661,"y":734,"score":118,"level":0},{"x":801,"y":734,"score":61,"level":0},{"x":820,"y":734,"score":130,"level":0},{"x":825,"y":734,"score":100,"level":0},{"x":832,"y":734,"score":43,"level":0},{"x":852,"y":734,"score":164,"level":0},{"x":922,"y":734,"score":44,"level":0},{"x":992,"y":734,"score":81,"level":0},{"x":1014,"y":734,"score":36,"level":0},{"x":1054,"y":734,"score":54,"level":0},{"x":1065,"y":734,"score":160,"level":0},{"x":1079,"y":734,"score":34,"level":0},{"x":1097,"y":734,"score":167,"level":0},{"x":1127,"y":734,"score":70,"level":0},{"x":1129,"y":734,"score":37,"level":0},{"x":1135,"y":734,"score":173,"level":0},{"x":1190,"y":734,"score":114,"level":0},{"x":1369,"y":734,"score":115,"level":0},{"x":1481,"y":734,"score":92,"level":0},{"x":405,"y":735,"score":51,"level":0},{"x":442,"y":735,"score":66,"level":0},{"x":484,"y":735,"score":86,"level":0},{"x":528,"y":735,"score":50,"level":0},{"x":567,"y":735,"score":62,"level":0},{"x":676,"y":735,"score":36,"level":0},{"x":770,"y":735,"score":32,"level":0},{"x":810,"y":735,"score":129,"level":0},{"x":845,"y":735,"score":172,"level":0},{"x":1195,"y":735,"score":162,"level":0},{"x":1219,"y":735,"score":120,"level":0},{"x":1241,"y":735,"score":61,"level":0},{"x":1263,"y":735,"score":74,"level":0},{"x":1280,"y":735,"score":222,"level":0},{"x":1285,"y":735,"score":204,"level":0},{"x":1411,"y":735,"score":97,"level":0},{"x":1422,"y":735,"score":37,"level":0},{"x":1426,"y":735,"score":104,"level":0},{"x":1461,"y":735,"score":121,"level":0},{"x":1475,"y":735,"score":50,"level":0},{"x":505,"y":736,"score":140,"level":0},{"x":631,"y":736,"score":44,"level":0},{"x":784,"y":736,"score":59,"level":0},{"x":796,"y":736,"score":52,"level":0},{"x":872,"y":736,"score":97,"level":0},{"x":906,"y":736,"score":47,"level":0},{"x":949,"y":736,"score":119,"level":0},{"x":958,"y":736,"score":108,"level":0},{"x":980,"y":736,"score":78,"level":0},{"x":1060,"y":736,"score":69,"level":0},{"x":1114,"y":736,"score":162,"level":0},{"x":1123,"y":736,"score":49,"level":0},{"x":1164,"y":736,"score":140,"level":0},{"x":1185,"y":736,"score":45,"level":0},{"x":1291,"y":736,"score":68,"level":0},{"x":1293,"y":736,"score":71,"level":0},{"x":1335,"y":736,"score":105,"level":0},{"x":1369,"y":736,"score":93,"level":0},{"x":1383,"y":736,"score":147,"level":0},{"x":1435,"y":736,"score":53,"level":0},{"x":1448,"y":736,"score":98,"level":0},{"x":377,"y":737,"score":132,"level":0},{"x":407,"y":737,"score":44,"level":0},{"x":498,"y":737,"score":111,"level":0},{"x":554,"y":737,"score":50,"level":0},{"x":686,"y":737,"score":35,"level":0},{"x":908,"y":737,"score":43,"level":0},{"x":920,"y":737,"score":156,"level":0},{"x":1108,"y":737,"score":27,"level":0},{"x":1133,"y":737,"score":111,"level":0},{"x":1230,"y":737,"score":161,"level":0},{"x":1264,"y":737,"score":32,"level":0},{"x":1350,"y":737,"score":95,"level":0},{"x":1365,"y":737,"score":100,"level":0},{"x":1400,"y":737,"score":44,"level":0},{"x":473,"y":738,"score":76,"level":0},{"x":575,"y":738,"score":45,"level":0},{"x":607,"y":738,"score":45,"level":0},{"x":657,"y":738,"score":35,"level":0},{"x":672,"y":738,"score":74,"level":0},{"x":811,"y":738,"score":63,"level":0},{"x":816,"y":738,"score":194,"level":0},{"x":1146,"y":738,"score":33,"level":0},{"x":1213,"y":738,"score":55,"level":0},{"x":1224,"y":738,"score":41,"level":0},{"x":1260,"y":738,"score":26,"level":0},{"x":1313,"y":738,"score":63,"level":0},{"x":1393,"y":738,"score":30,"level":0},{"x":1442,"y":738,"score":74,"level":0},{"x":454,"y":739,"score":177,"level":0},{"x":636,"y":739,"score":75,"level":0},{"x":649,"y":739,"score":67,"level":0},{"x":694,"y":739,"score":39,"level":0},{"x":712,"y":739,"score":69,"level":0},{"x":724,"y":739,"score":130,"level":0},{"x":739,"y":739,"score":31,"level":0},{"x":764,"y":739,"score":47,"level":0},{"x":829,"y":739,"score":142,"level":0},{"x":868,"y":739,"score":46,"level":0},{"x":972,"y":739,"score":46,"level":0},{"x":975,"y":739,"score":28,"level":0},{"x":1036,"y":739,"score":65,"level":0},{"x":1071,"y":739,"score":117,"level":0},{"x":1178,"y":739,"score":46,"level":0},{"x":1181,"y":739,"score":57,"level":0},{"x":1191,"y":739,"score":160,"level":0},{"x":1302,"y":739,"score":178,"level":0},{"x":1358,"y":739,"score":284,"level":0},{"x":1365,"y":739,"score":83,"level":0},{"x":1414,"y":739,"score":95,"level":0},{"x":1419,"y":739,"score":38,"level":0},{"x":413,"y":740,"score":38,"level":0},{"x":429,"y":740,"score":68,"level":0},{"x":484,"y":740,"score":42,"level":0},{"x":643,"y":740,"score":178,"level":0},{"x":664,"y":740,"score":49,"level":0},{"x":719,"y":740,"score":224,"level":0},{"x":800,"y":740,"score":121,"level":0},{"x":823,"y":740,"score":26,"level":0},{"x":843,"y":740,"score":95,"level":0},{"x":856,"y":740,"score":133,"level":0},{"x":903,"y":740,"score":133,"level":0},{"x":910,"y":740,"score":30,"level":0},{"x":985,"y":740,"score":28,"level":0},{"x":1047,"y":740,"score":92,"level":0},{"x":1066,"y":740,"score":157,"level":0},{"x":1079,"y":740,"score":139,"level":0},{"x":1085,"y":740,"score":248,"level":0},{"x":1092,"y":740,"score":84,"level":0},{"x":1126,"y":740,"score":60,"level":0},{"x":1134,"y":740,"score":61,"level":0},{"x":1139,"y":740,"score":161,"level":0},{"x":1172,"y":740,"score":137,"level":0},{"x":1202,"y":740,"score":55,"level":0},{"x":1208,"y":740,"score":71,"level":0},{"x":1274,"y":740,"score":78,"level":0},{"x":1308,"y":740,"score":50,"level":0},{"x":1331,"y":740,"score":219,"level":0},{"x":1338,"y":740,"score":37,"level":0},{"x":1343,"y":740,"score":48,"level":0},{"x":1405,"y":740,"score":151,"level":0},{"x":421,"y":741,"score":82,"level":0},{"x":447,"y":741,"score":41,"level":0},{"x":499,"y":741,"score":27,"level":0},{"x":507,"y":741,"score":195,"level":0},{"x":831,"y":741,"score":72,"level":0},{"x":851,"y":741,"score":30,"level":0},{"x":905,"y":741,"score":98,"level":0},{"x":913,"y":741,"score":39,"level":0},{"x":936,"y":741,"score":114,"level":0},{"x":956,"y":741,"score":68,"level":0},{"x":1027,"y":741,"score":59,"level":0},{"x":1036,"y":741,"score":50,"level":0},{"x":1061,"y":741,"score":119,"level":0},{"x":1117,"y":741,"score":65,"level":0},{"x":1120,"y":741,"score":83,"level":0},{"x":1158,"y":741,"score":50,"level":0},{"x":1180,"y":741,"score":38,"level":0},{"x":1235,"y":741,"score":156,"level":0},{"x":1381,"y":741,"score":75,"level":0},{"x":410,"y":742,"score":56,"level":0},{"x":468,"y":742,"score":43,"level":0},{"x":493,"y":742,"score":104,"level":0},{"x":514,"y":742,"score":83,"level":0},{"x":532,"y":742,"score":30,"level":0},{"x":546,"y":742,"score":62,"level":0},{"x":561,"y":742,"score":78,"level":0},{"x":668,"y":742,"score":192,"level":0},{"x":768,"y":742,"score":108,"level":0},{"x":774,"y":742,"score":124,"level":0},{"x":784,"y":742,"score":184,"level":0},{"x":840,"y":742,"score":35,"level":0},{"x":963,"y":742,"score":60,"level":0},{"x":981,"y":742,"score":96,"level":0},{"x":1091,"y":742,"score":33,"level":0},{"x":1155,"y":742,"score":75,"level":0},{"x":1284,"y":742,"score":48,"level":0},{"x":1291,"y":742,"score":27,"level":0},{"x":1368,"y":742,"score":62,"level":0},{"x":1439,"y":742,"score":109,"level":0},{"x":1456,"y":742,"score":121,"level":0},{"x":378,"y":743,"score":104,"level":0},{"x":395,"y":743,"score":51,"level":0},{"x":566,"y":743,"score":63,"level":0},{"x":596,"y":743,"score":26,"level":0},{"x":699,"y":743,"score":73,"level":0},{"x":838,"y":743,"score":48,"level":0},{"x":880,"y":743,"score":44,"level":0},{"x":1042,"y":743,"score":93,"level":0},{"x":1056,"y":743,"score":79,"level":0},{"x":1073,"y":743,"score":136,"level":0},{"x":1097,"y":743,"score":36,"level":0},{"x":1110,"y":743,"score":94,"level":0},{"x":1129,"y":743,"score":34,"level":0},{"x":1135,"y":743,"score":106,"level":0},{"x":1200,"y":743,"score":79,"level":0},{"x":1236,"y":743,"score":98,"level":0},{"x":1266,"y":743,"score":80,"level":0},{"x":1349,"y":743,"score":136,"level":0},{"x":1359,"y":743,"score":107,"level":0},{"x":1372,"y":743,"score":87,"level":0},{"x":1424,"y":743,"score":221,"level":0},{"x":624,"y":744,"score":77,"level":0},{"x":682,"y":744,"score":79,"level":0},{"x":712,"y":744,"score":132,"level":0},{"x":739,"y":744,"score":167,"level":0},{"x":752,"y":744,"score":52,"level":0},{"x":862,"y":744,"score":73,"level":0},{"x":925,"y":744,"score":123,"level":0},{"x":1155,"y":744,"score":42,"level":0},{"x":1212,"y":744,"score":111,"level":0},{"x":1221,"y":744,"score":94,"level":0},{"x":1322,"y":744,"score":39,"level":0},{"x":1413,"y":744,"score":99,"level":0},{"x":1470,"y":744,"score":78,"level":0},{"x":1480,"y":744,"score":48,"level":0},{"x":403,"y":745,"score":197,"level":0},{"x":452,"y":745,"score":94,"level":0},{"x":524,"y":745,"score":35,"level":0},{"x":706,"y":745,"score":36,"level":0},{"x":718,"y":745,"score":208,"level":0},{"x":922,"y":745,"score":46,"level":0},{"x":1006,"y":745,"score":29,"level":0},{"x":1044,"y":745,"score":69,"level":0},{"x":1170,"y":745,"score":68,"level":0},{"x":1218,"y":745,"score":47,"level":0},{"x":1231,"y":745,"score":161,"level":0},{"x":1275,"y":745,"score":217,"level":0},{"x":1282,"y":745,"score":77,"level":0},{"x":1301,"y":745,"score":35,"level":0},{"x":1384,"y":745,"score":70,"level":0},{"x":1391,"y":745,"score":148,"level":0},{"x":1408,"y":745,"score":31,"level":0},{"x":1459,"y":745,"score":194,"level":0},{"x":657,"y":746,"score":75,"level":0},{"x":713,"y":746,"score":31,"level":0},{"x":856,"y":746,"score":45,"level":0},{"x":999,"y":746,"score":149,"level":0},{"x":1033,"y":746,"score":187,"level":0},{"x":1087,"y":746,"score":36,"level":0},{"x":1127,"y":746,"score":66,"level":0},{"x":1134,"y":746,"score":153,"level":0},{"x":1139,"y":746,"score":77,"level":0},{"x":1207,"y":746,"score":40,"level":0},{"x":1308,"y":746,"score":142,"level":0},{"x":1314,"y":746,"score":360,"level":0},{"x":1378,"y":746,"score":135,"level":0},{"x":1402,"y":746,"score":38,"level":0},{"x":1447,"y":746,"score":91,"level":0},{"x":1486,"y":746,"score":170,"level":0},{"x":388,"y":747,"score":76,"level":0},{"x":497,"y":747,"score":107,"level":0},{"x":509,"y":747,"score":47,"level":0},{"x":515,"y":747,"score":57,"level":0},{"x":531,"y":747,"score":26,"level":0},{"x":598,"y":747,"score":34,"level":0},{"x":627,"y":747,"score":58,"level":0},{"x":824,"y":747,"score":144,"level":0},{"x":833,"y":747,"score":96,"level":0},{"x":904,"y":747,"score":26,"level":0},{"x":940,"y":747,"score":28,"level":0},{"x":981,"y":747,"score":56,"level":0},{"x":984,"y":747,"score":96,"level":0},{"x":1053,"y":747,"score":31,"level":0},{"x":1071,"y":747,"score":62,"level":0},{"x":1094,"y":747,"score":154,"level":0},{"x":1118,"y":747,"score":100,"level":0},{"x":1246,"y":747,"score":45,"level":0},{"x":1254,"y":747,"score":62,"level":0},{"x":1270,"y":747,"score":67,"level":0},{"x":1345,"y":747,"score":47,"level":0},{"x":1438,"y":747,"score":132,"level":0},{"x":1456,"y":747,"score":94,"level":0},{"x":1471,"y":747,"score":106,"level":0},{"x":398,"y":748,"score":111,"level":0},{"x":479,"y":748,"score":47,"level":0},{"x":484,"y":748,"score":84,"level":0},{"x":495,"y":748,"score":148,"level":0},{"x":503,"y":748,"score":37,"level":0},{"x":519,"y":748,"score":58,"level":0},{"x":591,"y":748,"score":35,"level":0},{"x":642,"y":748,"score":110,"level":0},{"x":648,"y":748,"score":33,"level":0},{"x":749,"y":748,"score":58,"level":0},{"x":892,"y":748,"score":106,"level":0},{"x":943,"y":748,"score":59,"level":0},{"x":1011,"y":748,"score":84,"level":0},{"x":1018,"y":748,"score":30,"level":0},{"x":1063,"y":748,"score":143,"level":0},{"x":1110,"y":748,"score":90,"level":0},{"x":1128,"y":748,"score":53,"level":0},{"x":1203,"y":748,"score":27,"level":0},{"x":1342,"y":748,"score":47,"level":0},{"x":1348,"y":748,"score":38,"level":0},{"x":1355,"y":748,"score":76,"level":0},{"x":1426,"y":748,"score":31,"level":0},{"x":1451,"y":748,"score":80,"level":0},{"x":468,"y":749,"score":82,"level":0},{"x":632,"y":749,"score":58,"level":0},{"x":714,"y":749,"score":40,"level":0},{"x":734,"y":749,"score":43,"level":0},{"x":862,"y":749,"score":189,"level":0},{"x":869,"y":749,"score":129,"level":0},{"x":878,"y":749,"score":124,"level":0},{"x":1026,"y":749,"score":32,"level":0},{"x":1038,"y":749,"score":82,"level":0},{"x":1081,"y":749,"score":33,"level":0},{"x":1260,"y":749,"score":63,"level":0},{"x":1265,"y":749,"score":90,"level":0},{"x":1286,"y":749,"score":39,"level":0},{"x":1294,"y":749,"score":42,"level":0},{"x":1308,"y":749,"score":110,"level":0},{"x":1362,"y":749,"score":83,"level":0},{"x":1417,"y":749,"score":30,"level":0},{"x":1430,"y":749,"score":87,"level":0},{"x":1434,"y":749,"score":27,"level":0},{"x":1464,"y":749,"score":107,"level":0},{"x":393,"y":750,"score":28,"level":0},{"x":517,"y":750,"score":66,"level":0},{"x":544,"y":750,"score":62,"level":0},{"x":685,"y":750,"score":160,"level":0},{"x":695,"y":750,"score":27,"level":0},{"x":739,"y":750,"score":40,"level":0},{"x":848,"y":750,"score":190,"level":0},{"x":921,"y":750,"score":95,"level":0},{"x":1049,"y":750,"score":189,"level":0},{"x":1057,"y":750,"score":73,"level":0},{"x":1276,"y":750,"score":151,"level":0},{"x":1299,"y":750,"score":63,"level":0},{"x":1355,"y":750,"score":69,"level":0},{"x":1370,"y":750,"score":122,"level":0},{"x":1391,"y":750,"score":61,"level":0},{"x":1459,"y":750,"score":113,"level":0},{"x":1477,"y":750,"score":75,"level":0},{"x":1479,"y":750,"score":66,"level":0},{"x":445,"y":751,"score":102,"level":0},{"x":622,"y":751,"score":83,"level":0},{"x":654,"y":751,"score":77,"level":0},{"x":724,"y":751,"score":115,"level":0},{"x":766,"y":751,"score":59,"level":0},{"x":769,"y":751,"score":68,"level":0},{"x":787,"y":751,"score":46,"level":0},{"x":793,"y":751,"score":90,"level":0},{"x":805,"y":751,"score":83,"level":0},{"x":808,"y":751,"score":95,"level":0},{"x":816,"y":751,"score":147,"level":0},{"x":912,"y":751,"score":53,"level":0},{"x":976,"y":751,"score":78,"level":0},{"x":998,"y":751,"score":77,"level":0},{"x":1062,"y":751,"score":36,"level":0},{"x":1067,"y":751,"score":140,"level":0},{"x":1226,"y":751,"score":35,"level":0},{"x":1383,"y":751,"score":263,"level":0},{"x":1461,"y":751,"score":136,"level":0},{"x":1485,"y":751,"score":107,"level":0},{"x":386,"y":752,"score":53,"level":0},{"x":456,"y":752,"score":44,"level":0},{"x":619,"y":752,"score":90,"level":0},{"x":671,"y":752,"score":26,"level":0},{"x":755,"y":752,"score":143,"level":0},{"x":757,"y":752,"score":103,"level":0},{"x":813,"y":752,"score":71,"level":0},{"x":881,"y":752,"score":57,"level":0},{"x":902,"y":752,"score":62,"level":0},{"x":926,"y":752,"score":40,"level":0},{"x":968,"y":752,"score":53,"level":0},{"x":972,"y":752,"score":48,"level":0},{"x":1006,"y":752,"score":132,"level":0},{"x":1078,"y":752,"score":48,"level":0},{"x":1117,"y":752,"score":114,"level":0},{"x":1123,"y":752,"score":184,"level":0},{"x":1132,"y":752,"score":195,"level":0},{"x":1198,"y":752,"score":30,"level":0},{"x":1215,"y":752,"score":62,"level":0},{"x":1314,"y":752,"score":91,"level":0},{"x":1320,"y":752,"score":107,"level":0},{"x":1355,"y":752,"score":64,"level":0},{"x":1401,"y":752,"score":90,"level":0},{"x":1457,"y":752,"score":173,"level":0},{"x":1471,"y":752,"score":42,"level":0},{"x":1477,"y":752,"score":72,"level":0},{"x":486,"y":753,"score":29,"level":0},{"x":554,"y":753,"score":63,"level":0},{"x":568,"y":753,"score":45,"level":0},{"x":592,"y":753,"score":100,"level":0},{"x":603,"y":753,"score":205,"level":0},{"x":611,"y":753,"score":26,"level":0},{"x":684,"y":753,"score":150,"level":0},{"x":792,"y":753,"score":68,"level":0},{"x":816,"y":753,"score":118,"level":0},{"x":897,"y":753,"score":69,"level":0},{"x":941,"y":753,"score":133,"level":0},{"x":953,"y":753,"score":29,"level":0},{"x":958,"y":753,"score":175,"level":0},{"x":992,"y":753,"score":80,"level":0},{"x":1012,"y":753,"score":225,"level":0},{"x":1032,"y":753,"score":74,"level":0},{"x":1064,"y":753,"score":88,"level":0},{"x":1070,"y":753,"score":30,"level":0},{"x":1247,"y":753,"score":78,"level":0},{"x":1345,"y":753,"score":82,"level":0},{"x":377,"y":754,"score":151,"level":0},{"x":575,"y":754,"score":122,"level":0},{"x":582,"y":754,"score":147,"level":0},{"x":630,"y":754,"score":34,"level":0},{"x":643,"y":754,"score":94,"level":0},{"x":654,"y":754,"score":80,"level":0},{"x":713,"y":754,"score":30,"level":0},{"x":763,"y":754,"score":37,"level":0},{"x":841,"y":754,"score":59,"level":0},{"x":868,"y":754,"score":146,"level":0},{"x":885,"y":754,"score":213,"level":0},{"x":934,"y":754,"score":120,"level":0},{"x":962,"y":754,"score":99,"level":0},{"x":1139,"y":754,"score":48,"level":0},{"x":1210,"y":754,"score":50,"level":0},{"x":1285,"y":754,"score":266,"level":0},{"x":1337,"y":754,"score":113,"level":0},{"x":1360,"y":754,"score":100,"level":0},{"x":1366,"y":754,"score":161,"level":0},{"x":1425,"y":754,"score":75,"level":0},{"x":1440,"y":754,"score":46,"level":0},{"x":505,"y":755,"score":41,"level":0},{"x":517,"y":755,"score":28,"level":0},{"x":730,"y":755,"score":34,"level":0},{"x":738,"y":755,"score":32,"level":0},{"x":748,"y":755,"score":41,"level":0},{"x":796,"y":755,"score":76,"level":0},{"x":809,"y":755,"score":93,"level":0},{"x":862,"y":755,"score":221,"level":0},{"x":873,"y":755,"score":170,"level":0},{"x":986,"y":755,"score":175,"level":0},{"x":1023,"y":755,"score":32,"level":0},{"x":1058,"y":755,"score":114,"level":0},{"x":1066,"y":755,"score":40,"level":0},{"x":1232,"y":755,"score":46,"level":0},{"x":1236,"y":755,"score":44,"level":0},{"x":1274,"y":755,"score":162,"level":0},{"x":1279,"y":755,"score":62,"level":0},{"x":1292,"y":755,"score":234,"level":0},{"x":1405,"y":755,"score":36,"level":0},{"x":1419,"y":755,"score":58,"level":0},{"x":1452,"y":755,"score":114,"level":0},{"x":1490,"y":755,"score":140,"level":0},{"x":395,"y":756,"score":29,"level":0},{"x":416,"y":756,"score":50,"level":0},{"x":469,"y":756,"score":46,"level":0},{"x":546,"y":756,"score":68,"level":0},{"x":607,"y":756,"score":28,"level":0},{"x":769,"y":756,"score":50,"level":0},{"x":776,"y":756,"score":27,"level":0},{"x":919,"y":756,"score":27,"level":0},{"x":999,"y":756,"score":39,"level":0},{"x":1074,"y":756,"score":35,"level":0},{"x":1091,"y":756,"score":44,"level":0},{"x":1126,"y":756,"score":97,"level":0},{"x":1207,"y":756,"score":71,"level":0},{"x":1219,"y":756,"score":102,"level":0},{"x":1224,"y":756,"score":56,"level":0},{"x":1229,"y":756,"score":133,"level":0},{"x":1260,"y":756,"score":44,"level":0},{"x":1323,"y":756,"score":136,"level":0},{"x":1430,"y":756,"score":61,"level":0},{"x":1460,"y":756,"score":56,"level":0},{"x":1482,"y":756,"score":215,"level":0},{"x":444,"y":757,"score":82,"level":0},{"x":560,"y":757,"score":40,"level":0},{"x":592,"y":757,"score":98,"level":0},{"x":803,"y":757,"score":92,"level":0},{"x":908,"y":757,"score":48,"level":0},{"x":949,"y":757,"score":54,"level":0},{"x":968,"y":757,"score":150,"level":0},{"x":1040,"y":757,"score":145,"level":0},{"x":1051,"y":757,"score":173,"level":0},{"x":1121,"y":757,"score":33,"level":0},{"x":1266,"y":757,"score":60,"level":0},{"x":1316,"y":757,"score":241,"level":0},{"x":1356,"y":757,"score":84,"level":0},{"x":1382,"y":757,"score":62,"level":0},{"x":1435,"y":757,"score":109,"level":0},{"x":1455,"y":757,"score":31,"level":0},{"x":1465,"y":757,"score":52,"level":0},{"x":1473,"y":757,"score":94,"level":0},{"x":502,"y":758,"score":57,"level":0},{"x":566,"y":758,"score":88,"level":0},{"x":598,"y":758,"score":74,"level":0},{"x":611,"y":758,"score":128,"level":0},{"x":701,"y":758,"score":121,"level":0},{"x":752,"y":758,"score":74,"level":0},{"x":791,"y":758,"score":27,"level":0},{"x":799,"y":758,"score":58,"level":0},{"x":815,"y":758,"score":173,"level":0},{"x":821,"y":758,"score":107,"level":0},{"x":871,"y":758,"score":123,"level":0},{"x":877,"y":758,"score":175,"level":0},{"x":892,"y":758,"score":213,"level":0},{"x":957,"y":758,"score":86,"level":0},{"x":1011,"y":758,"score":92,"level":0},{"x":1018,"y":758,"score":28,"level":0},{"x":1045,"y":758,"score":79,"level":0},{"x":1167,"y":758,"score":29,"level":0},{"x":1268,"y":758,"score":120,"level":0},{"x":1392,"y":758,"score":79,"level":0},{"x":1405,"y":758,"score":72,"level":0},{"x":1415,"y":758,"score":32,"level":0},{"x":1450,"y":758,"score":119,"level":0},{"x":1477,"y":758,"score":69,"level":0},{"x":390,"y":759,"score":88,"level":0},{"x":522,"y":759,"score":26,"level":0},{"x":618,"y":759,"score":82,"level":0},{"x":621,"y":759,"score":26,"level":0},{"x":683,"y":759,"score":42,"level":0},{"x":744,"y":759,"score":32,"level":0},{"x":809,"y":759,"score":79,"level":0},{"x":902,"y":759,"score":62,"level":0},{"x":907,"y":759,"score":40,"level":0},{"x":942,"y":759,"score":64,"level":0},{"x":962,"y":759,"score":49,"level":0},{"x":990,"y":759,"score":317,"level":0},{"x":997,"y":759,"score":98,"level":0},{"x":1078,"y":759,"score":44,"level":0},{"x":1085,"y":759,"score":63,"level":0},{"x":1100,"y":759,"score":87,"level":0},{"x":1210,"y":759,"score":106,"level":0},{"x":1285,"y":759,"score":70,"level":0},{"x":1365,"y":759,"score":40,"level":0},{"x":497,"y":760,"score":117,"level":0},{"x":826,"y":760,"score":69,"level":0},{"x":857,"y":760,"score":108,"level":0},{"x":883,"y":760,"score":32,"level":0},{"x":920,"y":760,"score":32,"level":0},{"x":984,"y":760,"score":214,"level":0},{"x":1026,"y":760,"score":145,"level":0},{"x":1033,"y":760,"score":171,"level":0},{"x":1135,"y":760,"score":31,"level":0},{"x":1213,"y":760,"score":146,"level":0},{"x":1268,"y":760,"score":57,"level":0},{"x":1275,"y":760,"score":167,"level":0},{"x":1283,"y":760,"score":67,"level":0},{"x":1345,"y":760,"score":125,"level":0},{"x":1424,"y":760,"score":111,"level":0},{"x":1432,"y":760,"score":126,"level":0},{"x":1445,"y":760,"score":64,"level":0},{"x":1461,"y":760,"score":137,"level":0},{"x":1466,"y":760,"score":184,"level":0},{"x":396,"y":761,"score":57,"level":0},{"x":416,"y":761,"score":91,"level":0},{"x":465,"y":761,"score":42,"level":0},{"x":467,"y":761,"score":31,"level":0},{"x":546,"y":761,"score":129,"level":0},{"x":583,"y":761,"score":86,"level":0},{"x":594,"y":761,"score":49,"level":0},{"x":671,"y":761,"score":46,"level":0},{"x":677,"y":761,"score":65,"level":0},{"x":696,"y":761,"score":73,"level":0},{"x":844,"y":761,"score":31,"level":0},{"x":862,"y":761,"score":69,"level":0},{"x":916,"y":761,"score":31,"level":0},{"x":966,"y":761,"score":99,"level":0},{"x":1048,"y":761,"score":50,"level":0},{"x":1169,"y":761,"score":54,"level":0},{"x":1259,"y":761,"score":90,"level":0},{"x":1294,"y":761,"score":201,"level":0},{"x":1337,"y":761,"score":42,"level":0},{"x":1448,"y":761,"score":54,"level":0},{"x":377,"y":762,"score":109,"level":0},{"x":489,"y":762,"score":62,"level":0},{"x":535,"y":762,"score":52,"level":0},{"x":540,"y":762,"score":42,"level":0},{"x":553,"y":762,"score":132,"level":0},{"x":699,"y":762,"score":74,"level":0},{"x":705,"y":762,"score":42,"level":0},{"x":914,"y":762,"score":41,"level":0},{"x":1010,"y":762,"score":55,"level":0},{"x":1056,"y":762,"score":159,"level":0},{"x":1091,"y":762,"score":112,"level":0},{"x":1183,"y":762,"score":26,"level":0},{"x":1238,"y":762,"score":45,"level":0},{"x":1289,"y":762,"score":111,"level":0},{"x":1317,"y":762,"score":48,"level":0},{"x":1399,"y":762,"score":65,"level":0},{"x":1418,"y":762,"score":41,"level":0},{"x":1430,"y":762,"score":52,"level":0},{"x":1455,"y":762,"score":102,"level":0},{"x":1489,"y":762,"score":172,"level":0},{"x":401,"y":763,"score":37,"level":0},{"x":441,"y":763,"score":92,"level":0},{"x":504,"y":763,"score":39,"level":0},{"x":515,"y":763,"score":33,"level":0},{"x":522,"y":763,"score":43,"level":0},{"x":558,"y":763,"score":47,"level":0},{"x":566,"y":763,"score":68,"level":0},{"x":633,"y":763,"score":70,"level":0},{"x":638,"y":763,"score":28,"level":0},{"x":690,"y":763,"score":36,"level":0},{"x":749,"y":763,"score":46,"level":0},{"x":854,"y":763,"score":31,"level":0},{"x":961,"y":763,"score":62,"level":0},{"x":974,"y":763,"score":45,"level":0},{"x":1003,"y":763,"score":50,"level":0},{"x":1016,"y":763,"score":66,"level":0},{"x":1222,"y":763,"score":161,"level":0},{"x":1281,"y":763,"score":97,"level":0},{"x":1405,"y":763,"score":215,"level":0},{"x":1423,"y":763,"score":92,"level":0},{"x":1436,"y":763,"score":111,"level":0},{"x":1474,"y":763,"score":45,"level":0},{"x":381,"y":764,"score":98,"level":0},{"x":412,"y":764,"score":116,"level":0},{"x":436,"y":764,"score":31,"level":0},{"x":477,"y":764,"score":74,"level":0},{"x":488,"y":764,"score":53,"level":0},{"x":528,"y":764,"score":80,"level":0},{"x":791,"y":764,"score":53,"level":0},{"x":809,"y":764,"score":48,"level":0},{"x":872,"y":764,"score":80,"level":0},{"x":880,"y":764,"score":75,"level":0},{"x":979,"y":764,"score":53,"level":0},{"x":991,"y":764,"score":176,"level":0},{"x":1042,"y":764,"score":170,"level":0},{"x":1147,"y":764,"score":34,"level":0},{"x":1208,"y":764,"score":55,"level":0},{"x":1328,"y":764,"score":58,"level":0},{"x":625,"y":765,"score":152,"level":0},{"x":727,"y":765,"score":107,"level":0},{"x":773,"y":765,"score":39,"level":0},{"x":839,"y":765,"score":122,"level":0},{"x":856,"y":765,"score":122,"level":0},{"x":1006,"y":765,"score":107,"level":0},{"x":1101,"y":765,"score":85,"level":0},{"x":1110,"y":765,"score":188,"level":0},{"x":1137,"y":765,"score":136,"level":0},{"x":1142,"y":765,"score":130,"level":0},{"x":1156,"y":765,"score":72,"level":0},{"x":1167,"y":765,"score":53,"level":0},{"x":1227,"y":765,"score":74,"level":0},{"x":1232,"y":765,"score":35,"level":0},{"x":1264,"y":765,"score":36,"level":0},{"x":1287,"y":765,"score":203,"level":0},{"x":1292,"y":765,"score":159,"level":0},{"x":1342,"y":765,"score":28,"level":0},{"x":1353,"y":765,"score":187,"level":0},{"x":1431,"y":765,"score":124,"level":0},{"x":1444,"y":765,"score":160,"level":0},{"x":574,"y":766,"score":70,"level":0},{"x":697,"y":766,"score":151,"level":0},{"x":710,"y":766,"score":73,"level":0},{"x":830,"y":766,"score":316,"level":0},{"x":845,"y":766,"score":129,"level":0},{"x":1013,"y":766,"score":120,"level":0},{"x":1039,"y":766,"score":91,"level":0},{"x":1099,"y":766,"score":98,"level":0},{"x":1268,"y":766,"score":47,"level":0},{"x":1276,"y":766,"score":43,"level":0},{"x":1302,"y":766,"score":34,"level":0},{"x":1423,"y":766,"score":138,"level":0},{"x":1460,"y":766,"score":38,"level":0},{"x":1479,"y":766,"score":51,"level":0},{"x":394,"y":767,"score":30,"level":0},{"x":470,"y":767,"score":26,"level":0},{"x":498,"y":767,"score":136,"level":0},{"x":595,"y":767,"score":34,"level":0},{"x":675,"y":767,"score":41,"level":0},{"x":691,"y":767,"score":84,"level":0},{"x":722,"y":767,"score":132,"level":0},{"x":867,"y":767,"score":48,"level":0},{"x":898,"y":767,"score":202,"level":0},{"x":913,"y":767,"score":63,"level":0},{"x":1252,"y":767,"score":61,"level":0},{"x":1292,"y":767,"score":146,"level":0},{"x":1443,"y":767,"score":88,"level":0},{"x":1455,"y":767,"score":28,"level":0},{"x":513,"y":768,"score":61,"level":0},{"x":521,"y":768,"score":71,"level":0},{"x":532,"y":768,"score":130,"level":0},{"x":554,"y":768,"score":34,"level":0},{"x":587,"y":768,"score":28,"level":0},{"x":606,"y":768,"score":112,"level":0},{"x":734,"y":768,"score":32,"level":0},{"x":750,"y":768,"score":55,"level":0},{"x":755,"y":768,"score":53,"level":0},{"x":795,"y":768,"score":26,"level":0},{"x":847,"y":768,"score":100,"level":0},{"x":922,"y":768,"score":62,"level":0},{"x":984,"y":768,"score":183,"level":0},{"x":1050,"y":768,"score":79,"level":0},{"x":1092,"y":768,"score":42,"level":0},{"x":1104,"y":768,"score":151,"level":0},{"x":1118,"y":768,"score":152,"level":0},{"x":1156,"y":768,"score":84,"level":0},{"x":1158,"y":768,"score":82,"level":0},{"x":1391,"y":768,"score":80,"level":0},{"x":1411,"y":768,"score":84,"level":0},{"x":1417,"y":768,"score":115,"level":0},{"x":382,"y":769,"score":57,"level":0},{"x":492,"y":769,"score":140,"level":0},{"x":541,"y":769,"score":32,"level":0},{"x":670,"y":769,"score":38,"level":0},{"x":784,"y":769,"score":60,"level":0},{"x":810,"y":769,"score":27,"level":0},{"x":874,"y":769,"score":190,"level":0},{"x":888,"y":769,"score":150,"level":0},{"x":1009,"y":769,"score":231,"level":0},{"x":1162,"y":769,"score":86,"level":0},{"x":1165,"y":769,"score":79,"level":0},{"x":1195,"y":769,"score":168,"level":0},{"x":1222,"y":769,"score":166,"level":0},{"x":1237,"y":769,"score":122,"level":0},{"x":1258,"y":769,"score":86,"level":0},{"x":1273,"y":769,"score":64,"level":0},{"x":1282,"y":769,"score":26,"level":0},{"x":1406,"y":769,"score":62,"level":0},{"x":1469,"y":769,"score":114,"level":0},{"x":391,"y":770,"score":65,"level":0},{"x":408,"y":770,"score":38,"level":0},{"x":418,"y":770,"score":91,"level":0},{"x":441,"y":770,"score":153,"level":0},{"x":583,"y":770,"score":34,"level":0},{"x":744,"y":770,"score":60,"level":0},{"x":978,"y":770,"score":65,"level":0},{"x":1108,"y":770,"score":184,"level":0},{"x":1217,"y":770,"score":148,"level":0},{"x":1227,"y":770,"score":124,"level":0},{"x":1247,"y":770,"score":301,"level":0},{"x":1260,"y":770,"score":83,"level":0},{"x":1284,"y":770,"score":125,"level":0},{"x":1309,"y":770,"score":42,"level":0},{"x":1338,"y":770,"score":56,"level":0},{"x":402,"y":771,"score":102,"level":0},{"x":556,"y":771,"score":44,"level":0},{"x":615,"y":771,"score":89,"level":0},{"x":623,"y":771,"score":102,"level":0},{"x":690,"y":771,"score":55,"level":0},{"x":718,"y":771,"score":124,"level":0},{"x":734,"y":771,"score":38,"level":0},{"x":821,"y":771,"score":44,"level":0},{"x":837,"y":771,"score":43,"level":0},{"x":894,"y":771,"score":35,"level":0},{"x":1232,"y":771,"score":41,"level":0},{"x":1265,"y":771,"score":236,"level":0},{"x":1276,"y":771,"score":92,"level":0},{"x":1401,"y":771,"score":128,"level":0},{"x":377,"y":772,"score":90,"level":0},{"x":435,"y":772,"score":82,"level":0},{"x":448,"y":772,"score":173,"level":0},{"x":528,"y":772,"score":167,"level":0},{"x":534,"y":772,"score":103,"level":0},{"x":594,"y":772,"score":126,"level":0},{"x":672,"y":772,"score":60,"level":0},{"x":724,"y":772,"score":68,"level":0},{"x":830,"y":772,"score":37,"level":0},{"x":1007,"y":772,"score":31,"level":0},{"x":1038,"y":772,"score":64,"level":0},{"x":1046,"y":772,"score":242,"level":0},{"x":1144,"y":772,"score":64,"level":0},{"x":1206,"y":772,"score":34,"level":0},{"x":1210,"y":772,"score":28,"level":0},{"x":1345,"y":772,"score":100,"level":0},{"x":1365,"y":772,"score":46,"level":0},{"x":1466,"y":772,"score":62,"level":0},{"x":414,"y":773,"score":59,"level":0},{"x":488,"y":773,"score":66,"level":0},{"x":517,"y":773,"score":46,"level":0},{"x":520,"y":773,"score":48,"level":0},{"x":576,"y":773,"score":55,"level":0},{"x":709,"y":773,"score":63,"level":0},{"x":711,"y":773,"score":81,"level":0},{"x":821,"y":773,"score":35,"level":0},{"x":857,"y":773,"score":85,"level":0},{"x":870,"y":773,"score":143,"level":0},{"x":899,"y":773,"score":150,"level":0},{"x":974,"y":773,"score":32,"level":0},{"x":1013,"y":773,"score":91,"level":0},{"x":1059,"y":773,"score":66,"level":0},{"x":1099,"y":773,"score":111,"level":0},{"x":1105,"y":773,"score":271,"level":0},{"x":1127,"y":773,"score":79,"level":0},{"x":1168,"y":773,"score":91,"level":0},{"x":1352,"y":773,"score":130,"level":0},{"x":1410,"y":773,"score":136,"level":0},{"x":1442,"y":773,"score":96,"level":0},{"x":1460,"y":773,"score":148,"level":0},{"x":1471,"y":773,"score":88,"level":0},{"x":1483,"y":773,"score":52,"level":0},{"x":539,"y":774,"score":52,"level":0},{"x":644,"y":774,"score":41,"level":0},{"x":674,"y":774,"score":40,"level":0},{"x":852,"y":774,"score":99,"level":0},{"x":888,"y":774,"score":147,"level":0},{"x":912,"y":774,"score":53,"level":0},{"x":928,"y":774,"score":36,"level":0},{"x":1112,"y":774,"score":161,"level":0},{"x":1120,"y":774,"score":194,"level":0},{"x":1125,"y":774,"score":36,"level":0},{"x":1133,"y":774,"score":227,"level":0},{"x":1139,"y":774,"score":177,"level":0},{"x":1161,"y":774,"score":102,"level":0},{"x":1175,"y":774,"score":64,"level":0},{"x":1314,"y":774,"score":168,"level":0},{"x":1416,"y":774,"score":139,"level":0},{"x":1422,"y":774,"score":205,"level":0},{"x":1429,"y":774,"score":69,"level":0},{"x":1435,"y":774,"score":57,"level":0},{"x":1473,"y":774,"score":85,"level":0},{"x":493,"y":775,"score":63,"level":0},{"x":588,"y":775,"score":98,"level":0},{"x":620,"y":775,"score":31,"level":0},{"x":715,"y":775,"score":59,"level":0},{"x":722,"y":775,"score":71,"level":0},{"x":778,"y":775,"score":46,"level":0},{"x":827,"y":775,"score":136,"level":0},{"x":870,"y":775,"score":112,"level":0},{"x":996,"y":775,"score":57,"level":0},{"x":1033,"y":775,"score":74,"level":0},{"x":1060,"y":775,"score":70,"level":0},{"x":1149,"y":775,"score":72,"level":0},{"x":1178,"y":775,"score":106,"level":0},{"x":1217,"y":775,"score":40,"level":0},{"x":1261,"y":775,"score":65,"level":0},{"x":1271,"y":775,"score":68,"level":0},{"x":1321,"y":775,"score":60,"level":0},{"x":1387,"y":775,"score":42,"level":0},{"x":404,"y":776,"score":56,"level":0},{"x":446,"y":776,"score":47,"level":0},{"x":516,"y":776,"score":36,"level":0},{"x":607,"y":776,"score":55,"level":0},{"x":742,"y":776,"score":32,"level":0},{"x":815,"y":776,"score":26,"level":0},{"x":838,"y":776,"score":142,"level":0},{"x":864,"y":776,"score":90,"level":0},{"x":875,"y":776,"score":41,"level":0},{"x":882,"y":776,"score":151,"level":0},{"x":899,"y":776,"score":70,"level":0},{"x":1074,"y":776,"score":58,"level":0},{"x":1155,"y":776,"score":39,"level":0},{"x":1228,"y":776,"score":76,"level":0},{"x":1234,"y":776,"score":29,"level":0},{"x":1248,"y":776,"score":247,"level":0},{"x":1362,"y":776,"score":34,"level":0},{"x":392,"y":777,"score":36,"level":0},{"x":441,"y":777,"score":41,"level":0},{"x":455,"y":777,"score":32,"level":0},{"x":522,"y":777,"score":126,"level":0},{"x":594,"y":777,"score":29,"level":0},{"x":693,"y":777,"score":27,"level":0},{"x":695,"y":777,"score":40,"level":0},{"x":749,"y":777,"score":26,"level":0},{"x":922,"y":777,"score":141,"level":0},{"x":1061,"y":777,"score":43,"level":0},{"x":1081,"y":777,"score":62,"level":0},{"x":1109,"y":777,"score":28,"level":0},{"x":1174,"y":777,"score":33,"level":0},{"x":1185,"y":777,"score":170,"level":0},{"x":1202,"y":777,"score":92,"level":0},{"x":1207,"y":777,"score":128,"level":0},{"x":1212,"y":777,"score":43,"level":0},{"x":1275,"y":777,"score":45,"level":0},{"x":1335,"y":777,"score":83,"level":0},{"x":1399,"y":777,"score":80,"level":0},{"x":505,"y":778,"score":29,"level":0},{"x":632,"y":778,"score":160,"level":0},{"x":652,"y":778,"score":102,"level":0},{"x":709,"y":778,"score":94,"level":0},{"x":781,"y":778,"score":46,"level":0},{"x":909,"y":778,"score":98,"level":0},{"x":1049,"y":778,"score":174,"level":0},{"x":1052,"y":778,"score":147,"level":0},{"x":1067,"y":778,"score":40,"level":0},{"x":1088,"y":778,"score":42,"level":0},{"x":1104,"y":778,"score":66,"level":0},{"x":1166,"y":778,"score":37,"level":0},{"x":1223,"y":778,"score":59,"level":0},{"x":1451,"y":778,"score":54,"level":0},{"x":1470,"y":778,"score":99,"level":0},{"x":1475,"y":778,"score":103,"level":0},{"x":475,"y":779,"score":43,"level":0},{"x":511,"y":779,"score":64,"level":0},{"x":516,"y":779,"score":29,"level":0},{"x":539,"y":779,"score":52,"level":0},{"x":547,"y":779,"score":69,"level":0},{"x":564,"y":779,"score":170,"level":0},{"x":616,"y":779,"score":53,"level":0},{"x":731,"y":779,"score":123,"level":0},{"x":736,"y":779,"score":130,"level":0},{"x":783,"y":779,"score":52,"level":0},{"x":831,"y":779,"score":195,"level":0},{"x":929,"y":779,"score":94,"level":0},{"x":957,"y":779,"score":43,"level":0},{"x":1016,"y":779,"score":33,"level":0},{"x":1081,"y":779,"score":65,"level":0},{"x":1144,"y":779,"score":178,"level":0},{"x":1199,"y":779,"score":61,"level":0},{"x":1372,"y":779,"score":79,"level":0},{"x":1421,"y":779,"score":126,"level":0},{"x":1437,"y":779,"score":115,"level":0},{"x":1484,"y":779,"score":90,"level":0},{"x":429,"y":780,"score":30,"level":0},{"x":439,"y":780,"score":111,"level":0},{"x":500,"y":780,"score":39,"level":0},{"x":874,"y":780,"score":64,"level":0},{"x":916,"y":780,"score":33,"level":0},{"x":948,"y":780,"score":41,"level":0},{"x":1059,"y":780,"score":112,"level":0},{"x":1071,"y":780,"score":45,"level":0},{"x":1112,"y":780,"score":33,"level":0},{"x":1120,"y":780,"score":234,"level":0},{"x":1125,"y":780,"score":168,"level":0},{"x":1161,"y":780,"score":51,"level":0},{"x":1268,"y":780,"score":183,"level":0},{"x":1274,"y":780,"score":201,"level":0},{"x":1291,"y":780,"score":30,"level":0},{"x":1309,"y":780,"score":44,"level":0},{"x":1317,"y":780,"score":117,"level":0},{"x":1472,"y":780,"score":31,"level":0},{"x":485,"y":781,"score":94,"level":0},{"x":538,"y":781,"score":99,"level":0},{"x":595,"y":781,"score":42,"level":0},{"x":742,"y":781,"score":89,"level":0},{"x":761,"y":781,"score":43,"level":0},{"x":858,"y":781,"score":106,"level":0},{"x":906,"y":781,"score":90,"level":0},{"x":913,"y":781,"score":37,"level":0},{"x":956,"y":781,"score":32,"level":0},{"x":1031,"y":781,"score":125,"level":0},{"x":1075,"y":781,"score":82,"level":0},{"x":1135,"y":781,"score":123,"level":0},{"x":1164,"y":781,"score":98,"level":0},{"x":1174,"y":781,"score":60,"level":0},{"x":1247,"y":781,"score":142,"level":0},{"x":1256,"y":781,"score":53,"level":0},{"x":1339,"y":781,"score":67,"level":0},{"x":1460,"y":781,"score":304,"level":0},{"x":445,"y":782,"score":54,"level":0},{"x":544,"y":782,"score":42,"level":0},{"x":582,"y":782,"score":117,"level":0},{"x":712,"y":782,"score":224,"level":0},{"x":789,"y":782,"score":112,"level":0},{"x":801,"y":782,"score":68,"level":0},{"x":834,"y":782,"score":164,"level":0},{"x":849,"y":782,"score":26,"level":0},{"x":855,"y":782,"score":80,"level":0},{"x":901,"y":782,"score":278,"level":0},{"x":1033,"y":782,"score":59,"level":0},{"x":1038,"y":782,"score":96,"level":0},{"x":1085,"y":782,"score":89,"level":0},{"x":1170,"y":782,"score":69,"level":0},{"x":1193,"y":782,"score":115,"level":0},{"x":1265,"y":782,"score":84,"level":0},{"x":1303,"y":782,"score":76,"level":0},{"x":1313,"y":782,"score":149,"level":0},{"x":1387,"y":782,"score":118,"level":0},{"x":1453,"y":782,"score":153,"level":0},{"x":1465,"y":782,"score":62,"level":0},{"x":506,"y":783,"score":66,"level":0},{"x":525,"y":783,"score":45,"level":0},{"x":588,"y":783,"score":60,"level":0},{"x":687,"y":783,"score":121,"level":0},{"x":707,"y":783,"score":30,"level":0},{"x":817,"y":783,"score":75,"level":0},{"x":921,"y":783,"score":86,"level":0},{"x":940,"y":783,"score":48,"level":0},{"x":967,"y":783,"score":86,"level":0},{"x":1068,"y":783,"score":39,"level":0},{"x":1074,"y":783,"score":49,"level":0},{"x":1110,"y":783,"score":75,"level":0},{"x":1186,"y":783,"score":27,"level":0},{"x":1220,"y":783,"score":101,"level":0},{"x":1238,"y":783,"score":82,"level":0},{"x":1283,"y":783,"score":65,"level":0},{"x":1472,"y":783,"score":84,"level":0},{"x":1477,"y":783,"score":91,"level":0},{"x":420,"y":784,"score":154,"level":0},{"x":486,"y":784,"score":87,"level":0},{"x":511,"y":784,"score":31,"level":0},{"x":565,"y":784,"score":28,"level":0},{"x":572,"y":784,"score":67,"level":0},{"x":610,"y":784,"score":31,"level":0},{"x":721,"y":784,"score":38,"level":0},{"x":837,"y":784,"score":43,"level":0},{"x":871,"y":784,"score":76,"level":0},{"x":878,"y":784,"score":151,"level":0},{"x":928,"y":784,"score":80,"level":0},{"x":958,"y":784,"score":35,"level":0},{"x":974,"y":784,"score":48,"level":0},{"x":980,"y":784,"score":49,"level":0},{"x":1002,"y":784,"score":90,"level":0},{"x":1044,"y":784,"score":187,"level":0},{"x":1051,"y":784,"score":186,"level":0},{"x":1056,"y":784,"score":230,"level":0},{"x":1107,"y":784,"score":63,"level":0},{"x":1209,"y":784,"score":199,"level":0},{"x":1252,"y":784,"score":82,"level":0},{"x":1300,"y":784,"score":71,"level":0},{"x":1310,"y":784,"score":166,"level":0},{"x":1328,"y":784,"score":60,"level":0},{"x":1362,"y":784,"score":26,"level":0},{"x":1397,"y":784,"score":59,"level":0},{"x":1406,"y":784,"score":26,"level":0},{"x":1426,"y":784,"score":169,"level":0},{"x":449,"y":785,"score":71,"level":0},{"x":648,"y":785,"score":108,"level":0},{"x":654,"y":785,"score":52,"level":0},{"x":659,"y":785,"score":43,"level":0},{"x":733,"y":785,"score":65,"level":0},{"x":800,"y":785,"score":27,"level":0},{"x":967,"y":785,"score":66,"level":0},{"x":989,"y":785,"score":130,"level":0},{"x":995,"y":785,"score":43,"level":0},{"x":1009,"y":785,"score":138,"level":0},{"x":1063,"y":785,"score":200,"level":0},{"x":1071,"y":785,"score":44,"level":0},{"x":1100,"y":785,"score":128,"level":0},{"x":1138,"y":785,"score":158,"level":0},{"x":1169,"y":785,"score":79,"level":0},{"x":1214,"y":785,"score":48,"level":0},{"x":1303,"y":785,"score":84,"level":0},{"x":1381,"y":785,"score":73,"level":0},{"x":1411,"y":785,"score":124,"level":0},{"x":1478,"y":785,"score":27,"level":0},{"x":1490,"y":785,"score":29,"level":0},{"x":405,"y":786,"score":82,"level":0},{"x":471,"y":786,"score":88,"level":0},{"x":615,"y":786,"score":36,"level":0},{"x":810,"y":786,"score":95,"level":0},{"x":844,"y":786,"score":43,"level":0},{"x":916,"y":786,"score":56,"level":0},{"x":1023,"y":786,"score":38,"level":0},{"x":1049,"y":786,"score":113,"level":0},{"x":1176,"y":786,"score":184,"level":0},{"x":1188,"y":786,"score":37,"level":0},{"x":1193,"y":786,"score":53,"level":0},{"x":1203,"y":786,"score":184,"level":0},{"x":1248,"y":786,"score":120,"level":0},{"x":1266,"y":786,"score":42,"level":0},{"x":1441,"y":786,"score":116,"level":0},{"x":1471,"y":786,"score":77,"level":0},{"x":495,"y":787,"score":85,"level":0},{"x":541,"y":787,"score":39,"level":0},{"x":562,"y":787,"score":49,"level":0},{"x":759,"y":787,"score":113,"level":0},{"x":767,"y":787,"score":42,"level":0},{"x":896,"y":787,"score":65,"level":0},{"x":907,"y":787,"score":152,"level":0},{"x":1084,"y":787,"score":74,"level":0},{"x":1089,"y":787,"score":76,"level":0},{"x":1095,"y":787,"score":129,"level":0},{"x":1134,"y":787,"score":119,"level":0},{"x":1161,"y":787,"score":167,"level":0},{"x":1213,"y":787,"score":86,"level":0},{"x":1230,"y":787,"score":78,"level":0},{"x":1292,"y":787,"score":36,"level":0},{"x":1311,"y":787,"score":93,"level":0},{"x":1317,"y":787,"score":69,"level":0},{"x":1334,"y":787,"score":66,"level":0},{"x":1375,"y":787,"score":155,"level":0},{"x":1390,"y":787,"score":140,"level":0},{"x":1400,"y":787,"score":96,"level":0},{"x":1418,"y":787,"score":112,"level":0},{"x":1447,"y":787,"score":218,"level":0},{"x":1459,"y":787,"score":186,"level":0},{"x":393,"y":788,"score":42,"level":0},{"x":395,"y":788,"score":40,"level":0},{"x":554,"y":788,"score":49,"level":0},{"x":614,"y":788,"score":28,"level":0},{"x":623,"y":788,"score":29,"level":0},{"x":714,"y":788,"score":207,"level":0},{"x":832,"y":788,"score":48,"level":0},{"x":924,"y":788,"score":37,"level":0},{"x":933,"y":788,"score":48,"level":0},{"x":1181,"y":788,"score":28,"level":0},{"x":1201,"y":788,"score":212,"level":0},{"x":1304,"y":788,"score":31,"level":0},{"x":1326,"y":788,"score":74,"level":0},{"x":1329,"y":788,"score":38,"level":0},{"x":1426,"y":788,"score":152,"level":0},{"x":1435,"y":788,"score":71,"level":0},{"x":1452,"y":788,"score":312,"level":0},{"x":1490,"y":788,"score":37,"level":0},{"x":377,"y":789,"score":29,"level":0},{"x":544,"y":789,"score":79,"level":0},{"x":566,"y":789,"score":84,"level":0},{"x":587,"y":789,"score":45,"level":0},{"x":773,"y":789,"score":33,"level":0},{"x":871,"y":789,"score":155,"level":0},{"x":878,"y":789,"score":43,"level":0},{"x":887,"y":789,"score":69,"level":0},{"x":956,"y":789,"score":29,"level":0},{"x":975,"y":789,"score":84,"level":0},{"x":981,"y":789,"score":55,"level":0},{"x":992,"y":789,"score":73,"level":0},{"x":1043,"y":789,"score":189,"level":0},{"x":1106,"y":789,"score":68,"level":0},{"x":1109,"y":789,"score":69,"level":0},{"x":1240,"y":789,"score":197,"level":0},{"x":1414,"y":789,"score":31,"level":0},{"x":383,"y":790,"score":45,"level":0},{"x":424,"y":790,"score":93,"level":0},{"x":465,"y":790,"score":67,"level":0},{"x":479,"y":790,"score":32,"level":0},{"x":522,"y":790,"score":123,"level":0},{"x":582,"y":790,"score":159,"level":0},{"x":595,"y":790,"score":53,"level":0},{"x":615,"y":790,"score":45,"level":0},{"x":795,"y":790,"score":81,"level":0},{"x":815,"y":790,"score":84,"level":0},{"x":1038,"y":790,"score":40,"level":0},{"x":1103,"y":790,"score":61,"level":0},{"x":1181,"y":790,"score":100,"level":0},{"x":1257,"y":790,"score":79,"level":0},{"x":1280,"y":790,"score":53,"level":0},{"x":1302,"y":790,"score":81,"level":0},{"x":1325,"y":790,"score":48,"level":0},{"x":1401,"y":790,"score":48,"level":0},{"x":1407,"y":790,"score":187,"level":0},{"x":1469,"y":790,"score":95,"level":0},{"x":471,"y":791,"score":50,"level":0},{"x":599,"y":791,"score":30,"level":0},{"x":631,"y":791,"score":49,"level":0},{"x":649,"y":791,"score":87,"level":0},{"x":657,"y":791,"score":54,"level":0},{"x":693,"y":791,"score":106,"level":0},{"x":809,"y":791,"score":48,"level":0},{"x":833,"y":791,"score":46,"level":0},{"x":914,"y":791,"score":212,"level":0},{"x":926,"y":791,"score":71,"level":0},{"x":952,"y":791,"score":35,"level":0},{"x":961,"y":791,"score":157,"level":0},{"x":967,"y":791,"score":119,"level":0},{"x":1054,"y":791,"score":68,"level":0},{"x":1061,"y":791,"score":50,"level":0},{"x":1106,"y":791,"score":134,"level":0},{"x":1109,"y":791,"score":97,"level":0},{"x":1193,"y":791,"score":112,"level":0},{"x":1209,"y":791,"score":131,"level":0},{"x":1309,"y":791,"score":45,"level":0},{"x":1314,"y":791,"score":79,"level":0},{"x":1333,"y":791,"score":196,"level":0},{"x":1380,"y":791,"score":64,"level":0},{"x":1432,"y":791,"score":41,"level":0},{"x":1442,"y":791,"score":53,"level":0},{"x":383,"y":792,"score":56,"level":0},{"x":413,"y":792,"score":78,"level":0},{"x":491,"y":792,"score":160,"level":0},{"x":498,"y":792,"score":80,"level":0},{"x":732,"y":792,"score":69,"level":0},{"x":741,"y":792,"score":135,"level":0},{"x":749,"y":792,"score":174,"level":0},{"x":829,"y":792,"score":27,"level":0},{"x":987,"y":792,"score":70,"level":0},{"x":998,"y":792,"score":129,"level":0},{"x":1215,"y":792,"score":116,"level":0},{"x":1229,"y":792,"score":76,"level":0},{"x":1293,"y":792,"score":144,"level":0},{"x":1339,"y":792,"score":285,"level":0},{"x":1345,"y":792,"score":39,"level":0},{"x":1350,"y":792,"score":62,"level":0},{"x":1376,"y":792,"score":35,"level":0},{"x":1408,"y":792,"score":81,"level":0},{"x":554,"y":793,"score":30,"level":0},{"x":572,"y":793,"score":94,"level":0},{"x":755,"y":793,"score":92,"level":0},{"x":768,"y":793,"score":26,"level":0},{"x":782,"y":793,"score":184,"level":0},{"x":939,"y":793,"score":40,"level":0},{"x":943,"y":793,"score":32,"level":0},{"x":984,"y":793,"score":49,"level":0},{"x":1012,"y":793,"score":32,"level":0},{"x":1063,"y":793,"score":71,"level":0},{"x":1068,"y":793,"score":73,"level":0},{"x":1085,"y":793,"score":74,"level":0},{"x":1114,"y":793,"score":33,"level":0},{"x":1134,"y":793,"score":57,"level":0},{"x":1140,"y":793,"score":58,"level":0},{"x":1147,"y":793,"score":30,"level":0},{"x":1164,"y":793,"score":170,"level":0},{"x":1188,"y":793,"score":75,"level":0},{"x":1273,"y":793,"score":36,"level":0},{"x":1361,"y":793,"score":26,"level":0},{"x":1418,"y":793,"score":52,"level":0},{"x":1439,"y":793,"score":60,"level":0},{"x":1447,"y":793,"score":100,"level":0},{"x":1452,"y":793,"score":243,"level":0},{"x":1459,"y":793,"score":189,"level":0},{"x":377,"y":794,"score":39,"level":0},{"x":418,"y":794,"score":34,"level":0},{"x":517,"y":794,"score":192,"level":0},{"x":523,"y":794,"score":66,"level":0},{"x":532,"y":794,"score":32,"level":0},{"x":558,"y":794,"score":58,"level":0},{"x":577,"y":794,"score":61,"level":0},{"x":699,"y":794,"score":50,"level":0},{"x":707,"y":794,"score":65,"level":0},{"x":718,"y":794,"score":95,"level":0},{"x":797,"y":794,"score":152,"level":0},{"x":804,"y":794,"score":93,"level":0},{"x":811,"y":794,"score":73,"level":0},{"x":861,"y":794,"score":38,"level":0},{"x":886,"y":794,"score":34,"level":0},{"x":937,"y":794,"score":73,"level":0},{"x":980,"y":794,"score":39,"level":0},{"x":987,"y":794,"score":35,"level":0},{"x":993,"y":794,"score":36,"level":0},{"x":1042,"y":794,"score":153,"level":0},{"x":1057,"y":794,"score":30,"level":0},{"x":1100,"y":794,"score":89,"level":0},{"x":1176,"y":794,"score":78,"level":0},{"x":1203,"y":794,"score":88,"level":0},{"x":1231,"y":794,"score":109,"level":0},{"x":1241,"y":794,"score":151,"level":0},{"x":1248,"y":794,"score":253,"level":0},{"x":1346,"y":794,"score":33,"level":0},{"x":1389,"y":794,"score":34,"level":0},{"x":1428,"y":794,"score":128,"level":0},{"x":1476,"y":794,"score":126,"level":0},{"x":1489,"y":794,"score":98,"level":0},{"x":403,"y":795,"score":110,"level":0},{"x":409,"y":795,"score":66,"level":0},{"x":439,"y":795,"score":50,"level":0},{"x":513,"y":795,"score":55,"level":0},{"x":625,"y":795,"score":114,"level":0},{"x":668,"y":795,"score":36,"level":0},{"x":1008,"y":795,"score":56,"level":0},{"x":1091,"y":795,"score":92,"level":0},{"x":1120,"y":795,"score":165,"level":0},{"x":1258,"y":795,"score":112,"level":0},{"x":1292,"y":795,"score":47,"level":0},{"x":1300,"y":795,"score":86,"level":0},{"x":1306,"y":795,"score":52,"level":0},{"x":1317,"y":795,"score":123,"level":0},{"x":1327,"y":795,"score":27,"level":0},{"x":1464,"y":795,"score":36,"level":0},{"x":423,"y":796,"score":78,"level":0},{"x":429,"y":796,"score":81,"level":0},{"x":468,"y":796,"score":30,"level":0},{"x":511,"y":796,"score":43,"level":0},{"x":577,"y":796,"score":81,"level":0},{"x":774,"y":796,"score":37,"level":0},{"x":788,"y":796,"score":93,"level":0},{"x":796,"y":796,"score":182,"level":0},{"x":1003,"y":796,"score":113,"level":0},{"x":1134,"y":796,"score":68,"level":0},{"x":1150,"y":796,"score":114,"level":0},{"x":1156,"y":796,"score":55,"level":0},{"x":1279,"y":796,"score":51,"level":0},{"x":1455,"y":796,"score":154,"level":0},{"x":377,"y":797,"score":52,"level":0},{"x":413,"y":797,"score":70,"level":0},{"x":598,"y":797,"score":85,"level":0},{"x":690,"y":797,"score":36,"level":0},{"x":811,"y":797,"score":47,"level":0},{"x":931,"y":797,"score":34,"level":0},{"x":951,"y":797,"score":191,"level":0},{"x":982,"y":797,"score":87,"level":0},{"x":1061,"y":797,"score":62,"level":0},{"x":1115,"y":797,"score":141,"level":0},{"x":1121,"y":797,"score":83,"level":0},{"x":1181,"y":797,"score":28,"level":0},{"x":1207,"y":797,"score":60,"level":0},{"x":1213,"y":797,"score":62,"level":0},{"x":1300,"y":797,"score":73,"level":0},{"x":1377,"y":797,"score":104,"level":0},{"x":1401,"y":797,"score":52,"level":0},{"x":1405,"y":797,"score":26,"level":0},{"x":1442,"y":797,"score":96,"level":0},{"x":427,"y":798,"score":27,"level":0},{"x":471,"y":798,"score":59,"level":0},{"x":521,"y":798,"score":47,"level":0},{"x":725,"y":798,"score":54,"level":0},{"x":733,"y":798,"score":70,"level":0},{"x":746,"y":798,"score":96,"level":0},{"x":759,"y":798,"score":52,"level":0},{"x":882,"y":798,"score":97,"level":0},{"x":923,"y":798,"score":122,"level":0},{"x":976,"y":798,"score":44,"level":0},{"x":990,"y":798,"score":38,"level":0},{"x":1136,"y":798,"score":77,"level":0},{"x":1161,"y":798,"score":54,"level":0},{"x":1173,"y":798,"score":46,"level":0},{"x":1318,"y":798,"score":82,"level":0},{"x":1418,"y":798,"score":77,"level":0},{"x":1430,"y":798,"score":54,"level":0},{"x":1477,"y":798,"score":33,"level":0},{"x":393,"y":799,"score":49,"level":0},{"x":453,"y":799,"score":96,"level":0},{"x":499,"y":799,"score":65,"level":0},{"x":518,"y":799,"score":33,"level":0},{"x":537,"y":799,"score":33,"level":0},{"x":565,"y":799,"score":91,"level":0},{"x":705,"y":799,"score":114,"level":0},{"x":748,"y":799,"score":146,"level":0},{"x":841,"y":799,"score":28,"level":0},{"x":895,"y":799,"score":166,"level":0},{"x":904,"y":799,"score":39,"level":0},{"x":916,"y":799,"score":198,"level":0},{"x":994,"y":799,"score":97,"level":0},{"x":1155,"y":799,"score":60,"level":0},{"x":1179,"y":799,"score":139,"level":0},{"x":1238,"y":799,"score":208,"level":0},{"x":1244,"y":799,"score":67,"level":0},{"x":1290,"y":799,"score":94,"level":0},{"x":1298,"y":799,"score":92,"level":0},{"x":1351,"y":799,"score":176,"level":0},{"x":1485,"y":799,"score":85,"level":0},{"x":386,"y":800,"score":59,"level":0},{"x":447,"y":800,"score":97,"level":0},{"x":460,"y":800,"score":134,"level":0},{"x":719,"y":800,"score":142,"level":0},{"x":741,"y":800,"score":120,"level":0},{"x":772,"y":800,"score":53,"level":0},{"x":863,"y":800,"score":99,"level":0},{"x":960,"y":800,"score":58,"level":0},{"x":1323,"y":800,"score":32,"level":0},{"x":1341,"y":800,"score":135,"level":0},{"x":1389,"y":800,"score":88,"level":0},{"x":1433,"y":800,"score":95,"level":0},{"x":424,"y":801,"score":29,"level":0},{"x":432,"y":801,"score":34,"level":0},{"x":510,"y":801,"score":60,"level":0},{"x":676,"y":801,"score":59,"level":0},{"x":778,"y":801,"score":109,"level":0},{"x":802,"y":801,"score":258,"level":0},{"x":808,"y":801,"score":152,"level":0},{"x":875,"y":801,"score":53,"level":0},{"x":934,"y":801,"score":30,"level":0},{"x":971,"y":801,"score":62,"level":0},{"x":1014,"y":801,"score":51,"level":0},{"x":1024,"y":801,"score":68,"level":0},{"x":1100,"y":801,"score":54,"level":0},{"x":1121,"y":801,"score":73,"level":0},{"x":1132,"y":801,"score":34,"level":0},{"x":1141,"y":801,"score":153,"level":0},{"x":1151,"y":801,"score":69,"level":0},{"x":1158,"y":801,"score":86,"level":0},{"x":1256,"y":801,"score":94,"level":0},{"x":1273,"y":801,"score":31,"level":0},{"x":1285,"y":801,"score":42,"level":0},{"x":1473,"y":801,"score":98,"level":0},{"x":408,"y":802,"score":44,"level":0},{"x":418,"y":802,"score":128,"level":0},{"x":602,"y":802,"score":50,"level":0},{"x":717,"y":802,"score":40,"level":0},{"x":720,"y":802,"score":61,"level":0},{"x":788,"y":802,"score":27,"level":0},{"x":835,"y":802,"score":72,"level":0},{"x":928,"y":802,"score":63,"level":0},{"x":949,"y":802,"score":137,"level":0},{"x":985,"y":802,"score":34,"level":0},{"x":990,"y":802,"score":44,"level":0},{"x":1021,"y":802,"score":34,"level":0},{"x":1077,"y":802,"score":37,"level":0},{"x":1115,"y":802,"score":38,"level":0},{"x":1171,"y":802,"score":122,"level":0},{"x":1201,"y":802,"score":59,"level":0},{"x":1218,"y":802,"score":164,"level":0},{"x":1229,"y":802,"score":133,"level":0},{"x":1235,"y":802,"score":269,"level":0},{"x":1364,"y":802,"score":240,"level":0},{"x":1409,"y":802,"score":44,"level":0},{"x":1448,"y":802,"score":75,"level":0},{"x":1467,"y":802,"score":160,"level":0},{"x":486,"y":803,"score":36,"level":0},{"x":558,"y":803,"score":88,"level":0},{"x":955,"y":803,"score":90,"level":0},{"x":1009,"y":803,"score":160,"level":0},{"x":1061,"y":803,"score":66,"level":0},{"x":1164,"y":803,"score":64,"level":0},{"x":1184,"y":803,"score":71,"level":0},{"x":1212,"y":803,"score":59,"level":0},{"x":1318,"y":803,"score":75,"level":0},{"x":1331,"y":803,"score":37,"level":0},{"x":1359,"y":803,"score":71,"level":0},{"x":1442,"y":803,"score":120,"level":0},{"x":377,"y":804,"score":41,"level":0},{"x":393,"y":804,"score":144,"level":0},{"x":454,"y":804,"score":28,"level":0},{"x":471,"y":804,"score":26,"level":0},{"x":492,"y":804,"score":129,"level":0},{"x":511,"y":804,"score":121,"level":0},{"x":519,"y":804,"score":84,"level":0},{"x":588,"y":804,"score":123,"level":0},{"x":609,"y":804,"score":35,"level":0},{"x":734,"y":804,"score":73,"level":0},{"x":852,"y":804,"score":177,"level":0},{"x":894,"y":804,"score":74,"level":0},{"x":919,"y":804,"score":43,"level":0},{"x":976,"y":804,"score":64,"level":0},{"x":1085,"y":804,"score":64,"level":0},{"x":1095,"y":804,"score":126,"level":0},{"x":1108,"y":804,"score":119,"level":0},{"x":1123,"y":804,"score":66,"level":0},{"x":1166,"y":804,"score":80,"level":0},{"x":1354,"y":804,"score":63,"level":0},{"x":1370,"y":804,"score":126,"level":0},{"x":1487,"y":804,"score":64,"level":0},{"x":401,"y":805,"score":108,"level":0},{"x":459,"y":805,"score":66,"level":0},{"x":628,"y":805,"score":27,"level":0},{"x":741,"y":805,"score":100,"level":0},{"x":784,"y":805,"score":144,"level":0},{"x":794,"y":805,"score":68,"level":0},{"x":818,"y":805,"score":69,"level":0},{"x":846,"y":805,"score":45,"level":0},{"x":867,"y":805,"score":96,"level":0},{"x":886,"y":805,"score":152,"level":0},{"x":966,"y":805,"score":68,"level":0},{"x":974,"y":805,"score":39,"level":0},{"x":1042,"y":805,"score":64,"level":0},{"x":1047,"y":805,"score":49,"level":0},{"x":1056,"y":805,"score":120,"level":0},{"x":1242,"y":805,"score":56,"level":0},{"x":1376,"y":805,"score":97,"level":0},{"x":1390,"y":805,"score":136,"level":0},{"x":1397,"y":805,"score":30,"level":0},{"x":1403,"y":805,"score":57,"level":0},{"x":1432,"y":805,"score":26,"level":0},{"x":1449,"y":805,"score":51,"level":0},{"x":1454,"y":805,"score":103,"level":0},{"x":1480,"y":805,"score":106,"level":0},{"x":1482,"y":805,"score":82,"level":0},{"x":595,"y":806,"score":113,"level":0},{"x":709,"y":806,"score":84,"level":0},{"x":803,"y":806,"score":64,"level":0},{"x":820,"y":806,"score":35,"level":0},{"x":910,"y":806,"score":28,"level":0},{"x":951,"y":806,"score":90,"level":0},{"x":960,"y":806,"score":57,"level":0},{"x":982,"y":806,"score":36,"level":0},{"x":1087,"y":806,"score":61,"level":0},{"x":1151,"y":806,"score":52,"level":0},{"x":1190,"y":806,"score":169,"level":0},{"x":1233,"y":806,"score":39,"level":0},{"x":1256,"y":806,"score":34,"level":0},{"x":1344,"y":806,"score":92,"level":0},{"x":1473,"y":806,"score":49,"level":0},{"x":383,"y":807,"score":148,"level":0},{"x":548,"y":807,"score":92,"level":0},{"x":688,"y":807,"score":102,"level":0},{"x":694,"y":807,"score":45,"level":0},{"x":705,"y":807,"score":85,"level":0},{"x":747,"y":807,"score":88,"level":0},{"x":833,"y":807,"score":53,"level":0},{"x":843,"y":807,"score":36,"level":0},{"x":925,"y":807,"score":44,"level":0},{"x":944,"y":807,"score":164,"level":0},{"x":1029,"y":807,"score":50,"level":0},{"x":1039,"y":807,"score":78,"level":0},{"x":1069,"y":807,"score":49,"level":0},{"x":1098,"y":807,"score":45,"level":0},{"x":1102,"y":807,"score":82,"level":0},{"x":1116,"y":807,"score":53,"level":0},{"x":1135,"y":807,"score":240,"level":0},{"x":1161,"y":807,"score":57,"level":0},{"x":1214,"y":807,"score":167,"level":0},{"x":1272,"y":807,"score":103,"level":0},{"x":1284,"y":807,"score":88,"level":0},{"x":1435,"y":807,"score":78,"level":0},{"x":418,"y":808,"score":86,"level":0},{"x":559,"y":808,"score":98,"level":0},{"x":602,"y":808,"score":82,"level":0},{"x":680,"y":808,"score":52,"level":0},{"x":835,"y":808,"score":45,"level":0},{"x":1005,"y":808,"score":89,"level":0},{"x":1021,"y":808,"score":88,"level":0},{"x":1163,"y":808,"score":49,"level":0},{"x":1201,"y":808,"score":274,"level":0},{"x":1292,"y":808,"score":42,"level":0},{"x":1298,"y":808,"score":190,"level":0},{"x":1317,"y":808,"score":114,"level":0},{"x":1384,"y":808,"score":218,"level":0},{"x":1440,"y":808,"score":38,"level":0},{"x":1457,"y":808,"score":122,"level":0},{"x":1484,"y":808,"score":26,"level":0},{"x":413,"y":809,"score":79,"level":0},{"x":450,"y":809,"score":38,"level":0},{"x":576,"y":809,"score":45,"level":0},{"x":616,"y":809,"score":50,"level":0},{"x":673,"y":809,"score":36,"level":0},{"x":777,"y":809,"score":99,"level":0},{"x":815,"y":809,"score":82,"level":0},{"x":905,"y":809,"score":91,"level":0},{"x":1000,"y":809,"score":55,"level":0},{"x":1052,"y":809,"score":125,"level":0},{"x":1072,"y":809,"score":121,"level":0},{"x":1084,"y":809,"score":34,"level":0},{"x":1206,"y":809,"score":98,"level":0},{"x":1309,"y":809,"score":119,"level":0},{"x":1468,"y":809,"score":181,"level":0},{"x":391,"y":810,"score":63,"level":0},{"x":393,"y":810,"score":54,"level":0},{"x":469,"y":810,"score":86,"level":0},{"x":741,"y":810,"score":51,"level":0},{"x":827,"y":810,"score":62,"level":0},{"x":876,"y":810,"score":126,"level":0},{"x":878,"y":810,"score":141,"level":0},{"x":957,"y":810,"score":65,"level":0},{"x":972,"y":810,"score":81,"level":0},{"x":996,"y":810,"score":55,"level":0},{"x":1011,"y":810,"score":63,"level":0},{"x":1035,"y":810,"score":46,"level":0},{"x":1142,"y":810,"score":131,"level":0},{"x":1156,"y":810,"score":103,"level":0},{"x":1237,"y":810,"score":249,"level":0},{"x":1293,"y":810,"score":27,"level":0},{"x":1390,"y":810,"score":231,"level":0},{"x":1398,"y":810,"score":63,"level":0},{"x":1443,"y":810,"score":56,"level":0},{"x":1457,"y":810,"score":130,"level":0},{"x":396,"y":811,"score":66,"level":0},{"x":478,"y":811,"score":36,"level":0},{"x":594,"y":811,"score":33,"level":0},{"x":768,"y":811,"score":82,"level":0},{"x":891,"y":811,"score":41,"level":0},{"x":988,"y":811,"score":54,"level":0},{"x":990,"y":811,"score":62,"level":0},{"x":1015,"y":811,"score":63,"level":0},{"x":1087,"y":811,"score":146,"level":0},{"x":1158,"y":811,"score":88,"level":0},{"x":1193,"y":811,"score":159,"level":0},{"x":1227,"y":811,"score":161,"level":0},{"x":1267,"y":811,"score":119,"level":0},{"x":1281,"y":811,"score":266,"level":0},{"x":1329,"y":811,"score":64,"level":0},{"x":1340,"y":811,"score":82,"level":0},{"x":1347,"y":811,"score":176,"level":0},{"x":1374,"y":811,"score":145,"level":0},{"x":1380,"y":811,"score":90,"level":0},{"x":1423,"y":811,"score":37,"level":0},{"x":420,"y":812,"score":45,"level":0},{"x":435,"y":812,"score":67,"level":0},{"x":523,"y":812,"score":66,"level":0},{"x":709,"y":812,"score":52,"level":0},{"x":725,"y":812,"score":44,"level":0},{"x":799,"y":812,"score":65,"level":0},{"x":805,"y":812,"score":58,"level":0},{"x":843,"y":812,"score":44,"level":0},{"x":849,"y":812,"score":43,"level":0},{"x":916,"y":812,"score":26,"level":0},{"x":930,"y":812,"score":108,"level":0},{"x":964,"y":812,"score":232,"level":0},{"x":971,"y":812,"score":96,"level":0},{"x":1010,"y":812,"score":44,"level":0},{"x":1062,"y":812,"score":26,"level":0},{"x":1092,"y":812,"score":90,"level":0},{"x":1214,"y":812,"score":124,"level":0},{"x":1232,"y":812,"score":147,"level":0},{"x":1370,"y":812,"score":198,"level":0},{"x":1405,"y":812,"score":31,"level":0},{"x":1430,"y":812,"score":87,"level":0},{"x":1454,"y":812,"score":111,"level":0},{"x":379,"y":813,"score":116,"level":0},{"x":381,"y":813,"score":60,"level":0},{"x":395,"y":813,"score":60,"level":0},{"x":404,"y":813,"score":43,"level":0},{"x":442,"y":813,"score":63,"level":0},{"x":482,"y":813,"score":79,"level":0},{"x":486,"y":813,"score":69,"level":0},{"x":551,"y":813,"score":169,"level":0},{"x":682,"y":813,"score":75,"level":0},{"x":695,"y":813,"score":44,"level":0},{"x":716,"y":813,"score":130,"level":0},{"x":760,"y":813,"score":105,"level":0},{"x":786,"y":813,"score":91,"level":0},{"x":837,"y":813,"score":189,"level":0},{"x":857,"y":813,"score":196,"level":0},{"x":863,"y":813,"score":103,"level":0},{"x":872,"y":813,"score":36,"level":0},{"x":899,"y":813,"score":53,"level":0},{"x":910,"y":813,"score":181,"level":0},{"x":958,"y":813,"score":34,"level":0},{"x":976,"y":813,"score":88,"level":0},{"x":1040,"y":813,"score":95,"level":0},{"x":1069,"y":813,"score":27,"level":0},{"x":1244,"y":813,"score":45,"level":0},{"x":1286,"y":813,"score":207,"level":0},{"x":1301,"y":813,"score":43,"level":0},{"x":1316,"y":813,"score":139,"level":0},{"x":1334,"y":813,"score":88,"level":0},{"x":1383,"y":813,"score":38,"level":0},{"x":1433,"y":813,"score":147,"level":0},{"x":429,"y":814,"score":152,"level":0},{"x":574,"y":814,"score":32,"level":0},{"x":585,"y":814,"score":55,"level":0},{"x":601,"y":814,"score":108,"level":0},{"x":735,"y":814,"score":40,"level":0},{"x":796,"y":814,"score":106,"level":0},{"x":895,"y":814,"score":48,"level":0},{"x":944,"y":814,"score":153,"level":0},{"x":992,"y":814,"score":43,"level":0},{"x":1020,"y":814,"score":80,"level":0},{"x":1046,"y":814,"score":31,"level":0},{"x":1115,"y":814,"score":40,"level":0},{"x":1174,"y":814,"score":196,"level":0},{"x":1182,"y":814,"score":214,"level":0},{"x":1361,"y":814,"score":58,"level":0},{"x":1396,"y":814,"score":98,"level":0},{"x":1406,"y":814,"score":98,"level":0},{"x":1452,"y":814,"score":80,"level":0},{"x":1461,"y":814,"score":74,"level":0},{"x":1469,"y":814,"score":29,"level":0},{"x":448,"y":815,"score":128,"level":0},{"x":479,"y":815,"score":126,"level":0},{"x":490,"y":815,"score":50,"level":0},{"x":539,"y":815,"score":65,"level":0},{"x":569,"y":815,"score":32,"level":0},{"x":580,"y":815,"score":61,"level":0},{"x":669,"y":815,"score":59,"level":0},{"x":691,"y":815,"score":86,"level":0},{"x":700,"y":815,"score":66,"level":0},{"x":705,"y":815,"score":34,"level":0},{"x":742,"y":815,"score":91,"level":0},{"x":810,"y":815,"score":33,"level":0},{"x":816,"y":815,"score":112,"level":0},{"x":875,"y":815,"score":58,"level":0},{"x":897,"y":815,"score":32,"level":0},{"x":903,"y":815,"score":76,"level":0},{"x":985,"y":815,"score":28,"level":0},{"x":995,"y":815,"score":62,"level":0},{"x":1001,"y":815,"score":67,"level":0},{"x":1029,"y":815,"score":88,"level":0},{"x":1035,"y":815,"score":67,"level":0},{"x":1146,"y":815,"score":52,"level":0},{"x":1278,"y":815,"score":249,"level":0},{"x":1298,"y":815,"score":55,"level":0},{"x":1418,"y":815,"score":61,"level":0},{"x":783,"y":816,"score":79,"level":0},{"x":788,"y":816,"score":156,"level":0},{"x":847,"y":816,"score":28,"level":0},{"x":891,"y":816,"score":32,"level":0},{"x":1007,"y":816,"score":60,"level":0},{"x":1090,"y":816,"score":56,"level":0},{"x":1239,"y":816,"score":30,"level":0},{"x":1252,"y":816,"score":53,"level":0},{"x":1263,"y":816,"score":96,"level":0},{"x":1318,"y":816,"score":64,"level":0},{"x":1327,"y":816,"score":235,"level":0},{"x":1390,"y":816,"score":112,"level":0},{"x":1446,"y":816,"score":91,"level":0},{"x":439,"y":817,"score":82,"level":0},{"x":456,"y":817,"score":78,"level":0},{"x":534,"y":817,"score":77,"level":0},{"x":640,"y":817,"score":33,"level":0},{"x":675,"y":817,"score":33,"level":0},{"x":751,"y":817,"score":102,"level":0},{"x":870,"y":817,"score":69,"level":0},{"x":886,"y":817,"score":82,"level":0},{"x":933,"y":817,"score":41,"level":0},{"x":1013,"y":817,"score":39,"level":0},{"x":1031,"y":817,"score":29,"level":0},{"x":1036,"y":817,"score":97,"level":0},{"x":1080,"y":817,"score":138,"level":0},{"x":1173,"y":817,"score":120,"level":0},{"x":1206,"y":817,"score":106,"level":0},{"x":1231,"y":817,"score":66,"level":0},{"x":1242,"y":817,"score":154,"level":0},{"x":1248,"y":817,"score":81,"level":0},{"x":1313,"y":817,"score":206,"level":0},{"x":381,"y":818,"score":116,"level":0},{"x":396,"y":818,"score":81,"level":0},{"x":406,"y":818,"score":31,"level":0},{"x":491,"y":818,"score":88,"level":0},{"x":785,"y":818,"score":28,"level":0},{"x":823,"y":818,"score":75,"level":0},{"x":863,"y":818,"score":35,"level":0},{"x":965,"y":818,"score":67,"level":0},{"x":1018,"y":818,"score":44,"level":0},{"x":1057,"y":818,"score":41,"level":0},{"x":1087,"y":818,"score":123,"level":0},{"x":1095,"y":818,"score":83,"level":0},{"x":1204,"y":818,"score":31,"level":0},{"x":1209,"y":818,"score":114,"level":0},{"x":1226,"y":818,"score":95,"level":0},{"x":1235,"y":818,"score":27,"level":0},{"x":1250,"y":818,"score":56,"level":0},{"x":1272,"y":818,"score":67,"level":0},{"x":390,"y":819,"score":91,"level":0},{"x":681,"y":819,"score":51,"level":0},{"x":716,"y":819,"score":36,"level":0},{"x":724,"y":819,"score":85,"level":0},{"x":844,"y":819,"score":40,"level":0},{"x":1040,"y":819,"score":60,"level":0},{"x":1052,"y":819,"score":69,"level":0},{"x":1108,"y":819,"score":213,"level":0},{"x":1255,"y":819,"score":43,"level":0},{"x":1262,"y":819,"score":100,"level":0},{"x":1308,"y":819,"score":153,"level":0},{"x":1319,"y":819,"score":53,"level":0},{"x":1452,"y":819,"score":47,"level":0},{"x":1467,"y":819,"score":34,"level":0},{"x":434,"y":820,"score":79,"level":0},{"x":496,"y":820,"score":86,"level":0},{"x":548,"y":820,"score":74,"level":0},{"x":563,"y":820,"score":134,"level":0},{"x":741,"y":820,"score":35,"level":0},{"x":816,"y":820,"score":128,"level":0},{"x":830,"y":820,"score":102,"level":0},{"x":904,"y":820,"score":115,"level":0},{"x":941,"y":820,"score":184,"level":0},{"x":977,"y":820,"score":47,"level":0},{"x":1003,"y":820,"score":104,"level":0},{"x":1009,"y":820,"score":163,"level":0},{"x":1064,"y":820,"score":30,"level":0},{"x":1177,"y":820,"score":26,"level":0},{"x":1182,"y":820,"score":135,"level":0},{"x":1220,"y":820,"score":240,"level":0},{"x":1226,"y":820,"score":133,"level":0},{"x":1282,"y":820,"score":41,"level":0},{"x":1334,"y":820,"score":28,"level":0},{"x":1398,"y":820,"score":117,"level":0},{"x":1406,"y":820,"score":213,"level":0},{"x":1429,"y":820,"score":83,"level":0},{"x":1433,"y":820,"score":97,"level":0},{"x":1441,"y":820,"score":102,"level":0},{"x":476,"y":821,"score":46,"level":0},{"x":525,"y":821,"score":111,"level":0},{"x":603,"y":821,"score":44,"level":0},{"x":659,"y":821,"score":62,"level":0},{"x":756,"y":821,"score":62,"level":0},{"x":835,"y":821,"score":37,"level":0},{"x":947,"y":821,"score":142,"level":0},{"x":997,"y":821,"score":30,"level":0},{"x":1098,"y":821,"score":72,"level":0},{"x":1103,"y":821,"score":90,"level":0},{"x":1158,"y":821,"score":27,"level":0},{"x":1160,"y":821,"score":38,"level":0},{"x":1208,"y":821,"score":38,"level":0},{"x":1237,"y":821,"score":92,"level":0},{"x":1267,"y":821,"score":138,"level":0},{"x":1295,"y":821,"score":172,"level":0},{"x":1323,"y":821,"score":172,"level":0},{"x":1391,"y":821,"score":83,"level":0},{"x":1416,"y":821,"score":74,"level":0},{"x":1453,"y":821,"score":126,"level":0},{"x":1485,"y":821,"score":182,"level":0},{"x":377,"y":822,"score":34,"level":0},{"x":399,"y":822,"score":35,"level":0},{"x":439,"y":822,"score":33,"level":0},{"x":498,"y":822,"score":99,"level":0},{"x":537,"y":822,"score":107,"level":0},{"x":589,"y":822,"score":64,"level":0},{"x":616,"y":822,"score":85,"level":0},{"x":676,"y":822,"score":50,"level":0},{"x":764,"y":822,"score":31,"level":0},{"x":768,"y":822,"score":47,"level":0},{"x":781,"y":822,"score":109,"level":0},{"x":790,"y":822,"score":89,"level":0},{"x":808,"y":822,"score":98,"level":0},{"x":815,"y":822,"score":108,"level":0},{"x":844,"y":822,"score":52,"level":0},{"x":972,"y":822,"score":131,"level":0},{"x":984,"y":822,"score":39,"level":0},{"x":994,"y":822,"score":38,"level":0},{"x":1008,"y":822,"score":50,"level":0},{"x":1022,"y":822,"score":33,"level":0},{"x":1028,"y":822,"score":130,"level":0},{"x":1068,"y":822,"score":54,"level":0},{"x":1090,"y":822,"score":92,"level":0},{"x":1142,"y":822,"score":91,"level":0},{"x":1168,"y":822,"score":86,"level":0},{"x":1230,"y":822,"score":128,"level":0},{"x":1242,"y":822,"score":36,"level":0},{"x":1247,"y":822,"score":141,"level":0},{"x":1253,"y":822,"score":39,"level":0},{"x":1329,"y":822,"score":49,"level":0},{"x":1361,"y":822,"score":30,"level":0},{"x":1448,"y":822,"score":61,"level":0},{"x":451,"y":823,"score":94,"level":0},{"x":459,"y":823,"score":44,"level":0},{"x":473,"y":823,"score":32,"level":0},{"x":701,"y":823,"score":76,"level":0},{"x":707,"y":823,"score":38,"level":0},{"x":722,"y":823,"score":128,"level":0},{"x":729,"y":823,"score":154,"level":0},{"x":744,"y":823,"score":54,"level":0},{"x":779,"y":823,"score":90,"level":0},{"x":840,"y":823,"score":41,"level":0},{"x":912,"y":823,"score":42,"level":0},{"x":1018,"y":823,"score":28,"level":0},{"x":1036,"y":823,"score":59,"level":0},{"x":1138,"y":823,"score":89,"level":0},{"x":1204,"y":823,"score":92,"level":0},{"x":1225,"y":823,"score":62,"level":0},{"x":1257,"y":823,"score":48,"level":0},{"x":1278,"y":823,"score":77,"level":0},{"x":1378,"y":823,"score":99,"level":0},{"x":1423,"y":823,"score":62,"level":0},{"x":1474,"y":823,"score":72,"level":0},{"x":427,"y":824,"score":27,"level":0},{"x":442,"y":824,"score":50,"level":0},{"x":471,"y":824,"score":30,"level":0},{"x":531,"y":824,"score":86,"level":0},{"x":568,"y":824,"score":135,"level":0},{"x":607,"y":824,"score":73,"level":0},{"x":647,"y":824,"score":81,"level":0},{"x":688,"y":824,"score":90,"level":0},{"x":775,"y":824,"score":93,"level":0},{"x":843,"y":824,"score":52,"level":0},{"x":858,"y":824,"score":64,"level":0},{"x":1055,"y":824,"score":106,"level":0},{"x":1072,"y":824,"score":32,"level":0},{"x":1089,"y":824,"score":138,"level":0},{"x":1110,"y":824,"score":30,"level":0},{"x":1116,"y":824,"score":108,"level":0},{"x":1250,"y":824,"score":29,"level":0},{"x":1255,"y":824,"score":32,"level":0},{"x":1295,"y":824,"score":154,"level":0},{"x":1312,"y":824,"score":330,"level":0},{"x":1319,"y":824,"score":35,"level":0},{"x":1376,"y":824,"score":61,"level":0},{"x":1389,"y":824,"score":48,"level":0},{"x":1402,"y":824,"score":41,"level":0},{"x":1417,"y":824,"score":88,"level":0},{"x":393,"y":825,"score":90,"level":0},{"x":507,"y":825,"score":72,"level":0},{"x":551,"y":825,"score":92,"level":0},{"x":655,"y":825,"score":67,"level":0},{"x":665,"y":825,"score":43,"level":0},{"x":699,"y":825,"score":92,"level":0},{"x":799,"y":825,"score":43,"level":0},{"x":824,"y":825,"score":92,"level":0},{"x":831,"y":825,"score":161,"level":0},{"x":920,"y":825,"score":34,"level":0},{"x":970,"y":825,"score":30,"level":0},{"x":1042,"y":825,"score":84,"level":0},{"x":1063,"y":825,"score":83,"level":0},{"x":1095,"y":825,"score":63,"level":0},{"x":1121,"y":825,"score":152,"level":0},{"x":1194,"y":825,"score":40,"level":0},{"x":1215,"y":825,"score":134,"level":0},{"x":1221,"y":825,"score":191,"level":0},{"x":1286,"y":825,"score":58,"level":0},{"x":1306,"y":825,"score":108,"level":0},{"x":1435,"y":825,"score":44,"level":0},{"x":476,"y":826,"score":41,"level":0},{"x":587,"y":826,"score":80,"level":0},{"x":592,"y":826,"score":147,"level":0},{"x":598,"y":826,"score":59,"level":0},{"x":622,"y":826,"score":49,"level":0},{"x":683,"y":826,"score":41,"level":0},{"x":708,"y":826,"score":96,"level":0},{"x":716,"y":826,"score":32,"level":0},{"x":841,"y":826,"score":39,"level":0},{"x":916,"y":826,"score":27,"level":0},{"x":965,"y":826,"score":164,"level":0},{"x":1099,"y":826,"score":67,"level":0},{"x":1150,"y":826,"score":172,"level":0},{"x":1230,"y":826,"score":60,"level":0},{"x":1329,"y":826,"score":94,"level":0},{"x":1331,"y":826,"score":41,"level":0},{"x":1427,"y":826,"score":66,"level":0},{"x":414,"y":827,"score":40,"level":0},{"x":493,"y":827,"score":72,"level":0},{"x":699,"y":827,"score":91,"level":0},{"x":714,"y":827,"score":58,"level":0},{"x":837,"y":827,"score":26,"level":0},{"x":890,"y":827,"score":59,"level":0},{"x":924,"y":827,"score":120,"level":0},{"x":993,"y":827,"score":48,"level":0},{"x":1027,"y":827,"score":77,"level":0},{"x":1084,"y":827,"score":88,"level":0},{"x":1107,"y":827,"score":46,"level":0},{"x":1158,"y":827,"score":62,"level":0},{"x":1163,"y":827,"score":222,"level":0},{"x":1184,"y":827,"score":69,"level":0},{"x":1225,"y":827,"score":111,"level":0},{"x":1243,"y":827,"score":30,"level":0},{"x":1255,"y":827,"score":88,"level":0},{"x":1368,"y":827,"score":70,"level":0},{"x":1448,"y":827,"score":129,"level":0},{"x":1482,"y":827,"score":130,"level":0},{"x":386,"y":828,"score":41,"level":0},{"x":452,"y":828,"score":93,"level":0},{"x":459,"y":828,"score":145,"level":0},{"x":507,"y":828,"score":64,"level":0},{"x":543,"y":828,"score":38,"level":0},{"x":626,"y":828,"score":38,"level":0},{"x":631,"y":828,"score":56,"level":0},{"x":723,"y":828,"score":40,"level":0},{"x":736,"y":828,"score":64,"level":0},{"x":744,"y":828,"score":152,"level":0},{"x":768,"y":828,"score":45,"level":0},{"x":779,"y":828,"score":51,"level":0},{"x":847,"y":828,"score":43,"level":0},{"x":871,"y":828,"score":62,"level":0},{"x":886,"y":828,"score":49,"level":0},{"x":973,"y":828,"score":107,"level":0},{"x":978,"y":828,"score":127,"level":0},{"x":986,"y":828,"score":30,"level":0},{"x":1002,"y":828,"score":186,"level":0},{"x":1029,"y":828,"score":63,"level":0},{"x":1100,"y":828,"score":46,"level":0},{"x":1129,"y":828,"score":30,"level":0},{"x":1237,"y":828,"score":65,"level":0},{"x":1323,"y":828,"score":153,"level":0},{"x":1423,"y":828,"score":83,"level":0},{"x":505,"y":829,"score":48,"level":0},{"x":515,"y":829,"score":94,"level":0},{"x":556,"y":829,"score":98,"level":0},{"x":558,"y":829,"score":86,"level":0},{"x":572,"y":829,"score":167,"level":0},{"x":703,"y":829,"score":75,"level":0},{"x":760,"y":829,"score":44,"level":0},{"x":796,"y":829,"score":56,"level":0},{"x":843,"y":829,"score":34,"level":0},{"x":906,"y":829,"score":41,"level":0},{"x":1015,"y":829,"score":170,"level":0},{"x":1106,"y":829,"score":65,"level":0},{"x":1141,"y":829,"score":47,"level":0},{"x":1179,"y":829,"score":29,"level":0},{"x":1185,"y":829,"score":115,"level":0},{"x":1282,"y":829,"score":53,"level":0},{"x":1292,"y":829,"score":40,"level":0},{"x":1311,"y":829,"score":43,"level":0},{"x":1376,"y":829,"score":199,"level":0},{"x":1455,"y":829,"score":34,"level":0},{"x":1466,"y":829,"score":138,"level":0},{"x":427,"y":830,"score":70,"level":0},{"x":512,"y":830,"score":80,"level":0},{"x":752,"y":830,"score":44,"level":0},{"x":816,"y":830,"score":64,"level":0},{"x":919,"y":830,"score":67,"level":0},{"x":940,"y":830,"score":52,"level":0},{"x":1076,"y":830,"score":36,"level":0},{"x":1191,"y":830,"score":27,"level":0},{"x":1203,"y":830,"score":139,"level":0},{"x":1246,"y":830,"score":44,"level":0},{"x":1303,"y":830,"score":145,"level":0},{"x":1385,"y":830,"score":44,"level":0},{"x":1402,"y":830,"score":354,"level":0},{"x":1408,"y":830,"score":196,"level":0},{"x":1417,"y":830,"score":90,"level":0},{"x":1472,"y":830,"score":37,"level":0},{"x":390,"y":831,"score":42,"level":0},{"x":418,"y":831,"score":98,"level":0},{"x":550,"y":831,"score":77,"level":0},{"x":582,"y":831,"score":54,"level":0},{"x":622,"y":831,"score":56,"level":0},{"x":832,"y":831,"score":71,"level":0},{"x":862,"y":831,"score":34,"level":0},{"x":930,"y":831,"score":264,"level":0},{"x":943,"y":831,"score":101,"level":0},{"x":952,"y":831,"score":71,"level":0},{"x":998,"y":831,"score":34,"level":0},{"x":1027,"y":831,"score":48,"level":0},{"x":1033,"y":831,"score":133,"level":0},{"x":1098,"y":831,"score":46,"level":0},{"x":1121,"y":831,"score":159,"level":0},{"x":1234,"y":831,"score":35,"level":0},{"x":1260,"y":831,"score":83,"level":0},{"x":1333,"y":831,"score":217,"level":0},{"x":1413,"y":831,"score":93,"level":0},{"x":1444,"y":831,"score":93,"level":0},{"x":1458,"y":831,"score":71,"level":0},{"x":377,"y":832,"score":70,"level":0},{"x":487,"y":832,"score":87,"level":0},{"x":545,"y":832,"score":30,"level":0},{"x":666,"y":832,"score":52,"level":0},{"x":714,"y":832,"score":78,"level":0},{"x":730,"y":832,"score":125,"level":0},{"x":761,"y":832,"score":30,"level":0},{"x":806,"y":832,"score":97,"level":0},{"x":838,"y":832,"score":142,"level":0},{"x":891,"y":832,"score":67,"level":0},{"x":900,"y":832,"score":86,"level":0},{"x":937,"y":832,"score":57,"level":0},{"x":1051,"y":832,"score":137,"level":0},{"x":1087,"y":832,"score":89,"level":0},{"x":1161,"y":832,"score":36,"level":0},{"x":1196,"y":832,"score":80,"level":0},{"x":1250,"y":832,"score":62,"level":0},{"x":1320,"y":832,"score":82,"level":0},{"x":1380,"y":832,"score":36,"level":0},{"x":1448,"y":832,"score":45,"level":0},{"x":1482,"y":832,"score":141,"level":0},{"x":1489,"y":832,"score":47,"level":0},{"x":386,"y":833,"score":50,"level":0},{"x":398,"y":833,"score":49,"level":0},{"x":497,"y":833,"score":132,"level":0},{"x":581,"y":833,"score":32,"level":0},{"x":613,"y":833,"score":57,"level":0},{"x":625,"y":833,"score":56,"level":0},{"x":632,"y":833,"score":61,"level":0},{"x":741,"y":833,"score":81,"level":0},{"x":751,"y":833,"score":34,"level":0},{"x":801,"y":833,"score":46,"level":0},{"x":949,"y":833,"score":38,"level":0},{"x":975,"y":833,"score":76,"level":0},{"x":1029,"y":833,"score":38,"level":0},{"x":1076,"y":833,"score":38,"level":0},{"x":1092,"y":833,"score":38,"level":0},{"x":1103,"y":833,"score":96,"level":0},{"x":1122,"y":833,"score":106,"level":0},{"x":1127,"y":833,"score":120,"level":0},{"x":1138,"y":833,"score":162,"level":0},{"x":1190,"y":833,"score":48,"level":0},{"x":1341,"y":833,"score":136,"level":0},{"x":1451,"y":833,"score":51,"level":0},{"x":425,"y":834,"score":59,"level":0},{"x":492,"y":834,"score":130,"level":0},{"x":506,"y":834,"score":30,"level":0},{"x":600,"y":834,"score":64,"level":0},{"x":665,"y":834,"score":51,"level":0},{"x":679,"y":834,"score":52,"level":0},{"x":696,"y":834,"score":128,"level":0},{"x":792,"y":834,"score":55,"level":0},{"x":883,"y":834,"score":97,"level":0},{"x":904,"y":834,"score":38,"level":0},{"x":1000,"y":834,"score":92,"level":0},{"x":1006,"y":834,"score":47,"level":0},{"x":1013,"y":834,"score":106,"level":0},{"x":1222,"y":834,"score":54,"level":0},{"x":1254,"y":834,"score":137,"level":0},{"x":1283,"y":834,"score":50,"level":0},{"x":1347,"y":834,"score":42,"level":0},{"x":404,"y":835,"score":47,"level":0},{"x":410,"y":835,"score":59,"level":0},{"x":579,"y":835,"score":41,"level":0},{"x":606,"y":835,"score":85,"level":0},{"x":713,"y":835,"score":86,"level":0},{"x":736,"y":835,"score":41,"level":0},{"x":783,"y":835,"score":108,"level":0},{"x":795,"y":835,"score":42,"level":0},{"x":818,"y":835,"score":47,"level":0},{"x":824,"y":835,"score":90,"level":0},{"x":857,"y":835,"score":165,"level":0},{"x":872,"y":835,"score":93,"level":0},{"x":919,"y":835,"score":121,"level":0},{"x":926,"y":835,"score":189,"level":0},{"x":984,"y":835,"score":31,"level":0},{"x":1045,"y":835,"score":124,"level":0},{"x":1059,"y":835,"score":99,"level":0},{"x":1140,"y":835,"score":66,"level":0},{"x":1199,"y":835,"score":77,"level":0},{"x":1204,"y":835,"score":63,"level":0},{"x":1243,"y":835,"score":107,"level":0},{"x":1271,"y":835,"score":57,"level":0},{"x":1288,"y":835,"score":26,"level":0},{"x":1303,"y":835,"score":29,"level":0},{"x":1374,"y":835,"score":123,"level":0},{"x":1389,"y":835,"score":88,"level":0},{"x":1408,"y":835,"score":93,"level":0},{"x":1477,"y":835,"score":72,"level":0},{"x":392,"y":836,"score":54,"level":0},{"x":523,"y":836,"score":168,"level":0},{"x":529,"y":836,"score":200,"level":0},{"x":551,"y":836,"score":55,"level":0},{"x":557,"y":836,"score":114,"level":0},{"x":686,"y":836,"score":35,"level":0},{"x":688,"y":836,"score":47,"level":0},{"x":790,"y":836,"score":30,"level":0},{"x":851,"y":836,"score":74,"level":0},{"x":1033,"y":836,"score":88,"level":0},{"x":1040,"y":836,"score":28,"level":0},{"x":1083,"y":836,"score":94,"level":0},{"x":1135,"y":836,"score":85,"level":0},{"x":1147,"y":836,"score":34,"level":0},{"x":1234,"y":836,"score":166,"level":0},{"x":1267,"y":836,"score":63,"level":0},{"x":1295,"y":836,"score":82,"level":0},{"x":1313,"y":836,"score":68,"level":0},{"x":1317,"y":836,"score":38,"level":0},{"x":1391,"y":836,"score":40,"level":0},{"x":1395,"y":836,"score":49,"level":0},{"x":1400,"y":836,"score":37,"level":0},{"x":673,"y":837,"score":142,"level":0},{"x":755,"y":837,"score":63,"level":0},{"x":830,"y":837,"score":108,"level":0},{"x":836,"y":837,"score":58,"level":0},{"x":863,"y":837,"score":174,"level":0},{"x":868,"y":837,"score":144,"level":0},{"x":879,"y":837,"score":181,"level":0},{"x":898,"y":837,"score":33,"level":0},{"x":959,"y":837,"score":36,"level":0},{"x":966,"y":837,"score":168,"level":0},{"x":999,"y":837,"score":50,"level":0},{"x":1054,"y":837,"score":50,"level":0},{"x":1099,"y":837,"score":64,"level":0},{"x":1214,"y":837,"score":26,"level":0},{"x":1282,"y":837,"score":39,"level":0},{"x":1304,"y":837,"score":26,"level":0},{"x":1415,"y":837,"score":155,"level":0},{"x":1420,"y":837,"score":118,"level":0},{"x":1457,"y":837,"score":124,"level":0},{"x":422,"y":838,"score":34,"level":0},{"x":534,"y":838,"score":34,"level":0},{"x":578,"y":838,"score":27,"level":0},{"x":721,"y":838,"score":34,"level":0},{"x":749,"y":838,"score":176,"level":0},{"x":1009,"y":838,"score":56,"level":0},{"x":1048,"y":838,"score":73,"level":0},{"x":1107,"y":838,"score":55,"level":0},{"x":1163,"y":838,"score":65,"level":0},{"x":1251,"y":838,"score":70,"level":0},{"x":1307,"y":838,"score":59,"level":0},{"x":1324,"y":838,"score":27,"level":0},{"x":1364,"y":838,"score":76,"level":0},{"x":1379,"y":838,"score":69,"level":0},{"x":1470,"y":838,"score":36,"level":0},{"x":1472,"y":838,"score":44,"level":0},{"x":432,"y":839,"score":35,"level":0},{"x":516,"y":839,"score":107,"level":0},{"x":583,"y":839,"score":61,"level":0},{"x":629,"y":839,"score":27,"level":0},{"x":632,"y":839,"score":63,"level":0},{"x":657,"y":839,"score":53,"level":0},{"x":771,"y":839,"score":85,"level":0},{"x":817,"y":839,"score":64,"level":0},{"x":824,"y":839,"score":26,"level":0},{"x":889,"y":839,"score":53,"level":0},{"x":969,"y":839,"score":120,"level":0},{"x":1025,"y":839,"score":192,"level":0},{"x":1038,"y":839,"score":70,"level":0},{"x":1119,"y":839,"score":179,"level":0},{"x":1219,"y":839,"score":142,"level":0},{"x":1224,"y":839,"score":91,"level":0},{"x":1273,"y":839,"score":74,"level":0},{"x":1341,"y":839,"score":35,"level":0},{"x":1349,"y":839,"score":63,"level":0},{"x":1398,"y":839,"score":72,"level":0},{"x":1413,"y":839,"score":90,"level":0},{"x":1488,"y":839,"score":42,"level":0},{"x":397,"y":840,"score":148,"level":0},{"x":408,"y":840,"score":31,"level":0},{"x":419,"y":840,"score":41,"level":0},{"x":428,"y":840,"score":44,"level":0},{"x":569,"y":840,"score":31,"level":0},{"x":718,"y":840,"score":42,"level":0},{"x":736,"y":840,"score":30,"level":0},{"x":761,"y":840,"score":29,"level":0},{"x":785,"y":840,"score":102,"level":0},{"x":800,"y":840,"score":105,"level":0},{"x":806,"y":840,"score":189,"level":0},{"x":932,"y":840,"score":70,"level":0},{"x":1009,"y":840,"score":157,"level":0},{"x":1016,"y":840,"score":41,"level":0},{"x":1061,"y":840,"score":70,"level":0},{"x":1136,"y":840,"score":52,"level":0},{"x":1169,"y":840,"score":164,"level":0},{"x":1200,"y":840,"score":82,"level":0},{"x":1229,"y":840,"score":208,"level":0},{"x":1446,"y":840,"score":98,"level":0},{"x":530,"y":841,"score":28,"level":0},{"x":623,"y":841,"score":28,"level":0},{"x":702,"y":841,"score":30,"level":0},{"x":711,"y":841,"score":196,"level":0},{"x":814,"y":841,"score":57,"level":0},{"x":906,"y":841,"score":98,"level":0},{"x":1045,"y":841,"score":34,"level":0},{"x":1121,"y":841,"score":132,"level":0},{"x":1147,"y":841,"score":110,"level":0},{"x":1243,"y":841,"score":143,"level":0},{"x":1401,"y":841,"score":102,"level":0},{"x":1429,"y":841,"score":96,"level":0},{"x":564,"y":842,"score":57,"level":0},{"x":615,"y":842,"score":34,"level":0},{"x":681,"y":842,"score":70,"level":0},{"x":700,"y":842,"score":30,"level":0},{"x":794,"y":842,"score":31,"level":0},{"x":884,"y":842,"score":60,"level":0},{"x":926,"y":842,"score":66,"level":0},{"x":975,"y":842,"score":58,"level":0},{"x":1005,"y":842,"score":93,"level":0},{"x":1032,"y":842,"score":105,"level":0},{"x":1055,"y":842,"score":41,"level":0},{"x":1061,"y":842,"score":40,"level":0},{"x":1100,"y":842,"score":35,"level":0},{"x":1128,"y":842,"score":82,"level":0},{"x":1138,"y":842,"score":91,"level":0},{"x":1172,"y":842,"score":120,"level":0},{"x":1186,"y":842,"score":50,"level":0},{"x":1237,"y":842,"score":307,"level":0},{"x":1333,"y":842,"score":73,"level":0},{"x":1403,"y":842,"score":157,"level":0},{"x":1414,"y":842,"score":41,"level":0},{"x":1440,"y":842,"score":54,"level":0},{"x":1477,"y":842,"score":32,"level":0},{"x":418,"y":843,"score":76,"level":0},{"x":466,"y":843,"score":27,"level":0},{"x":501,"y":843,"score":53,"level":0},{"x":524,"y":843,"score":167,"level":0},{"x":534,"y":843,"score":71,"level":0},{"x":557,"y":843,"score":55,"level":0},{"x":571,"y":843,"score":64,"level":0},{"x":672,"y":843,"score":47,"level":0},{"x":721,"y":843,"score":90,"level":0},{"x":743,"y":843,"score":51,"level":0},{"x":767,"y":843,"score":78,"level":0},{"x":949,"y":843,"score":101,"level":0},{"x":1047,"y":843,"score":50,"level":0},{"x":1103,"y":843,"score":30,"level":0},{"x":1191,"y":843,"score":115,"level":0},{"x":1196,"y":843,"score":50,"level":0},{"x":1270,"y":843,"score":81,"level":0},{"x":1287,"y":843,"score":217,"level":0},{"x":1317,"y":843,"score":168,"level":0},{"x":1350,"y":843,"score":30,"level":0},{"x":1355,"y":843,"score":47,"level":0},{"x":1379,"y":843,"score":241,"level":0},{"x":1396,"y":843,"score":80,"level":0},{"x":1412,"y":843,"score":112,"level":0},{"x":1420,"y":843,"score":122,"level":0},{"x":1429,"y":843,"score":135,"level":0},{"x":1438,"y":843,"score":33,"level":0},{"x":1483,"y":843,"score":70,"level":0},{"x":392,"y":844,"score":48,"level":0},{"x":510,"y":844,"score":149,"level":0},{"x":539,"y":844,"score":105,"level":0},{"x":652,"y":844,"score":44,"level":0},{"x":683,"y":844,"score":44,"level":0},{"x":806,"y":844,"score":70,"level":0},{"x":820,"y":844,"score":64,"level":0},{"x":825,"y":844,"score":101,"level":0},{"x":868,"y":844,"score":172,"level":0},{"x":878,"y":844,"score":80,"level":0},{"x":908,"y":844,"score":69,"level":0},{"x":915,"y":844,"score":85,"level":0},{"x":980,"y":844,"score":113,"level":0},{"x":1117,"y":844,"score":47,"level":0},{"x":1157,"y":844,"score":56,"level":0},{"x":1257,"y":844,"score":139,"level":0},{"x":1487,"y":844,"score":88,"level":0},{"x":455,"y":845,"score":33,"level":0},{"x":503,"y":845,"score":75,"level":0},{"x":750,"y":845,"score":47,"level":0},{"x":770,"y":845,"score":122,"level":0},{"x":785,"y":845,"score":125,"level":0},{"x":940,"y":845,"score":47,"level":0},{"x":999,"y":845,"score":271,"level":0},{"x":1035,"y":845,"score":60,"level":0},{"x":1161,"y":845,"score":82,"level":0},{"x":1305,"y":845,"score":47,"level":0},{"x":1327,"y":845,"score":184,"level":0},{"x":1467,"y":845,"score":36,"level":0},{"x":397,"y":846,"score":38,"level":0},{"x":415,"y":846,"score":29,"level":0},{"x":555,"y":846,"score":47,"level":0},{"x":597,"y":846,"score":98,"level":0},{"x":703,"y":846,"score":58,"level":0},{"x":711,"y":846,"score":27,"level":0},{"x":842,"y":846,"score":46,"level":0},{"x":858,"y":846,"score":110,"level":0},{"x":895,"y":846,"score":43,"level":0},{"x":915,"y":846,"score":125,"level":0},{"x":994,"y":846,"score":179,"level":0},{"x":1042,"y":846,"score":162,"level":0},{"x":1077,"y":846,"score":34,"level":0},{"x":1112,"y":846,"score":83,"level":0},{"x":1135,"y":846,"score":200,"level":0},{"x":1152,"y":846,"score":192,"level":0},{"x":1226,"y":846,"score":206,"level":0},{"x":1250,"y":846,"score":267,"level":0},{"x":1322,"y":846,"score":56,"level":0},{"x":1351,"y":846,"score":72,"level":0},{"x":1399,"y":846,"score":79,"level":0},{"x":1445,"y":846,"score":75,"level":0},{"x":388,"y":847,"score":42,"level":0},{"x":516,"y":847,"score":31,"level":0},{"x":612,"y":847,"score":67,"level":0},{"x":690,"y":847,"score":108,"level":0},{"x":762,"y":847,"score":141,"level":0},{"x":778,"y":847,"score":71,"level":0},{"x":793,"y":847,"score":43,"level":0},{"x":881,"y":847,"score":106,"level":0},{"x":934,"y":847,"score":46,"level":0},{"x":1019,"y":847,"score":27,"level":0},{"x":1028,"y":847,"score":41,"level":0},{"x":1169,"y":847,"score":130,"level":0},{"x":1189,"y":847,"score":135,"level":0},{"x":1220,"y":847,"score":153,"level":0},{"x":1296,"y":847,"score":48,"level":0},{"x":1316,"y":847,"score":38,"level":0},{"x":1340,"y":847,"score":100,"level":0},{"x":1412,"y":847,"score":51,"level":0},{"x":1415,"y":847,"score":31,"level":0},{"x":1453,"y":847,"score":34,"level":0},{"x":451,"y":848,"score":64,"level":0},{"x":524,"y":848,"score":126,"level":0},{"x":617,"y":848,"score":52,"level":0},{"x":637,"y":848,"score":56,"level":0},{"x":670,"y":848,"score":35,"level":0},{"x":675,"y":848,"score":30,"level":0},{"x":850,"y":848,"score":156,"level":0},{"x":921,"y":848,"score":47,"level":0},{"x":949,"y":848,"score":58,"level":0},{"x":968,"y":848,"score":30,"level":0},{"x":1062,"y":848,"score":109,"level":0},{"x":1074,"y":848,"score":58,"level":0},{"x":1141,"y":848,"score":117,"level":0},{"x":1234,"y":848,"score":33,"level":0},{"x":1275,"y":848,"score":169,"level":0},{"x":1287,"y":848,"score":86,"level":0},{"x":1357,"y":848,"score":140,"level":0},{"x":1366,"y":848,"score":69,"level":0},{"x":1378,"y":848,"score":160,"level":0},{"x":1394,"y":848,"score":33,"level":0},{"x":1463,"y":848,"score":65,"level":0},{"x":403,"y":849,"score":106,"level":0},{"x":534,"y":849,"score":78,"level":0},{"x":585,"y":849,"score":168,"level":0},{"x":604,"y":849,"score":76,"level":0},{"x":742,"y":849,"score":93,"level":0},{"x":755,"y":849,"score":228,"level":0},{"x":870,"y":849,"score":119,"level":0},{"x":876,"y":849,"score":162,"level":0},{"x":978,"y":849,"score":76,"level":0},{"x":1041,"y":849,"score":161,"level":0},{"x":1350,"y":849,"score":32,"level":0},{"x":1484,"y":849,"score":46,"level":0},{"x":394,"y":850,"score":35,"level":0},{"x":544,"y":850,"score":128,"level":0},{"x":549,"y":850,"score":109,"level":0},{"x":591,"y":850,"score":48,"level":0},{"x":615,"y":850,"score":54,"level":0},{"x":655,"y":850,"score":29,"level":0},{"x":683,"y":850,"score":138,"level":0},{"x":790,"y":850,"score":96,"level":0},{"x":961,"y":850,"score":68,"level":0},{"x":1145,"y":850,"score":47,"level":0},{"x":1164,"y":850,"score":27,"level":0},{"x":1194,"y":850,"score":55,"level":0},{"x":1258,"y":850,"score":45,"level":0},{"x":1307,"y":850,"score":48,"level":0},{"x":1471,"y":850,"score":100,"level":0},{"x":1489,"y":850,"score":55,"level":0},{"x":630,"y":851,"score":114,"level":0},{"x":649,"y":851,"score":85,"level":0},{"x":748,"y":851,"score":203,"level":0},{"x":783,"y":851,"score":62,"level":0},{"x":796,"y":851,"score":102,"level":0},{"x":890,"y":851,"score":27,"level":0},{"x":1012,"y":851,"score":136,"level":0},{"x":1134,"y":851,"score":102,"level":0},{"x":1152,"y":851,"score":132,"level":0},{"x":1217,"y":851,"score":53,"level":0},{"x":1328,"y":851,"score":177,"level":0},{"x":1346,"y":851,"score":75,"level":0},{"x":1373,"y":851,"score":54,"level":0},{"x":1446,"y":851,"score":36,"level":0},{"x":415,"y":852,"score":81,"level":0},{"x":421,"y":852,"score":115,"level":0},{"x":484,"y":852,"score":37,"level":0},{"x":555,"y":852,"score":64,"level":0},{"x":597,"y":852,"score":72,"level":0},{"x":612,"y":852,"score":168,"level":0},{"x":713,"y":852,"score":62,"level":0},{"x":761,"y":852,"score":82,"level":0},{"x":805,"y":852,"score":120,"level":0},{"x":833,"y":852,"score":65,"level":0},{"x":839,"y":852,"score":43,"level":0},{"x":930,"y":852,"score":41,"level":0},{"x":967,"y":852,"score":75,"level":0},{"x":994,"y":852,"score":248,"level":0},{"x":1062,"y":852,"score":71,"level":0},{"x":1117,"y":852,"score":211,"level":0},{"x":1200,"y":852,"score":87,"level":0},{"x":1245,"y":852,"score":152,"level":0},{"x":1278,"y":852,"score":227,"level":0},{"x":1356,"y":852,"score":154,"level":0},{"x":1412,"y":852,"score":142,"level":0},{"x":1467,"y":852,"score":37,"level":0},{"x":451,"y":853,"score":26,"level":0},{"x":475,"y":853,"score":87,"level":0},{"x":486,"y":853,"score":45,"level":0},{"x":606,"y":853,"score":148,"level":0},{"x":618,"y":853,"score":125,"level":0},{"x":636,"y":853,"score":151,"level":0},{"x":643,"y":853,"score":156,"level":0},{"x":692,"y":853,"score":27,"level":0},{"x":697,"y":853,"score":67,"level":0},{"x":772,"y":853,"score":100,"level":0},{"x":940,"y":853,"score":45,"level":0},{"x":1055,"y":853,"score":123,"level":0},{"x":1090,"y":853,"score":57,"level":0},{"x":1124,"y":853,"score":110,"level":0},{"x":1186,"y":853,"score":28,"level":0},{"x":1230,"y":853,"score":77,"level":0},{"x":1239,"y":853,"score":102,"level":0},{"x":1287,"y":853,"score":59,"level":0},{"x":1348,"y":853,"score":40,"level":0},{"x":1366,"y":853,"score":38,"level":0},{"x":1389,"y":853,"score":32,"level":0},{"x":1400,"y":853,"score":171,"level":0},{"x":1409,"y":853,"score":106,"level":0},{"x":1439,"y":853,"score":41,"level":0},{"x":1474,"y":853,"score":146,"level":0},{"x":1490,"y":853,"score":52,"level":0},{"x":437,"y":854,"score":88,"level":0},{"x":466,"y":854,"score":129,"level":0},{"x":488,"y":854,"score":62,"level":0},{"x":527,"y":854,"score":58,"level":0},{"x":537,"y":854,"score":35,"level":0},{"x":624,"y":854,"score":77,"level":0},{"x":858,"y":854,"score":40,"level":0},{"x":902,"y":854,"score":43,"level":0},{"x":921,"y":854,"score":187,"level":0},{"x":950,"y":854,"score":64,"level":0},{"x":967,"y":854,"score":50,"level":0},{"x":1006,"y":854,"score":29,"level":0},{"x":1034,"y":854,"score":32,"level":0},{"x":1040,"y":854,"score":145,"level":0},{"x":1297,"y":854,"score":61,"level":0},{"x":1329,"y":854,"score":205,"level":0},{"x":1480,"y":854,"score":102,"level":0},{"x":389,"y":855,"score":54,"level":0},{"x":425,"y":855,"score":48,"level":0},{"x":543,"y":855,"score":126,"level":0},{"x":585,"y":855,"score":71,"level":0},{"x":653,"y":855,"score":97,"level":0},{"x":669,"y":855,"score":33,"level":0},{"x":944,"y":855,"score":40,"level":0},{"x":973,"y":855,"score":78,"level":0},{"x":1016,"y":855,"score":39,"level":0},{"x":1078,"y":855,"score":48,"level":0},{"x":1139,"y":855,"score":161,"level":0},{"x":1247,"y":855,"score":73,"level":0},{"x":1250,"y":855,"score":82,"level":0},{"x":1282,"y":855,"score":200,"level":0},{"x":1304,"y":855,"score":44,"level":0},{"x":1342,"y":855,"score":211,"level":0},{"x":1348,"y":855,"score":26,"level":0},{"x":1373,"y":855,"score":116,"level":0},{"x":400,"y":856,"score":92,"level":0},{"x":472,"y":856,"score":61,"level":0},{"x":664,"y":856,"score":100,"level":0},{"x":768,"y":856,"score":30,"level":0},{"x":816,"y":856,"score":180,"level":0},{"x":872,"y":856,"score":81,"level":0},{"x":886,"y":856,"score":90,"level":0},{"x":894,"y":856,"score":115,"level":0},{"x":908,"y":856,"score":38,"level":0},{"x":933,"y":856,"score":61,"level":0},{"x":980,"y":856,"score":49,"level":0},{"x":1040,"y":856,"score":124,"level":0},{"x":1046,"y":856,"score":42,"level":0},{"x":1274,"y":856,"score":122,"level":0},{"x":1375,"y":856,"score":116,"level":0},{"x":1432,"y":856,"score":58,"level":0},{"x":1444,"y":856,"score":52,"level":0},{"x":420,"y":857,"score":37,"level":0},{"x":484,"y":857,"score":90,"level":0},{"x":499,"y":857,"score":61,"level":0},{"x":547,"y":857,"score":80,"level":0},{"x":677,"y":857,"score":44,"level":0},{"x":702,"y":857,"score":176,"level":0},{"x":723,"y":857,"score":112,"level":0},{"x":758,"y":857,"score":29,"level":0},{"x":781,"y":857,"score":95,"level":0},{"x":850,"y":857,"score":71,"level":0},{"x":940,"y":857,"score":84,"level":0},{"x":963,"y":857,"score":52,"level":0},{"x":988,"y":857,"score":38,"level":0},{"x":1012,"y":857,"score":101,"level":0},{"x":1061,"y":857,"score":164,"level":0},{"x":1189,"y":857,"score":78,"level":0},{"x":1195,"y":857,"score":140,"level":0},{"x":1379,"y":857,"score":39,"level":0},{"x":377,"y":858,"score":26,"level":0},{"x":403,"y":858,"score":56,"level":0},{"x":479,"y":858,"score":41,"level":0},{"x":533,"y":858,"score":47,"level":0},{"x":540,"y":858,"score":49,"level":0},{"x":578,"y":858,"score":71,"level":0},{"x":589,"y":858,"score":132,"level":0},{"x":617,"y":858,"score":196,"level":0},{"x":629,"y":858,"score":210,"level":0},{"x":642,"y":858,"score":67,"level":0},{"x":707,"y":858,"score":38,"level":0},{"x":867,"y":858,"score":61,"level":0},{"x":881,"y":858,"score":53,"level":0},{"x":938,"y":858,"score":68,"level":0},{"x":977,"y":858,"score":37,"level":0},{"x":996,"y":858,"score":76,"level":0},{"x":1051,"y":858,"score":222,"level":0},{"x":1206,"y":858,"score":32,"level":0},{"x":1230,"y":858,"score":198,"level":0},{"x":1235,"y":858,"score":33,"level":0},{"x":1257,"y":858,"score":250,"level":0},{"x":1369,"y":858,"score":169,"level":0},{"x":1382,"y":858,"score":91,"level":0},{"x":1460,"y":858,"score":134,"level":0},{"x":1469,"y":858,"score":28,"level":0},{"x":1475,"y":858,"score":161,"level":0},{"x":1490,"y":858,"score":56,"level":0},{"x":436,"y":859,"score":56,"level":0},{"x":521,"y":859,"score":51,"level":0},{"x":538,"y":859,"score":80,"level":0},{"x":599,"y":859,"score":142,"level":0},{"x":612,"y":859,"score":58,"level":0},{"x":623,"y":859,"score":68,"level":0},{"x":691,"y":859,"score":27,"level":0},{"x":922,"y":859,"score":62,"level":0},{"x":951,"y":859,"score":57,"level":0},{"x":966,"y":859,"score":34,"level":0},{"x":1211,"y":859,"score":119,"level":0},{"x":1218,"y":859,"score":127,"level":0},{"x":1262,"y":859,"score":44,"level":0},{"x":1327,"y":859,"score":80,"level":0},{"x":1335,"y":859,"score":90,"level":0},{"x":1455,"y":859,"score":41,"level":0},{"x":392,"y":860,"score":59,"level":0},{"x":492,"y":860,"score":31,"level":0},{"x":526,"y":860,"score":52,"level":0},{"x":585,"y":860,"score":81,"level":0},{"x":746,"y":860,"score":178,"level":0},{"x":947,"y":860,"score":64,"level":0},{"x":1005,"y":860,"score":46,"level":0},{"x":1098,"y":860,"score":40,"level":0},{"x":1242,"y":860,"score":94,"level":0},{"x":1279,"y":860,"score":71,"level":0},{"x":1389,"y":860,"score":84,"level":0},{"x":1481,"y":860,"score":82,"level":0},{"x":696,"y":861,"score":117,"level":0},{"x":718,"y":861,"score":87,"level":0},{"x":788,"y":861,"score":129,"level":0},{"x":811,"y":861,"score":88,"level":0},{"x":1132,"y":861,"score":191,"level":0},{"x":1239,"y":861,"score":135,"level":0},{"x":1273,"y":861,"score":225,"level":0},{"x":1293,"y":861,"score":34,"level":0},{"x":1300,"y":861,"score":143,"level":0},{"x":1307,"y":861,"score":40,"level":0},{"x":1334,"y":861,"score":54,"level":0},{"x":1366,"y":861,"score":78,"level":0},{"x":1407,"y":861,"score":26,"level":0},{"x":1432,"y":861,"score":75,"level":0},{"x":1438,"y":861,"score":94,"level":0},{"x":439,"y":862,"score":31,"level":0},{"x":446,"y":862,"score":47,"level":0},{"x":460,"y":862,"score":38,"level":0},{"x":546,"y":862,"score":81,"level":0},{"x":703,"y":862,"score":115,"level":0},{"x":709,"y":862,"score":60,"level":0},{"x":726,"y":862,"score":54,"level":0},{"x":778,"y":862,"score":27,"level":0},{"x":906,"y":862,"score":51,"level":0},{"x":960,"y":862,"score":35,"level":0},{"x":983,"y":862,"score":111,"level":0},{"x":1035,"y":862,"score":89,"level":0},{"x":1078,"y":862,"score":184,"level":0},{"x":1126,"y":862,"score":101,"level":0},{"x":1144,"y":862,"score":83,"level":0},{"x":1236,"y":862,"score":162,"level":0},{"x":1285,"y":862,"score":134,"level":0},{"x":1342,"y":862,"score":113,"level":0},{"x":1377,"y":862,"score":175,"level":0},{"x":377,"y":863,"score":106,"level":0},{"x":385,"y":863,"score":62,"level":0},{"x":577,"y":863,"score":80,"level":0},{"x":583,"y":863,"score":45,"level":0},{"x":762,"y":863,"score":68,"level":0},{"x":819,"y":863,"score":44,"level":0},{"x":849,"y":863,"score":29,"level":0},{"x":882,"y":863,"score":48,"level":0},{"x":899,"y":863,"score":91,"level":0},{"x":938,"y":863,"score":105,"level":0},{"x":948,"y":863,"score":28,"level":0},{"x":1017,"y":863,"score":89,"level":0},{"x":1149,"y":863,"score":91,"level":0},{"x":1200,"y":863,"score":66,"level":0},{"x":1369,"y":863,"score":93,"level":0},{"x":1403,"y":863,"score":33,"level":0},{"x":1413,"y":863,"score":37,"level":0},{"x":523,"y":864,"score":37,"level":0},{"x":555,"y":864,"score":58,"level":0},{"x":588,"y":864,"score":124,"level":0},{"x":630,"y":864,"score":32,"level":0},{"x":783,"y":864,"score":74,"level":0},{"x":852,"y":864,"score":48,"level":0},{"x":1195,"y":864,"score":50,"level":0},{"x":1237,"y":864,"score":134,"level":0},{"x":1262,"y":864,"score":29,"level":0},{"x":1328,"y":864,"score":207,"level":0},{"x":1335,"y":864,"score":65,"level":0},{"x":1394,"y":864,"score":36,"level":0},{"x":1464,"y":864,"score":55,"level":0},{"x":416,"y":865,"score":174,"level":0},{"x":537,"y":865,"score":39,"level":0},{"x":600,"y":865,"score":54,"level":0},{"x":654,"y":865,"score":158,"level":0},{"x":660,"y":865,"score":112,"level":0},{"x":835,"y":865,"score":190,"level":0},{"x":917,"y":865,"score":54,"level":0},{"x":945,"y":865,"score":93,"level":0},{"x":955,"y":865,"score":59,"level":0},{"x":977,"y":865,"score":59,"level":0},{"x":993,"y":865,"score":95,"level":0},{"x":1008,"y":865,"score":66,"level":0},{"x":1114,"y":865,"score":148,"level":0},{"x":1141,"y":865,"score":158,"level":0},{"x":1243,"y":865,"score":66,"level":0},{"x":1250,"y":865,"score":100,"level":0},{"x":1315,"y":865,"score":26,"level":0},{"x":1347,"y":865,"score":28,"level":0},{"x":1354,"y":865,"score":73,"level":0},{"x":1454,"y":865,"score":66,"level":0},{"x":1456,"y":865,"score":38,"level":0},{"x":1473,"y":865,"score":88,"level":0},{"x":1481,"y":865,"score":32,"level":0},{"x":512,"y":866,"score":33,"level":0},{"x":911,"y":866,"score":38,"level":0},{"x":1015,"y":866,"score":60,"level":0},{"x":1063,"y":866,"score":26,"level":0},{"x":1107,"y":866,"score":137,"level":0},{"x":1121,"y":866,"score":78,"level":0},{"x":1184,"y":866,"score":58,"level":0},{"x":1214,"y":866,"score":143,"level":0},{"x":1280,"y":866,"score":50,"level":0},{"x":1300,"y":866,"score":132,"level":0},{"x":1352,"y":866,"score":72,"level":0},{"x":1406,"y":866,"score":46,"level":0},{"x":1470,"y":866,"score":82,"level":0},{"x":1487,"y":866,"score":67,"level":0},{"x":463,"y":867,"score":107,"level":0},{"x":470,"y":867,"score":63,"level":0},{"x":526,"y":867,"score":63,"level":0},{"x":558,"y":867,"score":63,"level":0},{"x":594,"y":867,"score":55,"level":0},{"x":647,"y":867,"score":76,"level":0},{"x":689,"y":867,"score":33,"level":0},{"x":865,"y":867,"score":54,"level":0},{"x":889,"y":867,"score":36,"level":0},{"x":986,"y":867,"score":114,"level":0},{"x":1131,"y":867,"score":58,"level":0},{"x":1212,"y":867,"score":183,"level":0},{"x":1274,"y":867,"score":49,"level":0},{"x":1286,"y":867,"score":146,"level":0},{"x":1313,"y":867,"score":32,"level":0},{"x":1319,"y":867,"score":58,"level":0},{"x":1371,"y":867,"score":48,"level":0},{"x":1431,"y":867,"score":54,"level":0},{"x":445,"y":868,"score":53,"level":0},{"x":455,"y":868,"score":61,"level":0},{"x":481,"y":868,"score":31,"level":0},{"x":536,"y":868,"score":58,"level":0},{"x":547,"y":868,"score":273,"level":0},{"x":583,"y":868,"score":176,"level":0},{"x":598,"y":868,"score":48,"level":0},{"x":696,"y":868,"score":42,"level":0},{"x":858,"y":868,"score":68,"level":0},{"x":873,"y":868,"score":48,"level":0},{"x":906,"y":868,"score":106,"level":0},{"x":1231,"y":868,"score":76,"level":0},{"x":1377,"y":868,"score":102,"level":0},{"x":1448,"y":868,"score":26,"level":0},{"x":377,"y":869,"score":176,"level":0},{"x":384,"y":869,"score":35,"level":0},{"x":430,"y":869,"score":26,"level":0},{"x":453,"y":869,"score":82,"level":0},{"x":616,"y":869,"score":128,"level":0},{"x":630,"y":869,"score":80,"level":0},{"x":804,"y":869,"score":30,"level":0},{"x":853,"y":869,"score":56,"level":0},{"x":1033,"y":869,"score":96,"level":0},{"x":1153,"y":869,"score":38,"level":0},{"x":1175,"y":869,"score":27,"level":0},{"x":1221,"y":869,"score":130,"level":0},{"x":1339,"y":869,"score":34,"level":0},{"x":1433,"y":869,"score":56,"level":0},{"x":1490,"y":869,"score":57,"level":0},{"x":416,"y":870,"score":106,"level":0},{"x":442,"y":870,"score":40,"level":0},{"x":459,"y":870,"score":72,"level":0},{"x":507,"y":870,"score":70,"level":0},{"x":555,"y":870,"score":234,"level":0},{"x":561,"y":870,"score":73,"level":0},{"x":589,"y":870,"score":58,"level":0},{"x":610,"y":870,"score":100,"level":0},{"x":713,"y":870,"score":32,"level":0},{"x":788,"y":870,"score":150,"level":0},{"x":877,"y":870,"score":37,"level":0},{"x":992,"y":870,"score":86,"level":0},{"x":997,"y":870,"score":127,"level":0},{"x":1008,"y":870,"score":48,"level":0},{"x":1013,"y":870,"score":82,"level":0},{"x":1149,"y":870,"score":27,"level":0},{"x":1178,"y":870,"score":30,"level":0},{"x":1260,"y":870,"score":94,"level":0},{"x":1309,"y":870,"score":96,"level":0},{"x":1343,"y":870,"score":72,"level":0},{"x":1353,"y":870,"score":117,"level":0},{"x":1408,"y":870,"score":42,"level":0},{"x":1439,"y":870,"score":60,"level":0},{"x":493,"y":871,"score":49,"level":0},{"x":509,"y":871,"score":96,"level":0},{"x":542,"y":871,"score":32,"level":0},{"x":647,"y":871,"score":34,"level":0},{"x":669,"y":871,"score":134,"level":0},{"x":675,"y":871,"score":90,"level":0},{"x":882,"y":871,"score":46,"level":0},{"x":945,"y":871,"score":105,"level":0},{"x":954,"y":871,"score":157,"level":0},{"x":961,"y":871,"score":46,"level":0},{"x":1114,"y":871,"score":196,"level":0},{"x":1202,"y":871,"score":77,"level":0},{"x":1253,"y":871,"score":35,"level":0},{"x":1276,"y":871,"score":94,"level":0},{"x":1359,"y":871,"score":144,"level":0},{"x":1370,"y":871,"score":47,"level":0},{"x":1461,"y":871,"score":67,"level":0},{"x":438,"y":872,"score":60,"level":0},{"x":550,"y":872,"score":90,"level":0},{"x":600,"y":872,"score":37,"level":0},{"x":771,"y":872,"score":27,"level":0},{"x":794,"y":872,"score":56,"level":0},{"x":866,"y":872,"score":53,"level":0},{"x":918,"y":872,"score":88,"level":0},{"x":925,"y":872,"score":80,"level":0},{"x":987,"y":872,"score":37,"level":0},{"x":1000,"y":872,"score":61,"level":0},{"x":1108,"y":872,"score":254,"level":0},{"x":1208,"y":872,"score":201,"level":0},{"x":1274,"y":872,"score":125,"level":0},{"x":1394,"y":872,"score":73,"level":0},{"x":1423,"y":872,"score":51,"level":0},{"x":455,"y":873,"score":58,"level":0},{"x":469,"y":873,"score":31,"level":0},{"x":530,"y":873,"score":44,"level":0},{"x":690,"y":873,"score":56,"level":0},{"x":707,"y":873,"score":28,"level":0},{"x":718,"y":873,"score":52,"level":0},{"x":827,"y":873,"score":84,"level":0},{"x":872,"y":873,"score":90,"level":0},{"x":1085,"y":873,"score":43,"level":0},{"x":1177,"y":873,"score":41,"level":0},{"x":1280,"y":873,"score":125,"level":0},{"x":1293,"y":873,"score":69,"level":0},{"x":1398,"y":873,"score":45,"level":0},{"x":1436,"y":873,"score":42,"level":0},{"x":1450,"y":873,"score":88,"level":0},{"x":582,"y":874,"score":65,"level":0},{"x":1043,"y":874,"score":28,"level":0},{"x":1079,"y":874,"score":93,"level":0},{"x":1123,"y":874,"score":143,"level":0},{"x":1151,"y":874,"score":73,"level":0},{"x":1180,"y":874,"score":54,"level":0},{"x":1252,"y":874,"score":64,"level":0},{"x":1268,"y":874,"score":208,"level":0},{"x":1285,"y":874,"score":38,"level":0},{"x":1323,"y":874,"score":72,"level":0},{"x":1457,"y":874,"score":71,"level":0},{"x":1490,"y":874,"score":30,"level":0},{"x":394,"y":875,"score":30,"level":0},{"x":442,"y":875,"score":27,"level":0},{"x":515,"y":875,"score":50,"level":0},{"x":555,"y":875,"score":54,"level":0},{"x":605,"y":875,"score":85,"level":0},{"x":714,"y":875,"score":40,"level":0},{"x":778,"y":875,"score":46,"level":0},{"x":856,"y":875,"score":72,"level":0},{"x":1007,"y":875,"score":85,"level":0},{"x":1015,"y":875,"score":96,"level":0},{"x":1148,"y":875,"score":26,"level":0},{"x":1226,"y":875,"score":60,"level":0},{"x":1259,"y":875,"score":204,"level":0},{"x":1309,"y":875,"score":130,"level":0},{"x":1337,"y":875,"score":99,"level":0},{"x":1363,"y":875,"score":51,"level":0},{"x":1436,"y":875,"score":104,"level":0},{"x":501,"y":876,"score":70,"level":0},{"x":507,"y":876,"score":75,"level":0},{"x":658,"y":876,"score":93,"level":0},{"x":860,"y":876,"score":60,"level":0},{"x":876,"y":876,"score":173,"level":0},{"x":922,"y":876,"score":68,"level":0},{"x":934,"y":876,"score":125,"level":0},{"x":945,"y":876,"score":48,"level":0},{"x":1021,"y":876,"score":29,"level":0},{"x":1102,"y":876,"score":34,"level":0},{"x":1365,"y":876,"score":42,"level":0},{"x":1414,"y":876,"score":29,"level":0},{"x":1447,"y":876,"score":126,"level":0},{"x":1463,"y":876,"score":83,"level":0},{"x":378,"y":877,"score":97,"level":0},{"x":403,"y":877,"score":138,"level":0},{"x":427,"y":877,"score":59,"level":0},{"x":437,"y":877,"score":118,"level":0},{"x":464,"y":877,"score":49,"level":0},{"x":483,"y":877,"score":72,"level":0},{"x":530,"y":877,"score":38,"level":0},{"x":541,"y":877,"score":49,"level":0},{"x":560,"y":877,"score":146,"level":0},{"x":565,"y":877,"score":175,"level":0},{"x":618,"y":877,"score":42,"level":0},{"x":725,"y":877,"score":50,"level":0},{"x":805,"y":877,"score":51,"level":0},{"x":900,"y":877,"score":164,"level":0},{"x":929,"y":877,"score":136,"level":0},{"x":995,"y":877,"score":67,"level":0},{"x":1073,"y":877,"score":97,"level":0},{"x":1114,"y":877,"score":164,"level":0},{"x":1136,"y":877,"score":84,"level":0},{"x":1159,"y":877,"score":41,"level":0},{"x":1164,"y":877,"score":51,"level":0},{"x":1222,"y":877,"score":80,"level":0},{"x":1387,"y":877,"score":55,"level":0},{"x":1423,"y":877,"score":61,"level":0},{"x":1432,"y":877,"score":34,"level":0},{"x":409,"y":878,"score":95,"level":0},{"x":412,"y":878,"score":89,"level":0},{"x":447,"y":878,"score":30,"level":0},{"x":571,"y":878,"score":68,"level":0},{"x":597,"y":878,"score":34,"level":0},{"x":628,"y":878,"score":154,"level":0},{"x":635,"y":878,"score":89,"level":0},{"x":821,"y":878,"score":242,"level":0},{"x":868,"y":878,"score":45,"level":0},{"x":961,"y":878,"score":101,"level":0},{"x":1170,"y":878,"score":39,"level":0},{"x":1176,"y":878,"score":60,"level":0},{"x":1204,"y":878,"score":40,"level":0},{"x":1271,"y":878,"score":110,"level":0},{"x":1282,"y":878,"score":148,"level":0},{"x":1293,"y":878,"score":42,"level":0},{"x":511,"y":879,"score":84,"level":0},{"x":622,"y":879,"score":33,"level":0},{"x":640,"y":879,"score":172,"level":0},{"x":646,"y":879,"score":86,"level":0},{"x":653,"y":879,"score":66,"level":0},{"x":688,"y":879,"score":30,"level":0},{"x":742,"y":879,"score":75,"level":0},{"x":786,"y":879,"score":28,"level":0},{"x":851,"y":879,"score":63,"level":0},{"x":980,"y":879,"score":64,"level":0},{"x":1118,"y":879,"score":29,"level":0},{"x":1200,"y":879,"score":27,"level":0},{"x":1219,"y":879,"score":53,"level":0},{"x":1247,"y":879,"score":88,"level":0},{"x":1253,"y":879,"score":66,"level":0},{"x":1296,"y":879,"score":101,"level":0},{"x":1367,"y":879,"score":81,"level":0},{"x":1467,"y":879,"score":34,"level":0},{"x":395,"y":880,"score":138,"level":0},{"x":401,"y":880,"score":78,"level":0},{"x":656,"y":880,"score":55,"level":0},{"x":666,"y":880,"score":63,"level":0},{"x":677,"y":880,"score":55,"level":0},{"x":932,"y":880,"score":49,"level":0},{"x":984,"y":880,"score":38,"level":0},{"x":989,"y":880,"score":87,"level":0},{"x":1002,"y":880,"score":84,"level":0},{"x":1007,"y":880,"score":83,"level":0},{"x":1015,"y":880,"score":76,"level":0},{"x":1150,"y":880,"score":33,"level":0},{"x":1155,"y":880,"score":171,"level":0},{"x":1187,"y":880,"score":181,"level":0},{"x":1304,"y":880,"score":102,"level":0},{"x":1310,"y":880,"score":113,"level":0},{"x":1355,"y":880,"score":85,"level":0},{"x":1362,"y":880,"score":29,"level":0},{"x":1428,"y":880,"score":68,"level":0},{"x":496,"y":881,"score":39,"level":0},{"x":715,"y":881,"score":38,"level":0},{"x":763,"y":881,"score":32,"level":0},{"x":789,"y":881,"score":47,"level":0},{"x":799,"y":881,"score":104,"level":0},{"x":878,"y":881,"score":98,"level":0},{"x":920,"y":881,"score":54,"level":0},{"x":966,"y":881,"score":52,"level":0},{"x":1034,"y":881,"score":29,"level":0},{"x":1126,"y":881,"score":60,"level":0},{"x":1140,"y":881,"score":49,"level":0},{"x":1167,"y":881,"score":32,"level":0},{"x":1209,"y":881,"score":78,"level":0},{"x":1266,"y":881,"score":46,"level":0},{"x":1437,"y":881,"score":44,"level":0},{"x":1454,"y":881,"score":119,"level":0},{"x":382,"y":882,"score":130,"level":0},{"x":405,"y":882,"score":59,"level":0},{"x":415,"y":882,"score":101,"level":0},{"x":441,"y":882,"score":152,"level":0},{"x":453,"y":882,"score":59,"level":0},{"x":474,"y":882,"score":104,"level":0},{"x":521,"y":882,"score":28,"level":0},{"x":526,"y":882,"score":45,"level":0},{"x":578,"y":882,"score":68,"level":0},{"x":691,"y":882,"score":45,"level":0},{"x":726,"y":882,"score":42,"level":0},{"x":838,"y":882,"score":38,"level":0},{"x":903,"y":882,"score":130,"level":0},{"x":1051,"y":882,"score":26,"level":0},{"x":1081,"y":882,"score":55,"level":0},{"x":1087,"y":882,"score":128,"level":0},{"x":1108,"y":882,"score":57,"level":0},{"x":1192,"y":882,"score":124,"level":0},{"x":1224,"y":882,"score":190,"level":0},{"x":1260,"y":882,"score":33,"level":0},{"x":1444,"y":882,"score":255,"level":0},{"x":1474,"y":882,"score":113,"level":0},{"x":409,"y":883,"score":88,"level":0},{"x":435,"y":883,"score":146,"level":0},{"x":461,"y":883,"score":36,"level":0},{"x":485,"y":883,"score":29,"level":0},{"x":538,"y":883,"score":65,"level":0},{"x":560,"y":883,"score":42,"level":0},{"x":674,"y":883,"score":35,"level":0},{"x":679,"y":883,"score":58,"level":0},{"x":893,"y":883,"score":110,"level":0},{"x":931,"y":883,"score":33,"level":0},{"x":937,"y":883,"score":48,"level":0},{"x":1092,"y":883,"score":115,"level":0},{"x":1132,"y":883,"score":79,"level":0},{"x":1207,"y":883,"score":54,"level":0},{"x":1234,"y":883,"score":106,"level":0},{"x":1246,"y":883,"score":74,"level":0},{"x":1354,"y":883,"score":57,"level":0},{"x":1485,"y":883,"score":60,"level":0},{"x":488,"y":884,"score":47,"level":0},{"x":502,"y":884,"score":46,"level":0},{"x":508,"y":884,"score":47,"level":0},{"x":572,"y":884,"score":31,"level":0},{"x":604,"y":884,"score":30,"level":0},{"x":625,"y":884,"score":42,"level":0},{"x":661,"y":884,"score":97,"level":0},{"x":987,"y":884,"score":33,"level":0},{"x":1021,"y":884,"score":29,"level":0},{"x":1068,"y":884,"score":30,"level":0},{"x":1146,"y":884,"score":118,"level":0},{"x":1213,"y":884,"score":57,"level":0},{"x":1281,"y":884,"score":88,"level":0},{"x":1334,"y":884,"score":30,"level":0},{"x":1366,"y":884,"score":57,"level":0},{"x":554,"y":885,"score":120,"level":0},{"x":566,"y":885,"score":67,"level":0},{"x":621,"y":885,"score":31,"level":0},{"x":792,"y":885,"score":73,"level":0},{"x":887,"y":885,"score":134,"level":0},{"x":893,"y":885,"score":86,"level":0},{"x":996,"y":885,"score":225,"level":0},{"x":1156,"y":885,"score":109,"level":0},{"x":1206,"y":885,"score":60,"level":0},{"x":1360,"y":885,"score":30,"level":0},{"x":1417,"y":885,"score":27,"level":0},{"x":1449,"y":885,"score":103,"level":0},{"x":483,"y":886,"score":26,"level":0},{"x":513,"y":886,"score":51,"level":0},{"x":598,"y":886,"score":44,"level":0},{"x":669,"y":886,"score":96,"level":0},{"x":983,"y":886,"score":56,"level":0},{"x":1129,"y":886,"score":34,"level":0},{"x":1140,"y":886,"score":67,"level":0},{"x":1187,"y":886,"score":284,"level":0},{"x":1253,"y":886,"score":56,"level":0},{"x":1312,"y":886,"score":145,"level":0},{"x":1447,"y":886,"score":67,"level":0},{"x":1457,"y":886,"score":28,"level":0},{"x":1465,"y":886,"score":36,"level":0},{"x":1472,"y":886,"score":78,"level":0},{"x":391,"y":887,"score":77,"level":0},{"x":424,"y":887,"score":70,"level":0},{"x":496,"y":887,"score":72,"level":0},{"x":631,"y":887,"score":31,"level":0},{"x":660,"y":887,"score":31,"level":0},{"x":710,"y":887,"score":31,"level":0},{"x":798,"y":887,"score":68,"level":0},{"x":910,"y":887,"score":28,"level":0},{"x":965,"y":887,"score":41,"level":0},{"x":1194,"y":887,"score":110,"level":0},{"x":1290,"y":887,"score":28,"level":0},{"x":1427,"y":887,"score":54,"level":0},{"x":1445,"y":887,"score":39,"level":0},{"x":470,"y":888,"score":26,"level":0},{"x":521,"y":888,"score":59,"level":0},{"x":582,"y":888,"score":46,"level":0},{"x":634,"y":888,"score":27,"level":0},{"x":679,"y":888,"score":89,"level":0},{"x":735,"y":888,"score":31,"level":0},{"x":893,"y":888,"score":105,"level":0},{"x":931,"y":888,"score":27,"level":0},{"x":971,"y":888,"score":32,"level":0},{"x":1031,"y":888,"score":91,"level":0},{"x":1136,"y":888,"score":91,"level":0},{"x":1250,"y":888,"score":41,"level":0},{"x":1300,"y":888,"score":140,"level":0},{"x":1345,"y":888,"score":55,"level":0},{"x":1385,"y":888,"score":30,"level":0},{"x":1432,"y":888,"score":27,"level":0},{"x":1462,"y":888,"score":26,"level":0},{"x":418,"y":889,"score":81,"level":0},{"x":433,"y":889,"score":153,"level":0},{"x":453,"y":889,"score":92,"level":0},{"x":527,"y":889,"score":38,"level":0},{"x":578,"y":889,"score":45,"level":0},{"x":625,"y":889,"score":56,"level":0},{"x":654,"y":889,"score":94,"level":0},{"x":663,"y":889,"score":84,"level":0},{"x":818,"y":889,"score":27,"level":0},{"x":913,"y":889,"score":27,"level":0},{"x":989,"y":889,"score":124,"level":0},{"x":993,"y":889,"score":75,"level":0},{"x":1024,"y":889,"score":112,"level":0},{"x":1062,"y":889,"score":89,"level":0},{"x":1109,"y":889,"score":46,"level":0},{"x":1208,"y":889,"score":32,"level":0},{"x":1246,"y":889,"score":132,"level":0},{"x":1263,"y":889,"score":65,"level":0},{"x":1278,"y":889,"score":99,"level":0},{"x":1285,"y":889,"score":79,"level":0},{"x":416,"y":890,"score":83,"level":0},{"x":447,"y":890,"score":30,"level":0},{"x":507,"y":890,"score":47,"level":0},{"x":523,"y":890,"score":99,"level":0},{"x":561,"y":890,"score":42,"level":0},{"x":648,"y":890,"score":88,"level":0},{"x":750,"y":890,"score":36,"level":0},{"x":888,"y":890,"score":147,"level":0},{"x":894,"y":890,"score":102,"level":0},{"x":971,"y":890,"score":36,"level":0},{"x":1086,"y":890,"score":53,"level":0},{"x":1227,"y":890,"score":54,"level":0},{"x":1330,"y":890,"score":32,"level":0},{"x":1343,"y":890,"score":26,"level":0},{"x":427,"y":891,"score":50,"level":0},{"x":483,"y":891,"score":46,"level":0},{"x":513,"y":891,"score":29,"level":0},{"x":517,"y":891,"score":47,"level":0},{"x":567,"y":891,"score":76,"level":0},{"x":574,"y":891,"score":31,"level":0},{"x":598,"y":891,"score":42,"level":0},{"x":621,"y":891,"score":57,"level":0},{"x":641,"y":891,"score":116,"level":0},{"x":674,"y":891,"score":30,"level":0},{"x":724,"y":891,"score":29,"level":0},{"x":802,"y":891,"score":31,"level":0},{"x":993,"y":891,"score":33,"level":0},{"x":1090,"y":891,"score":64,"level":0},{"x":1255,"y":891,"score":47,"level":0},{"x":1356,"y":891,"score":66,"level":0},{"x":1373,"y":891,"score":38,"level":0},{"x":1457,"y":891,"score":57,"level":0},{"x":1488,"y":891,"score":32,"level":0},{"x":659,"y":892,"score":27,"level":0},{"x":668,"y":892,"score":246,"level":0},{"x":726,"y":892,"score":56,"level":0},{"x":732,"y":892,"score":60,"level":0},{"x":764,"y":892,"score":42,"level":0},{"x":874,"y":892,"score":42,"level":0},{"x":916,"y":892,"score":88,"level":0},{"x":935,"y":892,"score":64,"level":0},{"x":953,"y":892,"score":51,"level":0},{"x":1011,"y":892,"score":153,"level":0},{"x":1056,"y":892,"score":140,"level":0},{"x":1094,"y":892,"score":36,"level":0},{"x":1102,"y":892,"score":53,"level":0},{"x":1111,"y":892,"score":90,"level":0},{"x":1147,"y":892,"score":76,"level":0},{"x":1218,"y":892,"score":52,"level":0},{"x":1302,"y":892,"score":258,"level":0},{"x":1397,"y":892,"score":28,"level":0},{"x":1479,"y":892,"score":41,"level":0},{"x":451,"y":893,"score":72,"level":0},{"x":742,"y":893,"score":46,"level":0},{"x":947,"y":893,"score":88,"level":0},{"x":973,"y":893,"score":35,"level":0},{"x":1129,"y":893,"score":35,"level":0},{"x":1295,"y":893,"score":45,"level":0},{"x":1314,"y":893,"score":58,"level":0},{"x":1330,"y":893,"score":54,"level":0},{"x":1364,"y":893,"score":47,"level":0},{"x":1445,"y":893,"score":42,"level":0},{"x":1463,"y":893,"score":26,"level":0},{"x":425,"y":894,"score":41,"level":0},{"x":462,"y":894,"score":71,"level":0},{"x":572,"y":894,"score":106,"level":0},{"x":578,"y":894,"score":53,"level":0},{"x":683,"y":894,"score":52,"level":0},{"x":690,"y":894,"score":34,"level":0},{"x":811,"y":894,"score":44,"level":0},{"x":882,"y":894,"score":152,"level":0},{"x":944,"y":894,"score":32,"level":0},{"x":965,"y":894,"score":85,"level":0},{"x":989,"y":894,"score":96,"level":0},{"x":1023,"y":894,"score":63,"level":0},{"x":1043,"y":894,"score":116,"level":0},{"x":1060,"y":894,"score":55,"level":0},{"x":1075,"y":894,"score":62,"level":0},{"x":1078,"y":894,"score":50,"level":0},{"x":1140,"y":894,"score":85,"level":0},{"x":1147,"y":894,"score":64,"level":0},{"x":1278,"y":894,"score":97,"level":0},{"x":1283,"y":894,"score":97,"level":0},{"x":1336,"y":894,"score":63,"level":0},{"x":1341,"y":894,"score":53,"level":0},{"x":1434,"y":894,"score":49,"level":0},{"x":1476,"y":894,"score":40,"level":0},{"x":412,"y":895,"score":40,"level":0},{"x":532,"y":895,"score":28,"level":0},{"x":548,"y":895,"score":31,"level":0},{"x":654,"y":895,"score":83,"level":0},{"x":660,"y":895,"score":38,"level":0},{"x":899,"y":895,"score":53,"level":0},{"x":923,"y":895,"score":49,"level":0},{"x":932,"y":895,"score":86,"level":0},{"x":1120,"y":895,"score":67,"level":0},{"x":1161,"y":895,"score":114,"level":0},{"x":1187,"y":895,"score":114,"level":0},{"x":1199,"y":895,"score":61,"level":0},{"x":1211,"y":895,"score":104,"level":0},{"x":1216,"y":895,"score":41,"level":0},{"x":1221,"y":895,"score":43,"level":0},{"x":1236,"y":895,"score":141,"level":0},{"x":1346,"y":895,"score":50,"level":0},{"x":1382,"y":895,"score":32,"level":0},{"x":1412,"y":895,"score":60,"level":0},{"x":438,"y":896,"score":71,"level":0},{"x":445,"y":896,"score":264,"level":0},{"x":560,"y":896,"score":238,"level":0},{"x":600,"y":896,"score":44,"level":0},{"x":734,"y":896,"score":58,"level":0},{"x":774,"y":896,"score":74,"level":0},{"x":1048,"y":896,"score":59,"level":0},{"x":1090,"y":896,"score":26,"level":0},{"x":1193,"y":896,"score":73,"level":0},{"x":1249,"y":896,"score":135,"level":0},{"x":1349,"y":896,"score":29,"level":0},{"x":1426,"y":896,"score":116,"level":0},{"x":1467,"y":896,"score":102,"level":0},{"x":465,"y":897,"score":41,"level":0},{"x":636,"y":897,"score":68,"level":0},{"x":794,"y":897,"score":36,"level":0},{"x":993,"y":897,"score":66,"level":0},{"x":1003,"y":897,"score":54,"level":0},{"x":1138,"y":897,"score":68,"level":0},{"x":1214,"y":897,"score":75,"level":0},{"x":1323,"y":897,"score":36,"level":0},{"x":459,"y":898,"score":88,"level":0},{"x":723,"y":898,"score":30,"level":0},{"x":831,"y":898,"score":95,"level":0},{"x":918,"y":898,"score":29,"level":0},{"x":953,"y":898,"score":31,"level":0},{"x":1034,"y":898,"score":29,"level":0},{"x":1067,"y":898,"score":36,"level":0},{"x":1086,"y":898,"score":64,"level":0},{"x":1096,"y":898,"score":90,"level":0},{"x":1127,"y":898,"score":151,"level":0},{"x":1150,"y":898,"score":76,"level":0},{"x":1290,"y":898,"score":156,"level":0},{"x":1301,"y":898,"score":65,"level":0},{"x":1363,"y":898,"score":31,"level":0},{"x":1430,"y":898,"score":77,"level":0},{"x":426,"y":899,"score":45,"level":0},{"x":553,"y":899,"score":75,"level":0},{"x":591,"y":899,"score":154,"level":0},{"x":668,"y":899,"score":40,"level":0},{"x":858,"y":899,"score":81,"level":0},{"x":979,"y":899,"score":194,"level":0},{"x":1008,"y":899,"score":54,"level":0},{"x":1031,"y":899,"score":62,"level":0},{"x":1099,"y":899,"score":69,"level":0},{"x":1121,"y":899,"score":95,"level":0},{"x":1148,"y":899,"score":79,"level":0},{"x":1264,"y":899,"score":42,"level":0},{"x":1276,"y":899,"score":51,"level":0},{"x":1377,"y":899,"score":29,"level":0},{"x":1416,"y":899,"score":30,"level":0},{"x":417,"y":900,"score":91,"level":0},{"x":641,"y":900,"score":113,"level":0},{"x":732,"y":900,"score":34,"level":0},{"x":820,"y":900,"score":140,"level":0},{"x":837,"y":900,"score":30,"level":0},{"x":993,"y":900,"score":72,"level":0},{"x":1041,"y":900,"score":152,"level":0},{"x":1136,"y":900,"score":35,"level":0},{"x":1144,"y":900,"score":30,"level":0},{"x":1208,"y":900,"score":272,"level":0},{"x":1224,"y":900,"score":175,"level":0},{"x":1229,"y":900,"score":112,"level":0},{"x":1244,"y":900,"score":179,"level":0},{"x":1250,"y":900,"score":37,"level":0},{"x":1336,"y":900,"score":29,"level":0},{"x":1407,"y":900,"score":89,"level":0},{"x":432,"y":901,"score":69,"level":0},{"x":452,"y":901,"score":74,"level":0},{"x":481,"y":901,"score":52,"level":0},{"x":631,"y":901,"score":30,"level":0},{"x":648,"y":901,"score":35,"level":0},{"x":661,"y":901,"score":55,"level":0},{"x":673,"y":901,"score":52,"level":0},{"x":713,"y":901,"score":78,"level":0},{"x":826,"y":901,"score":70,"level":0},{"x":846,"y":901,"score":108,"level":0},{"x":967,"y":901,"score":61,"level":0},{"x":1053,"y":901,"score":126,"level":0},{"x":1092,"y":901,"score":47,"level":0},{"x":1173,"y":901,"score":207,"level":0},{"x":1256,"y":901,"score":45,"level":0},{"x":1258,"y":901,"score":28,"level":0},{"x":1304,"y":901,"score":130,"level":0},{"x":1331,"y":901,"score":55,"level":0},{"x":1468,"y":901,"score":30,"level":0},{"x":1490,"y":901,"score":87,"level":0},{"x":655,"y":902,"score":151,"level":0},{"x":782,"y":902,"score":66,"level":0},{"x":816,"y":902,"score":103,"level":0},{"x":985,"y":902,"score":32,"level":0},{"x":1115,"y":902,"score":92,"level":0},{"x":1133,"y":902,"score":44,"level":0},{"x":1313,"y":902,"score":70,"level":0},{"x":1425,"y":902,"score":63,"level":0},{"x":1431,"y":902,"score":26,"level":0},{"x":1457,"y":902,"score":70,"level":0},{"x":447,"y":903,"score":76,"level":0},{"x":546,"y":903,"score":38,"level":0},{"x":679,"y":903,"score":175,"level":0},{"x":736,"y":903,"score":98,"level":0},{"x":762,"y":903,"score":66,"level":0},{"x":842,"y":903,"score":62,"level":0},{"x":866,"y":903,"score":147,"level":0},{"x":892,"y":903,"score":33,"level":0},{"x":918,"y":903,"score":26,"level":0},{"x":997,"y":903,"score":88,"level":0},{"x":1021,"y":903,"score":39,"level":0},{"x":1122,"y":903,"score":35,"level":0},{"x":1183,"y":903,"score":60,"level":0},{"x":1252,"y":903,"score":45,"level":0},{"x":1316,"y":903,"score":64,"level":0},{"x":1363,"y":903,"score":39,"level":0},{"x":476,"y":904,"score":35,"level":0},{"x":485,"y":904,"score":32,"level":0},{"x":540,"y":904,"score":116,"level":0},{"x":557,"y":904,"score":124,"level":0},{"x":575,"y":904,"score":149,"level":0},{"x":624,"y":904,"score":86,"level":0},{"x":627,"y":904,"score":56,"level":0},{"x":741,"y":904,"score":34,"level":0},{"x":759,"y":904,"score":41,"level":0},{"x":796,"y":904,"score":29,"level":0},{"x":834,"y":904,"score":52,"level":0},{"x":887,"y":904,"score":28,"level":0},{"x":1191,"y":904,"score":94,"level":0},{"x":1198,"y":904,"score":47,"level":0},{"x":1376,"y":904,"score":28,"level":0},{"x":1445,"y":904,"score":90,"level":0},{"x":1459,"y":904,"score":132,"level":0},{"x":545,"y":905,"score":29,"level":0},{"x":580,"y":905,"score":138,"level":0},{"x":589,"y":905,"score":98,"level":0},{"x":595,"y":905,"score":164,"level":0},{"x":710,"y":905,"score":26,"level":0},{"x":757,"y":905,"score":34,"level":0},{"x":811,"y":905,"score":33,"level":0},{"x":857,"y":905,"score":43,"level":0},{"x":907,"y":905,"score":91,"level":0},{"x":979,"y":905,"score":38,"level":0},{"x":1003,"y":905,"score":113,"level":0},{"x":1010,"y":905,"score":90,"level":0},{"x":1028,"y":905,"score":32,"level":0},{"x":1111,"y":905,"score":29,"level":0},{"x":1272,"y":905,"score":69,"level":0},{"x":1275,"y":905,"score":58,"level":0},{"x":1374,"y":905,"score":33,"level":0},{"x":1405,"y":905,"score":62,"level":0},{"x":1411,"y":905,"score":32,"level":0},{"x":1481,"y":905,"score":81,"level":0},{"x":1487,"y":905,"score":36,"level":0},{"x":404,"y":906,"score":31,"level":0},{"x":417,"y":906,"score":91,"level":0},{"x":526,"y":906,"score":67,"level":0},{"x":570,"y":906,"score":64,"level":0},{"x":618,"y":906,"score":27,"level":0},{"x":686,"y":906,"score":46,"level":0},{"x":970,"y":906,"score":201,"level":0},{"x":976,"y":906,"score":92,"level":0},{"x":1034,"y":906,"score":26,"level":0},{"x":1064,"y":906,"score":116,"level":0},{"x":1103,"y":906,"score":54,"level":0},{"x":1171,"y":906,"score":88,"level":0},{"x":1243,"y":906,"score":80,"level":0},{"x":1284,"y":906,"score":98,"level":0},{"x":1295,"y":906,"score":45,"level":0},{"x":1332,"y":906,"score":110,"level":0},{"x":1337,"y":906,"score":36,"level":0},{"x":1376,"y":906,"score":32,"level":0},{"x":1450,"y":906,"score":64,"level":0},{"x":377,"y":907,"score":92,"level":0},{"x":409,"y":907,"score":61,"level":0},{"x":465,"y":907,"score":42,"level":0},{"x":492,"y":907,"score":36,"level":0},{"x":504,"y":907,"score":27,"level":0},{"x":552,"y":907,"score":32,"level":0},{"x":702,"y":907,"score":29,"level":0},{"x":889,"y":907,"score":26,"level":0},{"x":947,"y":907,"score":69,"level":0},{"x":1071,"y":907,"score":204,"level":0},{"x":1106,"y":907,"score":98,"level":0},{"x":1134,"y":907,"score":97,"level":0},{"x":1156,"y":907,"score":99,"level":0},{"x":1237,"y":907,"score":114,"level":0},{"x":1251,"y":907,"score":55,"level":0},{"x":1254,"y":907,"score":90,"level":0},{"x":1314,"y":907,"score":69,"level":0},{"x":1347,"y":907,"score":42,"level":0},{"x":1420,"y":907,"score":144,"level":0},{"x":1432,"y":907,"score":144,"level":0},{"x":1457,"y":907,"score":92,"level":0},{"x":1490,"y":907,"score":66,"level":0},{"x":432,"y":908,"score":293,"level":0},{"x":438,"y":908,"score":154,"level":0},{"x":517,"y":908,"score":40,"level":0},{"x":544,"y":908,"score":37,"level":0},{"x":572,"y":908,"score":68,"level":0},{"x":604,"y":908,"score":34,"level":0},{"x":623,"y":908,"score":46,"level":0},{"x":679,"y":908,"score":79,"level":0},{"x":738,"y":908,"score":121,"level":0},{"x":912,"y":908,"score":46,"level":0},{"x":1060,"y":908,"score":36,"level":0},{"x":1079,"y":908,"score":34,"level":0},{"x":1123,"y":908,"score":27,"level":0},{"x":1146,"y":908,"score":81,"level":0},{"x":1211,"y":908,"score":32,"level":0},{"x":1227,"y":908,"score":166,"level":0},{"x":1319,"y":908,"score":56,"level":0},{"x":1326,"y":908,"score":58,"level":0},{"x":1439,"y":908,"score":68,"level":0},{"x":391,"y":909,"score":27,"level":0},{"x":647,"y":909,"score":42,"level":0},{"x":719,"y":909,"score":29,"level":0},{"x":786,"y":909,"score":46,"level":0},{"x":820,"y":909,"score":129,"level":0},{"x":826,"y":909,"score":71,"level":0},{"x":934,"y":909,"score":48,"level":0},{"x":959,"y":909,"score":46,"level":0},{"x":1216,"y":909,"score":37,"level":0},{"x":1289,"y":909,"score":91,"level":0},{"x":1297,"y":909,"score":47,"level":0},{"x":1303,"y":909,"score":148,"level":0},{"x":1335,"y":909,"score":44,"level":0},{"x":1366,"y":909,"score":38,"level":0},{"x":1413,"y":909,"score":49,"level":0},{"x":1445,"y":909,"score":81,"level":0},{"x":592,"y":910,"score":44,"level":0},{"x":603,"y":910,"score":32,"level":0},{"x":629,"y":910,"score":56,"level":0},{"x":661,"y":910,"score":102,"level":0},{"x":707,"y":910,"score":100,"level":0},{"x":751,"y":910,"score":33,"level":0},{"x":797,"y":910,"score":106,"level":0},{"x":920,"y":910,"score":115,"level":0},{"x":951,"y":910,"score":42,"level":0},{"x":1105,"y":910,"score":66,"level":0},{"x":1242,"y":910,"score":69,"level":0},{"x":1273,"y":910,"score":48,"level":0},{"x":1279,"y":910,"score":62,"level":0},{"x":1357,"y":910,"score":39,"level":0},{"x":1405,"y":910,"score":90,"level":0},{"x":1441,"y":910,"score":60,"level":0},{"x":1464,"y":910,"score":70,"level":0},{"x":386,"y":911,"score":153,"level":0},{"x":509,"y":911,"score":28,"level":0},{"x":642,"y":911,"score":51,"level":0},{"x":741,"y":911,"score":79,"level":0},{"x":834,"y":911,"score":55,"level":0},{"x":944,"y":911,"score":32,"level":0},{"x":1054,"y":911,"score":59,"level":0},{"x":1341,"y":911,"score":136,"level":0},{"x":1387,"y":911,"score":32,"level":0},{"x":1447,"y":911,"score":31,"level":0},{"x":1450,"y":911,"score":74,"level":0},{"x":1467,"y":911,"score":40,"level":0},{"x":1481,"y":911,"score":95,"level":0},{"x":478,"y":912,"score":36,"level":0},{"x":559,"y":912,"score":37,"level":0},{"x":972,"y":912,"score":93,"level":0},{"x":1004,"y":912,"score":32,"level":0},{"x":1011,"y":912,"score":96,"level":0},{"x":1042,"y":912,"score":60,"level":0},{"x":1097,"y":912,"score":51,"level":0},{"x":1163,"y":912,"score":44,"level":0},{"x":1173,"y":912,"score":42,"level":0},{"x":1235,"y":912,"score":54,"level":0},{"x":1301,"y":912,"score":103,"level":0},{"x":1314,"y":912,"score":67,"level":0},{"x":1397,"y":912,"score":111,"level":0},{"x":1420,"y":912,"score":44,"level":0},{"x":1433,"y":912,"score":28,"level":0},{"x":386,"y":913,"score":121,"level":0},{"x":503,"y":913,"score":40,"level":0},{"x":673,"y":913,"score":178,"level":0},{"x":680,"y":913,"score":99,"level":0},{"x":761,"y":913,"score":35,"level":0},{"x":806,"y":913,"score":116,"level":0},{"x":868,"y":913,"score":52,"level":0},{"x":1063,"y":913,"score":162,"level":0},{"x":1069,"y":913,"score":178,"level":0},{"x":1231,"y":913,"score":28,"level":0},{"x":451,"y":914,"score":72,"level":0},{"x":526,"y":914,"score":167,"level":0},{"x":618,"y":914,"score":72,"level":0},{"x":688,"y":914,"score":31,"level":0},{"x":737,"y":914,"score":35,"level":0},{"x":826,"y":914,"score":95,"level":0},{"x":854,"y":914,"score":73,"level":0},{"x":860,"y":914,"score":136,"level":0},{"x":912,"y":914,"score":46,"level":0},{"x":970,"y":914,"score":52,"level":0},{"x":1016,"y":914,"score":49,"level":0},{"x":1207,"y":914,"score":107,"level":0},{"x":1243,"y":914,"score":43,"level":0},{"x":1298,"y":914,"score":69,"level":0},{"x":1490,"y":914,"score":32,"level":0},{"x":442,"y":915,"score":45,"level":0},{"x":513,"y":915,"score":33,"level":0},{"x":519,"y":915,"score":120,"level":0},{"x":566,"y":915,"score":47,"level":0},{"x":660,"y":915,"score":52,"level":0},{"x":821,"y":915,"score":57,"level":0},{"x":870,"y":915,"score":69,"level":0},{"x":920,"y":915,"score":113,"level":0},{"x":1076,"y":915,"score":77,"level":0},{"x":1080,"y":915,"score":67,"level":0},{"x":1102,"y":915,"score":36,"level":0},{"x":1158,"y":915,"score":50,"level":0},{"x":1184,"y":915,"score":36,"level":0},{"x":1197,"y":915,"score":109,"level":0},{"x":1256,"y":915,"score":69,"level":0},{"x":1323,"y":915,"score":33,"level":0},{"x":1356,"y":915,"score":28,"level":0},{"x":1427,"y":915,"score":46,"level":0},{"x":464,"y":916,"score":64,"level":0},{"x":547,"y":916,"score":87,"level":0},{"x":654,"y":916,"score":53,"level":0},{"x":797,"y":916,"score":30,"level":0},{"x":875,"y":916,"score":58,"level":0},{"x":1074,"y":916,"score":100,"level":0},{"x":1254,"y":916,"score":100,"level":0},{"x":1267,"y":916,"score":90,"level":0},{"x":1329,"y":916,"score":97,"level":0},{"x":1407,"y":916,"score":56,"level":0},{"x":1416,"y":916,"score":30,"level":0},{"x":434,"y":917,"score":88,"level":0},{"x":441,"y":917,"score":49,"level":0},{"x":530,"y":917,"score":117,"level":0},{"x":630,"y":917,"score":153,"level":0},{"x":710,"y":917,"score":32,"level":0},{"x":735,"y":917,"score":85,"level":0},{"x":944,"y":917,"score":40,"level":0},{"x":953,"y":917,"score":46,"level":0},{"x":963,"y":917,"score":31,"level":0},{"x":1010,"y":917,"score":56,"level":0},{"x":1088,"y":917,"score":183,"level":0},{"x":1129,"y":917,"score":29,"level":0},{"x":1181,"y":917,"score":54,"level":0},{"x":1216,"y":917,"score":38,"level":0},{"x":1309,"y":917,"score":33,"level":0},{"x":1341,"y":917,"score":26,"level":0},{"x":1382,"y":917,"score":31,"level":0},{"x":1395,"y":917,"score":94,"level":0},{"x":473,"y":918,"score":65,"level":0},{"x":697,"y":918,"score":38,"level":0},{"x":781,"y":918,"score":27,"level":0},{"x":791,"y":918,"score":73,"level":0},{"x":856,"y":918,"score":71,"level":0},{"x":928,"y":918,"score":46,"level":0},{"x":975,"y":918,"score":62,"level":0},{"x":1152,"y":918,"score":114,"level":0},{"x":1169,"y":918,"score":144,"level":0},{"x":1176,"y":918,"score":47,"level":0},{"x":1201,"y":918,"score":90,"level":0},{"x":1273,"y":918,"score":146,"level":0},{"x":1303,"y":918,"score":96,"level":0},{"x":1338,"y":918,"score":55,"level":0},{"x":1405,"y":918,"score":50,"level":0},{"x":377,"y":919,"score":40,"level":0},{"x":400,"y":919,"score":57,"level":0},{"x":865,"y":919,"score":45,"level":0},{"x":877,"y":919,"score":28,"level":0},{"x":1059,"y":919,"score":36,"level":0},{"x":1069,"y":919,"score":197,"level":0},{"x":1093,"y":919,"score":47,"level":0},{"x":1245,"y":919,"score":183,"level":0},{"x":1253,"y":919,"score":101,"level":0},{"x":1267,"y":919,"score":106,"level":0},{"x":1297,"y":919,"score":34,"level":0},{"x":1330,"y":919,"score":114,"level":0},{"x":421,"y":920,"score":96,"level":0},{"x":485,"y":920,"score":31,"level":0},{"x":515,"y":920,"score":75,"level":0},{"x":598,"y":920,"score":68,"level":0},{"x":612,"y":920,"score":120,"level":0},{"x":648,"y":920,"score":91,"level":0},{"x":704,"y":920,"score":129,"level":0},{"x":826,"y":920,"score":134,"level":0},{"x":937,"y":920,"score":69,"level":0},{"x":1122,"y":920,"score":28,"level":0},{"x":1206,"y":920,"score":188,"level":0},{"x":1212,"y":920,"score":49,"level":0},{"x":1295,"y":920,"score":65,"level":0},{"x":1371,"y":920,"score":79,"level":0},{"x":1396,"y":920,"score":102,"level":0},{"x":377,"y":921,"score":49,"level":0},{"x":467,"y":921,"score":94,"level":0},{"x":522,"y":921,"score":102,"level":0},{"x":550,"y":921,"score":79,"level":0},{"x":557,"y":921,"score":64,"level":0},{"x":619,"y":921,"score":67,"level":0},{"x":780,"y":921,"score":46,"level":0},{"x":870,"y":921,"score":57,"level":0},{"x":961,"y":921,"score":34,"level":0},{"x":1018,"y":921,"score":107,"level":0},{"x":1046,"y":921,"score":61,"level":0},{"x":1111,"y":921,"score":87,"level":0},{"x":1219,"y":921,"score":46,"level":0},{"x":1257,"y":921,"score":31,"level":0},{"x":1353,"y":921,"score":51,"level":0},{"x":1407,"y":921,"score":34,"level":0},{"x":1419,"y":921,"score":38,"level":0},{"x":436,"y":922,"score":159,"level":0},{"x":456,"y":922,"score":84,"level":0},{"x":531,"y":922,"score":55,"level":0},{"x":570,"y":922,"score":110,"level":0},{"x":923,"y":922,"score":55,"level":0},{"x":1081,"y":922,"score":76,"level":0},{"x":1134,"y":922,"score":70,"level":0},{"x":1136,"y":922,"score":79,"level":0},{"x":1149,"y":922,"score":34,"level":0},{"x":1157,"y":922,"score":61,"level":0},{"x":1162,"y":922,"score":175,"level":0},{"x":1309,"y":922,"score":35,"level":0},{"x":1396,"y":922,"score":90,"level":0},{"x":773,"y":923,"score":183,"level":0},{"x":1037,"y":923,"score":105,"level":0},{"x":1054,"y":923,"score":40,"level":0},{"x":1362,"y":923,"score":55,"level":0},{"x":1403,"y":923,"score":153,"level":0},{"x":1443,"y":923,"score":60,"level":0},{"x":489,"y":924,"score":43,"level":0},{"x":496,"y":924,"score":37,"level":0},{"x":641,"y":924,"score":163,"level":0},{"x":669,"y":924,"score":68,"level":0},{"x":720,"y":924,"score":74,"level":0},{"x":866,"y":924,"score":80,"level":0},{"x":1035,"y":924,"score":94,"level":0},{"x":1074,"y":924,"score":61,"level":0},{"x":1263,"y":924,"score":195,"level":0},{"x":1274,"y":924,"score":94,"level":0},{"x":1280,"y":924,"score":74,"level":0},{"x":1298,"y":924,"score":46,"level":0},{"x":1401,"y":924,"score":74,"level":0},{"x":1433,"y":924,"score":32,"level":0},{"x":454,"y":925,"score":78,"level":0},{"x":463,"y":925,"score":74,"level":0},{"x":527,"y":925,"score":82,"level":0},{"x":633,"y":925,"score":120,"level":0},{"x":778,"y":925,"score":129,"level":0},{"x":810,"y":925,"score":40,"level":0},{"x":837,"y":925,"score":72,"level":0},{"x":854,"y":925,"score":152,"level":0},{"x":1076,"y":925,"score":93,"level":0},{"x":1182,"y":925,"score":34,"level":0},{"x":1216,"y":925,"score":62,"level":0},{"x":1244,"y":925,"score":137,"level":0},{"x":1254,"y":925,"score":171,"level":0},{"x":1359,"y":925,"score":26,"level":0},{"x":1368,"y":925,"score":33,"level":0},{"x":1490,"y":925,"score":39,"level":0},{"x":404,"y":926,"score":80,"level":0},{"x":469,"y":926,"score":125,"level":0},{"x":483,"y":926,"score":151,"level":0},{"x":592,"y":926,"score":46,"level":0},{"x":610,"y":926,"score":140,"level":0},{"x":731,"y":926,"score":96,"level":0},{"x":820,"y":926,"score":58,"level":0},{"x":918,"y":926,"score":54,"level":0},{"x":927,"y":926,"score":125,"level":0},{"x":960,"y":926,"score":120,"level":0},{"x":966,"y":926,"score":28,"level":0},{"x":1010,"y":926,"score":82,"level":0},{"x":1112,"y":926,"score":28,"level":0},{"x":1166,"y":926,"score":32,"level":0},{"x":1170,"y":926,"score":58,"level":0},{"x":1304,"y":926,"score":30,"level":0},{"x":1330,"y":926,"score":33,"level":0},{"x":1373,"y":926,"score":50,"level":0},{"x":1464,"y":926,"score":45,"level":0},{"x":416,"y":927,"score":43,"level":0},{"x":434,"y":927,"score":138,"level":0},{"x":547,"y":927,"score":102,"level":0},{"x":561,"y":927,"score":87,"level":0},{"x":585,"y":927,"score":26,"level":0},{"x":604,"y":927,"score":61,"level":0},{"x":763,"y":927,"score":31,"level":0},{"x":826,"y":927,"score":31,"level":0},{"x":985,"y":927,"score":54,"level":0},{"x":1046,"y":927,"score":102,"level":0},{"x":1079,"y":927,"score":41,"level":0},{"x":1154,"y":927,"score":117,"level":0},{"x":1230,"y":927,"score":93,"level":0},{"x":1237,"y":927,"score":28,"level":0},{"x":1284,"y":927,"score":140,"level":0},{"x":1316,"y":927,"score":85,"level":0},{"x":1337,"y":927,"score":31,"level":0},{"x":398,"y":928,"score":57,"level":0},{"x":448,"y":928,"score":51,"level":0},{"x":556,"y":928,"score":30,"level":0},{"x":571,"y":928,"score":45,"level":0},{"x":647,"y":928,"score":28,"level":0},{"x":765,"y":928,"score":26,"level":0},{"x":783,"y":928,"score":41,"level":0},{"x":1125,"y":928,"score":53,"level":0},{"x":1164,"y":928,"score":31,"level":0},{"x":1310,"y":928,"score":36,"level":0},{"x":1322,"y":928,"score":34,"level":0},{"x":1372,"y":928,"score":58,"level":0},{"x":377,"y":929,"score":44,"level":0},{"x":438,"y":929,"score":41,"level":0},{"x":471,"y":929,"score":47,"level":0},{"x":636,"y":929,"score":52,"level":0},{"x":769,"y":929,"score":37,"level":0},{"x":789,"y":929,"score":66,"level":0},{"x":869,"y":929,"score":66,"level":0},{"x":913,"y":929,"score":27,"level":0},{"x":926,"y":929,"score":139,"level":0},{"x":1033,"y":929,"score":55,"level":0},{"x":1147,"y":929,"score":27,"level":0},{"x":1166,"y":929,"score":31,"level":0},{"x":1198,"y":929,"score":32,"level":0},{"x":1300,"y":929,"score":46,"level":0},{"x":1410,"y":929,"score":27,"level":0},{"x":1475,"y":929,"score":37,"level":0},{"x":422,"y":930,"score":33,"level":0},{"x":497,"y":930,"score":92,"level":0},{"x":527,"y":930,"score":59,"level":0},{"x":536,"y":930,"score":27,"level":0},{"x":591,"y":930,"score":58,"level":0},{"x":642,"y":930,"score":30,"level":0},{"x":837,"y":930,"score":37,"level":0},{"x":847,"y":930,"score":31,"level":0},{"x":882,"y":930,"score":46,"level":0},{"x":931,"y":930,"score":109,"level":0},{"x":1001,"y":930,"score":136,"level":0},{"x":1006,"y":930,"score":138,"level":0},{"x":1124,"y":930,"score":36,"level":0},{"x":1248,"y":930,"score":36,"level":0},{"x":1264,"y":930,"score":67,"level":0},{"x":1274,"y":930,"score":134,"level":0},{"x":506,"y":931,"score":265,"level":0},{"x":515,"y":931,"score":175,"level":0},{"x":521,"y":931,"score":44,"level":0},{"x":631,"y":931,"score":48,"level":0},{"x":651,"y":931,"score":110,"level":0},{"x":732,"y":931,"score":100,"level":0},{"x":750,"y":931,"score":78,"level":0},{"x":798,"y":931,"score":26,"level":0},{"x":841,"y":931,"score":52,"level":0},{"x":957,"y":931,"score":69,"level":0},{"x":1143,"y":931,"score":83,"level":0},{"x":1173,"y":931,"score":184,"level":0},{"x":1214,"y":931,"score":80,"level":0},{"x":1320,"y":931,"score":98,"level":0},{"x":1337,"y":931,"score":40,"level":0},{"x":1378,"y":931,"score":36,"level":0},{"x":456,"y":932,"score":133,"level":0},{"x":552,"y":932,"score":30,"level":0},{"x":607,"y":932,"score":64,"level":0},{"x":619,"y":932,"score":82,"level":0},{"x":778,"y":932,"score":41,"level":0},{"x":945,"y":932,"score":27,"level":0},{"x":960,"y":932,"score":82,"level":0},{"x":979,"y":932,"score":90,"level":0},{"x":995,"y":932,"score":152,"level":0},{"x":1386,"y":932,"score":55,"level":0},{"x":380,"y":933,"score":37,"level":0},{"x":433,"y":933,"score":63,"level":0},{"x":560,"y":933,"score":67,"level":0},{"x":745,"y":933,"score":35,"level":0},{"x":811,"y":933,"score":44,"level":0},{"x":917,"y":933,"score":35,"level":0},{"x":952,"y":933,"score":163,"level":0},{"x":968,"y":933,"score":48,"level":0},{"x":1040,"y":933,"score":50,"level":0},{"x":1053,"y":933,"score":70,"level":0},{"x":1112,"y":933,"score":60,"level":0},{"x":1258,"y":933,"score":44,"level":0},{"x":1311,"y":933,"score":56,"level":0},{"x":461,"y":934,"score":55,"level":0},{"x":487,"y":934,"score":55,"level":0},{"x":522,"y":934,"score":31,"level":0},{"x":699,"y":934,"score":114,"level":0},{"x":740,"y":934,"score":134,"level":0},{"x":805,"y":934,"score":90,"level":0},{"x":842,"y":934,"score":42,"level":0},{"x":1061,"y":934,"score":81,"level":0},{"x":1148,"y":934,"score":64,"level":0},{"x":1242,"y":934,"score":49,"level":0},{"x":1317,"y":934,"score":53,"level":0},{"x":1352,"y":934,"score":92,"level":0},{"x":1357,"y":934,"score":45,"level":0},{"x":389,"y":935,"score":37,"level":0},{"x":426,"y":935,"score":53,"level":0},{"x":500,"y":935,"score":72,"level":0},{"x":543,"y":935,"score":80,"level":0},{"x":567,"y":935,"score":38,"level":0},{"x":626,"y":935,"score":98,"level":0},{"x":675,"y":935,"score":44,"level":0},{"x":683,"y":935,"score":38,"level":0},{"x":714,"y":935,"score":65,"level":0},{"x":720,"y":935,"score":45,"level":0},{"x":862,"y":935,"score":86,"level":0},{"x":868,"y":935,"score":184,"level":0},{"x":922,"y":935,"score":119,"level":0},{"x":962,"y":935,"score":73,"level":0},{"x":974,"y":935,"score":148,"level":0},{"x":1056,"y":935,"score":67,"level":0},{"x":1063,"y":935,"score":112,"level":0},{"x":1074,"y":935,"score":71,"level":0},{"x":1105,"y":935,"score":27,"level":0},{"x":1136,"y":935,"score":30,"level":0},{"x":1178,"y":935,"score":132,"level":0},{"x":1244,"y":935,"score":121,"level":0},{"x":1273,"y":935,"score":42,"level":0},{"x":1290,"y":935,"score":93,"level":0},{"x":593,"y":936,"score":61,"level":0},{"x":759,"y":936,"score":55,"level":0},{"x":829,"y":936,"score":26,"level":0},{"x":851,"y":936,"score":30,"level":0},{"x":882,"y":936,"score":29,"level":0},{"x":935,"y":936,"score":120,"level":0},{"x":1069,"y":936,"score":34,"level":0},{"x":1153,"y":936,"score":39,"level":0},{"x":1234,"y":936,"score":45,"level":0},{"x":1268,"y":936,"score":45,"level":0},{"x":385,"y":937,"score":51,"level":0},{"x":395,"y":937,"score":100,"level":0},{"x":405,"y":937,"score":81,"level":0},{"x":417,"y":937,"score":70,"level":0},{"x":438,"y":937,"score":47,"level":0},{"x":481,"y":937,"score":79,"level":0},{"x":507,"y":937,"score":34,"level":0},{"x":514,"y":937,"score":30,"level":0},{"x":638,"y":937,"score":158,"level":0},{"x":692,"y":937,"score":57,"level":0},{"x":753,"y":937,"score":115,"level":0},{"x":792,"y":937,"score":32,"level":0},{"x":887,"y":937,"score":29,"level":0},{"x":957,"y":937,"score":221,"level":0},{"x":1017,"y":937,"score":34,"level":0},{"x":1094,"y":937,"score":88,"level":0},{"x":1132,"y":937,"score":47,"level":0},{"x":1170,"y":937,"score":96,"level":0},{"x":1179,"y":937,"score":134,"level":0},{"x":1202,"y":937,"score":41,"level":0},{"x":1246,"y":937,"score":98,"level":0},{"x":1298,"y":937,"score":58,"level":0},{"x":444,"y":938,"score":41,"level":0},{"x":558,"y":938,"score":68,"level":0},{"x":602,"y":938,"score":86,"level":0},{"x":615,"y":938,"score":51,"level":0},{"x":633,"y":938,"score":84,"level":0},{"x":665,"y":938,"score":54,"level":0},{"x":765,"y":938,"score":111,"level":0},{"x":781,"y":938,"score":34,"level":0},{"x":977,"y":938,"score":69,"level":0},{"x":1013,"y":938,"score":120,"level":0},{"x":1135,"y":938,"score":54,"level":0},{"x":1162,"y":938,"score":80,"level":0},{"x":1213,"y":938,"score":83,"level":0},{"x":1215,"y":938,"score":62,"level":0},{"x":1293,"y":938,"score":60,"level":0},{"x":1307,"y":938,"score":66,"level":0},{"x":494,"y":939,"score":30,"level":0},{"x":532,"y":939,"score":50,"level":0},{"x":649,"y":939,"score":90,"level":0},{"x":814,"y":939,"score":142,"level":0},{"x":952,"y":939,"score":75,"level":0},{"x":1102,"y":939,"score":35,"level":0},{"x":1196,"y":939,"score":52,"level":0},{"x":1241,"y":939,"score":195,"level":0},{"x":1261,"y":939,"score":46,"level":0},{"x":1284,"y":939,"score":36,"level":0},{"x":1311,"y":939,"score":66,"level":0},{"x":1490,"y":939,"score":32,"level":0},{"x":394,"y":940,"score":76,"level":0},{"x":425,"y":940,"score":52,"level":0},{"x":594,"y":940,"score":39,"level":0},{"x":626,"y":940,"score":54,"level":0},{"x":660,"y":940,"score":80,"level":0},{"x":701,"y":940,"score":26,"level":0},{"x":703,"y":940,"score":39,"level":0},{"x":715,"y":940,"score":87,"level":0},{"x":737,"y":940,"score":56,"level":0},{"x":826,"y":940,"score":31,"level":0},{"x":858,"y":940,"score":39,"level":0},{"x":891,"y":940,"score":70,"level":0},{"x":943,"y":940,"score":116,"level":0},{"x":965,"y":940,"score":32,"level":0},{"x":1029,"y":940,"score":32,"level":0},{"x":1064,"y":940,"score":32,"level":0},{"x":1104,"y":940,"score":26,"level":0},{"x":1127,"y":940,"score":124,"level":0},{"x":1183,"y":940,"score":154,"level":0},{"x":1221,"y":940,"score":27,"level":0},{"x":1230,"y":940,"score":80,"level":0},{"x":1295,"y":940,"score":44,"level":0},{"x":1335,"y":940,"score":86,"level":0},{"x":1341,"y":940,"score":208,"level":0},{"x":1348,"y":940,"score":130,"level":0},{"x":1403,"y":940,"score":30,"level":0},{"x":400,"y":941,"score":91,"level":0},{"x":501,"y":941,"score":106,"level":0},{"x":612,"y":941,"score":38,"level":0},{"x":745,"y":941,"score":107,"level":0},{"x":757,"y":941,"score":73,"level":0},{"x":821,"y":941,"score":42,"level":0},{"x":860,"y":941,"score":31,"level":0},{"x":869,"y":941,"score":120,"level":0},{"x":876,"y":941,"score":34,"level":0},{"x":989,"y":941,"score":226,"level":0},{"x":1005,"y":941,"score":100,"level":0},{"x":1074,"y":941,"score":88,"level":0},{"x":1247,"y":941,"score":33,"level":0},{"x":1270,"y":941,"score":35,"level":0},{"x":1322,"y":941,"score":53,"level":0},{"x":1374,"y":941,"score":31,"level":0},{"x":1405,"y":941,"score":34,"level":0},{"x":393,"y":942,"score":78,"level":0},{"x":508,"y":942,"score":40,"level":0},{"x":513,"y":942,"score":94,"level":0},{"x":638,"y":942,"score":27,"level":0},{"x":881,"y":942,"score":35,"level":0},{"x":886,"y":942,"score":31,"level":0},{"x":917,"y":942,"score":36,"level":0},{"x":938,"y":942,"score":94,"level":0},{"x":950,"y":942,"score":32,"level":0},{"x":968,"y":942,"score":36,"level":0},{"x":983,"y":942,"score":114,"level":0},{"x":1020,"y":942,"score":105,"level":0},{"x":1036,"y":942,"score":145,"level":0},{"x":1086,"y":942,"score":210,"level":0},{"x":1105,"y":942,"score":40,"level":0},{"x":1179,"y":942,"score":251,"level":0},{"x":1217,"y":942,"score":30,"level":0},{"x":1236,"y":942,"score":170,"level":0},{"x":1286,"y":942,"score":34,"level":0},{"x":379,"y":943,"score":70,"level":0},{"x":558,"y":943,"score":67,"level":0},{"x":586,"y":943,"score":64,"level":0},{"x":640,"y":943,"score":26,"level":0},{"x":665,"y":943,"score":84,"level":0},{"x":862,"y":943,"score":96,"level":0},{"x":1011,"y":943,"score":27,"level":0},{"x":1050,"y":943,"score":43,"level":0},{"x":1078,"y":943,"score":48,"level":0},{"x":1092,"y":943,"score":85,"level":0},{"x":1113,"y":943,"score":33,"level":0},{"x":1171,"y":943,"score":142,"level":0},{"x":1200,"y":943,"score":37,"level":0},{"x":1228,"y":943,"score":134,"level":0},{"x":1309,"y":943,"score":50,"level":0},{"x":1332,"y":943,"score":117,"level":0},{"x":1449,"y":943,"score":35,"level":0},{"x":384,"y":944,"score":130,"level":0},{"x":424,"y":944,"score":67,"level":0},{"x":430,"y":944,"score":59,"level":0},{"x":467,"y":944,"score":31,"level":0},{"x":479,"y":944,"score":71,"level":0},{"x":487,"y":944,"score":116,"level":0},{"x":494,"y":944,"score":165,"level":0},{"x":602,"y":944,"score":90,"level":0},{"x":671,"y":944,"score":35,"level":0},{"x":904,"y":944,"score":88,"level":0},{"x":1043,"y":944,"score":29,"level":0},{"x":1064,"y":944,"score":28,"level":0},{"x":1120,"y":944,"score":156,"level":0},{"x":1133,"y":944,"score":34,"level":0},{"x":1148,"y":944,"score":92,"level":0},{"x":1205,"y":944,"score":38,"level":0},{"x":1337,"y":944,"score":54,"level":0},{"x":1461,"y":944,"score":40,"level":0},{"x":401,"y":945,"score":73,"level":0},{"x":591,"y":945,"score":33,"level":0},{"x":632,"y":945,"score":29,"level":0},{"x":654,"y":945,"score":79,"level":0},{"x":708,"y":945,"score":32,"level":0},{"x":723,"y":945,"score":31,"level":0},{"x":735,"y":945,"score":65,"level":0},{"x":820,"y":945,"score":35,"level":0},{"x":885,"y":945,"score":45,"level":0},{"x":941,"y":945,"score":42,"level":0},{"x":978,"y":945,"score":26,"level":0},{"x":1061,"y":945,"score":94,"level":0},{"x":1076,"y":945,"score":34,"level":0},{"x":1157,"y":945,"score":35,"level":0},{"x":1196,"y":945,"score":30,"level":0},{"x":1213,"y":945,"score":108,"level":0},{"x":1238,"y":945,"score":86,"level":0},{"x":1261,"y":945,"score":54,"level":0},{"x":1278,"y":945,"score":65,"level":0},{"x":1342,"y":945,"score":108,"level":0},{"x":1490,"y":945,"score":29,"level":0},{"x":377,"y":946,"score":58,"level":0},{"x":383,"y":946,"score":131,"level":0},{"x":408,"y":946,"score":62,"level":0},{"x":473,"y":946,"score":31,"level":0},{"x":889,"y":946,"score":112,"level":0},{"x":922,"y":946,"score":44,"level":0},{"x":931,"y":946,"score":71,"level":0},{"x":988,"y":946,"score":101,"level":0},{"x":1032,"y":946,"score":51,"level":0},{"x":1151,"y":946,"score":59,"level":0},{"x":1162,"y":946,"score":35,"level":0},{"x":1183,"y":946,"score":281,"level":0},{"x":1251,"y":946,"score":134,"level":0},{"x":1284,"y":946,"score":68,"level":0},{"x":1302,"y":946,"score":49,"level":0},{"x":1348,"y":946,"score":82,"level":0},{"x":513,"y":947,"score":38,"level":0},{"x":528,"y":947,"score":27,"level":0},{"x":663,"y":947,"score":59,"level":0},{"x":717,"y":947,"score":57,"level":0},{"x":747,"y":947,"score":63,"level":0},{"x":832,"y":947,"score":91,"level":0},{"x":887,"y":947,"score":107,"level":0},{"x":909,"y":947,"score":168,"level":0},{"x":1035,"y":947,"score":39,"level":0},{"x":1060,"y":947,"score":81,"level":0},{"x":1104,"y":947,"score":40,"level":0},{"x":1106,"y":947,"score":39,"level":0},{"x":1189,"y":947,"score":94,"level":0},{"x":1229,"y":947,"score":122,"level":0},{"x":1309,"y":947,"score":96,"level":0},{"x":1475,"y":947,"score":35,"level":0},{"x":377,"y":948,"score":61,"level":0},{"x":418,"y":948,"score":30,"level":0},{"x":437,"y":948,"score":79,"level":0},{"x":461,"y":948,"score":34,"level":0},{"x":463,"y":948,"score":44,"level":0},{"x":498,"y":948,"score":52,"level":0},{"x":573,"y":948,"score":79,"level":0},{"x":580,"y":948,"score":162,"level":0},{"x":667,"y":948,"score":96,"level":0},{"x":727,"y":948,"score":117,"level":0},{"x":893,"y":948,"score":33,"level":0},{"x":1170,"y":948,"score":37,"level":0},{"x":1178,"y":948,"score":31,"level":0},{"x":1206,"y":948,"score":63,"level":0},{"x":1319,"y":948,"score":58,"level":0},{"x":389,"y":949,"score":114,"level":0},{"x":396,"y":949,"score":62,"level":0},{"x":449,"y":949,"score":66,"level":0},{"x":477,"y":949,"score":79,"level":0},{"x":540,"y":949,"score":36,"level":0},{"x":550,"y":949,"score":98,"level":0},{"x":555,"y":949,"score":30,"level":0},{"x":675,"y":949,"score":40,"level":0},{"x":700,"y":949,"score":35,"level":0},{"x":736,"y":949,"score":34,"level":0},{"x":738,"y":949,"score":45,"level":0},{"x":776,"y":949,"score":26,"level":0},{"x":857,"y":949,"score":27,"level":0},{"x":862,"y":949,"score":100,"level":0},{"x":898,"y":949,"score":32,"level":0},{"x":903,"y":949,"score":26,"level":0},{"x":1011,"y":949,"score":33,"level":0},{"x":1094,"y":949,"score":98,"level":0},{"x":1099,"y":949,"score":96,"level":0},{"x":1113,"y":949,"score":91,"level":0},{"x":1121,"y":949,"score":101,"level":0},{"x":1269,"y":949,"score":150,"level":0},{"x":1353,"y":949,"score":26,"level":0},{"x":1358,"y":949,"score":30,"level":0},{"x":1398,"y":949,"score":60,"level":0},{"x":1414,"y":949,"score":56,"level":0},{"x":1450,"y":949,"score":32,"level":0},{"x":423,"y":950,"score":65,"level":0},{"x":487,"y":950,"score":94,"level":0},{"x":575,"y":950,"score":90,"level":0},{"x":591,"y":950,"score":84,"level":0},{"x":728,"y":950,"score":28,"level":0},{"x":842,"y":950,"score":71,"level":0},{"x":1077,"y":950,"score":129,"level":0},{"x":1085,"y":950,"score":26,"level":0},{"x":1213,"y":950,"score":70,"level":0},{"x":1261,"y":950,"score":162,"level":0},{"x":1345,"y":950,"score":73,"level":0},{"x":1444,"y":950,"score":38,"level":0},{"x":481,"y":951,"score":69,"level":0},{"x":502,"y":951,"score":56,"level":0},{"x":914,"y":951,"score":55,"level":0},{"x":921,"y":951,"score":55,"level":0},{"x":941,"y":951,"score":64,"level":0},{"x":1109,"y":951,"score":41,"level":0},{"x":1153,"y":951,"score":70,"level":0},{"x":1184,"y":951,"score":68,"level":0},{"x":1197,"y":951,"score":44,"level":0},{"x":1284,"y":951,"score":46,"level":0},{"x":1302,"y":951,"score":78,"level":0},{"x":1323,"y":951,"score":57,"level":0},{"x":1397,"y":951,"score":57,"level":0},{"x":1412,"y":951,"score":151,"level":0},{"x":409,"y":952,"score":41,"level":0},{"x":515,"y":952,"score":164,"level":0},{"x":552,"y":952,"score":64,"level":0},{"x":671,"y":952,"score":40,"level":0},{"x":771,"y":952,"score":86,"level":0},{"x":796,"y":952,"score":39,"level":0},{"x":830,"y":952,"score":53,"level":0},{"x":832,"y":952,"score":58,"level":0},{"x":1061,"y":952,"score":63,"level":0},{"x":1092,"y":952,"score":51,"level":0},{"x":1130,"y":952,"score":70,"level":0},{"x":1203,"y":952,"score":47,"level":0},{"x":1370,"y":952,"score":104,"level":0},{"x":1428,"y":952,"score":29,"level":0},{"x":456,"y":953,"score":48,"level":0},{"x":571,"y":953,"score":65,"level":0},{"x":584,"y":953,"score":140,"level":0},{"x":665,"y":953,"score":45,"level":0},{"x":849,"y":953,"score":44,"level":0},{"x":852,"y":953,"score":83,"level":0},{"x":892,"y":953,"score":54,"level":0},{"x":902,"y":953,"score":27,"level":0},{"x":929,"y":953,"score":39,"level":0},{"x":997,"y":953,"score":98,"level":0},{"x":1083,"y":953,"score":40,"level":0},{"x":1118,"y":953,"score":32,"level":0},{"x":1139,"y":953,"score":81,"level":0},{"x":1290,"y":953,"score":93,"level":0},{"x":1327,"y":953,"score":49,"level":0},{"x":1417,"y":953,"score":69,"level":0},{"x":1434,"y":953,"score":34,"level":0},{"x":391,"y":954,"score":54,"level":0},{"x":442,"y":954,"score":43,"level":0},{"x":527,"y":954,"score":38,"level":0},{"x":579,"y":954,"score":86,"level":0},{"x":658,"y":954,"score":33,"level":0},{"x":750,"y":954,"score":95,"level":0},{"x":1056,"y":954,"score":29,"level":0},{"x":1074,"y":954,"score":72,"level":0},{"x":1233,"y":954,"score":92,"level":0},{"x":1318,"y":954,"score":90,"level":0},{"x":1329,"y":954,"score":55,"level":0},{"x":1336,"y":954,"score":26,"level":0},{"x":424,"y":955,"score":28,"level":0},{"x":532,"y":955,"score":26,"level":0},{"x":540,"y":955,"score":143,"level":0},{"x":554,"y":955,"score":119,"level":0},{"x":700,"y":955,"score":80,"level":0},{"x":732,"y":955,"score":184,"level":0},{"x":758,"y":955,"score":96,"level":0},{"x":826,"y":955,"score":54,"level":0},{"x":898,"y":955,"score":43,"level":0},{"x":1008,"y":955,"score":148,"level":0},{"x":1098,"y":955,"score":206,"level":0},{"x":1244,"y":955,"score":157,"level":0},{"x":1252,"y":955,"score":58,"level":0},{"x":1261,"y":955,"score":29,"level":0},{"x":1269,"y":955,"score":120,"level":0},{"x":1423,"y":955,"score":123,"level":0},{"x":377,"y":956,"score":82,"level":0},{"x":433,"y":956,"score":96,"level":0},{"x":462,"y":956,"score":128,"level":0},{"x":491,"y":956,"score":124,"level":0},{"x":548,"y":956,"score":80,"level":0},{"x":1091,"y":956,"score":75,"level":0},{"x":1148,"y":956,"score":38,"level":0},{"x":1203,"y":956,"score":65,"level":0},{"x":1210,"y":956,"score":55,"level":0},{"x":1213,"y":956,"score":35,"level":0},{"x":1295,"y":956,"score":51,"level":0},{"x":1323,"y":956,"score":55,"level":0},{"x":1347,"y":956,"score":77,"level":0},{"x":394,"y":957,"score":28,"level":0},{"x":403,"y":957,"score":87,"level":0},{"x":515,"y":957,"score":40,"level":0},{"x":693,"y":957,"score":86,"level":0},{"x":707,"y":957,"score":42,"level":0},{"x":759,"y":957,"score":119,"level":0},{"x":778,"y":957,"score":53,"level":0},{"x":952,"y":957,"score":60,"level":0},{"x":977,"y":957,"score":32,"level":0},{"x":993,"y":957,"score":66,"level":0},{"x":1022,"y":957,"score":137,"level":0},{"x":1060,"y":957,"score":49,"level":0},{"x":1080,"y":957,"score":34,"level":0},{"x":1159,"y":957,"score":33,"level":0},{"x":1378,"y":957,"score":61,"level":0},{"x":448,"y":958,"score":32,"level":0},{"x":567,"y":958,"score":35,"level":0},{"x":580,"y":958,"score":53,"level":0},{"x":614,"y":958,"score":124,"level":0},{"x":619,"y":958,"score":40,"level":0},{"x":649,"y":958,"score":38,"level":0},{"x":772,"y":958,"score":242,"level":0},{"x":958,"y":958,"score":31,"level":0},{"x":1083,"y":958,"score":67,"level":0},{"x":1105,"y":958,"score":53,"level":0},{"x":1140,"y":958,"score":35,"level":0},{"x":1385,"y":958,"score":27,"level":0},{"x":535,"y":959,"score":43,"level":0},{"x":561,"y":959,"score":277,"level":0},{"x":590,"y":959,"score":49,"level":0},{"x":625,"y":959,"score":151,"level":0},{"x":657,"y":959,"score":40,"level":0},{"x":703,"y":959,"score":119,"level":0},{"x":789,"y":959,"score":70,"level":0},{"x":893,"y":959,"score":200,"level":0},{"x":924,"y":959,"score":106,"level":0},{"x":986,"y":959,"score":108,"level":0},{"x":1153,"y":959,"score":32,"level":0},{"x":1202,"y":959,"score":46,"level":0},{"x":1258,"y":959,"score":234,"level":0},{"x":1302,"y":959,"score":128,"level":0},{"x":1338,"y":959,"score":66,"level":0},{"x":1355,"y":959,"score":28,"level":0},{"x":385,"y":960,"score":33,"level":0},{"x":468,"y":960,"score":81,"level":0},{"x":474,"y":960,"score":113,"level":0},{"x":638,"y":960,"score":32,"level":0},{"x":666,"y":960,"score":44,"level":0},{"x":673,"y":960,"score":127,"level":0},{"x":685,"y":960,"score":112,"level":0},{"x":738,"y":960,"score":213,"level":0},{"x":849,"y":960,"score":40,"level":0},{"x":930,"y":960,"score":57,"level":0},{"x":1027,"y":960,"score":49,"level":0},{"x":1043,"y":960,"score":103,"level":0},{"x":1050,"y":960,"score":60,"level":0},{"x":1056,"y":960,"score":76,"level":0},{"x":1098,"y":960,"score":36,"level":0},{"x":1110,"y":960,"score":72,"level":0},{"x":1218,"y":960,"score":54,"level":0},{"x":1266,"y":960,"score":49,"level":0},{"x":1318,"y":960,"score":144,"level":0},{"x":1363,"y":960,"score":51,"level":0},{"x":1368,"y":960,"score":65,"level":0},{"x":1401,"y":960,"score":147,"level":0},{"x":1426,"y":960,"score":34,"level":0},{"x":640,"y":961,"score":44,"level":0},{"x":944,"y":961,"score":36,"level":0},{"x":1080,"y":961,"score":31,"level":0},{"x":1135,"y":961,"score":76,"level":0},{"x":1200,"y":961,"score":45,"level":0},{"x":1235,"y":961,"score":49,"level":0},{"x":1247,"y":961,"score":30,"level":0},{"x":1445,"y":961,"score":31,"level":0},{"x":811,"y":962,"score":35,"level":0},{"x":828,"y":962,"score":60,"level":0},{"x":958,"y":962,"score":72,"level":0},{"x":992,"y":962,"score":50,"level":0},{"x":1155,"y":962,"score":55,"level":0},{"x":1214,"y":962,"score":80,"level":0},{"x":1348,"y":962,"score":56,"level":0},{"x":1430,"y":962,"score":28,"level":0},{"x":408,"y":963,"score":113,"level":0},{"x":431,"y":963,"score":47,"level":0},{"x":490,"y":963,"score":34,"level":0},{"x":695,"y":963,"score":121,"level":0},{"x":908,"y":963,"score":29,"level":0},{"x":1031,"y":963,"score":32,"level":0},{"x":1057,"y":963,"score":84,"level":0},{"x":1102,"y":963,"score":42,"level":0},{"x":1195,"y":963,"score":36,"level":0},{"x":1262,"y":963,"score":75,"level":0},{"x":1359,"y":963,"score":33,"level":0},{"x":1374,"y":963,"score":58,"level":0},{"x":1408,"y":963,"score":28,"level":0},{"x":1477,"y":963,"score":46,"level":0},{"x":1484,"y":963,"score":60,"level":0},{"x":646,"y":964,"score":29,"level":0},{"x":664,"y":964,"score":30,"level":0},{"x":713,"y":964,"score":56,"level":0},{"x":789,"y":964,"score":39,"level":0},{"x":796,"y":964,"score":47,"level":0},{"x":805,"y":964,"score":45,"level":0},{"x":853,"y":964,"score":43,"level":0},{"x":934,"y":964,"score":54,"level":0},{"x":939,"y":964,"score":74,"level":0},{"x":1000,"y":964,"score":62,"level":0},{"x":1059,"y":964,"score":134,"level":0},{"x":1323,"y":964,"score":88,"level":0},{"x":1325,"y":964,"score":60,"level":0},{"x":1354,"y":964,"score":43,"level":0},{"x":1469,"y":964,"score":30,"level":0},{"x":1490,"y":964,"score":28,"level":0},{"x":453,"y":965,"score":84,"level":0},{"x":582,"y":965,"score":126,"level":0},{"x":587,"y":965,"score":120,"level":0},{"x":616,"y":965,"score":28,"level":0},{"x":699,"y":965,"score":146,"level":0},{"x":705,"y":965,"score":77,"level":0},{"x":751,"y":965,"score":90,"level":0},{"x":868,"y":965,"score":55,"level":0},{"x":969,"y":965,"score":32,"level":0},{"x":1026,"y":965,"score":34,"level":0},{"x":1083,"y":965,"score":60,"level":0},{"x":1289,"y":965,"score":34,"level":0},{"x":1317,"y":965,"score":75,"level":0},{"x":421,"y":966,"score":136,"level":0},{"x":836,"y":966,"score":144,"level":0},{"x":944,"y":966,"score":97,"level":0},{"x":981,"y":966,"score":124,"level":0},{"x":1016,"y":966,"score":127,"level":0},{"x":1074,"y":966,"score":48,"level":0},{"x":1090,"y":966,"score":112,"level":0},{"x":1109,"y":966,"score":46,"level":0},{"x":1250,"y":966,"score":57,"level":0},{"x":1322,"y":966,"score":67,"level":0},{"x":427,"y":967,"score":96,"level":0},{"x":433,"y":967,"score":69,"level":0},{"x":440,"y":967,"score":88,"level":0},{"x":568,"y":967,"score":83,"level":0},{"x":587,"y":967,"score":70,"level":0},{"x":765,"y":967,"score":46,"level":0},{"x":784,"y":967,"score":34,"level":0},{"x":809,"y":967,"score":31,"level":0},{"x":961,"y":967,"score":63,"level":0},{"x":975,"y":967,"score":39,"level":0},{"x":1008,"y":967,"score":157,"level":0},{"x":1053,"y":967,"score":37,"level":0},{"x":1162,"y":967,"score":26,"level":0},{"x":1220,"y":967,"score":158,"level":0},{"x":1281,"y":967,"score":41,"level":0},{"x":1346,"y":967,"score":130,"level":0},{"x":1353,"y":967,"score":76,"level":0},{"x":459,"y":968,"score":34,"level":0},{"x":593,"y":968,"score":60,"level":0},{"x":629,"y":968,"score":80,"level":0},{"x":678,"y":968,"score":42,"level":0},{"x":693,"y":968,"score":105,"level":0},{"x":799,"y":968,"score":52,"level":0},{"x":900,"y":968,"score":81,"level":0},{"x":1025,"y":968,"score":105,"level":0},{"x":1124,"y":968,"score":86,"level":0},{"x":1147,"y":968,"score":54,"level":0},{"x":1168,"y":968,"score":42,"level":0},{"x":1419,"y":968,"score":32,"level":0},{"x":1424,"y":968,"score":39,"level":0},{"x":1430,"y":968,"score":147,"level":0},{"x":1438,"y":968,"score":75,"level":0},{"x":1444,"y":968,"score":100,"level":0},{"x":1452,"y":968,"score":26,"level":0},{"x":1478,"y":968,"score":30,"level":0},{"x":1484,"y":968,"score":66,"level":0},{"x":491,"y":969,"score":26,"level":0},{"x":687,"y":969,"score":56,"level":0},{"x":824,"y":969,"score":41,"level":0},{"x":988,"y":969,"score":44,"level":0},{"x":1041,"y":969,"score":171,"level":0},{"x":1047,"y":969,"score":33,"level":0},{"x":1183,"y":969,"score":94,"level":0},{"x":1189,"y":969,"score":41,"level":0},{"x":1241,"y":969,"score":88,"level":0},{"x":1315,"y":969,"score":72,"level":0},{"x":453,"y":970,"score":151,"level":0},{"x":465,"y":970,"score":26,"level":0},{"x":479,"y":970,"score":26,"level":0},{"x":556,"y":970,"score":27,"level":0},{"x":603,"y":970,"score":28,"level":0},{"x":700,"y":970,"score":107,"level":0},{"x":758,"y":970,"score":112,"level":0},{"x":782,"y":970,"score":44,"level":0},{"x":828,"y":970,"score":42,"level":0},{"x":867,"y":970,"score":56,"level":0},{"x":1055,"y":970,"score":42,"level":0},{"x":1065,"y":970,"score":91,"level":0},{"x":1288,"y":970,"score":44,"level":0},{"x":1302,"y":970,"score":92,"level":0},{"x":1360,"y":970,"score":28,"level":0},{"x":1401,"y":970,"score":32,"level":0},{"x":1452,"y":970,"score":30,"level":0},{"x":415,"y":971,"score":54,"level":0},{"x":671,"y":971,"score":94,"level":0},{"x":691,"y":971,"score":33,"level":0},{"x":746,"y":971,"score":33,"level":0},{"x":1070,"y":971,"score":28,"level":0},{"x":1198,"y":971,"score":48,"level":0},{"x":1274,"y":971,"score":39,"level":0},{"x":393,"y":972,"score":32,"level":0},{"x":403,"y":972,"score":57,"level":0},{"x":606,"y":972,"score":47,"level":0},{"x":624,"y":972,"score":40,"level":0},{"x":679,"y":972,"score":67,"level":0},{"x":777,"y":972,"score":54,"level":0},{"x":841,"y":972,"score":96,"level":0},{"x":1017,"y":972,"score":49,"level":0},{"x":1077,"y":972,"score":26,"level":0},{"x":1103,"y":972,"score":62,"level":0},{"x":1133,"y":972,"score":112,"level":0},{"x":1141,"y":972,"score":88,"level":0},{"x":1254,"y":972,"score":49,"level":0},{"x":1353,"y":972,"score":64,"level":0},{"x":386,"y":973,"score":41,"level":0},{"x":407,"y":973,"score":44,"level":0},{"x":442,"y":973,"score":150,"level":0},{"x":569,"y":973,"score":75,"level":0},{"x":714,"y":973,"score":28,"level":0},{"x":737,"y":973,"score":43,"level":0},{"x":762,"y":973,"score":30,"level":0},{"x":837,"y":973,"score":31,"level":0},{"x":910,"y":973,"score":40,"level":0},{"x":920,"y":973,"score":36,"level":0},{"x":938,"y":973,"score":89,"level":0},{"x":947,"y":973,"score":52,"level":0},{"x":1084,"y":973,"score":52,"level":0},{"x":1112,"y":973,"score":50,"level":0},{"x":1234,"y":973,"score":119,"level":0},{"x":1339,"y":973,"score":46,"level":0},{"x":1345,"y":973,"score":126,"level":0},{"x":1432,"y":973,"score":41,"level":0},{"x":1437,"y":973,"score":116,"level":0},{"x":417,"y":974,"score":57,"level":0},{"x":426,"y":974,"score":42,"level":0},{"x":575,"y":974,"score":72,"level":0},{"x":601,"y":974,"score":53,"level":0},{"x":658,"y":974,"score":44,"level":0},{"x":687,"y":974,"score":148,"level":0},{"x":845,"y":974,"score":179,"level":0},{"x":854,"y":974,"score":40,"level":0},{"x":961,"y":974,"score":29,"level":0},{"x":988,"y":974,"score":34,"level":0},{"x":1204,"y":974,"score":50,"level":0},{"x":1322,"y":974,"score":45,"level":0},{"x":434,"y":975,"score":73,"level":0},{"x":471,"y":975,"score":32,"level":0},{"x":758,"y":975,"score":26,"level":0},{"x":896,"y":975,"score":64,"level":0},{"x":915,"y":975,"score":66,"level":0},{"x":972,"y":975,"score":70,"level":0},{"x":996,"y":975,"score":68,"level":0},{"x":1005,"y":975,"score":30,"level":0},{"x":404,"y":976,"score":36,"level":0},{"x":580,"y":976,"score":57,"level":0},{"x":699,"y":976,"score":77,"level":0},{"x":738,"y":976,"score":29,"level":0},{"x":743,"y":976,"score":84,"level":0},{"x":835,"y":976,"score":128,"level":0},{"x":850,"y":976,"score":89,"level":0},{"x":865,"y":976,"score":88,"level":0},{"x":933,"y":976,"score":26,"level":0},{"x":979,"y":976,"score":28,"level":0},{"x":1062,"y":976,"score":70,"level":0},{"x":1463,"y":976,"score":27,"level":0},{"x":1468,"y":976,"score":29,"level":0},{"x":453,"y":977,"score":53,"level":0},{"x":463,"y":977,"score":44,"level":0},{"x":564,"y":977,"score":88,"level":0},{"x":635,"y":977,"score":65,"level":0},{"x":669,"y":977,"score":36,"level":0},{"x":773,"y":977,"score":122,"level":0},{"x":795,"y":977,"score":64,"level":0},{"x":884,"y":977,"score":44,"level":0},{"x":918,"y":977,"score":45,"level":0},{"x":941,"y":977,"score":53,"level":0},{"x":1244,"y":977,"score":34,"level":0},{"x":409,"y":978,"score":44,"level":0},{"x":443,"y":978,"score":36,"level":0},{"x":534,"y":978,"score":105,"level":0},{"x":623,"y":978,"score":63,"level":0},{"x":648,"y":978,"score":53,"level":0},{"x":677,"y":978,"score":54,"level":0},{"x":768,"y":978,"score":35,"level":0},{"x":920,"y":978,"score":119,"level":0},{"x":956,"y":978,"score":65,"level":0},{"x":1149,"y":978,"score":42,"level":0},{"x":1235,"y":978,"score":30,"level":0},{"x":1336,"y":978,"score":37,"level":0},{"x":1424,"y":978,"score":31,"level":0},{"x":1426,"y":978,"score":26,"level":0},{"x":1433,"y":978,"score":43,"level":0},{"x":399,"y":979,"score":138,"level":0},{"x":485,"y":979,"score":122,"level":0},{"x":541,"y":979,"score":113,"level":0},{"x":561,"y":979,"score":76,"level":0},{"x":597,"y":979,"score":38,"level":0},{"x":663,"y":979,"score":95,"level":0},{"x":722,"y":979,"score":26,"level":0},{"x":785,"y":979,"score":54,"level":0},{"x":840,"y":979,"score":123,"level":0},{"x":926,"y":979,"score":79,"level":0},{"x":935,"y":979,"score":37,"level":0},{"x":1103,"y":979,"score":34,"level":0},{"x":1115,"y":979,"score":41,"level":0},{"x":1124,"y":979,"score":141,"level":0},{"x":1224,"y":979,"score":76,"level":0},{"x":1227,"y":979,"score":41,"level":0},{"x":1292,"y":979,"score":27,"level":0},{"x":1320,"y":979,"score":58,"level":0},{"x":1387,"y":979,"score":66,"level":0},{"x":1486,"y":979,"score":42,"level":0},{"x":392,"y":980,"score":119,"level":0},{"x":601,"y":980,"score":38,"level":0},{"x":799,"y":980,"score":55,"level":0},{"x":810,"y":980,"score":37,"level":0},{"x":898,"y":980,"score":71,"level":0},{"x":946,"y":980,"score":146,"level":0},{"x":1019,"y":980,"score":132,"level":0},{"x":1024,"y":980,"score":110,"level":0},{"x":1216,"y":980,"score":51,"level":0},{"x":1262,"y":980,"score":106,"level":0},{"x":374,"y":981,"score":30,"level":0},{"x":406,"y":981,"score":63,"level":0},{"x":448,"y":981,"score":46,"level":0},{"x":559,"y":981,"score":67,"level":0},{"x":567,"y":981,"score":75,"level":0},{"x":620,"y":981,"score":33,"level":0},{"x":764,"y":981,"score":40,"level":0},{"x":802,"y":981,"score":63,"level":0},{"x":832,"y":981,"score":128,"level":0},{"x":853,"y":981,"score":45,"level":0},{"x":910,"y":981,"score":52,"level":0},{"x":943,"y":981,"score":53,"level":0},{"x":1054,"y":981,"score":35,"level":0},{"x":1067,"y":981,"score":27,"level":0},{"x":1073,"y":981,"score":42,"level":0},{"x":1201,"y":981,"score":38,"level":0},{"x":1231,"y":981,"score":78,"level":0},{"x":1256,"y":981,"score":26,"level":0},{"x":1306,"y":981,"score":38,"level":0},{"x":385,"y":982,"score":31,"level":0},{"x":440,"y":982,"score":33,"level":0},{"x":500,"y":982,"score":32,"level":0},{"x":589,"y":982,"score":58,"level":0},{"x":773,"y":982,"score":87,"level":0},{"x":779,"y":982,"score":27,"level":0},{"x":816,"y":982,"score":59,"level":0},{"x":979,"y":982,"score":62,"level":0},{"x":1166,"y":982,"score":64,"level":0},{"x":1274,"y":982,"score":84,"level":0},{"x":1351,"y":982,"score":30,"level":0},{"x":1373,"y":982,"score":76,"level":0},{"x":1461,"y":982,"score":59,"level":0},{"x":1487,"y":982,"score":26,"level":0},{"x":434,"y":983,"score":115,"level":0},{"x":548,"y":983,"score":58,"level":0},{"x":637,"y":983,"score":52,"level":0},{"x":676,"y":983,"score":60,"level":0},{"x":860,"y":983,"score":52,"level":0},{"x":932,"y":983,"score":56,"level":0},{"x":939,"y":983,"score":172,"level":0},{"x":961,"y":983,"score":50,"level":0},{"x":1015,"y":983,"score":118,"level":0},{"x":1035,"y":983,"score":31,"level":0},{"x":1063,"y":983,"score":39,"level":0},{"x":1080,"y":983,"score":52,"level":0},{"x":1090,"y":983,"score":96,"level":0},{"x":1096,"y":983,"score":47,"level":0},{"x":1175,"y":983,"score":32,"level":0},{"x":1237,"y":983,"score":28,"level":0},{"x":380,"y":984,"score":50,"level":0},{"x":541,"y":984,"score":159,"level":0},{"x":553,"y":984,"score":83,"level":0},{"x":581,"y":984,"score":61,"level":0},{"x":630,"y":984,"score":29,"level":0},{"x":730,"y":984,"score":40,"level":0},{"x":743,"y":984,"score":85,"level":0},{"x":762,"y":984,"score":43,"level":0},{"x":890,"y":984,"score":97,"level":0},{"x":1006,"y":984,"score":81,"level":0},{"x":1144,"y":984,"score":159,"level":0},{"x":1285,"y":984,"score":37,"level":0},{"x":1341,"y":984,"score":30,"level":0},{"x":399,"y":985,"score":95,"level":0},{"x":528,"y":985,"score":38,"level":0},{"x":611,"y":985,"score":60,"level":0},{"x":749,"y":985,"score":158,"level":0},{"x":821,"y":985,"score":153,"level":0},{"x":989,"y":985,"score":46,"level":0},{"x":1019,"y":985,"score":45,"level":0},{"x":1104,"y":985,"score":132,"level":0},{"x":1110,"y":985,"score":99,"level":0},{"x":1136,"y":985,"score":63,"level":0},{"x":1190,"y":985,"score":26,"level":0},{"x":1309,"y":985,"score":33,"level":0},{"x":1357,"y":985,"score":31,"level":0},{"x":1431,"y":985,"score":32,"level":0},{"x":1436,"y":985,"score":69,"level":0},{"x":569,"y":986,"score":54,"level":0},{"x":595,"y":986,"score":183,"level":0},{"x":601,"y":986,"score":178,"level":0},{"x":661,"y":986,"score":114,"level":0},{"x":667,"y":986,"score":35,"level":0},{"x":697,"y":986,"score":75,"level":0},{"x":1045,"y":986,"score":72,"level":0},{"x":1180,"y":986,"score":36,"level":0},{"x":1348,"y":986,"score":64,"level":0},{"x":417,"y":987,"score":62,"level":0},{"x":555,"y":987,"score":82,"level":0},{"x":641,"y":987,"score":36,"level":0},{"x":683,"y":987,"score":76,"level":0},{"x":767,"y":987,"score":149,"level":0},{"x":778,"y":987,"score":42,"level":0},{"x":812,"y":987,"score":142,"level":0},{"x":855,"y":987,"score":77,"level":0},{"x":879,"y":987,"score":113,"level":0},{"x":1011,"y":987,"score":56,"level":0},{"x":1047,"y":987,"score":68,"level":0},{"x":1225,"y":987,"score":186,"level":0},{"x":1230,"y":987,"score":97,"level":0},{"x":1400,"y":987,"score":48,"level":0},{"x":1415,"y":987,"score":28,"level":0},{"x":407,"y":988,"score":103,"level":0},{"x":441,"y":988,"score":71,"level":0},{"x":499,"y":988,"score":84,"level":0},{"x":708,"y":988,"score":61,"level":0},{"x":754,"y":988,"score":147,"level":0},{"x":797,"y":988,"score":51,"level":0},{"x":825,"y":988,"score":96,"level":0},{"x":832,"y":988,"score":30,"level":0},{"x":840,"y":988,"score":40,"level":0},{"x":959,"y":988,"score":43,"level":0},{"x":997,"y":988,"score":95,"level":0},{"x":1090,"y":988,"score":83,"level":0},{"x":1096,"y":988,"score":45,"level":0},{"x":1127,"y":988,"score":71,"level":0},{"x":1140,"y":988,"score":36,"level":0},{"x":1213,"y":988,"score":114,"level":0},{"x":1442,"y":988,"score":29,"level":0},{"x":1448,"y":988,"score":28,"level":0},{"x":1486,"y":988,"score":26,"level":0},{"x":381,"y":989,"score":180,"level":0},{"x":530,"y":989,"score":52,"level":0},{"x":543,"y":989,"score":59,"level":0},{"x":559,"y":989,"score":66,"level":0},{"x":723,"y":989,"score":49,"level":0},{"x":860,"y":989,"score":120,"level":0},{"x":972,"y":989,"score":31,"level":0},{"x":1023,"y":989,"score":114,"level":0},{"x":1051,"y":989,"score":42,"level":0},{"x":1106,"y":989,"score":70,"level":0},{"x":1165,"y":989,"score":78,"level":0},{"x":1208,"y":989,"score":28,"level":0},{"x":1289,"y":989,"score":74,"level":0},{"x":1295,"y":989,"score":54,"level":0},{"x":1317,"y":989,"score":92,"level":0},{"x":1343,"y":989,"score":27,"level":0},{"x":387,"y":990,"score":42,"level":0},{"x":434,"y":990,"score":119,"level":0},{"x":607,"y":990,"score":43,"level":0},{"x":700,"y":990,"score":78,"level":0},{"x":736,"y":990,"score":73,"level":0},{"x":892,"y":990,"score":130,"level":0},{"x":1035,"y":990,"score":73,"level":0},{"x":1100,"y":990,"score":104,"level":0},{"x":1150,"y":990,"score":118,"level":0},{"x":425,"y":991,"score":65,"level":0},{"x":546,"y":991,"score":59,"level":0},{"x":595,"y":991,"score":102,"level":0},{"x":747,"y":991,"score":78,"level":0},{"x":773,"y":991,"score":76,"level":0},{"x":816,"y":991,"score":115,"level":0},{"x":895,"y":991,"score":111,"level":0},{"x":922,"y":991,"score":45,"level":0},{"x":990,"y":991,"score":90,"level":0},{"x":1021,"y":991,"score":105,"level":0},{"x":1042,"y":991,"score":122,"level":0},{"x":1059,"y":991,"score":56,"level":0},{"x":1157,"y":991,"score":38,"level":0},{"x":1172,"y":991,"score":26,"level":0},{"x":1192,"y":991,"score":48,"level":0},{"x":1203,"y":991,"score":34,"level":0},{"x":1228,"y":991,"score":95,"level":0},{"x":1357,"y":991,"score":44,"level":0},{"x":1465,"y":991,"score":44,"level":0},{"x":487,"y":992,"score":112,"level":0},{"x":572,"y":992,"score":102,"level":0},{"x":584,"y":992,"score":52,"level":0},{"x":660,"y":992,"score":146,"level":0},{"x":696,"y":992,"score":35,"level":0},{"x":769,"y":992,"score":64,"level":0},{"x":950,"y":992,"score":73,"level":0},{"x":1223,"y":992,"score":87,"level":0},{"x":1274,"y":992,"score":30,"level":0},{"x":1281,"y":992,"score":64,"level":0},{"x":1351,"y":992,"score":26,"level":0},{"x":413,"y":993,"score":40,"level":0},{"x":550,"y":993,"score":92,"level":0},{"x":810,"y":993,"score":80,"level":0},{"x":958,"y":993,"score":49,"level":0},{"x":1025,"y":993,"score":112,"level":0},{"x":1082,"y":993,"score":121,"level":0},{"x":1109,"y":993,"score":96,"level":0},{"x":1128,"y":993,"score":46,"level":0},{"x":1214,"y":993,"score":28,"level":0},{"x":1262,"y":993,"score":30,"level":0},{"x":1302,"y":993,"score":140,"level":0},{"x":372,"y":994,"score":44,"level":0},{"x":392,"y":994,"score":75,"level":0},{"x":397,"y":994,"score":30,"level":0},{"x":403,"y":994,"score":36,"level":0},{"x":427,"y":994,"score":43,"level":0},{"x":433,"y":994,"score":31,"level":0},{"x":439,"y":994,"score":48,"level":0},{"x":541,"y":994,"score":100,"level":0},{"x":575,"y":994,"score":39,"level":0},{"x":580,"y":994,"score":59,"level":0},{"x":611,"y":994,"score":43,"level":0},{"x":625,"y":994,"score":46,"level":0},{"x":666,"y":994,"score":28,"level":0},{"x":727,"y":994,"score":42,"level":0},{"x":755,"y":994,"score":64,"level":0},{"x":763,"y":994,"score":52,"level":0},{"x":779,"y":994,"score":28,"level":0},{"x":853,"y":994,"score":34,"level":0},{"x":870,"y":994,"score":60,"level":0},{"x":886,"y":994,"score":54,"level":0},{"x":945,"y":994,"score":44,"level":0},{"x":980,"y":994,"score":55,"level":0},{"x":988,"y":994,"score":106,"level":0},{"x":999,"y":994,"score":137,"level":0},{"x":1007,"y":994,"score":64,"level":0},{"x":1015,"y":994,"score":54,"level":0},{"x":1038,"y":994,"score":45,"level":0},{"x":1078,"y":994,"score":63,"level":0},{"x":1090,"y":994,"score":30,"level":0},{"x":1143,"y":994,"score":32,"level":0},{"x":1152,"y":994,"score":37,"level":0},{"x":1379,"y":994,"score":70,"level":0},{"x":1385,"y":994,"score":84,"level":0},{"x":1391,"y":994,"score":46,"level":0}]}');
});
require.register("noflo-noflo-image/spec/fixtures/textRegion/3010029968_02742a1aec_b.jpg.corners.json", function(exports, require, module){
module.exports = JSON.parse('{"corners":[{"x":340,"y":172,"score":40,"level":0},{"x":703,"y":201,"score":51,"level":0},{"x":642,"y":203,"score":34,"level":0},{"x":660,"y":203,"score":30,"level":0},{"x":774,"y":205,"score":35,"level":0},{"x":644,"y":207,"score":79,"level":0},{"x":770,"y":207,"score":33,"level":0},{"x":615,"y":209,"score":34,"level":0},{"x":714,"y":209,"score":30,"level":0},{"x":659,"y":211,"score":26,"level":0},{"x":691,"y":211,"score":34,"level":0},{"x":716,"y":211,"score":46,"level":0},{"x":636,"y":213,"score":45,"level":0},{"x":684,"y":213,"score":43,"level":0},{"x":699,"y":214,"score":29,"level":0},{"x":709,"y":214,"score":48,"level":0},{"x":670,"y":216,"score":32,"level":0},{"x":629,"y":217,"score":29,"level":0},{"x":643,"y":218,"score":38,"level":0},{"x":669,"y":218,"score":54,"level":0},{"x":689,"y":218,"score":36,"level":0},{"x":637,"y":220,"score":30,"level":0},{"x":662,"y":220,"score":60,"level":0},{"x":701,"y":220,"score":44,"level":0},{"x":619,"y":221,"score":28,"level":0},{"x":699,"y":221,"score":26,"level":0},{"x":673,"y":222,"score":30,"level":0},{"x":671,"y":223,"score":55,"level":0},{"x":719,"y":223,"score":33,"level":0},{"x":725,"y":223,"score":52,"level":0},{"x":731,"y":223,"score":32,"level":0},{"x":709,"y":224,"score":66,"level":0},{"x":620,"y":227,"score":51,"level":0},{"x":636,"y":227,"score":27,"level":0},{"x":604,"y":228,"score":30,"level":0},{"x":752,"y":229,"score":34,"level":0},{"x":683,"y":230,"score":42,"level":0},{"x":661,"y":231,"score":32,"level":0},{"x":675,"y":231,"score":50,"level":0},{"x":703,"y":232,"score":81,"level":0},{"x":708,"y":232,"score":50,"level":0},{"x":714,"y":232,"score":52,"level":0},{"x":615,"y":233,"score":46,"level":0},{"x":677,"y":233,"score":38,"level":0},{"x":633,"y":234,"score":38,"level":0},{"x":662,"y":234,"score":38,"level":0},{"x":691,"y":236,"score":30,"level":0},{"x":747,"y":236,"score":64,"level":0},{"x":631,"y":237,"score":30,"level":0},{"x":638,"y":237,"score":42,"level":0},{"x":708,"y":237,"score":54,"level":0},{"x":714,"y":237,"score":29,"level":0},{"x":738,"y":237,"score":178,"level":0},{"x":644,"y":238,"score":30,"level":0},{"x":699,"y":239,"score":46,"level":0},{"x":653,"y":242,"score":58,"level":0},{"x":694,"y":242,"score":32,"level":0},{"x":706,"y":243,"score":42,"level":0},{"x":713,"y":243,"score":97,"level":0},{"x":733,"y":243,"score":62,"level":0},{"x":743,"y":243,"score":72,"level":0},{"x":620,"y":244,"score":27,"level":0},{"x":676,"y":244,"score":36,"level":0},{"x":750,"y":246,"score":104,"level":0},{"x":725,"y":247,"score":34,"level":0},{"x":749,"y":248,"score":76,"level":0},{"x":642,"y":250,"score":35,"level":0},{"x":743,"y":250,"score":26,"level":0},{"x":751,"y":251,"score":105,"level":0},{"x":650,"y":252,"score":50,"level":0},{"x":684,"y":253,"score":34,"level":0},{"x":678,"y":254,"score":55,"level":0},{"x":615,"y":255,"score":58,"level":0},{"x":675,"y":255,"score":43,"level":0},{"x":754,"y":256,"score":39,"level":0},{"x":624,"y":257,"score":31,"level":0},{"x":643,"y":257,"score":46,"level":0},{"x":650,"y":257,"score":32,"level":0},{"x":718,"y":259,"score":36,"level":0},{"x":702,"y":260,"score":42,"level":0},{"x":737,"y":261,"score":49,"level":0},{"x":698,"y":262,"score":32,"level":0},{"x":729,"y":262,"score":35,"level":0},{"x":652,"y":267,"score":44,"level":0},{"x":730,"y":269,"score":55,"level":0},{"x":722,"y":270,"score":77,"level":0},{"x":698,"y":271,"score":47,"level":0},{"x":614,"y":276,"score":32,"level":0},{"x":742,"y":277,"score":37,"level":0},{"x":738,"y":280,"score":76,"level":0},{"x":627,"y":281,"score":37,"level":0},{"x":672,"y":285,"score":26,"level":0},{"x":710,"y":287,"score":33,"level":0},{"x":738,"y":291,"score":87,"level":0},{"x":594,"y":292,"score":42,"level":0},{"x":703,"y":292,"score":93,"level":0},{"x":722,"y":293,"score":26,"level":0},{"x":688,"y":294,"score":53,"level":0},{"x":686,"y":296,"score":28,"level":0},{"x":694,"y":296,"score":42,"level":0},{"x":585,"y":297,"score":84,"level":0},{"x":704,"y":297,"score":90,"level":0},{"x":717,"y":298,"score":77,"level":0},{"x":655,"y":300,"score":34,"level":0},{"x":714,"y":300,"score":82,"level":0},{"x":727,"y":300,"score":79,"level":0},{"x":733,"y":300,"score":158,"level":0},{"x":640,"y":301,"score":31,"level":0},{"x":659,"y":302,"score":40,"level":0},{"x":694,"y":303,"score":73,"level":0},{"x":674,"y":304,"score":28,"level":0},{"x":703,"y":304,"score":40,"level":0},{"x":662,"y":305,"score":65,"level":0},{"x":717,"y":305,"score":26,"level":0},{"x":616,"y":307,"score":74,"level":0},{"x":683,"y":308,"score":26,"level":0},{"x":629,"y":309,"score":26,"level":0},{"x":731,"y":309,"score":51,"level":0},{"x":605,"y":310,"score":27,"level":0},{"x":701,"y":311,"score":109,"level":0},{"x":621,"y":312,"score":27,"level":0},{"x":658,"y":312,"score":28,"level":0},{"x":690,"y":312,"score":39,"level":0},{"x":692,"y":313,"score":50,"level":0},{"x":635,"y":314,"score":43,"level":0},{"x":694,"y":314,"score":63,"level":0},{"x":739,"y":314,"score":60,"level":0},{"x":717,"y":316,"score":31,"level":0},{"x":620,"y":318,"score":39,"level":0},{"x":605,"y":319,"score":46,"level":0},{"x":600,"y":320,"score":96,"level":0},{"x":640,"y":321,"score":36,"level":0},{"x":720,"y":321,"score":76,"level":0},{"x":737,"y":322,"score":72,"level":0},{"x":712,"y":323,"score":139,"level":0},{"x":608,"y":325,"score":36,"level":0},{"x":690,"y":326,"score":35,"level":0},{"x":636,"y":327,"score":35,"level":0},{"x":639,"y":327,"score":26,"level":0},{"x":719,"y":327,"score":33,"level":0},{"x":706,"y":329,"score":32,"level":0},{"x":711,"y":330,"score":131,"level":0},{"x":730,"y":331,"score":94,"level":0},{"x":634,"y":333,"score":76,"level":0},{"x":720,"y":334,"score":34,"level":0},{"x":606,"y":335,"score":39,"level":0},{"x":740,"y":337,"score":30,"level":0},{"x":614,"y":338,"score":31,"level":0},{"x":681,"y":342,"score":26,"level":0},{"x":712,"y":343,"score":42,"level":0},{"x":736,"y":343,"score":72,"level":0},{"x":603,"y":345,"score":32,"level":0},{"x":721,"y":347,"score":34,"level":0},{"x":704,"y":348,"score":124,"level":0},{"x":723,"y":348,"score":40,"level":0},{"x":728,"y":348,"score":44,"level":0},{"x":634,"y":350,"score":63,"level":0},{"x":697,"y":350,"score":55,"level":0},{"x":593,"y":351,"score":36,"level":0},{"x":720,"y":352,"score":31,"level":0},{"x":722,"y":353,"score":30,"level":0},{"x":731,"y":353,"score":206,"level":0},{"x":701,"y":356,"score":34,"level":0},{"x":725,"y":360,"score":38,"level":0},{"x":693,"y":363,"score":93,"level":0},{"x":719,"y":368,"score":52,"level":0},{"x":711,"y":372,"score":68,"level":0},{"x":707,"y":377,"score":52,"level":0},{"x":603,"y":379,"score":45,"level":0},{"x":610,"y":379,"score":110,"level":0},{"x":617,"y":380,"score":76,"level":0},{"x":681,"y":381,"score":31,"level":0},{"x":704,"y":381,"score":40,"level":0},{"x":627,"y":382,"score":26,"level":0},{"x":588,"y":384,"score":39,"level":0},{"x":609,"y":385,"score":85,"level":0},{"x":671,"y":385,"score":26,"level":0},{"x":670,"y":390,"score":44,"level":0},{"x":679,"y":391,"score":70,"level":0},{"x":615,"y":392,"score":31,"level":0},{"x":669,"y":395,"score":42,"level":0},{"x":622,"y":396,"score":143,"level":0},{"x":677,"y":396,"score":46,"level":0},{"x":577,"y":397,"score":63,"level":0},{"x":617,"y":397,"score":39,"level":0},{"x":685,"y":398,"score":106,"level":0},{"x":659,"y":400,"score":71,"level":0},{"x":621,"y":402,"score":53,"level":0},{"x":635,"y":402,"score":30,"level":0},{"x":672,"y":402,"score":29,"level":0},{"x":625,"y":403,"score":48,"level":0},{"x":638,"y":403,"score":33,"level":0},{"x":646,"y":406,"score":36,"level":0},{"x":721,"y":408,"score":101,"level":0},{"x":658,"y":409,"score":86,"level":0},{"x":718,"y":412,"score":59,"level":0},{"x":622,"y":415,"score":34,"level":0},{"x":721,"y":417,"score":33,"level":0},{"x":726,"y":417,"score":33,"level":0},{"x":711,"y":420,"score":82,"level":0},{"x":707,"y":424,"score":28,"level":0},{"x":813,"y":424,"score":48,"level":0},{"x":725,"y":429,"score":33,"level":0},{"x":728,"y":429,"score":42,"level":0},{"x":629,"y":430,"score":48,"level":0},{"x":698,"y":430,"score":58,"level":0},{"x":707,"y":430,"score":36,"level":0},{"x":635,"y":432,"score":38,"level":0},{"x":726,"y":432,"score":83,"level":0},{"x":706,"y":434,"score":38,"level":0},{"x":723,"y":438,"score":57,"level":0},{"x":726,"y":438,"score":44,"level":0},{"x":706,"y":439,"score":34,"level":0},{"x":836,"y":440,"score":36,"level":0},{"x":639,"y":441,"score":52,"level":0},{"x":724,"y":441,"score":50,"level":0},{"x":631,"y":443,"score":33,"level":0},{"x":783,"y":443,"score":27,"level":0},{"x":841,"y":444,"score":38,"level":0},{"x":725,"y":445,"score":58,"level":0},{"x":730,"y":445,"score":26,"level":0},{"x":630,"y":447,"score":27,"level":0},{"x":650,"y":447,"score":28,"level":0},{"x":707,"y":449,"score":33,"level":0},{"x":635,"y":450,"score":35,"level":0},{"x":641,"y":450,"score":36,"level":0},{"x":728,"y":452,"score":35,"level":0},{"x":652,"y":453,"score":27,"level":0},{"x":645,"y":454,"score":69,"level":0},{"x":726,"y":454,"score":30,"level":0},{"x":731,"y":454,"score":32,"level":0},{"x":640,"y":455,"score":97,"level":0},{"x":658,"y":455,"score":47,"level":0},{"x":690,"y":462,"score":51,"level":0},{"x":650,"y":464,"score":74,"level":0},{"x":654,"y":475,"score":40,"level":0},{"x":649,"y":476,"score":74,"level":0},{"x":652,"y":477,"score":29,"level":0},{"x":735,"y":477,"score":32,"level":0},{"x":650,"y":478,"score":32,"level":0},{"x":648,"y":480,"score":55,"level":0},{"x":654,"y":482,"score":58,"level":0},{"x":650,"y":485,"score":49,"level":0},{"x":735,"y":485,"score":73,"level":0},{"x":737,"y":485,"score":60,"level":0},{"x":651,"y":487,"score":30,"level":0},{"x":658,"y":487,"score":30,"level":0},{"x":680,"y":489,"score":96,"level":0},{"x":662,"y":492,"score":66,"level":0},{"x":674,"y":492,"score":74,"level":0},{"x":734,"y":492,"score":36,"level":0},{"x":654,"y":493,"score":52,"level":0},{"x":723,"y":493,"score":32,"level":0},{"x":731,"y":493,"score":31,"level":0},{"x":679,"y":494,"score":141,"level":0},{"x":715,"y":494,"score":78,"level":0},{"x":693,"y":495,"score":26,"level":0},{"x":663,"y":497,"score":38,"level":0},{"x":676,"y":497,"score":42,"level":0},{"x":696,"y":497,"score":35,"level":0},{"x":715,"y":497,"score":60,"level":0},{"x":701,"y":498,"score":75,"level":0},{"x":723,"y":498,"score":52,"level":0},{"x":679,"y":499,"score":55,"level":0},{"x":706,"y":499,"score":47,"level":0},{"x":660,"y":501,"score":26,"level":0},{"x":684,"y":502,"score":325,"level":0},{"x":678,"y":503,"score":79,"level":0},{"x":691,"y":503,"score":36,"level":0},{"x":653,"y":506,"score":34,"level":0},{"x":683,"y":510,"score":52,"level":0},{"x":694,"y":513,"score":36,"level":0},{"x":678,"y":523,"score":29,"level":0},{"x":697,"y":527,"score":28,"level":0},{"x":764,"y":530,"score":81,"level":0},{"x":757,"y":532,"score":349,"level":0},{"x":762,"y":535,"score":41,"level":0},{"x":766,"y":538,"score":61,"level":0},{"x":755,"y":539,"score":233,"level":0},{"x":775,"y":540,"score":38,"level":0},{"x":769,"y":541,"score":58,"level":0},{"x":777,"y":542,"score":37,"level":0},{"x":759,"y":543,"score":79,"level":0},{"x":771,"y":543,"score":59,"level":0},{"x":754,"y":545,"score":120,"level":0},{"x":734,"y":546,"score":29,"level":0},{"x":810,"y":546,"score":26,"level":0},{"x":764,"y":548,"score":38,"level":0},{"x":783,"y":548,"score":32,"level":0},{"x":772,"y":549,"score":51,"level":0},{"x":778,"y":550,"score":59,"level":0},{"x":774,"y":551,"score":48,"level":0},{"x":1002,"y":552,"score":32,"level":0},{"x":776,"y":553,"score":42,"level":0},{"x":781,"y":553,"score":59,"level":0},{"x":770,"y":554,"score":43,"level":0},{"x":792,"y":557,"score":83,"level":0},{"x":786,"y":558,"score":79,"level":0},{"x":547,"y":560,"score":34,"level":0},{"x":777,"y":561,"score":45,"level":0},{"x":533,"y":562,"score":26,"level":0},{"x":933,"y":562,"score":48,"level":0},{"x":779,"y":563,"score":51,"level":0},{"x":791,"y":563,"score":57,"level":0},{"x":789,"y":565,"score":46,"level":0},{"x":782,"y":566,"score":55,"level":0},{"x":784,"y":568,"score":62,"level":0},{"x":934,"y":569,"score":34,"level":0},{"x":839,"y":571,"score":98,"level":0},{"x":941,"y":571,"score":122,"level":0},{"x":788,"y":572,"score":30,"level":0},{"x":841,"y":572,"score":116,"level":0},{"x":814,"y":573,"score":34,"level":0},{"x":834,"y":574,"score":122,"level":0},{"x":933,"y":574,"score":133,"level":0},{"x":939,"y":575,"score":34,"level":0},{"x":508,"y":576,"score":27,"level":0},{"x":521,"y":576,"score":35,"level":0},{"x":806,"y":577,"score":77,"level":0},{"x":842,"y":581,"score":69,"level":0},{"x":522,"y":582,"score":26,"level":0},{"x":825,"y":583,"score":114,"level":0},{"x":841,"y":587,"score":62,"level":0},{"x":805,"y":589,"score":173,"level":0},{"x":811,"y":589,"score":91,"level":0},{"x":554,"y":591,"score":28,"level":0},{"x":846,"y":591,"score":33,"level":0},{"x":558,"y":592,"score":36,"level":0},{"x":839,"y":592,"score":46,"level":0},{"x":513,"y":593,"score":30,"level":0},{"x":843,"y":593,"score":54,"level":0},{"x":805,"y":595,"score":61,"level":0},{"x":809,"y":597,"score":137,"level":0},{"x":846,"y":597,"score":79,"level":0},{"x":816,"y":598,"score":164,"level":0},{"x":830,"y":598,"score":65,"level":0},{"x":560,"y":599,"score":34,"level":0},{"x":687,"y":599,"score":30,"level":0},{"x":621,"y":600,"score":39,"level":0},{"x":685,"y":601,"score":32,"level":0},{"x":803,"y":602,"score":48,"level":0},{"x":814,"y":602,"score":106,"level":0},{"x":825,"y":602,"score":208,"level":0},{"x":572,"y":603,"score":77,"level":0},{"x":597,"y":603,"score":71,"level":0},{"x":616,"y":604,"score":70,"level":0},{"x":809,"y":604,"score":215,"level":0},{"x":830,"y":604,"score":26,"level":0},{"x":836,"y":604,"score":163,"level":0},{"x":798,"y":607,"score":100,"level":0},{"x":805,"y":607,"score":150,"level":0},{"x":824,"y":607,"score":308,"level":0},{"x":631,"y":608,"score":124,"level":0},{"x":818,"y":608,"score":232,"level":0},{"x":478,"y":609,"score":32,"level":0},{"x":615,"y":610,"score":45,"level":0},{"x":626,"y":610,"score":38,"level":0},{"x":815,"y":611,"score":180,"level":0},{"x":836,"y":611,"score":42,"level":0},{"x":844,"y":611,"score":110,"level":0},{"x":619,"y":612,"score":99,"level":0},{"x":674,"y":612,"score":35,"level":0},{"x":793,"y":612,"score":80,"level":0},{"x":804,"y":612,"score":162,"level":0},{"x":852,"y":612,"score":182,"level":0},{"x":649,"y":613,"score":57,"level":0},{"x":810,"y":613,"score":45,"level":0},{"x":589,"y":614,"score":30,"level":0},{"x":638,"y":614,"score":34,"level":0},{"x":798,"y":614,"score":234,"level":0},{"x":567,"y":615,"score":38,"level":0},{"x":581,"y":615,"score":53,"level":0},{"x":642,"y":615,"score":53,"level":0},{"x":823,"y":615,"score":166,"level":0},{"x":644,"y":616,"score":43,"level":0},{"x":664,"y":616,"score":33,"level":0},{"x":789,"y":616,"score":135,"level":0},{"x":795,"y":616,"score":183,"level":0},{"x":814,"y":616,"score":167,"level":0},{"x":843,"y":617,"score":32,"level":0},{"x":576,"y":619,"score":30,"level":0},{"x":833,"y":619,"score":228,"level":0},{"x":805,"y":620,"score":202,"level":0},{"x":821,"y":620,"score":54,"level":0},{"x":851,"y":620,"score":177,"level":0},{"x":659,"y":621,"score":272,"level":0},{"x":783,"y":621,"score":36,"level":0},{"x":793,"y":621,"score":85,"level":0},{"x":610,"y":622,"score":50,"level":0},{"x":816,"y":622,"score":286,"level":0},{"x":788,"y":623,"score":212,"level":0},{"x":621,"y":624,"score":46,"level":0},{"x":813,"y":624,"score":155,"level":0},{"x":832,"y":624,"score":118,"level":0},{"x":802,"y":625,"score":87,"level":0},{"x":843,"y":625,"score":189,"level":0},{"x":857,"y":625,"score":76,"level":0},{"x":574,"y":626,"score":39,"level":0},{"x":599,"y":626,"score":38,"level":0},{"x":660,"y":626,"score":70,"level":0},{"x":808,"y":626,"score":53,"level":0},{"x":827,"y":626,"score":155,"level":0},{"x":615,"y":627,"score":34,"level":0},{"x":665,"y":627,"score":108,"level":0},{"x":777,"y":627,"score":106,"level":0},{"x":784,"y":627,"score":137,"level":0},{"x":797,"y":627,"score":224,"level":0},{"x":839,"y":627,"score":172,"level":0},{"x":823,"y":628,"score":168,"level":0},{"x":852,"y":628,"score":110,"level":0},{"x":610,"y":630,"score":61,"level":0},{"x":795,"y":630,"score":167,"level":0},{"x":811,"y":630,"score":211,"level":0},{"x":631,"y":631,"score":32,"level":0},{"x":806,"y":631,"score":230,"level":0},{"x":836,"y":631,"score":241,"level":0},{"x":857,"y":631,"score":53,"level":0},{"x":772,"y":632,"score":70,"level":0},{"x":782,"y":632,"score":178,"level":0},{"x":790,"y":632,"score":41,"level":0},{"x":822,"y":633,"score":134,"level":0},{"x":847,"y":633,"score":43,"level":0},{"x":777,"y":634,"score":220,"level":0},{"x":803,"y":634,"score":187,"level":0},{"x":816,"y":634,"score":148,"level":0},{"x":833,"y":634,"score":171,"level":0},{"x":793,"y":635,"score":88,"level":0},{"x":637,"y":636,"score":37,"level":0},{"x":768,"y":636,"score":123,"level":0},{"x":774,"y":636,"score":167,"level":0},{"x":813,"y":636,"score":120,"level":0},{"x":618,"y":637,"score":27,"level":0},{"x":631,"y":637,"score":138,"level":0},{"x":788,"y":637,"score":203,"level":0},{"x":829,"y":637,"score":251,"level":0},{"x":808,"y":638,"score":129,"level":0},{"x":818,"y":639,"score":111,"level":0},{"x":784,"y":640,"score":198,"level":0},{"x":802,"y":640,"score":249,"level":0},{"x":826,"y":640,"score":230,"level":0},{"x":833,"y":640,"score":142,"level":0},{"x":629,"y":641,"score":91,"level":0},{"x":762,"y":641,"score":41,"level":0},{"x":795,"y":641,"score":243,"level":0},{"x":845,"y":641,"score":47,"level":0},{"x":850,"y":641,"score":30,"level":0},{"x":577,"y":642,"score":45,"level":0},{"x":772,"y":642,"score":239,"level":0},{"x":812,"y":642,"score":199,"level":0},{"x":648,"y":643,"score":66,"level":0},{"x":767,"y":643,"score":192,"level":0},{"x":807,"y":643,"score":176,"level":0},{"x":793,"y":644,"score":219,"level":0},{"x":822,"y":644,"score":68,"level":0},{"x":648,"y":645,"score":56,"level":0},{"x":782,"y":645,"score":139,"level":0},{"x":635,"y":646,"score":33,"level":0},{"x":757,"y":646,"score":157,"level":0},{"x":764,"y":646,"score":181,"level":0},{"x":803,"y":646,"score":158,"level":0},{"x":629,"y":647,"score":45,"level":0},{"x":777,"y":647,"score":211,"level":0},{"x":798,"y":647,"score":220,"level":0},{"x":817,"y":649,"score":222,"level":0},{"x":774,"y":650,"score":227,"level":0},{"x":791,"y":650,"score":268,"level":0},{"x":752,"y":651,"score":57,"level":0},{"x":762,"y":651,"score":168,"level":0},{"x":785,"y":651,"score":240,"level":0},{"x":813,"y":651,"score":106,"level":0},{"x":636,"y":652,"score":74,"level":0},{"x":802,"y":652,"score":244,"level":0},{"x":665,"y":653,"score":40,"level":0},{"x":757,"y":653,"score":218,"level":0},{"x":783,"y":653,"score":188,"level":0},{"x":797,"y":653,"score":186,"level":0},{"x":678,"y":654,"score":32,"level":0},{"x":772,"y":655,"score":179,"level":0},{"x":810,"y":655,"score":248,"level":0},{"x":671,"y":656,"score":47,"level":0},{"x":747,"y":656,"score":142,"level":0},{"x":754,"y":656,"score":184,"level":0},{"x":819,"y":656,"score":102,"level":0},{"x":766,"y":657,"score":210,"level":0},{"x":792,"y":657,"score":120,"level":0},{"x":763,"y":659,"score":147,"level":0},{"x":781,"y":659,"score":210,"level":0},{"x":810,"y":660,"score":98,"level":0},{"x":641,"y":661,"score":59,"level":0},{"x":663,"y":661,"score":40,"level":0},{"x":742,"y":661,"score":86,"level":0},{"x":752,"y":661,"score":186,"level":0},{"x":775,"y":661,"score":204,"level":0},{"x":840,"y":661,"score":33,"level":0},{"x":790,"y":662,"score":157,"level":0},{"x":824,"y":662,"score":41,"level":0},{"x":831,"y":662,"score":47,"level":0},{"x":838,"y":662,"score":28,"level":0},{"x":650,"y":663,"score":60,"level":0},{"x":747,"y":663,"score":218,"level":0},{"x":733,"y":664,"score":28,"level":0},{"x":772,"y":664,"score":222,"level":0},{"x":785,"y":664,"score":172,"level":0},{"x":744,"y":665,"score":197,"level":0},{"x":762,"y":665,"score":178,"level":0},{"x":610,"y":666,"score":86,"level":0},{"x":737,"y":666,"score":168,"level":0},{"x":767,"y":666,"score":91,"level":0},{"x":782,"y":666,"score":110,"level":0},{"x":618,"y":667,"score":35,"level":0},{"x":668,"y":667,"score":50,"level":0},{"x":777,"y":667,"score":205,"level":0},{"x":675,"y":668,"score":293,"level":0},{"x":826,"y":668,"score":72,"level":0},{"x":754,"y":669,"score":229,"level":0},{"x":787,"y":669,"score":168,"level":0},{"x":771,"y":670,"score":292,"level":0},{"x":816,"y":670,"score":27,"level":0},{"x":732,"y":671,"score":56,"level":0},{"x":742,"y":671,"score":178,"level":0},{"x":781,"y":671,"score":169,"level":0},{"x":793,"y":671,"score":28,"level":0},{"x":737,"y":672,"score":234,"level":0},{"x":798,"y":672,"score":84,"level":0},{"x":762,"y":673,"score":189,"level":0},{"x":776,"y":673,"score":214,"level":0},{"x":752,"y":674,"score":137,"level":0},{"x":790,"y":674,"score":33,"level":0},{"x":519,"y":675,"score":78,"level":0},{"x":633,"y":675,"score":34,"level":0},{"x":728,"y":675,"score":71,"level":0},{"x":734,"y":675,"score":113,"level":0},{"x":747,"y":675,"score":112,"level":0},{"x":767,"y":675,"score":143,"level":0},{"x":773,"y":675,"score":117,"level":0},{"x":801,"y":675,"score":46,"level":0}]}');
});
require.register("noflo-noflo-image/components/CalculateAspectRatio.js", function(exports, require, module){
var gcd, noflo;

noflo = require('noflo');

gcd = function(a, b) {
  if (b === 0) {
    return a;
  } else {
    return gcd(b, a % b);
  }
};

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.description = 'Calculate aspect ratio from image dimensions';
  c.inPorts.add('dimensions', {
    datatype: 'object',
    process: function(event, packet) {
      var divisor;
      switch (event) {
        case 'begingroup':
          return c.outPorts.ratio.beginGroup(packet);
        case 'data':
          if (!(packet.width || packet.height)) {
            return;
          }
          divisor = gcd(packet.width, packet.height);
          return c.outPorts.ratio.send({
            ratio: "" + (packet.width / divisor) + ":" + (packet.height / divisor)
          });
        case 'endgroup':
          return c.outPorts.ratio.endGroup();
        case 'disconnect':
          return c.outPorts.ratio.disconnect();
      }
    }
  });
  c.outPorts.add('ratio', {
    datatype: 'object'
  });
  return c;
};

});
require.register("noflo-noflo-image/components/GetOrientation.js", function(exports, require, module){
var noflo;

noflo = require('noflo');

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.description = 'Get orientation from image dimensions';
  c.inPorts.add('dimensions', {
    datatype: 'object',
    process: function(event, packet) {
      var orientation;
      switch (event) {
        case 'begingroup':
          return c.outPorts.orientation.beginGroup(packet);
        case 'data':
          if (!(packet.width || packet.height)) {
            return;
          }
          orientation = 'square';
          if (packet.width > packet.height) {
            orientation = 'landscape';
          }
          if (packet.width < packet.height) {
            orientation = 'portrait';
          }
          return c.outPorts.orientation.send({
            orientation: orientation
          });
        case 'endgroup':
          return c.outPorts.orientation.endGroup();
        case 'disconnect':
          return c.outPorts.orientation.disconnect();
      }
    }
  });
  c.outPorts.add('orientation', {
    datatype: 'object'
  });
  return c;
};

});
require.register("noflo-noflo-image/components/Measure.js", function(exports, require, module){
var Measure, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Measure = (function(_super) {
  __extends(Measure, _super);

  Measure.prototype.description = 'Load image from URL and get dimensions';

  Measure.prototype.icon = 'picture-o';

  function Measure() {
    this.inPorts = {
      url: new noflo.Port('string')
    };
    this.outPorts = {
      dimensions: new noflo.Port('object'),
      error: new noflo.Port('object')
    };
    Measure.__super__.constructor.call(this, 'url', 'dimensions');
  }

  Measure.prototype.doAsync = function(url, callback) {
    var image;
    image = new Image();
    image.onload = (function(_this) {
      return function() {
        var dimensions;
        if (((image.naturalWidth != null) && image.naturalWidth === 0) || image.width === 0) {
          image.onerror(new Error("" + url + " didn't come back as a valid image."));
          return;
        }
        dimensions = {
          width: image.width,
          height: image.height
        };
        _this.outPorts.dimensions.beginGroup(url);
        _this.outPorts.dimensions.send(dimensions);
        _this.outPorts.dimensions.endGroup();
        return callback(null);
      };
    })(this);
    image.onerror = function(err) {
      err.url = url;
      return callback(err);
    };
    return image.src = url;
  };

  return Measure;

})(noflo.AsyncComponent);

exports.getComponent = function() {
  return new Measure;
};

});
require.register("noflo-noflo-image/components/ToFullscale.js", function(exports, require, module){
var convertFlickr, convertWikimedia, convertWordpress, noflo, superagent, tryFindingFullscale;

noflo = require('noflo');

superagent = require('superagent');

convertFlickr = function(url) {
  var format;
  format = url.match(/_(.)\.(gif|png|jpg)/);
  if (format) {
    if (format[1] === 'o') {
      return url;
    }
    return url.replace(/_(.)\.(gif|png|jpg)/, '_b.$2');
  }
  return url.replace(/\.(gif|png|jpg)/, '_b.$1');
};

convertWordpress = function(url) {
  return url.replace(/\?w=[\d]+/, '');
};

convertWikimedia = function(url) {
  if (!url.match(/\/commons\/thumb\//)) {
    return url;
  }
  return url.replace(/\/commons\/(thumb)\/([0-9])\/([0-9][a-z])\/(.*)[\\\/][^\\\/]*/, '/commons/$2/$3/$4');
};

tryFindingFullscale = function(url, out, callback) {
  var fullUrl, newUrl;
  newUrl = url;
  fullUrl = url.replace(/[-_](small|thumbnail|thumb)/, '');
  return superagent.head(fullUrl).end(function(err, res) {
    if (err) {
      return callback(err);
    }
    if (res && res.statusCode === 200) {
      newUrl = fullUrl;
    }
    out.beginGroup(url);
    out.send(newUrl);
    out.endGroup();
    return callback(null);
  });
};

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.description = 'Convert an image URL to potential URL of full-scale image';
  c.inPorts.add('url', {
    datatype: 'string'
  });
  c.outPorts.add('url', {
    datatype: 'string'
  });
  c.outPorts.add('error', {
    datatype: 'object'
  });
  noflo.helpers.WirePattern(c, {
    "in": 'url',
    out: 'url',
    async: true,
    forwardGroups: true
  }, function(url, groups, out, callback) {
    var newUrl;
    newUrl = url;
    if (!url) {
      return callback(new Error('No image source provided'));
    }
    if (typeof url !== 'string') {
      return callback(new Error('URL is not a string'));
    }
    if (url.indexOf('staticflickr.com') !== -1) {
      newUrl = convertFlickr(url, callback);
    }
    if (url.indexOf('wordpress.com') !== -1) {
      newUrl = convertWordpress(url, callback);
    }
    if (url.indexOf('wikimedia.org') !== -1) {
      newUrl = convertWikimedia(url, callback);
    }
    if (url.match(/[-_](small|thumb)/)) {
      return tryFindingFullscale(url, out, callback);
    }
    out.beginGroup(url);
    out.send(newUrl);
    out.endGroup();
    return callback(null);
  });
  return c;
};

});
require.register("noflo-noflo-image/spec/testutils.js", function(exports, require, module){
var Canvas, createCanvas, fs, getCanvasWithImage, getData, getImageData, noflo, writeOut;

noflo = require('noflo');

if (!noflo.isBrowser()) {
  fs = require('fs');
  Canvas = require('canvas');
}

createCanvas = function(width, height) {
  var canvas;
  if (noflo.isBrowser()) {
    canvas = document.createElement('canvas');
    canvas.width = width;
    canvas.height = height;
  } else {
    Canvas = require('canvas');
    canvas = new Canvas(width, height);
  }
  return canvas;
};

getImageData = function(name, callback) {
  var id, image;
  if (noflo.isBrowser()) {
    id = 'http://localhost:8000/spec/fixtures/' + name;
    image = new Image();
    image.onload = function() {
      return callback(image);
    };
    image.src = id;
  } else {
    id = 'spec/fixtures/' + name;
    fs.readFile(id, function(err, data) {
      image = new Canvas.Image;
      image.src = data;
      return callback(image);
    });
  }
  return id;
};

getCanvasWithImage = function(name, callback) {
  var id;
  id = getImageData(name, function(img) {
    var canvas;
    canvas = createCanvas(img.width, img.height);
    canvas.getContext('2d').drawImage(img, img.width * 0.25, img.height * 0.25);
    return callback(canvas);
  });
  return id;
};

getData = function(name, def) {
  var err, p;
  p = './fixtures/' + name;
  try {
    return require(p);
  } catch (_error) {
    err = _error;
    console.log('WARN: getData():', err.message);
    return def || {};
  }
};

writeOut = function(path, data) {
  path = 'spec/fixtures/' + path;
  if (!noflo.isBrowser()) {
    return fs.writeFileSync(path, JSON.stringify(data));
  }
};

exports.getData = getData;

exports.writeOut = writeOut;

exports.getCanvasWithImage = getCanvasWithImage;

});
require.register("noflo-noflo-image/components/CreateImage-node.js", function(exports, require, module){
var Canvas, CreateImage, Image, fs, noflo, request, temporary, urlUtil,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Canvas = require('canvas');

Image = Canvas.Image;

urlUtil = require('url');

request = require('request');

temporary = require('temporary');

fs = require('fs');

CreateImage = (function(_super) {
  __extends(CreateImage, _super);

  CreateImage.prototype.description = 'Load image from URL or path and send node-canvas compatible image';

  CreateImage.prototype.icon = 'picture-o';

  function CreateImage() {
    this.inFlight = {};
    this.inPorts = new noflo.InPorts({
      url: {
        datatype: 'string',
        type: 'string/url'
      },
      crossorigin: {
        datatype: 'string',
        description: 'not applicable to Node version',
        required: false
      }
    });
    this.outPorts = new noflo.OutPorts({
      image: {
        datatype: 'object',
        type: 'noflo-canvas/image'
      },
      error: {
        datatype: 'object'
      }
    });
    CreateImage.__super__.constructor.call(this, 'url', 'image');
  }

  CreateImage.prototype.doAsync = function(url, callback) {
    var error, loadFile, onError, onLoad, req, stream, tmpFile, urlOptions;
    onLoad = (function(_this) {
      return function(err, image) {
        if (err) {
          onError(err);
          return;
        }
        _this.outPorts.image.beginGroup(url);
        _this.outPorts.image.send(image);
        _this.outPorts.image.endGroup();
        return callback(null);
      };
    })(this);
    onError = function(err) {
      err.url = url;
      return callback(err);
    };
    loadFile = function(path) {
      return fs.stat(path, function(err, stats) {
        var e;
        if (err) {
          return onError(err);
        }
        if (stats.size === 0) {
          e = new Error('Zero-sized image');
          return onError(e);
        }
        return fs.readFile(path, function(err, image) {
          var img;
          if (err) {
            return onError(err);
          }
          img = new Image;
          img.onload = function() {
            return onLoad(null, img);
          };
          img.onerror = function(err) {
            return onError(err, null);
          };
          return img.src = image;
        });
      });
    };
    urlOptions = urlUtil.parse(url);
    if (urlOptions.protocol) {
      tmpFile = new temporary.File;
      stream = fs.createWriteStream(tmpFile.path);
      req = request({
        url: url,
        timeout: 10000
      });
      req.pipe(stream);
      error = null;
      req.on('response', function(resp) {
        if (resp.statusCode === 200) {
          return;
        }
        error = new Error("" + url + " responded with " + resp.statusCode);
        return error.url = url;
      });
      req.on('error', function(err) {
        err.url = url;
        return error = err;
      });
      req.on('end', (function(_this) {
        return function() {
          var e;
          delete _this.inFlight[url];
          if (error) {
            tmpFile.unlink();
            onError(error);
            return;
          }
          try {
            return loadFile(tmpFile.path);
          } catch (_error) {
            e = _error;
            tmpFile.unlink();
            return onError(e);
          }
        };
      })(this));
      return this.inFlight[url] = req;
    } else {
      return loadFile(url);
    }
  };

  CreateImage.prototype.shutdown = function() {
    var req, url, _ref;
    _ref = this.inFlight;
    for (url in _ref) {
      req = _ref[url];
      req.abort();
      delete this.inFlight[url];
    }
    this.q = [];
    this.errorGroups = [];
    return CreateImage.__super__.shutdown.call(this);
  };

  return CreateImage;

})(noflo.AsyncComponent);

exports.getComponent = function() {
  return new CreateImage;
};

});
require.register("noflo-noflo-image/components/CreateImage.js", function(exports, require, module){
var CreateImage, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

CreateImage = (function(_super) {
  __extends(CreateImage, _super);

  CreateImage.prototype.description = 'Loads an image from given url, sends the element';

  CreateImage.prototype.icon = 'picture-o';

  function CreateImage() {
    this.crossorigin = null;
    this.inPorts = new noflo.InPorts({
      url: {
        datatype: 'string',
        type: 'string/url'
      },
      crossorigin: {
        datatype: 'string',
        description: 'crossorigin Anonymous for CORS-enabled server',
        required: false
      }
    });
    this.outPorts = new noflo.OutPorts({
      image: {
        datatype: 'object',
        type: 'html/element/img'
      },
      error: {
        datatype: 'object'
      }
    });
    CreateImage.__super__.constructor.call(this, 'url', 'image');
    this.inPorts.crossorigin.on('data', (function(_this) {
      return function(data) {
        return _this.crossorigin = data;
      };
    })(this));
  }

  CreateImage.prototype.doAsync = function(url, callback) {
    var image;
    image = new Image();
    if (this.crossorigin) {
      image.crossOrigin = this.crossorigin;
    }
    image.onload = (function(_this) {
      return function() {
        _this.outPorts.image.beginGroup(url);
        _this.outPorts.image.send(image);
        _this.outPorts.image.endGroup();
        return callback(null);
      };
    })(this);
    image.onerror = function(err) {
      err.url = url;
      return callback(err);
    };
    return image.src = url;
  };

  return CreateImage;

})(noflo.AsyncComponent);

exports.getComponent = function() {
  return new CreateImage;
};

});
require.register("noflo-noflo-image/components/GetFeaturesYAPE.js", function(exports, require, module){
var GetFeaturesYAPE, jsfeat, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

jsfeat = require('jsfeat');

GetFeaturesYAPE = (function(_super) {
  __extends(GetFeaturesYAPE, _super);

  GetFeaturesYAPE.prototype.description = 'Extract feature corners of image (method: YAPE)';

  GetFeaturesYAPE.prototype.icon = 'file-image-o';

  function GetFeaturesYAPE() {
    this.inPorts = {
      canvas: new noflo.Port('object')
    };
    this.outPorts = {
      corners: new noflo.Port('array'),
      canvas: new noflo.Port('object')
    };
    this.inPorts.canvas.on('begingroup', (function(_this) {
      return function(group) {
        _this.outPorts.corners.beginGroup(group);
        return _this.outPorts.canvas.beginGroup(group);
      };
    })(this));
    this.inPorts.canvas.on('endgroup', (function(_this) {
      return function(group) {
        _this.outPorts.corners.endGroup(group);
        return _this.outPorts.canvas.endGroup(group);
      };
    })(this));
    this.inPorts.canvas.on('disconnect', (function(_this) {
      return function() {
        _this.outPorts.corners.disconnect();
        return _this.outPorts.canvas.disconnect();
      };
    })(this));
    this.inPorts.canvas.on('data', (function(_this) {
      return function(canvas) {
        var corners;
        corners = _this.getCorners(canvas);
        _this.outPorts.corners.send(corners);
        return _this.outPorts.canvas.send(canvas);
      };
    })(this));
  }

  GetFeaturesYAPE.prototype.getCorners = function(canvas) {
    var context, corners, count, i, img, img_u8, pixels, _i;
    context = canvas.getContext('2d');
    img = context.getImageData(0, 0, canvas.width, canvas.height);
    jsfeat.yape06.laplacian_threshold = 30;
    jsfeat.yape06.min_eigen_value_threshold = 25;
    img_u8 = new jsfeat.matrix_t(canvas.width, canvas.height, jsfeat.U8_t | jsfeat.C1_t);
    jsfeat.imgproc.grayscale(img.data, img_u8.data);
    jsfeat.imgproc.box_blur_gray(img_u8, img_u8, 2, 0);
    corners = [];
    pixels = canvas.width * canvas.height;
    for (i = _i = 0; 0 <= pixels ? _i < pixels : _i > pixels; i = 0 <= pixels ? ++_i : --_i) {
      corners.push(new jsfeat.point2d_t(0, 0, 0));
    }
    count = jsfeat.yape06.detect(img_u8, corners);
    return corners.slice(0, count);
  };

  return GetFeaturesYAPE;

})(noflo.Component);

exports.getComponent = function() {
  return new GetFeaturesYAPE;
};

});
require.register("noflo-noflo-image/components/FindFeatureFreeAreas.js", function(exports, require, module){
var FindFeatureFreeAreas, calculateStartingPoints, findIndexForPoint, findRegions, growRectangle, noflo, spatialSortedIndices,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

calculateStartingPoints = function(bounds, segments) {
  var points, sx, sy, x, y, _i, _j, _ref, _ref1;
  points = [];
  for (sx = _i = 1, _ref = segments.x; 1 <= _ref ? _i <= _ref : _i >= _ref; sx = 1 <= _ref ? ++_i : --_i) {
    for (sy = _j = 1, _ref1 = segments.y; 1 <= _ref1 ? _j <= _ref1 : _j >= _ref1; sy = 1 <= _ref1 ? ++_j : --_j) {
      x = bounds.w * (sx / (segments.x + 1));
      y = bounds.h * (sy / (segments.y + 1));
      points.push({
        x: x,
        y: y
      });
    }
  }
  return points;
};

spatialSortedIndices = function(corners) {
  var indices, sortByX, sortByY, _i, _j, _ref, _ref1, _results, _results1;
  indices = {
    x: (function() {
      _results = [];
      for (var _i = 0, _ref = corners.length; 0 <= _ref ? _i < _ref : _i > _ref; 0 <= _ref ? _i++ : _i--){ _results.push(_i); }
      return _results;
    }).apply(this),
    y: (function() {
      _results1 = [];
      for (var _j = 0, _ref1 = corners.length; 0 <= _ref1 ? _j < _ref1 : _j > _ref1; 0 <= _ref1 ? _j++ : _j--){ _results1.push(_j); }
      return _results1;
    }).apply(this)
  };
  sortByX = function(a, b) {
    if (corners[a].x > corners[b].x) {
      return 1;
    }
    if (corners[a].x < corners[b].x) {
      return -1;
    }
    return 0;
  };
  sortByY = function(a, b) {
    if (corners[a].y > corners[b].y) {
      return 1;
    }
    if (corners[a].y < corners[b].y) {
      return -1;
    }
    return 0;
  };
  indices.x.sort(sortByX);
  indices.y.sort(sortByY);
  return indices;
};

findIndexForPoint = function(corners, indices, point) {
  var findIndexAxis, r;
  findIndexAxis = function(axis) {
    var i, idx, length, _i;
    length = indices[axis].length;
    if (point[axis] > corners[indices[axis][length - 1]][axis]) {
      return length;
    }
    for (i = _i = 0; 0 <= length ? _i < length : _i > length; i = 0 <= length ? ++_i : --_i) {
      idx = indices[axis][i];
      if (corners[idx][axis] > point[axis]) {
        return i - 1;
      }
    }
    return -1;
  };
  r = {
    x: findIndexAxis('x'),
    y: findIndexAxis('y')
  };
  return r;
};

growRectangle = function(corners, indices, point, bounds, threshold) {
  var coordinateForIndex, expand, i, pointInRect, pointIndex, r, x, y;
  if (point.x > bounds.w || point.y > point.h) {
    throw new Error("Initial point is outside bounds");
  }
  pointIndex = findIndexForPoint(corners, indices, point);
  coordinateForIndex = function(axis, index) {
    var idx, p;
    if (index < 0) {
      return {
        x: 0,
        y: 0
      };
    }
    if (index >= indices[axis].length) {
      return {
        x: bounds.w,
        y: bounds.h
      };
    }
    idx = indices[axis][index];
    p = corners[idx];
    return p;
  };
  pointInRect = function(p, rect) {
    var in_x, in_y;
    in_x = p.x >= rect.x0 && p.x <= rect.x1;
    in_y = p.y >= rect.y0 && p.y <= rect.y1;
    return in_x && in_y;
  };
  r = {
    x0: point.x,
    x1: point.x,
    y0: point.y,
    y1: point.y
  };
  i = {
    x: pointIndex.x,
    y: pointIndex.y
  };
  while (true) {
    i.x = i.x + 1;
    i.y = i.y + 1;
    x = coordinateForIndex('x', i.x);
    y = coordinateForIndex('y', i.y);
    expand = false;
    if (!pointInRect(x, r)) {
      r.x1 = x.x;
      expand = true;
    }
    if (!pointInRect(y, r)) {
      r.y1 = y.y;
      expand = true;
    }
    if (!expand) {
      break;
    }
    if (i.x > indices.x.length) {
      break;
    }
    if (i.y > indices.y.length) {
      break;
    }
  }

  /*
   * Expand lower right
  i = {x: pointIndex.x, y: pointIndex.y}
  while true
    i.x=i.x-1
    x = coordinateForIndex 'x', i.x
    expand = false
    console.log i.x, 0, x
    if not pointInRect x, r
      r.x0 = x.x
      expand = true
    i.y=i.y-1
    y = coordinateForIndex 'y', i.y
    console.log i.y, 0, y
    if not pointInRect y, r
      r.y0 = y.y
      expand = true
    break if not expand
    break if i.x < 0
    break if i.y < 0
   */
  r = {
    x: r.x0,
    y: r.y0,
    width: r.x1 - r.x0,
    height: r.y1 - r.y0
  };
  return r;
};

findRegions = function(corners, bounds, seg) {
  var indices, point, region, regions, segments, sortByArea, threshold, _i, _len, _ref;
  if (bounds.w > bounds.h) {
    segments = {
      x: seg,
      y: Math.floor(seg * (bounds.w / bounds.h))
    };
  } else {
    segments = {
      x: Math.floor(seg * (bounds.h / bounds.w)),
      y: seg
    };
  }
  console.log(segments);
  threshold = 1;
  indices = spatialSortedIndices(corners);
  regions = [];
  _ref = calculateStartingPoints(bounds, segments);
  for (_i = 0, _len = _ref.length; _i < _len; _i++) {
    point = _ref[_i];
    region = growRectangle(corners, indices, point, bounds, threshold);
    regions.push(region);
  }
  sortByArea = function(a, b) {
    var A, B;
    A = a.width * a.height;
    B = b.width * b.height;
    if (A > B) {
      return 1;
    }
    if (A < B) {
      return -1;
    }
    return 0;
  };
  regions.sort(sortByArea);
  return regions;
};

FindFeatureFreeAreas = (function(_super) {
  __extends(FindFeatureFreeAreas, _super);

  FindFeatureFreeAreas.prototype.description = 'Extract feature corners of image (method: YAPE)';

  FindFeatureFreeAreas.prototype.icon = 'file-image-o';

  function FindFeatureFreeAreas() {
    this.width = 0;
    this.height = 0;
    this.segments = 4;
    this.inPorts = {
      corners: new noflo.Port('array'),
      width: new noflo.Port('int'),
      height: new noflo.Port('int'),
      segments: new noflo.Port('int')
    };
    this.outPorts = {
      areas: new noflo.Port('array'),
      corners: new noflo.Port('array')
    };
    this.inPorts.width.on('data', (function(_this) {
      return function(data) {
        console.log('width', data);
        return _this.width = data;
      };
    })(this));
    this.inPorts.height.on('data', (function(_this) {
      return function(data) {
        console.log('height', data);
        return _this.height = data;
      };
    })(this));
    this.inPorts.segments.on('data', (function(_this) {
      return function(data) {
        console.log('segments', data);
        return _this.segments = data;
      };
    })(this));
    this.inPorts.corners.on('begingroup', (function(_this) {
      return function(group) {
        _this.outPorts.areas.beginGroup(group);
        return _this.outPorts.corners.beginGroup(group);
      };
    })(this));
    this.inPorts.corners.on('endgroup', (function(_this) {
      return function(group) {
        _this.outPorts.areas.endGroup(group);
        return _this.outPorts.corners.endGroup(group);
      };
    })(this));
    this.inPorts.corners.on('disconnect', (function(_this) {
      return function() {
        _this.outPorts.areas.disconnect();
        return _this.outPorts.corners.disconnect();
      };
    })(this));
    this.inPorts.corners.on('data', (function(_this) {
      return function(corners) {
        var b, regions, s;
        b = {
          w: _this.width,
          h: _this.height
        };
        s = _this.segments;
        console.log(b, s);
        regions = findRegions(corners, b, s);
        _this.outPorts.areas.send(regions);
        return _this.outPorts.corners.send(corners);
      };
    })(this));
  }

  return FindFeatureFreeAreas;

})(noflo.Component);

exports.getComponent = function() {
  return new FindFeatureFreeAreas;
};

exports.calculateStartingPoints = calculateStartingPoints;

exports.spatialSortedIndices = spatialSortedIndices;

exports.findIndexForPoint = findIndexForPoint;

exports.growRectangle = growRectangle;

});
require.register("noflo-noflo-image/components/GetHistogram.js", function(exports, require, module){
var cie_y601, computeHistogram, noflo, normalize, zero;

noflo = require('noflo');

zero = function(a) {
  var i, _i, _ref;
  for (i = _i = 0, _ref = a.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
    a[i] = 0;
  }
  return a;
};

normalize = function(a, max) {
  var i, _i, _ref;
  for (i = _i = 0, _ref = a.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
    a[i] = a[i] / max;
  }
  return a;
};

cie_y601 = function(r, g, b) {
  return 0.299 * r + 0.587 * g + 0.114 * b;
};

computeHistogram = function(canvas) {
  var b, ctx, data, g, i, imageData, pixels, r, res, y, _i, _ref, _ref1;
  res = {
    r: zero(new Array(256)),
    g: zero(new Array(256)),
    b: zero(new Array(256)),
    y: zero(new Array(256))
  };
  ctx = canvas.getContext('2d');
  imageData = ctx.getImageData(0, 0, canvas.width, canvas.height);
  data = imageData.data;
  for (i = _i = 0, _ref = data.length; _i < _ref; i = _i += 4) {
    _ref1 = [data[i], data[i + 1], data[i + 2]], r = _ref1[0], g = _ref1[1], b = _ref1[2];
    y = cie_y601(r / 255, g / 255, b / 255);
    y = Math.floor(y * 255);
    res.r[r] += 1;
    res.g[g] += 1;
    res.b[b] += 1;
    res.y[y] += 1;
  }
  pixels = data.length / 4;
  normalize(res.r, pixels);
  normalize(res.g, pixels);
  normalize(res.b, pixels);
  normalize(res.y, pixels);
  return res;
};

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.outPorts.add('histogram');
  c.inPorts.add('canvas', function(event, payload) {
    if (event === 'begingroup') {
      c.outPorts.histogram.beginGroup(payload);
    }
    if (event === 'endgroup') {
      c.outPorts.histogram.endGroup(payload);
    }
    if (event !== 'data') {
      return;
    }
    return c.outPorts.histogram.send(computeHistogram(payload));
  });
  return c;
};

});
require.register("noflo-noflo-image/components/GetColors.js", function(exports, require, module){
var ColorThief, GetColors, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ColorThief = require('color-thief');

GetColors = (function(_super) {
  __extends(GetColors, _super);

  GetColors.prototype.description = 'Extract the dominant colors of an image';

  GetColors.prototype.icon = 'file-image-o';

  function GetColors() {
    this.outputCssColors = false;
    this.quality = 10;
    this.colors = 10;
    this.inPorts = new noflo.InPorts({
      canvas: {
        datatype: 'object'
      },
      css: {
        datatype: 'boolean'
      },
      colors: {
        datatype: 'number',
        "default": 10
      },
      quality: {
        datatype: 'number',
        "default": 10
      }
    });
    this.outPorts = {
      colors: new noflo.Port('array'),
      canvas: new noflo.Port('object'),
      error: new noflo.Port('object')
    };
    this.inPorts.canvas.on('begingroup', (function(_this) {
      return function(group) {
        _this.outPorts.canvas.beginGroup(group);
        return _this.outPorts.colors.beginGroup(group);
      };
    })(this));
    this.inPorts.canvas.on('endgroup', (function(_this) {
      return function(group) {
        _this.outPorts.canvas.endGroup(group);
        return _this.outPorts.colors.endGroup(group);
      };
    })(this));
    this.inPorts.canvas.on('disconnect', (function(_this) {
      return function() {
        _this.outPorts.colors.disconnect();
        return _this.outPorts.canvas.disconnect();
      };
    })(this));
    this.inPorts.canvas.on('data', (function(_this) {
      return function(canvas) {
        var colors, context, e, pixelCount, pixels, thief;
        thief = new ColorThief;
        context = canvas.getContext('2d');
        pixels = context.getImageData(0, 0, canvas.width, canvas.height).data;
        pixelCount = canvas.width * canvas.height;
        try {
          colors = thief.getPaletteFromPixels(pixels, pixelCount, _this.colors, _this.quality);
          if (_this.outputCssColors) {
            colors = colors.map(function(color) {
              return "rgb(" + color[0] + ", " + color[1] + ", " + color[2] + ")";
            });
          }
        } catch (_error) {
          e = _error;
          _this.outPorts.canvas.send(canvas);
          if (!_this.outPorts.error.isAttached()) {
            return;
          }
          _this.outPorts.error.send(e);
          _this.outPorts.error.disconnect();
          return;
        }
        _this.outPorts.colors.send(colors);
        return _this.outPorts.canvas.send(canvas);
      };
    })(this));
    this.inPorts.css.on('data', (function(_this) {
      return function(boo) {
        return _this.outputCssColors = boo;
      };
    })(this));
    this.inPorts.colors.on('data', (function(_this) {
      return function(data) {
        return _this.colors = data;
      };
    })(this));
    this.inPorts.quality.on('data', (function(_this) {
      return function(data) {
        return _this.quality = data;
      };
    })(this));
  }

  return GetColors;

})(noflo.Component);

exports.getComponent = function() {
  return new GetColors;
};

});
require.register("noflo-noflo-image/components/GetCannyEdges.js", function(exports, require, module){
var GetCannyEdges, jsfeat, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

jsfeat = require('jsfeat');

GetCannyEdges = (function(_super) {
  __extends(GetCannyEdges, _super);

  GetCannyEdges.prototype.description = 'Canny edge detector.';

  GetCannyEdges.prototype.icon = 'file-image-o';

  function GetCannyEdges() {
    this.low = 20;
    this.high = 50;
    this.kernel = 6;
    this.canvas = null;
    this.inPorts = {
      canvas: new noflo.Port('object'),
      low: new noflo.Port('number'),
      high: new noflo.Port('number'),
      kernel: new noflo.Port('number')
    };
    this.outPorts = {
      canvas: new noflo.Port('object')
    };
    this.inPorts.canvas.on('data', (function(_this) {
      return function(canvas) {
        _this.canvas = canvas;
        return _this.computeCanny();
      };
    })(this));
    this.inPorts.low.on('data', (function(_this) {
      return function(low) {
        _this.low = low;
        return _this.computeCanny();
      };
    })(this));
    this.inPorts.high.on('data', (function(_this) {
      return function(high) {
        _this.high = high;
        return _this.computeCanny();
      };
    })(this));
    this.inPorts.kernel.on('data', (function(_this) {
      return function(kernel) {
        _this.kernel = kernel;
        return _this.computeCanny();
      };
    })(this));
  }

  GetCannyEdges.prototype.computeCanny = function() {
    var alpha, canvas, context, i, img, img_u32, img_u8, pix;
    if (!this.outPorts.canvas.isAttached()) {
      return;
    }
    if (this.canvas == null) {
      return;
    }
    canvas = this.canvas;
    context = canvas.getContext('2d');
    img = context.getImageData(0, 0, canvas.width, canvas.height);
    img_u8 = new jsfeat.matrix_t(canvas.width, canvas.height, jsfeat.U8_t | jsfeat.C1_t);
    jsfeat.imgproc.grayscale(img.data, img_u8.data);
    jsfeat.imgproc.gaussian_blur(img_u8, img_u8, this.kernel, 0);
    jsfeat.imgproc.canny(img_u8, img_u8, this.low, this.high);
    img_u32 = new Uint32Array(img.data.buffer);
    alpha = 0xff << 24;
    i = img_u8.cols * img_u8.rows;
    pix = 0;
    while (--i >= 0) {
      pix = img_u8.data[i];
      img_u32[i] = alpha | (pix << 16) | (pix << 8) | pix;
    }
    context.putImageData(img, 0, 0);
    return this.outPorts.canvas.send(canvas);
  };

  return GetCannyEdges;

})(noflo.Component);

exports.getComponent = function() {
  return new GetCannyEdges;
};

});
require.register("noflo-noflo-image/components/ImageToCanvas.js", function(exports, require, module){
var ImageToCanvas, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ImageToCanvas = (function(_super) {
  __extends(ImageToCanvas, _super);

  ImageToCanvas.prototype.description = 'Convert image to canvas.';

  ImageToCanvas.prototype.icon = 'file-image-o';

  function ImageToCanvas() {
    this.image = null;
    this.inPorts = {
      image: new noflo.Port('object')
    };
    this.outPorts = {
      canvas: new noflo.Port('object')
    };
    this.inPorts.image.on('data', (function(_this) {
      return function(image) {
        _this.image = image;
        return _this.imageToCanvas();
      };
    })(this));
  }

  ImageToCanvas.prototype.imageToCanvas = function() {
    var Canvas, canvas, context, image;
    if (!this.outPorts.canvas.isAttached()) {
      return;
    }
    if (!this.image) {
      return;
    }
    image = this.image;
    if (noflo.isBrowser()) {
      canvas = document.createElement('canvas');
      canvas.width = image.width;
      canvas.height = image.height;
    } else {
      Canvas = require('canvas');
      canvas = new Canvas(image.width, image.height);
    }
    context = canvas.getContext('2d');
    context.drawImage(image, 0, 0);
    return this.outPorts.canvas.send(canvas);
  };

  return ImageToCanvas;

})(noflo.Component);

exports.getComponent = function() {
  return new ImageToCanvas;
};

});
require.register("noflo-noflo-image/components/VideoToCanvas.js", function(exports, require, module){
var VideoToCanvas, noflo, requestAnimationFrame,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

if (noflo.isBrowser()) {
  requestAnimationFrame = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function(callback, element) {
    return window.setTimeout(function() {
      return callback(+new Date());
    }, 1000 / 60);
  };
}

VideoToCanvas = (function(_super) {
  __extends(VideoToCanvas, _super);

  VideoToCanvas.prototype.description = 'Convert video to canvas.';

  VideoToCanvas.prototype.icon = 'file-image-o';

  function VideoToCanvas() {
    this.shutdown = __bind(this.shutdown, this);
    this.videoToCanvas = __bind(this.videoToCanvas, this);
    this.video = null;
    this.lastTime = -1;
    this.canvas = null;
    this.context = null;
    this.shutdownNextFrame = false;
    this.rafLooping = false;
    this.inPorts = new noflo.InPorts({
      video: {
        description: 'video element to draw to canvas',
        datatype: 'object',
        required: true
      },
      canvas: {
        description: '(optional) if not hit, component will create canvas',
        datatype: 'object',
        required: false
      }
    });
    this.outPorts = new noflo.OutPorts({
      canvas: {
        description: 'will send canvas with each video frame drawn',
        datatype: 'object'
      }
    });
    this.inPorts.video.on('data', (function(_this) {
      return function(video) {
        if ((video != null ? video.tagName : void 0) !== 'VIDEO') {
          return;
        }
        _this.video = video;
        _this.lastTime = -1;
        if (!_this.rafLooping) {
          _this.rafLooping = true;
          return _this.videoToCanvas();
        }
      };
    })(this));
    this.inPorts.canvas.on('data', (function(_this) {
      return function(canvas) {
        _this.canvas = canvas;
        return _this.context = _this.canvas.getContext('2d');
      };
    })(this));
  }

  VideoToCanvas.prototype.videoToCanvas = function() {
    var Canvas;
    if (this.shutdownNextFrame) {
      return;
    }
    requestAnimationFrame(this.videoToCanvas);
    if (!this.canvas) {
      if (!this.video.videoWidth) {
        return;
      }
      if (noflo.isBrowser()) {
        this.canvas = document.createElement('canvas');
        this.canvas.width = this.video.videoWidth;
        this.canvas.height = this.video.videoHeight;
      } else {
        Canvas = require('canvas');
        this.canvas = new Canvas(this.video.videoWidth, this.video.videoHeight);
      }
      this.context = this.canvas.getContext('2d');
    }
    if (this.lastTime === this.video.currentTime) {
      return;
    } else {
      this.lastTime = this.video.currentTime;
    }
    this.context.drawImage(this.video, 0, 0);
    if (this.outPorts.canvas.isAttached()) {
      return this.outPorts.canvas.send(this.canvas);
    }
  };

  VideoToCanvas.prototype.shutdown = function() {
    return this.shutdownNextFrame = true;
  };

  return VideoToCanvas;

})(noflo.Component);

exports.getComponent = function() {
  return new VideoToCanvas;
};

});
require.register("noflo-mirobot/index.js", function(exports, require, module){
/*
 * This file can be used for general library features of noflo-mirobot.
 *
 * The library features can be made available as CommonJS modules that the
 * components in this project utilize.
 */

});
require.register("noflo-mirobot/vendor/mirobot.js", function(exports, require, module){
(function (root, factory) {
    'use strict';
    if (typeof exports === 'object') {
        // Node. Does not work with strict CommonJS, but
        // only CommonJS-like enviroments that support module.exports,
        // like Node.
        module.exports = factory(root);
    } else if (typeof define === 'function' && define.amd) {
        // AMD. Register as an anonymous module.
        define('mirobot', function () {
            var Mirobot = factory(root);
            if (!root.Mirobot) {
                root.Mirobot = Mirobot;
            }
            return Mirobot;
        });
    } else {
        // Browser globals
        root.Mirobot = factory(root);
    }
}(this, function (window, undefined) {

    var Mirobot = function(url, cb){
      this.url = url;
      this.connect(cb);
      this.cbs = {};
      this.listeners = [];
      this.robot_state = 'idle';
    }

    Mirobot.prototype = {

      connected: false,

      connect: function(cb){
        if(!this.connected){
          var self = this;
          this.ws = new WebSocket(this.url);
          this.ws.onmessage = function(ws_msg){self.handle_ws(ws_msg)};
          this.ws.onopen = function(){ 
            console.log("Mirobot is connected"); 
            self.setConnectedState(true);
            if (cb) {
              cb();
            }
          }
          this.ws.onerror = function(err){self.handleError(err)}
          this.ws.onclose = function(err){self.handleError(err)}
        }
      },

      setConnectedState: function(state){
        var self = this;
        self.connected = state;
        self.broadcast(state ? 'connected' : 'disconnected');
        // Try to auto reconnect if disconnected
        if(state){
          if(self.reconnectTimer){
            clearInterval(self.reconnectTimer);
            self.reconnectTimer = undefined;
          }
        }else{
          if(!self.reconnectTimer){
            self.reconnectTimer = setInterval(function(){
              self.connect();
            }, 1000);
          }
        }
      },
      
      broadcast: function(msg){
        for(i in this.listeners){
          this.listeners[i](msg);
        }
      },

      addListener: function(listener){
        this.listeners.push(listener);
      },

      handleError: function(err){
        if(err instanceof CloseEvent){
          this.setConnectedState(false);
        }else{
          console.log(err);
        }
      },

      move: function(direction, distance, cb){
        this.send({cmd: direction, arg: distance}, cb);
        // this.send({cmd: direction, arg: distance}, function(state, msg, recursion){
        //   // console.log(state, msg, recursion);
        //   // if(state === 'started'){
        //   //   console.log('ACEITO');
        //   // }
        // });
      },

      turn: function(direction, angle, cb){
        this.send({cmd: direction, arg: angle}, cb);
        // this.send({cmd: direction, arg: angle}, function(state, msg, recursion){
        //   // console.log(state, msg, recursion);
        //   // if(state === 'started'){
        //   //   console.log('ACEITO');
        //   // }
        // });
      },

      penup: function(cb){
        this.send({cmd: 'penup'}, cb);
      },

      pendown: function(cb){
        this.send({cmd: 'pendown'}, cb);
      },

      ping: function(cb){
        this.send({cmd: 'ping'}, cb);
      },
      
      stop: function(cb){
        var self = this;
        this.send({cmd:'stop'}, function(state, msg, recursion){
          if(state === 'complete' && !recursion){
            for(var i in self.cbs){
              self.cbs[i]('complete', undefined, true);
            }
            self.robot_state = 'idle';
            self.msg_stack = [];
            self.cbs = {};
            if(cb){ cb(state); }
          }
        });
      },
      
      pause: function(cb){
        this.send({cmd:'pause'}, cb);
      },
      
      resume: function(cb){
        this.send({cmd:'resume'}, cb);
      },

      version: function(cb){
        this.send({cmd:'version'}, cb);
      },

      send: function(msg, cb){
        msg.id = Math.random().toString(36).substr(2, 10)
        if(cb){
          this.cbs[msg.id] = cb;
        }
        if(msg.arg){ 
          msg.arg = msg.arg.toString(); 
        }
        if(['stop', 'pause', 'resume', 'ping', 'version'].indexOf(msg.cmd) >= 0){
          this.ws.send(JSON.stringify(msg));
        } else{
          this.push_msg(msg);
        }
      },
      
      push_msg: function(msg){
        this.msg_stack.push(msg);
        this.run_stack();
      },
      
      run_stack: function(){
        if(this.robot_state === 'idle' && this.msg_stack.length > 0){
          this.robot_state = 'receiving';
          console.log(this.msg_stack[0]);
          this.ws.send(JSON.stringify(this.msg_stack[0]));
        }
      },
      
      handle_ws: function(ws_msg){
        msg = JSON.parse(ws_msg.data);
        console.log('Handle message:', msg);
        if(this.msg_stack.length > 0 && this.msg_stack[0].id == msg.id){
          if(msg.status === 'accepted'){
            if(this.cbs[msg.id]){
              this.cbs[msg.id]('started', msg);
            }
            this.robot_state = 'running';
            // console.log(this.robot_state);
          }else if(msg.status === 'complete'){
            if(this.cbs[msg.id]){
              this.cbs[msg.id]('complete', msg);
              delete this.cbs[msg.id];
            }
            this.msg_stack.shift();
            if(this.msg_stack.length === 0){
              this.broadcast('program_complete');
            }
            this.robot_state = 'idle';
            this.run_stack();
          }
        }else{
          if(this.cbs[msg.id]){
            this.cbs[msg.id]('complete', msg);
            delete this.cbs[msg.id];
          }
        } 
      },
      
      robot_state: 'idle',
      msg_stack: []
    }
    return Mirobot;
}));
});
require.register("noflo-mirobot/graphs/DrawImage.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"DrawImage","environment":{"type":"noflo-browser","content":"<canvas id=\\"c\\" width=\\"400\\" height=\\"400\\"></canvas>"},"icon":""},"inports":{},"outports":{},"groups":[],"processes":{"Draw":{"component":"canvas/Draw","metadata":{"label":"Draw","x":864,"y":180,"width":72,"height":72}},"Image":{"component":"image/UrlToCanvas","metadata":{"label":"Image","x":-216,"y":72,"width":72,"height":72}},"DropError":{"component":"core/Drop","metadata":{"label":"DropError","x":-216,"y":180,"width":72,"height":72}},"GetCanvas":{"component":"dom/GetElement","metadata":{"label":"GetCanvas","x":864,"y":72,"width":72,"height":72}},"FilterWhite":{"component":"mirobot/PixelsToPoints","metadata":{"label":"FilterWhite","x":0,"y":72,"width":72,"height":72}},"MakeCircle":{"component":"canvas/MakeCircle","metadata":{"label":"MakeCircle","x":648,"y":288,"width":72,"height":72}},"Fill":{"component":"canvas/Fill","metadata":{"label":"Fill","x":756,"y":288,"width":72,"height":72}},"GetEdges":{"component":"image/GetCannyEdges","metadata":{"label":"GetEdges","x":-108,"y":72,"width":72,"height":72}},"SolveTSP":{"component":"mirobot/TSP","metadata":{"label":"SolveTSP","x":216,"y":0,"width":72,"height":72}},"MakePath":{"component":"canvas/MakePath","metadata":{"label":"MakePath","x":108,"y":72,"width":72,"height":72}},"MakePath_kp03g":{"component":"canvas/MakePath","metadata":{"label":"MakePath","x":324,"y":0,"width":72,"height":72}},"Stroke":{"component":"canvas/Stroke","metadata":{"label":"Stroke","x":756,"y":180,"width":72,"height":72}},"PointsToPolar":{"component":"mirobot/PointsToPolar","metadata":{"label":"PointsToPolar","x":432,"y":468,"width":72,"height":72}},"ProcessCommands":{"component":"mirobot/ProcessCommands","metadata":{"label":"ProcessCommands","x":576,"y":468,"width":72,"height":72}},"mirobot/Left_bkygc":{"component":"mirobot/Left","metadata":{"label":"mirobot/Left","x":216,"y":540,"width":72,"height":72}},"Output":{"component":"core/Output","metadata":{"label":"Output","x":900,"y":504,"width":72,"height":72}},"mirobot/Right_eavcp":{"component":"mirobot/Right","metadata":{"label":"mirobot/Right","x":216,"y":648,"width":72,"height":72}},"mirobot/SendCommand_7r5z2":{"component":"mirobot/SendCommand","metadata":{"label":"mirobot/SendCommand","x":756,"y":540,"width":72,"height":72}},"mirobot/GetMirobotLib_yb3su":{"component":"mirobot/GetMirobotLib","metadata":{"label":"mirobot/GetMirobotLib","x":612,"y":612,"width":72,"height":72}},"core/Repeat_a68ki":{"component":"core/Repeat","metadata":{"label":"core/Repeat","x":468,"y":612,"width":72,"height":72}}},"connections":[{"src":{"process":"Image","port":"error"},"tgt":{"process":"DropError","port":"in"}},{"src":{"process":"GetCanvas","port":"element"},"tgt":{"process":"Draw","port":"canvas"}},{"src":{"process":"FilterWhite","port":"points"},"tgt":{"process":"MakeCircle","port":"center"},"metadata":{"route":0}},{"src":{"process":"MakeCircle","port":"circle"},"tgt":{"process":"Fill","port":"items"}},{"src":{"process":"Fill","port":"fill"},"tgt":{"process":"Draw","port":"commands"}},{"src":{"process":"GetEdges","port":"canvas"},"tgt":{"process":"FilterWhite","port":"image"},"metadata":{"route":null}},{"src":{"process":"FilterWhite","port":"points"},"tgt":{"process":"MakePath","port":"items"},"metadata":{"route":0}},{"src":{"process":"MakePath","port":"path"},"tgt":{"process":"SolveTSP","port":"points"}},{"src":{"process":"SolveTSP","port":"points"},"tgt":{"process":"MakePath_kp03g","port":"items"},"metadata":{"route":null}},{"src":{"process":"MakePath_kp03g","port":"path"},"tgt":{"process":"Stroke","port":"items"}},{"src":{"process":"Stroke","port":"stroke"},"tgt":{"process":"Draw","port":"commands"}},{"src":{"process":"Image","port":"canvas"},"tgt":{"process":"GetEdges","port":"canvas"},"metadata":{"route":null}},{"src":{"process":"MakePath_kp03g","port":"path"},"tgt":{"process":"PointsToPolar","port":"points"},"metadata":{"route":0}},{"src":{"process":"PointsToPolar","port":"polar"},"tgt":{"process":"ProcessCommands","port":"commands"}},{"src":{"process":"core/Repeat_a68ki","port":"out"},"tgt":{"process":"mirobot/GetMirobotLib_yb3su","port":"bang"},"metadata":{}},{"src":{"process":"mirobot/GetMirobotLib_yb3su","port":"lib"},"tgt":{"process":"mirobot/SendCommand_7r5z2","port":"lib"},"metadata":{}},{"src":{"process":"mirobot/SendCommand_7r5z2","port":"completed"},"tgt":{"process":"ProcessCommands","port":"next"},"metadata":{}},{"src":{"process":"ProcessCommands","port":"command"},"tgt":{"process":"mirobot/SendCommand_7r5z2","port":"command"},"metadata":{}},{"src":{"process":"mirobot/SendCommand_7r5z2","port":"connected"},"tgt":{"process":"Output","port":"in"},"metadata":{}},{"src":{"process":"mirobot/SendCommand_7r5z2","port":"disconnected"},"tgt":{"process":"Output","port":"in"},"metadata":{}},{"data":true,"tgt":{"process":"Draw","port":"drawevery"}},{"data":true,"tgt":{"process":"Draw","port":"clearevery"}},{"data":"#c","tgt":{"process":"GetCanvas","port":"selector"}},{"data":"Anonymous","tgt":{"process":"Image","port":"crossorigin"}},{"data":"#00ff00","tgt":{"process":"Fill","port":"fillstyle"}},{"data":true,"tgt":{"process":"FilterWhite","port":"shuffle"}},{"data":2,"tgt":{"process":"MakeCircle","port":"radius"}},{"data":2,"tgt":{"process":"GetEdges","port":"low"}},{"data":10,"tgt":{"process":"GetEdges","port":"high"}},{"data":5,"tgt":{"process":"GetEdges","port":"kernel"}},{"data":255,"tgt":{"process":"FilterWhite","port":"level"}},{"data":"#fff","tgt":{"process":"Stroke","port":"strokestyle"}},{"data":1,"tgt":{"process":"Stroke","port":"linewidth"}},{"data":20,"tgt":{"process":"mirobot/Left_bkygc","port":"angle"}},{"data":20,"tgt":{"process":"mirobot/Right_eavcp","port":"right"}},{"data":100,"tgt":{"process":"FilterWhite","port":"size"}},{"data":" https://i.imgur.com/Jpq8YGi.png","tgt":{"process":"Image","port":"url"}},{"data":"dummy","tgt":{"process":"core/Repeat_a68ki","port":"in"}},{"data":"ws://10.10.100.254:8899/websocket","tgt":{"process":"mirobot/SendCommand_7r5z2","port":"url"}}]}');
});
require.register("noflo-mirobot/graphs/DrawPoints.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"DrawPoints","id":"noflo-mirobot_graphs_DrawPoints","project":"noflo-mirobot","environment":{"type":"noflo-browser","content":"<canvas id=\\"c\\" width=\\"200\\" height=\\"200\\"></canvas>\\n<button id=\\"connectButton\\">Connect</button>\\n<button id=\\"sendButton\\">Start</button>\\n<button id=\\"clearButton\\">Clear</button>\\n<p id=\\"status\\"></p>"},"changed":false,"icon":"","sha":"883f0b129c19ffe561d6885eae7a2ef809520c52"},"inports":{},"outports":{},"groups":[],"processes":{"canvas/Draw_wicpv":{"component":"canvas/Draw","metadata":{"label":"canvas/Draw","x":1584,"y":180,"width":72,"height":72}},"dom/GetElement_zz4rq":{"component":"dom/GetElement","metadata":{"label":"dom/GetElement","x":468,"y":0,"width":72,"height":72}},"interaction/ReadCoordinates_2ocub":{"component":"interaction/ReadCoordinates","metadata":{"label":"interaction/ReadCoordinates","x":792,"y":72,"width":72,"height":72}},"dom/Listen_nha6s":{"component":"dom/Listen","metadata":{"label":"dom/Listen","x":612,"y":72,"width":72,"height":72}},"canvas/MakeCircle_2fgfk":{"component":"canvas/MakeCircle","metadata":{"label":"canvas/MakeCircle","x":1080,"y":180,"width":72,"height":72}},"canvas/Fill_52nqr":{"component":"canvas/Fill","metadata":{"label":"canvas/Fill","x":1224,"y":180,"width":72,"height":72}},"canvas/MakePath_8hr15":{"component":"canvas/MakePath","metadata":{"label":"canvas/MakePath","x":1224,"y":288,"width":72,"height":72}},"canvas/Stroke_xnlrz":{"component":"canvas/Stroke","metadata":{"label":"canvas/Stroke","x":1368,"y":288,"width":72,"height":72}},"MakePoint":{"component":"core/MakeFunction","metadata":{"label":"MakePoint","x":900,"y":180,"width":72,"height":72}},"mirobot/Array_5i69q":{"component":"mirobot/Array","metadata":{"label":"mirobot/Array","x":1080,"y":288,"width":72,"height":72}},"mirobot/ProcessCommands_bv8yi":{"component":"mirobot/ProcessCommands","metadata":{"label":"mirobot/ProcessCommands","x":1080,"y":468,"width":72,"height":72}},"mirobot/SendCommand_15fsp":{"component":"mirobot/SendCommand","metadata":{"label":"mirobot/SendCommand","x":1296,"y":504,"width":72,"height":72}},"core/Drop_8r4gr":{"component":"core/Drop","metadata":{"label":"core/Drop","x":1476,"y":648,"width":72,"height":72}},"mirobot/Array_8iyre":{"component":"mirobot/Array","metadata":{"label":"mirobot/Array","x":792,"y":468,"width":72,"height":72}},"mirobot/PointsToPolar_1ss44":{"component":"mirobot/PointsToPolar","metadata":{"label":"mirobot/PointsToPolar","x":936,"y":468,"width":72,"height":72}},"NextPls":{"component":"core/Kick","metadata":{"label":"NextPls","x":972,"y":576,"width":72,"height":72}},"SendCmds":{"component":"core/Kick","metadata":{"label":"SendCmds","x":648,"y":432,"width":72,"height":72}},"mirobot/GetMirobotLib_l0tku":{"component":"mirobot/GetMirobotLib","metadata":{"label":"mirobot/GetMirobotLib","x":1188,"y":792,"width":72,"height":72}},"core/Repeat_subwe":{"component":"core/Repeat","metadata":{"label":"core/Repeat","x":972,"y":828,"width":72,"height":72}},"ConnectPls":{"component":"core/Kick","metadata":{"label":"ConnectPls","x":972,"y":684,"width":72,"height":72}},"dom/GetElement_paqie":{"component":"dom/GetElement","metadata":{"label":"dom/GetElement","x":504,"y":576,"width":72,"height":72}},"interaction/ListenMouse_2uodb":{"component":"interaction/ListenMouse","metadata":{"label":"interaction/ListenMouse","x":648,"y":612,"width":72,"height":72}},"core/Output_uktbq":{"component":"core/Output","metadata":{"label":"core/Output","x":648,"y":936,"width":72,"height":72}},"dom/GetElement_r2dgi":{"component":"dom/GetElement","metadata":{"label":"dom/GetElement","x":468,"y":720,"width":72,"height":72}},"interaction/ListenMouse_g1lon":{"component":"interaction/ListenMouse","metadata":{"label":"interaction/ListenMouse","x":684,"y":756,"width":72,"height":72}},"dom/GetElement_3hc7s":{"component":"dom/GetElement","metadata":{"label":"dom/GetElement","x":1512,"y":396,"width":72,"height":72}},"dom/WriteHtml_b5khn":{"component":"dom/WriteHtml","metadata":{"label":"dom/WriteHtml","x":1620,"y":504,"width":72,"height":72}},"core/Repeat_3638i":{"component":"core/Repeat","metadata":{"label":"core/Repeat","x":648,"y":252,"width":72,"height":72}},"dom/GetElement_hr1tv":{"component":"dom/GetElement","metadata":{"label":"dom/GetElement","x":288,"y":252,"width":72,"height":72}},"interaction/ListenMouse_dyurx":{"component":"interaction/ListenMouse","metadata":{"label":"interaction/ListenMouse","x":468,"y":252,"width":72,"height":72}}},"connections":[{"src":{"process":"dom/GetElement_zz4rq","port":"element"},"tgt":{"process":"canvas/Draw_wicpv","port":"canvas"}},{"src":{"process":"dom/Listen_nha6s","port":"event"},"tgt":{"process":"interaction/ReadCoordinates_2ocub","port":"event"}},{"src":{"process":"interaction/ReadCoordinates_2ocub","port":"client"},"tgt":{"process":"canvas/MakeCircle_2fgfk","port":"center"}},{"src":{"process":"dom/GetElement_zz4rq","port":"element"},"tgt":{"process":"dom/Listen_nha6s","port":"element"},"metadata":{"route":0}},{"src":{"process":"canvas/MakeCircle_2fgfk","port":"circle"},"tgt":{"process":"canvas/Fill_52nqr","port":"items"}},{"src":{"process":"canvas/Fill_52nqr","port":"fill"},"tgt":{"process":"canvas/Draw_wicpv","port":"commands"}},{"src":{"process":"canvas/MakePath_8hr15","port":"path"},"tgt":{"process":"canvas/Stroke_xnlrz","port":"items"}},{"src":{"process":"canvas/Stroke_xnlrz","port":"stroke"},"tgt":{"process":"canvas/Draw_wicpv","port":"commands"}},{"src":{"process":"interaction/ReadCoordinates_2ocub","port":"client"},"tgt":{"process":"MakePoint","port":"in"},"metadata":{"route":0}},{"src":{"process":"mirobot/Array_5i69q","port":"array"},"tgt":{"process":"canvas/MakePath_8hr15","port":"items"},"metadata":{"route":null}},{"src":{"process":"MakePoint","port":"out"},"tgt":{"process":"mirobot/Array_5i69q","port":"points"},"metadata":{"route":0}},{"src":{"process":"MakePoint","port":"out"},"tgt":{"process":"mirobot/Array_5i69q","port":"send"},"metadata":{"route":0}},{"src":{"process":"mirobot/SendCommand_15fsp","port":"completed"},"tgt":{"process":"mirobot/ProcessCommands_bv8yi","port":"next"}},{"src":{"process":"interaction/ReadCoordinates_2ocub","port":"client"},"tgt":{"process":"mirobot/Array_8iyre","port":"points"},"metadata":{"route":0}},{"src":{"process":"mirobot/Array_8iyre","port":"array"},"tgt":{"process":"mirobot/PointsToPolar_1ss44","port":"points"},"metadata":{"route":null}},{"src":{"process":"mirobot/PointsToPolar_1ss44","port":"polar"},"tgt":{"process":"mirobot/ProcessCommands_bv8yi","port":"commands"}},{"src":{"process":"NextPls","port":"out"},"tgt":{"process":"mirobot/ProcessCommands_bv8yi","port":"next"}},{"src":{"process":"SendCmds","port":"out"},"tgt":{"process":"mirobot/Array_8iyre","port":"send"}},{"src":{"process":"core/Repeat_subwe","port":"out"},"tgt":{"process":"mirobot/GetMirobotLib_l0tku","port":"bang"},"metadata":{}},{"src":{"process":"mirobot/GetMirobotLib_l0tku","port":"lib"},"tgt":{"process":"mirobot/SendCommand_15fsp","port":"lib"},"metadata":{}},{"src":{"process":"mirobot/ProcessCommands_bv8yi","port":"command"},"tgt":{"process":"mirobot/SendCommand_15fsp","port":"command"},"metadata":{}},{"src":{"process":"ConnectPls","port":"out"},"tgt":{"process":"mirobot/SendCommand_15fsp","port":"url"},"metadata":{}},{"src":{"process":"mirobot/ProcessCommands_bv8yi","port":"path"},"tgt":{"process":"core/Drop_8r4gr","port":"in"},"metadata":{}},{"src":{"process":"dom/GetElement_paqie","port":"element"},"tgt":{"process":"interaction/ListenMouse_2uodb","port":"element"},"metadata":{}},{"src":{"process":"dom/GetElement_paqie","port":"error"},"tgt":{"process":"core/Output_uktbq","port":"in"},"metadata":{"route":1}},{"src":{"process":"interaction/ListenMouse_2uodb","port":"click"},"tgt":{"process":"ConnectPls","port":"in"},"metadata":{}},{"src":{"process":"dom/GetElement_r2dgi","port":"element"},"tgt":{"process":"interaction/ListenMouse_g1lon","port":"element"},"metadata":{}},{"src":{"process":"dom/GetElement_r2dgi","port":"error"},"tgt":{"process":"core/Output_uktbq","port":"in"},"metadata":{"route":1}},{"src":{"process":"interaction/ListenMouse_g1lon","port":"click"},"tgt":{"process":"SendCmds","port":"in"},"metadata":{}},{"src":{"process":"interaction/ListenMouse_g1lon","port":"click"},"tgt":{"process":"NextPls","port":"in"},"metadata":{"route":0}},{"src":{"process":"dom/GetElement_3hc7s","port":"element"},"tgt":{"process":"dom/WriteHtml_b5khn","port":"container"},"metadata":{}},{"src":{"process":"mirobot/SendCommand_15fsp","port":"connected"},"tgt":{"process":"dom/WriteHtml_b5khn","port":"html"},"metadata":{}},{"src":{"process":"mirobot/SendCommand_15fsp","port":"disconnected"},"tgt":{"process":"dom/WriteHtml_b5khn","port":"html"},"metadata":{}},{"src":{"process":"core/Repeat_3638i","port":"out"},"tgt":{"process":"mirobot/Array_8iyre","port":"clean"},"metadata":{}},{"src":{"process":"core/Repeat_3638i","port":"out"},"tgt":{"process":"mirobot/Array_5i69q","port":"clean"},"metadata":{"route":0}},{"src":{"process":"dom/GetElement_hr1tv","port":"element"},"tgt":{"process":"interaction/ListenMouse_dyurx","port":"element"},"metadata":{}},{"src":{"process":"interaction/ListenMouse_dyurx","port":"click"},"tgt":{"process":"core/Repeat_3638i","port":"in"},"metadata":{}},{"data":"#c","tgt":{"process":"dom/GetElement_zz4rq","port":"selector"}},{"data":true,"tgt":{"process":"canvas/Draw_wicpv","port":"drawevery"}},{"data":2,"tgt":{"process":"canvas/MakeCircle_2fgfk","port":"radius"}},{"data":"click","tgt":{"process":"dom/Listen_nha6s","port":"type"}},{"data":"#00ff00","tgt":{"process":"canvas/Fill_52nqr","port":"fillstyle"}},{"data":"#fff","tgt":{"process":"canvas/Stroke_xnlrz","port":"strokestyle"}},{"data":1,"tgt":{"process":"canvas/Stroke_xnlrz","port":"linewidth"}},{"data":"return {\\"type\\": \\"point\\", \\"x\\": x.x, \\"y\\": x.y};","tgt":{"process":"MakePoint","port":"function"}},{"data":"f","tgt":{"process":"SendCmds","port":"data"}},{"data":"j","tgt":{"process":"core/Repeat_subwe","port":"in"}},{"data":"ws://10.10.100.254:8899/websocket","tgt":{"process":"ConnectPls","port":"data"}},{"data":"h","tgt":{"process":"NextPls","port":"data"}},{"data":"#connectButton","tgt":{"process":"dom/GetElement_paqie","port":"selector"}},{"data":"#sendButton","tgt":{"process":"dom/GetElement_r2dgi","port":"selector"}},{"data":"#status","tgt":{"process":"dom/GetElement_3hc7s","port":"selector"}},{"data":"#clearButton","tgt":{"process":"dom/GetElement_hr1tv","port":"selector"}},{"data":true,"tgt":{"process":"canvas/Draw_wicpv","port":"clearevery"}}]}');
});
require.register("noflo-mirobot/component.json", function(exports, require, module){
module.exports = JSON.parse('{"name":"noflo-mirobot","description":"Components for Mirobot.","author":"Vilson Vieira <vilson@void.cc>","repo":"vilson/noflo-mirobot","version":"0.1.0","keywords":[],"dependencies":{"noflo/noflo":"*","noflo/noflo-dom":"*","noflo/noflo-core":"*","noflo/noflo-interaction":"*","noflo/noflo-runtime-webrtc":"*","noflo/noflo-image":"*"},"scripts":["index.js","vendor/mirobot.js","components/ControlMirobot.js","components/ControlVerticalMirobot.js","components/Forward.js","components/Repeat.js","components/Back.js","components/Left.js","components/Pause.js","components/Pendown.js","components/Penup.js","components/PixelsToPoints.js","components/Right.js","components/PointsToPolar.js","components/Dither.js","components/FloydSteinberg.js","components/BlackAndWhiteFilter.js","components/ThresholdFilter.js","components/TSP.js","components/PreviewCommand.js","components/ProcessCommands.js","components/SendCommand.js","components/Array.js","components/EstimateTime.js","components/GetMirobotLib.js","graphs/DrawImage.json","graphs/DrawPoints.json"],"json":["component.json","graphs/DrawImage.json","graphs/DrawPoints.json"],"noflo":{"components":{"Array":"components/Array.js","Back":"components/Back.js","BlackAndWhiteFilter":"components/BlackAndWhiteFilter.js","ControlMirobot":"components/ControlMirobot.js","ControlVerticalMirobot":"components/ControlVerticalMirobot.js","Dither":"components/Dither.js","EstimateTime":"components/EstimateTime.js","FloydSteinberg":"components/FloydSteinberg.js","Forward":"components/Forward.js","GetMirobotLib":"components/GetMirobotLib.js","Left":"components/Left.js","Pause":"components/Pause.js","Pendown":"components/Pendown.js","Penup":"components/Penup.js","PixelsToPoints":"components/PixelsToPoints.js","PointsToPolar":"components/PointsToPolar.js","PreviewCommand":"components/PreviewCommand.js","ProcessCommands":"components/ProcessCommands.js","Repeat":"components/Repeat.js","Right":"components/Right.js","SendCommand":"components/SendCommand.js","TSP":"components/TSP.js","ThresholdFilter":"components/ThresholdFilter.js"},"graphs":{"DrawImage":"graphs/DrawImage.json","noflo-mirobot_graphs_DrawPoints":"graphs/DrawPoints.json"}}}');
});
require.register("noflo-mirobot/graphs/DrawImage.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"DrawImage","environment":{"type":"noflo-browser","content":"<canvas id=\\"c\\" width=\\"400\\" height=\\"400\\"></canvas>"},"icon":""},"inports":{},"outports":{},"groups":[],"processes":{"Draw":{"component":"canvas/Draw","metadata":{"label":"Draw","x":864,"y":180,"width":72,"height":72}},"Image":{"component":"image/UrlToCanvas","metadata":{"label":"Image","x":-216,"y":72,"width":72,"height":72}},"DropError":{"component":"core/Drop","metadata":{"label":"DropError","x":-216,"y":180,"width":72,"height":72}},"GetCanvas":{"component":"dom/GetElement","metadata":{"label":"GetCanvas","x":864,"y":72,"width":72,"height":72}},"FilterWhite":{"component":"mirobot/PixelsToPoints","metadata":{"label":"FilterWhite","x":0,"y":72,"width":72,"height":72}},"MakeCircle":{"component":"canvas/MakeCircle","metadata":{"label":"MakeCircle","x":648,"y":288,"width":72,"height":72}},"Fill":{"component":"canvas/Fill","metadata":{"label":"Fill","x":756,"y":288,"width":72,"height":72}},"GetEdges":{"component":"image/GetCannyEdges","metadata":{"label":"GetEdges","x":-108,"y":72,"width":72,"height":72}},"SolveTSP":{"component":"mirobot/TSP","metadata":{"label":"SolveTSP","x":216,"y":0,"width":72,"height":72}},"MakePath":{"component":"canvas/MakePath","metadata":{"label":"MakePath","x":108,"y":72,"width":72,"height":72}},"MakePath_kp03g":{"component":"canvas/MakePath","metadata":{"label":"MakePath","x":324,"y":0,"width":72,"height":72}},"Stroke":{"component":"canvas/Stroke","metadata":{"label":"Stroke","x":756,"y":180,"width":72,"height":72}},"PointsToPolar":{"component":"mirobot/PointsToPolar","metadata":{"label":"PointsToPolar","x":432,"y":468,"width":72,"height":72}},"ProcessCommands":{"component":"mirobot/ProcessCommands","metadata":{"label":"ProcessCommands","x":576,"y":468,"width":72,"height":72}},"mirobot/Left_bkygc":{"component":"mirobot/Left","metadata":{"label":"mirobot/Left","x":216,"y":540,"width":72,"height":72}},"Output":{"component":"core/Output","metadata":{"label":"Output","x":900,"y":504,"width":72,"height":72}},"mirobot/Right_eavcp":{"component":"mirobot/Right","metadata":{"label":"mirobot/Right","x":216,"y":648,"width":72,"height":72}},"mirobot/SendCommand_7r5z2":{"component":"mirobot/SendCommand","metadata":{"label":"mirobot/SendCommand","x":756,"y":540,"width":72,"height":72}},"mirobot/GetMirobotLib_yb3su":{"component":"mirobot/GetMirobotLib","metadata":{"label":"mirobot/GetMirobotLib","x":612,"y":612,"width":72,"height":72}},"core/Repeat_a68ki":{"component":"core/Repeat","metadata":{"label":"core/Repeat","x":468,"y":612,"width":72,"height":72}}},"connections":[{"src":{"process":"Image","port":"error"},"tgt":{"process":"DropError","port":"in"}},{"src":{"process":"GetCanvas","port":"element"},"tgt":{"process":"Draw","port":"canvas"}},{"src":{"process":"FilterWhite","port":"points"},"tgt":{"process":"MakeCircle","port":"center"},"metadata":{"route":0}},{"src":{"process":"MakeCircle","port":"circle"},"tgt":{"process":"Fill","port":"items"}},{"src":{"process":"Fill","port":"fill"},"tgt":{"process":"Draw","port":"commands"}},{"src":{"process":"GetEdges","port":"canvas"},"tgt":{"process":"FilterWhite","port":"image"},"metadata":{"route":null}},{"src":{"process":"FilterWhite","port":"points"},"tgt":{"process":"MakePath","port":"items"},"metadata":{"route":0}},{"src":{"process":"MakePath","port":"path"},"tgt":{"process":"SolveTSP","port":"points"}},{"src":{"process":"SolveTSP","port":"points"},"tgt":{"process":"MakePath_kp03g","port":"items"},"metadata":{"route":null}},{"src":{"process":"MakePath_kp03g","port":"path"},"tgt":{"process":"Stroke","port":"items"}},{"src":{"process":"Stroke","port":"stroke"},"tgt":{"process":"Draw","port":"commands"}},{"src":{"process":"Image","port":"canvas"},"tgt":{"process":"GetEdges","port":"canvas"},"metadata":{"route":null}},{"src":{"process":"MakePath_kp03g","port":"path"},"tgt":{"process":"PointsToPolar","port":"points"},"metadata":{"route":0}},{"src":{"process":"PointsToPolar","port":"polar"},"tgt":{"process":"ProcessCommands","port":"commands"}},{"src":{"process":"core/Repeat_a68ki","port":"out"},"tgt":{"process":"mirobot/GetMirobotLib_yb3su","port":"bang"},"metadata":{}},{"src":{"process":"mirobot/GetMirobotLib_yb3su","port":"lib"},"tgt":{"process":"mirobot/SendCommand_7r5z2","port":"lib"},"metadata":{}},{"src":{"process":"mirobot/SendCommand_7r5z2","port":"completed"},"tgt":{"process":"ProcessCommands","port":"next"},"metadata":{}},{"src":{"process":"ProcessCommands","port":"command"},"tgt":{"process":"mirobot/SendCommand_7r5z2","port":"command"},"metadata":{}},{"src":{"process":"mirobot/SendCommand_7r5z2","port":"connected"},"tgt":{"process":"Output","port":"in"},"metadata":{}},{"src":{"process":"mirobot/SendCommand_7r5z2","port":"disconnected"},"tgt":{"process":"Output","port":"in"},"metadata":{}},{"data":true,"tgt":{"process":"Draw","port":"drawevery"}},{"data":true,"tgt":{"process":"Draw","port":"clearevery"}},{"data":"#c","tgt":{"process":"GetCanvas","port":"selector"}},{"data":"Anonymous","tgt":{"process":"Image","port":"crossorigin"}},{"data":"#00ff00","tgt":{"process":"Fill","port":"fillstyle"}},{"data":true,"tgt":{"process":"FilterWhite","port":"shuffle"}},{"data":2,"tgt":{"process":"MakeCircle","port":"radius"}},{"data":2,"tgt":{"process":"GetEdges","port":"low"}},{"data":10,"tgt":{"process":"GetEdges","port":"high"}},{"data":5,"tgt":{"process":"GetEdges","port":"kernel"}},{"data":255,"tgt":{"process":"FilterWhite","port":"level"}},{"data":"#fff","tgt":{"process":"Stroke","port":"strokestyle"}},{"data":1,"tgt":{"process":"Stroke","port":"linewidth"}},{"data":20,"tgt":{"process":"mirobot/Left_bkygc","port":"angle"}},{"data":20,"tgt":{"process":"mirobot/Right_eavcp","port":"right"}},{"data":100,"tgt":{"process":"FilterWhite","port":"size"}},{"data":" https://i.imgur.com/Jpq8YGi.png","tgt":{"process":"Image","port":"url"}},{"data":"dummy","tgt":{"process":"core/Repeat_a68ki","port":"in"}},{"data":"ws://10.10.100.254:8899/websocket","tgt":{"process":"mirobot/SendCommand_7r5z2","port":"url"}}]}');
});
require.register("noflo-mirobot/graphs/DrawPoints.json", function(exports, require, module){
module.exports = JSON.parse('{"properties":{"name":"DrawPoints","id":"noflo-mirobot_graphs_DrawPoints","project":"noflo-mirobot","environment":{"type":"noflo-browser","content":"<canvas id=\\"c\\" width=\\"200\\" height=\\"200\\"></canvas>\\n<button id=\\"connectButton\\">Connect</button>\\n<button id=\\"sendButton\\">Start</button>\\n<button id=\\"clearButton\\">Clear</button>\\n<p id=\\"status\\"></p>"},"changed":false,"icon":"","sha":"883f0b129c19ffe561d6885eae7a2ef809520c52"},"inports":{},"outports":{},"groups":[],"processes":{"canvas/Draw_wicpv":{"component":"canvas/Draw","metadata":{"label":"canvas/Draw","x":1584,"y":180,"width":72,"height":72}},"dom/GetElement_zz4rq":{"component":"dom/GetElement","metadata":{"label":"dom/GetElement","x":468,"y":0,"width":72,"height":72}},"interaction/ReadCoordinates_2ocub":{"component":"interaction/ReadCoordinates","metadata":{"label":"interaction/ReadCoordinates","x":792,"y":72,"width":72,"height":72}},"dom/Listen_nha6s":{"component":"dom/Listen","metadata":{"label":"dom/Listen","x":612,"y":72,"width":72,"height":72}},"canvas/MakeCircle_2fgfk":{"component":"canvas/MakeCircle","metadata":{"label":"canvas/MakeCircle","x":1080,"y":180,"width":72,"height":72}},"canvas/Fill_52nqr":{"component":"canvas/Fill","metadata":{"label":"canvas/Fill","x":1224,"y":180,"width":72,"height":72}},"canvas/MakePath_8hr15":{"component":"canvas/MakePath","metadata":{"label":"canvas/MakePath","x":1224,"y":288,"width":72,"height":72}},"canvas/Stroke_xnlrz":{"component":"canvas/Stroke","metadata":{"label":"canvas/Stroke","x":1368,"y":288,"width":72,"height":72}},"MakePoint":{"component":"core/MakeFunction","metadata":{"label":"MakePoint","x":900,"y":180,"width":72,"height":72}},"mirobot/Array_5i69q":{"component":"mirobot/Array","metadata":{"label":"mirobot/Array","x":1080,"y":288,"width":72,"height":72}},"mirobot/ProcessCommands_bv8yi":{"component":"mirobot/ProcessCommands","metadata":{"label":"mirobot/ProcessCommands","x":1080,"y":468,"width":72,"height":72}},"mirobot/SendCommand_15fsp":{"component":"mirobot/SendCommand","metadata":{"label":"mirobot/SendCommand","x":1296,"y":504,"width":72,"height":72}},"core/Drop_8r4gr":{"component":"core/Drop","metadata":{"label":"core/Drop","x":1476,"y":648,"width":72,"height":72}},"mirobot/Array_8iyre":{"component":"mirobot/Array","metadata":{"label":"mirobot/Array","x":792,"y":468,"width":72,"height":72}},"mirobot/PointsToPolar_1ss44":{"component":"mirobot/PointsToPolar","metadata":{"label":"mirobot/PointsToPolar","x":936,"y":468,"width":72,"height":72}},"NextPls":{"component":"core/Kick","metadata":{"label":"NextPls","x":972,"y":576,"width":72,"height":72}},"SendCmds":{"component":"core/Kick","metadata":{"label":"SendCmds","x":648,"y":432,"width":72,"height":72}},"mirobot/GetMirobotLib_l0tku":{"component":"mirobot/GetMirobotLib","metadata":{"label":"mirobot/GetMirobotLib","x":1188,"y":792,"width":72,"height":72}},"core/Repeat_subwe":{"component":"core/Repeat","metadata":{"label":"core/Repeat","x":972,"y":828,"width":72,"height":72}},"ConnectPls":{"component":"core/Kick","metadata":{"label":"ConnectPls","x":972,"y":684,"width":72,"height":72}},"dom/GetElement_paqie":{"component":"dom/GetElement","metadata":{"label":"dom/GetElement","x":504,"y":576,"width":72,"height":72}},"interaction/ListenMouse_2uodb":{"component":"interaction/ListenMouse","metadata":{"label":"interaction/ListenMouse","x":648,"y":612,"width":72,"height":72}},"core/Output_uktbq":{"component":"core/Output","metadata":{"label":"core/Output","x":648,"y":936,"width":72,"height":72}},"dom/GetElement_r2dgi":{"component":"dom/GetElement","metadata":{"label":"dom/GetElement","x":468,"y":720,"width":72,"height":72}},"interaction/ListenMouse_g1lon":{"component":"interaction/ListenMouse","metadata":{"label":"interaction/ListenMouse","x":684,"y":756,"width":72,"height":72}},"dom/GetElement_3hc7s":{"component":"dom/GetElement","metadata":{"label":"dom/GetElement","x":1512,"y":396,"width":72,"height":72}},"dom/WriteHtml_b5khn":{"component":"dom/WriteHtml","metadata":{"label":"dom/WriteHtml","x":1620,"y":504,"width":72,"height":72}},"core/Repeat_3638i":{"component":"core/Repeat","metadata":{"label":"core/Repeat","x":648,"y":252,"width":72,"height":72}},"dom/GetElement_hr1tv":{"component":"dom/GetElement","metadata":{"label":"dom/GetElement","x":288,"y":252,"width":72,"height":72}},"interaction/ListenMouse_dyurx":{"component":"interaction/ListenMouse","metadata":{"label":"interaction/ListenMouse","x":468,"y":252,"width":72,"height":72}}},"connections":[{"src":{"process":"dom/GetElement_zz4rq","port":"element"},"tgt":{"process":"canvas/Draw_wicpv","port":"canvas"}},{"src":{"process":"dom/Listen_nha6s","port":"event"},"tgt":{"process":"interaction/ReadCoordinates_2ocub","port":"event"}},{"src":{"process":"interaction/ReadCoordinates_2ocub","port":"client"},"tgt":{"process":"canvas/MakeCircle_2fgfk","port":"center"}},{"src":{"process":"dom/GetElement_zz4rq","port":"element"},"tgt":{"process":"dom/Listen_nha6s","port":"element"},"metadata":{"route":0}},{"src":{"process":"canvas/MakeCircle_2fgfk","port":"circle"},"tgt":{"process":"canvas/Fill_52nqr","port":"items"}},{"src":{"process":"canvas/Fill_52nqr","port":"fill"},"tgt":{"process":"canvas/Draw_wicpv","port":"commands"}},{"src":{"process":"canvas/MakePath_8hr15","port":"path"},"tgt":{"process":"canvas/Stroke_xnlrz","port":"items"}},{"src":{"process":"canvas/Stroke_xnlrz","port":"stroke"},"tgt":{"process":"canvas/Draw_wicpv","port":"commands"}},{"src":{"process":"interaction/ReadCoordinates_2ocub","port":"client"},"tgt":{"process":"MakePoint","port":"in"},"metadata":{"route":0}},{"src":{"process":"mirobot/Array_5i69q","port":"array"},"tgt":{"process":"canvas/MakePath_8hr15","port":"items"},"metadata":{"route":null}},{"src":{"process":"MakePoint","port":"out"},"tgt":{"process":"mirobot/Array_5i69q","port":"points"},"metadata":{"route":0}},{"src":{"process":"MakePoint","port":"out"},"tgt":{"process":"mirobot/Array_5i69q","port":"send"},"metadata":{"route":0}},{"src":{"process":"mirobot/SendCommand_15fsp","port":"completed"},"tgt":{"process":"mirobot/ProcessCommands_bv8yi","port":"next"}},{"src":{"process":"interaction/ReadCoordinates_2ocub","port":"client"},"tgt":{"process":"mirobot/Array_8iyre","port":"points"},"metadata":{"route":0}},{"src":{"process":"mirobot/Array_8iyre","port":"array"},"tgt":{"process":"mirobot/PointsToPolar_1ss44","port":"points"},"metadata":{"route":null}},{"src":{"process":"mirobot/PointsToPolar_1ss44","port":"polar"},"tgt":{"process":"mirobot/ProcessCommands_bv8yi","port":"commands"}},{"src":{"process":"NextPls","port":"out"},"tgt":{"process":"mirobot/ProcessCommands_bv8yi","port":"next"}},{"src":{"process":"SendCmds","port":"out"},"tgt":{"process":"mirobot/Array_8iyre","port":"send"}},{"src":{"process":"core/Repeat_subwe","port":"out"},"tgt":{"process":"mirobot/GetMirobotLib_l0tku","port":"bang"},"metadata":{}},{"src":{"process":"mirobot/GetMirobotLib_l0tku","port":"lib"},"tgt":{"process":"mirobot/SendCommand_15fsp","port":"lib"},"metadata":{}},{"src":{"process":"mirobot/ProcessCommands_bv8yi","port":"command"},"tgt":{"process":"mirobot/SendCommand_15fsp","port":"command"},"metadata":{}},{"src":{"process":"ConnectPls","port":"out"},"tgt":{"process":"mirobot/SendCommand_15fsp","port":"url"},"metadata":{}},{"src":{"process":"mirobot/ProcessCommands_bv8yi","port":"path"},"tgt":{"process":"core/Drop_8r4gr","port":"in"},"metadata":{}},{"src":{"process":"dom/GetElement_paqie","port":"element"},"tgt":{"process":"interaction/ListenMouse_2uodb","port":"element"},"metadata":{}},{"src":{"process":"dom/GetElement_paqie","port":"error"},"tgt":{"process":"core/Output_uktbq","port":"in"},"metadata":{"route":1}},{"src":{"process":"interaction/ListenMouse_2uodb","port":"click"},"tgt":{"process":"ConnectPls","port":"in"},"metadata":{}},{"src":{"process":"dom/GetElement_r2dgi","port":"element"},"tgt":{"process":"interaction/ListenMouse_g1lon","port":"element"},"metadata":{}},{"src":{"process":"dom/GetElement_r2dgi","port":"error"},"tgt":{"process":"core/Output_uktbq","port":"in"},"metadata":{"route":1}},{"src":{"process":"interaction/ListenMouse_g1lon","port":"click"},"tgt":{"process":"SendCmds","port":"in"},"metadata":{}},{"src":{"process":"interaction/ListenMouse_g1lon","port":"click"},"tgt":{"process":"NextPls","port":"in"},"metadata":{"route":0}},{"src":{"process":"dom/GetElement_3hc7s","port":"element"},"tgt":{"process":"dom/WriteHtml_b5khn","port":"container"},"metadata":{}},{"src":{"process":"mirobot/SendCommand_15fsp","port":"connected"},"tgt":{"process":"dom/WriteHtml_b5khn","port":"html"},"metadata":{}},{"src":{"process":"mirobot/SendCommand_15fsp","port":"disconnected"},"tgt":{"process":"dom/WriteHtml_b5khn","port":"html"},"metadata":{}},{"src":{"process":"core/Repeat_3638i","port":"out"},"tgt":{"process":"mirobot/Array_8iyre","port":"clean"},"metadata":{}},{"src":{"process":"core/Repeat_3638i","port":"out"},"tgt":{"process":"mirobot/Array_5i69q","port":"clean"},"metadata":{"route":0}},{"src":{"process":"dom/GetElement_hr1tv","port":"element"},"tgt":{"process":"interaction/ListenMouse_dyurx","port":"element"},"metadata":{}},{"src":{"process":"interaction/ListenMouse_dyurx","port":"click"},"tgt":{"process":"core/Repeat_3638i","port":"in"},"metadata":{}},{"data":"#c","tgt":{"process":"dom/GetElement_zz4rq","port":"selector"}},{"data":true,"tgt":{"process":"canvas/Draw_wicpv","port":"drawevery"}},{"data":2,"tgt":{"process":"canvas/MakeCircle_2fgfk","port":"radius"}},{"data":"click","tgt":{"process":"dom/Listen_nha6s","port":"type"}},{"data":"#00ff00","tgt":{"process":"canvas/Fill_52nqr","port":"fillstyle"}},{"data":"#fff","tgt":{"process":"canvas/Stroke_xnlrz","port":"strokestyle"}},{"data":1,"tgt":{"process":"canvas/Stroke_xnlrz","port":"linewidth"}},{"data":"return {\\"type\\": \\"point\\", \\"x\\": x.x, \\"y\\": x.y};","tgt":{"process":"MakePoint","port":"function"}},{"data":"f","tgt":{"process":"SendCmds","port":"data"}},{"data":"j","tgt":{"process":"core/Repeat_subwe","port":"in"}},{"data":"ws://10.10.100.254:8899/websocket","tgt":{"process":"ConnectPls","port":"data"}},{"data":"h","tgt":{"process":"NextPls","port":"data"}},{"data":"#connectButton","tgt":{"process":"dom/GetElement_paqie","port":"selector"}},{"data":"#sendButton","tgt":{"process":"dom/GetElement_r2dgi","port":"selector"}},{"data":"#status","tgt":{"process":"dom/GetElement_3hc7s","port":"selector"}},{"data":"#clearButton","tgt":{"process":"dom/GetElement_hr1tv","port":"selector"}},{"data":true,"tgt":{"process":"canvas/Draw_wicpv","port":"clearevery"}}]}');
});
require.register("noflo-mirobot/components/ControlMirobot.js", function(exports, require, module){
var ControlMirobot, Mirobot, noflo, sleep,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Mirobot = null;

sleep = function(ms) {
  var start, _results;
  start = new Date().getTime();
  _results = [];
  while (new Date().getTime() - start < ms) {
    continue;
  }
  return _results;
};

ControlMirobot = (function(_super) {
  __extends(ControlMirobot, _super);

  ControlMirobot.prototype.description = 'Control Mirobot.';

  ControlMirobot.prototype.icon = 'pencil';

  function ControlMirobot() {
    this.right = __bind(this.right, this);
    this.left = __bind(this.left, this);
    this.back = __bind(this.back, this);
    this.forward = __bind(this.forward, this);
    this.drawCommand = __bind(this.drawCommand, this);
    this.Mirobot = null;
    this.url = null;
    this.mirobot = null;
    this.commands = [];
    this.points = [];
    this.inPorts = {
      url: new noflo.Port('string'),
      start: new noflo.Port('bang'),
      stop: new noflo.Port('bang'),
      commands: new noflo.ArrayPort('object'),
      points: new noflo.Port('object'),
      lib: new noflo.Port('object')
    };
    this.outPorts = {
      path: new noflo.Port('object')
    };
    this.inPorts.lib.on('data', (function(_this) {
      return function(Mirobot) {
        _this.Mirobot = Mirobot;
      };
    })(this));
    this.inPorts.url.on('data', (function(_this) {
      return function(data) {
        _this.commands = [];
        _this.url = data;
        if (_this.mirobot == null) {
          console.log('Connecting on', _this.url);
          return _this.mirobot = new _this.Mirobot(_this.url);
        }
      };
    })(this));
    this.inPorts.start.on('data', (function(_this) {
      return function(data) {
        if (_this.mirobot != null) {
          return _this.parseThing(_this.commands, 0);
        }
      };
    })(this));
    this.inPorts.stop.on('data', (function(_this) {
      return function(data) {
        _this.commands = [];
        if (_this.mirobot != null) {
          return _this.mirobot.stop();
        }
      };
    })(this));
    this.inPorts.commands.on('data', (function(_this) {
      return function(cmd, i) {
        return _this.commands[i] = cmd;
      };
    })(this));
    this.inPorts.points.on('data', (function(_this) {
      return function(data) {
        return _this.points = data.items;
      };
    })(this));
  }

  ControlMirobot.prototype.parseThing = function(thing, currentPoint) {
    var i, item, _i, _len, _results;
    if ((thing != null) && (thing.cmd != null) && (this[thing.cmd] != null)) {
      return this[thing.cmd](thing, currentPoint);
    } else if (thing instanceof Array) {
      _results = [];
      for (i = _i = 0, _len = thing.length; _i < _len; i = ++_i) {
        item = thing[i];
        if (item == null) {
          continue;
        }
        _results.push(this.parseThing(item, i));
      }
      return _results;
    }
  };

  ControlMirobot.prototype.drawCommand = function(position) {
    var path;
    if (!this.inPorts.points.isAttached()) {
      return;
    }
    if (!this.outPorts.path.isAttached()) {
      return;
    }
    if (position < this.points.length - 1) {
      path = [];
      path.push(this.points[position]);
      path.push(this.points[position + 1]);
      return this.outPorts.path.send(path);
    }
  };

  ControlMirobot.prototype.forward = function(distance, currentPoint) {
    this.setIcon('arrow-up');
    return this.mirobot.move('forward', distance.arg, (function(_this) {
      return function(state, msg, recursion) {};
    })(this));
  };

  ControlMirobot.prototype.back = function(distance, currentPoint) {
    this.setIcon('arrow-down');
    return this.mirobot.move('back', distance.arg, (function(_this) {
      return function(state, msg, recursion) {};
    })(this));
  };

  ControlMirobot.prototype.left = function(angle, currentPoint) {
    this.setIcon('mail-reply');
    return this.mirobot.turn('left', angle.arg, (function(_this) {
      return function(state, msg, recursion) {};
    })(this));
  };

  ControlMirobot.prototype.right = function(angle, currentPoint) {
    this.setIcon('mail-forward');
    return this.mirobot.turn('right', angle.arg, (function(_this) {
      return function(state, msg, recursion) {};
    })(this));
  };

  ControlMirobot.prototype.pause = function() {
    return this.mirobot.pause();
  };

  ControlMirobot.prototype.resume = function() {
    return this.mirobot.resume();
  };

  ControlMirobot.prototype.ping = function() {
    return this.mirobot.ping();
  };

  ControlMirobot.prototype.penup = function() {
    return this.mirobot.penup();
  };

  ControlMirobot.prototype.pendown = function() {
    return this.mirobot.pendown();
  };

  return ControlMirobot;

})(noflo.Component);

exports.getComponent = function() {
  return new ControlMirobot;
};

});
require.register("noflo-mirobot/components/ControlVerticalMirobot.js", function(exports, require, module){
var ControlVerticalMirobot, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ControlVerticalMirobot = (function(_super) {
  var description, icon;

  __extends(ControlVerticalMirobot, _super);

  icon = 'cog';

  description = 'Send commands to Vertical Mirobot through WebSockets.';

  function ControlVerticalMirobot() {
    this.setup = __bind(this.setup, this);
    this.sendNext = __bind(this.sendNext, this);
    this.send = __bind(this.send, this);
    this.point = __bind(this.point, this);
    this.path = __bind(this.path, this);
    this.pathItem = __bind(this.pathItem, this);
    this.stroke = __bind(this.stroke, this);
    this.parseThing = __bind(this.parseThing, this);
    this.parse = __bind(this.parse, this);
    this.socket = null;
    this.commandsCounter = 0;
    this.toRobot = [];
    this.commands = [];
    this.inPorts = {
      url: new noflo.Port('string'),
      send: new noflo.Port('bang'),
      commands: new noflo.ArrayPort('object'),
      rawcommand: new noflo.Port('string'),
      gohome: new noflo.Port('bang'),
      sethome: new noflo.Port('bang'),
      penup: new noflo.Port('bang'),
      pendown: new noflo.Port('bang')
    };
    this.inPorts.url.on('data', (function(_this) {
      return function(data) {
        var socket;
        socket = new WebSocket(data);
        console.log('socket created', socket);
        socket.onopen = function() {
          _this.socket = socket;
          console.log('socket opened', socket);
          _this.setup();
          return console.log('bot setup done');
        };
        return socket.addEventListener('message', function(m) {
          console.log('received from arduino', m, ' sending next command');
          return _this.sendNext();
        });
      };
    })(this));
    this.inPorts.send.on('data', (function(_this) {
      return function() {
        _this.parse(_this.commands);
        return _this.sendNext();
      };
    })(this));
    this.inPorts.commands.on('data', (function(_this) {
      return function(commands, i) {
        return _this.commands[i] = commands;
      };
    })(this));
    this.inPorts.rawcommand.on('data', (function(_this) {
      return function(commands) {
        return _this.send(commands);
      };
    })(this));
    this.inPorts.gohome.on('data', (function(_this) {
      return function() {
        var feed_rate;
        feed_rate = 2000;
        _this.send('G00 F' + feed_rate + ' X0 Y0;');
        return _this.send('M114;');
      };
    })(this));
    this.inPorts.sethome.on('data', (function(_this) {
      return function() {
        if (_this.socket == null) {
          return;
        }
        return _this.send('TELEPORT X0 Y0 Z0;');
      };
    })(this));
    this.inPorts.penup.on('data', (function(_this) {
      return function() {
        if (_this.socket == null) {
          return;
        }
        return _this.send('G00 Z90;');
      };
    })(this));
    this.inPorts.pendown.on('data', (function(_this) {
      return function() {
        if (_this.socket == null) {
          return;
        }
        return _this.send('G00 Z0;');
      };
    })(this));
  }

  ControlVerticalMirobot.prototype.parse = function(commands) {
    console.log('parse', commands);
    return this.parseThing(commands);
  };

  ControlVerticalMirobot.prototype.parseThing = function(thing, before, after) {
    var item, _i, _len, _results;
    if ((thing != null) && (thing.type != null) && (this[thing.type] != null)) {
      if (before != null) {
        before();
      }
      this[thing.type](thing);
      if (after != null) {
        return after();
      }
    } else if (thing instanceof Array) {
      _results = [];
      for (_i = 0, _len = thing.length; _i < _len; _i++) {
        item = thing[_i];
        if (item == null) {
          continue;
        }
        _results.push(this.parseThing(item, before, after));
      }
      return _results;
    }
  };

  ControlVerticalMirobot.prototype.stroke = function(stroke) {
    var after, before;
    before = function() {};
    after = function() {};
    return this.parseThing(stroke.items, before.bind(this), after.bind(this));
  };

  ControlVerticalMirobot.prototype.pathItem = function(thing, i) {
    var child, j, _i, _len;
    if (thing instanceof Array) {
      for (j = _i = 0, _len = thing.length; _i < _len; j = ++_i) {
        child = thing[j];
        this.pathItem(child, j);
      }
      return;
    }
    if (thing.type != null) {
      switch (thing.type) {
        case 'point':
          if (i === 0) {
            return this.point(thing);
          } else {
            return this.point(thing);
          }
          break;
        case 'beziercurve':
          return this.bezierCurve(thing);
        case 'arc':
          return this.arc(thing);
      }
    }
  };

  ControlVerticalMirobot.prototype.path = function(path) {
    var i, thing, _i, _len, _ref, _results;
    _ref = path.items;
    _results = [];
    for (i = _i = 0, _len = _ref.length; _i < _len; i = ++_i) {
      thing = _ref[i];
      if (thing == null) {
        continue;
      }
      _results.push(this.pathItem(thing, i));
    }
    return _results;
  };

  ControlVerticalMirobot.prototype.point = function(thing) {
    return this.toRobot.push([thing.x, thing.y]);
  };

  ControlVerticalMirobot.prototype.forward = function(distance) {
    return 'FD ' + distance;
  };

  ControlVerticalMirobot.prototype.right = function(angle) {
    return 'RT ' + angle;
  };

  ControlVerticalMirobot.prototype.send = function(command) {
    if (this.socket == null) {
      return;
    }
    this.socket.send(command);
    return console.log('socket sent', command);
  };

  ControlVerticalMirobot.prototype.sendNext = function() {
    var c, x, y;
    if (!(this.commandsCounter < this.toRobot.length)) {
      return;
    }
    c = this.toRobot[this.commandsCounter];
    x = c[0] / 5.0;
    y = c[1] / 5.0;
    console.log('send next', x, y);
    this.send('G01 X' + x + ' Y' + y + ';');
    return this.commandsCounter += 1;
  };

  ControlVerticalMirobot.prototype.setup = function() {
    this.send('CONFIG T30.0 B-30.0 L-25.0 R25.0 I1 J-1;');
    return this.send('D01 L1.02 R1.02;');
  };

  return ControlVerticalMirobot;

})(noflo.Component);

exports.getComponent = function() {
  return new ControlVerticalMirobot;
};

});
require.register("noflo-mirobot/components/Forward.js", function(exports, require, module){
var Forward, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Forward = (function(_super) {
  __extends(Forward, _super);

  Forward.prototype.description = 'Send a forward direction command.';

  Forward.prototype.icon = 'forward';

  function Forward() {
    this.command = {
      cmd: 'forward',
      arg: 100
    };
    this.inPorts = {
      distance: new noflo.Port('number')
    };
    this.outPorts = {
      command: new noflo.Port('string')
    };
    this.inPorts.distance.on('data', (function(_this) {
      return function(data) {
        if (!_this.outPorts.command.isAttached()) {
          return;
        }
        _this.command.arg = data;
        return _this.outPorts.command.send(_this.command);
      };
    })(this));
  }

  return Forward;

})(noflo.Component);

exports.getComponent = function() {
  return new Forward;
};

});
require.register("noflo-mirobot/components/Repeat.js", function(exports, require, module){
var Repeat, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Repeat = (function(_super) {
  __extends(Repeat, _super);

  Repeat.prototype.description = 'Repeat commands.';

  Repeat.prototype.icon = 'cog';

  function Repeat() {
    this.commands = [];
    this.times = null;
    this.inPorts = {
      times: new noflo.Port('number'),
      commands: new noflo.ArrayPort('string')
    };
    this.outPorts = {
      command: new noflo.Port('array')
    };
    this.inPorts.times.on('data', (function(_this) {
      return function(data) {
        _this.times = data;
        return _this.repeat();
      };
    })(this));
    this.inPorts.commands.on('data', (function(_this) {
      return function(data, i) {
        _this.commands[i] = data;
        return _this.repeat();
      };
    })(this));
  }

  Repeat.prototype.repeat = function() {
    var i, out;
    if (!this.outPorts.command.isAttached()) {
      return;
    }
    if (this.commands.length == null) {
      return;
    }
    if (this.times == null) {
      return;
    }
    out = (function() {
      var _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.times; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(this.commands);
      }
      return _results;
    }).call(this);
    return this.outPorts.command.send(out);
  };

  return Repeat;

})(noflo.Component);

exports.getComponent = function() {
  return new Repeat;
};

});
require.register("noflo-mirobot/components/Back.js", function(exports, require, module){
var Back, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Back = (function(_super) {
  __extends(Back, _super);

  Back.prototype.description = 'Send a back direction command.';

  Back.prototype.icon = 'backward';

  function Back() {
    this.command = {
      cmd: 'back',
      arg: null
    };
    this.inPorts = {
      distance: new noflo.Port('number')
    };
    this.outPorts = {
      command: new noflo.Port('string')
    };
    this.inPorts.distance.on('data', (function(_this) {
      return function(data) {
        if (!_this.outPorts.command.isAttached()) {
          return;
        }
        _this.command.arg = data;
        return _this.outPorts.command.send(_this.command);
      };
    })(this));
  }

  return Back;

})(noflo.Component);

exports.getComponent = function() {
  return new Back;
};

});
require.register("noflo-mirobot/components/Left.js", function(exports, require, module){
var Left, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Left = (function(_super) {
  __extends(Left, _super);

  Left.prototype.description = 'Send a left direction command.';

  Left.prototype.icon = 'rotate-left';

  function Left() {
    this.command = {
      cmd: 'left',
      arg: null
    };
    this.inPorts = {
      angle: new noflo.Port('number')
    };
    this.outPorts = {
      command: new noflo.Port('string')
    };
    this.inPorts.angle.on('data', (function(_this) {
      return function(data) {
        if (!_this.outPorts.command.isAttached()) {
          return;
        }
        _this.command.arg = data;
        return _this.outPorts.command.send(_this.command);
      };
    })(this));
  }

  return Left;

})(noflo.Component);

exports.getComponent = function() {
  return new Left;
};

});
require.register("noflo-mirobot/components/Pause.js", function(exports, require, module){
var Pause, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Pause = (function(_super) {
  __extends(Pause, _super);

  Pause.prototype.description = 'Send a pause command.';

  Pause.prototype.icon = 'pause';

  function Pause() {
    this.command = {
      cmd: 'pause'
    };
    this.inPorts = {
      pause: new noflo.Port('bang')
    };
    this.outPorts = {
      command: new noflo.Port('string')
    };
    this.inPorts.pause.on('data', (function(_this) {
      return function(data) {
        if (!_this.outPorts.command.isAttached()) {
          return;
        }
        return _this.outPorts.command.send(_this.command);
      };
    })(this));
  }

  return Pause;

})(noflo.Component);

exports.getComponent = function() {
  return new Pause;
};

});
require.register("noflo-mirobot/components/Pendown.js", function(exports, require, module){
var Pendown, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Pendown = (function(_super) {
  __extends(Pendown, _super);

  Pendown.prototype.description = 'Send a pendown command.';

  Pendown.prototype.icon = 'level-down';

  function Pendown() {
    this.command = {
      cmd: 'pendown'
    };
    this.inPorts = {
      pendown: new noflo.Port('bang')
    };
    this.outPorts = {
      command: new noflo.Port('string')
    };
    this.inPorts.pendown.on('data', (function(_this) {
      return function(data) {
        if (!_this.outPorts.command.isAttached()) {
          return;
        }
        return _this.outPorts.command.send(_this.command);
      };
    })(this));
  }

  return Pendown;

})(noflo.Component);

exports.getComponent = function() {
  return new Pendown;
};

});
require.register("noflo-mirobot/components/Penup.js", function(exports, require, module){
var Penup, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Penup = (function(_super) {
  __extends(Penup, _super);

  Penup.prototype.description = 'Send a penup command.';

  Penup.prototype.icon = 'level-up';

  function Penup() {
    this.command = {
      cmd: 'penup'
    };
    this.inPorts = {
      penup: new noflo.Port('bang')
    };
    this.outPorts = {
      command: new noflo.Port('string')
    };
    this.inPorts.penup.on('data', (function(_this) {
      return function(data) {
        if (!_this.outPorts.command.isAttached()) {
          return;
        }
        return _this.outPorts.command.send(_this.command);
      };
    })(this));
  }

  return Penup;

})(noflo.Component);

exports.getComponent = function() {
  return new Penup;
};

});
require.register("noflo-mirobot/components/PixelsToPoints.js", function(exports, require, module){
var PixelsToPoints, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

PixelsToPoints = (function(_super) {
  var description, icon;

  __extends(PixelsToPoints, _super);

  icon = 'file-image-o';

  description = 'Converts pixels to cartesian points collecting points for pixels equals to a given level.';

  function PixelsToPoints() {
    this.shuffleFY = __bind(this.shuffleFY, this);
    this.image = null;
    this.size = 10;
    this.level = 0;
    this.shuffle = false;
    this.inPorts = {
      image: new noflo.Port('object'),
      size: new noflo.Port('number'),
      level: new noflo.Port('number'),
      shuffle: new noflo.Port('boolean')
    };
    this.outPorts = {
      points: new noflo.Port('object')
    };
    this.inPorts.size.on('data', (function(_this) {
      return function(data) {
        return _this.size = data;
      };
    })(this));
    this.inPorts.level.on('data', (function(_this) {
      return function(data) {
        return _this.level = data;
      };
    })(this));
    this.inPorts.shuffle.on('data', (function(_this) {
      return function(data) {
        return _this.shuffle = data;
      };
    })(this));
    this.inPorts.image.on('data', (function(_this) {
      return function(data) {
        var canvas, ctx, height, i, image, imageData, points, width, x, y, _i, _ref;
        if (!_this.outPorts.points.isAttached()) {
          return;
        }
        _this.image = data;
        canvas = document.createElement('canvas');
        width = canvas.width = _this.image.width;
        height = canvas.height = _this.image.height;
        image = _this.image;
        ctx = canvas.getContext('2d');
        ctx.drawImage(image, 0, 0);
        imageData = ctx.getImageData(0, 0, width, height);
        data = imageData.data;
        points = [];
        console.log('points', points);
        for (i = _i = 0, _ref = data.length; _i < _ref; i = _i += 4) {
          if (data[i] === _this.level) {
            x = i / 4 % width;
            y = Math.floor(i / 4 / width);
            points.push({
              'type': 'point',
              'x': x,
              'y': y
            });
          }
        }
        if (_this.shuffle) {
          return _this.outPorts.points.send(_this.shuffleFY(points).slice(0, _this.size));
        } else {
          return _this.outPorts.points.send(points.slice(0, _this.size));
        }
      };
    })(this));
  }

  PixelsToPoints.prototype.shuffleFY = function(a) {
    var i, r, t, _i, _ref;
    for (i = _i = 0, _ref = a.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
      r = this.randomInt(i, a.length);
      t = a[r];
      a[r] = a[i];
      a[i] = t;
    }
    return a;
  };

  PixelsToPoints.prototype.randomInt = function(min, max) {
    return Math.floor((Math.random() * (max - min)) + min);
  };

  return PixelsToPoints;

})(noflo.Component);

exports.getComponent = function() {
  return new PixelsToPoints;
};

});
require.register("noflo-mirobot/components/Right.js", function(exports, require, module){
var Right, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Right = (function(_super) {
  __extends(Right, _super);

  Right.prototype.description = 'Send a right direction command.';

  Right.prototype.icon = 'rotate-right';

  function Right() {
    this.command = {
      cmd: 'right',
      arg: null
    };
    this.inPorts = {
      right: new noflo.Port('number')
    };
    this.outPorts = {
      command: new noflo.Port('string')
    };
    this.inPorts.right.on('data', (function(_this) {
      return function(data) {
        if (!_this.outPorts.command.isAttached()) {
          return;
        }
        _this.command.arg = data;
        return _this.outPorts.command.send(_this.command);
      };
    })(this));
  }

  return Right;

})(noflo.Component);

exports.getComponent = function() {
  return new Right;
};

});
require.register("noflo-mirobot/components/PointsToPolar.js", function(exports, require, module){
var PointsToPolar, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Math.degrees = function(radians) {
  return radians * 180 / Math.PI;
};

PointsToPolar = (function(_super) {
  __extends(PointsToPolar, _super);

  PointsToPolar.prototype.description = 'Converts cartesian coordinates to polar coordinates.';

  PointsToPolar.prototype.icon = 'paint-brush';

  function PointsToPolar() {
    this.pathFinding = __bind(this.pathFinding, this);
    this.parsePoints = __bind(this.parsePoints, this);
    this.mirobotAngle = 0;
    this.commands = [];
    this.inPorts = {
      points: new noflo.Port('object')
    };
    this.outPorts = {
      polar: new noflo.Port('object')
    };
    this.inPorts.points.on('data', (function(_this) {
      return function(data) {
        var points;
        if (!_this.outPorts.polar.isAttached()) {
          return;
        }
        _this.mirobotAngle = 0;
        if (data.items != null) {
          points = data.items;
        } else {
          points = data;
        }
        _this.parsePoints(points);
        return _this.outPorts.polar.send(_this.commands);
      };
    })(this));
  }

  PointsToPolar.prototype.parsePoints = function(start, end) {
    var i, item, _i, _len, _results;
    if ((start != null) && (end != null) && (start.x != null) && (end.x != null)) {
      return this.pathFinding(start, end);
    } else if (start instanceof Array) {
      _results = [];
      for (i = _i = 0, _len = start.length; _i < _len; i = ++_i) {
        item = start[i];
        if (item == null) {
          continue;
        }
        if (start[i + 1] != null) {
          _results.push(this.parsePoints(item, start[i + 1]));
        } else {
          _results.push(void 0);
        }
      }
      return _results;
    }
  };

  PointsToPolar.prototype.pathFinding = function(from, to) {
    var angle, arctangent, commandDirection, commandForward, distance, dx, dy;
    dx = to.x - from.x;
    dy = to.y - from.y;
    distance = Math.sqrt(dx * dx + dy * dy);
    arctangent = Math.atan2(dx, dy);
    angle = Math.degrees(arctangent);
    this.walkingAngle = angle - this.mirobotAngle;
    if (this.walkingAngle < 0) {
      this.walkingAngle = this.walkingAngle + 360;
    }
    this.mirobotAngle = angle;
    if (this.mirobotAngle >= 360) {
      this.mirobotAngle = this.mirobotAngle - 360;
    }
    commandDirection = {
      cmd: null,
      arg: null
    };
    if (this.walkingAngle <= 180) {
      commandDirection.cmd = 'right';
      commandDirection.arg = this.walkingAngle.toString();
    } else {
      commandDirection.cmd = 'left';
      commandDirection.arg = (360 - this.walkingAngle).toString();
    }
    commandForward = {
      cmd: 'forward',
      arg: distance.toString()
    };
    this.commands.push(commandDirection);
    return this.commands.push(commandForward);
  };

  return PointsToPolar;

})(noflo.Component);

exports.getComponent = function() {
  return new PointsToPolar;
};

});
require.register("noflo-mirobot/components/Dither.js", function(exports, require, module){
var Dither, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Dither = (function(_super) {
  var description, icon;

  __extends(Dither, _super);

  icon = 'file-image-o';

  description = 'Dither filter.';

  function Dither() {
    this.ditterDirection = __bind(this.ditterDirection, this);
    this.quantizeColor = __bind(this.quantizeColor, this);
    this.image = null;
    this.tone = null;
    this.inPorts = {
      image: new noflo.Port('object')
    };
    this.outPorts = {
      canvas: new noflo.Port('object')
    };
    this.inPorts.image.on('data', (function(_this) {
      return function(data) {
        var b, canvas, ctx, currentPixel, direction, error, g, h, height, i, image, imageData, img, nexterror, r, tmp, tone, w, width, x, y, _i, _j, _ref, _ref1;
        if (!_this.outPorts.canvas.isAttached()) {
          return;
        }
        _this.image = data;
        canvas = document.createElement('canvas');
        width = canvas.width = _this.image.width;
        height = canvas.height = _this.image.height;
        image = _this.image;
        ctx = canvas.getContext('2d');
        ctx.drawImage(image, 0, 0);
        imageData = ctx.getImageData(0, 0, width, height);
        data = imageData.data;
        h = height;
        w = width;
        img = image;
        direction = 1;
        error = (function() {
          var _i, _results;
          _results = [];
          for (i = _i = 0; 0 <= w ? _i < w : _i > w; i = 0 <= w ? ++_i : --_i) {
            _results.push(0);
          }
          return _results;
        })();
        nexterror = (function() {
          var _i, _results;
          _results = [];
          for (i = _i = 0; 0 <= w ? _i < w : _i > w; i = 0 <= w ? ++_i : --_i) {
            _results.push(0);
          }
          return _results;
        })();
        for (currentPixel = _i = 0, _ref = data.length; _i < _ref; currentPixel = _i += 4) {
          x = currentPixel / 4 % w;
          y = Math.floor(currentPixel / 4 / w);
          r = data[currentPixel];
          g = data[currentPixel + 1];
          b = data[currentPixel + 2];
          tone = (r + g + b) / 3;
        }
        tone /= w * h;
        for (y = _j = 0; 0 <= h ? _j < h : _j > h; y = 0 <= h ? ++_j : --_j) {
          _this.ditherDirection(img, y, error, nexterror, direction);
          direction = (_ref1 = direction > 0) != null ? _ref1 : -{
            1: 1
          };
          tmp = error;
          error = nexterror;
          nexterror = tmp;
        }
        return _this.outPorts.canvas.send(img);
      };
    })(this));
  }

  Dither.prototype.quantizeColor = function(original) {
    var i, _ref;
    i = Math.min(Math.max(original, 0), 255);
    return (_ref = i > this.tone) != null ? _ref : {
      255: 0
    };
  };

  Dither.prototype.decode = function(pixel) {
    var b, g, r;
    r = (pixel >> 16) & 0xff;
    g = (pixel >> 8) & 0xff;
    b = pixel & 0xff;
    return (r + g + b) / 3;
  };

  Dither.prototype.encode = function(i) {
    return (0xff << 24) | (i << 16) | (i << 8) | i;
  };

  Dither.prototype.ditterDirection = function(img, y, error, nexterror, direction) {
    var b, end, g, newPixel, oldPixel, quant_error, r, start, w, x, _i, _j, _results;
    w = img.width;
    for (x = _i = 0; 0 <= w ? _i < w : _i > w; x = 0 <= w ? ++_i : --_i) {
      nexterror[x] = 0;
    }
    if (direction > 0) {
      start = 0;
      end = w;
    } else {
      start = w - 1;
      end = -1;
    }
    _results = [];
    for (x = _j = start; direction > 0 ? _j < end : _j > end; x = _j += direction) {
      r = 255;
      g = 255;
      b = 255;
      oldPixel = ((r + g + b) / 3) + error[x];
      newPixel = this.quantizeColor(oldPixel);
      quant_error = oldPixel - newPixel;
      nexterror[x] += 5.0 / 16.0 * quant_error;
      if (x + direction >= 0 && x + direction < w) {
        error[x + direction] += 7.0 / 16.0 * quant_error;
        nexterror[x + direction] += 1.0 / 16.0 * quant_error;
      }
      if (x - direction >= 0 && x - direction < w) {
        _results.push(nexterror[x - direction] += 3.0 / 16.0 * quant_error);
      } else {
        _results.push(void 0);
      }
    }
    return _results;
  };

  return Dither;

})(noflo.Component);

exports.getComponent = function() {
  return new Dither;
};

});
require.register("noflo-mirobot/components/FloydSteinberg.js", function(exports, require, module){
var FloydSteinberg, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

FloydSteinberg = (function(_super) {
  var description, icon;

  __extends(FloydSteinberg, _super);

  icon = 'file-image-o';

  description = 'Dithering using Floyd-Steinberg.';

  function FloydSteinberg() {
    var i, lumB, lumG, lumR, _i;
    this.image = null;
    this.tone = null;
    lumR = [];
    lumG = [];
    lumB = [];
    for (i = _i = 0; _i < 256; i = ++_i) {
      lumR[i] = i * 0.299;
      lumG[i] = i * 0.587;
      lumB[i] = i * 0.114;
    }
    this.inPorts = {
      image: new noflo.Port('object')
    };
    this.outPorts = {
      canvas: new noflo.Port('object')
    };
    this.inPorts.image.on('data', (function(_this) {
      return function(data) {
        var canvas, ctx, currentPixel, err, height, image, imageData, imageDataLength, newPixel, w, width, _j, _k;
        if (!_this.outPorts.canvas.isAttached()) {
          return;
        }
        _this.image = data;
        canvas = document.createElement('canvas');
        width = canvas.width = _this.image.width;
        height = canvas.height = _this.image.height;
        image = _this.image;
        ctx = canvas.getContext('2d');
        ctx.drawImage(image, 0, 0);
        imageData = ctx.getImageData(0, 0, width, height);
        data = imageData.data;
        imageDataLength = imageData.data.length;
        for (i = _j = 0; _j < imageDataLength; i = _j += 4) {
          imageData.data[i] = Math.floor(lumR[imageData.data[i]] + lumG[imageData.data[i + 1]] + lumB[imageData.data[i + 2]]);
        }
        w = imageData.width;
        newPixel = null;
        err = null;
        for (currentPixel = _k = 0; _k < imageDataLength; currentPixel = _k += 4) {
          newPixel = imageData.data[currentPixel] < 129 ? 0 : 255;
          err = Math.floor((imageData.data[currentPixel] - newPixel) / 16);
          imageData.data[currentPixel] = newPixel;
          imageData.data[currentPixel + 4] += err * 7;
          imageData.data[currentPixel + 4 * w - 4] += err * 3;
          imageData.data[currentPixel + 4 * w] += err * 5;
          imageData.data[currentPixel + 4 * w + 4] += err * 1;
          imageData.data[currentPixel + 1] = imageData.data[currentPixel + 2] = imageData.data[currentPixel];
        }
        ctx.putImageData(imageData, 0, 0);
        return _this.outPorts.canvas.send(canvas);
      };
    })(this));
  }

  return FloydSteinberg;

})(noflo.Component);

exports.getComponent = function() {
  return new FloydSteinberg;
};

});
require.register("noflo-mirobot/components/BlackAndWhiteFilter.js", function(exports, require, module){
var BlackAndWhiteFilter, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

BlackAndWhiteFilter = (function(_super) {
  var description, icon;

  __extends(BlackAndWhiteFilter, _super);

  icon = 'file-image-o';

  description = 'Black and white filter.';

  function BlackAndWhiteFilter() {
    this.image = null;
    this.inPorts = {
      image: new noflo.Port('object')
    };
    this.outPorts = {
      canvas: new noflo.Port('object')
    };
    this.inPorts.image.on('data', (function(_this) {
      return function(data) {
        var a, b, c, canvas, ctx, g, height, i, image, imageData, imageDataLength, max_intensity, min_intensity, r, width, x, y, _i, _j;
        if (!_this.outPorts.canvas.isAttached()) {
          return;
        }
        _this.image = data;
        canvas = document.createElement('canvas');
        width = canvas.width = _this.image.width;
        height = canvas.height = _this.image.height;
        image = _this.image;
        ctx = canvas.getContext('2d');
        ctx.drawImage(image, 0, 0);
        imageData = ctx.getImageData(0, 0, width, height);
        data = imageData.data;
        imageDataLength = imageData.data.length;
        max_intensity = -1000;
        min_intensity = 1000;
        for (i = _i = 0; _i < imageDataLength; i = _i += 4) {
          x = i / 4 % width;
          y = Math.floor(i / 4 / width);
          r = imageData.data[i];
          g = imageData.data[i + 1];
          b = imageData.data[i + 2];
          c = (r + g + b) / 3;
          if (max_intensity < c) {
            max_intensity = c;
          }
          if (min_intensity > c) {
            min_intensity = c;
          }
          imageData.data[i] = c;
          imageData.data[i + 1] = c;
          imageData.data[i + 2] = c;
        }
        for (i = _j = 0; _j < imageDataLength; i = _j += 4) {
          r = imageData.data[i];
          g = imageData.data[i + 1];
          b = imageData.data[i + 2];
          c = (r + g + b) / 3;
          a = (c - min_intensity) / (max_intensity - min_intensity);
          b = a * 95.0 + 200.0;
          if (b > 255) {
            b = 255;
          }
          imageData.data[i] = b;
          imageData.data[i + 1] = b;
          imageData.data[i + 2] = b;
        }
        ctx.putImageData(imageData, 0, 0);
        return _this.outPorts.canvas.send(canvas);
      };
    })(this));
  }

  return BlackAndWhiteFilter;

})(noflo.Component);

exports.getComponent = function() {
  return new BlackAndWhiteFilter;
};

});
require.register("noflo-mirobot/components/ThresholdFilter.js", function(exports, require, module){
var ThresholdFilter, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ThresholdFilter = (function(_super) {
  var description, icon;

  __extends(ThresholdFilter, _super);

  icon = 'file-image-o';

  description = 'Converts an image to black and white given a threshold value.';

  function ThresholdFilter() {
    this.image = null;
    this.threshold = 10;
    this.inPorts = {
      image: new noflo.Port('object'),
      threshold: new noflo.Port('number')
    };
    this.outPorts = {
      canvas: new noflo.Port('object')
    };
    this.inPorts.threshold.on('data', (function(_this) {
      return function(data) {
        return _this.threshold = data;
      };
    })(this));
    this.inPorts.image.on('data', (function(_this) {
      return function(data) {
        var b, canvas, ctx, g, height, i, image, imageData, imageDataLength, r, v, width, _i;
        if (!_this.outPorts.canvas.isAttached()) {
          return;
        }
        _this.image = data;
        canvas = document.createElement('canvas');
        width = canvas.width = _this.image.width;
        height = canvas.height = _this.image.height;
        image = _this.image;
        ctx = canvas.getContext('2d');
        ctx.drawImage(image, 0, 0);
        imageData = ctx.getImageData(0, 0, width, height);
        data = imageData.data;
        imageDataLength = imageData.data.length;
        for (i = _i = 0; _i < imageDataLength; i = _i += 4) {
          r = imageData.data[i];
          g = imageData.data[i + 1];
          b = imageData.data[i + 2];
          v = 0.2126 * r + 0.7152 * g + 0.0722 * b >= _this.threshold ? 255 : 0;
          imageData.data[i] = imageData.data[i + 1] = imageData.data[i + 2] = v;
        }
        ctx.putImageData(imageData, 0, 0);
        return _this.outPorts.canvas.send(canvas);
      };
    })(this));
  }

  return ThresholdFilter;

})(noflo.Component);

exports.getComponent = function() {
  return new ThresholdFilter;
};

});
require.register("noflo-mirobot/components/TSP.js", function(exports, require, module){
var TSP, noflo,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

TSP = (function(_super) {
  __extends(TSP, _super);

  TSP.prototype.description = 'Ordenates points based on the minimum distance between them.';

  TSP.prototype.icon = 'code-fork';

  function TSP() {
    this.tspGreedy = __bind(this.tspGreedy, this);
    this.distance = __bind(this.distance, this);
    this.points = [];
    this.inPorts = {
      points: new noflo.Port('object')
    };
    this.outPorts = {
      points: new noflo.Port('object')
    };
    this.inPorts.points.on('data', (function(_this) {
      return function(data) {
        if (!_this.outPorts.points.isAttached()) {
          return;
        }
        if (data.items.length === 0) {
          return;
        }
        _this.points = data.items;
        _this.tspGreedy();
        return _this.outPorts.points.send(_this.points);
      };
    })(this));
  }

  TSP.prototype.distance = function(from, to) {
    var dx, dy;
    dx = this.points[to].x - this.points[from].x;
    dy = this.points[to].y - this.points[from].y;
    return Math.sqrt(dx * dx + dy * dy);
  };

  TSP.prototype.tspGreedy = function() {
    var bestPath, current, currentDistance, i, lastNode, near, nearest, next, step, visited, _i, _j, _ref, _ref1;
    current = 0;
    currentDistance = 0;
    lastNode = 0;
    visited = (function() {
      var _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.points.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(false);
      }
      return _results;
    }).call(this);
    bestPath = (function() {
      var _i, _ref, _results;
      _results = [];
      for (i = _i = 0, _ref = this.points.length; 0 <= _ref ? _i < _ref : _i > _ref; i = 0 <= _ref ? ++_i : --_i) {
        _results.push(0);
      }
      return _results;
    }).call(this);
    for (step = _i = 0, _ref = this.points.length - 1; 0 <= _ref ? _i < _ref : _i > _ref; step = 0 <= _ref ? ++_i : --_i) {
      visited[current] = true;
      bestPath[step] = current;
      nearest = 999999;
      near = -1;
      for (next = _j = 1, _ref1 = this.points.length; 1 <= _ref1 ? _j < _ref1 : _j > _ref1; next = 1 <= _ref1 ? ++_j : --_j) {
        if (!visited[next] && ((this.distance(current, next)) < nearest)) {
          nearest = this.distance(current, next);
          near = next;
        }
      }
      currentDistance += this.distance(current, near);
      current = near;
    }
    bestPath[this.points.length - 1] = current;
    return this.points = (function() {
      var _k, _len, _results;
      _results = [];
      for (_k = 0, _len = bestPath.length; _k < _len; _k++) {
        i = bestPath[_k];
        _results.push(this.points[i]);
      }
      return _results;
    }).call(this);
  };

  return TSP;

})(noflo.Component);

exports.getComponent = function() {
  return new TSP;
};

});
require.register("noflo-mirobot/components/PreviewCommand.js", function(exports, require, module){
var PreviewCommand, TAU, noflo, _accuracy,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

TAU = 2 * Math.PI;

_accuracy = 1000000000;

PreviewCommand = (function(_super) {
  __extends(PreviewCommand, _super);

  PreviewCommand.prototype.description = 'Previews a command.';

  PreviewCommand.prototype.icon = 'pencil';

  function PreviewCommand() {
    this.right = __bind(this.right, this);
    this.left = __bind(this.left, this);
    this.forward = __bind(this.forward, this);
    this.turn = __bind(this.turn, this);
    this.canvas = null;
    this.turtle = {
      position: {
        x: 100,
        y: 100
      },
      vector: {
        x: 0,
        y: 1
      },
      angle: 90,
      pen: true
    };
    this.inPorts = {
      command: new noflo.Port('object'),
      canvas: new noflo.Port('object')
    };
    this.outPorts = {
      canvas: new noflo.Port('object')
    };
    this.inPorts.command.on('data', (function(_this) {
      return function(data) {
        if (_this.canvas == null) {
          return;
        }
        _this.ctx = _this.canvas.getContext('2d');
        _this.ctx.beginPath();
        return _this.parseThing(data);
      };
    })(this));
    this.inPorts.canvas.on('data', (function(_this) {
      return function(data) {
        return _this.canvas = data;
      };
    })(this));
  }

  PreviewCommand.prototype.shutdown = function() {};

  PreviewCommand.prototype.parseThing = function(thing) {
    var item, _i, _len, _results;
    if ((thing != null) && (thing.cmd != null) && (this[thing.cmd] != null)) {
      return this[thing.cmd](thing);
    } else if (thing instanceof Array) {
      _results = [];
      for (_i = 0, _len = thing.length; _i < _len; _i++) {
        item = thing[_i];
        if (item == null) {
          continue;
        }
        _results.push(this.parseThing(item));
      }
      return _results;
    }
  };

  PreviewCommand.prototype.turn = function() {
    console.log('turn');
    this.turtle.vector.x = Math.round(Math.cos(TAU * this.turtle.angle));
    return this.turtle.vector.y = Math.round(Math.sin(TAU * this.turtle.angle));
  };

  PreviewCommand.prototype.forward = function(distance) {
    var a, x, y;
    console.log('forward');
    distance = distance.arg;
    a = this.turtle.angle * (Math.PI / 180.0);
    x = Math.round(distance * Math.cos(a));
    y = Math.round(distance * Math.sin(a));
    console.log("x", x, "y", y, "distance", distance);
    this.turtle.position.x += x;
    this.turtle.position.y += y;
    this.ctx.strokeStyle = '#00ff00';
    this.ctx.linewidth = 1;
    console.log('Line between', this.turtle.position.x, this.turtle.position.y);
    this.ctx.stroke();
    return this.ctx.lineTo(this.turtle.position.x, this.turtle.position.y);
  };

  PreviewCommand.prototype.back = function(distance) {
    distance = distance.arg;
    return this.turtle.angle += 180;
  };

  PreviewCommand.prototype.left = function(angle) {
    console.log('left', angle);
    if (angle.arg != null) {
      this.turtle.angle += angle.arg;
    } else {
      this.turtle.angle += angle;
    }
    this.turtle.angle = this.turtle.angle % 360;
    return this.turn();
  };

  PreviewCommand.prototype.right = function(angle) {
    console.log('right', angle);
    if (angle.arg != null) {
      this.turtle.angle -= angle.arg;
    } else {
      this.turtle.angle -= angle;
    }
    this.turtle.angle = this.turtle.angle % 360;
    return this.turn();
  };

  PreviewCommand.prototype.pause = function() {};

  PreviewCommand.prototype.resume = function() {};

  PreviewCommand.prototype.ping = function() {};

  PreviewCommand.prototype.penup = function() {
    return this.turtle.pen = false;
  };

  PreviewCommand.prototype.pendown = function() {
    return this.turtle.pen = true;
  };

  return PreviewCommand;

})(noflo.Component);

exports.getComponent = function() {
  return new PreviewCommand;
};

});
require.register("noflo-mirobot/components/ProcessCommands.js", function(exports, require, module){
var ProcessCommands, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

ProcessCommands = (function(_super) {
  __extends(ProcessCommands, _super);

  ProcessCommands.prototype.description = 'Processes and stores commands to send to Mirobot.';

  ProcessCommands.prototype.icon = 'pencil';

  function ProcessCommands() {
    this.commands = [];
    this.points = [];
    this.currentCommand = 0;
    this.currentCommandArray = 0;
    this.inPorts = {
      commands: new noflo.ArrayPort('object'),
      points: new noflo.Port('object'),
      next: new noflo.Port('bang')
    };
    this.outPorts = {
      command: new noflo.Port('object'),
      path: new noflo.Port('object')
    };
    this.inPorts.commands.on('data', (function(_this) {
      return function(cmd, i) {
        return _this.commands[i] = cmd;
      };
    })(this));
    this.inPorts.points.on('data', (function(_this) {
      return function(data) {
        if (data.items != null) {
          return _this.points = data.items;
        } else {
          return _this.points = data;
        }
      };
    })(this));
    this.inPorts.next.on('data', (function(_this) {
      return function() {
        var path;
        if (!_this.outPorts.command.isAttached()) {
          return;
        }
        path = [];
        if (_this.commands[_this.currentCommand] instanceof Array) {
          _this.outPorts.command.send(_this.commands[_this.currentCommand][_this.currentCommandArray]);
          console.log('HERE', _this.currentCommandArray, _this.commands[_this.currentCommand].length);
          if (_this.currentCommandArray < _this.commands[_this.currentCommand].length) {
            path.push(_this.points[_this.currentCommandArray]);
            path.push(_this.points[_this.currentCommandArray + 1]);
            console.log(path);
            _this.outPorts.path.send(path);
            _this.currentCommandArray += 1;
          }
          if (_this.currentCommandArray > _this.commands[_this.currentCommand].length) {
            console.log('Mirobot finished array');
            _this.currentCommandArray = 0;
            _this.currentCommand += 1;
          }
        } else {
          _this.outPorts.command.send(_this.commands[_this.currentCommand]);
          _this.currentCommand += 1;
        }
        if (_this.currentCommand >= _this.commands.length) {
          console.log('Mirobot finished all commands');
          _this.commands = [];
          _this.currentCommand = 0;
          return _this.currentCommandArray = 0;
        }
      };
    })(this));
  }

  ProcessCommands.prototype.shutdown = function() {};

  return ProcessCommands;

})(noflo.Component);

exports.getComponent = function() {
  return new ProcessCommands;
};

});
require.register("noflo-mirobot/components/SendCommand.js", function(exports, require, module){
var SendCommand, noflo, sleep,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

sleep = function(ms) {
  var start, _results;
  start = new Date().getTime();
  _results = [];
  while (new Date().getTime() - start < ms) {
    continue;
  }
  return _results;
};

SendCommand = (function(_super) {
  __extends(SendCommand, _super);

  SendCommand.prototype.description = 'Sends a command to Mirobot.';

  SendCommand.prototype.icon = 'pencil';

  function SendCommand() {
    this.right = __bind(this.right, this);
    this.left = __bind(this.left, this);
    this.back = __bind(this.back, this);
    this.forward = __bind(this.forward, this);
    this.shutdown = __bind(this.shutdown, this);
    this.url = 'ws://10.10.100.254:8899/websocket';
    this.Mirobot = null;
    this.mirobot = null;
    this.inPorts = {
      lib: new noflo.Port('object'),
      url: new noflo.Port('string'),
      disconnect: new noflo.Port('bang'),
      command: new noflo.Port('object')
    };
    this.outPorts = {
      completed: new noflo.Port('string'),
      connected: new noflo.Port('string'),
      disconnected: new noflo.Port('string')
    };
    this.inPorts.lib.on('data', (function(_this) {
      return function(data) {
        return _this.Mirobot = data;
      };
    })(this));
    this.inPorts.url.on('data', (function(_this) {
      return function(data) {
        _this.url = data;
        if (_this.mirobot == null) {
          return _this.mirobot = new _this.Mirobot(_this.url, function() {
            if (!_this.outPorts.connected.isAttached()) {
              return;
            }
            return _this.outPorts.connected.send('connected');
          });
        }
      };
    })(this));
    this.inPorts.disconnect.on('data', (function(_this) {
      return function(data) {
        if (_this.mirobot != null) {
          return _this.mirobot.stop(function(state, msg, recursion) {
            _this.outPorts.disconnected.send('disconnected');
            return _this.mirobot = null;
          });
        }
      };
    })(this));
    this.inPorts.command.on('data', (function(_this) {
      return function(data) {
        if (_this.mirobot != null) {
          return _this.parseThing(data);
        }
      };
    })(this));
  }

  SendCommand.prototype.shutdown = function() {
    if (this.mirobot != null) {
      this.mirobot.stop();
      return this.mirobot = null;
    }
  };

  SendCommand.prototype.parseThing = function(thing) {
    var item, _i, _len, _results;
    console.log('Receive', thing);
    if ((thing != null) && (thing.cmd != null) && (this[thing.cmd] != null)) {
      return this[thing.cmd](thing);
    } else if (thing instanceof Array) {
      _results = [];
      for (_i = 0, _len = thing.length; _i < _len; _i++) {
        item = thing[_i];
        if (item == null) {
          continue;
        }
        _results.push(this.parseThing(item));
      }
      return _results;
    }
  };

  SendCommand.prototype.forward = function(distance, currentPoint) {
    this.setIcon('arrow-up');
    return this.mirobot.move('forward', distance.arg, (function(_this) {
      return function(state, msg, recursion) {
        if (state === 'complete') {
          return _this.outPorts.completed.send(state);
        }
      };
    })(this));
  };

  SendCommand.prototype.back = function(distance, currentPoint) {
    this.setIcon('arrow-down');
    return this.mirobot.move('back', distance.arg, (function(_this) {
      return function(state, msg, recursion) {
        if (state === 'complete') {
          return _this.outPorts.completed.send(state);
        }
      };
    })(this));
  };

  SendCommand.prototype.left = function(angle, currentPoint) {
    this.setIcon('mail-reply');
    return this.mirobot.turn('left', angle.arg, (function(_this) {
      return function(state, msg, recursion) {
        if (state === 'complete') {
          return _this.outPorts.completed.send(state);
        }
      };
    })(this));
  };

  SendCommand.prototype.right = function(angle, currentPoint) {
    this.setIcon('mail-forward');
    return this.mirobot.turn('right', angle.arg, (function(_this) {
      return function(state, msg, recursion) {
        if (state === 'complete') {
          return _this.outPorts.completed.send(state);
        }
      };
    })(this));
  };

  SendCommand.prototype.pause = function() {
    return this.mirobot.pause((function(_this) {
      return function(state, msg, recursion) {
        if (state === 'complete') {
          return _this.outPorts.completed.send(state);
        }
      };
    })(this));
  };

  SendCommand.prototype.resume = function() {
    return this.mirobot.resume((function(_this) {
      return function(state, msg, recursion) {
        if (state === 'complete') {
          return _this.outPorts.completed.send(state);
        }
      };
    })(this));
  };

  SendCommand.prototype.ping = function() {
    return this.mirobot.ping((function(_this) {
      return function(state, msg, recursion) {
        if (state === 'complete') {
          return _this.outPorts.completed.send(state);
        }
      };
    })(this));
  };

  SendCommand.prototype.penup = function() {
    return this.mirobot.penup((function(_this) {
      return function(state, msg, recursion) {
        if (state === 'complete') {
          return _this.outPorts.completed.send(state);
        }
      };
    })(this));
  };

  SendCommand.prototype.pendown = function() {
    return this.mirobot.pendown((function(_this) {
      return function(state, msg, recursion) {
        if (state === 'complete') {
          return _this.outPorts.completed.send(state);
        }
      };
    })(this));
  };

  return SendCommand;

})(noflo.Component);

exports.getComponent = function() {
  return new SendCommand;
};

});
require.register("noflo-mirobot/components/Array.js", function(exports, require, module){
var Array, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

Array = (function(_super) {
  __extends(Array, _super);

  Array.prototype.description = 'Array.';

  Array.prototype.icon = 'pencil';

  function Array() {
    this.points = [];
    this.inPorts = {
      send: new noflo.Port('bang'),
      clean: new noflo.Port('bang'),
      points: new noflo.Port('object')
    };
    this.outPorts = {
      array: new noflo.Port('object')
    };
    this.inPorts.send.on('data', (function(_this) {
      return function() {
        return _this.outPorts.array.send(_this.points);
      };
    })(this));
    this.inPorts.clean.on('data', (function(_this) {
      return function() {
        _this.points = [];
        return _this.outPorts.array.send(_this.points);
      };
    })(this));
    this.inPorts.points.on('data', (function(_this) {
      return function(point) {
        return _this.points.push(point);
      };
    })(this));
  }

  return Array;

})(noflo.Component);

exports.getComponent = function() {
  return new Array;
};

});
require.register("noflo-mirobot/components/EstimateTime.js", function(exports, require, module){
var costs, noflo;

noflo = require('noflo');

costs = {
  left: function(arg) {
    return (10 * parseFloat(arg)) / 360;
  },
  right: function(arg) {
    return (10 * parseFloat(arg)) / 360;
  },
  forward: function(arg) {
    return parseFloat(arg) / 40;
  },
  back: function(arg) {
    return parseFloat(arg) / 40;
  },
  penup: function(arg) {
    return 0.25;
  },
  pendown: function(arg) {
    return 0.25;
  }
};


/*
Object {cmd: "left", arg: "6.3401917459099195", id: "chmqgad8id"}
Object {cmd: "forward", arg: "6.4031242374328485"}
Object {cmd: "right", arg: "51.34019174590991", id: "w61z4r3mi3"}
 */

exports.getComponent = function() {
  var c;
  c = new noflo.Component;
  c.inPorts.add('commands', function(event, payload) {
    var command, commands, cost, func, total, _i, _len;
    if (event !== 'data') {
      return;
    }
    commands = payload;
    total = 0.0;
    for (_i = 0, _len = commands.length; _i < _len; _i++) {
      command = commands[_i];
      func = costs[command.cmd];
      cost = func(command.arg);
      total += cost;
    }
    return c.outPorts.out.send(total);
  });
  c.outPorts.add('out');
  return c;
};

});
require.register("noflo-mirobot/components/GetMirobotLib.js", function(exports, require, module){
var GetMirobotLib, library, noflo,
  __hasProp = {}.hasOwnProperty,
  __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

noflo = require('noflo');

library = {};


(function (root, factory) {
    'use strict';
    // Browser globals
    root.Mirobot = factory(root);
}(library, function (window, undefined) {

    var Mirobot = function(url, cb){
      this.url = url;
      this.connect(cb);
      this.cbs = {};
      this.listeners = [];
      this.robot_state = 'idle';
    }

    Mirobot.prototype = {

      connected: false,

      connect: function(cb){
        if(!this.connected){
          var self = this;
          this.ws = new WebSocket(this.url);
          this.ws.onmessage = function(ws_msg){self.handle_ws(ws_msg)};
          this.ws.onopen = function(){ 
            console.log("Mirobot is connected"); 
            self.setConnectedState(true);
            if (cb) {
              cb();
            }
          }
          this.ws.onerror = function(err){self.handleError(err)}
          this.ws.onclose = function(err){self.handleError(err)}
        }
      },

      setConnectedState: function(state){
        var self = this;
        self.connected = state;
        self.broadcast(state ? 'connected' : 'disconnected');
        // Try to auto reconnect if disconnected
        if(state){
          if(self.reconnectTimer){
            clearInterval(self.reconnectTimer);
            self.reconnectTimer = undefined;
          }
        }else{
          if(!self.reconnectTimer){
            self.reconnectTimer = setInterval(function(){
              self.connect();
            }, 1000);
          }
        }
      },
      
      broadcast: function(msg){
        for(i in this.listeners){
          this.listeners[i](msg);
        }
      },

      addListener: function(listener){
        this.listeners.push(listener);
      },

      handleError: function(err){
        if(err instanceof CloseEvent){
          this.setConnectedState(false);
        }else{
          console.log(err);
        }
      },

      move: function(direction, distance, cb){
        this.send({cmd: direction, arg: distance}, cb);
        // this.send({cmd: direction, arg: distance}, function(state, msg, recursion){
        //   // console.log(state, msg, recursion);
        //   // if(state === 'started'){
        //   //   console.log('ACEITO');
        //   // }
        // });
      },

      turn: function(direction, angle, cb){
        this.send({cmd: direction, arg: angle}, cb);
        // this.send({cmd: direction, arg: angle}, function(state, msg, recursion){
        //   // console.log(state, msg, recursion);
        //   // if(state === 'started'){
        //   //   console.log('ACEITO');
        //   // }
        // });
      },

      penup: function(cb){
        this.send({cmd: 'penup'}, cb);
      },

      pendown: function(cb){
        this.send({cmd: 'pendown'}, cb);
      },

      ping: function(cb){
        this.send({cmd: 'ping'}, cb);
      },
      
      stop: function(cb){
        var self = this;
        this.send({cmd:'stop'}, function(state, msg, recursion){
          if(state === 'complete' && !recursion){
            for(var i in self.cbs){
              self.cbs[i]('complete', undefined, true);
            }
            self.robot_state = 'idle';
            self.msg_stack = [];
            self.cbs = {};
            if(cb){ cb(state); }
          }
        });
      },
      
      pause: function(cb){
        this.send({cmd:'pause'}, cb);
      },
      
      resume: function(cb){
        this.send({cmd:'resume'}, cb);
      },

      version: function(cb){
        this.send({cmd:'version'}, cb);
      },

      send: function(msg, cb){
        msg.id = Math.random().toString(36).substr(2, 10)
        if(cb){
          this.cbs[msg.id] = cb;
        }
        if(msg.arg){ 
          msg.arg = msg.arg.toString(); 
        }
        if(['stop', 'pause', 'resume', 'ping', 'version'].indexOf(msg.cmd) >= 0){
          this.ws.send(JSON.stringify(msg));
        } else{
          this.push_msg(msg);
        }
      },
      
      push_msg: function(msg){
        this.msg_stack.push(msg);
        this.run_stack();
      },
      
      run_stack: function(){
        if(this.robot_state === 'idle' && this.msg_stack.length > 0){
          this.robot_state = 'receiving';
          console.log(this.msg_stack[0]);
          this.ws.send(JSON.stringify(this.msg_stack[0]));
        }
      },
      
      handle_ws: function(ws_msg){
        msg = JSON.parse(ws_msg.data);
        console.log('Handle message:', msg);
        if(this.msg_stack.length > 0 && this.msg_stack[0].id == msg.id){
          if(msg.status === 'accepted'){
            if(this.cbs[msg.id]){
              this.cbs[msg.id]('started', msg);
            }
            this.robot_state = 'running';
            // console.log(this.robot_state);
          }else if(msg.status === 'complete'){
            if(this.cbs[msg.id]){
              this.cbs[msg.id]('complete', msg);
              delete this.cbs[msg.id];
            }
            this.msg_stack.shift();
            if(this.msg_stack.length === 0){
              this.broadcast('program_complete');
            }
            this.robot_state = 'idle';
            this.run_stack();
          }
        }else{
          if(this.cbs[msg.id]){
            this.cbs[msg.id]('complete', msg);
            delete this.cbs[msg.id];
          }
        } 
      },
      
      robot_state: 'idle',
      msg_stack: []
    }
    return Mirobot;
}));
;

GetMirobotLib = (function(_super) {
  __extends(GetMirobotLib, _super);

  GetMirobotLib.prototype.description = 'Mirobot.js library';

  GetMirobotLib.prototype.icon = 'pencil';

  function GetMirobotLib() {
    this.inPorts = {
      bang: new noflo.Port('bang')
    };
    this.outPorts = {
      lib: new noflo.Port('object')
    };
    this.inPorts.bang.on('data', (function(_this) {
      return function(data) {
        return _this.outPorts.lib.send(library.Mirobot);
      };
    })(this));
  }

  return GetMirobotLib;

})(noflo.Component);

exports.getComponent = function() {
  return new GetMirobotLib;
};

});



require.register("noflo-noflo/component.json", function(exports, require, module){
module.exports = {
  "name": "noflo",
  "description": "Flow-Based Programming environment for JavaScript",
  "keywords": [
    "fbp",
    "workflow",
    "flow"
  ],
  "repo": "noflo/noflo",
  "version": "0.5.10",
  "dependencies": {
    "bergie/emitter": "*",
    "jashkenas/underscore": "*",
    "noflo/fbp": "*"
  },
  "remotes": [
    "https://raw.githubusercontent.com"
  ],
  "development": {},
  "license": "MIT",
  "main": "src/lib/NoFlo.js",
  "scripts": [
    "src/lib/Graph.js",
    "src/lib/InternalSocket.js",
    "src/lib/BasePort.js",
    "src/lib/InPort.js",
    "src/lib/OutPort.js",
    "src/lib/Ports.js",
    "src/lib/Port.js",
    "src/lib/ArrayPort.js",
    "src/lib/Component.js",
    "src/lib/AsyncComponent.js",
    "src/lib/LoggingComponent.js",
    "src/lib/ComponentLoader.js",
    "src/lib/NoFlo.js",
    "src/lib/Network.js",
    "src/lib/Platform.js",
    "src/lib/Journal.js",
    "src/lib/Utils.js",
    "src/lib/Helpers.js",
    "src/lib/Streams.js",
    "src/components/Graph.js"
  ],
  "json": [
    "component.json"
  ],
  "noflo": {
    "components": {
      "Graph": "src/components/Graph.js"
    }
  }
}
});
require.register("noflo-noflo-dom/component.json", function(exports, require, module){
module.exports = {
  "name": "noflo-dom",
  "description": "Document Object Model components for NoFlo",
  "author": "Henri Bergius <henri.bergius@iki.fi>",
  "repo": "noflo/noflo-dom",
  "version": "0.0.1",
  "keywords": [],
  "dependencies": {
    "noflo/noflo": "*"
  },
  "scripts": [
    "components/AddClass.js",
    "components/AppendChild.js",
    "components/CreateElement.js",
    "components/CreateFragment.js",
    "components/GetAttribute.js",
    "components/GetElement.js",
    "components/HasClass.js",
    "components/Listen.js",
    "components/ReadHtml.js",
    "components/RemoveElement.js",
    "components/SetAttribute.js",
    "components/WriteHtml.js",
    "components/RemoveClass.js",
    "components/RequestAnimationFrame.js",
    "index.js"
  ],
  "json": [
    "component.json"
  ],
  "noflo": {
    "icon": "html5",
    "components": {
      "AddClass": "components/AddClass.js",
      "AppendChild": "components/AppendChild.js",
      "CreateElement": "components/CreateElement.js",
      "CreateFragment": "components/CreateFragment.js",
      "GetAttribute": "components/GetAttribute.js",
      "GetElement": "components/GetElement.js",
      "HasClass": "components/HasClass.js",
      "Listen": "components/Listen.js",
      "ReadHtml": "components/ReadHtml.js",
      "RemoveClass": "components/RemoveClass.js",
      "RemoveElement": "components/RemoveElement.js",
      "RequestAnimationFrame": "components/RequestAnimationFrame.js",
      "SetAttribute": "components/SetAttribute.js",
      "WriteHtml": "components/WriteHtml.js"
    }
  }
}
});
require.register("noflo-noflo-core/component.json", function(exports, require, module){
module.exports = {
  "name": "noflo-core",
  "description": "NoFlo Essentials",
  "repo": "noflo/noflo-core",
  "version": "0.1.8",
  "author": {
    "name": "Henri Bergius",
    "email": "henri.bergius@iki.fi"
  },
  "contributors": [
    {
      "name": "Kenneth Kan",
      "email": "kenhkan@gmail.com"
    },
    {
      "name": "Ryan Shaw",
      "email": "ryanshaw@unc.edu"
    }
  ],
  "keywords": [],
  "dependencies": {
    "noflo/noflo": "*",
    "jashkenas/underscore": "*"
  },
  "remotes": [
    "https://raw.githubusercontent.com"
  ],
  "scripts": [
    "components/Callback.js",
    "components/DisconnectAfterPacket.js",
    "components/Drop.js",
    "components/Group.js",
    "components/Kick.js",
    "components/Merge.js",
    "components/Output.js",
    "components/Repeat.js",
    "components/RepeatAsync.js",
    "components/RepeatDelayed.js",
    "components/SendNext.js",
    "components/Split.js",
    "components/RunInterval.js",
    "components/RunTimeout.js",
    "components/MakeFunction.js",
    "index.js",
    "components/ReadGlobal.js"
  ],
  "json": [
    "component.json"
  ],
  "noflo": {
    "components": {
      "Callback": "components/Callback.js",
      "DisconnectAfterPacket": "components/DisconnectAfterPacket.js",
      "Drop": "components/Drop.js",
      "Group": "components/Group.js",
      "Kick": "components/Kick.js",
      "MakeFunction": "components/MakeFunction.js",
      "Merge": "components/Merge.js",
      "Output": "components/Output.js",
      "ReadGlobal": "components/ReadGlobal.js",
      "Repeat": "components/Repeat.js",
      "RepeatAsync": "components/RepeatAsync.js",
      "RepeatDelayed": "components/RepeatDelayed.js",
      "RunInterval": "components/RunInterval.js",
      "RunTimeout": "components/RunTimeout.js",
      "SendNext": "components/SendNext.js",
      "Split": "components/Split.js"
    }
  }
}
});
require.register("noflo-noflo-interaction/component.json", function(exports, require, module){
module.exports = {
  "name": "noflo-interaction",
  "description": "User interaction components for NoFlo",
  "author": "Henri Bergius <henri.bergius@iki.fi>",
  "repo": "noflo/noflo-interaction",
  "version": "0.0.1",
  "keywords": [],
  "dependencies": {
    "noflo/noflo": "*"
  },
  "scripts": [
    "components/ListenChange.js",
    "components/ListenDrag.js",
    "components/ListenHash.js",
    "components/ListenKeyboard.js",
    "components/ListenKeyboardShortcuts.js",
    "components/ListenMouse.js",
    "components/ListenPointer.js",
    "components/ListenResize.js",
    "components/ListenScroll.js",
    "components/ListenSpeech.js",
    "components/ListenTouch.js",
    "components/SetHash.js",
    "components/ReadCoordinates.js",
    "index.js",
    "components/ReadGamepad.js"
  ],
  "json": [
    "component.json"
  ],
  "noflo": {
    "icon": "user",
    "components": {
      "ListenChange": "components/ListenChange.js",
      "ListenDrag": "components/ListenDrag.js",
      "ListenHash": "components/ListenHash.js",
      "ListenKeyboard": "components/ListenKeyboard.js",
      "ListenKeyboardShortcuts": "components/ListenKeyboardShortcuts.js",
      "ListenMouse": "components/ListenMouse.js",
      "ListenPointer": "components/ListenPointer.js",
      "ListenResize": "components/ListenResize.js",
      "ListenScroll": "components/ListenScroll.js",
      "ListenSpeech": "components/ListenSpeech.js",
      "ListenTouch": "components/ListenTouch.js",
      "ReadCoordinates": "components/ReadCoordinates.js",
      "ReadGamepad": "components/ReadGamepad.js",
      "SetHash": "components/SetHash.js"
    }
  }
}
});


require.register("noflo-noflo-runtime-webrtc/component.json", function(exports, require, module){
module.exports = {
  "name": "noflo-runtime-webrtc",
  "description": "WebRTC runtime transport support for NoFlo",
  "keywords": [
    "fbp",
    "webrtc",
    "flowhub",
    "noflo"
  ],
  "repo": "noflo/noflo-runtime-webrtc",
  "version": "0.0.5",
  "dependencies": {
    "noflo/noflo-runtime-base": "*",
    "bergie/emitter": "*",
    "broofa/node-uuid": "*",
    "noflo/noflo": "*",
    "noflo/noflo-core": "*"
  },
  "remotes": [
    "https://raw.githubusercontent.com"
  ],
  "development": {
  },
  "license": "MIT",
  "main": "runtime/network.js",
  "scripts": [
    "runtime/network.js"
  ],
  "json": [
    "component.json"
  ]
}

});


require.register("noflo-noflo-canvas/component.json", function(exports, require, module){
module.exports = {
  "name": "noflo-canvas",
  "description": "Canvas 2D components for NoFlo",
  "author": "Forrest Oliphant <http://forresto.com/>, Vilson Vieira <vilson@void.cc>",
  "repo": "noflo/noflo-canvas",
  "version": "0.1.11",
  "keywords": [],
  "dependencies": {
    "noflo/noflo": "*"
  },
  "remotes": [
    "https://raw.githubusercontent.com"
  ],
  "scripts": [
    "index.js",
    "lib/MakeCanvasPrimative.js",
    "components/CreateCanvas.js",
    "components/MakeColor.js",
    "components/MakeRange.js",
    "components/MakeIncrement.js",
    "components/MakeRandom.js",
    "components/MakePoint.js",
    "components/MakeGrid.js",
    "components/MakeRectangle.js",
    "components/MakeCircle.js",
    "components/MakeBezierCurve.js",
    "components/MakeArc.js",
    "components/MakePath.js",
    "components/Transform.js",
    "components/Group.js",
    "components/Recurse.js",
    "components/StrokeStyle.js",
    "components/LineWidth.js",
    "components/FillStyle.js",
    "components/Stroke.js",
    "components/Fill.js",
    "components/StrokeRect.js",
    "components/FillRect.js",
    "components/ClearRect.js",
    "components/DrawImage.js",
    "components/Draw.js",
    "components/CreateCanvas-node.js",
    "components/ColorArrayToCss.js",
    "components/SavePNG.js",
    "components/MakeRGBColor.js",
    "graphs/PointFromObject.json",
    "graphs/RectangleFromObject.json",
    "graphs/CopyCanvas.json"
  ],
  "json": [
    "component.json",
    "graphs/PointFromObject.json",
    "graphs/RectangleFromObject.json",
    "graphs/CopyCanvas.json"
  ],
  "noflo": {
    "components": {
      "ClearRect": "components/ClearRect.js",
      "ColorArrayToCss": "components/ColorArrayToCss.js",
      "CreateCanvas": "components/CreateCanvas.js",
      "Draw": "components/Draw.js",
      "DrawImage": "components/DrawImage.js",
      "Fill": "components/Fill.js",
      "FillRect": "components/FillRect.js",
      "FillStyle": "components/FillStyle.js",
      "Group": "components/Group.js",
      "LineWidth": "components/LineWidth.js",
      "MakeArc": "components/MakeArc.js",
      "MakeBezierCurve": "components/MakeBezierCurve.js",
      "MakeCircle": "components/MakeCircle.js",
      "MakeColor": "components/MakeColor.js",
      "MakeGrid": "components/MakeGrid.js",
      "MakeIncrement": "components/MakeIncrement.js",
      "MakePath": "components/MakePath.js",
      "MakePoint": "components/MakePoint.js",
      "MakeRGBColor": "components/MakeRGBColor.js",
      "MakeRandom": "components/MakeRandom.js",
      "MakeRange": "components/MakeRange.js",
      "MakeRectangle": "components/MakeRectangle.js",
      "Recurse": "components/Recurse.js",
      "SavePNG": "components/SavePNG.js",
      "Stroke": "components/Stroke.js",
      "StrokeRect": "components/StrokeRect.js",
      "StrokeStyle": "components/StrokeStyle.js",
      "Transform": "components/Transform.js"
    },
    "graphs": {
      "CopyCanvas": "graphs/CopyCanvas.json",
      "PointFromObject": "graphs/PointFromObject.json",
      "RectangleFromObject": "graphs/RectangleFromObject.json"
    }
  }
}
});
require.register("noflo-noflo-canvas/graphs/PointFromObject.json", function(exports, require, module){
module.exports = {
    "properties": {
        "name": "PointFromObject",
        "id": "PointFromObject",
        "environment": {
            "type": "all",
            "content": ""
        }
    },
    "inports": {
        "in": {
            "process": "core/Split_2l54n",
            "port": "in",
            "metadata": {
                "x": 36,
                "y": 36
            }
        }
    },
    "outports": {
        "point": {
            "process": "canvas/MakePoint_h7co8",
            "port": "point",
            "metadata": {
                "x": 792,
                "y": 36
            }
        }
    },
    "groups": [],
    "processes": {
        "core/Split_2l54n": {
            "component": "core/Split",
            "metadata": {
                "label": "core/Split",
                "x": 180,
                "y": 36
            }
        },
        "x": {
            "component": "objects/ExtractProperty",
            "metadata": {
                "label": "x",
                "x": 324,
                "y": 144
            }
        },
        "y": {
            "component": "objects/ExtractProperty",
            "metadata": {
                "label": "y",
                "x": 324,
                "y": 36
            }
        },
        "adapters/PacketsToArray_7a90h": {
            "component": "adapters/PacketsToArray",
            "metadata": {
                "label": "adapters/PacketsToArray",
                "x": 468,
                "y": 144
            }
        },
        "adapters/PacketsToArray_xtzm": {
            "component": "adapters/PacketsToArray",
            "metadata": {
                "label": "adapters/PacketsToArray",
                "x": 468,
                "y": 36
            }
        },
        "canvas/MakePoint_h7co8": {
            "component": "canvas/MakePoint",
            "metadata": {
                "label": "canvas/MakePoint",
                "x": 648,
                "y": 36
            }
        }
    },
    "connections": [
        {
            "src": {
                "process": "x",
                "port": "out"
            },
            "tgt": {
                "process": "adapters/PacketsToArray_7a90h",
                "port": "in"
            },
            "metadata": {
                "route": null
            }
        },
        {
            "src": {
                "process": "adapters/PacketsToArray_7a90h",
                "port": "out"
            },
            "tgt": {
                "process": "canvas/MakePoint_h7co8",
                "port": "x"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "y",
                "port": "out"
            },
            "tgt": {
                "process": "adapters/PacketsToArray_xtzm",
                "port": "in"
            },
            "metadata": {
                "route": null
            }
        },
        {
            "src": {
                "process": "adapters/PacketsToArray_xtzm",
                "port": "out"
            },
            "tgt": {
                "process": "canvas/MakePoint_h7co8",
                "port": "y"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "core/Split_2l54n",
                "port": "out"
            },
            "tgt": {
                "process": "x",
                "port": "in"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "core/Split_2l54n",
                "port": "out"
            },
            "tgt": {
                "process": "y",
                "port": "in"
            },
            "metadata": {
                "route": 0
            }
        },
        {
            "data": "x",
            "tgt": {
                "process": "x",
                "port": "key"
            }
        },
        {
            "data": "y",
            "tgt": {
                "process": "y",
                "port": "key"
            }
        }
    ]
}

});
require.register("noflo-noflo-canvas/graphs/RectangleFromObject.json", function(exports, require, module){
module.exports = {
    "properties": {
        "name": "RectangleFromObject",
        "id": "RectangleFromObject",
        "environment": {
            "type": "all",
            "content": ""
        }
    },
    "inports": {
        "in": {
            "process": "core/Split_xvdlb",
            "port": "in",
            "metadata": {
                "x": 540,
                "y": -288
            }
        }
    },
    "outports": {
        "rectangle": {
            "process": "canvas/MakeRectangle_v3sfl",
            "port": "rectangle",
            "metadata": {
                "x": 1296,
                "y": -252
            }
        }
    },
    "groups": [],
    "processes": {
        "width": {
            "component": "objects/ExtractProperty",
            "metadata": {
                "label": "width",
                "x": 828,
                "y": -288
            }
        },
        "adapters/PacketsToArray_smxrx": {
            "component": "adapters/PacketsToArray",
            "metadata": {
                "label": "adapters/PacketsToArray",
                "x": 972,
                "y": -288
            }
        },
        "adapters/PacketsToArray_gysu3": {
            "component": "adapters/PacketsToArray",
            "metadata": {
                "label": "adapters/PacketsToArray",
                "x": 972,
                "y": -180
            }
        },
        "height": {
            "component": "objects/ExtractProperty",
            "metadata": {
                "label": "height",
                "x": 828,
                "y": -180
            }
        },
        "core/Split_xvdlb": {
            "component": "core/Split",
            "metadata": {
                "label": "core/Split",
                "x": 684,
                "y": -288
            }
        },
        "canvas/MakeRectangle_v3sfl": {
            "component": "canvas/MakeRectangle",
            "metadata": {
                "label": "canvas/MakeRectangle",
                "x": 1152,
                "y": -252
            }
        },
        "canvas/PointFromObject_l1e2e": {
            "component": "canvas/PointFromObject",
            "metadata": {
                "label": "canvas/PointFromObject",
                "x": 828,
                "y": -396
            }
        }
    },
    "connections": [
        {
            "src": {
                "process": "core/Split_xvdlb",
                "port": "out"
            },
            "tgt": {
                "process": "width",
                "port": "in"
            },
            "metadata": {
                "route": 0
            }
        },
        {
            "src": {
                "process": "core/Split_xvdlb",
                "port": "out"
            },
            "tgt": {
                "process": "height",
                "port": "in"
            },
            "metadata": {
                "route": 0
            }
        },
        {
            "src": {
                "process": "width",
                "port": "out"
            },
            "tgt": {
                "process": "adapters/PacketsToArray_smxrx",
                "port": "in"
            },
            "metadata": {
                "route": null
            }
        },
        {
            "src": {
                "process": "adapters/PacketsToArray_smxrx",
                "port": "out"
            },
            "tgt": {
                "process": "canvas/MakeRectangle_v3sfl",
                "port": "width"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "height",
                "port": "out"
            },
            "tgt": {
                "process": "adapters/PacketsToArray_gysu3",
                "port": "in"
            },
            "metadata": {
                "route": null
            }
        },
        {
            "src": {
                "process": "adapters/PacketsToArray_gysu3",
                "port": "out"
            },
            "tgt": {
                "process": "canvas/MakeRectangle_v3sfl",
                "port": "height"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "core/Split_xvdlb",
                "port": "out"
            },
            "tgt": {
                "process": "canvas/PointFromObject_l1e2e",
                "port": "in"
            },
            "metadata": {
                "route": 0
            }
        },
        {
            "src": {
                "process": "canvas/PointFromObject_l1e2e",
                "port": "point"
            },
            "tgt": {
                "process": "canvas/MakeRectangle_v3sfl",
                "port": "point"
            },
            "metadata": {}
        },
        {
            "data": "width",
            "tgt": {
                "process": "width",
                "port": "key"
            }
        },
        {
            "data": "height",
            "tgt": {
                "process": "height",
                "port": "key"
            }
        }
    ]
}

});
require.register("noflo-noflo-canvas/graphs/CopyCanvas.json", function(exports, require, module){
module.exports = {
    "properties": {
        "name": "CopyCanvas",
        "id": "CopyCanvas",
        "environment": {
            "type": "noflo-browser"
        }
    },
    "inports": {
        "canvas": {
            "process": "core/Repeat_wuue3",
            "port": "in",
            "metadata": {
                "x": 0,
                "y": 36
            }
        }
    },
    "outports": {
        "canvas_copy": {
            "process": "Draw",
            "port": "canvas",
            "metadata": {
                "x": 828,
                "y": 72
            }
        }
    },
    "groups": [
        {
            "name": "create",
            "nodes": [
                "CreateCanvas",
                "getHeight",
                "getWidth"
            ],
            "metadata": {
                "description": "make new canvas with original dimensions"
            }
        },
        {
            "name": "copy",
            "nodes": [
                "DrawImage",
                "Draw"
            ],
            "metadata": {
                "description": "draw original to new"
            }
        }
    ],
    "processes": {
        "CreateCanvas": {
            "component": "canvas/CreateCanvas",
            "metadata": {
                "label": "CreateCanvas",
                "x": 396,
                "y": 252
            }
        },
        "DrawImage": {
            "component": "canvas/DrawImage",
            "metadata": {
                "label": "DrawImage",
                "x": 576,
                "y": 72
            }
        },
        "Draw": {
            "component": "canvas/Draw",
            "metadata": {
                "label": "Draw",
                "x": 684,
                "y": 72
            }
        },
        "core/Repeat_wuue3": {
            "component": "core/Repeat",
            "metadata": {
                "label": "core/Repeat",
                "x": 144,
                "y": 36
            }
        },
        "getHeight": {
            "component": "dom/GetAttribute",
            "metadata": {
                "label": "getHeight",
                "x": 288,
                "y": 252
            }
        },
        "getWidth": {
            "component": "dom/GetAttribute",
            "metadata": {
                "label": "getWidth",
                "x": 288,
                "y": 144
            }
        }
    },
    "connections": [
        {
            "src": {
                "process": "core/Repeat_wuue3",
                "port": "out"
            },
            "tgt": {
                "process": "getWidth",
                "port": "element"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "core/Repeat_wuue3",
                "port": "out"
            },
            "tgt": {
                "process": "getHeight",
                "port": "element"
            },
            "metadata": {
                "route": 0
            }
        },
        {
            "src": {
                "process": "getWidth",
                "port": "out"
            },
            "tgt": {
                "process": "CreateCanvas",
                "port": "width"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "getHeight",
                "port": "out"
            },
            "tgt": {
                "process": "CreateCanvas",
                "port": "height"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "DrawImage",
                "port": "drawimage"
            },
            "tgt": {
                "process": "Draw",
                "port": "commands"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "CreateCanvas",
                "port": "canvas"
            },
            "tgt": {
                "process": "Draw",
                "port": "canvas"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "core/Repeat_wuue3",
                "port": "out"
            },
            "tgt": {
                "process": "DrawImage",
                "port": "image"
            },
            "metadata": {
                "route": 0
            }
        },
        {
            "data": "width",
            "tgt": {
                "process": "getWidth",
                "port": "attribute"
            }
        },
        {
            "data": "height",
            "tgt": {
                "process": "getHeight",
                "port": "attribute"
            }
        },
        {
            "data": {
                "x": 0,
                "y": 0
            },
            "tgt": {
                "process": "DrawImage",
                "port": "destpoint"
            }
        },
        {
            "data": true,
            "tgt": {
                "process": "Draw",
                "port": "drawevery"
            }
        }
    ]
}

});
require.register("mrluc-owl-deepcopy/component.json", function(exports, require, module){
module.exports = {
    "name": "owl-deepcopy",
    "version": "0.0.2",
    "description": "Packaged http://oranlooney.com/deep-copy-javascript/ for npm",
    "author": "Oran Looney",
    "repo": "mrluc/owl-deepcopy",
    "main": "deep_copy.js",
    "scripts": [
      "deep_copy.js"
    ],
    "json": [
      "component.json"
    ]
}

});
require.register("noflo-noflo-objects/component.json", function(exports, require, module){
module.exports = {
  "name": "noflo-objects",
  "description": "Object Utilities for NoFlo",
  "version": "0.1.10",
  "keywords": [
    "noflo",
    "objects",
    "utilities"
  ],
  "author": "Kenneth Kan <kenhkan@gmail.com>",
  "repo": "noflo/objects",
  "dependencies": {
    "noflo/noflo": "*",
    "jashkenas/underscore": "*",
    "mrluc/owl-deepcopy": "*"
  },
  "scripts": [
    "components/Extend.js",
    "components/MergeObjects.js",
    "components/SplitObject.js",
    "components/ReplaceKey.js",
    "components/Keys.js",
    "components/Size.js",
    "components/Values.js",
    "components/Join.js",
    "components/ExtractProperty.js",
    "components/InsertProperty.js",
    "components/SliceArray.js",
    "components/SplitArray.js",
    "components/FilterPropertyValue.js",
    "components/FlattenObject.js",
    "components/MapProperty.js",
    "components/RemoveProperty.js",
    "components/MapPropertyValue.js",
    "components/GetObjectKey.js",
    "components/UniqueArray.js",
    "components/SetProperty.js",
    "components/SimplifyObject.js",
    "components/DuplicateProperty.js",
    "components/CreateObject.js",
    "components/CreateDate.js",
    "components/SetPropertyValue.js",
    "components/CallMethod.js",
    "index.js",
    "components/GetCurrentTimestamp.js",
    "components/FilterProperty.js",
    "components/CreateError.js"
  ],
  "json": [
    "component.json"
  ],
  "noflo": {
    "icon": "list",
    "components": {
      "CallMethod": "components/CallMethod.js",
      "CreateDate": "components/CreateDate.js",
      "CreateError": "components/CreateError.js",
      "CreateObject": "components/CreateObject.js",
      "DuplicateProperty": "components/DuplicateProperty.js",
      "Extend": "components/Extend.js",
      "ExtractProperty": "components/ExtractProperty.js",
      "FilterProperty": "components/FilterProperty.js",
      "FilterPropertyValue": "components/FilterPropertyValue.js",
      "FlattenObject": "components/FlattenObject.js",
      "GetCurrentTimestamp": "components/GetCurrentTimestamp.js",
      "GetObjectKey": "components/GetObjectKey.js",
      "InsertProperty": "components/InsertProperty.js",
      "Join": "components/Join.js",
      "Keys": "components/Keys.js",
      "MapProperty": "components/MapProperty.js",
      "MapPropertyValue": "components/MapPropertyValue.js",
      "MergeObjects": "components/MergeObjects.js",
      "RemoveProperty": "components/RemoveProperty.js",
      "ReplaceKey": "components/ReplaceKey.js",
      "SetProperty": "components/SetProperty.js",
      "SetPropertyValue": "components/SetPropertyValue.js",
      "SimplifyObject": "components/SimplifyObject.js",
      "Size": "components/Size.js",
      "SliceArray": "components/SliceArray.js",
      "SplitArray": "components/SplitArray.js",
      "SplitObject": "components/SplitObject.js",
      "UniqueArray": "components/UniqueArray.js",
      "Values": "components/Values.js"
    }
  }
}
});
require.register("noflo-noflo-groups/component.json", function(exports, require, module){
module.exports = {
  "name": "noflo-groups",
  "description": "Group Utilities for NoFlo",
  "keywords": [
    "noflo",
    "groups",
    "utilities"
  ],
  "author": "Kenneth Kan <kenhkan@gmail.com>",
  "version": "0.1.0",
  "repo": "kenhkan/groups",
  "dependencies": {
    "jashkenas/underscore": "*",
    "noflo/noflo": "*",
    "noflo/noflo-core": "*",
    "broofa/node-uuid": "*"
  },
  "scripts": [
    "components/ReadGroups.js",
    "components/RemoveGroups.js",
    "components/Regroup.js",
    "components/Group.js",
    "components/GroupZip.js",
    "components/FilterByGroup.js",
    "components/Objectify.js",
    "components/ReadGroup.js",
    "components/SendByGroup.js",
    "components/CollectGroups.js",
    "components/CollectObject.js",
    "components/CollectTree.js",
    "components/FirstGroup.js",
    "components/LastGroup.js",
    "components/MapGroup.js",
    "components/MergeGroups.js",
    "components/GroupByObjectKey.js",
    "graphs/ObjectifyByGroup.fbp",
    "components/GenerateGroup.js",
    "index.js"
  ],
  "json": [
    "component.json"
  ],
  "noflo": {
    "icon": "tags",
    "components": {
      "CollectGroups": "components/CollectGroups.js",
      "CollectObject": "components/CollectObject.js",
      "CollectTree": "components/CollectTree.js",
      "FilterByGroup": "components/FilterByGroup.js",
      "FirstGroup": "components/FirstGroup.js",
      "GenerateGroup": "components/GenerateGroup.js",
      "Group": "components/Group.js",
      "GroupByObjectKey": "components/GroupByObjectKey.js",
      "GroupZip": "components/GroupZip.js",
      "LastGroup": "components/LastGroup.js",
      "MapGroup": "components/MapGroup.js",
      "MergeGroups": "components/MergeGroups.js",
      "Objectify": "components/Objectify.js",
      "ReadGroup": "components/ReadGroup.js",
      "ReadGroups": "components/ReadGroups.js",
      "Regroup": "components/Regroup.js",
      "RemoveGroups": "components/RemoveGroups.js",
      "SendByGroup": "components/SendByGroup.js"
    },
    "graphs": {
      "ObjectifyByGroup": "graphs/ObjectifyByGroup.fbp"
    }
  },
  "fbp": [
    "graphs/ObjectifyByGroup.fbp"
  ]
}

});
require.register("noflo-noflo-strings/component.json", function(exports, require, module){
module.exports = {
  "name": "noflo-strings",
  "description": "String Utilities for NoFlo",
  "author": "Henri Bergius <henri.bergius@iki.fi>",
  "repo": "noflo/noflo-strings",
  "version": "0.0.1",
  "keywords": [],
  "dependencies": {
    "noflo/noflo": "*",
    "jashkenas/underscore": "*"
  },
  "scripts": [
    "components/CompileString.js",
    "components/Filter.js",
    "components/SendString.js",
    "components/SplitStr.js",
    "components/StringTemplate.js",
    "components/Replace.js",
    "components/Jsonify.js",
    "components/ParseFloat.js",
    "components/ParseInt.js",
    "components/ParseJson.js",
    "index.js",
    "components/Base64Encode.js",
    "components/EscapeQuotes.js",
    "components/LowerCaseString.js",
    "components/MatchReplace.js",
    "components/Quote.js",
    "components/Splice.js",
    "components/SubStr.js",
    "components/TemplateReplace.js",
    "components/ToString.js",
    "graphs/SendJson.fbp"
  ],
  "json": [
    "component.json"
  ],
  "noflo": {
    "icon": "font",
    "components": {
      "Base64Encode": "components/Base64Encode.js",
      "CompileString": "components/CompileString.js",
      "EscapeQuotes": "components/EscapeQuotes.js",
      "Filter": "components/Filter.js",
      "Jsonify": "components/Jsonify.js",
      "LowerCaseString": "components/LowerCaseString.js",
      "MatchReplace": "components/MatchReplace.js",
      "ParseFloat": "components/ParseFloat.js",
      "ParseInt": "components/ParseInt.js",
      "ParseJson": "components/ParseJson.js",
      "Quote": "components/Quote.js",
      "Replace": "components/Replace.js",
      "SendString": "components/SendString.js",
      "Splice": "components/Splice.js",
      "SplitStr": "components/SplitStr.js",
      "StringTemplate": "components/StringTemplate.js",
      "SubStr": "components/SubStr.js",
      "TemplateReplace": "components/TemplateReplace.js",
      "ToString": "components/ToString.js"
    },
    "graphs": {
      "SendJson": "graphs/SendJson.fbp"
    }
  },
  "fbp": [
    "graphs/SendJson.fbp"
  ]
}

});
require.register("noflo-noflo-ajax/component.json", function(exports, require, module){
module.exports = {
  "name": "noflo-ajax",
  "description": "AJAX components for NoFlo",
  "author": "Henri Bergius <henri.bergius@iki.fi>",
  "repo": "noflo/noflo-ajax",
  "version": "0.1.3",
  "keywords": [],
  "dependencies": {
    "noflo/noflo": "*"
  },
  "scripts": [
    "components/Get.js",
    "components/GetJsonP.js",
    "index.js",
    "components/CorsProxy.js"
  ],
  "json": [
    "component.json"
  ],
  "noflo": {
    "icon": "globe",
    "components": {
      "CorsProxy": "components/CorsProxy.js",
      "Get": "components/Get.js",
      "GetJsonP": "components/GetJsonP.js"
    }
  }
}
});


require.register("noflo-noflo-image/component.json", function(exports, require, module){
module.exports = {
  "name": "noflo-image",
  "description": "Image processing utilities for NoFlo, browser and Node.js.",
  "author": "Forrest Oliphant",
  "repo": "noflo/noflo-image",
  "version": "0.0.18",
  "keywords": [],
  "dependencies": {
    "noflo/noflo": "*",
    "visionmedia/superagent": "*",
    "noflo/noflo-canvas": "*",
    "noflo/noflo-core": "*",
    "noflo/noflo-objects": "*",
    "noflo/noflo-groups": "*",
    "noflo/noflo-strings": "*",
    "noflo/noflo-dom": "*",
    "noflo/noflo-ajax": "*",
    "jonnor/jsfeat": "*",
    "jonnor/color-thief": "*"
  },
  "remotes": [
    "https://raw.githubusercontent.com"
  ],
  "scripts": [
    "components/CalculateAspectRatio.js",
    "components/GetOrientation.js",
    "components/Measure.js",
    "components/ToFullscale.js",
    "spec/testutils.js",
    "index.js",
    "components/CreateImage-node.js",
    "components/CreateImage.js",
    "components/GetFeaturesYAPE.js",
    "components/FindFeatureFreeAreas.js",
    "graphs/UrlToCanvas.json",
    "spec/fixtures/textAnywhere/flickr-3178100324-original_small.jpg.corners.json",
    "spec/fixtures/noText/flickr-8132786781-small.jpg.corners.json",
    "spec/fixtures/textRegion/3010029968_02742a1aec_b.jpg.corners.json",
    "components/GetHistogram.js",
    "components/GetColors.js",
    "components/GetCannyEdges.js",
    "components/ImageToCanvas.js",
    "components/VideoToCanvas.js"
  ],
  "json": [
    "component.json",
    "graphs/UrlToCanvas.json",
    "spec/fixtures/textAnywhere/flickr-3178100324-original_small.jpg.corners.json",
    "spec/fixtures/noText/flickr-8132786781-small.jpg.corners.json",
    "spec/fixtures/textRegion/3010029968_02742a1aec_b.jpg.corners.json"
  ],
  "noflo": {
    "components": {
      "CalculateAspectRatio": "components/CalculateAspectRatio.js",
      "CreateImage": "components/CreateImage.js",
      "FindFeatureFreeAreas": "components/FindFeatureFreeAreas.js",
      "GetCannyEdges": "components/GetCannyEdges.js",
      "GetColors": "components/GetColors.js",
      "GetFeaturesYAPE": "components/GetFeaturesYAPE.js",
      "GetHistogram": "components/GetHistogram.js",
      "GetOrientation": "components/GetOrientation.js",
      "ImageToCanvas": "components/ImageToCanvas.js",
      "Measure": "components/Measure.js",
      "ToFullscale": "components/ToFullscale.js",
      "VideoToCanvas": "components/VideoToCanvas.js"
    },
    "graphs": {
      "UrlToCanvas": "graphs/UrlToCanvas.json"
    }
  }
}
});
require.register("noflo-noflo-image/graphs/UrlToCanvas.json", function(exports, require, module){
module.exports = {
    "properties": {
        "name": "UrlToCanvas",
        "id": "UrlToCanvas",
        "project": "url2can",
        "environment": {
            "type": "all"
        }
    },
    "inports": {
        "url": {
            "process": "img",
            "port": "url",
            "metadata": {
                "x": 36,
                "y": 360
            }
        },
        "crossorigin": {
            "process": "img",
            "port": "crossorigin",
            "metadata": {
                "x": 36,
                "y": 400
            }
        }
    },
    "outports": {
        "canvas": {
            "process": "canvas/Draw_n4cqh",
            "port": "canvas",
            "metadata": {
                "x": 828,
                "y": 180
            }
        },
        "error": {
            "process": "img",
            "port": "error",
            "metadata": {
                "x": 828,
                "y": 504
            }
        }
    },
    "groups": [],
    "processes": {
        "canvas/Draw_n4cqh": {
            "component": "canvas/Draw",
            "metadata": {
                "label": "canvas/Draw",
                "x": 684,
                "y": 180
            }
        },
        "drawImage": {
            "component": "canvas/DrawImage",
            "metadata": {
                "label": "drawImage",
                "x": 504,
                "y": 144
            }
        },
        "img": {
            "component": "image/CreateImage",
            "metadata": {
                "label": "img",
                "x": 180,
                "y": 216
            }
        },
        "canvas": {
            "component": "canvas/CreateCanvas",
            "metadata": {
                "label": "canvas",
                "x": 504,
                "y": 360
            }
        },
        "w": {
            "component": "objects/ExtractProperty",
            "metadata": {
                "label": "w",
                "x": 360,
                "y": 360
            }
        },
        "h": {
            "component": "objects/ExtractProperty",
            "metadata": {
                "label": "h",
                "x": 360,
                "y": 252
            }
        },
        "core/RepeatAsync_u0yan": {
            "component": "core/RepeatAsync",
            "metadata": {
                "label": "core/RepeatAsync",
                "x": 504,
                "y": 36
            }
        }
    },
    "connections": [
        {
            "src": {
                "process": "img",
                "port": "image"
            },
            "tgt": {
                "process": "drawImage",
                "port": "image"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "w",
                "port": "out"
            },
            "tgt": {
                "process": "canvas",
                "port": "width"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "h",
                "port": "out"
            },
            "tgt": {
                "process": "canvas",
                "port": "height"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "img",
                "port": "image"
            },
            "tgt": {
                "process": "w",
                "port": "in"
            },
            "metadata": {
                "route": 0
            }
        },
        {
            "src": {
                "process": "img",
                "port": "image"
            },
            "tgt": {
                "process": "h",
                "port": "in"
            },
            "metadata": {
                "route": 0
            }
        },
        {
            "src": {
                "process": "drawImage",
                "port": "drawimage"
            },
            "tgt": {
                "process": "canvas/Draw_n4cqh",
                "port": "commands"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "canvas",
                "port": "canvas"
            },
            "tgt": {
                "process": "canvas/Draw_n4cqh",
                "port": "canvas"
            },
            "metadata": {}
        },
        {
            "src": {
                "process": "img",
                "port": "image"
            },
            "tgt": {
                "process": "core/RepeatAsync_u0yan",
                "port": "in"
            },
            "metadata": {
                "route": 0
            }
        },
        {
            "src": {
                "process": "core/RepeatAsync_u0yan",
                "port": "out"
            },
            "tgt": {
                "process": "canvas/Draw_n4cqh",
                "port": "tick"
            },
            "metadata": {}
        },
        {
            "data": "width",
            "tgt": {
                "process": "w",
                "port": "key"
            }
        },
        {
            "data": "height",
            "tgt": {
                "process": "h",
                "port": "key"
            }
        },
        {
            "data": {
                "x": 0,
                "y": 0
            },
            "tgt": {
                "process": "drawImage",
                "port": "destpoint"
            }
        }
    ]
}
});
require.register("noflo-noflo-image/spec/fixtures/textAnywhere/flickr-3178100324-original_small.jpg.corners.json", function(exports, require, module){
module.exports = {"corners":[{"x":377,"y":246,"score":32,"level":0},{"x":598,"y":248,"score":56,"level":0},{"x":1276,"y":248,"score":46,"level":0},{"x":1126,"y":249,"score":88,"level":0},{"x":417,"y":250,"score":62,"level":0},{"x":1050,"y":250,"score":67,"level":0},{"x":377,"y":251,"score":200,"level":0},{"x":411,"y":251,"score":120,"level":0},{"x":435,"y":251,"score":44,"level":0},{"x":530,"y":251,"score":94,"level":0},{"x":587,"y":251,"score":78,"level":0},{"x":654,"y":251,"score":104,"level":0},{"x":675,"y":251,"score":58,"level":0},{"x":711,"y":251,"score":126,"level":0},{"x":756,"y":251,"score":109,"level":0},{"x":776,"y":251,"score":82,"level":0},{"x":785,"y":251,"score":32,"level":0},{"x":816,"y":251,"score":113,"level":0},{"x":833,"y":251,"score":60,"level":0},{"x":838,"y":251,"score":35,"level":0},{"x":840,"y":251,"score":38,"level":0},{"x":864,"y":251,"score":30,"level":0},{"x":866,"y":251,"score":58,"level":0},{"x":885,"y":251,"score":28,"level":0},{"x":892,"y":251,"score":48,"level":0},{"x":925,"y":251,"score":108,"level":0},{"x":943,"y":251,"score":43,"level":0},{"x":982,"y":251,"score":124,"level":0},{"x":1000,"y":251,"score":47,"level":0},{"x":1044,"y":251,"score":136,"level":0},{"x":1070,"y":251,"score":107,"level":0},{"x":1120,"y":251,"score":121,"level":0},{"x":1148,"y":251,"score":76,"level":0},{"x":1201,"y":251,"score":133,"level":0},{"x":1223,"y":251,"score":76,"level":0},{"x":1229,"y":251,"score":30,"level":0},{"x":1248,"y":251,"score":26,"level":0},{"x":1270,"y":251,"score":86,"level":0},{"x":1294,"y":251,"score":53,"level":0},{"x":1296,"y":251,"score":76,"level":0},{"x":1340,"y":251,"score":76,"level":0},{"x":1359,"y":251,"score":57,"level":0},{"x":1401,"y":251,"score":63,"level":0},{"x":1421,"y":251,"score":27,"level":0},{"x":1425,"y":251,"score":27,"level":0},{"x":1456,"y":251,"score":50,"level":0},{"x":1476,"y":251,"score":29,"level":0},{"x":1485,"y":251,"score":32,"level":0},{"x":510,"y":252,"score":108,"level":0},{"x":1281,"y":253,"score":35,"level":0},{"x":598,"y":254,"score":56,"level":0},{"x":1348,"y":255,"score":36,"level":0},{"x":664,"y":256,"score":48,"level":0},{"x":721,"y":256,"score":47,"level":0},{"x":992,"y":256,"score":37,"level":0},{"x":1291,"y":256,"score":30,"level":0},{"x":535,"y":257,"score":39,"level":0},{"x":610,"y":257,"score":53,"level":0},{"x":1147,"y":257,"score":52,"level":0},{"x":1155,"y":257,"score":37,"level":0},{"x":1370,"y":257,"score":33,"level":0},{"x":1471,"y":257,"score":26,"level":0},{"x":517,"y":258,"score":26,"level":0},{"x":1124,"y":258,"score":48,"level":0},{"x":416,"y":259,"score":71,"level":0},{"x":670,"y":259,"score":54,"level":0},{"x":1345,"y":259,"score":26,"level":0},{"x":1475,"y":259,"score":26,"level":0},{"x":751,"y":260,"score":30,"level":0},{"x":1070,"y":260,"score":35,"level":0},{"x":445,"y":261,"score":27,"level":0},{"x":599,"y":261,"score":27,"level":0},{"x":662,"y":261,"score":46,"level":0},{"x":792,"y":261,"score":34,"level":0},{"x":818,"y":261,"score":35,"level":0},{"x":1086,"y":261,"score":38,"level":0},{"x":1421,"y":261,"score":46,"level":0},{"x":1490,"y":261,"score":31,"level":0},{"x":519,"y":262,"score":72,"level":0},{"x":532,"y":262,"score":60,"level":0},{"x":989,"y":262,"score":46,"level":0},{"x":1297,"y":262,"score":31,"level":0},{"x":1360,"y":262,"score":54,"level":0},{"x":420,"y":263,"score":36,"level":0},{"x":643,"y":263,"score":43,"level":0},{"x":772,"y":263,"score":29,"level":0},{"x":1050,"y":263,"score":29,"level":0},{"x":1234,"y":263,"score":57,"level":0},{"x":674,"y":264,"score":56,"level":0},{"x":824,"y":264,"score":31,"level":0},{"x":1290,"y":264,"score":42,"level":0},{"x":1382,"y":264,"score":26,"level":0},{"x":778,"y":265,"score":46,"level":0},{"x":1139,"y":265,"score":28,"level":0},{"x":1214,"y":265,"score":45,"level":0},{"x":1373,"y":265,"score":33,"level":0},{"x":1480,"y":265,"score":31,"level":0},{"x":629,"y":266,"score":104,"level":0},{"x":703,"y":266,"score":39,"level":0},{"x":951,"y":266,"score":31,"level":0},{"x":1002,"y":266,"score":40,"level":0},{"x":1152,"y":266,"score":42,"level":0},{"x":530,"y":267,"score":33,"level":0},{"x":622,"y":267,"score":33,"level":0},{"x":1303,"y":267,"score":32,"level":0},{"x":435,"y":268,"score":48,"level":0},{"x":635,"y":268,"score":68,"level":0},{"x":1317,"y":268,"score":39,"level":0},{"x":1378,"y":268,"score":45,"level":0},{"x":1442,"y":268,"score":35,"level":0},{"x":540,"y":269,"score":67,"level":0},{"x":637,"y":269,"score":87,"level":0},{"x":762,"y":269,"score":26,"level":0},{"x":935,"y":269,"score":36,"level":0},{"x":1241,"y":269,"score":35,"level":0},{"x":1269,"y":269,"score":31,"level":0},{"x":697,"y":270,"score":53,"level":0},{"x":707,"y":270,"score":84,"level":0},{"x":836,"y":270,"score":35,"level":0},{"x":1137,"y":270,"score":38,"level":0},{"x":625,"y":271,"score":29,"level":0},{"x":820,"y":271,"score":32,"level":0},{"x":1145,"y":271,"score":26,"level":0},{"x":1163,"y":271,"score":27,"level":0},{"x":1171,"y":271,"score":30,"level":0},{"x":1382,"y":271,"score":35,"level":0},{"x":1426,"y":271,"score":35,"level":0},{"x":1437,"y":271,"score":26,"level":0},{"x":494,"y":272,"score":29,"level":0},{"x":534,"y":272,"score":52,"level":0},{"x":994,"y":272,"score":30,"level":0},{"x":1448,"y":272,"score":28,"level":0},{"x":528,"y":273,"score":97,"level":0},{"x":547,"y":273,"score":33,"level":0},{"x":661,"y":273,"score":27,"level":0},{"x":1022,"y":273,"score":36,"level":0},{"x":1149,"y":273,"score":60,"level":0},{"x":684,"y":274,"score":31,"level":0},{"x":1441,"y":274,"score":27,"level":0},{"x":624,"y":275,"score":85,"level":0},{"x":879,"y":275,"score":36,"level":0},{"x":1078,"y":275,"score":26,"level":0},{"x":428,"y":276,"score":63,"level":0},{"x":721,"y":276,"score":73,"level":0},{"x":938,"y":276,"score":41,"level":0},{"x":1379,"y":276,"score":28,"level":0},{"x":403,"y":277,"score":28,"level":0},{"x":519,"y":277,"score":31,"level":0},{"x":550,"y":277,"score":30,"level":0},{"x":613,"y":277,"score":32,"level":0},{"x":953,"y":277,"score":31,"level":0},{"x":1131,"y":277,"score":28,"level":0},{"x":1292,"y":277,"score":28,"level":0},{"x":1338,"y":277,"score":35,"level":0},{"x":434,"y":278,"score":27,"level":0},{"x":1235,"y":278,"score":32,"level":0},{"x":1302,"y":278,"score":33,"level":0},{"x":1394,"y":278,"score":35,"level":0},{"x":626,"y":279,"score":29,"level":0},{"x":783,"y":279,"score":27,"level":0},{"x":991,"y":279,"score":33,"level":0},{"x":647,"y":280,"score":34,"level":0},{"x":706,"y":280,"score":43,"level":0},{"x":897,"y":280,"score":56,"level":0},{"x":1246,"y":280,"score":55,"level":0},{"x":1340,"y":280,"score":38,"level":0},{"x":1397,"y":280,"score":28,"level":0},{"x":1459,"y":280,"score":46,"level":0},{"x":455,"y":281,"score":35,"level":0},{"x":731,"y":281,"score":30,"level":0},{"x":890,"y":281,"score":36,"level":0},{"x":1141,"y":281,"score":40,"level":0},{"x":1321,"y":281,"score":29,"level":0},{"x":1467,"y":281,"score":38,"level":0},{"x":644,"y":282,"score":30,"level":0},{"x":778,"y":282,"score":42,"level":0},{"x":884,"y":282,"score":33,"level":0},{"x":1087,"y":282,"score":28,"level":0},{"x":1172,"y":283,"score":38,"level":0},{"x":1010,"y":284,"score":26,"level":0},{"x":532,"y":285,"score":56,"level":0},{"x":787,"y":285,"score":58,"level":0},{"x":1302,"y":285,"score":28,"level":0},{"x":1395,"y":285,"score":31,"level":0},{"x":1473,"y":285,"score":44,"level":0},{"x":839,"y":286,"score":34,"level":0},{"x":1260,"y":286,"score":42,"level":0},{"x":1312,"y":286,"score":34,"level":0},{"x":1349,"y":286,"score":34,"level":0},{"x":1398,"y":286,"score":51,"level":0},{"x":628,"y":287,"score":68,"level":0},{"x":776,"y":287,"score":28,"level":0},{"x":1059,"y":287,"score":28,"level":0},{"x":455,"y":288,"score":43,"level":0},{"x":520,"y":288,"score":33,"level":0},{"x":823,"y":288,"score":34,"level":0},{"x":1083,"y":288,"score":30,"level":0},{"x":1161,"y":288,"score":68,"level":0},{"x":1246,"y":288,"score":34,"level":0},{"x":1344,"y":288,"score":36,"level":0},{"x":1407,"y":288,"score":64,"level":0},{"x":722,"y":289,"score":54,"level":0},{"x":1270,"y":289,"score":29,"level":0},{"x":1319,"y":289,"score":43,"level":0},{"x":454,"y":290,"score":35,"level":0},{"x":552,"y":290,"score":102,"level":0},{"x":704,"y":291,"score":48,"level":0},{"x":781,"y":291,"score":54,"level":0},{"x":787,"y":291,"score":26,"level":0},{"x":889,"y":291,"score":29,"level":0},{"x":643,"y":292,"score":102,"level":0},{"x":826,"y":292,"score":28,"level":0},{"x":1422,"y":292,"score":30,"level":0},{"x":1460,"y":292,"score":27,"level":0},{"x":710,"y":293,"score":38,"level":0},{"x":971,"y":293,"score":26,"level":0},{"x":997,"y":293,"score":62,"level":0},{"x":1238,"y":293,"score":38,"level":0},{"x":1331,"y":293,"score":28,"level":0},{"x":1475,"y":293,"score":43,"level":0},{"x":738,"y":294,"score":37,"level":0},{"x":955,"y":294,"score":40,"level":0},{"x":975,"y":294,"score":32,"level":0},{"x":1405,"y":294,"score":53,"level":0},{"x":531,"y":295,"score":38,"level":0},{"x":735,"y":295,"score":47,"level":0},{"x":983,"y":295,"score":40,"level":0},{"x":1257,"y":295,"score":31,"level":0},{"x":1333,"y":295,"score":36,"level":0},{"x":520,"y":296,"score":28,"level":0},{"x":978,"y":296,"score":59,"level":0},{"x":1184,"y":296,"score":47,"level":0},{"x":838,"y":297,"score":32,"level":0},{"x":1008,"y":297,"score":158,"level":0},{"x":1179,"y":297,"score":27,"level":0},{"x":1421,"y":297,"score":47,"level":0},{"x":421,"y":298,"score":70,"level":0},{"x":743,"y":298,"score":53,"level":0},{"x":787,"y":298,"score":112,"level":0},{"x":732,"y":299,"score":37,"level":0},{"x":1089,"y":299,"score":45,"level":0},{"x":1490,"y":299,"score":27,"level":0},{"x":516,"y":300,"score":30,"level":0},{"x":689,"y":300,"score":100,"level":0},{"x":696,"y":300,"score":78,"level":0},{"x":996,"y":300,"score":68,"level":0},{"x":999,"y":300,"score":61,"level":0},{"x":1188,"y":300,"score":40,"level":0},{"x":547,"y":301,"score":41,"level":0},{"x":984,"y":301,"score":64,"level":0},{"x":621,"y":302,"score":84,"level":0},{"x":798,"y":302,"score":77,"level":0},{"x":970,"y":302,"score":29,"level":0},{"x":1238,"y":302,"score":34,"level":0},{"x":1241,"y":302,"score":39,"level":0},{"x":1484,"y":302,"score":32,"level":0},{"x":657,"y":303,"score":28,"level":0},{"x":660,"y":303,"score":28,"level":0},{"x":837,"y":303,"score":26,"level":0},{"x":1086,"y":303,"score":53,"level":0},{"x":1402,"y":303,"score":27,"level":0},{"x":898,"y":304,"score":37,"level":0},{"x":1070,"y":304,"score":48,"level":0},{"x":420,"y":305,"score":68,"level":0},{"x":736,"y":305,"score":26,"level":0},{"x":893,"y":305,"score":27,"level":0},{"x":994,"y":305,"score":61,"level":0},{"x":1178,"y":305,"score":32,"level":0},{"x":614,"y":306,"score":37,"level":0},{"x":922,"y":306,"score":31,"level":0},{"x":1362,"y":306,"score":42,"level":0},{"x":440,"y":307,"score":76,"level":0},{"x":747,"y":307,"score":28,"level":0},{"x":1284,"y":307,"score":28,"level":0},{"x":1426,"y":307,"score":42,"level":0},{"x":730,"y":308,"score":60,"level":0},{"x":1123,"y":308,"score":26,"level":0},{"x":1174,"y":308,"score":72,"level":0},{"x":1180,"y":308,"score":40,"level":0},{"x":1480,"y":308,"score":36,"level":0},{"x":517,"y":309,"score":47,"level":0},{"x":915,"y":309,"score":52,"level":0},{"x":1270,"y":309,"score":39,"level":0},{"x":1279,"y":309,"score":36,"level":0},{"x":525,"y":310,"score":30,"level":0},{"x":966,"y":310,"score":29,"level":0},{"x":1002,"y":310,"score":62,"level":0},{"x":1197,"y":310,"score":32,"level":0},{"x":396,"y":311,"score":26,"level":0},{"x":432,"y":311,"score":34,"level":0},{"x":499,"y":311,"score":27,"level":0},{"x":623,"y":311,"score":91,"level":0},{"x":1075,"y":311,"score":29,"level":0},{"x":1413,"y":311,"score":43,"level":0},{"x":526,"y":312,"score":35,"level":0},{"x":1348,"y":312,"score":35,"level":0},{"x":1431,"y":312,"score":60,"level":0},{"x":426,"y":313,"score":100,"level":0},{"x":1013,"y":313,"score":34,"level":0},{"x":1295,"y":313,"score":37,"level":0},{"x":560,"y":314,"score":26,"level":0},{"x":997,"y":314,"score":34,"level":0},{"x":1164,"y":314,"score":43,"level":0},{"x":1433,"y":314,"score":49,"level":0},{"x":410,"y":315,"score":27,"level":0},{"x":533,"y":315,"score":58,"level":0},{"x":1270,"y":315,"score":53,"level":0},{"x":1280,"y":315,"score":26,"level":0},{"x":522,"y":316,"score":38,"level":0},{"x":792,"y":316,"score":49,"level":0},{"x":1181,"y":316,"score":53,"level":0},{"x":1201,"y":316,"score":54,"level":0},{"x":679,"y":317,"score":42,"level":0},{"x":745,"y":317,"score":33,"level":0},{"x":914,"y":317,"score":71,"level":0},{"x":436,"y":318,"score":58,"level":0},{"x":722,"y":318,"score":33,"level":0},{"x":1007,"y":318,"score":39,"level":0},{"x":1104,"y":318,"score":29,"level":0},{"x":1207,"y":318,"score":36,"level":0},{"x":400,"y":319,"score":28,"level":0},{"x":545,"y":319,"score":51,"level":0},{"x":863,"y":319,"score":35,"level":0},{"x":908,"y":319,"score":36,"level":0},{"x":987,"y":319,"score":51,"level":0},{"x":1070,"y":319,"score":34,"level":0},{"x":1169,"y":319,"score":27,"level":0},{"x":417,"y":320,"score":54,"level":0},{"x":745,"y":320,"score":35,"level":0},{"x":782,"y":320,"score":30,"level":0},{"x":994,"y":320,"score":33,"level":0},{"x":727,"y":321,"score":109,"level":0},{"x":1003,"y":321,"score":35,"level":0},{"x":1197,"y":321,"score":77,"level":0},{"x":1279,"y":321,"score":68,"level":0},{"x":1444,"y":321,"score":43,"level":0},{"x":410,"y":322,"score":44,"level":0},{"x":464,"y":322,"score":32,"level":0},{"x":478,"y":322,"score":50,"level":0},{"x":631,"y":322,"score":26,"level":0},{"x":1199,"y":322,"score":77,"level":0},{"x":1047,"y":323,"score":28,"level":0},{"x":1360,"y":323,"score":32,"level":0},{"x":475,"y":324,"score":30,"level":0},{"x":854,"y":324,"score":40,"level":0},{"x":911,"y":324,"score":73,"level":0},{"x":1102,"y":324,"score":36,"level":0},{"x":1201,"y":324,"score":39,"level":0},{"x":1437,"y":324,"score":28,"level":0},{"x":1448,"y":324,"score":36,"level":0},{"x":469,"y":325,"score":52,"level":0},{"x":681,"y":325,"score":63,"level":0},{"x":787,"y":325,"score":28,"level":0},{"x":801,"y":325,"score":42,"level":0},{"x":1007,"y":325,"score":31,"level":0},{"x":1193,"y":325,"score":52,"level":0},{"x":1212,"y":325,"score":40,"level":0},{"x":1274,"y":325,"score":26,"level":0},{"x":1450,"y":325,"score":41,"level":0},{"x":480,"y":326,"score":39,"level":0},{"x":612,"y":326,"score":28,"level":0},{"x":636,"y":326,"score":46,"level":0},{"x":729,"y":326,"score":33,"level":0},{"x":743,"y":326,"score":70,"level":0},{"x":826,"y":326,"score":29,"level":0},{"x":862,"y":326,"score":60,"level":0},{"x":918,"y":326,"score":126,"level":0},{"x":1095,"y":326,"score":46,"level":0},{"x":1282,"y":326,"score":27,"level":0},{"x":1440,"y":326,"score":29,"level":0},{"x":1473,"y":326,"score":36,"level":0},{"x":554,"y":327,"score":42,"level":0},{"x":849,"y":327,"score":30,"level":0},{"x":889,"y":327,"score":46,"level":0},{"x":996,"y":327,"score":27,"level":0},{"x":1108,"y":327,"score":27,"level":0},{"x":1185,"y":327,"score":28,"level":0},{"x":1293,"y":327,"score":55,"level":0},{"x":1376,"y":327,"score":47,"level":0},{"x":548,"y":328,"score":112,"level":0},{"x":725,"y":328,"score":30,"level":0},{"x":821,"y":328,"score":36,"level":0},{"x":872,"y":328,"score":54,"level":0},{"x":1320,"y":328,"score":31,"level":0},{"x":1454,"y":328,"score":34,"level":0},{"x":464,"y":329,"score":66,"level":0},{"x":618,"y":329,"score":55,"level":0},{"x":814,"y":329,"score":36,"level":0},{"x":1026,"y":329,"score":32,"level":0},{"x":1062,"y":329,"score":28,"level":0},{"x":1185,"y":329,"score":30,"level":0},{"x":1217,"y":329,"score":62,"level":0},{"x":1346,"y":329,"score":27,"level":0},{"x":1456,"y":329,"score":41,"level":0},{"x":554,"y":330,"score":26,"level":0},{"x":927,"y":330,"score":44,"level":0},{"x":966,"y":330,"score":30,"level":0},{"x":1088,"y":330,"score":27,"level":0},{"x":1102,"y":330,"score":130,"level":0},{"x":1308,"y":330,"score":54,"level":0},{"x":801,"y":331,"score":55,"level":0},{"x":934,"y":331,"score":55,"level":0},{"x":1140,"y":331,"score":30,"level":0},{"x":1278,"y":331,"score":26,"level":0},{"x":1382,"y":331,"score":52,"level":0},{"x":1019,"y":332,"score":30,"level":0},{"x":1108,"y":332,"score":45,"level":0},{"x":1126,"y":332,"score":36,"level":0},{"x":1213,"y":332,"score":82,"level":0},{"x":1253,"y":332,"score":34,"level":0},{"x":863,"y":333,"score":42,"level":0},{"x":871,"y":333,"score":26,"level":0},{"x":919,"y":333,"score":32,"level":0},{"x":1001,"y":333,"score":28,"level":0},{"x":1219,"y":333,"score":63,"level":0},{"x":415,"y":334,"score":29,"level":0},{"x":731,"y":334,"score":31,"level":0},{"x":1115,"y":334,"score":84,"level":0},{"x":1133,"y":334,"score":32,"level":0},{"x":1202,"y":334,"score":29,"level":0},{"x":1338,"y":334,"score":35,"level":0},{"x":1464,"y":334,"score":37,"level":0},{"x":925,"y":335,"score":104,"level":0},{"x":1315,"y":335,"score":32,"level":0},{"x":1377,"y":335,"score":32,"level":0},{"x":1140,"y":336,"score":26,"level":0},{"x":1156,"y":336,"score":32,"level":0},{"x":1444,"y":336,"score":26,"level":0},{"x":1467,"y":336,"score":44,"level":0},{"x":879,"y":337,"score":35,"level":0},{"x":1108,"y":337,"score":59,"level":0},{"x":1127,"y":337,"score":28,"level":0},{"x":1143,"y":337,"score":30,"level":0},{"x":1489,"y":337,"score":32,"level":0},{"x":458,"y":338,"score":78,"level":0},{"x":907,"y":338,"score":28,"level":0},{"x":1146,"y":338,"score":39,"level":0},{"x":1326,"y":338,"score":53,"level":0},{"x":530,"y":339,"score":34,"level":0},{"x":1263,"y":339,"score":32,"level":0},{"x":1300,"y":339,"score":63,"level":0},{"x":393,"y":340,"score":54,"level":0},{"x":456,"y":340,"score":60,"level":0},{"x":747,"y":340,"score":35,"level":0},{"x":1013,"y":340,"score":49,"level":0},{"x":1136,"y":340,"score":39,"level":0},{"x":1152,"y":340,"score":65,"level":0},{"x":1222,"y":340,"score":32,"level":0},{"x":1342,"y":340,"score":37,"level":0},{"x":1388,"y":340,"score":29,"level":0},{"x":601,"y":341,"score":67,"level":0},{"x":832,"y":341,"score":34,"level":0},{"x":891,"y":341,"score":66,"level":0},{"x":1156,"y":341,"score":32,"level":0},{"x":1324,"y":341,"score":33,"level":0},{"x":665,"y":342,"score":29,"level":0},{"x":1160,"y":342,"score":55,"level":0},{"x":1211,"y":342,"score":43,"level":0},{"x":1315,"y":342,"score":48,"level":0},{"x":1400,"y":342,"score":74,"level":0},{"x":776,"y":343,"score":32,"level":0},{"x":817,"y":343,"score":28,"level":0},{"x":947,"y":343,"score":34,"level":0},{"x":1121,"y":343,"score":38,"level":0},{"x":1147,"y":343,"score":28,"level":0},{"x":1164,"y":343,"score":55,"level":0},{"x":460,"y":344,"score":37,"level":0},{"x":480,"y":344,"score":28,"level":0},{"x":721,"y":344,"score":27,"level":0},{"x":1014,"y":344,"score":44,"level":0},{"x":1226,"y":344,"score":28,"level":0},{"x":457,"y":345,"score":64,"level":0},{"x":1086,"y":345,"score":34,"level":0},{"x":1254,"y":345,"score":46,"level":0},{"x":1273,"y":345,"score":26,"level":0},{"x":1300,"y":345,"score":41,"level":0},{"x":1395,"y":345,"score":43,"level":0},{"x":686,"y":346,"score":34,"level":0},{"x":1297,"y":346,"score":35,"level":0},{"x":1310,"y":346,"score":53,"level":0},{"x":1344,"y":346,"score":28,"level":0},{"x":1436,"y":346,"score":26,"level":0},{"x":453,"y":347,"score":26,"level":0},{"x":1126,"y":347,"score":29,"level":0},{"x":1159,"y":347,"score":68,"level":0},{"x":1176,"y":347,"score":44,"level":0},{"x":1178,"y":347,"score":28,"level":0},{"x":1208,"y":347,"score":38,"level":0},{"x":408,"y":348,"score":27,"level":0},{"x":1010,"y":348,"score":40,"level":0},{"x":1314,"y":348,"score":119,"level":0},{"x":1478,"y":348,"score":60,"level":0},{"x":377,"y":349,"score":53,"level":0},{"x":447,"y":349,"score":30,"level":0},{"x":596,"y":349,"score":32,"level":0},{"x":673,"y":349,"score":49,"level":0},{"x":681,"y":349,"score":46,"level":0},{"x":859,"y":349,"score":26,"level":0},{"x":1248,"y":349,"score":66,"level":0},{"x":1490,"y":349,"score":39,"level":0},{"x":444,"y":350,"score":47,"level":0},{"x":761,"y":350,"score":54,"level":0},{"x":962,"y":350,"score":28,"level":0},{"x":1170,"y":350,"score":27,"level":0},{"x":1188,"y":350,"score":30,"level":0},{"x":1265,"y":350,"score":39,"level":0},{"x":1267,"y":350,"score":26,"level":0},{"x":1292,"y":350,"score":76,"level":0},{"x":441,"y":351,"score":26,"level":0},{"x":521,"y":351,"score":26,"level":0},{"x":707,"y":351,"score":36,"level":0},{"x":1230,"y":351,"score":28,"level":0},{"x":1235,"y":351,"score":34,"level":0},{"x":1277,"y":351,"score":32,"level":0},{"x":1328,"y":351,"score":27,"level":0},{"x":945,"y":352,"score":56,"level":0},{"x":1148,"y":352,"score":45,"level":0},{"x":1178,"y":352,"score":41,"level":0},{"x":1192,"y":352,"score":78,"level":0},{"x":1321,"y":352,"score":37,"level":0},{"x":1402,"y":352,"score":74,"level":0},{"x":756,"y":353,"score":48,"level":0},{"x":947,"y":353,"score":41,"level":0},{"x":1104,"y":353,"score":46,"level":0},{"x":382,"y":354,"score":40,"level":0},{"x":835,"y":354,"score":52,"level":0},{"x":1015,"y":354,"score":59,"level":0},{"x":1215,"y":354,"score":44,"level":0},{"x":1339,"y":354,"score":31,"level":0},{"x":420,"y":355,"score":64,"level":0},{"x":759,"y":355,"score":37,"level":0},{"x":767,"y":355,"score":42,"level":0},{"x":845,"y":355,"score":32,"level":0},{"x":893,"y":355,"score":79,"level":0},{"x":939,"y":355,"score":50,"level":0},{"x":948,"y":355,"score":42,"level":0},{"x":1031,"y":355,"score":80,"level":0},{"x":1143,"y":355,"score":64,"level":0},{"x":1189,"y":355,"score":80,"level":0},{"x":1245,"y":355,"score":48,"level":0},{"x":1257,"y":355,"score":59,"level":0},{"x":1124,"y":356,"score":28,"level":0},{"x":1231,"y":356,"score":28,"level":0},{"x":1325,"y":356,"score":53,"level":0},{"x":889,"y":357,"score":58,"level":0},{"x":940,"y":357,"score":59,"level":0},{"x":1164,"y":357,"score":29,"level":0},{"x":1239,"y":357,"score":44,"level":0},{"x":1313,"y":357,"score":45,"level":0},{"x":671,"y":358,"score":42,"level":0},{"x":700,"y":358,"score":28,"level":0},{"x":715,"y":358,"score":26,"level":0},{"x":852,"y":358,"score":39,"level":0},{"x":384,"y":359,"score":28,"level":0},{"x":682,"y":359,"score":100,"level":0},{"x":774,"y":359,"score":92,"level":0},{"x":858,"y":359,"score":26,"level":0},{"x":960,"y":359,"score":34,"level":0},{"x":1103,"y":359,"score":45,"level":0},{"x":1141,"y":359,"score":118,"level":0},{"x":511,"y":360,"score":47,"level":0},{"x":767,"y":360,"score":44,"level":0},{"x":902,"y":360,"score":125,"level":0},{"x":1083,"y":360,"score":138,"level":0},{"x":1265,"y":360,"score":41,"level":0},{"x":1304,"y":360,"score":32,"level":0},{"x":1332,"y":360,"score":56,"level":0},{"x":1372,"y":360,"score":30,"level":0},{"x":752,"y":361,"score":30,"level":0},{"x":759,"y":361,"score":38,"level":0},{"x":793,"y":361,"score":41,"level":0},{"x":1152,"y":361,"score":29,"level":0},{"x":1216,"y":361,"score":38,"level":0},{"x":1377,"y":361,"score":31,"level":0},{"x":423,"y":362,"score":120,"level":0},{"x":791,"y":362,"score":57,"level":0},{"x":871,"y":362,"score":41,"level":0},{"x":878,"y":362,"score":27,"level":0},{"x":1237,"y":362,"score":27,"level":0},{"x":1243,"y":362,"score":95,"level":0},{"x":1333,"y":362,"score":74,"level":0},{"x":1339,"y":362,"score":179,"level":0},{"x":1419,"y":362,"score":47,"level":0},{"x":1444,"y":362,"score":29,"level":0},{"x":876,"y":363,"score":60,"level":0},{"x":887,"y":363,"score":40,"level":0},{"x":890,"y":363,"score":26,"level":0},{"x":1018,"y":363,"score":32,"level":0},{"x":1276,"y":363,"score":32,"level":0},{"x":1314,"y":363,"score":34,"level":0},{"x":1407,"y":363,"score":26,"level":0},{"x":1414,"y":363,"score":84,"level":0},{"x":1417,"y":363,"score":73,"level":0},{"x":1433,"y":363,"score":32,"level":0},{"x":418,"y":364,"score":53,"level":0},{"x":698,"y":364,"score":100,"level":0},{"x":812,"y":364,"score":33,"level":0},{"x":1075,"y":364,"score":54,"level":0},{"x":1106,"y":364,"score":33,"level":0},{"x":1262,"y":364,"score":26,"level":0},{"x":1328,"y":364,"score":60,"level":0},{"x":779,"y":365,"score":34,"level":0},{"x":883,"y":365,"score":30,"level":0},{"x":958,"y":365,"score":61,"level":0},{"x":1030,"y":365,"score":45,"level":0},{"x":1183,"y":365,"score":28,"level":0},{"x":1225,"y":365,"score":41,"level":0},{"x":1322,"y":365,"score":41,"level":0},{"x":1428,"y":365,"score":29,"level":0},{"x":530,"y":366,"score":34,"level":0},{"x":759,"y":366,"score":53,"level":0},{"x":773,"y":366,"score":31,"level":0},{"x":906,"y":366,"score":34,"level":0},{"x":947,"y":366,"score":30,"level":0},{"x":1017,"y":366,"score":58,"level":0},{"x":1125,"y":366,"score":28,"level":0},{"x":1163,"y":366,"score":66,"level":0},{"x":1180,"y":366,"score":32,"level":0},{"x":1239,"y":366,"score":36,"level":0},{"x":492,"y":367,"score":40,"level":0},{"x":703,"y":367,"score":42,"level":0},{"x":803,"y":367,"score":89,"level":0},{"x":1030,"y":367,"score":45,"level":0},{"x":1080,"y":367,"score":110,"level":0},{"x":1130,"y":367,"score":33,"level":0},{"x":1231,"y":367,"score":26,"level":0},{"x":678,"y":368,"score":26,"level":0},{"x":740,"y":368,"score":36,"level":0},{"x":794,"y":368,"score":149,"level":0},{"x":863,"y":368,"score":32,"level":0},{"x":1243,"y":368,"score":66,"level":0},{"x":1273,"y":368,"score":39,"level":0},{"x":1384,"y":368,"score":30,"level":0},{"x":616,"y":369,"score":44,"level":0},{"x":878,"y":369,"score":69,"level":0},{"x":963,"y":369,"score":48,"level":0},{"x":1112,"y":369,"score":28,"level":0},{"x":1231,"y":369,"score":27,"level":0},{"x":1402,"y":369,"score":61,"level":0},{"x":823,"y":370,"score":36,"level":0},{"x":1095,"y":370,"score":30,"level":0},{"x":1145,"y":370,"score":44,"level":0},{"x":1167,"y":370,"score":27,"level":0},{"x":1309,"y":370,"score":30,"level":0},{"x":1340,"y":370,"score":29,"level":0},{"x":1386,"y":370,"score":40,"level":0},{"x":1418,"y":370,"score":37,"level":0},{"x":430,"y":371,"score":29,"level":0},{"x":945,"y":371,"score":47,"level":0},{"x":1225,"y":371,"score":36,"level":0},{"x":1327,"y":371,"score":74,"level":0},{"x":1468,"y":371,"score":33,"level":0},{"x":523,"y":372,"score":80,"level":0},{"x":682,"y":372,"score":73,"level":0},{"x":1169,"y":372,"score":40,"level":0},{"x":1270,"y":372,"score":44,"level":0},{"x":1285,"y":372,"score":28,"level":0},{"x":1321,"y":372,"score":47,"level":0},{"x":1409,"y":372,"score":37,"level":0},{"x":1426,"y":372,"score":31,"level":0},{"x":457,"y":373,"score":32,"level":0},{"x":886,"y":373,"score":34,"level":0},{"x":896,"y":373,"score":30,"level":0},{"x":1176,"y":373,"score":40,"level":0},{"x":1341,"y":373,"score":54,"level":0},{"x":809,"y":374,"score":40,"level":0},{"x":1014,"y":374,"score":32,"level":0},{"x":1029,"y":374,"score":32,"level":0},{"x":1337,"y":374,"score":30,"level":0},{"x":1350,"y":374,"score":26,"level":0},{"x":1398,"y":374,"score":140,"level":0},{"x":1406,"y":374,"score":70,"level":0},{"x":434,"y":375,"score":45,"level":0},{"x":566,"y":375,"score":36,"level":0},{"x":801,"y":375,"score":35,"level":0},{"x":1003,"y":375,"score":33,"level":0},{"x":1276,"y":375,"score":28,"level":0},{"x":504,"y":376,"score":37,"level":0},{"x":622,"y":376,"score":32,"level":0},{"x":664,"y":376,"score":28,"level":0},{"x":751,"y":376,"score":54,"level":0},{"x":828,"y":376,"score":42,"level":0},{"x":1246,"y":376,"score":27,"level":0},{"x":1465,"y":376,"score":69,"level":0},{"x":532,"y":377,"score":28,"level":0},{"x":1145,"y":377,"score":36,"level":0},{"x":1349,"y":377,"score":32,"level":0},{"x":1421,"y":377,"score":34,"level":0},{"x":429,"y":378,"score":47,"level":0},{"x":523,"y":378,"score":29,"level":0},{"x":661,"y":378,"score":42,"level":0},{"x":863,"y":378,"score":28,"level":0},{"x":1078,"y":378,"score":47,"level":0},{"x":1152,"y":378,"score":33,"level":0},{"x":1184,"y":378,"score":36,"level":0},{"x":1325,"y":378,"score":36,"level":0},{"x":1334,"y":378,"score":57,"level":0},{"x":1403,"y":378,"score":73,"level":0},{"x":611,"y":379,"score":74,"level":0},{"x":883,"y":379,"score":56,"level":0},{"x":1272,"y":379,"score":44,"level":0},{"x":1343,"y":379,"score":33,"level":0},{"x":1356,"y":379,"score":26,"level":0},{"x":1395,"y":379,"score":30,"level":0},{"x":520,"y":380,"score":30,"level":0},{"x":605,"y":380,"score":68,"level":0},{"x":685,"y":380,"score":49,"level":0},{"x":1109,"y":380,"score":29,"level":0},{"x":1183,"y":380,"score":34,"level":0},{"x":1406,"y":380,"score":47,"level":0},{"x":551,"y":381,"score":33,"level":0},{"x":583,"y":381,"score":34,"level":0},{"x":750,"y":381,"score":27,"level":0},{"x":952,"y":381,"score":51,"level":0},{"x":1337,"y":381,"score":74,"level":0},{"x":1379,"y":381,"score":46,"level":0},{"x":378,"y":382,"score":26,"level":0},{"x":607,"y":382,"score":58,"level":0},{"x":810,"y":382,"score":31,"level":0},{"x":909,"y":382,"score":27,"level":0},{"x":1278,"y":382,"score":50,"level":0},{"x":1283,"y":382,"score":38,"level":0},{"x":509,"y":383,"score":32,"level":0},{"x":572,"y":383,"score":41,"level":0},{"x":664,"y":383,"score":28,"level":0},{"x":888,"y":383,"score":40,"level":0},{"x":1004,"y":383,"score":33,"level":0},{"x":1154,"y":383,"score":29,"level":0},{"x":1162,"y":383,"score":26,"level":0},{"x":1223,"y":383,"score":30,"level":0},{"x":1332,"y":383,"score":59,"level":0},{"x":1401,"y":383,"score":41,"level":0},{"x":1411,"y":383,"score":29,"level":0},{"x":431,"y":384,"score":74,"level":0},{"x":616,"y":384,"score":54,"level":0},{"x":1075,"y":384,"score":28,"level":0},{"x":1149,"y":384,"score":34,"level":0},{"x":1276,"y":384,"score":58,"level":0},{"x":1389,"y":384,"score":26,"level":0},{"x":1436,"y":384,"score":35,"level":0},{"x":662,"y":385,"score":85,"level":0},{"x":841,"y":385,"score":53,"level":0},{"x":964,"y":385,"score":46,"level":0},{"x":1094,"y":385,"score":40,"level":0},{"x":431,"y":386,"score":65,"level":0},{"x":576,"y":386,"score":28,"level":0},{"x":751,"y":386,"score":37,"level":0},{"x":815,"y":386,"score":38,"level":0},{"x":882,"y":386,"score":41,"level":0},{"x":902,"y":386,"score":29,"level":0},{"x":1017,"y":386,"score":28,"level":0},{"x":1157,"y":386,"score":33,"level":0},{"x":1252,"y":386,"score":40,"level":0},{"x":1470,"y":386,"score":34,"level":0},{"x":1488,"y":386,"score":27,"level":0},{"x":496,"y":387,"score":29,"level":0},{"x":1250,"y":387,"score":49,"level":0},{"x":512,"y":388,"score":34,"level":0},{"x":563,"y":388,"score":33,"level":0},{"x":713,"y":388,"score":30,"level":0},{"x":765,"y":388,"score":33,"level":0},{"x":1410,"y":388,"score":43,"level":0},{"x":1428,"y":388,"score":27,"level":0},{"x":719,"y":389,"score":26,"level":0},{"x":819,"y":389,"score":42,"level":0},{"x":975,"y":389,"score":27,"level":0},{"x":1073,"y":389,"score":28,"level":0},{"x":1079,"y":389,"score":40,"level":0},{"x":1115,"y":389,"score":30,"level":0},{"x":1249,"y":389,"score":32,"level":0},{"x":1421,"y":389,"score":27,"level":0},{"x":445,"y":390,"score":54,"level":0},{"x":1085,"y":390,"score":45,"level":0},{"x":457,"y":391,"score":36,"level":0},{"x":724,"y":391,"score":28,"level":0},{"x":843,"y":391,"score":30,"level":0},{"x":1160,"y":391,"score":50,"level":0},{"x":1415,"y":391,"score":40,"level":0},{"x":377,"y":392,"score":31,"level":0},{"x":445,"y":392,"score":58,"level":0},{"x":451,"y":392,"score":31,"level":0},{"x":546,"y":392,"score":61,"level":0},{"x":567,"y":392,"score":34,"level":0},{"x":745,"y":392,"score":43,"level":0},{"x":892,"y":392,"score":118,"level":0},{"x":1098,"y":392,"score":35,"level":0},{"x":1283,"y":392,"score":47,"level":0},{"x":1352,"y":392,"score":27,"level":0},{"x":658,"y":393,"score":30,"level":0},{"x":674,"y":393,"score":87,"level":0},{"x":776,"y":393,"score":34,"level":0},{"x":1036,"y":393,"score":26,"level":0},{"x":1276,"y":393,"score":85,"level":0},{"x":697,"y":394,"score":30,"level":0},{"x":1419,"y":394,"score":43,"level":0},{"x":835,"y":395,"score":37,"level":0},{"x":952,"y":395,"score":32,"level":0},{"x":969,"y":395,"score":51,"level":0},{"x":1019,"y":395,"score":51,"level":0},{"x":1378,"y":395,"score":33,"level":0},{"x":493,"y":396,"score":42,"level":0},{"x":632,"y":396,"score":35,"level":0},{"x":725,"y":396,"score":27,"level":0},{"x":896,"y":396,"score":67,"level":0},{"x":1025,"y":396,"score":75,"level":0},{"x":1084,"y":396,"score":38,"level":0},{"x":1163,"y":396,"score":50,"level":0},{"x":563,"y":397,"score":42,"level":0},{"x":667,"y":397,"score":95,"level":0},{"x":996,"y":397,"score":40,"level":0},{"x":1104,"y":397,"score":28,"level":0},{"x":1443,"y":397,"score":57,"level":0},{"x":407,"y":398,"score":33,"level":0},{"x":544,"y":398,"score":98,"level":0},{"x":1457,"y":398,"score":35,"level":0},{"x":1208,"y":399,"score":30,"level":0},{"x":1414,"y":399,"score":28,"level":0},{"x":899,"y":400,"score":75,"level":0},{"x":1159,"y":400,"score":26,"level":0},{"x":1213,"y":400,"score":27,"level":0},{"x":1279,"y":400,"score":38,"level":0},{"x":1430,"y":400,"score":27,"level":0},{"x":651,"y":401,"score":26,"level":0},{"x":672,"y":401,"score":40,"level":0},{"x":783,"y":401,"score":34,"level":0},{"x":815,"y":401,"score":26,"level":0},{"x":968,"y":401,"score":36,"level":0},{"x":976,"y":401,"score":41,"level":0},{"x":1259,"y":401,"score":46,"level":0},{"x":488,"y":402,"score":102,"level":0},{"x":755,"y":402,"score":39,"level":0},{"x":667,"y":403,"score":30,"level":0},{"x":1106,"y":403,"score":66,"level":0},{"x":1225,"y":403,"score":29,"level":0},{"x":1228,"y":403,"score":27,"level":0},{"x":494,"y":404,"score":80,"level":0},{"x":622,"y":404,"score":28,"level":0},{"x":1205,"y":404,"score":30,"level":0},{"x":1345,"y":404,"score":43,"level":0},{"x":1408,"y":404,"score":37,"level":0},{"x":1413,"y":404,"score":32,"level":0},{"x":1434,"y":404,"score":29,"level":0},{"x":566,"y":405,"score":32,"level":0},{"x":934,"y":405,"score":27,"level":0},{"x":1371,"y":405,"score":42,"level":0},{"x":1378,"y":405,"score":29,"level":0},{"x":543,"y":406,"score":39,"level":0},{"x":1168,"y":406,"score":48,"level":0},{"x":1449,"y":406,"score":27,"level":0},{"x":833,"y":407,"score":40,"level":0},{"x":849,"y":407,"score":28,"level":0},{"x":919,"y":407,"score":39,"level":0},{"x":994,"y":407,"score":52,"level":0},{"x":1014,"y":407,"score":45,"level":0},{"x":1281,"y":407,"score":31,"level":0},{"x":1342,"y":407,"score":36,"level":0},{"x":1458,"y":407,"score":29,"level":0},{"x":437,"y":408,"score":51,"level":0},{"x":551,"y":408,"score":70,"level":0},{"x":908,"y":408,"score":27,"level":0},{"x":1002,"y":408,"score":96,"level":0},{"x":1245,"y":408,"score":32,"level":0},{"x":709,"y":409,"score":28,"level":0},{"x":1114,"y":409,"score":32,"level":0},{"x":1177,"y":409,"score":40,"level":0},{"x":1323,"y":409,"score":38,"level":0},{"x":696,"y":410,"score":77,"level":0},{"x":1091,"y":410,"score":31,"level":0},{"x":649,"y":411,"score":58,"level":0},{"x":772,"y":411,"score":28,"level":0},{"x":888,"y":411,"score":30,"level":0},{"x":904,"y":411,"score":44,"level":0},{"x":1007,"y":411,"score":42,"level":0},{"x":1374,"y":411,"score":32,"level":0},{"x":638,"y":412,"score":80,"level":0},{"x":868,"y":412,"score":26,"level":0},{"x":1010,"y":412,"score":91,"level":0},{"x":1179,"y":412,"score":29,"level":0},{"x":1240,"y":412,"score":41,"level":0},{"x":1340,"y":412,"score":26,"level":0},{"x":546,"y":413,"score":41,"level":0},{"x":912,"y":413,"score":43,"level":0},{"x":1283,"y":413,"score":27,"level":0},{"x":1472,"y":413,"score":42,"level":0},{"x":695,"y":414,"score":74,"level":0},{"x":756,"y":414,"score":111,"level":0},{"x":906,"y":414,"score":34,"level":0},{"x":949,"y":414,"score":29,"level":0},{"x":990,"y":414,"score":27,"level":0},{"x":553,"y":415,"score":44,"level":0},{"x":569,"y":415,"score":52,"level":0},{"x":849,"y":415,"score":27,"level":0},{"x":1065,"y":415,"score":36,"level":0},{"x":1153,"y":415,"score":34,"level":0},{"x":1418,"y":415,"score":33,"level":0},{"x":426,"y":416,"score":32,"level":0},{"x":643,"y":416,"score":44,"level":0},{"x":939,"y":416,"score":38,"level":0},{"x":1103,"y":416,"score":52,"level":0},{"x":1468,"y":416,"score":50,"level":0},{"x":505,"y":417,"score":41,"level":0},{"x":508,"y":417,"score":42,"level":0},{"x":649,"y":417,"score":70,"level":0},{"x":755,"y":417,"score":42,"level":0},{"x":770,"y":417,"score":53,"level":0},{"x":780,"y":417,"score":46,"level":0},{"x":830,"y":417,"score":90,"level":0},{"x":844,"y":417,"score":77,"level":0},{"x":1206,"y":417,"score":36,"level":0},{"x":383,"y":418,"score":28,"level":0},{"x":502,"y":418,"score":68,"level":0},{"x":1179,"y":418,"score":28,"level":0},{"x":1198,"y":418,"score":42,"level":0},{"x":1256,"y":418,"score":40,"level":0},{"x":583,"y":419,"score":40,"level":0},{"x":791,"y":419,"score":60,"level":0},{"x":1117,"y":419,"score":26,"level":0},{"x":1189,"y":419,"score":64,"level":0},{"x":675,"y":420,"score":28,"level":0},{"x":1035,"y":420,"score":29,"level":0},{"x":1082,"y":420,"score":30,"level":0},{"x":1100,"y":420,"score":29,"level":0},{"x":1114,"y":420,"score":26,"level":0},{"x":1124,"y":420,"score":30,"level":0},{"x":1200,"y":420,"score":27,"level":0},{"x":1340,"y":420,"score":34,"level":0},{"x":1345,"y":420,"score":32,"level":0},{"x":506,"y":421,"score":34,"level":0},{"x":823,"y":421,"score":35,"level":0},{"x":843,"y":421,"score":61,"level":0},{"x":916,"y":421,"score":64,"level":0},{"x":923,"y":421,"score":45,"level":0},{"x":1096,"y":421,"score":28,"level":0},{"x":1243,"y":421,"score":28,"level":0},{"x":1249,"y":421,"score":27,"level":0},{"x":1335,"y":421,"score":30,"level":0},{"x":522,"y":422,"score":29,"level":0},{"x":562,"y":422,"score":62,"level":0},{"x":669,"y":422,"score":30,"level":0},{"x":692,"y":422,"score":26,"level":0},{"x":709,"y":422,"score":27,"level":0},{"x":848,"y":422,"score":40,"level":0},{"x":881,"y":422,"score":38,"level":0},{"x":954,"y":422,"score":32,"level":0},{"x":1012,"y":422,"score":31,"level":0},{"x":1135,"y":422,"score":56,"level":0},{"x":1484,"y":422,"score":33,"level":0},{"x":506,"y":423,"score":45,"level":0},{"x":511,"y":423,"score":30,"level":0},{"x":572,"y":423,"score":36,"level":0},{"x":756,"y":423,"score":36,"level":0},{"x":878,"y":423,"score":32,"level":0},{"x":1045,"y":423,"score":27,"level":0},{"x":1231,"y":423,"score":28,"level":0},{"x":1358,"y":423,"score":33,"level":0},{"x":490,"y":424,"score":48,"level":0},{"x":699,"y":424,"score":121,"level":0},{"x":886,"y":424,"score":51,"level":0},{"x":1040,"y":424,"score":26,"level":0},{"x":596,"y":425,"score":28,"level":0},{"x":768,"y":425,"score":33,"level":0},{"x":876,"y":425,"score":27,"level":0},{"x":919,"y":425,"score":27,"level":0},{"x":927,"y":425,"score":52,"level":0},{"x":992,"y":425,"score":72,"level":0},{"x":1186,"y":425,"score":28,"level":0},{"x":1366,"y":425,"score":47,"level":0},{"x":490,"y":426,"score":27,"level":0},{"x":531,"y":426,"score":37,"level":0},{"x":726,"y":426,"score":33,"level":0},{"x":1062,"y":426,"score":45,"level":0},{"x":1068,"y":426,"score":95,"level":0},{"x":496,"y":427,"score":55,"level":0},{"x":639,"y":427,"score":48,"level":0},{"x":706,"y":427,"score":37,"level":0},{"x":1016,"y":427,"score":36,"level":0},{"x":1090,"y":427,"score":32,"level":0},{"x":1141,"y":427,"score":33,"level":0},{"x":1356,"y":427,"score":34,"level":0},{"x":1084,"y":428,"score":31,"level":0},{"x":1086,"y":428,"score":42,"level":0},{"x":1123,"y":428,"score":29,"level":0},{"x":1201,"y":428,"score":39,"level":0},{"x":1206,"y":428,"score":60,"level":0},{"x":1231,"y":428,"score":36,"level":0},{"x":1345,"y":428,"score":28,"level":0},{"x":1460,"y":428,"score":26,"level":0},{"x":638,"y":429,"score":28,"level":0},{"x":696,"y":429,"score":41,"level":0},{"x":887,"y":429,"score":32,"level":0},{"x":1296,"y":429,"score":33,"level":0},{"x":495,"y":430,"score":37,"level":0},{"x":572,"y":430,"score":47,"level":0},{"x":1190,"y":430,"score":28,"level":0},{"x":848,"y":431,"score":28,"level":0},{"x":1018,"y":431,"score":27,"level":0},{"x":1367,"y":431,"score":84,"level":0},{"x":1388,"y":431,"score":33,"level":0},{"x":1431,"y":431,"score":26,"level":0},{"x":1463,"y":431,"score":29,"level":0},{"x":404,"y":432,"score":33,"level":0},{"x":827,"y":432,"score":33,"level":0},{"x":866,"y":432,"score":48,"level":0},{"x":886,"y":432,"score":27,"level":0},{"x":981,"y":432,"score":27,"level":0},{"x":1096,"y":432,"score":28,"level":0},{"x":1137,"y":432,"score":55,"level":0},{"x":1209,"y":432,"score":34,"level":0},{"x":495,"y":433,"score":42,"level":0},{"x":516,"y":433,"score":29,"level":0},{"x":567,"y":433,"score":52,"level":0},{"x":815,"y":433,"score":26,"level":0},{"x":851,"y":433,"score":30,"level":0},{"x":934,"y":433,"score":36,"level":0},{"x":1011,"y":433,"score":43,"level":0},{"x":1177,"y":433,"score":38,"level":0},{"x":1232,"y":433,"score":30,"level":0},{"x":1237,"y":433,"score":32,"level":0},{"x":403,"y":434,"score":62,"level":0},{"x":582,"y":434,"score":46,"level":0},{"x":1064,"y":434,"score":78,"level":0},{"x":1211,"y":434,"score":31,"level":0},{"x":1273,"y":434,"score":29,"level":0},{"x":1320,"y":434,"score":33,"level":0},{"x":1347,"y":434,"score":45,"level":0},{"x":1473,"y":434,"score":53,"level":0},{"x":394,"y":435,"score":50,"level":0},{"x":870,"y":435,"score":27,"level":0},{"x":1250,"y":435,"score":26,"level":0},{"x":1328,"y":435,"score":40,"level":0},{"x":1369,"y":435,"score":52,"level":0},{"x":491,"y":436,"score":28,"level":0},{"x":654,"y":436,"score":33,"level":0},{"x":660,"y":436,"score":33,"level":0},{"x":822,"y":436,"score":33,"level":0},{"x":1346,"y":436,"score":39,"level":0},{"x":1002,"y":437,"score":63,"level":0},{"x":1160,"y":437,"score":28,"level":0},{"x":1310,"y":437,"score":28,"level":0},{"x":1393,"y":437,"score":27,"level":0},{"x":442,"y":438,"score":30,"level":0},{"x":819,"y":438,"score":29,"level":0},{"x":899,"y":438,"score":26,"level":0},{"x":1128,"y":438,"score":47,"level":0},{"x":1443,"y":438,"score":28,"level":0},{"x":1470,"y":438,"score":71,"level":0},{"x":1484,"y":438,"score":30,"level":0},{"x":482,"y":439,"score":49,"level":0},{"x":669,"y":439,"score":61,"level":0},{"x":747,"y":439,"score":36,"level":0},{"x":758,"y":439,"score":34,"level":0},{"x":1165,"y":439,"score":28,"level":0},{"x":1214,"y":439,"score":38,"level":0},{"x":1292,"y":439,"score":44,"level":0},{"x":459,"y":440,"score":28,"level":0},{"x":493,"y":440,"score":111,"level":0},{"x":538,"y":440,"score":26,"level":0},{"x":675,"y":440,"score":34,"level":0},{"x":717,"y":440,"score":26,"level":0},{"x":931,"y":440,"score":42,"level":0},{"x":938,"y":440,"score":102,"level":0},{"x":944,"y":440,"score":37,"level":0},{"x":1142,"y":440,"score":56,"level":0},{"x":1227,"y":440,"score":26,"level":0},{"x":1400,"y":440,"score":48,"level":0},{"x":1415,"y":440,"score":28,"level":0},{"x":535,"y":441,"score":32,"level":0},{"x":574,"y":441,"score":71,"level":0},{"x":626,"y":441,"score":30,"level":0},{"x":1005,"y":441,"score":41,"level":0},{"x":1021,"y":441,"score":30,"level":0},{"x":1272,"y":441,"score":66,"level":0},{"x":477,"y":442,"score":41,"level":0},{"x":508,"y":442,"score":57,"level":0},{"x":810,"y":442,"score":56,"level":0},{"x":892,"y":442,"score":30,"level":0},{"x":904,"y":442,"score":32,"level":0},{"x":1029,"y":442,"score":26,"level":0},{"x":1067,"y":442,"score":39,"level":0},{"x":1373,"y":442,"score":27,"level":0},{"x":1450,"y":442,"score":35,"level":0},{"x":1217,"y":443,"score":30,"level":0},{"x":1227,"y":443,"score":36,"level":0},{"x":1368,"y":443,"score":38,"level":0},{"x":1398,"y":443,"score":41,"level":0},{"x":1408,"y":443,"score":35,"level":0},{"x":1464,"y":443,"score":31,"level":0},{"x":806,"y":444,"score":43,"level":0},{"x":943,"y":444,"score":33,"level":0},{"x":973,"y":444,"score":44,"level":0},{"x":1225,"y":444,"score":36,"level":0},{"x":1303,"y":444,"score":43,"level":0},{"x":420,"y":445,"score":38,"level":0},{"x":735,"y":445,"score":34,"level":0},{"x":897,"y":445,"score":36,"level":0},{"x":926,"y":445,"score":32,"level":0},{"x":985,"y":445,"score":79,"level":0},{"x":1205,"y":445,"score":36,"level":0},{"x":1266,"y":445,"score":33,"level":0},{"x":918,"y":446,"score":31,"level":0},{"x":1189,"y":446,"score":28,"level":0},{"x":1276,"y":446,"score":37,"level":0},{"x":1282,"y":446,"score":38,"level":0},{"x":377,"y":447,"score":35,"level":0},{"x":404,"y":447,"score":44,"level":0},{"x":414,"y":447,"score":80,"level":0},{"x":484,"y":447,"score":30,"level":0},{"x":495,"y":447,"score":40,"level":0},{"x":637,"y":447,"score":28,"level":0},{"x":970,"y":447,"score":34,"level":0},{"x":833,"y":448,"score":26,"level":0},{"x":899,"y":448,"score":29,"level":0},{"x":976,"y":448,"score":50,"level":0},{"x":991,"y":448,"score":74,"level":0},{"x":1030,"y":448,"score":34,"level":0},{"x":1073,"y":448,"score":28,"level":0},{"x":1233,"y":448,"score":28,"level":0},{"x":1299,"y":448,"score":31,"level":0},{"x":1304,"y":448,"score":27,"level":0},{"x":917,"y":449,"score":33,"level":0},{"x":1201,"y":449,"score":44,"level":0},{"x":1309,"y":449,"score":31,"level":0},{"x":1380,"y":449,"score":51,"level":0},{"x":1409,"y":449,"score":26,"level":0},{"x":541,"y":450,"score":31,"level":0},{"x":554,"y":450,"score":33,"level":0},{"x":655,"y":450,"score":26,"level":0},{"x":738,"y":450,"score":45,"level":0},{"x":1006,"y":450,"score":30,"level":0},{"x":1102,"y":450,"score":31,"level":0},{"x":1149,"y":450,"score":26,"level":0},{"x":1246,"y":450,"score":29,"level":0},{"x":1271,"y":450,"score":35,"level":0},{"x":1387,"y":450,"score":50,"level":0},{"x":1439,"y":450,"score":28,"level":0},{"x":1481,"y":450,"score":38,"level":0},{"x":625,"y":451,"score":32,"level":0},{"x":727,"y":451,"score":39,"level":0},{"x":779,"y":451,"score":31,"level":0},{"x":959,"y":451,"score":27,"level":0},{"x":1233,"y":451,"score":28,"level":0},{"x":1373,"y":451,"score":27,"level":0},{"x":1402,"y":451,"score":51,"level":0},{"x":1418,"y":451,"score":28,"level":0},{"x":410,"y":452,"score":113,"level":0},{"x":572,"y":452,"score":26,"level":0},{"x":592,"y":452,"score":42,"level":0},{"x":973,"y":452,"score":44,"level":0},{"x":1130,"y":452,"score":55,"level":0},{"x":1308,"y":452,"score":53,"level":0},{"x":418,"y":453,"score":70,"level":0},{"x":614,"y":453,"score":33,"level":0},{"x":741,"y":453,"score":45,"level":0},{"x":807,"y":453,"score":33,"level":0},{"x":854,"y":453,"score":77,"level":0},{"x":1079,"y":453,"score":29,"level":0},{"x":1224,"y":453,"score":42,"level":0},{"x":1259,"y":453,"score":45,"level":0},{"x":523,"y":454,"score":32,"level":0},{"x":638,"y":454,"score":51,"level":0},{"x":664,"y":454,"score":30,"level":0},{"x":835,"y":454,"score":33,"level":0},{"x":840,"y":454,"score":33,"level":0},{"x":883,"y":454,"score":34,"level":0},{"x":1254,"y":454,"score":28,"level":0},{"x":1305,"y":454,"score":43,"level":0},{"x":1338,"y":454,"score":36,"level":0},{"x":571,"y":455,"score":27,"level":0},{"x":795,"y":455,"score":41,"level":0},{"x":951,"y":455,"score":28,"level":0},{"x":972,"y":455,"score":61,"level":0},{"x":1187,"y":455,"score":45,"level":0},{"x":1224,"y":455,"score":53,"level":0},{"x":1357,"y":455,"score":28,"level":0},{"x":774,"y":456,"score":39,"level":0},{"x":781,"y":456,"score":40,"level":0},{"x":810,"y":456,"score":35,"level":0},{"x":847,"y":456,"score":35,"level":0},{"x":1247,"y":456,"score":30,"level":0},{"x":1362,"y":456,"score":31,"level":0},{"x":1413,"y":456,"score":26,"level":0},{"x":438,"y":457,"score":26,"level":0},{"x":718,"y":457,"score":26,"level":0},{"x":1294,"y":457,"score":46,"level":0},{"x":1410,"y":457,"score":36,"level":0},{"x":1426,"y":457,"score":34,"level":0},{"x":1441,"y":457,"score":31,"level":0},{"x":641,"y":458,"score":39,"level":0},{"x":746,"y":458,"score":27,"level":0},{"x":869,"y":458,"score":64,"level":0},{"x":1045,"y":458,"score":27,"level":0},{"x":1076,"y":458,"score":53,"level":0},{"x":1146,"y":458,"score":41,"level":0},{"x":1151,"y":458,"score":51,"level":0},{"x":1391,"y":458,"score":26,"level":0},{"x":1402,"y":458,"score":46,"level":0},{"x":1489,"y":458,"score":26,"level":0},{"x":924,"y":459,"score":37,"level":0},{"x":1220,"y":459,"score":45,"level":0},{"x":1366,"y":459,"score":39,"level":0},{"x":1049,"y":460,"score":34,"level":0},{"x":1118,"y":460,"score":29,"level":0},{"x":1131,"y":460,"score":84,"level":0},{"x":1186,"y":460,"score":29,"level":0},{"x":1188,"y":460,"score":46,"level":0},{"x":1364,"y":460,"score":29,"level":0},{"x":464,"y":461,"score":26,"level":0},{"x":517,"y":461,"score":99,"level":0},{"x":932,"y":461,"score":53,"level":0},{"x":986,"y":461,"score":50,"level":0},{"x":1026,"y":461,"score":27,"level":0},{"x":1031,"y":461,"score":32,"level":0},{"x":1051,"y":461,"score":49,"level":0},{"x":1057,"y":461,"score":43,"level":0},{"x":1201,"y":461,"score":29,"level":0},{"x":1236,"y":461,"score":35,"level":0},{"x":1379,"y":461,"score":39,"level":0},{"x":1385,"y":461,"score":53,"level":0},{"x":1395,"y":461,"score":38,"level":0},{"x":377,"y":462,"score":40,"level":0},{"x":397,"y":462,"score":28,"level":0},{"x":719,"y":462,"score":66,"level":0},{"x":775,"y":462,"score":40,"level":0},{"x":1038,"y":462,"score":46,"level":0},{"x":474,"y":463,"score":45,"level":0},{"x":477,"y":463,"score":38,"level":0},{"x":575,"y":463,"score":42,"level":0},{"x":599,"y":463,"score":33,"level":0},{"x":917,"y":463,"score":30,"level":0},{"x":934,"y":463,"score":46,"level":0},{"x":1160,"y":463,"score":36,"level":0},{"x":1477,"y":463,"score":26,"level":0},{"x":635,"y":464,"score":45,"level":0},{"x":637,"y":464,"score":33,"level":0},{"x":649,"y":464,"score":79,"level":0},{"x":1001,"y":464,"score":31,"level":0},{"x":1014,"y":464,"score":32,"level":0},{"x":591,"y":465,"score":29,"level":0},{"x":941,"y":465,"score":33,"level":0},{"x":1218,"y":465,"score":32,"level":0},{"x":1336,"y":465,"score":28,"level":0},{"x":1406,"y":465,"score":62,"level":0},{"x":1435,"y":465,"score":42,"level":0},{"x":444,"y":466,"score":46,"level":0},{"x":1285,"y":466,"score":31,"level":0},{"x":1309,"y":466,"score":31,"level":0},{"x":1341,"y":466,"score":30,"level":0},{"x":409,"y":467,"score":29,"level":0},{"x":514,"y":467,"score":51,"level":0},{"x":791,"y":467,"score":29,"level":0},{"x":1056,"y":467,"score":94,"level":0},{"x":1086,"y":467,"score":26,"level":0},{"x":1400,"y":467,"score":27,"level":0},{"x":1471,"y":467,"score":38,"level":0},{"x":707,"y":468,"score":30,"level":0},{"x":765,"y":468,"score":27,"level":0},{"x":803,"y":468,"score":31,"level":0},{"x":1247,"y":468,"score":38,"level":0},{"x":1374,"y":468,"score":40,"level":0},{"x":570,"y":469,"score":44,"level":0},{"x":591,"y":469,"score":26,"level":0},{"x":601,"y":469,"score":26,"level":0},{"x":977,"y":469,"score":28,"level":0},{"x":1040,"y":469,"score":72,"level":0},{"x":1122,"y":469,"score":34,"level":0},{"x":1132,"y":469,"score":50,"level":0},{"x":1153,"y":469,"score":30,"level":0},{"x":377,"y":470,"score":42,"level":0},{"x":910,"y":470,"score":30,"level":0},{"x":921,"y":470,"score":34,"level":0},{"x":1116,"y":470,"score":32,"level":0},{"x":1216,"y":470,"score":39,"level":0},{"x":1246,"y":470,"score":42,"level":0},{"x":1345,"y":470,"score":26,"level":0},{"x":405,"y":471,"score":28,"level":0},{"x":462,"y":471,"score":26,"level":0},{"x":512,"y":471,"score":34,"level":0},{"x":748,"y":471,"score":28,"level":0},{"x":979,"y":471,"score":48,"level":0},{"x":1019,"y":471,"score":36,"level":0},{"x":1265,"y":471,"score":29,"level":0},{"x":1312,"y":471,"score":38,"level":0},{"x":869,"y":472,"score":29,"level":0},{"x":973,"y":472,"score":71,"level":0},{"x":1078,"y":472,"score":28,"level":0},{"x":1434,"y":472,"score":33,"level":0},{"x":522,"y":473,"score":66,"level":0},{"x":587,"y":473,"score":35,"level":0},{"x":703,"y":473,"score":27,"level":0},{"x":815,"y":473,"score":28,"level":0},{"x":1040,"y":473,"score":27,"level":0},{"x":1287,"y":473,"score":27,"level":0},{"x":1300,"y":473,"score":39,"level":0},{"x":1367,"y":473,"score":28,"level":0},{"x":882,"y":474,"score":33,"level":0},{"x":1123,"y":474,"score":54,"level":0},{"x":1220,"y":474,"score":54,"level":0},{"x":1374,"y":474,"score":28,"level":0},{"x":786,"y":475,"score":31,"level":0},{"x":1154,"y":475,"score":51,"level":0},{"x":1208,"y":475,"score":26,"level":0},{"x":1345,"y":475,"score":40,"level":0},{"x":1379,"y":475,"score":51,"level":0},{"x":1386,"y":475,"score":35,"level":0},{"x":1388,"y":475,"score":43,"level":0},{"x":935,"y":476,"score":30,"level":0},{"x":976,"y":476,"score":78,"level":0},{"x":1040,"y":476,"score":54,"level":0},{"x":1439,"y":476,"score":27,"level":0},{"x":915,"y":477,"score":28,"level":0},{"x":1032,"y":477,"score":41,"level":0},{"x":1062,"y":477,"score":26,"level":0},{"x":1389,"y":477,"score":42,"level":0},{"x":605,"y":478,"score":32,"level":0},{"x":698,"y":478,"score":36,"level":0},{"x":846,"y":478,"score":44,"level":0},{"x":868,"y":478,"score":41,"level":0},{"x":1081,"y":478,"score":30,"level":0},{"x":1244,"y":478,"score":29,"level":0},{"x":1286,"y":478,"score":34,"level":0},{"x":1434,"y":478,"score":34,"level":0},{"x":484,"y":479,"score":28,"level":0},{"x":703,"y":479,"score":48,"level":0},{"x":967,"y":479,"score":29,"level":0},{"x":995,"y":479,"score":40,"level":0},{"x":1228,"y":479,"score":28,"level":0},{"x":1369,"y":479,"score":77,"level":0},{"x":617,"y":480,"score":27,"level":0},{"x":750,"y":480,"score":26,"level":0},{"x":858,"y":480,"score":45,"level":0},{"x":1024,"y":480,"score":39,"level":0},{"x":1115,"y":480,"score":34,"level":0},{"x":1359,"y":480,"score":26,"level":0},{"x":1436,"y":480,"score":48,"level":0},{"x":1455,"y":480,"score":49,"level":0},{"x":377,"y":481,"score":44,"level":0},{"x":484,"y":481,"score":32,"level":0},{"x":541,"y":481,"score":26,"level":0},{"x":876,"y":481,"score":28,"level":0},{"x":992,"y":481,"score":74,"level":0},{"x":1061,"y":481,"score":60,"level":0},{"x":1121,"y":481,"score":45,"level":0},{"x":1158,"y":481,"score":34,"level":0},{"x":1268,"y":481,"score":40,"level":0},{"x":1295,"y":481,"score":46,"level":0},{"x":1307,"y":481,"score":48,"level":0},{"x":1378,"y":481,"score":55,"level":0},{"x":1428,"y":481,"score":33,"level":0},{"x":391,"y":482,"score":32,"level":0},{"x":713,"y":482,"score":36,"level":0},{"x":865,"y":482,"score":34,"level":0},{"x":1289,"y":482,"score":28,"level":0},{"x":1315,"y":482,"score":51,"level":0},{"x":1126,"y":483,"score":26,"level":0},{"x":1233,"y":483,"score":29,"level":0},{"x":1449,"y":483,"score":41,"level":0},{"x":1451,"y":483,"score":28,"level":0},{"x":438,"y":484,"score":105,"level":0},{"x":832,"y":484,"score":35,"level":0},{"x":1244,"y":484,"score":27,"level":0},{"x":1433,"y":484,"score":37,"level":0},{"x":1465,"y":484,"score":28,"level":0},{"x":783,"y":485,"score":53,"level":0},{"x":974,"y":485,"score":34,"level":0},{"x":1024,"y":485,"score":34,"level":0},{"x":1236,"y":485,"score":46,"level":0},{"x":1253,"y":485,"score":73,"level":0},{"x":1255,"y":485,"score":63,"level":0},{"x":1327,"y":485,"score":41,"level":0},{"x":1380,"y":485,"score":29,"level":0},{"x":867,"y":486,"score":43,"level":0},{"x":976,"y":486,"score":28,"level":0},{"x":990,"y":486,"score":32,"level":0},{"x":997,"y":486,"score":28,"level":0},{"x":1266,"y":486,"score":27,"level":0},{"x":522,"y":487,"score":43,"level":0},{"x":665,"y":487,"score":28,"level":0},{"x":699,"y":487,"score":53,"level":0},{"x":741,"y":487,"score":28,"level":0},{"x":763,"y":487,"score":34,"level":0},{"x":1058,"y":487,"score":31,"level":0},{"x":1210,"y":487,"score":29,"level":0},{"x":1352,"y":487,"score":33,"level":0},{"x":1375,"y":487,"score":34,"level":0},{"x":420,"y":488,"score":28,"level":0},{"x":783,"y":488,"score":27,"level":0},{"x":867,"y":488,"score":48,"level":0},{"x":1040,"y":488,"score":37,"level":0},{"x":1047,"y":488,"score":26,"level":0},{"x":1138,"y":488,"score":26,"level":0},{"x":1242,"y":488,"score":35,"level":0},{"x":415,"y":489,"score":35,"level":0},{"x":587,"y":489,"score":78,"level":0},{"x":970,"y":489,"score":30,"level":0},{"x":1069,"y":489,"score":26,"level":0},{"x":1283,"y":489,"score":40,"level":0},{"x":607,"y":490,"score":58,"level":0},{"x":864,"y":490,"score":50,"level":0},{"x":1184,"y":490,"score":27,"level":0},{"x":1444,"y":490,"score":44,"level":0},{"x":1484,"y":490,"score":38,"level":0},{"x":588,"y":491,"score":38,"level":0},{"x":780,"y":491,"score":29,"level":0},{"x":786,"y":491,"score":32,"level":0},{"x":1171,"y":491,"score":57,"level":0},{"x":1319,"y":491,"score":30,"level":0},{"x":405,"y":492,"score":27,"level":0},{"x":1111,"y":492,"score":36,"level":0},{"x":1140,"y":492,"score":50,"level":0},{"x":1267,"y":492,"score":50,"level":0},{"x":1300,"y":492,"score":31,"level":0},{"x":1420,"y":492,"score":31,"level":0},{"x":510,"y":493,"score":38,"level":0},{"x":526,"y":493,"score":26,"level":0},{"x":610,"y":493,"score":32,"level":0},{"x":1067,"y":493,"score":32,"level":0},{"x":1292,"y":493,"score":33,"level":0},{"x":676,"y":494,"score":56,"level":0},{"x":753,"y":494,"score":34,"level":0},{"x":781,"y":494,"score":55,"level":0},{"x":846,"y":494,"score":60,"level":0},{"x":1077,"y":494,"score":40,"level":0},{"x":1117,"y":494,"score":37,"level":0},{"x":1119,"y":494,"score":30,"level":0},{"x":1229,"y":494,"score":36,"level":0},{"x":1238,"y":494,"score":29,"level":0},{"x":713,"y":495,"score":28,"level":0},{"x":982,"y":495,"score":28,"level":0},{"x":1131,"y":495,"score":27,"level":0},{"x":1250,"y":495,"score":45,"level":0},{"x":1272,"y":495,"score":27,"level":0},{"x":480,"y":496,"score":31,"level":0},{"x":1166,"y":496,"score":26,"level":0},{"x":1170,"y":496,"score":28,"level":0},{"x":1199,"y":496,"score":35,"level":0},{"x":1208,"y":496,"score":30,"level":0},{"x":1356,"y":496,"score":29,"level":0},{"x":1474,"y":496,"score":35,"level":0},{"x":759,"y":497,"score":32,"level":0},{"x":862,"y":497,"score":45,"level":0},{"x":870,"y":497,"score":26,"level":0},{"x":1055,"y":497,"score":32,"level":0},{"x":1201,"y":497,"score":33,"level":0},{"x":1367,"y":497,"score":39,"level":0},{"x":1428,"y":497,"score":36,"level":0},{"x":377,"y":498,"score":30,"level":0},{"x":448,"y":498,"score":39,"level":0},{"x":600,"y":498,"score":77,"level":0},{"x":612,"y":498,"score":26,"level":0},{"x":873,"y":498,"score":41,"level":0},{"x":961,"y":498,"score":37,"level":0},{"x":992,"y":498,"score":37,"level":0},{"x":1070,"y":498,"score":54,"level":0},{"x":1175,"y":498,"score":32,"level":0},{"x":1435,"y":498,"score":32,"level":0},{"x":506,"y":499,"score":104,"level":0},{"x":923,"y":499,"score":40,"level":0},{"x":1015,"y":499,"score":26,"level":0},{"x":1148,"y":499,"score":32,"level":0},{"x":1256,"y":499,"score":55,"level":0},{"x":1323,"y":499,"score":32,"level":0},{"x":1408,"y":499,"score":32,"level":0},{"x":1469,"y":499,"score":27,"level":0},{"x":707,"y":500,"score":33,"level":0},{"x":843,"y":500,"score":33,"level":0},{"x":868,"y":500,"score":29,"level":0},{"x":1051,"y":500,"score":26,"level":0},{"x":1084,"y":500,"score":39,"level":0},{"x":1125,"y":500,"score":29,"level":0},{"x":1143,"y":500,"score":29,"level":0},{"x":1284,"y":500,"score":28,"level":0},{"x":1362,"y":500,"score":53,"level":0},{"x":503,"y":501,"score":26,"level":0},{"x":697,"y":501,"score":38,"level":0},{"x":712,"y":501,"score":26,"level":0},{"x":1098,"y":501,"score":27,"level":0},{"x":1251,"y":501,"score":27,"level":0},{"x":1359,"y":501,"score":29,"level":0},{"x":1472,"y":501,"score":38,"level":0},{"x":1482,"y":501,"score":46,"level":0},{"x":470,"y":502,"score":44,"level":0},{"x":581,"y":502,"score":34,"level":0},{"x":606,"y":502,"score":45,"level":0},{"x":679,"y":502,"score":67,"level":0},{"x":866,"y":502,"score":48,"level":0},{"x":881,"y":502,"score":26,"level":0},{"x":1015,"y":502,"score":30,"level":0},{"x":1035,"y":502,"score":34,"level":0},{"x":1177,"y":502,"score":27,"level":0},{"x":1210,"y":502,"score":27,"level":0},{"x":1272,"y":502,"score":27,"level":0},{"x":527,"y":503,"score":48,"level":0},{"x":588,"y":503,"score":26,"level":0},{"x":751,"y":503,"score":32,"level":0},{"x":1321,"y":503,"score":26,"level":0},{"x":646,"y":504,"score":38,"level":0},{"x":680,"y":504,"score":74,"level":0},{"x":907,"y":504,"score":28,"level":0},{"x":1005,"y":504,"score":60,"level":0},{"x":1146,"y":504,"score":33,"level":0},{"x":1152,"y":504,"score":35,"level":0},{"x":1467,"y":504,"score":37,"level":0},{"x":1488,"y":504,"score":26,"level":0},{"x":579,"y":505,"score":34,"level":0},{"x":759,"y":505,"score":60,"level":0},{"x":893,"y":505,"score":30,"level":0},{"x":1022,"y":505,"score":38,"level":0},{"x":1242,"y":505,"score":47,"level":0},{"x":1280,"y":505,"score":32,"level":0},{"x":1352,"y":505,"score":31,"level":0},{"x":404,"y":506,"score":34,"level":0},{"x":489,"y":506,"score":36,"level":0},{"x":498,"y":506,"score":47,"level":0},{"x":588,"y":506,"score":26,"level":0},{"x":695,"y":506,"score":62,"level":0},{"x":928,"y":506,"score":54,"level":0},{"x":1354,"y":506,"score":40,"level":0},{"x":1490,"y":506,"score":28,"level":0},{"x":413,"y":507,"score":26,"level":0},{"x":511,"y":507,"score":30,"level":0},{"x":603,"y":507,"score":46,"level":0},{"x":829,"y":507,"score":27,"level":0},{"x":831,"y":507,"score":32,"level":0},{"x":916,"y":507,"score":37,"level":0},{"x":1119,"y":507,"score":32,"level":0},{"x":1125,"y":507,"score":35,"level":0},{"x":463,"y":508,"score":26,"level":0},{"x":569,"y":508,"score":28,"level":0},{"x":666,"y":508,"score":37,"level":0},{"x":711,"y":508,"score":36,"level":0},{"x":1006,"y":508,"score":31,"level":0},{"x":1032,"y":508,"score":32,"level":0},{"x":1143,"y":508,"score":28,"level":0},{"x":1238,"y":508,"score":26,"level":0},{"x":1454,"y":508,"score":31,"level":0},{"x":1462,"y":508,"score":35,"level":0},{"x":902,"y":509,"score":26,"level":0},{"x":947,"y":509,"score":26,"level":0},{"x":1087,"y":509,"score":39,"level":0},{"x":1252,"y":509,"score":28,"level":0},{"x":480,"y":510,"score":50,"level":0},{"x":615,"y":510,"score":30,"level":0},{"x":749,"y":510,"score":41,"level":0},{"x":804,"y":510,"score":30,"level":0},{"x":1149,"y":510,"score":75,"level":0},{"x":1388,"y":510,"score":37,"level":0},{"x":389,"y":511,"score":31,"level":0},{"x":452,"y":511,"score":52,"level":0},{"x":705,"y":511,"score":34,"level":0},{"x":845,"y":511,"score":30,"level":0},{"x":985,"y":511,"score":30,"level":0},{"x":1166,"y":511,"score":104,"level":0},{"x":1173,"y":511,"score":28,"level":0},{"x":1345,"y":511,"score":39,"level":0},{"x":468,"y":512,"score":91,"level":0},{"x":491,"y":512,"score":31,"level":0},{"x":837,"y":512,"score":37,"level":0},{"x":991,"y":512,"score":26,"level":0},{"x":1013,"y":512,"score":58,"level":0},{"x":1073,"y":512,"score":52,"level":0},{"x":1282,"y":512,"score":47,"level":0},{"x":1296,"y":512,"score":28,"level":0},{"x":500,"y":513,"score":55,"level":0},{"x":926,"y":513,"score":47,"level":0},{"x":1480,"y":513,"score":87,"level":0},{"x":504,"y":514,"score":34,"level":0},{"x":567,"y":514,"score":26,"level":0},{"x":825,"y":514,"score":30,"level":0},{"x":846,"y":514,"score":52,"level":0},{"x":864,"y":514,"score":35,"level":0},{"x":954,"y":514,"score":26,"level":0},{"x":1075,"y":514,"score":59,"level":0},{"x":1083,"y":514,"score":35,"level":0},{"x":1171,"y":514,"score":33,"level":0},{"x":1362,"y":514,"score":33,"level":0},{"x":1405,"y":514,"score":36,"level":0},{"x":1429,"y":514,"score":32,"level":0},{"x":576,"y":515,"score":36,"level":0},{"x":661,"y":515,"score":29,"level":0},{"x":1169,"y":515,"score":40,"level":0},{"x":1193,"y":515,"score":53,"level":0},{"x":1195,"y":515,"score":48,"level":0},{"x":1201,"y":515,"score":32,"level":0},{"x":1271,"y":515,"score":36,"level":0},{"x":1364,"y":515,"score":30,"level":0},{"x":1434,"y":515,"score":27,"level":0},{"x":1480,"y":515,"score":56,"level":0},{"x":484,"y":516,"score":45,"level":0},{"x":586,"y":516,"score":35,"level":0},{"x":591,"y":516,"score":26,"level":0},{"x":679,"y":516,"score":34,"level":0},{"x":701,"y":516,"score":34,"level":0},{"x":754,"y":516,"score":46,"level":0},{"x":784,"y":516,"score":26,"level":0},{"x":789,"y":516,"score":34,"level":0},{"x":863,"y":516,"score":28,"level":0},{"x":1059,"y":516,"score":54,"level":0},{"x":1113,"y":516,"score":34,"level":0},{"x":1382,"y":516,"score":27,"level":0},{"x":1472,"y":516,"score":35,"level":0},{"x":668,"y":517,"score":27,"level":0},{"x":939,"y":517,"score":29,"level":0},{"x":1273,"y":517,"score":32,"level":0},{"x":1291,"y":517,"score":64,"level":0},{"x":1399,"y":517,"score":27,"level":0},{"x":539,"y":518,"score":26,"level":0},{"x":684,"y":518,"score":72,"level":0},{"x":987,"y":518,"score":32,"level":0},{"x":1147,"y":518,"score":32,"level":0},{"x":1153,"y":518,"score":107,"level":0},{"x":1338,"y":518,"score":28,"level":0},{"x":1378,"y":518,"score":70,"level":0},{"x":1439,"y":518,"score":27,"level":0},{"x":444,"y":519,"score":28,"level":0},{"x":585,"y":519,"score":38,"level":0},{"x":780,"y":519,"score":36,"level":0},{"x":1081,"y":519,"score":36,"level":0},{"x":1158,"y":519,"score":105,"level":0},{"x":1164,"y":519,"score":79,"level":0},{"x":1174,"y":519,"score":29,"level":0},{"x":1255,"y":519,"score":42,"level":0},{"x":1268,"y":519,"score":54,"level":0},{"x":1306,"y":519,"score":47,"level":0},{"x":773,"y":520,"score":26,"level":0},{"x":922,"y":520,"score":40,"level":0},{"x":1108,"y":520,"score":36,"level":0},{"x":1219,"y":520,"score":39,"level":0},{"x":1312,"y":520,"score":32,"level":0},{"x":1362,"y":520,"score":27,"level":0},{"x":414,"y":521,"score":29,"level":0},{"x":467,"y":521,"score":53,"level":0},{"x":595,"y":521,"score":26,"level":0},{"x":819,"y":521,"score":35,"level":0},{"x":1092,"y":521,"score":65,"level":0},{"x":1192,"y":521,"score":33,"level":0},{"x":1199,"y":521,"score":117,"level":0},{"x":1314,"y":521,"score":54,"level":0},{"x":487,"y":522,"score":42,"level":0},{"x":843,"y":522,"score":47,"level":0},{"x":1102,"y":522,"score":30,"level":0},{"x":1120,"y":522,"score":40,"level":0},{"x":1244,"y":522,"score":35,"level":0},{"x":419,"y":523,"score":38,"level":0},{"x":570,"y":523,"score":29,"level":0},{"x":666,"y":523,"score":28,"level":0},{"x":704,"y":523,"score":32,"level":0},{"x":706,"y":523,"score":31,"level":0},{"x":820,"y":523,"score":37,"level":0},{"x":1206,"y":523,"score":34,"level":0},{"x":1249,"y":523,"score":36,"level":0},{"x":1272,"y":523,"score":47,"level":0},{"x":1297,"y":523,"score":30,"level":0},{"x":1370,"y":523,"score":39,"level":0},{"x":1439,"y":523,"score":28,"level":0},{"x":478,"y":524,"score":53,"level":0},{"x":588,"y":524,"score":47,"level":0},{"x":1144,"y":524,"score":50,"level":0},{"x":1215,"y":524,"score":29,"level":0},{"x":586,"y":525,"score":50,"level":0},{"x":1025,"y":525,"score":27,"level":0},{"x":1100,"y":525,"score":47,"level":0},{"x":1281,"y":525,"score":27,"level":0},{"x":1382,"y":525,"score":27,"level":0},{"x":1412,"y":525,"score":41,"level":0},{"x":1418,"y":525,"score":26,"level":0},{"x":1488,"y":525,"score":32,"level":0},{"x":600,"y":526,"score":42,"level":0},{"x":612,"y":526,"score":28,"level":0},{"x":683,"y":526,"score":81,"level":0},{"x":924,"y":526,"score":34,"level":0},{"x":985,"y":526,"score":28,"level":0},{"x":1171,"y":526,"score":38,"level":0},{"x":1173,"y":526,"score":36,"level":0},{"x":1232,"y":526,"score":32,"level":0},{"x":377,"y":527,"score":67,"level":0},{"x":494,"y":527,"score":26,"level":0},{"x":859,"y":527,"score":34,"level":0},{"x":1017,"y":527,"score":32,"level":0},{"x":1063,"y":527,"score":31,"level":0},{"x":1277,"y":527,"score":71,"level":0},{"x":1292,"y":527,"score":30,"level":0},{"x":1312,"y":527,"score":28,"level":0},{"x":1475,"y":527,"score":26,"level":0},{"x":595,"y":528,"score":105,"level":0},{"x":825,"y":528,"score":32,"level":0},{"x":1136,"y":528,"score":46,"level":0},{"x":1310,"y":528,"score":27,"level":0},{"x":1346,"y":528,"score":30,"level":0},{"x":1378,"y":528,"score":29,"level":0},{"x":1383,"y":528,"score":33,"level":0},{"x":1408,"y":528,"score":56,"level":0},{"x":1451,"y":528,"score":26,"level":0},{"x":1456,"y":528,"score":35,"level":0},{"x":1481,"y":528,"score":47,"level":0},{"x":1490,"y":528,"score":29,"level":0},{"x":447,"y":529,"score":30,"level":0},{"x":677,"y":529,"score":64,"level":0},{"x":694,"y":529,"score":70,"level":0},{"x":950,"y":529,"score":27,"level":0},{"x":1016,"y":529,"score":72,"level":0},{"x":1105,"y":529,"score":41,"level":0},{"x":1144,"y":529,"score":38,"level":0},{"x":1287,"y":529,"score":45,"level":0},{"x":1301,"y":529,"score":38,"level":0},{"x":1312,"y":529,"score":28,"level":0},{"x":472,"y":530,"score":56,"level":0},{"x":1026,"y":530,"score":37,"level":0},{"x":1074,"y":530,"score":60,"level":0},{"x":1083,"y":530,"score":43,"level":0},{"x":1161,"y":530,"score":31,"level":0},{"x":1195,"y":530,"score":50,"level":0},{"x":1272,"y":530,"score":35,"level":0},{"x":382,"y":531,"score":30,"level":0},{"x":422,"y":531,"score":29,"level":0},{"x":686,"y":531,"score":32,"level":0},{"x":780,"y":531,"score":31,"level":0},{"x":861,"y":531,"score":36,"level":0},{"x":1085,"y":531,"score":34,"level":0},{"x":1184,"y":531,"score":35,"level":0},{"x":1420,"y":531,"score":28,"level":0},{"x":1422,"y":531,"score":28,"level":0},{"x":601,"y":532,"score":39,"level":0},{"x":1165,"y":532,"score":27,"level":0},{"x":860,"y":533,"score":34,"level":0},{"x":950,"y":533,"score":26,"level":0},{"x":1133,"y":533,"score":31,"level":0},{"x":1222,"y":533,"score":46,"level":0},{"x":1238,"y":533,"score":26,"level":0},{"x":1290,"y":533,"score":41,"level":0},{"x":1378,"y":533,"score":40,"level":0},{"x":1438,"y":533,"score":30,"level":0},{"x":543,"y":534,"score":30,"level":0},{"x":938,"y":534,"score":32,"level":0},{"x":1035,"y":534,"score":38,"level":0},{"x":1105,"y":534,"score":54,"level":0},{"x":1113,"y":534,"score":28,"level":0},{"x":1209,"y":534,"score":27,"level":0},{"x":462,"y":535,"score":26,"level":0},{"x":526,"y":535,"score":43,"level":0},{"x":573,"y":535,"score":27,"level":0},{"x":1056,"y":535,"score":39,"level":0},{"x":1094,"y":535,"score":31,"level":0},{"x":1474,"y":535,"score":26,"level":0},{"x":819,"y":536,"score":44,"level":0},{"x":869,"y":536,"score":28,"level":0},{"x":1013,"y":536,"score":39,"level":0},{"x":1018,"y":536,"score":27,"level":0},{"x":1285,"y":536,"score":87,"level":0},{"x":1366,"y":536,"score":40,"level":0},{"x":1479,"y":536,"score":30,"level":0},{"x":633,"y":537,"score":30,"level":0},{"x":803,"y":537,"score":31,"level":0},{"x":856,"y":537,"score":36,"level":0},{"x":897,"y":537,"score":28,"level":0},{"x":905,"y":537,"score":33,"level":0},{"x":996,"y":537,"score":30,"level":0},{"x":393,"y":538,"score":37,"level":0},{"x":463,"y":538,"score":28,"level":0},{"x":598,"y":538,"score":50,"level":0},{"x":665,"y":538,"score":37,"level":0},{"x":797,"y":538,"score":34,"level":0},{"x":903,"y":538,"score":29,"level":0},{"x":981,"y":538,"score":35,"level":0},{"x":1082,"y":538,"score":36,"level":0},{"x":1093,"y":538,"score":43,"level":0},{"x":1122,"y":538,"score":28,"level":0},{"x":1128,"y":538,"score":37,"level":0},{"x":1157,"y":538,"score":30,"level":0},{"x":1184,"y":538,"score":26,"level":0},{"x":1216,"y":538,"score":38,"level":0},{"x":1234,"y":538,"score":26,"level":0},{"x":1261,"y":538,"score":26,"level":0},{"x":1266,"y":538,"score":28,"level":0},{"x":1286,"y":538,"score":74,"level":0},{"x":511,"y":539,"score":28,"level":0},{"x":605,"y":539,"score":61,"level":0},{"x":769,"y":539,"score":26,"level":0},{"x":914,"y":539,"score":44,"level":0},{"x":1080,"y":539,"score":40,"level":0},{"x":1098,"y":539,"score":71,"level":0},{"x":1273,"y":539,"score":33,"level":0},{"x":529,"y":540,"score":48,"level":0},{"x":909,"y":540,"score":50,"level":0},{"x":810,"y":541,"score":48,"level":0},{"x":1199,"y":541,"score":44,"level":0},{"x":1228,"y":541,"score":29,"level":0},{"x":1304,"y":541,"score":90,"level":0},{"x":1329,"y":541,"score":26,"level":0},{"x":1367,"y":541,"score":30,"level":0},{"x":529,"y":542,"score":44,"level":0},{"x":768,"y":542,"score":39,"level":0},{"x":851,"y":542,"score":37,"level":0},{"x":1194,"y":542,"score":41,"level":0},{"x":439,"y":543,"score":30,"level":0},{"x":993,"y":543,"score":29,"level":0},{"x":1132,"y":543,"score":39,"level":0},{"x":1424,"y":543,"score":38,"level":0},{"x":460,"y":544,"score":29,"level":0},{"x":817,"y":544,"score":29,"level":0},{"x":859,"y":544,"score":28,"level":0},{"x":1025,"y":544,"score":37,"level":0},{"x":1076,"y":544,"score":28,"level":0},{"x":1218,"y":544,"score":29,"level":0},{"x":1272,"y":544,"score":34,"level":0},{"x":1357,"y":544,"score":29,"level":0},{"x":1479,"y":544,"score":33,"level":0},{"x":632,"y":545,"score":32,"level":0},{"x":746,"y":545,"score":58,"level":0},{"x":910,"y":545,"score":76,"level":0},{"x":994,"y":545,"score":33,"level":0},{"x":1000,"y":545,"score":34,"level":0},{"x":1287,"y":545,"score":32,"level":0},{"x":460,"y":546,"score":46,"level":0},{"x":604,"y":546,"score":48,"level":0},{"x":979,"y":546,"score":32,"level":0},{"x":1124,"y":546,"score":28,"level":0},{"x":1343,"y":546,"score":40,"level":0},{"x":1481,"y":546,"score":49,"level":0},{"x":746,"y":547,"score":57,"level":0},{"x":1091,"y":547,"score":29,"level":0},{"x":1177,"y":547,"score":30,"level":0},{"x":1179,"y":547,"score":39,"level":0},{"x":458,"y":548,"score":39,"level":0},{"x":524,"y":548,"score":47,"level":0},{"x":543,"y":548,"score":26,"level":0},{"x":600,"y":548,"score":31,"level":0},{"x":648,"y":548,"score":26,"level":0},{"x":806,"y":548,"score":26,"level":0},{"x":1161,"y":548,"score":32,"level":0},{"x":1281,"y":548,"score":44,"level":0},{"x":1284,"y":548,"score":38,"level":0},{"x":1419,"y":548,"score":107,"level":0},{"x":438,"y":549,"score":32,"level":0},{"x":706,"y":549,"score":28,"level":0},{"x":771,"y":549,"score":32,"level":0},{"x":847,"y":549,"score":44,"level":0},{"x":379,"y":550,"score":37,"level":0},{"x":400,"y":550,"score":26,"level":0},{"x":594,"y":550,"score":32,"level":0},{"x":619,"y":550,"score":40,"level":0},{"x":763,"y":550,"score":44,"level":0},{"x":998,"y":550,"score":36,"level":0},{"x":1137,"y":550,"score":26,"level":0},{"x":1380,"y":550,"score":28,"level":0},{"x":1414,"y":550,"score":39,"level":0},{"x":443,"y":551,"score":32,"level":0},{"x":607,"y":551,"score":50,"level":0},{"x":682,"y":551,"score":48,"level":0},{"x":929,"y":551,"score":68,"level":0},{"x":1346,"y":551,"score":65,"level":0},{"x":656,"y":552,"score":36,"level":0},{"x":750,"y":552,"score":26,"level":0},{"x":927,"y":552,"score":26,"level":0},{"x":992,"y":552,"score":27,"level":0},{"x":1030,"y":552,"score":39,"level":0},{"x":1087,"y":552,"score":31,"level":0},{"x":1484,"y":552,"score":28,"level":0},{"x":391,"y":553,"score":36,"level":0},{"x":461,"y":553,"score":45,"level":0},{"x":646,"y":553,"score":30,"level":0},{"x":670,"y":553,"score":26,"level":0},{"x":728,"y":553,"score":31,"level":0},{"x":775,"y":553,"score":26,"level":0},{"x":903,"y":553,"score":35,"level":0},{"x":1125,"y":553,"score":56,"level":0},{"x":1136,"y":553,"score":26,"level":0},{"x":1180,"y":553,"score":38,"level":0},{"x":1189,"y":553,"score":50,"level":0},{"x":1201,"y":553,"score":75,"level":0},{"x":1327,"y":553,"score":34,"level":0},{"x":1379,"y":553,"score":27,"level":0},{"x":1465,"y":553,"score":26,"level":0},{"x":605,"y":554,"score":56,"level":0},{"x":607,"y":554,"score":39,"level":0},{"x":613,"y":554,"score":28,"level":0},{"x":698,"y":554,"score":29,"level":0},{"x":807,"y":554,"score":30,"level":0},{"x":910,"y":554,"score":62,"level":0},{"x":957,"y":554,"score":32,"level":0},{"x":1086,"y":554,"score":31,"level":0},{"x":1186,"y":554,"score":28,"level":0},{"x":1224,"y":554,"score":27,"level":0},{"x":1288,"y":554,"score":62,"level":0},{"x":1347,"y":554,"score":77,"level":0},{"x":1355,"y":554,"score":26,"level":0},{"x":656,"y":555,"score":26,"level":0},{"x":853,"y":555,"score":36,"level":0},{"x":931,"y":555,"score":38,"level":0},{"x":1048,"y":555,"score":27,"level":0},{"x":1296,"y":555,"score":28,"level":0},{"x":1364,"y":555,"score":32,"level":0},{"x":817,"y":556,"score":39,"level":0},{"x":819,"y":556,"score":29,"level":0},{"x":1023,"y":556,"score":80,"level":0},{"x":1361,"y":556,"score":31,"level":0},{"x":1457,"y":556,"score":26,"level":0},{"x":609,"y":557,"score":53,"level":0},{"x":680,"y":557,"score":70,"level":0},{"x":715,"y":557,"score":58,"level":0},{"x":720,"y":557,"score":62,"level":0},{"x":824,"y":557,"score":38,"level":0},{"x":941,"y":557,"score":43,"level":0},{"x":1025,"y":557,"score":49,"level":0},{"x":1104,"y":557,"score":77,"level":0},{"x":1372,"y":557,"score":32,"level":0},{"x":625,"y":558,"score":55,"level":0},{"x":628,"y":558,"score":43,"level":0},{"x":744,"y":558,"score":49,"level":0},{"x":1091,"y":558,"score":26,"level":0},{"x":1261,"y":558,"score":29,"level":0},{"x":1266,"y":558,"score":28,"level":0},{"x":1304,"y":558,"score":39,"level":0},{"x":1469,"y":558,"score":42,"level":0},{"x":1472,"y":558,"score":78,"level":0},{"x":1481,"y":558,"score":85,"level":0},{"x":1489,"y":558,"score":59,"level":0},{"x":379,"y":559,"score":47,"level":0},{"x":637,"y":559,"score":49,"level":0},{"x":777,"y":559,"score":28,"level":0},{"x":1081,"y":559,"score":26,"level":0},{"x":1111,"y":559,"score":41,"level":0},{"x":1289,"y":559,"score":43,"level":0},{"x":1340,"y":559,"score":34,"level":0},{"x":1357,"y":559,"score":67,"level":0},{"x":1421,"y":559,"score":26,"level":0},{"x":653,"y":560,"score":35,"level":0},{"x":686,"y":560,"score":30,"level":0},{"x":994,"y":560,"score":44,"level":0},{"x":1153,"y":560,"score":26,"level":0},{"x":1349,"y":560,"score":39,"level":0},{"x":1452,"y":560,"score":32,"level":0},{"x":1473,"y":560,"score":30,"level":0},{"x":1481,"y":560,"score":77,"level":0},{"x":1487,"y":560,"score":26,"level":0},{"x":377,"y":561,"score":42,"level":0},{"x":762,"y":561,"score":54,"level":0},{"x":1022,"y":561,"score":30,"level":0},{"x":1034,"y":561,"score":35,"level":0},{"x":1191,"y":561,"score":26,"level":0},{"x":1196,"y":561,"score":36,"level":0},{"x":1226,"y":561,"score":32,"level":0},{"x":1233,"y":561,"score":26,"level":0},{"x":1429,"y":561,"score":68,"level":0},{"x":475,"y":562,"score":32,"level":0},{"x":632,"y":562,"score":90,"level":0},{"x":845,"y":562,"score":45,"level":0},{"x":898,"y":562,"score":41,"level":0},{"x":933,"y":562,"score":39,"level":0},{"x":971,"y":562,"score":28,"level":0},{"x":1009,"y":562,"score":36,"level":0},{"x":1237,"y":562,"score":39,"level":0},{"x":1311,"y":562,"score":30,"level":0},{"x":1407,"y":562,"score":32,"level":0},{"x":436,"y":563,"score":32,"level":0},{"x":455,"y":563,"score":39,"level":0},{"x":770,"y":563,"score":36,"level":0},{"x":821,"y":563,"score":34,"level":0},{"x":907,"y":563,"score":40,"level":0},{"x":941,"y":563,"score":31,"level":0},{"x":1042,"y":563,"score":27,"level":0},{"x":1143,"y":563,"score":34,"level":0},{"x":1146,"y":563,"score":31,"level":0},{"x":1233,"y":563,"score":34,"level":0},{"x":1244,"y":563,"score":28,"level":0},{"x":1299,"y":563,"score":50,"level":0},{"x":1360,"y":563,"score":33,"level":0},{"x":537,"y":564,"score":31,"level":0},{"x":784,"y":564,"score":34,"level":0},{"x":1032,"y":564,"score":27,"level":0},{"x":1068,"y":564,"score":31,"level":0},{"x":1260,"y":564,"score":27,"level":0},{"x":1345,"y":564,"score":28,"level":0},{"x":1431,"y":564,"score":50,"level":0},{"x":1438,"y":564,"score":129,"level":0},{"x":499,"y":565,"score":26,"level":0},{"x":697,"y":565,"score":48,"level":0},{"x":729,"y":565,"score":34,"level":0},{"x":808,"y":565,"score":32,"level":0},{"x":845,"y":565,"score":34,"level":0},{"x":847,"y":565,"score":37,"level":0},{"x":994,"y":565,"score":29,"level":0},{"x":1105,"y":565,"score":26,"level":0},{"x":1132,"y":565,"score":49,"level":0},{"x":1185,"y":565,"score":32,"level":0},{"x":1205,"y":565,"score":29,"level":0},{"x":1289,"y":565,"score":26,"level":0},{"x":1299,"y":565,"score":30,"level":0},{"x":1331,"y":565,"score":34,"level":0},{"x":1404,"y":565,"score":34,"level":0},{"x":1452,"y":565,"score":58,"level":0},{"x":493,"y":566,"score":27,"level":0},{"x":628,"y":566,"score":50,"level":0},{"x":733,"y":566,"score":33,"level":0},{"x":1061,"y":566,"score":31,"level":0},{"x":1339,"y":566,"score":27,"level":0},{"x":1438,"y":566,"score":39,"level":0},{"x":1450,"y":566,"score":26,"level":0},{"x":392,"y":567,"score":34,"level":0},{"x":531,"y":567,"score":30,"level":0},{"x":607,"y":567,"score":76,"level":0},{"x":763,"y":567,"score":32,"level":0},{"x":952,"y":567,"score":34,"level":0},{"x":1000,"y":567,"score":36,"level":0},{"x":1002,"y":567,"score":36,"level":0},{"x":1021,"y":567,"score":30,"level":0},{"x":1346,"y":567,"score":30,"level":0},{"x":1395,"y":567,"score":30,"level":0},{"x":712,"y":568,"score":33,"level":0},{"x":809,"y":568,"score":27,"level":0},{"x":823,"y":568,"score":39,"level":0},{"x":1015,"y":568,"score":29,"level":0},{"x":1083,"y":568,"score":32,"level":0},{"x":1113,"y":568,"score":37,"level":0},{"x":1233,"y":568,"score":40,"level":0},{"x":1244,"y":568,"score":27,"level":0},{"x":1279,"y":568,"score":32,"level":0},{"x":1336,"y":568,"score":42,"level":0},{"x":380,"y":569,"score":63,"level":0},{"x":558,"y":569,"score":34,"level":0},{"x":563,"y":569,"score":28,"level":0},{"x":941,"y":569,"score":34,"level":0},{"x":1010,"y":569,"score":33,"level":0},{"x":1039,"y":569,"score":50,"level":0},{"x":1128,"y":569,"score":31,"level":0},{"x":1261,"y":569,"score":29,"level":0},{"x":1465,"y":569,"score":28,"level":0},{"x":647,"y":570,"score":30,"level":0},{"x":931,"y":570,"score":29,"level":0},{"x":1031,"y":570,"score":28,"level":0},{"x":1047,"y":570,"score":27,"level":0},{"x":1208,"y":570,"score":38,"level":0},{"x":1328,"y":570,"score":34,"level":0},{"x":1472,"y":570,"score":26,"level":0},{"x":428,"y":571,"score":42,"level":0},{"x":497,"y":571,"score":31,"level":0},{"x":682,"y":571,"score":42,"level":0},{"x":816,"y":571,"score":26,"level":0},{"x":850,"y":571,"score":26,"level":0},{"x":1055,"y":571,"score":26,"level":0},{"x":1097,"y":571,"score":26,"level":0},{"x":1110,"y":571,"score":46,"level":0},{"x":1214,"y":571,"score":29,"level":0},{"x":1348,"y":571,"score":48,"level":0},{"x":1419,"y":571,"score":29,"level":0},{"x":916,"y":572,"score":60,"level":0},{"x":1034,"y":572,"score":27,"level":0},{"x":1047,"y":572,"score":29,"level":0},{"x":1182,"y":572,"score":32,"level":0},{"x":1229,"y":572,"score":56,"level":0},{"x":714,"y":573,"score":26,"level":0},{"x":822,"y":573,"score":30,"level":0},{"x":938,"y":573,"score":66,"level":0},{"x":1059,"y":573,"score":29,"level":0},{"x":1117,"y":573,"score":54,"level":0},{"x":1206,"y":573,"score":36,"level":0},{"x":1459,"y":573,"score":54,"level":0},{"x":1481,"y":573,"score":42,"level":0},{"x":387,"y":574,"score":26,"level":0},{"x":434,"y":574,"score":33,"level":0},{"x":731,"y":574,"score":35,"level":0},{"x":1303,"y":574,"score":40,"level":0},{"x":1437,"y":574,"score":88,"level":0},{"x":1486,"y":574,"score":30,"level":0},{"x":448,"y":575,"score":26,"level":0},{"x":516,"y":575,"score":35,"level":0},{"x":636,"y":575,"score":27,"level":0},{"x":738,"y":575,"score":38,"level":0},{"x":898,"y":575,"score":28,"level":0},{"x":908,"y":575,"score":41,"level":0},{"x":1027,"y":575,"score":34,"level":0},{"x":1351,"y":575,"score":64,"level":0},{"x":1377,"y":575,"score":29,"level":0},{"x":648,"y":576,"score":46,"level":0},{"x":1021,"y":576,"score":32,"level":0},{"x":1039,"y":576,"score":46,"level":0},{"x":1059,"y":576,"score":46,"level":0},{"x":1127,"y":576,"score":36,"level":0},{"x":1149,"y":576,"score":57,"level":0},{"x":1256,"y":576,"score":26,"level":0},{"x":807,"y":577,"score":41,"level":0},{"x":844,"y":577,"score":55,"level":0},{"x":996,"y":577,"score":30,"level":0},{"x":1129,"y":577,"score":42,"level":0},{"x":1268,"y":577,"score":36,"level":0},{"x":384,"y":578,"score":61,"level":0},{"x":452,"y":578,"score":30,"level":0},{"x":960,"y":578,"score":26,"level":0},{"x":968,"y":578,"score":41,"level":0},{"x":981,"y":578,"score":27,"level":0},{"x":1045,"y":578,"score":44,"level":0},{"x":1080,"y":578,"score":36,"level":0},{"x":1136,"y":578,"score":33,"level":0},{"x":1285,"y":578,"score":36,"level":0},{"x":819,"y":579,"score":32,"level":0},{"x":824,"y":579,"score":36,"level":0},{"x":887,"y":579,"score":45,"level":0},{"x":1002,"y":579,"score":40,"level":0},{"x":1023,"y":579,"score":34,"level":0},{"x":1263,"y":579,"score":32,"level":0},{"x":1308,"y":579,"score":32,"level":0},{"x":453,"y":580,"score":37,"level":0},{"x":689,"y":580,"score":81,"level":0},{"x":892,"y":580,"score":31,"level":0},{"x":1096,"y":580,"score":30,"level":0},{"x":1187,"y":580,"score":26,"level":0},{"x":1244,"y":580,"score":32,"level":0},{"x":1290,"y":580,"score":69,"level":0},{"x":718,"y":581,"score":34,"level":0},{"x":824,"y":581,"score":37,"level":0},{"x":918,"y":581,"score":29,"level":0},{"x":936,"y":581,"score":30,"level":0},{"x":957,"y":581,"score":26,"level":0},{"x":1066,"y":581,"score":28,"level":0},{"x":1085,"y":581,"score":34,"level":0},{"x":1117,"y":581,"score":56,"level":0},{"x":379,"y":582,"score":47,"level":0},{"x":595,"y":582,"score":44,"level":0},{"x":601,"y":582,"score":30,"level":0},{"x":801,"y":582,"score":31,"level":0},{"x":907,"y":582,"score":35,"level":0},{"x":941,"y":582,"score":54,"level":0},{"x":1013,"y":582,"score":34,"level":0},{"x":1022,"y":582,"score":40,"level":0},{"x":1126,"y":582,"score":42,"level":0},{"x":1215,"y":582,"score":33,"level":0},{"x":1372,"y":582,"score":62,"level":0},{"x":1415,"y":582,"score":32,"level":0},{"x":1451,"y":582,"score":28,"level":0},{"x":1472,"y":582,"score":26,"level":0},{"x":510,"y":583,"score":41,"level":0},{"x":567,"y":583,"score":27,"level":0},{"x":573,"y":583,"score":39,"level":0},{"x":819,"y":583,"score":28,"level":0},{"x":1242,"y":583,"score":39,"level":0},{"x":1303,"y":583,"score":34,"level":0},{"x":1435,"y":583,"score":42,"level":0},{"x":384,"y":584,"score":39,"level":0},{"x":872,"y":584,"score":34,"level":0},{"x":875,"y":584,"score":43,"level":0},{"x":881,"y":584,"score":29,"level":0},{"x":919,"y":584,"score":32,"level":0},{"x":1215,"y":584,"score":49,"level":0},{"x":1221,"y":584,"score":45,"level":0},{"x":1236,"y":584,"score":31,"level":0},{"x":1239,"y":584,"score":47,"level":0},{"x":1286,"y":584,"score":68,"level":0},{"x":504,"y":585,"score":38,"level":0},{"x":810,"y":585,"score":32,"level":0},{"x":892,"y":585,"score":32,"level":0},{"x":1154,"y":585,"score":39,"level":0},{"x":1230,"y":585,"score":50,"level":0},{"x":421,"y":586,"score":52,"level":0},{"x":458,"y":586,"score":40,"level":0},{"x":482,"y":586,"score":26,"level":0},{"x":685,"y":586,"score":39,"level":0},{"x":951,"y":586,"score":28,"level":0},{"x":995,"y":586,"score":29,"level":0},{"x":1061,"y":586,"score":31,"level":0},{"x":1106,"y":586,"score":30,"level":0},{"x":1197,"y":586,"score":33,"level":0},{"x":1205,"y":586,"score":34,"level":0},{"x":1213,"y":586,"score":36,"level":0},{"x":1222,"y":586,"score":34,"level":0},{"x":1310,"y":586,"score":32,"level":0},{"x":1316,"y":586,"score":31,"level":0},{"x":418,"y":587,"score":38,"level":0},{"x":628,"y":587,"score":46,"level":0},{"x":722,"y":587,"score":30,"level":0},{"x":801,"y":587,"score":28,"level":0},{"x":821,"y":587,"score":56,"level":0},{"x":922,"y":587,"score":38,"level":0},{"x":1005,"y":587,"score":29,"level":0},{"x":1012,"y":587,"score":44,"level":0},{"x":1104,"y":587,"score":39,"level":0},{"x":1135,"y":587,"score":43,"level":0},{"x":1169,"y":587,"score":29,"level":0},{"x":377,"y":588,"score":50,"level":0},{"x":751,"y":588,"score":27,"level":0},{"x":929,"y":588,"score":41,"level":0},{"x":948,"y":588,"score":42,"level":0},{"x":1070,"y":588,"score":36,"level":0},{"x":1237,"y":588,"score":38,"level":0},{"x":1242,"y":588,"score":39,"level":0},{"x":1428,"y":588,"score":70,"level":0},{"x":1472,"y":588,"score":28,"level":0},{"x":415,"y":589,"score":31,"level":0},{"x":561,"y":589,"score":39,"level":0},{"x":841,"y":589,"score":30,"level":0},{"x":1061,"y":589,"score":36,"level":0},{"x":1219,"y":589,"score":46,"level":0},{"x":1278,"y":589,"score":27,"level":0},{"x":512,"y":590,"score":32,"level":0},{"x":553,"y":590,"score":28,"level":0},{"x":692,"y":590,"score":26,"level":0},{"x":826,"y":590,"score":33,"level":0},{"x":859,"y":590,"score":40,"level":0},{"x":968,"y":590,"score":29,"level":0},{"x":1036,"y":590,"score":40,"level":0},{"x":1209,"y":590,"score":34,"level":0},{"x":1371,"y":590,"score":48,"level":0},{"x":412,"y":591,"score":36,"level":0},{"x":426,"y":591,"score":27,"level":0},{"x":484,"y":591,"score":26,"level":0},{"x":614,"y":591,"score":95,"level":0},{"x":1055,"y":591,"score":51,"level":0},{"x":1079,"y":591,"score":30,"level":0},{"x":1377,"y":591,"score":35,"level":0},{"x":571,"y":592,"score":28,"level":0},{"x":576,"y":592,"score":27,"level":0},{"x":648,"y":592,"score":36,"level":0},{"x":709,"y":592,"score":30,"level":0},{"x":729,"y":592,"score":41,"level":0},{"x":892,"y":592,"score":27,"level":0},{"x":999,"y":592,"score":40,"level":0},{"x":1050,"y":592,"score":38,"level":0},{"x":1120,"y":592,"score":26,"level":0},{"x":1160,"y":592,"score":35,"level":0},{"x":1245,"y":592,"score":49,"level":0},{"x":1353,"y":592,"score":34,"level":0},{"x":1427,"y":592,"score":47,"level":0},{"x":587,"y":593,"score":29,"level":0},{"x":718,"y":593,"score":30,"level":0},{"x":858,"y":593,"score":35,"level":0},{"x":917,"y":593,"score":40,"level":0},{"x":1079,"y":593,"score":38,"level":0},{"x":1134,"y":593,"score":76,"level":0},{"x":1153,"y":593,"score":70,"level":0},{"x":1198,"y":593,"score":26,"level":0},{"x":1221,"y":593,"score":51,"level":0},{"x":1318,"y":593,"score":36,"level":0},{"x":1331,"y":593,"score":28,"level":0},{"x":443,"y":594,"score":27,"level":0},{"x":474,"y":594,"score":45,"level":0},{"x":632,"y":594,"score":32,"level":0},{"x":728,"y":594,"score":30,"level":0},{"x":844,"y":594,"score":62,"level":0},{"x":930,"y":594,"score":28,"level":0},{"x":1022,"y":594,"score":29,"level":0},{"x":1042,"y":594,"score":28,"level":0},{"x":1126,"y":594,"score":54,"level":0},{"x":1156,"y":594,"score":37,"level":0},{"x":1175,"y":594,"score":27,"level":0},{"x":1203,"y":594,"score":42,"level":0},{"x":1278,"y":594,"score":26,"level":0},{"x":1431,"y":594,"score":57,"level":0},{"x":428,"y":595,"score":36,"level":0},{"x":823,"y":595,"score":32,"level":0},{"x":870,"y":595,"score":36,"level":0},{"x":1108,"y":595,"score":32,"level":0},{"x":1221,"y":595,"score":59,"level":0},{"x":1268,"y":595,"score":26,"level":0},{"x":1299,"y":595,"score":29,"level":0},{"x":1318,"y":595,"score":38,"level":0},{"x":1451,"y":595,"score":38,"level":0},{"x":458,"y":596,"score":52,"level":0},{"x":463,"y":596,"score":52,"level":0},{"x":662,"y":596,"score":28,"level":0},{"x":733,"y":596,"score":58,"level":0},{"x":777,"y":596,"score":30,"level":0},{"x":786,"y":596,"score":41,"level":0},{"x":828,"y":596,"score":47,"level":0},{"x":849,"y":596,"score":79,"level":0},{"x":903,"y":596,"score":49,"level":0},{"x":975,"y":596,"score":28,"level":0},{"x":1029,"y":596,"score":31,"level":0},{"x":1218,"y":596,"score":46,"level":0},{"x":1228,"y":596,"score":45,"level":0},{"x":1310,"y":596,"score":37,"level":0},{"x":1361,"y":596,"score":30,"level":0},{"x":515,"y":597,"score":35,"level":0},{"x":651,"y":597,"score":27,"level":0},{"x":943,"y":597,"score":61,"level":0},{"x":965,"y":597,"score":35,"level":0},{"x":1115,"y":597,"score":28,"level":0},{"x":1117,"y":597,"score":41,"level":0},{"x":1243,"y":597,"score":48,"level":0},{"x":377,"y":598,"score":36,"level":0},{"x":934,"y":598,"score":41,"level":0},{"x":1008,"y":598,"score":28,"level":0},{"x":1069,"y":598,"score":30,"level":0},{"x":1169,"y":598,"score":27,"level":0},{"x":1253,"y":598,"score":26,"level":0},{"x":407,"y":599,"score":30,"level":0},{"x":557,"y":599,"score":48,"level":0},{"x":669,"y":599,"score":26,"level":0},{"x":792,"y":599,"score":31,"level":0},{"x":947,"y":599,"score":26,"level":0},{"x":999,"y":599,"score":40,"level":0},{"x":1050,"y":599,"score":49,"level":0},{"x":1296,"y":599,"score":37,"level":0},{"x":377,"y":600,"score":33,"level":0},{"x":413,"y":600,"score":47,"level":0},{"x":681,"y":600,"score":37,"level":0},{"x":696,"y":600,"score":56,"level":0},{"x":715,"y":600,"score":50,"level":0},{"x":782,"y":600,"score":31,"level":0},{"x":864,"y":600,"score":28,"level":0},{"x":897,"y":600,"score":40,"level":0},{"x":1027,"y":600,"score":28,"level":0},{"x":1132,"y":600,"score":35,"level":0},{"x":1159,"y":600,"score":26,"level":0},{"x":1242,"y":600,"score":45,"level":0},{"x":571,"y":601,"score":38,"level":0},{"x":573,"y":601,"score":30,"level":0},{"x":1069,"y":601,"score":29,"level":0},{"x":1206,"y":601,"score":66,"level":0},{"x":1223,"y":601,"score":54,"level":0},{"x":1296,"y":601,"score":44,"level":0},{"x":1431,"y":601,"score":36,"level":0},{"x":1450,"y":601,"score":35,"level":0},{"x":498,"y":602,"score":35,"level":0},{"x":582,"y":602,"score":38,"level":0},{"x":705,"y":602,"score":42,"level":0},{"x":786,"y":602,"score":26,"level":0},{"x":851,"y":602,"score":54,"level":0},{"x":887,"y":602,"score":27,"level":0},{"x":904,"y":602,"score":27,"level":0},{"x":1037,"y":602,"score":37,"level":0},{"x":1047,"y":602,"score":37,"level":0},{"x":1061,"y":602,"score":37,"level":0},{"x":1086,"y":602,"score":26,"level":0},{"x":1117,"y":602,"score":27,"level":0},{"x":1456,"y":602,"score":71,"level":0},{"x":615,"y":603,"score":56,"level":0},{"x":641,"y":603,"score":38,"level":0},{"x":826,"y":603,"score":90,"level":0},{"x":972,"y":603,"score":31,"level":0},{"x":1010,"y":603,"score":28,"level":0},{"x":1073,"y":603,"score":31,"level":0},{"x":1125,"y":603,"score":33,"level":0},{"x":1228,"y":603,"score":34,"level":0},{"x":1318,"y":603,"score":26,"level":0},{"x":377,"y":604,"score":38,"level":0},{"x":582,"y":604,"score":43,"level":0},{"x":609,"y":604,"score":42,"level":0},{"x":621,"y":604,"score":40,"level":0},{"x":858,"y":604,"score":42,"level":0},{"x":887,"y":604,"score":26,"level":0},{"x":944,"y":604,"score":34,"level":0},{"x":946,"y":604,"score":36,"level":0},{"x":986,"y":604,"score":31,"level":0},{"x":1016,"y":604,"score":32,"level":0},{"x":1066,"y":604,"score":65,"level":0},{"x":1207,"y":604,"score":47,"level":0},{"x":559,"y":605,"score":28,"level":0},{"x":569,"y":605,"score":37,"level":0},{"x":641,"y":605,"score":32,"level":0},{"x":716,"y":605,"score":72,"level":0},{"x":752,"y":605,"score":37,"level":0},{"x":757,"y":605,"score":30,"level":0},{"x":893,"y":605,"score":26,"level":0},{"x":895,"y":605,"score":26,"level":0},{"x":1042,"y":605,"score":39,"level":0},{"x":1111,"y":605,"score":39,"level":0},{"x":1213,"y":605,"score":26,"level":0},{"x":1276,"y":605,"score":27,"level":0},{"x":1365,"y":605,"score":34,"level":0},{"x":1384,"y":605,"score":43,"level":0},{"x":847,"y":606,"score":67,"level":0},{"x":940,"y":606,"score":46,"level":0},{"x":965,"y":606,"score":34,"level":0},{"x":1068,"y":606,"score":87,"level":0},{"x":1247,"y":606,"score":71,"level":0},{"x":1281,"y":606,"score":33,"level":0},{"x":428,"y":607,"score":27,"level":0},{"x":439,"y":607,"score":29,"level":0},{"x":505,"y":607,"score":26,"level":0},{"x":559,"y":607,"score":26,"level":0},{"x":576,"y":607,"score":55,"level":0},{"x":745,"y":607,"score":29,"level":0},{"x":951,"y":607,"score":30,"level":0},{"x":957,"y":607,"score":54,"level":0},{"x":1131,"y":607,"score":32,"level":0},{"x":1176,"y":607,"score":35,"level":0},{"x":1293,"y":607,"score":54,"level":0},{"x":541,"y":608,"score":55,"level":0},{"x":557,"y":608,"score":32,"level":0},{"x":920,"y":608,"score":40,"level":0},{"x":960,"y":608,"score":56,"level":0},{"x":1160,"y":608,"score":58,"level":0},{"x":1222,"y":608,"score":28,"level":0},{"x":460,"y":609,"score":31,"level":0},{"x":561,"y":609,"score":31,"level":0},{"x":678,"y":609,"score":26,"level":0},{"x":751,"y":609,"score":28,"level":0},{"x":812,"y":609,"score":32,"level":0},{"x":844,"y":609,"score":30,"level":0},{"x":858,"y":609,"score":44,"level":0},{"x":905,"y":609,"score":30,"level":0},{"x":907,"y":609,"score":39,"level":0},{"x":972,"y":609,"score":53,"level":0},{"x":1045,"y":609,"score":37,"level":0},{"x":1072,"y":609,"score":78,"level":0},{"x":1094,"y":609,"score":27,"level":0},{"x":1339,"y":609,"score":35,"level":0},{"x":1380,"y":609,"score":49,"level":0},{"x":600,"y":610,"score":81,"level":0},{"x":810,"y":610,"score":34,"level":0},{"x":928,"y":610,"score":32,"level":0},{"x":980,"y":610,"score":30,"level":0},{"x":1091,"y":610,"score":29,"level":0},{"x":1138,"y":610,"score":43,"level":0},{"x":1166,"y":610,"score":54,"level":0},{"x":1330,"y":610,"score":27,"level":0},{"x":1388,"y":610,"score":33,"level":0},{"x":391,"y":611,"score":28,"level":0},{"x":566,"y":611,"score":33,"level":0},{"x":732,"y":611,"score":26,"level":0},{"x":934,"y":611,"score":27,"level":0},{"x":948,"y":611,"score":32,"level":0},{"x":1028,"y":611,"score":68,"level":0},{"x":1034,"y":611,"score":39,"level":0},{"x":1066,"y":611,"score":50,"level":0},{"x":1353,"y":611,"score":32,"level":0},{"x":614,"y":612,"score":27,"level":0},{"x":648,"y":612,"score":30,"level":0},{"x":671,"y":612,"score":32,"level":0},{"x":801,"y":612,"score":28,"level":0},{"x":804,"y":612,"score":32,"level":0},{"x":944,"y":612,"score":37,"level":0},{"x":1090,"y":612,"score":38,"level":0},{"x":1320,"y":612,"score":46,"level":0},{"x":1369,"y":612,"score":64,"level":0},{"x":1458,"y":612,"score":26,"level":0},{"x":566,"y":613,"score":36,"level":0},{"x":690,"y":613,"score":63,"level":0},{"x":738,"y":613,"score":31,"level":0},{"x":773,"y":613,"score":33,"level":0},{"x":775,"y":613,"score":32,"level":0},{"x":812,"y":613,"score":33,"level":0},{"x":914,"y":613,"score":33,"level":0},{"x":389,"y":614,"score":33,"level":0},{"x":420,"y":614,"score":32,"level":0},{"x":507,"y":614,"score":26,"level":0},{"x":817,"y":614,"score":55,"level":0},{"x":919,"y":614,"score":27,"level":0},{"x":1027,"y":614,"score":29,"level":0},{"x":1050,"y":614,"score":41,"level":0},{"x":1052,"y":614,"score":27,"level":0},{"x":1214,"y":614,"score":34,"level":0},{"x":1241,"y":614,"score":79,"level":0},{"x":1339,"y":614,"score":28,"level":0},{"x":1416,"y":614,"score":26,"level":0},{"x":532,"y":615,"score":26,"level":0},{"x":579,"y":615,"score":26,"level":0},{"x":705,"y":615,"score":61,"level":0},{"x":712,"y":615,"score":65,"level":0},{"x":907,"y":615,"score":42,"level":0},{"x":1032,"y":615,"score":46,"level":0},{"x":1292,"y":615,"score":34,"level":0},{"x":1294,"y":615,"score":32,"level":0},{"x":1384,"y":615,"score":28,"level":0},{"x":1477,"y":615,"score":28,"level":0},{"x":435,"y":616,"score":28,"level":0},{"x":638,"y":616,"score":33,"level":0},{"x":916,"y":616,"score":40,"level":0},{"x":1151,"y":616,"score":38,"level":0},{"x":1164,"y":616,"score":56,"level":0},{"x":1215,"y":616,"score":26,"level":0},{"x":1287,"y":616,"score":26,"level":0},{"x":566,"y":617,"score":49,"level":0},{"x":824,"y":617,"score":50,"level":0},{"x":968,"y":617,"score":38,"level":0},{"x":1004,"y":617,"score":38,"level":0},{"x":1013,"y":617,"score":28,"level":0},{"x":1019,"y":617,"score":28,"level":0},{"x":1039,"y":617,"score":31,"level":0},{"x":1170,"y":617,"score":72,"level":0},{"x":1177,"y":617,"score":48,"level":0},{"x":1396,"y":617,"score":31,"level":0},{"x":1476,"y":617,"score":32,"level":0},{"x":539,"y":618,"score":27,"level":0},{"x":587,"y":618,"score":59,"level":0},{"x":620,"y":618,"score":35,"level":0},{"x":756,"y":618,"score":56,"level":0},{"x":808,"y":618,"score":27,"level":0},{"x":937,"y":618,"score":37,"level":0},{"x":943,"y":618,"score":34,"level":0},{"x":999,"y":618,"score":37,"level":0},{"x":1079,"y":618,"score":50,"level":0},{"x":1421,"y":618,"score":32,"level":0},{"x":598,"y":619,"score":42,"level":0},{"x":607,"y":619,"score":94,"level":0},{"x":735,"y":619,"score":37,"level":0},{"x":931,"y":619,"score":36,"level":0},{"x":958,"y":619,"score":27,"level":0},{"x":1022,"y":619,"score":44,"level":0},{"x":1071,"y":619,"score":53,"level":0},{"x":1152,"y":619,"score":30,"level":0},{"x":1169,"y":619,"score":102,"level":0},{"x":600,"y":620,"score":62,"level":0},{"x":823,"y":620,"score":46,"level":0},{"x":968,"y":620,"score":31,"level":0},{"x":1085,"y":620,"score":48,"level":0},{"x":1236,"y":620,"score":38,"level":0},{"x":1241,"y":620,"score":38,"level":0},{"x":1277,"y":620,"score":40,"level":0},{"x":1449,"y":620,"score":38,"level":0},{"x":475,"y":621,"score":28,"level":0},{"x":570,"y":621,"score":34,"level":0},{"x":582,"y":621,"score":34,"level":0},{"x":638,"y":621,"score":31,"level":0},{"x":767,"y":621,"score":40,"level":0},{"x":840,"y":621,"score":44,"level":0},{"x":886,"y":621,"score":44,"level":0},{"x":1147,"y":621,"score":86,"level":0},{"x":1221,"y":621,"score":27,"level":0},{"x":1289,"y":621,"score":28,"level":0},{"x":1387,"y":621,"score":47,"level":0},{"x":437,"y":622,"score":28,"level":0},{"x":644,"y":622,"score":33,"level":0},{"x":720,"y":622,"score":33,"level":0},{"x":811,"y":622,"score":28,"level":0},{"x":851,"y":622,"score":42,"level":0},{"x":980,"y":622,"score":40,"level":0},{"x":1044,"y":622,"score":30,"level":0},{"x":1297,"y":622,"score":37,"level":0},{"x":1372,"y":622,"score":29,"level":0},{"x":387,"y":623,"score":44,"level":0},{"x":393,"y":623,"score":42,"level":0},{"x":480,"y":623,"score":46,"level":0},{"x":542,"y":623,"score":34,"level":0},{"x":567,"y":623,"score":80,"level":0},{"x":601,"y":623,"score":48,"level":0},{"x":604,"y":623,"score":69,"level":0},{"x":610,"y":623,"score":59,"level":0},{"x":652,"y":623,"score":28,"level":0},{"x":829,"y":623,"score":79,"level":0},{"x":891,"y":623,"score":53,"level":0},{"x":944,"y":623,"score":33,"level":0},{"x":1004,"y":623,"score":26,"level":0},{"x":1209,"y":623,"score":38,"level":0},{"x":1270,"y":623,"score":44,"level":0},{"x":1350,"y":623,"score":29,"level":0},{"x":1366,"y":623,"score":35,"level":0},{"x":1387,"y":623,"score":47,"level":0},{"x":1401,"y":623,"score":36,"level":0},{"x":1475,"y":623,"score":31,"level":0},{"x":443,"y":624,"score":37,"level":0},{"x":619,"y":624,"score":48,"level":0},{"x":814,"y":624,"score":31,"level":0},{"x":980,"y":624,"score":28,"level":0},{"x":999,"y":624,"score":26,"level":0},{"x":1035,"y":624,"score":39,"level":0},{"x":1252,"y":624,"score":39,"level":0},{"x":1416,"y":624,"score":42,"level":0},{"x":476,"y":625,"score":29,"level":0},{"x":545,"y":625,"score":34,"level":0},{"x":591,"y":625,"score":29,"level":0},{"x":604,"y":625,"score":78,"level":0},{"x":614,"y":625,"score":40,"level":0},{"x":803,"y":625,"score":41,"level":0},{"x":1099,"y":625,"score":26,"level":0},{"x":1117,"y":625,"score":38,"level":0},{"x":1179,"y":625,"score":35,"level":0},{"x":1183,"y":625,"score":34,"level":0},{"x":1191,"y":625,"score":31,"level":0},{"x":1284,"y":625,"score":26,"level":0},{"x":1452,"y":625,"score":48,"level":0},{"x":572,"y":626,"score":38,"level":0},{"x":924,"y":626,"score":26,"level":0},{"x":955,"y":626,"score":78,"level":0},{"x":1082,"y":626,"score":26,"level":0},{"x":1123,"y":626,"score":28,"level":0},{"x":1176,"y":626,"score":50,"level":0},{"x":1289,"y":626,"score":28,"level":0},{"x":1446,"y":626,"score":31,"level":0},{"x":452,"y":627,"score":27,"level":0},{"x":481,"y":627,"score":38,"level":0},{"x":483,"y":627,"score":41,"level":0},{"x":500,"y":627,"score":32,"level":0},{"x":570,"y":627,"score":40,"level":0},{"x":723,"y":627,"score":66,"level":0},{"x":746,"y":627,"score":27,"level":0},{"x":1074,"y":627,"score":30,"level":0},{"x":1138,"y":627,"score":29,"level":0},{"x":1153,"y":627,"score":27,"level":0},{"x":504,"y":628,"score":27,"level":0},{"x":838,"y":628,"score":71,"level":0},{"x":843,"y":628,"score":41,"level":0},{"x":1059,"y":628,"score":31,"level":0},{"x":1148,"y":628,"score":30,"level":0},{"x":1189,"y":628,"score":47,"level":0},{"x":1242,"y":628,"score":37,"level":0},{"x":1312,"y":628,"score":28,"level":0},{"x":1342,"y":628,"score":32,"level":0},{"x":1436,"y":628,"score":29,"level":0},{"x":482,"y":629,"score":33,"level":0},{"x":534,"y":629,"score":27,"level":0},{"x":681,"y":629,"score":37,"level":0},{"x":703,"y":629,"score":44,"level":0},{"x":880,"y":629,"score":73,"level":0},{"x":901,"y":629,"score":31,"level":0},{"x":1015,"y":629,"score":26,"level":0},{"x":1062,"y":629,"score":32,"level":0},{"x":1093,"y":629,"score":39,"level":0},{"x":1251,"y":629,"score":79,"level":0},{"x":1330,"y":629,"score":31,"level":0},{"x":1336,"y":629,"score":34,"level":0},{"x":1355,"y":629,"score":29,"level":0},{"x":514,"y":630,"score":32,"level":0},{"x":771,"y":630,"score":28,"level":0},{"x":855,"y":630,"score":38,"level":0},{"x":1039,"y":630,"score":38,"level":0},{"x":1179,"y":630,"score":45,"level":0},{"x":1181,"y":630,"score":26,"level":0},{"x":420,"y":631,"score":34,"level":0},{"x":469,"y":631,"score":43,"level":0},{"x":681,"y":631,"score":34,"level":0},{"x":831,"y":631,"score":36,"level":0},{"x":833,"y":631,"score":58,"level":0},{"x":953,"y":631,"score":30,"level":0},{"x":959,"y":631,"score":35,"level":0},{"x":1090,"y":631,"score":42,"level":0},{"x":1187,"y":631,"score":59,"level":0},{"x":1261,"y":631,"score":101,"level":0},{"x":1386,"y":631,"score":35,"level":0},{"x":1398,"y":631,"score":58,"level":0},{"x":1434,"y":631,"score":42,"level":0},{"x":449,"y":632,"score":31,"level":0},{"x":467,"y":632,"score":27,"level":0},{"x":573,"y":632,"score":36,"level":0},{"x":576,"y":632,"score":31,"level":0},{"x":735,"y":632,"score":30,"level":0},{"x":815,"y":632,"score":38,"level":0},{"x":819,"y":632,"score":40,"level":0},{"x":1127,"y":632,"score":26,"level":0},{"x":1132,"y":632,"score":26,"level":0},{"x":1292,"y":632,"score":28,"level":0},{"x":1403,"y":632,"score":59,"level":0},{"x":1477,"y":632,"score":71,"level":0},{"x":1487,"y":632,"score":27,"level":0},{"x":835,"y":633,"score":83,"level":0},{"x":968,"y":633,"score":38,"level":0},{"x":1215,"y":633,"score":27,"level":0},{"x":1275,"y":633,"score":72,"level":0},{"x":1300,"y":633,"score":26,"level":0},{"x":1332,"y":633,"score":39,"level":0},{"x":1400,"y":633,"score":27,"level":0},{"x":1405,"y":633,"score":84,"level":0},{"x":1418,"y":633,"score":51,"level":0},{"x":1452,"y":633,"score":26,"level":0},{"x":407,"y":634,"score":30,"level":0},{"x":637,"y":634,"score":28,"level":0},{"x":698,"y":634,"score":28,"level":0},{"x":710,"y":634,"score":71,"level":0},{"x":841,"y":634,"score":84,"level":0},{"x":847,"y":634,"score":64,"level":0},{"x":1150,"y":634,"score":42,"level":0},{"x":1357,"y":634,"score":35,"level":0},{"x":1410,"y":634,"score":40,"level":0},{"x":472,"y":635,"score":40,"level":0},{"x":532,"y":635,"score":35,"level":0},{"x":602,"y":635,"score":53,"level":0},{"x":619,"y":635,"score":43,"level":0},{"x":671,"y":635,"score":34,"level":0},{"x":862,"y":635,"score":41,"level":0},{"x":991,"y":635,"score":42,"level":0},{"x":996,"y":635,"score":27,"level":0},{"x":1024,"y":635,"score":28,"level":0},{"x":1030,"y":635,"score":49,"level":0},{"x":1111,"y":635,"score":26,"level":0},{"x":1185,"y":635,"score":30,"level":0},{"x":1270,"y":635,"score":36,"level":0},{"x":1289,"y":635,"score":33,"level":0},{"x":1365,"y":635,"score":30,"level":0},{"x":1487,"y":635,"score":44,"level":0},{"x":377,"y":636,"score":64,"level":0},{"x":492,"y":636,"score":26,"level":0},{"x":730,"y":636,"score":26,"level":0},{"x":766,"y":636,"score":27,"level":0},{"x":771,"y":636,"score":52,"level":0},{"x":849,"y":636,"score":28,"level":0},{"x":896,"y":636,"score":26,"level":0},{"x":924,"y":636,"score":30,"level":0},{"x":951,"y":636,"score":36,"level":0},{"x":1005,"y":636,"score":28,"level":0},{"x":1035,"y":636,"score":36,"level":0},{"x":1177,"y":636,"score":56,"level":0},{"x":1238,"y":636,"score":49,"level":0},{"x":1261,"y":636,"score":90,"level":0},{"x":1389,"y":636,"score":34,"level":0},{"x":582,"y":637,"score":26,"level":0},{"x":715,"y":637,"score":31,"level":0},{"x":819,"y":637,"score":34,"level":0},{"x":832,"y":637,"score":32,"level":0},{"x":894,"y":637,"score":26,"level":0},{"x":920,"y":637,"score":30,"level":0},{"x":1010,"y":637,"score":28,"level":0},{"x":1414,"y":637,"score":35,"level":0},{"x":1430,"y":637,"score":95,"level":0},{"x":449,"y":638,"score":66,"level":0},{"x":813,"y":638,"score":30,"level":0},{"x":830,"y":638,"score":52,"level":0},{"x":860,"y":638,"score":62,"level":0},{"x":863,"y":638,"score":56,"level":0},{"x":1016,"y":638,"score":39,"level":0},{"x":1081,"y":638,"score":27,"level":0},{"x":1267,"y":638,"score":54,"level":0},{"x":1365,"y":638,"score":28,"level":0},{"x":1458,"y":638,"score":30,"level":0},{"x":1462,"y":638,"score":75,"level":0},{"x":540,"y":639,"score":48,"level":0},{"x":1101,"y":639,"score":28,"level":0},{"x":1255,"y":639,"score":42,"level":0},{"x":1269,"y":639,"score":43,"level":0},{"x":1346,"y":639,"score":62,"level":0},{"x":1464,"y":639,"score":85,"level":0},{"x":1481,"y":639,"score":95,"level":0},{"x":387,"y":640,"score":33,"level":0},{"x":553,"y":640,"score":29,"level":0},{"x":617,"y":640,"score":31,"level":0},{"x":635,"y":640,"score":28,"level":0},{"x":651,"y":640,"score":38,"level":0},{"x":714,"y":640,"score":37,"level":0},{"x":747,"y":640,"score":26,"level":0},{"x":807,"y":640,"score":26,"level":0},{"x":1099,"y":640,"score":36,"level":0},{"x":1271,"y":640,"score":27,"level":0},{"x":1399,"y":640,"score":28,"level":0},{"x":1466,"y":640,"score":108,"level":0},{"x":1472,"y":640,"score":28,"level":0},{"x":410,"y":641,"score":28,"level":0},{"x":412,"y":641,"score":26,"level":0},{"x":532,"y":641,"score":49,"level":0},{"x":545,"y":641,"score":34,"level":0},{"x":738,"y":641,"score":43,"level":0},{"x":802,"y":641,"score":26,"level":0},{"x":872,"y":641,"score":30,"level":0},{"x":949,"y":641,"score":30,"level":0},{"x":1025,"y":641,"score":41,"level":0},{"x":1034,"y":641,"score":39,"level":0},{"x":1077,"y":641,"score":37,"level":0},{"x":1428,"y":641,"score":43,"level":0},{"x":435,"y":642,"score":46,"level":0},{"x":617,"y":642,"score":39,"level":0},{"x":634,"y":642,"score":31,"level":0},{"x":769,"y":642,"score":29,"level":0},{"x":797,"y":642,"score":40,"level":0},{"x":939,"y":642,"score":26,"level":0},{"x":968,"y":642,"score":35,"level":0},{"x":1005,"y":642,"score":30,"level":0},{"x":1098,"y":642,"score":35,"level":0},{"x":1254,"y":642,"score":26,"level":0},{"x":1282,"y":642,"score":33,"level":0},{"x":1336,"y":642,"score":26,"level":0},{"x":1363,"y":642,"score":42,"level":0},{"x":630,"y":643,"score":30,"level":0},{"x":716,"y":643,"score":42,"level":0},{"x":762,"y":643,"score":47,"level":0},{"x":843,"y":643,"score":26,"level":0},{"x":886,"y":643,"score":50,"level":0},{"x":1284,"y":643,"score":38,"level":0},{"x":1302,"y":643,"score":186,"level":0},{"x":1321,"y":643,"score":43,"level":0},{"x":1332,"y":643,"score":65,"level":0},{"x":496,"y":644,"score":32,"level":0},{"x":600,"y":644,"score":49,"level":0},{"x":645,"y":644,"score":27,"level":0},{"x":841,"y":644,"score":32,"level":0},{"x":848,"y":644,"score":67,"level":0},{"x":866,"y":644,"score":51,"level":0},{"x":930,"y":644,"score":42,"level":0},{"x":996,"y":644,"score":28,"level":0},{"x":1091,"y":644,"score":32,"level":0},{"x":1121,"y":644,"score":30,"level":0},{"x":1129,"y":644,"score":38,"level":0},{"x":1279,"y":644,"score":71,"level":0},{"x":1346,"y":644,"score":40,"level":0},{"x":1368,"y":644,"score":30,"level":0},{"x":447,"y":645,"score":42,"level":0},{"x":528,"y":645,"score":26,"level":0},{"x":696,"y":645,"score":42,"level":0},{"x":762,"y":645,"score":48,"level":0},{"x":821,"y":645,"score":27,"level":0},{"x":895,"y":645,"score":29,"level":0},{"x":1150,"y":645,"score":26,"level":0},{"x":1207,"y":645,"score":30,"level":0},{"x":1448,"y":645,"score":32,"level":0},{"x":463,"y":646,"score":42,"level":0},{"x":626,"y":646,"score":28,"level":0},{"x":658,"y":646,"score":29,"level":0},{"x":1028,"y":646,"score":54,"level":0},{"x":1108,"y":646,"score":36,"level":0},{"x":1119,"y":646,"score":27,"level":0},{"x":1360,"y":646,"score":34,"level":0},{"x":1440,"y":646,"score":28,"level":0},{"x":417,"y":647,"score":34,"level":0},{"x":600,"y":647,"score":48,"level":0},{"x":785,"y":647,"score":33,"level":0},{"x":880,"y":647,"score":38,"level":0},{"x":1069,"y":647,"score":48,"level":0},{"x":1175,"y":647,"score":66,"level":0},{"x":1238,"y":647,"score":40,"level":0},{"x":680,"y":648,"score":30,"level":0},{"x":711,"y":648,"score":39,"level":0},{"x":870,"y":648,"score":69,"level":0},{"x":924,"y":648,"score":26,"level":0},{"x":1152,"y":648,"score":56,"level":0},{"x":1250,"y":648,"score":31,"level":0},{"x":1262,"y":648,"score":30,"level":0},{"x":1341,"y":648,"score":38,"level":0},{"x":377,"y":649,"score":26,"level":0},{"x":619,"y":649,"score":68,"level":0},{"x":691,"y":649,"score":44,"level":0},{"x":732,"y":649,"score":31,"level":0},{"x":919,"y":649,"score":31,"level":0},{"x":1296,"y":649,"score":31,"level":0},{"x":403,"y":650,"score":36,"level":0},{"x":449,"y":650,"score":104,"level":0},{"x":668,"y":650,"score":40,"level":0},{"x":811,"y":650,"score":27,"level":0},{"x":881,"y":650,"score":46,"level":0},{"x":938,"y":650,"score":41,"level":0},{"x":1015,"y":650,"score":62,"level":0},{"x":1033,"y":650,"score":32,"level":0},{"x":1332,"y":650,"score":35,"level":0},{"x":475,"y":651,"score":42,"level":0},{"x":539,"y":651,"score":58,"level":0},{"x":676,"y":651,"score":36,"level":0},{"x":1035,"y":651,"score":45,"level":0},{"x":1080,"y":651,"score":38,"level":0},{"x":1086,"y":651,"score":62,"level":0},{"x":1284,"y":651,"score":27,"level":0},{"x":1392,"y":651,"score":34,"level":0},{"x":1405,"y":651,"score":50,"level":0},{"x":377,"y":652,"score":34,"level":0},{"x":470,"y":652,"score":30,"level":0},{"x":481,"y":652,"score":33,"level":0},{"x":507,"y":652,"score":49,"level":0},{"x":560,"y":652,"score":28,"level":0},{"x":636,"y":652,"score":31,"level":0},{"x":737,"y":652,"score":47,"level":0},{"x":793,"y":652,"score":26,"level":0},{"x":948,"y":652,"score":61,"level":0},{"x":977,"y":652,"score":37,"level":0},{"x":1204,"y":652,"score":28,"level":0},{"x":1319,"y":652,"score":32,"level":0},{"x":1440,"y":652,"score":32,"level":0},{"x":1445,"y":652,"score":33,"level":0},{"x":514,"y":653,"score":30,"level":0},{"x":674,"y":653,"score":27,"level":0},{"x":909,"y":653,"score":35,"level":0},{"x":967,"y":653,"score":37,"level":0},{"x":1141,"y":653,"score":31,"level":0},{"x":1235,"y":653,"score":55,"level":0},{"x":1286,"y":653,"score":34,"level":0},{"x":1331,"y":653,"score":26,"level":0},{"x":1490,"y":653,"score":96,"level":0},{"x":459,"y":654,"score":64,"level":0},{"x":821,"y":654,"score":53,"level":0},{"x":828,"y":654,"score":36,"level":0},{"x":890,"y":654,"score":30,"level":0},{"x":1006,"y":654,"score":42,"level":0},{"x":1222,"y":654,"score":38,"level":0},{"x":1440,"y":654,"score":29,"level":0},{"x":377,"y":655,"score":29,"level":0},{"x":552,"y":655,"score":29,"level":0},{"x":597,"y":655,"score":38,"level":0},{"x":737,"y":655,"score":40,"level":0},{"x":769,"y":655,"score":46,"level":0},{"x":826,"y":655,"score":49,"level":0},{"x":1104,"y":655,"score":52,"level":0},{"x":1243,"y":655,"score":49,"level":0},{"x":1253,"y":655,"score":34,"level":0},{"x":1393,"y":655,"score":31,"level":0},{"x":411,"y":656,"score":47,"level":0},{"x":511,"y":656,"score":31,"level":0},{"x":572,"y":656,"score":28,"level":0},{"x":589,"y":656,"score":30,"level":0},{"x":771,"y":656,"score":33,"level":0},{"x":960,"y":656,"score":48,"level":0},{"x":994,"y":656,"score":33,"level":0},{"x":1056,"y":656,"score":50,"level":0},{"x":1061,"y":656,"score":27,"level":0},{"x":1076,"y":656,"score":39,"level":0},{"x":1116,"y":656,"score":34,"level":0},{"x":1192,"y":656,"score":31,"level":0},{"x":1305,"y":656,"score":35,"level":0},{"x":430,"y":657,"score":26,"level":0},{"x":490,"y":657,"score":33,"level":0},{"x":807,"y":657,"score":34,"level":0},{"x":1093,"y":657,"score":99,"level":0},{"x":1153,"y":657,"score":50,"level":0},{"x":1204,"y":657,"score":38,"level":0},{"x":1267,"y":657,"score":89,"level":0},{"x":1346,"y":657,"score":38,"level":0},{"x":421,"y":658,"score":29,"level":0},{"x":443,"y":658,"score":30,"level":0},{"x":603,"y":658,"score":60,"level":0},{"x":619,"y":658,"score":46,"level":0},{"x":780,"y":658,"score":28,"level":0},{"x":818,"y":658,"score":47,"level":0},{"x":934,"y":658,"score":37,"level":0},{"x":941,"y":658,"score":37,"level":0},{"x":962,"y":658,"score":49,"level":0},{"x":1026,"y":658,"score":62,"level":0},{"x":1102,"y":658,"score":82,"level":0},{"x":1340,"y":658,"score":32,"level":0},{"x":1389,"y":658,"score":80,"level":0},{"x":1431,"y":658,"score":35,"level":0},{"x":1436,"y":658,"score":39,"level":0},{"x":1468,"y":658,"score":32,"level":0},{"x":474,"y":659,"score":32,"level":0},{"x":640,"y":659,"score":28,"level":0},{"x":677,"y":659,"score":47,"level":0},{"x":685,"y":659,"score":31,"level":0},{"x":868,"y":659,"score":60,"level":0},{"x":1015,"y":659,"score":54,"level":0},{"x":1075,"y":659,"score":34,"level":0},{"x":1212,"y":659,"score":28,"level":0},{"x":1222,"y":659,"score":28,"level":0},{"x":1357,"y":659,"score":28,"level":0},{"x":462,"y":660,"score":28,"level":0},{"x":489,"y":660,"score":30,"level":0},{"x":687,"y":660,"score":40,"level":0},{"x":870,"y":660,"score":42,"level":0},{"x":977,"y":660,"score":27,"level":0},{"x":1048,"y":660,"score":45,"level":0},{"x":1255,"y":660,"score":33,"level":0},{"x":1467,"y":660,"score":64,"level":0},{"x":767,"y":661,"score":31,"level":0},{"x":783,"y":661,"score":26,"level":0},{"x":915,"y":661,"score":28,"level":0},{"x":979,"y":661,"score":31,"level":0},{"x":1182,"y":661,"score":27,"level":0},{"x":1193,"y":661,"score":43,"level":0},{"x":1259,"y":661,"score":36,"level":0},{"x":1261,"y":661,"score":49,"level":0},{"x":1284,"y":661,"score":59,"level":0},{"x":1331,"y":661,"score":39,"level":0},{"x":1363,"y":661,"score":56,"level":0},{"x":1392,"y":661,"score":40,"level":0},{"x":1410,"y":661,"score":28,"level":0},{"x":479,"y":662,"score":31,"level":0},{"x":484,"y":662,"score":36,"level":0},{"x":526,"y":662,"score":33,"level":0},{"x":532,"y":662,"score":35,"level":0},{"x":652,"y":662,"score":42,"level":0},{"x":679,"y":662,"score":40,"level":0},{"x":738,"y":662,"score":44,"level":0},{"x":1151,"y":662,"score":30,"level":0},{"x":1156,"y":662,"score":42,"level":0},{"x":1357,"y":662,"score":36,"level":0},{"x":1401,"y":662,"score":34,"level":0},{"x":549,"y":663,"score":38,"level":0},{"x":563,"y":663,"score":35,"level":0},{"x":814,"y":663,"score":33,"level":0},{"x":819,"y":663,"score":34,"level":0},{"x":898,"y":663,"score":33,"level":0},{"x":908,"y":663,"score":37,"level":0},{"x":1090,"y":663,"score":59,"level":0},{"x":1265,"y":663,"score":54,"level":0},{"x":1268,"y":663,"score":57,"level":0},{"x":384,"y":664,"score":29,"level":0},{"x":601,"y":664,"score":40,"level":0},{"x":860,"y":664,"score":28,"level":0},{"x":929,"y":664,"score":27,"level":0},{"x":987,"y":664,"score":34,"level":0},{"x":1017,"y":664,"score":40,"level":0},{"x":1101,"y":664,"score":61,"level":0},{"x":1242,"y":664,"score":69,"level":0},{"x":1256,"y":664,"score":56,"level":0},{"x":1271,"y":664,"score":118,"level":0},{"x":1400,"y":664,"score":31,"level":0},{"x":394,"y":665,"score":48,"level":0},{"x":533,"y":665,"score":39,"level":0},{"x":543,"y":665,"score":32,"level":0},{"x":613,"y":665,"score":54,"level":0},{"x":725,"y":665,"score":42,"level":0},{"x":777,"y":665,"score":52,"level":0},{"x":798,"y":665,"score":28,"level":0},{"x":1026,"y":665,"score":57,"level":0},{"x":1152,"y":665,"score":51,"level":0},{"x":1249,"y":665,"score":61,"level":0},{"x":377,"y":666,"score":62,"level":0},{"x":483,"y":666,"score":26,"level":0},{"x":559,"y":666,"score":38,"level":0},{"x":621,"y":666,"score":27,"level":0},{"x":878,"y":666,"score":42,"level":0},{"x":943,"y":666,"score":33,"level":0},{"x":1089,"y":666,"score":64,"level":0},{"x":1490,"y":666,"score":38,"level":0},{"x":489,"y":667,"score":34,"level":0},{"x":608,"y":667,"score":26,"level":0},{"x":756,"y":667,"score":32,"level":0},{"x":883,"y":667,"score":30,"level":0},{"x":914,"y":667,"score":36,"level":0},{"x":967,"y":667,"score":34,"level":0},{"x":1001,"y":667,"score":30,"level":0},{"x":1061,"y":667,"score":35,"level":0},{"x":1074,"y":667,"score":34,"level":0},{"x":1225,"y":667,"score":35,"level":0},{"x":1259,"y":667,"score":45,"level":0},{"x":1290,"y":667,"score":28,"level":0},{"x":1366,"y":667,"score":34,"level":0},{"x":1415,"y":667,"score":30,"level":0},{"x":1458,"y":667,"score":32,"level":0},{"x":461,"y":668,"score":38,"level":0},{"x":466,"y":668,"score":31,"level":0},{"x":534,"y":668,"score":64,"level":0},{"x":599,"y":668,"score":52,"level":0},{"x":684,"y":668,"score":46,"level":0},{"x":761,"y":668,"score":52,"level":0},{"x":770,"y":668,"score":27,"level":0},{"x":960,"y":668,"score":56,"level":0},{"x":1152,"y":668,"score":35,"level":0},{"x":1284,"y":668,"score":92,"level":0},{"x":1351,"y":668,"score":28,"level":0},{"x":1441,"y":668,"score":30,"level":0},{"x":377,"y":669,"score":37,"level":0},{"x":405,"y":669,"score":26,"level":0},{"x":433,"y":669,"score":47,"level":0},{"x":650,"y":669,"score":26,"level":0},{"x":833,"y":669,"score":45,"level":0},{"x":1125,"y":669,"score":26,"level":0},{"x":1227,"y":669,"score":34,"level":0},{"x":1232,"y":669,"score":30,"level":0},{"x":1326,"y":669,"score":52,"level":0},{"x":396,"y":670,"score":40,"level":0},{"x":455,"y":670,"score":65,"level":0},{"x":602,"y":670,"score":48,"level":0},{"x":657,"y":670,"score":37,"level":0},{"x":718,"y":670,"score":26,"level":0},{"x":738,"y":670,"score":46,"level":0},{"x":775,"y":670,"score":28,"level":0},{"x":801,"y":670,"score":55,"level":0},{"x":868,"y":670,"score":34,"level":0},{"x":1104,"y":670,"score":98,"level":0},{"x":1132,"y":670,"score":32,"level":0},{"x":1173,"y":670,"score":41,"level":0},{"x":1188,"y":670,"score":35,"level":0},{"x":1451,"y":670,"score":31,"level":0},{"x":1469,"y":670,"score":49,"level":0},{"x":446,"y":671,"score":27,"level":0},{"x":468,"y":671,"score":34,"level":0},{"x":539,"y":671,"score":28,"level":0},{"x":541,"y":671,"score":40,"level":0},{"x":600,"y":671,"score":27,"level":0},{"x":609,"y":671,"score":32,"level":0},{"x":706,"y":671,"score":32,"level":0},{"x":713,"y":671,"score":44,"level":0},{"x":773,"y":671,"score":26,"level":0},{"x":792,"y":671,"score":34,"level":0},{"x":841,"y":671,"score":34,"level":0},{"x":863,"y":671,"score":94,"level":0},{"x":1015,"y":671,"score":64,"level":0},{"x":1029,"y":671,"score":73,"level":0},{"x":1036,"y":671,"score":38,"level":0},{"x":1090,"y":671,"score":50,"level":0},{"x":1190,"y":671,"score":26,"level":0},{"x":1230,"y":671,"score":34,"level":0},{"x":1276,"y":671,"score":42,"level":0},{"x":1456,"y":671,"score":28,"level":0},{"x":398,"y":672,"score":64,"level":0},{"x":546,"y":672,"score":33,"level":0},{"x":549,"y":672,"score":35,"level":0},{"x":766,"y":672,"score":66,"level":0},{"x":1067,"y":672,"score":36,"level":0},{"x":1069,"y":672,"score":36,"level":0},{"x":1165,"y":672,"score":26,"level":0},{"x":1228,"y":672,"score":30,"level":0},{"x":1242,"y":672,"score":50,"level":0},{"x":504,"y":673,"score":29,"level":0},{"x":643,"y":673,"score":32,"level":0},{"x":687,"y":673,"score":28,"level":0},{"x":763,"y":673,"score":58,"level":0},{"x":869,"y":673,"score":42,"level":0},{"x":1001,"y":673,"score":39,"level":0},{"x":1045,"y":673,"score":39,"level":0},{"x":1054,"y":673,"score":30,"level":0},{"x":1255,"y":673,"score":64,"level":0},{"x":380,"y":674,"score":64,"level":0},{"x":400,"y":674,"score":38,"level":0},{"x":575,"y":674,"score":30,"level":0},{"x":740,"y":674,"score":34,"level":0},{"x":940,"y":674,"score":48,"level":0},{"x":999,"y":674,"score":28,"level":0},{"x":426,"y":675,"score":28,"level":0},{"x":436,"y":675,"score":45,"level":0},{"x":720,"y":675,"score":31,"level":0},{"x":884,"y":675,"score":34,"level":0},{"x":932,"y":675,"score":26,"level":0},{"x":937,"y":675,"score":52,"level":0},{"x":995,"y":675,"score":30,"level":0},{"x":1127,"y":675,"score":26,"level":0},{"x":1132,"y":675,"score":30,"level":0},{"x":1138,"y":675,"score":30,"level":0},{"x":1216,"y":675,"score":37,"level":0},{"x":539,"y":676,"score":41,"level":0},{"x":772,"y":676,"score":36,"level":0},{"x":822,"y":676,"score":34,"level":0},{"x":930,"y":676,"score":30,"level":0},{"x":991,"y":676,"score":31,"level":0},{"x":1057,"y":676,"score":29,"level":0},{"x":1059,"y":676,"score":33,"level":0},{"x":1083,"y":676,"score":26,"level":0},{"x":1207,"y":676,"score":37,"level":0},{"x":1415,"y":676,"score":31,"level":0},{"x":1420,"y":676,"score":34,"level":0},{"x":1425,"y":676,"score":28,"level":0},{"x":376,"y":677,"score":52,"level":0},{"x":385,"y":677,"score":44,"level":0},{"x":628,"y":677,"score":26,"level":0},{"x":726,"y":677,"score":37,"level":0},{"x":736,"y":677,"score":42,"level":0},{"x":777,"y":677,"score":26,"level":0},{"x":813,"y":677,"score":28,"level":0},{"x":903,"y":677,"score":30,"level":0},{"x":966,"y":677,"score":53,"level":0},{"x":1040,"y":677,"score":36,"level":0},{"x":1051,"y":677,"score":41,"level":0},{"x":1303,"y":677,"score":45,"level":0},{"x":403,"y":678,"score":37,"level":0},{"x":613,"y":678,"score":33,"level":0},{"x":648,"y":678,"score":32,"level":0},{"x":837,"y":678,"score":73,"level":0},{"x":908,"y":678,"score":34,"level":0},{"x":959,"y":678,"score":44,"level":0},{"x":987,"y":678,"score":45,"level":0},{"x":1003,"y":678,"score":60,"level":0},{"x":1013,"y":678,"score":68,"level":0},{"x":1076,"y":678,"score":35,"level":0},{"x":1150,"y":678,"score":37,"level":0},{"x":1167,"y":678,"score":32,"level":0},{"x":1180,"y":678,"score":33,"level":0},{"x":1435,"y":678,"score":26,"level":0},{"x":1468,"y":678,"score":34,"level":0},{"x":465,"y":679,"score":28,"level":0},{"x":473,"y":679,"score":26,"level":0},{"x":475,"y":679,"score":30,"level":0},{"x":526,"y":679,"score":36,"level":0},{"x":726,"y":679,"score":41,"level":0},{"x":867,"y":679,"score":45,"level":0},{"x":984,"y":679,"score":40,"level":0},{"x":1019,"y":679,"score":31,"level":0},{"x":1030,"y":679,"score":49,"level":0},{"x":1101,"y":679,"score":28,"level":0},{"x":1103,"y":679,"score":57,"level":0},{"x":1251,"y":679,"score":34,"level":0},{"x":388,"y":680,"score":35,"level":0},{"x":429,"y":680,"score":32,"level":0},{"x":489,"y":680,"score":30,"level":0},{"x":748,"y":680,"score":29,"level":0},{"x":875,"y":680,"score":44,"level":0},{"x":894,"y":680,"score":26,"level":0},{"x":925,"y":680,"score":32,"level":0},{"x":947,"y":680,"score":50,"level":0},{"x":981,"y":680,"score":58,"level":0},{"x":1270,"y":680,"score":29,"level":0},{"x":1387,"y":680,"score":32,"level":0},{"x":570,"y":681,"score":36,"level":0},{"x":583,"y":681,"score":31,"level":0},{"x":834,"y":681,"score":31,"level":0},{"x":842,"y":681,"score":44,"level":0},{"x":867,"y":681,"score":51,"level":0},{"x":920,"y":681,"score":42,"level":0},{"x":932,"y":681,"score":28,"level":0},{"x":937,"y":681,"score":62,"level":0},{"x":978,"y":681,"score":33,"level":0},{"x":1256,"y":681,"score":38,"level":0},{"x":1261,"y":681,"score":43,"level":0},{"x":1267,"y":681,"score":29,"level":0},{"x":426,"y":682,"score":34,"level":0},{"x":614,"y":682,"score":39,"level":0},{"x":619,"y":682,"score":29,"level":0},{"x":733,"y":682,"score":36,"level":0},{"x":1061,"y":682,"score":56,"level":0},{"x":1104,"y":682,"score":41,"level":0},{"x":1106,"y":682,"score":56,"level":0},{"x":1208,"y":682,"score":46,"level":0},{"x":1304,"y":682,"score":44,"level":0},{"x":1324,"y":682,"score":28,"level":0},{"x":1347,"y":682,"score":28,"level":0},{"x":1462,"y":682,"score":27,"level":0},{"x":639,"y":683,"score":34,"level":0},{"x":738,"y":683,"score":35,"level":0},{"x":1040,"y":683,"score":26,"level":0},{"x":1049,"y":683,"score":38,"level":0},{"x":1092,"y":683,"score":38,"level":0},{"x":1147,"y":683,"score":46,"level":0},{"x":1309,"y":683,"score":28,"level":0},{"x":377,"y":684,"score":51,"level":0},{"x":608,"y":684,"score":53,"level":0},{"x":676,"y":684,"score":52,"level":0},{"x":726,"y":684,"score":30,"level":0},{"x":985,"y":684,"score":29,"level":0},{"x":1090,"y":684,"score":40,"level":0},{"x":1098,"y":684,"score":28,"level":0},{"x":1172,"y":684,"score":30,"level":0},{"x":1178,"y":684,"score":27,"level":0},{"x":1183,"y":684,"score":26,"level":0},{"x":1209,"y":684,"score":30,"level":0},{"x":1435,"y":684,"score":26,"level":0},{"x":442,"y":685,"score":33,"level":0},{"x":573,"y":685,"score":27,"level":0},{"x":689,"y":685,"score":38,"level":0},{"x":900,"y":685,"score":35,"level":0},{"x":1214,"y":685,"score":46,"level":0},{"x":1318,"y":685,"score":32,"level":0},{"x":412,"y":686,"score":30,"level":0},{"x":491,"y":686,"score":44,"level":0},{"x":660,"y":686,"score":38,"level":0},{"x":706,"y":686,"score":28,"level":0},{"x":814,"y":686,"score":29,"level":0},{"x":895,"y":686,"score":36,"level":0},{"x":1019,"y":686,"score":98,"level":0},{"x":1035,"y":686,"score":44,"level":0},{"x":1043,"y":686,"score":61,"level":0},{"x":1232,"y":686,"score":48,"level":0},{"x":1396,"y":686,"score":26,"level":0},{"x":590,"y":687,"score":34,"level":0},{"x":751,"y":687,"score":27,"level":0},{"x":839,"y":687,"score":27,"level":0},{"x":902,"y":687,"score":32,"level":0},{"x":971,"y":687,"score":102,"level":0},{"x":977,"y":687,"score":183,"level":0},{"x":1037,"y":687,"score":50,"level":0},{"x":1145,"y":687,"score":34,"level":0},{"x":1282,"y":687,"score":34,"level":0},{"x":1327,"y":687,"score":50,"level":0},{"x":377,"y":688,"score":29,"level":0},{"x":700,"y":688,"score":44,"level":0},{"x":725,"y":688,"score":40,"level":0},{"x":769,"y":688,"score":28,"level":0},{"x":871,"y":688,"score":41,"level":0},{"x":911,"y":688,"score":54,"level":0},{"x":939,"y":688,"score":49,"level":0},{"x":1048,"y":688,"score":41,"level":0},{"x":1087,"y":688,"score":42,"level":0},{"x":1357,"y":688,"score":114,"level":0},{"x":1472,"y":688,"score":26,"level":0},{"x":474,"y":689,"score":33,"level":0},{"x":746,"y":689,"score":34,"level":0},{"x":824,"y":689,"score":28,"level":0},{"x":840,"y":689,"score":49,"level":0},{"x":1026,"y":689,"score":30,"level":0},{"x":1162,"y":689,"score":46,"level":0},{"x":1410,"y":689,"score":30,"level":0},{"x":1479,"y":689,"score":31,"level":0},{"x":549,"y":690,"score":53,"level":0},{"x":583,"y":690,"score":30,"level":0},{"x":772,"y":690,"score":31,"level":0},{"x":804,"y":690,"score":28,"level":0},{"x":867,"y":690,"score":45,"level":0},{"x":1002,"y":690,"score":26,"level":0},{"x":1096,"y":690,"score":64,"level":0},{"x":1165,"y":690,"score":31,"level":0},{"x":1207,"y":690,"score":28,"level":0},{"x":1443,"y":690,"score":36,"level":0},{"x":1456,"y":690,"score":26,"level":0},{"x":1461,"y":690,"score":43,"level":0},{"x":431,"y":691,"score":54,"level":0},{"x":467,"y":691,"score":38,"level":0},{"x":578,"y":691,"score":34,"level":0},{"x":834,"y":691,"score":36,"level":0},{"x":1044,"y":691,"score":50,"level":0},{"x":1378,"y":691,"score":26,"level":0},{"x":404,"y":692,"score":35,"level":0},{"x":534,"y":692,"score":31,"level":0},{"x":588,"y":692,"score":30,"level":0},{"x":678,"y":692,"score":49,"level":0},{"x":747,"y":692,"score":50,"level":0},{"x":768,"y":692,"score":39,"level":0},{"x":831,"y":692,"score":29,"level":0},{"x":895,"y":692,"score":26,"level":0},{"x":905,"y":692,"score":26,"level":0},{"x":959,"y":692,"score":46,"level":0},{"x":993,"y":692,"score":35,"level":0},{"x":1102,"y":692,"score":66,"level":0},{"x":1335,"y":692,"score":46,"level":0},{"x":656,"y":693,"score":29,"level":0},{"x":694,"y":693,"score":31,"level":0},{"x":744,"y":693,"score":32,"level":0},{"x":809,"y":693,"score":31,"level":0},{"x":816,"y":693,"score":31,"level":0},{"x":818,"y":693,"score":29,"level":0},{"x":847,"y":693,"score":35,"level":0},{"x":976,"y":693,"score":27,"level":0},{"x":1035,"y":693,"score":70,"level":0},{"x":1158,"y":693,"score":38,"level":0},{"x":1181,"y":693,"score":28,"level":0},{"x":1271,"y":693,"score":33,"level":0},{"x":1278,"y":693,"score":30,"level":0},{"x":1283,"y":693,"score":28,"level":0},{"x":1293,"y":693,"score":38,"level":0},{"x":479,"y":694,"score":31,"level":0},{"x":514,"y":694,"score":33,"level":0},{"x":961,"y":694,"score":28,"level":0},{"x":1041,"y":694,"score":68,"level":0},{"x":1194,"y":694,"score":33,"level":0},{"x":1219,"y":694,"score":32,"level":0},{"x":1416,"y":694,"score":38,"level":0},{"x":435,"y":695,"score":29,"level":0},{"x":661,"y":695,"score":51,"level":0},{"x":690,"y":695,"score":31,"level":0},{"x":971,"y":695,"score":40,"level":0},{"x":973,"y":695,"score":47,"level":0},{"x":982,"y":695,"score":30,"level":0},{"x":1111,"y":695,"score":30,"level":0},{"x":1138,"y":695,"score":55,"level":0},{"x":1383,"y":695,"score":77,"level":0},{"x":1396,"y":695,"score":50,"level":0},{"x":431,"y":696,"score":28,"level":0},{"x":571,"y":696,"score":30,"level":0},{"x":695,"y":696,"score":41,"level":0},{"x":707,"y":696,"score":30,"level":0},{"x":816,"y":696,"score":43,"level":0},{"x":923,"y":696,"score":36,"level":0},{"x":939,"y":696,"score":40,"level":0},{"x":1258,"y":696,"score":66,"level":0},{"x":1355,"y":696,"score":58,"level":0},{"x":1461,"y":696,"score":31,"level":0},{"x":444,"y":697,"score":38,"level":0},{"x":533,"y":697,"score":36,"level":0},{"x":562,"y":697,"score":29,"level":0},{"x":622,"y":697,"score":38,"level":0},{"x":729,"y":697,"score":38,"level":0},{"x":881,"y":697,"score":33,"level":0},{"x":945,"y":697,"score":31,"level":0},{"x":1060,"y":697,"score":54,"level":0},{"x":1361,"y":697,"score":29,"level":0},{"x":1468,"y":697,"score":44,"level":0},{"x":579,"y":698,"score":46,"level":0},{"x":734,"y":698,"score":28,"level":0},{"x":818,"y":698,"score":27,"level":0},{"x":869,"y":698,"score":30,"level":0},{"x":917,"y":698,"score":32,"level":0},{"x":940,"y":698,"score":32,"level":0},{"x":955,"y":698,"score":48,"level":0},{"x":1000,"y":698,"score":30,"level":0},{"x":1016,"y":698,"score":26,"level":0},{"x":1097,"y":698,"score":36,"level":0},{"x":1168,"y":698,"score":41,"level":0},{"x":1173,"y":698,"score":48,"level":0},{"x":1211,"y":698,"score":28,"level":0},{"x":1270,"y":698,"score":47,"level":0},{"x":1334,"y":698,"score":49,"level":0},{"x":1340,"y":698,"score":32,"level":0},{"x":1398,"y":698,"score":34,"level":0},{"x":1404,"y":698,"score":71,"level":0},{"x":1418,"y":698,"score":60,"level":0},{"x":1420,"y":698,"score":64,"level":0},{"x":428,"y":699,"score":33,"level":0},{"x":476,"y":699,"score":26,"level":0},{"x":838,"y":699,"score":34,"level":0},{"x":894,"y":699,"score":27,"level":0},{"x":1021,"y":699,"score":34,"level":0},{"x":1090,"y":699,"score":37,"level":0},{"x":1220,"y":699,"score":34,"level":0},{"x":402,"y":700,"score":27,"level":0},{"x":658,"y":700,"score":43,"level":0},{"x":930,"y":700,"score":31,"level":0},{"x":935,"y":700,"score":37,"level":0},{"x":956,"y":700,"score":47,"level":0},{"x":1102,"y":700,"score":34,"level":0},{"x":1309,"y":700,"score":29,"level":0},{"x":1350,"y":700,"score":28,"level":0},{"x":394,"y":701,"score":59,"level":0},{"x":487,"y":701,"score":66,"level":0},{"x":538,"y":701,"score":43,"level":0},{"x":569,"y":701,"score":44,"level":0},{"x":600,"y":701,"score":33,"level":0},{"x":664,"y":701,"score":49,"level":0},{"x":681,"y":701,"score":63,"level":0},{"x":695,"y":701,"score":36,"level":0},{"x":720,"y":701,"score":38,"level":0},{"x":889,"y":701,"score":29,"level":0},{"x":894,"y":701,"score":31,"level":0},{"x":1026,"y":701,"score":30,"level":0},{"x":1127,"y":701,"score":30,"level":0},{"x":1159,"y":701,"score":44,"level":0},{"x":1325,"y":701,"score":26,"level":0},{"x":1381,"y":701,"score":32,"level":0},{"x":1430,"y":701,"score":28,"level":0},{"x":1438,"y":701,"score":32,"level":0},{"x":492,"y":702,"score":39,"level":0},{"x":525,"y":702,"score":45,"level":0},{"x":557,"y":702,"score":29,"level":0},{"x":562,"y":702,"score":27,"level":0},{"x":615,"y":702,"score":26,"level":0},{"x":923,"y":702,"score":28,"level":0},{"x":950,"y":702,"score":26,"level":0},{"x":1188,"y":702,"score":26,"level":0},{"x":1193,"y":702,"score":29,"level":0},{"x":1201,"y":702,"score":28,"level":0},{"x":1341,"y":702,"score":28,"level":0},{"x":451,"y":703,"score":40,"level":0},{"x":631,"y":703,"score":31,"level":0},{"x":648,"y":703,"score":38,"level":0},{"x":656,"y":703,"score":66,"level":0},{"x":688,"y":703,"score":28,"level":0},{"x":702,"y":703,"score":38,"level":0},{"x":724,"y":703,"score":38,"level":0},{"x":740,"y":703,"score":28,"level":0},{"x":742,"y":703,"score":36,"level":0},{"x":804,"y":703,"score":36,"level":0},{"x":813,"y":703,"score":30,"level":0},{"x":818,"y":703,"score":28,"level":0},{"x":833,"y":703,"score":50,"level":0},{"x":1012,"y":703,"score":43,"level":0},{"x":1046,"y":703,"score":30,"level":0},{"x":1396,"y":703,"score":30,"level":0},{"x":1404,"y":703,"score":28,"level":0},{"x":1448,"y":703,"score":33,"level":0},{"x":625,"y":704,"score":32,"level":0},{"x":644,"y":704,"score":31,"level":0},{"x":727,"y":704,"score":33,"level":0},{"x":917,"y":704,"score":42,"level":0},{"x":996,"y":704,"score":30,"level":0},{"x":1092,"y":704,"score":81,"level":0},{"x":1168,"y":704,"score":31,"level":0},{"x":1346,"y":704,"score":34,"level":0},{"x":1393,"y":704,"score":49,"level":0},{"x":1398,"y":704,"score":33,"level":0},{"x":1420,"y":704,"score":30,"level":0},{"x":399,"y":705,"score":28,"level":0},{"x":553,"y":705,"score":43,"level":0},{"x":590,"y":705,"score":85,"level":0},{"x":603,"y":705,"score":40,"level":0},{"x":884,"y":705,"score":35,"level":0},{"x":936,"y":705,"score":49,"level":0},{"x":941,"y":705,"score":64,"level":0},{"x":1046,"y":705,"score":36,"level":0},{"x":1391,"y":705,"score":66,"level":0},{"x":388,"y":706,"score":38,"level":0},{"x":462,"y":706,"score":30,"level":0},{"x":927,"y":706,"score":34,"level":0},{"x":1044,"y":706,"score":30,"level":0},{"x":1101,"y":706,"score":28,"level":0},{"x":1178,"y":706,"score":27,"level":0},{"x":1464,"y":706,"score":32,"level":0},{"x":1469,"y":706,"score":27,"level":0},{"x":377,"y":707,"score":74,"level":0},{"x":488,"y":707,"score":26,"level":0},{"x":669,"y":707,"score":32,"level":0},{"x":1055,"y":707,"score":54,"level":0},{"x":1061,"y":707,"score":26,"level":0},{"x":1349,"y":707,"score":26,"level":0},{"x":1447,"y":707,"score":27,"level":0},{"x":565,"y":708,"score":36,"level":0},{"x":683,"y":708,"score":31,"level":0},{"x":688,"y":708,"score":37,"level":0},{"x":789,"y":708,"score":67,"level":0},{"x":848,"y":708,"score":90,"level":0},{"x":981,"y":708,"score":30,"level":0},{"x":1028,"y":708,"score":46,"level":0},{"x":1059,"y":708,"score":30,"level":0},{"x":1072,"y":708,"score":29,"level":0},{"x":1100,"y":708,"score":43,"level":0},{"x":1102,"y":708,"score":36,"level":0},{"x":1160,"y":708,"score":34,"level":0},{"x":1180,"y":708,"score":30,"level":0},{"x":1217,"y":708,"score":37,"level":0},{"x":1260,"y":708,"score":64,"level":0},{"x":1438,"y":708,"score":28,"level":0},{"x":394,"y":709,"score":30,"level":0},{"x":524,"y":709,"score":30,"level":0},{"x":586,"y":709,"score":45,"level":0},{"x":648,"y":709,"score":34,"level":0},{"x":654,"y":709,"score":52,"level":0},{"x":663,"y":709,"score":35,"level":0},{"x":697,"y":709,"score":50,"level":0},{"x":786,"y":709,"score":32,"level":0},{"x":836,"y":709,"score":26,"level":0},{"x":874,"y":709,"score":33,"level":0},{"x":1135,"y":709,"score":38,"level":0},{"x":1405,"y":709,"score":29,"level":0},{"x":1427,"y":709,"score":27,"level":0},{"x":612,"y":710,"score":32,"level":0},{"x":635,"y":710,"score":27,"level":0},{"x":689,"y":710,"score":39,"level":0},{"x":803,"y":710,"score":41,"level":0},{"x":840,"y":710,"score":78,"level":0},{"x":894,"y":710,"score":30,"level":0},{"x":1060,"y":710,"score":32,"level":0},{"x":1132,"y":710,"score":33,"level":0},{"x":1225,"y":710,"score":47,"level":0},{"x":515,"y":711,"score":32,"level":0},{"x":600,"y":711,"score":54,"level":0},{"x":655,"y":711,"score":57,"level":0},{"x":711,"y":711,"score":26,"level":0},{"x":716,"y":711,"score":36,"level":0},{"x":727,"y":711,"score":35,"level":0},{"x":742,"y":711,"score":38,"level":0},{"x":749,"y":711,"score":72,"level":0},{"x":826,"y":711,"score":36,"level":0},{"x":934,"y":711,"score":32,"level":0},{"x":1015,"y":711,"score":27,"level":0},{"x":1195,"y":711,"score":26,"level":0},{"x":1451,"y":711,"score":33,"level":0},{"x":417,"y":712,"score":40,"level":0},{"x":470,"y":712,"score":49,"level":0},{"x":497,"y":712,"score":68,"level":0},{"x":606,"y":712,"score":72,"level":0},{"x":650,"y":712,"score":41,"level":0},{"x":740,"y":712,"score":28,"level":0},{"x":1087,"y":712,"score":34,"level":0},{"x":464,"y":713,"score":26,"level":0},{"x":702,"y":713,"score":40,"level":0},{"x":720,"y":713,"score":32,"level":0},{"x":843,"y":713,"score":43,"level":0},{"x":846,"y":713,"score":41,"level":0},{"x":975,"y":713,"score":54,"level":0},{"x":1270,"y":713,"score":35,"level":0},{"x":1393,"y":713,"score":44,"level":0},{"x":1397,"y":713,"score":42,"level":0},{"x":1403,"y":713,"score":38,"level":0},{"x":666,"y":714,"score":48,"level":0},{"x":887,"y":714,"score":34,"level":0},{"x":1204,"y":714,"score":28,"level":0},{"x":1235,"y":714,"score":32,"level":0},{"x":1284,"y":714,"score":46,"level":0},{"x":1426,"y":714,"score":34,"level":0},{"x":1479,"y":714,"score":34,"level":0},{"x":376,"y":715,"score":32,"level":0},{"x":395,"y":715,"score":44,"level":0},{"x":488,"y":715,"score":42,"level":0},{"x":731,"y":715,"score":29,"level":0},{"x":739,"y":715,"score":31,"level":0},{"x":754,"y":715,"score":37,"level":0},{"x":770,"y":715,"score":62,"level":0},{"x":895,"y":715,"score":26,"level":0},{"x":960,"y":715,"score":72,"level":0},{"x":1005,"y":715,"score":26,"level":0},{"x":1237,"y":715,"score":35,"level":0},{"x":1458,"y":715,"score":42,"level":0},{"x":1463,"y":715,"score":39,"level":0},{"x":503,"y":716,"score":26,"level":0},{"x":521,"y":716,"score":34,"level":0},{"x":582,"y":716,"score":56,"level":0},{"x":639,"y":716,"score":36,"level":0},{"x":775,"y":716,"score":46,"level":0},{"x":946,"y":716,"score":26,"level":0},{"x":1256,"y":716,"score":32,"level":0},{"x":1276,"y":716,"score":26,"level":0},{"x":1441,"y":716,"score":37,"level":0},{"x":683,"y":717,"score":46,"level":0},{"x":711,"y":717,"score":28,"level":0},{"x":952,"y":717,"score":45,"level":0},{"x":959,"y":717,"score":43,"level":0},{"x":1024,"y":717,"score":30,"level":0},{"x":1041,"y":717,"score":70,"level":0},{"x":1182,"y":717,"score":47,"level":0},{"x":1185,"y":717,"score":52,"level":0},{"x":1190,"y":717,"score":28,"level":0},{"x":1410,"y":717,"score":34,"level":0},{"x":1417,"y":717,"score":44,"level":0},{"x":422,"y":718,"score":27,"level":0},{"x":558,"y":718,"score":31,"level":0},{"x":577,"y":718,"score":35,"level":0},{"x":650,"y":718,"score":31,"level":0},{"x":747,"y":718,"score":72,"level":0},{"x":773,"y":718,"score":40,"level":0},{"x":991,"y":718,"score":35,"level":0},{"x":997,"y":718,"score":29,"level":0},{"x":1046,"y":718,"score":36,"level":0},{"x":1121,"y":718,"score":28,"level":0},{"x":1162,"y":718,"score":28,"level":0},{"x":1168,"y":718,"score":41,"level":0},{"x":1217,"y":718,"score":30,"level":0},{"x":601,"y":719,"score":33,"level":0},{"x":713,"y":719,"score":30,"level":0},{"x":972,"y":719,"score":33,"level":0},{"x":1129,"y":719,"score":27,"level":0},{"x":1265,"y":719,"score":49,"level":0},{"x":1304,"y":719,"score":36,"level":0},{"x":1361,"y":719,"score":27,"level":0},{"x":1453,"y":719,"score":27,"level":0},{"x":385,"y":720,"score":44,"level":0},{"x":394,"y":720,"score":44,"level":0},{"x":539,"y":720,"score":58,"level":0},{"x":606,"y":720,"score":46,"level":0},{"x":684,"y":720,"score":57,"level":0},{"x":956,"y":720,"score":51,"level":0},{"x":1033,"y":720,"score":29,"level":0},{"x":1144,"y":720,"score":58,"level":0},{"x":391,"y":721,"score":40,"level":0},{"x":478,"y":721,"score":26,"level":0},{"x":487,"y":721,"score":42,"level":0},{"x":621,"y":721,"score":37,"level":0},{"x":634,"y":721,"score":44,"level":0},{"x":877,"y":721,"score":29,"level":0},{"x":999,"y":721,"score":28,"level":0},{"x":1300,"y":721,"score":27,"level":0},{"x":1453,"y":721,"score":33,"level":0},{"x":1458,"y":721,"score":27,"level":0},{"x":1464,"y":721,"score":32,"level":0},{"x":539,"y":722,"score":32,"level":0},{"x":541,"y":722,"score":33,"level":0},{"x":549,"y":722,"score":41,"level":0},{"x":555,"y":722,"score":70,"level":0},{"x":731,"y":722,"score":56,"level":0},{"x":736,"y":722,"score":44,"level":0},{"x":777,"y":722,"score":42,"level":0},{"x":796,"y":722,"score":42,"level":0},{"x":889,"y":722,"score":48,"level":0},{"x":904,"y":722,"score":26,"level":0},{"x":953,"y":722,"score":36,"level":0},{"x":1027,"y":722,"score":36,"level":0},{"x":1048,"y":722,"score":27,"level":0},{"x":1053,"y":722,"score":26,"level":0},{"x":1183,"y":722,"score":32,"level":0},{"x":1277,"y":722,"score":45,"level":0},{"x":1290,"y":722,"score":34,"level":0},{"x":1320,"y":722,"score":37,"level":0},{"x":1370,"y":722,"score":28,"level":0},{"x":1415,"y":722,"score":44,"level":0},{"x":700,"y":723,"score":32,"level":0},{"x":726,"y":723,"score":34,"level":0},{"x":742,"y":723,"score":40,"level":0},{"x":898,"y":723,"score":32,"level":0},{"x":940,"y":723,"score":39,"level":0},{"x":1211,"y":723,"score":27,"level":0},{"x":682,"y":724,"score":41,"level":0},{"x":685,"y":724,"score":38,"level":0},{"x":693,"y":724,"score":30,"level":0},{"x":736,"y":724,"score":58,"level":0},{"x":767,"y":724,"score":27,"level":0},{"x":804,"y":724,"score":33,"level":0},{"x":918,"y":724,"score":34,"level":0},{"x":1246,"y":724,"score":35,"level":0},{"x":1327,"y":724,"score":36,"level":0},{"x":415,"y":725,"score":27,"level":0},{"x":550,"y":725,"score":38,"level":0},{"x":567,"y":725,"score":29,"level":0},{"x":576,"y":725,"score":42,"level":0},{"x":581,"y":725,"score":33,"level":0},{"x":595,"y":725,"score":26,"level":0},{"x":650,"y":725,"score":31,"level":0},{"x":656,"y":725,"score":36,"level":0},{"x":747,"y":725,"score":33,"level":0},{"x":809,"y":725,"score":36,"level":0},{"x":882,"y":725,"score":40,"level":0},{"x":955,"y":725,"score":57,"level":0},{"x":1081,"y":725,"score":59,"level":0},{"x":1148,"y":725,"score":30,"level":0},{"x":1332,"y":725,"score":44,"level":0},{"x":379,"y":726,"score":48,"level":0},{"x":384,"y":726,"score":47,"level":0},{"x":390,"y":726,"score":42,"level":0},{"x":470,"y":726,"score":26,"level":0},{"x":544,"y":726,"score":28,"level":0},{"x":667,"y":726,"score":40,"level":0},{"x":850,"y":726,"score":27,"level":0},{"x":898,"y":726,"score":31,"level":0},{"x":1439,"y":726,"score":38,"level":0},{"x":1444,"y":726,"score":40,"level":0},{"x":388,"y":727,"score":43,"level":0},{"x":608,"y":727,"score":34,"level":0},{"x":631,"y":727,"score":26,"level":0},{"x":740,"y":727,"score":27,"level":0},{"x":774,"y":727,"score":27,"level":0},{"x":971,"y":727,"score":54,"level":0},{"x":1087,"y":727,"score":67,"level":0},{"x":1098,"y":727,"score":34,"level":0},{"x":1320,"y":727,"score":32,"level":0},{"x":1364,"y":727,"score":36,"level":0},{"x":1376,"y":727,"score":31,"level":0},{"x":544,"y":728,"score":28,"level":0},{"x":850,"y":728,"score":52,"level":0},{"x":936,"y":728,"score":45,"level":0},{"x":1029,"y":728,"score":46,"level":0},{"x":1044,"y":728,"score":28,"level":0},{"x":1046,"y":728,"score":28,"level":0},{"x":1170,"y":728,"score":54,"level":0},{"x":1201,"y":728,"score":39,"level":0},{"x":1207,"y":728,"score":30,"level":0},{"x":1249,"y":728,"score":34,"level":0},{"x":1404,"y":728,"score":40,"level":0},{"x":513,"y":729,"score":28,"level":0},{"x":590,"y":729,"score":36,"level":0},{"x":693,"y":729,"score":32,"level":0},{"x":708,"y":729,"score":28,"level":0},{"x":740,"y":729,"score":35,"level":0},{"x":765,"y":729,"score":41,"level":0},{"x":782,"y":729,"score":28,"level":0},{"x":877,"y":729,"score":46,"level":0},{"x":916,"y":729,"score":30,"level":0},{"x":981,"y":729,"score":32,"level":0},{"x":1006,"y":729,"score":36,"level":0},{"x":1074,"y":729,"score":26,"level":0},{"x":1096,"y":729,"score":39,"level":0},{"x":1123,"y":729,"score":27,"level":0},{"x":1144,"y":729,"score":45,"level":0},{"x":1326,"y":729,"score":32,"level":0},{"x":1427,"y":729,"score":30,"level":0},{"x":377,"y":730,"score":34,"level":0},{"x":413,"y":730,"score":26,"level":0},{"x":421,"y":730,"score":26,"level":0},{"x":436,"y":730,"score":32,"level":0},{"x":832,"y":730,"score":32,"level":0},{"x":1029,"y":730,"score":34,"level":0},{"x":1414,"y":730,"score":39,"level":0},{"x":660,"y":731,"score":41,"level":0},{"x":717,"y":731,"score":33,"level":0},{"x":821,"y":731,"score":40,"level":0},{"x":877,"y":731,"score":52,"level":0},{"x":957,"y":731,"score":53,"level":0},{"x":1168,"y":731,"score":52,"level":0},{"x":1400,"y":731,"score":36,"level":0},{"x":1486,"y":731,"score":30,"level":0},{"x":435,"y":732,"score":42,"level":0},{"x":775,"y":732,"score":33,"level":0},{"x":804,"y":732,"score":40,"level":0},{"x":810,"y":732,"score":36,"level":0},{"x":1012,"y":732,"score":40,"level":0},{"x":1025,"y":732,"score":69,"level":0},{"x":590,"y":733,"score":27,"level":0},{"x":640,"y":733,"score":30,"level":0},{"x":701,"y":733,"score":30,"level":0},{"x":821,"y":733,"score":32,"level":0},{"x":1048,"y":733,"score":26,"level":0},{"x":1115,"y":733,"score":30,"level":0},{"x":1294,"y":733,"score":29,"level":0},{"x":1426,"y":733,"score":50,"level":0},{"x":412,"y":734,"score":29,"level":0},{"x":626,"y":734,"score":51,"level":0},{"x":710,"y":734,"score":26,"level":0},{"x":846,"y":734,"score":50,"level":0},{"x":1121,"y":734,"score":32,"level":0},{"x":1179,"y":734,"score":32,"level":0},{"x":1247,"y":734,"score":81,"level":0},{"x":1288,"y":734,"score":40,"level":0},{"x":1408,"y":734,"score":55,"level":0},{"x":484,"y":735,"score":53,"level":0},{"x":570,"y":735,"score":48,"level":0},{"x":589,"y":735,"score":38,"level":0},{"x":699,"y":735,"score":35,"level":0},{"x":894,"y":735,"score":69,"level":0},{"x":899,"y":735,"score":34,"level":0},{"x":948,"y":735,"score":37,"level":0},{"x":953,"y":735,"score":57,"level":0},{"x":972,"y":735,"score":64,"level":0},{"x":1002,"y":735,"score":40,"level":0},{"x":1139,"y":735,"score":32,"level":0},{"x":1148,"y":735,"score":29,"level":0},{"x":1186,"y":735,"score":31,"level":0},{"x":1196,"y":735,"score":28,"level":0},{"x":1228,"y":735,"score":44,"level":0},{"x":1343,"y":735,"score":32,"level":0},{"x":1353,"y":735,"score":56,"level":0},{"x":1359,"y":735,"score":33,"level":0},{"x":647,"y":736,"score":29,"level":0},{"x":662,"y":736,"score":45,"level":0},{"x":677,"y":736,"score":38,"level":0},{"x":854,"y":736,"score":38,"level":0},{"x":889,"y":736,"score":40,"level":0},{"x":1271,"y":736,"score":69,"level":0},{"x":1460,"y":736,"score":39,"level":0},{"x":378,"y":737,"score":64,"level":0},{"x":391,"y":737,"score":28,"level":0},{"x":453,"y":737,"score":31,"level":0},{"x":459,"y":737,"score":63,"level":0},{"x":474,"y":737,"score":28,"level":0},{"x":482,"y":737,"score":63,"level":0},{"x":817,"y":737,"score":29,"level":0},{"x":925,"y":737,"score":32,"level":0},{"x":984,"y":737,"score":33,"level":0},{"x":1030,"y":737,"score":26,"level":0},{"x":1069,"y":737,"score":36,"level":0},{"x":1166,"y":737,"score":34,"level":0},{"x":396,"y":738,"score":32,"level":0},{"x":417,"y":738,"score":42,"level":0},{"x":437,"y":738,"score":50,"level":0},{"x":738,"y":738,"score":34,"level":0},{"x":854,"y":738,"score":44,"level":0},{"x":884,"y":738,"score":40,"level":0},{"x":915,"y":738,"score":33,"level":0},{"x":930,"y":738,"score":28,"level":0},{"x":1208,"y":738,"score":28,"level":0},{"x":513,"y":739,"score":27,"level":0},{"x":705,"y":739,"score":44,"level":0},{"x":778,"y":739,"score":40,"level":0},{"x":848,"y":739,"score":44,"level":0},{"x":895,"y":739,"score":43,"level":0},{"x":920,"y":739,"score":35,"level":0},{"x":1015,"y":739,"score":28,"level":0},{"x":1114,"y":739,"score":31,"level":0},{"x":1366,"y":739,"score":28,"level":0},{"x":1429,"y":739,"score":26,"level":0},{"x":1444,"y":739,"score":52,"level":0},{"x":418,"y":740,"score":45,"level":0},{"x":423,"y":740,"score":50,"level":0},{"x":602,"y":740,"score":30,"level":0},{"x":631,"y":740,"score":26,"level":0},{"x":679,"y":740,"score":30,"level":0},{"x":726,"y":740,"score":28,"level":0},{"x":807,"y":740,"score":26,"level":0},{"x":1039,"y":740,"score":62,"level":0},{"x":1439,"y":740,"score":60,"level":0},{"x":488,"y":741,"score":28,"level":0},{"x":533,"y":741,"score":44,"level":0},{"x":623,"y":741,"score":34,"level":0},{"x":687,"y":741,"score":26,"level":0},{"x":766,"y":741,"score":34,"level":0},{"x":856,"y":741,"score":58,"level":0},{"x":858,"y":741,"score":29,"level":0},{"x":942,"y":741,"score":32,"level":0},{"x":947,"y":741,"score":46,"level":0},{"x":1131,"y":741,"score":29,"level":0},{"x":1143,"y":741,"score":33,"level":0},{"x":1286,"y":741,"score":29,"level":0},{"x":1345,"y":741,"score":27,"level":0},{"x":1364,"y":741,"score":28,"level":0},{"x":1415,"y":741,"score":39,"level":0},{"x":1465,"y":741,"score":35,"level":0},{"x":410,"y":742,"score":42,"level":0},{"x":561,"y":742,"score":30,"level":0},{"x":950,"y":742,"score":26,"level":0},{"x":956,"y":742,"score":39,"level":0},{"x":982,"y":742,"score":41,"level":0},{"x":984,"y":742,"score":45,"level":0},{"x":1294,"y":742,"score":27,"level":0},{"x":1332,"y":742,"score":29,"level":0},{"x":1473,"y":742,"score":27,"level":0},{"x":529,"y":743,"score":39,"level":0},{"x":608,"y":743,"score":41,"level":0},{"x":655,"y":743,"score":48,"level":0},{"x":681,"y":743,"score":27,"level":0},{"x":701,"y":743,"score":31,"level":0},{"x":992,"y":743,"score":28,"level":0},{"x":1045,"y":743,"score":35,"level":0},{"x":1102,"y":743,"score":75,"level":0},{"x":1189,"y":743,"score":28,"level":0},{"x":1286,"y":743,"score":33,"level":0},{"x":1298,"y":743,"score":40,"level":0},{"x":406,"y":744,"score":26,"level":0},{"x":434,"y":744,"score":40,"level":0},{"x":771,"y":744,"score":35,"level":0},{"x":1025,"y":744,"score":26,"level":0},{"x":1085,"y":744,"score":38,"level":0},{"x":1322,"y":744,"score":27,"level":0},{"x":1327,"y":744,"score":27,"level":0},{"x":417,"y":745,"score":32,"level":0},{"x":543,"y":745,"score":48,"level":0},{"x":790,"y":745,"score":32,"level":0},{"x":819,"y":745,"score":30,"level":0},{"x":843,"y":745,"score":50,"level":0},{"x":848,"y":745,"score":40,"level":0},{"x":920,"y":745,"score":32,"level":0},{"x":938,"y":745,"score":26,"level":0},{"x":943,"y":745,"score":29,"level":0},{"x":967,"y":745,"score":35,"level":0},{"x":1307,"y":745,"score":27,"level":0},{"x":1337,"y":745,"score":30,"level":0},{"x":624,"y":746,"score":40,"level":0},{"x":678,"y":746,"score":31,"level":0},{"x":734,"y":746,"score":34,"level":0},{"x":807,"y":746,"score":33,"level":0},{"x":896,"y":746,"score":38,"level":0},{"x":1041,"y":746,"score":36,"level":0},{"x":1248,"y":746,"score":45,"level":0},{"x":1356,"y":746,"score":38,"level":0},{"x":1403,"y":746,"score":36,"level":0},{"x":1432,"y":746,"score":30,"level":0},{"x":377,"y":747,"score":56,"level":0},{"x":469,"y":747,"score":33,"level":0},{"x":476,"y":747,"score":27,"level":0},{"x":481,"y":747,"score":30,"level":0},{"x":658,"y":747,"score":37,"level":0},{"x":988,"y":747,"score":34,"level":0},{"x":1033,"y":747,"score":32,"level":0},{"x":1220,"y":747,"score":34,"level":0},{"x":1336,"y":747,"score":65,"level":0},{"x":1429,"y":747,"score":26,"level":0},{"x":1441,"y":747,"score":30,"level":0},{"x":454,"y":748,"score":26,"level":0},{"x":519,"y":748,"score":31,"level":0},{"x":586,"y":748,"score":83,"level":0},{"x":627,"y":748,"score":46,"level":0},{"x":691,"y":748,"score":32,"level":0},{"x":955,"y":748,"score":32,"level":0},{"x":1083,"y":748,"score":34,"level":0},{"x":1122,"y":748,"score":32,"level":0},{"x":1372,"y":748,"score":29,"level":0},{"x":1374,"y":748,"score":26,"level":0},{"x":475,"y":749,"score":34,"level":0},{"x":636,"y":749,"score":30,"level":0},{"x":671,"y":749,"score":37,"level":0},{"x":719,"y":749,"score":26,"level":0},{"x":846,"y":749,"score":55,"level":0},{"x":860,"y":749,"score":78,"level":0},{"x":868,"y":749,"score":67,"level":0},{"x":880,"y":749,"score":39,"level":0},{"x":1028,"y":749,"score":57,"level":0},{"x":425,"y":750,"score":54,"level":0},{"x":434,"y":750,"score":86,"level":0},{"x":553,"y":750,"score":46,"level":0},{"x":557,"y":750,"score":28,"level":0},{"x":591,"y":750,"score":33,"level":0},{"x":948,"y":750,"score":27,"level":0},{"x":984,"y":750,"score":42,"level":0},{"x":1083,"y":750,"score":34,"level":0},{"x":1132,"y":750,"score":29,"level":0},{"x":1137,"y":750,"score":38,"level":0},{"x":1154,"y":750,"score":27,"level":0},{"x":1417,"y":750,"score":26,"level":0},{"x":1423,"y":750,"score":64,"level":0},{"x":631,"y":751,"score":28,"level":0},{"x":888,"y":751,"score":32,"level":0},{"x":893,"y":751,"score":28,"level":0},{"x":970,"y":751,"score":30,"level":0},{"x":978,"y":751,"score":52,"level":0},{"x":1179,"y":751,"score":97,"level":0},{"x":417,"y":752,"score":26,"level":0},{"x":1073,"y":752,"score":31,"level":0},{"x":1114,"y":752,"score":56,"level":0},{"x":1162,"y":752,"score":55,"level":0},{"x":1344,"y":752,"score":43,"level":0},{"x":1378,"y":752,"score":26,"level":0},{"x":539,"y":753,"score":74,"level":0},{"x":598,"y":753,"score":37,"level":0},{"x":705,"y":753,"score":36,"level":0},{"x":849,"y":753,"score":34,"level":0},{"x":863,"y":753,"score":33,"level":0},{"x":946,"y":753,"score":34,"level":0},{"x":952,"y":753,"score":28,"level":0},{"x":1244,"y":753,"score":30,"level":0},{"x":1284,"y":753,"score":30,"level":0},{"x":1383,"y":753,"score":28,"level":0},{"x":1389,"y":753,"score":45,"level":0},{"x":1405,"y":753,"score":27,"level":0},{"x":1441,"y":753,"score":28,"level":0},{"x":1468,"y":753,"score":39,"level":0},{"x":463,"y":754,"score":46,"level":0},{"x":507,"y":754,"score":28,"level":0},{"x":530,"y":754,"score":30,"level":0},{"x":545,"y":754,"score":35,"level":0},{"x":579,"y":754,"score":42,"level":0},{"x":667,"y":754,"score":29,"level":0},{"x":710,"y":754,"score":30,"level":0},{"x":727,"y":754,"score":42,"level":0},{"x":772,"y":754,"score":35,"level":0},{"x":841,"y":754,"score":53,"level":0},{"x":846,"y":754,"score":31,"level":0},{"x":865,"y":754,"score":26,"level":0},{"x":885,"y":754,"score":32,"level":0},{"x":944,"y":754,"score":31,"level":0},{"x":1085,"y":754,"score":36,"level":0},{"x":1328,"y":754,"score":27,"level":0},{"x":1354,"y":754,"score":31,"level":0},{"x":1466,"y":754,"score":31,"level":0},{"x":447,"y":755,"score":58,"level":0},{"x":527,"y":755,"score":50,"level":0},{"x":807,"y":755,"score":34,"level":0},{"x":878,"y":755,"score":56,"level":0},{"x":917,"y":755,"score":34,"level":0},{"x":1249,"y":755,"score":56,"level":0},{"x":1432,"y":755,"score":61,"level":0},{"x":472,"y":756,"score":29,"level":0},{"x":572,"y":756,"score":30,"level":0},{"x":718,"y":756,"score":28,"level":0},{"x":810,"y":756,"score":30,"level":0},{"x":813,"y":756,"score":27,"level":0},{"x":871,"y":756,"score":56,"level":0},{"x":1131,"y":756,"score":27,"level":0},{"x":1317,"y":756,"score":42,"level":0},{"x":1336,"y":756,"score":37,"level":0},{"x":1416,"y":756,"score":54,"level":0},{"x":398,"y":757,"score":26,"level":0},{"x":403,"y":757,"score":32,"level":0},{"x":549,"y":757,"score":64,"level":0},{"x":864,"y":757,"score":31,"level":0},{"x":877,"y":757,"score":39,"level":0},{"x":978,"y":757,"score":33,"level":0},{"x":1035,"y":757,"score":47,"level":0},{"x":1041,"y":757,"score":28,"level":0},{"x":1186,"y":757,"score":49,"level":0},{"x":1190,"y":757,"score":32,"level":0},{"x":1276,"y":757,"score":38,"level":0},{"x":1330,"y":757,"score":27,"level":0},{"x":476,"y":758,"score":26,"level":0},{"x":557,"y":758,"score":40,"level":0},{"x":559,"y":758,"score":42,"level":0},{"x":617,"y":758,"score":30,"level":0},{"x":686,"y":758,"score":42,"level":0},{"x":705,"y":758,"score":28,"level":0},{"x":776,"y":758,"score":34,"level":0},{"x":830,"y":758,"score":50,"level":0},{"x":858,"y":758,"score":35,"level":0},{"x":927,"y":758,"score":46,"level":0},{"x":932,"y":758,"score":32,"level":0},{"x":1107,"y":758,"score":32,"level":0},{"x":1237,"y":758,"score":29,"level":0},{"x":1349,"y":758,"score":65,"level":0},{"x":1439,"y":758,"score":30,"level":0},{"x":538,"y":759,"score":39,"level":0},{"x":563,"y":759,"score":36,"level":0},{"x":608,"y":759,"score":26,"level":0},{"x":712,"y":759,"score":26,"level":0},{"x":720,"y":759,"score":32,"level":0},{"x":1029,"y":759,"score":41,"level":0},{"x":1153,"y":759,"score":29,"level":0},{"x":1195,"y":759,"score":40,"level":0},{"x":1284,"y":759,"score":44,"level":0},{"x":1292,"y":759,"score":32,"level":0},{"x":1340,"y":759,"score":27,"level":0},{"x":1358,"y":759,"score":68,"level":0},{"x":1361,"y":759,"score":29,"level":0},{"x":1464,"y":759,"score":28,"level":0},{"x":439,"y":760,"score":116,"level":0},{"x":467,"y":760,"score":36,"level":0},{"x":472,"y":760,"score":32,"level":0},{"x":505,"y":760,"score":32,"level":0},{"x":526,"y":760,"score":26,"level":0},{"x":749,"y":760,"score":30,"level":0},{"x":797,"y":760,"score":26,"level":0},{"x":873,"y":760,"score":55,"level":0},{"x":942,"y":760,"score":57,"level":0},{"x":989,"y":760,"score":32,"level":0},{"x":1182,"y":760,"score":79,"level":0},{"x":1289,"y":760,"score":30,"level":0},{"x":1375,"y":760,"score":38,"level":0},{"x":1402,"y":760,"score":29,"level":0},{"x":1474,"y":760,"score":29,"level":0},{"x":413,"y":761,"score":37,"level":0},{"x":538,"y":761,"score":44,"level":0},{"x":544,"y":761,"score":76,"level":0},{"x":677,"y":761,"score":45,"level":0},{"x":802,"y":761,"score":29,"level":0},{"x":839,"y":761,"score":29,"level":0},{"x":842,"y":761,"score":29,"level":0},{"x":1063,"y":761,"score":26,"level":0},{"x":1424,"y":761,"score":82,"level":0},{"x":1432,"y":761,"score":82,"level":0},{"x":1456,"y":761,"score":38,"level":0},{"x":1480,"y":761,"score":38,"level":0},{"x":523,"y":762,"score":30,"level":0},{"x":770,"y":762,"score":36,"level":0},{"x":873,"y":762,"score":26,"level":0},{"x":971,"y":762,"score":30,"level":0},{"x":979,"y":762,"score":68,"level":0},{"x":1107,"y":762,"score":31,"level":0},{"x":1272,"y":762,"score":41,"level":0},{"x":1411,"y":762,"score":28,"level":0},{"x":402,"y":763,"score":42,"level":0},{"x":419,"y":763,"score":44,"level":0},{"x":471,"y":763,"score":26,"level":0},{"x":541,"y":763,"score":37,"level":0},{"x":560,"y":763,"score":61,"level":0},{"x":566,"y":763,"score":26,"level":0},{"x":656,"y":763,"score":50,"level":0},{"x":823,"y":763,"score":37,"level":0},{"x":854,"y":763,"score":27,"level":0},{"x":1026,"y":763,"score":38,"level":0},{"x":1046,"y":763,"score":26,"level":0},{"x":1114,"y":763,"score":52,"level":0},{"x":1197,"y":763,"score":31,"level":0},{"x":1221,"y":763,"score":34,"level":0},{"x":1237,"y":763,"score":32,"level":0},{"x":531,"y":764,"score":50,"level":0},{"x":563,"y":764,"score":32,"level":0},{"x":616,"y":764,"score":36,"level":0},{"x":622,"y":764,"score":46,"level":0},{"x":701,"y":764,"score":26,"level":0},{"x":933,"y":764,"score":37,"level":0},{"x":940,"y":764,"score":29,"level":0},{"x":970,"y":764,"score":26,"level":0},{"x":1037,"y":764,"score":38,"level":0},{"x":1103,"y":764,"score":58,"level":0},{"x":1144,"y":764,"score":30,"level":0},{"x":1150,"y":764,"score":49,"level":0},{"x":1168,"y":764,"score":55,"level":0},{"x":1226,"y":764,"score":34,"level":0},{"x":1282,"y":764,"score":30,"level":0},{"x":1336,"y":764,"score":36,"level":0},{"x":1449,"y":764,"score":60,"level":0},{"x":413,"y":765,"score":37,"level":0},{"x":559,"y":765,"score":38,"level":0},{"x":602,"y":765,"score":50,"level":0},{"x":627,"y":765,"score":34,"level":0},{"x":656,"y":765,"score":28,"level":0},{"x":662,"y":765,"score":31,"level":0},{"x":664,"y":765,"score":56,"level":0},{"x":715,"y":765,"score":37,"level":0},{"x":720,"y":765,"score":28,"level":0},{"x":762,"y":765,"score":39,"level":0},{"x":833,"y":765,"score":31,"level":0},{"x":922,"y":765,"score":38,"level":0},{"x":1108,"y":765,"score":32,"level":0},{"x":1291,"y":765,"score":27,"level":0},{"x":1464,"y":765,"score":32,"level":0},{"x":496,"y":766,"score":40,"level":0},{"x":546,"y":766,"score":48,"level":0},{"x":725,"y":766,"score":47,"level":0},{"x":825,"y":766,"score":38,"level":0},{"x":1157,"y":766,"score":43,"level":0},{"x":1219,"y":766,"score":32,"level":0},{"x":440,"y":767,"score":64,"level":0},{"x":459,"y":767,"score":48,"level":0},{"x":505,"y":767,"score":54,"level":0},{"x":555,"y":767,"score":68,"level":0},{"x":590,"y":767,"score":33,"level":0},{"x":785,"y":767,"score":28,"level":0},{"x":883,"y":767,"score":64,"level":0},{"x":903,"y":767,"score":28,"level":0},{"x":914,"y":767,"score":35,"level":0},{"x":921,"y":767,"score":42,"level":0},{"x":926,"y":767,"score":29,"level":0},{"x":1252,"y":767,"score":30,"level":0},{"x":1317,"y":767,"score":26,"level":0},{"x":1327,"y":767,"score":29,"level":0},{"x":1435,"y":767,"score":32,"level":0},{"x":410,"y":768,"score":34,"level":0},{"x":474,"y":768,"score":28,"level":0},{"x":560,"y":768,"score":32,"level":0},{"x":706,"y":768,"score":32,"level":0},{"x":709,"y":768,"score":34,"level":0},{"x":901,"y":768,"score":28,"level":0},{"x":943,"y":768,"score":52,"level":0},{"x":981,"y":768,"score":45,"level":0},{"x":1340,"y":768,"score":67,"level":0},{"x":1359,"y":768,"score":61,"level":0},{"x":416,"y":769,"score":45,"level":0},{"x":593,"y":769,"score":30,"level":0},{"x":714,"y":769,"score":41,"level":0},{"x":863,"y":769,"score":39,"level":0},{"x":1037,"y":769,"score":29,"level":0},{"x":1209,"y":769,"score":32,"level":0},{"x":431,"y":770,"score":41,"level":0},{"x":460,"y":770,"score":76,"level":0},{"x":514,"y":770,"score":32,"level":0},{"x":580,"y":770,"score":26,"level":0},{"x":659,"y":770,"score":30,"level":0},{"x":702,"y":770,"score":30,"level":0},{"x":722,"y":770,"score":41,"level":0},{"x":796,"y":770,"score":32,"level":0},{"x":846,"y":770,"score":41,"level":0},{"x":985,"y":770,"score":30,"level":0},{"x":1080,"y":770,"score":32,"level":0},{"x":1459,"y":770,"score":89,"level":0},{"x":453,"y":771,"score":29,"level":0},{"x":497,"y":771,"score":29,"level":0},{"x":651,"y":771,"score":68,"level":0},{"x":656,"y":771,"score":60,"level":0},{"x":700,"y":771,"score":36,"level":0},{"x":832,"y":771,"score":30,"level":0},{"x":977,"y":771,"score":48,"level":0},{"x":1036,"y":771,"score":39,"level":0},{"x":1078,"y":771,"score":30,"level":0},{"x":1135,"y":771,"score":32,"level":0},{"x":1443,"y":771,"score":67,"level":0},{"x":424,"y":772,"score":33,"level":0},{"x":444,"y":772,"score":49,"level":0},{"x":481,"y":772,"score":34,"level":0},{"x":508,"y":772,"score":42,"level":0},{"x":568,"y":772,"score":38,"level":0},{"x":586,"y":772,"score":28,"level":0},{"x":649,"y":772,"score":49,"level":0},{"x":670,"y":772,"score":27,"level":0},{"x":928,"y":772,"score":31,"level":0},{"x":1156,"y":772,"score":32,"level":0},{"x":453,"y":773,"score":47,"level":0},{"x":459,"y":773,"score":60,"level":0},{"x":767,"y":773,"score":28,"level":0},{"x":801,"y":773,"score":27,"level":0},{"x":1183,"y":773,"score":42,"level":0},{"x":1188,"y":773,"score":34,"level":0},{"x":1273,"y":773,"score":86,"level":0},{"x":1346,"y":773,"score":29,"level":0},{"x":1414,"y":773,"score":28,"level":0},{"x":386,"y":774,"score":28,"level":0},{"x":897,"y":774,"score":38,"level":0},{"x":1005,"y":774,"score":48,"level":0},{"x":1305,"y":774,"score":30,"level":0},{"x":1337,"y":774,"score":26,"level":0},{"x":1468,"y":774,"score":32,"level":0},{"x":377,"y":775,"score":64,"level":0},{"x":426,"y":775,"score":36,"level":0},{"x":431,"y":775,"score":28,"level":0},{"x":436,"y":775,"score":31,"level":0},{"x":443,"y":775,"score":55,"level":0},{"x":471,"y":775,"score":37,"level":0},{"x":477,"y":775,"score":38,"level":0},{"x":774,"y":775,"score":27,"level":0},{"x":832,"y":775,"score":26,"level":0},{"x":878,"y":775,"score":30,"level":0},{"x":933,"y":775,"score":58,"level":0},{"x":938,"y":775,"score":52,"level":0},{"x":1022,"y":775,"score":36,"level":0},{"x":1225,"y":775,"score":33,"level":0},{"x":1405,"y":775,"score":28,"level":0},{"x":1433,"y":775,"score":31,"level":0},{"x":1449,"y":775,"score":34,"level":0},{"x":1457,"y":775,"score":35,"level":0},{"x":748,"y":776,"score":27,"level":0},{"x":977,"y":776,"score":68,"level":0},{"x":1069,"y":776,"score":26,"level":0},{"x":1269,"y":776,"score":43,"level":0},{"x":1379,"y":776,"score":26,"level":0},{"x":486,"y":777,"score":35,"level":0},{"x":515,"y":777,"score":28,"level":0},{"x":528,"y":777,"score":26,"level":0},{"x":579,"y":777,"score":33,"level":0},{"x":1040,"y":777,"score":37,"level":0},{"x":1165,"y":777,"score":48,"level":0},{"x":1220,"y":777,"score":37,"level":0},{"x":1233,"y":777,"score":40,"level":0},{"x":443,"y":778,"score":39,"level":0},{"x":546,"y":778,"score":38,"level":0},{"x":648,"y":778,"score":26,"level":0},{"x":829,"y":778,"score":28,"level":0},{"x":1161,"y":778,"score":27,"level":0},{"x":1264,"y":778,"score":33,"level":0},{"x":1276,"y":778,"score":28,"level":0},{"x":1398,"y":778,"score":29,"level":0},{"x":459,"y":779,"score":40,"level":0},{"x":561,"y":779,"score":37,"level":0},{"x":697,"y":779,"score":29,"level":0},{"x":840,"y":779,"score":46,"level":0},{"x":913,"y":779,"score":27,"level":0},{"x":1029,"y":779,"score":49,"level":0},{"x":1114,"y":779,"score":30,"level":0},{"x":1323,"y":779,"score":30,"level":0},{"x":1328,"y":779,"score":29,"level":0},{"x":1442,"y":779,"score":31,"level":0},{"x":1444,"y":779,"score":27,"level":0},{"x":1473,"y":779,"score":28,"level":0},{"x":403,"y":780,"score":33,"level":0},{"x":563,"y":780,"score":26,"level":0},{"x":603,"y":780,"score":41,"level":0},{"x":707,"y":780,"score":35,"level":0},{"x":717,"y":780,"score":62,"level":0},{"x":968,"y":780,"score":36,"level":0},{"x":1078,"y":780,"score":72,"level":0},{"x":1167,"y":780,"score":33,"level":0},{"x":1172,"y":780,"score":30,"level":0},{"x":1465,"y":780,"score":42,"level":0},{"x":446,"y":781,"score":70,"level":0},{"x":464,"y":781,"score":54,"level":0},{"x":554,"y":781,"score":60,"level":0},{"x":615,"y":781,"score":47,"level":0},{"x":794,"y":781,"score":30,"level":0},{"x":850,"y":781,"score":29,"level":0},{"x":865,"y":781,"score":43,"level":0},{"x":933,"y":781,"score":48,"level":0},{"x":983,"y":781,"score":26,"level":0},{"x":1014,"y":781,"score":44,"level":0},{"x":1030,"y":781,"score":43,"level":0},{"x":1045,"y":781,"score":27,"level":0},{"x":1387,"y":781,"score":35,"level":0},{"x":408,"y":782,"score":38,"level":0},{"x":503,"y":782,"score":40,"level":0},{"x":515,"y":782,"score":38,"level":0},{"x":530,"y":782,"score":32,"level":0},{"x":563,"y":782,"score":33,"level":0},{"x":684,"y":782,"score":31,"level":0},{"x":845,"y":782,"score":36,"level":0},{"x":913,"y":782,"score":35,"level":0},{"x":1188,"y":782,"score":38,"level":0},{"x":1340,"y":782,"score":34,"level":0},{"x":1359,"y":782,"score":39,"level":0},{"x":494,"y":783,"score":42,"level":0},{"x":588,"y":783,"score":28,"level":0},{"x":920,"y":783,"score":31,"level":0},{"x":941,"y":783,"score":43,"level":0},{"x":988,"y":783,"score":56,"level":0},{"x":1134,"y":783,"score":27,"level":0},{"x":1153,"y":783,"score":39,"level":0},{"x":1183,"y":783,"score":67,"level":0},{"x":1277,"y":783,"score":48,"level":0},{"x":1282,"y":783,"score":30,"level":0},{"x":1470,"y":783,"score":75,"level":0},{"x":418,"y":784,"score":34,"level":0},{"x":546,"y":784,"score":43,"level":0},{"x":1287,"y":784,"score":39,"level":0},{"x":1392,"y":784,"score":55,"level":0},{"x":1398,"y":784,"score":28,"level":0},{"x":1422,"y":784,"score":33,"level":0},{"x":617,"y":785,"score":29,"level":0},{"x":818,"y":785,"score":37,"level":0},{"x":1114,"y":785,"score":26,"level":0},{"x":1166,"y":785,"score":41,"level":0},{"x":1239,"y":785,"score":32,"level":0},{"x":1371,"y":785,"score":39,"level":0},{"x":1430,"y":785,"score":32,"level":0},{"x":485,"y":786,"score":27,"level":0},{"x":675,"y":786,"score":38,"level":0},{"x":869,"y":786,"score":45,"level":0},{"x":1008,"y":786,"score":34,"level":0},{"x":1229,"y":786,"score":32,"level":0},{"x":1339,"y":786,"score":37,"level":0},{"x":1363,"y":786,"score":62,"level":0},{"x":1382,"y":786,"score":86,"level":0},{"x":382,"y":787,"score":42,"level":0},{"x":403,"y":787,"score":35,"level":0},{"x":543,"y":787,"score":67,"level":0},{"x":549,"y":787,"score":49,"level":0},{"x":673,"y":787,"score":32,"level":0},{"x":764,"y":787,"score":36,"level":0},{"x":770,"y":787,"score":39,"level":0},{"x":772,"y":787,"score":38,"level":0},{"x":840,"y":787,"score":34,"level":0},{"x":850,"y":787,"score":31,"level":0},{"x":908,"y":787,"score":34,"level":0},{"x":1005,"y":787,"score":34,"level":0},{"x":1028,"y":787,"score":41,"level":0},{"x":1112,"y":787,"score":26,"level":0},{"x":1194,"y":787,"score":32,"level":0},{"x":1298,"y":787,"score":26,"level":0},{"x":1318,"y":787,"score":26,"level":0},{"x":1347,"y":787,"score":36,"level":0},{"x":1376,"y":787,"score":35,"level":0},{"x":1410,"y":787,"score":45,"level":0},{"x":1447,"y":787,"score":41,"level":0},{"x":1456,"y":787,"score":40,"level":0},{"x":502,"y":788,"score":30,"level":0},{"x":517,"y":788,"score":29,"level":0},{"x":662,"y":788,"score":30,"level":0},{"x":778,"y":788,"score":32,"level":0},{"x":923,"y":788,"score":54,"level":0},{"x":929,"y":788,"score":60,"level":0},{"x":971,"y":788,"score":44,"level":0},{"x":1153,"y":788,"score":31,"level":0},{"x":1242,"y":788,"score":26,"level":0},{"x":1345,"y":788,"score":39,"level":0},{"x":1389,"y":788,"score":65,"level":0},{"x":1468,"y":788,"score":49,"level":0},{"x":459,"y":789,"score":60,"level":0},{"x":464,"y":789,"score":27,"level":0},{"x":595,"y":789,"score":41,"level":0},{"x":665,"y":789,"score":27,"level":0},{"x":700,"y":789,"score":33,"level":0},{"x":736,"y":789,"score":48,"level":0},{"x":754,"y":789,"score":34,"level":0},{"x":980,"y":789,"score":37,"level":0},{"x":1139,"y":789,"score":36,"level":0},{"x":1361,"y":789,"score":40,"level":0},{"x":1401,"y":789,"score":37,"level":0},{"x":1415,"y":789,"score":30,"level":0},{"x":511,"y":790,"score":36,"level":0},{"x":604,"y":790,"score":38,"level":0},{"x":726,"y":790,"score":45,"level":0},{"x":1040,"y":790,"score":29,"level":0},{"x":1079,"y":790,"score":27,"level":0},{"x":1123,"y":790,"score":30,"level":0},{"x":1356,"y":790,"score":32,"level":0},{"x":1406,"y":790,"score":27,"level":0},{"x":492,"y":791,"score":28,"level":0},{"x":634,"y":791,"score":28,"level":0},{"x":636,"y":791,"score":50,"level":0},{"x":754,"y":791,"score":41,"level":0},{"x":851,"y":791,"score":33,"level":0},{"x":1034,"y":791,"score":30,"level":0},{"x":1280,"y":791,"score":64,"level":0},{"x":1381,"y":791,"score":48,"level":0},{"x":1463,"y":791,"score":54,"level":0},{"x":383,"y":792,"score":37,"level":0},{"x":557,"y":792,"score":40,"level":0},{"x":719,"y":792,"score":45,"level":0},{"x":728,"y":792,"score":34,"level":0},{"x":835,"y":792,"score":28,"level":0},{"x":1181,"y":792,"score":52,"level":0},{"x":1185,"y":792,"score":63,"level":0},{"x":1430,"y":792,"score":32,"level":0},{"x":405,"y":793,"score":26,"level":0},{"x":416,"y":793,"score":33,"level":0},{"x":437,"y":793,"score":33,"level":0},{"x":487,"y":793,"score":28,"level":0},{"x":520,"y":793,"score":33,"level":0},{"x":639,"y":793,"score":40,"level":0},{"x":884,"y":793,"score":30,"level":0},{"x":941,"y":793,"score":29,"level":0},{"x":990,"y":793,"score":26,"level":0},{"x":1211,"y":793,"score":34,"level":0},{"x":1376,"y":793,"score":70,"level":0},{"x":1468,"y":793,"score":26,"level":0},{"x":581,"y":794,"score":33,"level":0},{"x":647,"y":794,"score":28,"level":0},{"x":679,"y":794,"score":34,"level":0},{"x":790,"y":794,"score":37,"level":0},{"x":871,"y":794,"score":39,"level":0},{"x":979,"y":794,"score":36,"level":0},{"x":985,"y":794,"score":28,"level":0},{"x":995,"y":794,"score":30,"level":0},{"x":1206,"y":794,"score":27,"level":0},{"x":400,"y":795,"score":26,"level":0},{"x":475,"y":795,"score":27,"level":0},{"x":571,"y":795,"score":26,"level":0},{"x":827,"y":795,"score":31,"level":0},{"x":838,"y":795,"score":44,"level":0},{"x":893,"y":795,"score":40,"level":0},{"x":938,"y":795,"score":46,"level":0},{"x":1290,"y":795,"score":44,"level":0},{"x":1318,"y":795,"score":27,"level":0},{"x":458,"y":796,"score":38,"level":0},{"x":549,"y":796,"score":32,"level":0},{"x":659,"y":796,"score":29,"level":0},{"x":679,"y":796,"score":45,"level":0},{"x":690,"y":796,"score":34,"level":0},{"x":702,"y":796,"score":33,"level":0},{"x":717,"y":796,"score":27,"level":0},{"x":824,"y":796,"score":44,"level":0},{"x":1229,"y":796,"score":29,"level":0},{"x":1379,"y":796,"score":33,"level":0},{"x":1413,"y":796,"score":54,"level":0},{"x":481,"y":797,"score":29,"level":0},{"x":562,"y":797,"score":30,"level":0},{"x":639,"y":797,"score":35,"level":0},{"x":968,"y":797,"score":34,"level":0},{"x":1107,"y":797,"score":45,"level":0},{"x":1179,"y":797,"score":40,"level":0},{"x":1256,"y":797,"score":26,"level":0},{"x":1390,"y":797,"score":27,"level":0},{"x":389,"y":798,"score":38,"level":0},{"x":487,"y":798,"score":30,"level":0},{"x":598,"y":798,"score":27,"level":0},{"x":632,"y":798,"score":26,"level":0},{"x":688,"y":798,"score":27,"level":0},{"x":997,"y":798,"score":32,"level":0},{"x":1002,"y":798,"score":29,"level":0},{"x":1007,"y":798,"score":38,"level":0},{"x":1185,"y":798,"score":30,"level":0},{"x":1234,"y":798,"score":46,"level":0},{"x":1480,"y":798,"score":35,"level":0},{"x":377,"y":799,"score":51,"level":0},{"x":481,"y":799,"score":40,"level":0},{"x":492,"y":799,"score":28,"level":0},{"x":550,"y":799,"score":33,"level":0},{"x":642,"y":799,"score":46,"level":0},{"x":649,"y":799,"score":26,"level":0},{"x":723,"y":799,"score":26,"level":0},{"x":760,"y":799,"score":29,"level":0},{"x":1050,"y":799,"score":27,"level":0},{"x":1297,"y":799,"score":28,"level":0},{"x":1454,"y":799,"score":30,"level":0},{"x":1478,"y":799,"score":47,"level":0},{"x":390,"y":800,"score":28,"level":0},{"x":464,"y":800,"score":36,"level":0},{"x":472,"y":800,"score":31,"level":0},{"x":596,"y":800,"score":51,"level":0},{"x":733,"y":800,"score":31,"level":0},{"x":765,"y":800,"score":30,"level":0},{"x":783,"y":800,"score":54,"level":0},{"x":941,"y":800,"score":88,"level":0},{"x":1058,"y":800,"score":38,"level":0},{"x":1489,"y":800,"score":55,"level":0},{"x":393,"y":801,"score":28,"level":0},{"x":437,"y":801,"score":36,"level":0},{"x":771,"y":801,"score":51,"level":0},{"x":824,"y":801,"score":26,"level":0},{"x":1259,"y":801,"score":54,"level":0},{"x":1285,"y":801,"score":32,"level":0},{"x":1425,"y":801,"score":32,"level":0},{"x":431,"y":802,"score":29,"level":0},{"x":582,"y":802,"score":26,"level":0},{"x":810,"y":802,"score":30,"level":0},{"x":1070,"y":802,"score":51,"level":0},{"x":1317,"y":802,"score":38,"level":0},{"x":1440,"y":802,"score":31,"level":0},{"x":392,"y":803,"score":44,"level":0},{"x":453,"y":803,"score":36,"level":0},{"x":531,"y":803,"score":80,"level":0},{"x":552,"y":803,"score":38,"level":0},{"x":588,"y":803,"score":40,"level":0},{"x":816,"y":803,"score":38,"level":0},{"x":992,"y":803,"score":35,"level":0},{"x":997,"y":803,"score":33,"level":0},{"x":1432,"y":803,"score":52,"level":0},{"x":408,"y":804,"score":31,"level":0},{"x":557,"y":804,"score":27,"level":0},{"x":624,"y":804,"score":64,"level":0},{"x":648,"y":804,"score":30,"level":0},{"x":714,"y":804,"score":32,"level":0},{"x":884,"y":804,"score":28,"level":0},{"x":895,"y":804,"score":28,"level":0},{"x":900,"y":804,"score":34,"level":0},{"x":924,"y":804,"score":31,"level":0},{"x":1003,"y":804,"score":36,"level":0},{"x":1050,"y":804,"score":27,"level":0},{"x":1251,"y":804,"score":31,"level":0},{"x":1465,"y":804,"score":33,"level":0},{"x":413,"y":805,"score":44,"level":0},{"x":471,"y":805,"score":28,"level":0},{"x":616,"y":805,"score":34,"level":0},{"x":717,"y":805,"score":26,"level":0},{"x":937,"y":805,"score":62,"level":0},{"x":976,"y":805,"score":45,"level":0},{"x":1303,"y":805,"score":56,"level":0},{"x":1369,"y":805,"score":28,"level":0},{"x":1472,"y":805,"score":36,"level":0},{"x":383,"y":806,"score":29,"level":0},{"x":463,"y":806,"score":40,"level":0},{"x":517,"y":806,"score":26,"level":0},{"x":563,"y":806,"score":30,"level":0},{"x":587,"y":806,"score":46,"level":0},{"x":728,"y":806,"score":39,"level":0},{"x":734,"y":806,"score":30,"level":0},{"x":815,"y":806,"score":32,"level":0},{"x":847,"y":806,"score":31,"level":0},{"x":859,"y":806,"score":29,"level":0},{"x":944,"y":806,"score":29,"level":0},{"x":946,"y":806,"score":55,"level":0},{"x":1254,"y":806,"score":35,"level":0},{"x":1427,"y":806,"score":26,"level":0},{"x":584,"y":807,"score":27,"level":0},{"x":705,"y":807,"score":30,"level":0},{"x":781,"y":807,"score":63,"level":0},{"x":844,"y":807,"score":34,"level":0},{"x":891,"y":807,"score":28,"level":0},{"x":1282,"y":807,"score":27,"level":0},{"x":1440,"y":807,"score":33,"level":0},{"x":392,"y":808,"score":27,"level":0},{"x":423,"y":808,"score":36,"level":0},{"x":596,"y":808,"score":41,"level":0},{"x":696,"y":808,"score":37,"level":0},{"x":717,"y":808,"score":34,"level":0},{"x":974,"y":808,"score":64,"level":0},{"x":992,"y":808,"score":48,"level":0},{"x":1087,"y":808,"score":29,"level":0},{"x":1192,"y":808,"score":31,"level":0},{"x":1256,"y":808,"score":32,"level":0},{"x":1259,"y":808,"score":32,"level":0},{"x":1317,"y":808,"score":26,"level":0},{"x":377,"y":809,"score":44,"level":0},{"x":491,"y":809,"score":26,"level":0},{"x":549,"y":809,"score":54,"level":0},{"x":590,"y":809,"score":38,"level":0},{"x":773,"y":809,"score":30,"level":0},{"x":900,"y":809,"score":46,"level":0},{"x":987,"y":809,"score":46,"level":0},{"x":1050,"y":809,"score":28,"level":0},{"x":1057,"y":809,"score":38,"level":0},{"x":1215,"y":809,"score":30,"level":0},{"x":1389,"y":809,"score":51,"level":0},{"x":667,"y":810,"score":32,"level":0},{"x":850,"y":810,"score":39,"level":0},{"x":931,"y":810,"score":30,"level":0},{"x":937,"y":810,"score":27,"level":0},{"x":940,"y":810,"score":39,"level":0},{"x":1004,"y":810,"score":26,"level":0},{"x":1095,"y":810,"score":27,"level":0},{"x":1181,"y":810,"score":55,"level":0},{"x":1258,"y":810,"score":32,"level":0},{"x":1307,"y":810,"score":27,"level":0},{"x":531,"y":811,"score":28,"level":0},{"x":565,"y":811,"score":28,"level":0},{"x":615,"y":811,"score":61,"level":0},{"x":855,"y":811,"score":60,"level":0},{"x":882,"y":811,"score":40,"level":0},{"x":892,"y":811,"score":28,"level":0},{"x":981,"y":811,"score":30,"level":0},{"x":1030,"y":811,"score":37,"level":0},{"x":1040,"y":811,"score":28,"level":0},{"x":1137,"y":811,"score":38,"level":0},{"x":1346,"y":811,"score":28,"level":0},{"x":1464,"y":811,"score":28,"level":0},{"x":490,"y":812,"score":34,"level":0},{"x":549,"y":812,"score":35,"level":0},{"x":584,"y":812,"score":28,"level":0},{"x":718,"y":812,"score":32,"level":0},{"x":776,"y":812,"score":70,"level":0},{"x":820,"y":812,"score":50,"level":0},{"x":887,"y":812,"score":35,"level":0},{"x":1142,"y":812,"score":26,"level":0},{"x":1267,"y":812,"score":53,"level":0},{"x":1415,"y":812,"score":35,"level":0},{"x":1476,"y":812,"score":26,"level":0},{"x":377,"y":813,"score":37,"level":0},{"x":488,"y":813,"score":27,"level":0},{"x":501,"y":813,"score":37,"level":0},{"x":638,"y":813,"score":36,"level":0},{"x":698,"y":813,"score":72,"level":0},{"x":721,"y":813,"score":35,"level":0},{"x":761,"y":813,"score":29,"level":0},{"x":877,"y":813,"score":27,"level":0},{"x":1431,"y":813,"score":64,"level":0},{"x":424,"y":814,"score":46,"level":0},{"x":446,"y":814,"score":50,"level":0},{"x":496,"y":814,"score":37,"level":0},{"x":628,"y":814,"score":32,"level":0},{"x":1132,"y":814,"score":28,"level":0},{"x":1297,"y":814,"score":50,"level":0},{"x":1339,"y":814,"score":36,"level":0},{"x":1402,"y":814,"score":74,"level":0},{"x":511,"y":815,"score":73,"level":0},{"x":525,"y":815,"score":44,"level":0},{"x":677,"y":815,"score":31,"level":0},{"x":761,"y":815,"score":35,"level":0},{"x":771,"y":815,"score":30,"level":0},{"x":877,"y":815,"score":28,"level":0},{"x":1048,"y":815,"score":48,"level":0},{"x":1050,"y":815,"score":38,"level":0},{"x":1461,"y":815,"score":28,"level":0},{"x":583,"y":816,"score":32,"level":0},{"x":594,"y":816,"score":28,"level":0},{"x":892,"y":816,"score":29,"level":0},{"x":939,"y":816,"score":40,"level":0},{"x":1019,"y":816,"score":39,"level":0},{"x":1027,"y":816,"score":38,"level":0},{"x":1129,"y":816,"score":31,"level":0},{"x":1213,"y":816,"score":34,"level":0},{"x":1389,"y":816,"score":26,"level":0},{"x":418,"y":817,"score":29,"level":0},{"x":491,"y":817,"score":31,"level":0},{"x":536,"y":817,"score":28,"level":0},{"x":541,"y":817,"score":41,"level":0},{"x":588,"y":817,"score":26,"level":0},{"x":741,"y":817,"score":27,"level":0},{"x":764,"y":817,"score":73,"level":0},{"x":911,"y":817,"score":38,"level":0},{"x":1038,"y":817,"score":60,"level":0},{"x":1428,"y":817,"score":50,"level":0},{"x":389,"y":818,"score":43,"level":0},{"x":430,"y":818,"score":37,"level":0},{"x":482,"y":818,"score":36,"level":0},{"x":513,"y":818,"score":106,"level":0},{"x":924,"y":818,"score":40,"level":0},{"x":1057,"y":818,"score":51,"level":0},{"x":1084,"y":818,"score":28,"level":0},{"x":1092,"y":818,"score":52,"level":0},{"x":1130,"y":818,"score":29,"level":0},{"x":1178,"y":818,"score":69,"level":0},{"x":1266,"y":818,"score":27,"level":0},{"x":1271,"y":818,"score":32,"level":0},{"x":459,"y":819,"score":30,"level":0},{"x":566,"y":819,"score":33,"level":0},{"x":616,"y":819,"score":44,"level":0},{"x":1293,"y":819,"score":38,"level":0},{"x":1488,"y":819,"score":34,"level":0},{"x":569,"y":820,"score":39,"level":0},{"x":574,"y":820,"score":32,"level":0},{"x":577,"y":820,"score":45,"level":0},{"x":623,"y":820,"score":41,"level":0},{"x":643,"y":820,"score":26,"level":0},{"x":689,"y":820,"score":46,"level":0},{"x":1079,"y":820,"score":69,"level":0},{"x":1113,"y":820,"score":26,"level":0},{"x":1186,"y":820,"score":47,"level":0},{"x":1267,"y":820,"score":37,"level":0},{"x":1372,"y":820,"score":39,"level":0},{"x":1482,"y":820,"score":40,"level":0},{"x":493,"y":821,"score":26,"level":0},{"x":517,"y":821,"score":49,"level":0},{"x":694,"y":821,"score":36,"level":0},{"x":826,"y":821,"score":41,"level":0},{"x":856,"y":821,"score":63,"level":0},{"x":918,"y":821,"score":45,"level":0},{"x":955,"y":821,"score":67,"level":0},{"x":977,"y":821,"score":76,"level":0},{"x":1008,"y":821,"score":28,"level":0},{"x":1310,"y":821,"score":31,"level":0},{"x":1397,"y":821,"score":41,"level":0},{"x":535,"y":822,"score":33,"level":0},{"x":586,"y":822,"score":29,"level":0},{"x":719,"y":822,"score":29,"level":0},{"x":875,"y":822,"score":26,"level":0},{"x":985,"y":822,"score":48,"level":0},{"x":1024,"y":822,"score":26,"level":0},{"x":1028,"y":822,"score":32,"level":0},{"x":1038,"y":822,"score":35,"level":0},{"x":1338,"y":822,"score":50,"level":0},{"x":1344,"y":822,"score":28,"level":0},{"x":1351,"y":822,"score":27,"level":0},{"x":398,"y":823,"score":28,"level":0},{"x":444,"y":823,"score":54,"level":0},{"x":446,"y":823,"score":56,"level":0},{"x":525,"y":823,"score":79,"level":0},{"x":539,"y":823,"score":27,"level":0},{"x":550,"y":823,"score":32,"level":0},{"x":924,"y":823,"score":35,"level":0},{"x":926,"y":823,"score":29,"level":0},{"x":1301,"y":823,"score":26,"level":0},{"x":1372,"y":823,"score":27,"level":0},{"x":1382,"y":823,"score":28,"level":0},{"x":653,"y":824,"score":41,"level":0},{"x":781,"y":824,"score":53,"level":0},{"x":834,"y":824,"score":40,"level":0},{"x":864,"y":824,"score":35,"level":0},{"x":869,"y":824,"score":60,"level":0},{"x":880,"y":824,"score":26,"level":0},{"x":1130,"y":824,"score":27,"level":0},{"x":1226,"y":824,"score":26,"level":0},{"x":1325,"y":824,"score":32,"level":0},{"x":481,"y":825,"score":49,"level":0},{"x":766,"y":825,"score":30,"level":0},{"x":768,"y":825,"score":27,"level":0},{"x":796,"y":825,"score":33,"level":0},{"x":821,"y":825,"score":29,"level":0},{"x":932,"y":825,"score":30,"level":0},{"x":1189,"y":825,"score":30,"level":0},{"x":1359,"y":825,"score":26,"level":0},{"x":1486,"y":825,"score":30,"level":0},{"x":447,"y":826,"score":44,"level":0},{"x":512,"y":826,"score":103,"level":0},{"x":577,"y":826,"score":29,"level":0},{"x":582,"y":826,"score":31,"level":0},{"x":602,"y":826,"score":43,"level":0},{"x":607,"y":826,"score":69,"level":0},{"x":886,"y":826,"score":32,"level":0},{"x":939,"y":826,"score":33,"level":0},{"x":993,"y":826,"score":27,"level":0},{"x":1011,"y":826,"score":40,"level":0},{"x":1016,"y":826,"score":27,"level":0},{"x":1033,"y":826,"score":30,"level":0},{"x":1061,"y":826,"score":27,"level":0},{"x":1129,"y":826,"score":26,"level":0},{"x":1266,"y":826,"score":46,"level":0},{"x":1308,"y":826,"score":27,"level":0},{"x":1374,"y":826,"score":26,"level":0},{"x":1397,"y":826,"score":36,"level":0},{"x":1410,"y":826,"score":48,"level":0},{"x":1471,"y":826,"score":29,"level":0},{"x":384,"y":827,"score":30,"level":0},{"x":449,"y":827,"score":31,"level":0},{"x":463,"y":827,"score":27,"level":0},{"x":486,"y":827,"score":41,"level":0},{"x":612,"y":827,"score":31,"level":0},{"x":628,"y":827,"score":27,"level":0},{"x":638,"y":827,"score":28,"level":0},{"x":707,"y":827,"score":32,"level":0},{"x":783,"y":827,"score":75,"level":0},{"x":948,"y":827,"score":38,"level":0},{"x":965,"y":827,"score":33,"level":0},{"x":1074,"y":827,"score":29,"level":0},{"x":1079,"y":827,"score":63,"level":0},{"x":1271,"y":827,"score":29,"level":0},{"x":377,"y":828,"score":42,"level":0},{"x":536,"y":828,"score":52,"level":0},{"x":559,"y":828,"score":28,"level":0},{"x":724,"y":828,"score":30,"level":0},{"x":728,"y":828,"score":26,"level":0},{"x":762,"y":828,"score":36,"level":0},{"x":764,"y":828,"score":46,"level":0},{"x":812,"y":828,"score":35,"level":0},{"x":854,"y":828,"score":34,"level":0},{"x":1028,"y":828,"score":30,"level":0},{"x":1182,"y":828,"score":28,"level":0},{"x":1187,"y":828,"score":37,"level":0},{"x":1381,"y":828,"score":29,"level":0},{"x":1402,"y":828,"score":34,"level":0},{"x":1451,"y":828,"score":38,"level":0},{"x":496,"y":829,"score":33,"level":0},{"x":522,"y":829,"score":85,"level":0},{"x":634,"y":829,"score":34,"level":0},{"x":760,"y":829,"score":42,"level":0},{"x":865,"y":829,"score":38,"level":0},{"x":950,"y":829,"score":30,"level":0},{"x":1082,"y":829,"score":32,"level":0},{"x":1109,"y":829,"score":30,"level":0},{"x":1180,"y":829,"score":35,"level":0},{"x":1338,"y":829,"score":34,"level":0},{"x":1376,"y":829,"score":30,"level":0},{"x":616,"y":830,"score":36,"level":0},{"x":696,"y":830,"score":30,"level":0},{"x":736,"y":830,"score":48,"level":0},{"x":739,"y":830,"score":26,"level":0},{"x":815,"y":830,"score":26,"level":0},{"x":819,"y":830,"score":32,"level":0},{"x":860,"y":830,"score":48,"level":0},{"x":902,"y":830,"score":29,"level":0},{"x":1213,"y":830,"score":37,"level":0},{"x":1287,"y":830,"score":30,"level":0},{"x":1354,"y":830,"score":27,"level":0},{"x":1490,"y":830,"score":26,"level":0},{"x":492,"y":831,"score":30,"level":0},{"x":515,"y":831,"score":59,"level":0},{"x":589,"y":831,"score":62,"level":0},{"x":692,"y":831,"score":55,"level":0},{"x":751,"y":831,"score":53,"level":0},{"x":771,"y":831,"score":50,"level":0},{"x":793,"y":831,"score":32,"level":0},{"x":1181,"y":831,"score":54,"level":0},{"x":1190,"y":831,"score":31,"level":0},{"x":1216,"y":831,"score":30,"level":0},{"x":1282,"y":831,"score":31,"level":0},{"x":1325,"y":831,"score":50,"level":0},{"x":384,"y":832,"score":32,"level":0},{"x":414,"y":832,"score":26,"level":0},{"x":432,"y":832,"score":31,"level":0},{"x":539,"y":832,"score":32,"level":0},{"x":879,"y":832,"score":33,"level":0},{"x":1010,"y":832,"score":27,"level":0},{"x":1126,"y":832,"score":34,"level":0},{"x":1131,"y":832,"score":26,"level":0},{"x":1271,"y":832,"score":40,"level":0},{"x":537,"y":833,"score":48,"level":0},{"x":575,"y":833,"score":28,"level":0},{"x":976,"y":833,"score":52,"level":0},{"x":1001,"y":833,"score":44,"level":0},{"x":1149,"y":833,"score":38,"level":0},{"x":1254,"y":833,"score":38,"level":0},{"x":1308,"y":833,"score":58,"level":0},{"x":1409,"y":833,"score":36,"level":0},{"x":569,"y":834,"score":40,"level":0},{"x":708,"y":834,"score":26,"level":0},{"x":780,"y":834,"score":34,"level":0},{"x":809,"y":834,"score":30,"level":0},{"x":815,"y":834,"score":29,"level":0},{"x":829,"y":834,"score":41,"level":0},{"x":867,"y":834,"score":39,"level":0},{"x":872,"y":834,"score":36,"level":0},{"x":1047,"y":834,"score":26,"level":0},{"x":1204,"y":834,"score":41,"level":0},{"x":1259,"y":834,"score":30,"level":0},{"x":1284,"y":834,"score":62,"level":0},{"x":1315,"y":834,"score":33,"level":0},{"x":433,"y":835,"score":28,"level":0},{"x":578,"y":835,"score":27,"level":0},{"x":629,"y":835,"score":41,"level":0},{"x":634,"y":835,"score":28,"level":0},{"x":720,"y":835,"score":27,"level":0},{"x":739,"y":835,"score":29,"level":0},{"x":800,"y":835,"score":33,"level":0},{"x":951,"y":835,"score":36,"level":0},{"x":1303,"y":835,"score":32,"level":0},{"x":1375,"y":835,"score":29,"level":0},{"x":598,"y":836,"score":36,"level":0},{"x":611,"y":836,"score":31,"level":0},{"x":666,"y":836,"score":29,"level":0},{"x":737,"y":836,"score":26,"level":0},{"x":753,"y":836,"score":26,"level":0},{"x":985,"y":836,"score":30,"level":0},{"x":1044,"y":836,"score":32,"level":0},{"x":377,"y":837,"score":43,"level":0},{"x":464,"y":837,"score":27,"level":0},{"x":469,"y":837,"score":26,"level":0},{"x":709,"y":837,"score":36,"level":0},{"x":903,"y":837,"score":39,"level":0},{"x":1020,"y":837,"score":36,"level":0},{"x":1102,"y":837,"score":28,"level":0},{"x":1280,"y":837,"score":40,"level":0},{"x":1411,"y":837,"score":34,"level":0},{"x":533,"y":838,"score":28,"level":0},{"x":901,"y":838,"score":44,"level":0},{"x":913,"y":838,"score":32,"level":0},{"x":1197,"y":838,"score":32,"level":0},{"x":410,"y":839,"score":37,"level":0},{"x":523,"y":839,"score":36,"level":0},{"x":642,"y":839,"score":47,"level":0},{"x":652,"y":839,"score":44,"level":0},{"x":780,"y":839,"score":33,"level":0},{"x":794,"y":839,"score":30,"level":0},{"x":915,"y":839,"score":34,"level":0},{"x":1069,"y":839,"score":35,"level":0},{"x":463,"y":840,"score":27,"level":0},{"x":500,"y":840,"score":42,"level":0},{"x":505,"y":840,"score":30,"level":0},{"x":564,"y":840,"score":30,"level":0},{"x":604,"y":840,"score":27,"level":0},{"x":647,"y":840,"score":30,"level":0},{"x":887,"y":840,"score":35,"level":0},{"x":902,"y":840,"score":42,"level":0},{"x":1146,"y":840,"score":43,"level":0},{"x":434,"y":841,"score":74,"level":0},{"x":569,"y":841,"score":37,"level":0},{"x":813,"y":841,"score":29,"level":0},{"x":950,"y":841,"score":45,"level":0},{"x":979,"y":841,"score":39,"level":0},{"x":1033,"y":841,"score":64,"level":0},{"x":1073,"y":841,"score":32,"level":0},{"x":1152,"y":841,"score":48,"level":0},{"x":1192,"y":841,"score":31,"level":0},{"x":1225,"y":841,"score":29,"level":0},{"x":1309,"y":841,"score":48,"level":0},{"x":1315,"y":841,"score":37,"level":0},{"x":426,"y":842,"score":58,"level":0},{"x":571,"y":842,"score":48,"level":0},{"x":837,"y":842,"score":27,"level":0},{"x":1079,"y":842,"score":32,"level":0},{"x":1128,"y":842,"score":27,"level":0},{"x":1210,"y":842,"score":37,"level":0},{"x":1355,"y":842,"score":39,"level":0},{"x":1374,"y":842,"score":31,"level":0},{"x":1483,"y":842,"score":34,"level":0},{"x":544,"y":843,"score":35,"level":0},{"x":762,"y":843,"score":36,"level":0},{"x":922,"y":843,"score":35,"level":0},{"x":987,"y":843,"score":32,"level":0},{"x":1218,"y":843,"score":28,"level":0},{"x":1446,"y":843,"score":28,"level":0},{"x":514,"y":844,"score":31,"level":0},{"x":525,"y":844,"score":76,"level":0},{"x":571,"y":844,"score":48,"level":0},{"x":601,"y":844,"score":46,"level":0},{"x":624,"y":844,"score":46,"level":0},{"x":722,"y":844,"score":30,"level":0},{"x":751,"y":844,"score":33,"level":0},{"x":759,"y":844,"score":31,"level":0},{"x":778,"y":844,"score":28,"level":0},{"x":825,"y":844,"score":27,"level":0},{"x":981,"y":844,"score":36,"level":0},{"x":496,"y":845,"score":29,"level":0},{"x":531,"y":845,"score":32,"level":0},{"x":685,"y":845,"score":32,"level":0},{"x":697,"y":845,"score":45,"level":0},{"x":766,"y":845,"score":27,"level":0},{"x":924,"y":845,"score":54,"level":0},{"x":960,"y":845,"score":27,"level":0},{"x":1252,"y":845,"score":28,"level":0},{"x":1287,"y":845,"score":28,"level":0},{"x":1441,"y":845,"score":50,"level":0},{"x":1488,"y":845,"score":34,"level":0},{"x":486,"y":846,"score":28,"level":0},{"x":658,"y":846,"score":57,"level":0},{"x":664,"y":846,"score":39,"level":0},{"x":728,"y":846,"score":48,"level":0},{"x":784,"y":846,"score":44,"level":0},{"x":891,"y":846,"score":41,"level":0},{"x":1063,"y":846,"score":63,"level":0},{"x":1365,"y":846,"score":31,"level":0},{"x":1399,"y":846,"score":43,"level":0},{"x":1453,"y":846,"score":26,"level":0},{"x":423,"y":847,"score":41,"level":0},{"x":535,"y":847,"score":44,"level":0},{"x":540,"y":847,"score":27,"level":0},{"x":867,"y":847,"score":41,"level":0},{"x":967,"y":847,"score":49,"level":0},{"x":1006,"y":847,"score":29,"level":0},{"x":1033,"y":847,"score":34,"level":0},{"x":425,"y":848,"score":44,"level":0},{"x":463,"y":848,"score":27,"level":0},{"x":521,"y":848,"score":42,"level":0},{"x":715,"y":848,"score":29,"level":0},{"x":757,"y":848,"score":39,"level":0},{"x":762,"y":848,"score":46,"level":0},{"x":767,"y":848,"score":42,"level":0},{"x":880,"y":848,"score":54,"level":0},{"x":904,"y":848,"score":38,"level":0},{"x":985,"y":848,"score":32,"level":0},{"x":1098,"y":848,"score":38,"level":0},{"x":436,"y":849,"score":35,"level":0},{"x":443,"y":849,"score":32,"level":0},{"x":491,"y":849,"score":40,"level":0},{"x":499,"y":849,"score":30,"level":0},{"x":544,"y":849,"score":43,"level":0},{"x":549,"y":849,"score":31,"level":0},{"x":644,"y":849,"score":26,"level":0},{"x":681,"y":849,"score":45,"level":0},{"x":798,"y":849,"score":33,"level":0},{"x":954,"y":849,"score":54,"level":0},{"x":1143,"y":849,"score":34,"level":0},{"x":1145,"y":849,"score":44,"level":0},{"x":1200,"y":849,"score":28,"level":0},{"x":404,"y":850,"score":59,"level":0},{"x":817,"y":850,"score":28,"level":0},{"x":932,"y":850,"score":32,"level":0},{"x":1049,"y":850,"score":58,"level":0},{"x":1236,"y":850,"score":30,"level":0},{"x":1276,"y":850,"score":40,"level":0},{"x":1350,"y":850,"score":30,"level":0},{"x":695,"y":851,"score":26,"level":0},{"x":751,"y":851,"score":26,"level":0},{"x":757,"y":851,"score":44,"level":0},{"x":760,"y":851,"score":36,"level":0},{"x":925,"y":851,"score":30,"level":0},{"x":939,"y":851,"score":38,"level":0},{"x":1477,"y":851,"score":36,"level":0},{"x":428,"y":852,"score":48,"level":0},{"x":557,"y":852,"score":27,"level":0},{"x":575,"y":852,"score":33,"level":0},{"x":599,"y":852,"score":26,"level":0},{"x":889,"y":852,"score":28,"level":0},{"x":898,"y":852,"score":33,"level":0},{"x":1072,"y":852,"score":28,"level":0},{"x":1180,"y":852,"score":52,"level":0},{"x":1228,"y":852,"score":28,"level":0},{"x":1270,"y":852,"score":26,"level":0},{"x":450,"y":853,"score":30,"level":0},{"x":488,"y":853,"score":27,"level":0},{"x":679,"y":853,"score":26,"level":0},{"x":684,"y":853,"score":42,"level":0},{"x":999,"y":853,"score":29,"level":0},{"x":1051,"y":853,"score":47,"level":0},{"x":1108,"y":853,"score":32,"level":0},{"x":1138,"y":853,"score":38,"level":0},{"x":1247,"y":853,"score":39,"level":0},{"x":1323,"y":853,"score":40,"level":0},{"x":377,"y":854,"score":28,"level":0},{"x":401,"y":854,"score":36,"level":0},{"x":408,"y":854,"score":31,"level":0},{"x":429,"y":854,"score":49,"level":0},{"x":523,"y":854,"score":33,"level":0},{"x":528,"y":854,"score":26,"level":0},{"x":645,"y":854,"score":37,"level":0},{"x":660,"y":854,"score":52,"level":0},{"x":759,"y":854,"score":34,"level":0},{"x":877,"y":854,"score":44,"level":0},{"x":887,"y":854,"score":28,"level":0},{"x":1140,"y":854,"score":38,"level":0},{"x":1145,"y":854,"score":36,"level":0},{"x":1198,"y":854,"score":34,"level":0},{"x":421,"y":855,"score":90,"level":0},{"x":519,"y":855,"score":28,"level":0},{"x":574,"y":855,"score":33,"level":0},{"x":591,"y":855,"score":45,"level":0},{"x":597,"y":855,"score":34,"level":0},{"x":607,"y":855,"score":37,"level":0},{"x":921,"y":855,"score":30,"level":0},{"x":1115,"y":855,"score":29,"level":0},{"x":1117,"y":855,"score":30,"level":0},{"x":1414,"y":855,"score":60,"level":0},{"x":1450,"y":855,"score":32,"level":0},{"x":479,"y":856,"score":32,"level":0},{"x":558,"y":856,"score":31,"level":0},{"x":613,"y":856,"score":34,"level":0},{"x":683,"y":856,"score":44,"level":0},{"x":700,"y":856,"score":39,"level":0},{"x":833,"y":856,"score":33,"level":0},{"x":864,"y":856,"score":32,"level":0},{"x":869,"y":856,"score":45,"level":0},{"x":953,"y":856,"score":50,"level":0},{"x":958,"y":856,"score":29,"level":0},{"x":981,"y":856,"score":30,"level":0},{"x":1098,"y":856,"score":27,"level":0},{"x":1125,"y":856,"score":27,"level":0},{"x":1153,"y":856,"score":34,"level":0},{"x":1193,"y":856,"score":32,"level":0},{"x":1444,"y":856,"score":31,"level":0},{"x":482,"y":857,"score":29,"level":0},{"x":791,"y":857,"score":31,"level":0},{"x":847,"y":857,"score":35,"level":0},{"x":1084,"y":857,"score":39,"level":0},{"x":1086,"y":857,"score":37,"level":0},{"x":1169,"y":857,"score":34,"level":0},{"x":444,"y":858,"score":30,"level":0},{"x":459,"y":858,"score":40,"level":0},{"x":520,"y":858,"score":30,"level":0},{"x":579,"y":858,"score":30,"level":0},{"x":718,"y":858,"score":34,"level":0},{"x":780,"y":858,"score":30,"level":0},{"x":1065,"y":858,"score":32,"level":0},{"x":1180,"y":858,"score":28,"level":0},{"x":1292,"y":858,"score":66,"level":0},{"x":1321,"y":858,"score":46,"level":0},{"x":1409,"y":858,"score":32,"level":0},{"x":464,"y":859,"score":40,"level":0},{"x":522,"y":859,"score":38,"level":0},{"x":528,"y":859,"score":27,"level":0},{"x":544,"y":859,"score":26,"level":0},{"x":662,"y":859,"score":27,"level":0},{"x":797,"y":859,"score":39,"level":0},{"x":1041,"y":859,"score":26,"level":0},{"x":1217,"y":859,"score":26,"level":0},{"x":1279,"y":859,"score":34,"level":0},{"x":459,"y":860,"score":27,"level":0},{"x":484,"y":860,"score":37,"level":0},{"x":533,"y":860,"score":38,"level":0},{"x":572,"y":860,"score":56,"level":0},{"x":578,"y":860,"score":52,"level":0},{"x":675,"y":860,"score":28,"level":0},{"x":887,"y":860,"score":26,"level":0},{"x":905,"y":860,"score":29,"level":0},{"x":960,"y":860,"score":44,"level":0},{"x":965,"y":860,"score":27,"level":0},{"x":1047,"y":860,"score":49,"level":0},{"x":1449,"y":860,"score":32,"level":0},{"x":448,"y":861,"score":45,"level":0},{"x":604,"y":861,"score":49,"level":0},{"x":717,"y":861,"score":28,"level":0},{"x":909,"y":861,"score":33,"level":0},{"x":1013,"y":861,"score":46,"level":0},{"x":1158,"y":861,"score":38,"level":0},{"x":1257,"y":861,"score":42,"level":0},{"x":1268,"y":861,"score":42,"level":0},{"x":1397,"y":861,"score":43,"level":0},{"x":475,"y":862,"score":33,"level":0},{"x":593,"y":862,"score":44,"level":0},{"x":610,"y":862,"score":60,"level":0},{"x":618,"y":862,"score":35,"level":0},{"x":686,"y":862,"score":33,"level":0},{"x":701,"y":862,"score":30,"level":0},{"x":822,"y":862,"score":56,"level":0},{"x":868,"y":862,"score":39,"level":0},{"x":895,"y":862,"score":30,"level":0},{"x":912,"y":862,"score":28,"level":0},{"x":992,"y":862,"score":28,"level":0},{"x":1007,"y":862,"score":36,"level":0},{"x":1125,"y":862,"score":28,"level":0},{"x":1147,"y":862,"score":51,"level":0},{"x":1225,"y":862,"score":49,"level":0},{"x":1273,"y":862,"score":29,"level":0},{"x":1350,"y":862,"score":29,"level":0},{"x":1414,"y":862,"score":62,"level":0},{"x":391,"y":863,"score":26,"level":0},{"x":625,"y":863,"score":28,"level":0},{"x":754,"y":863,"score":40,"level":0},{"x":781,"y":863,"score":30,"level":0},{"x":879,"y":863,"score":26,"level":0},{"x":931,"y":863,"score":26,"level":0},{"x":1141,"y":863,"score":29,"level":0},{"x":1176,"y":863,"score":33,"level":0},{"x":1193,"y":863,"score":37,"level":0},{"x":1288,"y":863,"score":76,"level":0},{"x":448,"y":864,"score":31,"level":0},{"x":503,"y":864,"score":43,"level":0},{"x":652,"y":864,"score":34,"level":0},{"x":757,"y":864,"score":28,"level":0},{"x":902,"y":864,"score":26,"level":0},{"x":1043,"y":864,"score":67,"level":0},{"x":1166,"y":864,"score":32,"level":0},{"x":417,"y":865,"score":44,"level":0},{"x":465,"y":865,"score":28,"level":0},{"x":470,"y":865,"score":33,"level":0},{"x":718,"y":865,"score":35,"level":0},{"x":889,"y":865,"score":45,"level":0},{"x":1153,"y":865,"score":37,"level":0},{"x":1195,"y":865,"score":47,"level":0},{"x":1449,"y":865,"score":42,"level":0},{"x":456,"y":866,"score":30,"level":0},{"x":710,"y":866,"score":31,"level":0},{"x":723,"y":866,"score":36,"level":0},{"x":960,"y":866,"score":43,"level":0},{"x":993,"y":866,"score":28,"level":0},{"x":1107,"y":866,"score":29,"level":0},{"x":1391,"y":866,"score":37,"level":0},{"x":610,"y":867,"score":42,"level":0},{"x":686,"y":867,"score":41,"level":0},{"x":807,"y":867,"score":29,"level":0},{"x":812,"y":867,"score":32,"level":0},{"x":891,"y":867,"score":57,"level":0},{"x":979,"y":867,"score":28,"level":0},{"x":1212,"y":867,"score":64,"level":0},{"x":1265,"y":867,"score":33,"level":0},{"x":1409,"y":867,"score":50,"level":0},{"x":377,"y":868,"score":26,"level":0},{"x":427,"y":868,"score":29,"level":0},{"x":438,"y":868,"score":28,"level":0},{"x":594,"y":868,"score":45,"level":0},{"x":658,"y":868,"score":64,"level":0},{"x":819,"y":868,"score":26,"level":0},{"x":849,"y":868,"score":83,"level":0},{"x":851,"y":868,"score":64,"level":0},{"x":909,"y":868,"score":32,"level":0},{"x":918,"y":868,"score":38,"level":0},{"x":941,"y":868,"score":40,"level":0},{"x":943,"y":868,"score":36,"level":0},{"x":952,"y":868,"score":43,"level":0},{"x":960,"y":868,"score":46,"level":0},{"x":1090,"y":868,"score":60,"level":0},{"x":1095,"y":868,"score":26,"level":0},{"x":1197,"y":868,"score":66,"level":0},{"x":1325,"y":868,"score":31,"level":0},{"x":383,"y":869,"score":48,"level":0},{"x":562,"y":869,"score":40,"level":0},{"x":667,"y":869,"score":42,"level":0},{"x":760,"y":869,"score":42,"level":0},{"x":772,"y":869,"score":26,"level":0},{"x":791,"y":869,"score":30,"level":0},{"x":844,"y":869,"score":27,"level":0},{"x":871,"y":869,"score":32,"level":0},{"x":1040,"y":869,"score":90,"level":0},{"x":1099,"y":869,"score":30,"level":0},{"x":423,"y":870,"score":30,"level":0},{"x":463,"y":870,"score":32,"level":0},{"x":706,"y":870,"score":28,"level":0},{"x":826,"y":870,"score":38,"level":0},{"x":877,"y":870,"score":60,"level":0},{"x":963,"y":870,"score":64,"level":0},{"x":968,"y":870,"score":30,"level":0},{"x":1009,"y":870,"score":48,"level":0},{"x":1222,"y":870,"score":35,"level":0},{"x":1256,"y":870,"score":26,"level":0},{"x":1326,"y":870,"score":37,"level":0},{"x":446,"y":871,"score":35,"level":0},{"x":509,"y":871,"score":33,"level":0},{"x":515,"y":871,"score":28,"level":0},{"x":551,"y":871,"score":27,"level":0},{"x":674,"y":871,"score":30,"level":0},{"x":695,"y":871,"score":30,"level":0},{"x":1165,"y":871,"score":36,"level":0},{"x":1237,"y":871,"score":26,"level":0},{"x":1272,"y":871,"score":34,"level":0},{"x":1319,"y":871,"score":34,"level":0},{"x":385,"y":872,"score":67,"level":0},{"x":457,"y":872,"score":32,"level":0},{"x":505,"y":872,"score":35,"level":0},{"x":521,"y":872,"score":36,"level":0},{"x":617,"y":872,"score":37,"level":0},{"x":665,"y":872,"score":33,"level":0},{"x":676,"y":872,"score":55,"level":0},{"x":747,"y":872,"score":26,"level":0},{"x":798,"y":872,"score":32,"level":0},{"x":878,"y":872,"score":37,"level":0},{"x":1081,"y":872,"score":41,"level":0},{"x":1128,"y":872,"score":38,"level":0},{"x":630,"y":873,"score":48,"level":0},{"x":714,"y":873,"score":29,"level":0},{"x":753,"y":873,"score":57,"level":0},{"x":1186,"y":873,"score":34,"level":0},{"x":1287,"y":873,"score":46,"level":0},{"x":1405,"y":873,"score":33,"level":0},{"x":1456,"y":873,"score":35,"level":0},{"x":447,"y":874,"score":26,"level":0},{"x":469,"y":874,"score":26,"level":0},{"x":540,"y":874,"score":30,"level":0},{"x":545,"y":874,"score":40,"level":0},{"x":1443,"y":874,"score":36,"level":0},{"x":418,"y":875,"score":41,"level":0},{"x":424,"y":875,"score":27,"level":0},{"x":429,"y":875,"score":28,"level":0},{"x":463,"y":875,"score":42,"level":0},{"x":769,"y":875,"score":28,"level":0},{"x":778,"y":875,"score":30,"level":0},{"x":1041,"y":875,"score":49,"level":0},{"x":1171,"y":875,"score":30,"level":0},{"x":1212,"y":875,"score":37,"level":0},{"x":1247,"y":875,"score":30,"level":0},{"x":1411,"y":875,"score":35,"level":0},{"x":515,"y":876,"score":27,"level":0},{"x":551,"y":876,"score":42,"level":0},{"x":562,"y":876,"score":44,"level":0},{"x":576,"y":876,"score":51,"level":0},{"x":636,"y":876,"score":29,"level":0},{"x":725,"y":876,"score":32,"level":0},{"x":758,"y":876,"score":43,"level":0},{"x":1008,"y":876,"score":70,"level":0},{"x":1103,"y":876,"score":47,"level":0},{"x":474,"y":877,"score":36,"level":0},{"x":590,"y":877,"score":28,"level":0},{"x":597,"y":877,"score":29,"level":0},{"x":669,"y":877,"score":51,"level":0},{"x":888,"y":877,"score":44,"level":0},{"x":942,"y":877,"score":30,"level":0},{"x":989,"y":877,"score":32,"level":0},{"x":1049,"y":877,"score":33,"level":0},{"x":1109,"y":877,"score":32,"level":0},{"x":1198,"y":877,"score":40,"level":0},{"x":628,"y":878,"score":28,"level":0},{"x":790,"y":878,"score":31,"level":0},{"x":856,"y":878,"score":52,"level":0},{"x":893,"y":878,"score":33,"level":0},{"x":1193,"y":878,"score":59,"level":0},{"x":1392,"y":878,"score":30,"level":0},{"x":377,"y":879,"score":49,"level":0},{"x":410,"y":879,"score":26,"level":0},{"x":602,"y":879,"score":52,"level":0},{"x":631,"y":879,"score":29,"level":0},{"x":663,"y":879,"score":26,"level":0},{"x":672,"y":879,"score":36,"level":0},{"x":720,"y":879,"score":29,"level":0},{"x":913,"y":879,"score":30,"level":0},{"x":930,"y":879,"score":26,"level":0},{"x":1141,"y":879,"score":26,"level":0},{"x":1222,"y":879,"score":53,"level":0},{"x":1230,"y":879,"score":28,"level":0},{"x":1398,"y":879,"score":40,"level":0},{"x":1437,"y":879,"score":38,"level":0},{"x":1443,"y":879,"score":44,"level":0},{"x":512,"y":880,"score":44,"level":0},{"x":649,"y":880,"score":39,"level":0},{"x":702,"y":880,"score":43,"level":0},{"x":830,"y":880,"score":74,"level":0},{"x":882,"y":880,"score":26,"level":0},{"x":907,"y":880,"score":34,"level":0},{"x":920,"y":880,"score":44,"level":0},{"x":1062,"y":880,"score":26,"level":0},{"x":1165,"y":880,"score":26,"level":0},{"x":1250,"y":880,"score":45,"level":0},{"x":1350,"y":880,"score":28,"level":0},{"x":570,"y":881,"score":32,"level":0},{"x":586,"y":881,"score":40,"level":0},{"x":592,"y":881,"score":37,"level":0},{"x":594,"y":881,"score":33,"level":0},{"x":673,"y":881,"score":29,"level":0},{"x":834,"y":881,"score":32,"level":0},{"x":839,"y":881,"score":52,"level":0},{"x":925,"y":881,"score":34,"level":0},{"x":1103,"y":881,"score":30,"level":0},{"x":1188,"y":881,"score":35,"level":0},{"x":497,"y":882,"score":41,"level":0},{"x":502,"y":882,"score":71,"level":0},{"x":712,"y":882,"score":26,"level":0},{"x":845,"y":882,"score":28,"level":0},{"x":854,"y":882,"score":57,"level":0},{"x":1085,"y":882,"score":37,"level":0},{"x":1092,"y":882,"score":27,"level":0},{"x":1343,"y":882,"score":30,"level":0},{"x":407,"y":883,"score":30,"level":0},{"x":596,"y":883,"score":36,"level":0},{"x":676,"y":883,"score":46,"level":0},{"x":893,"y":883,"score":31,"level":0},{"x":962,"y":883,"score":42,"level":0},{"x":1006,"y":883,"score":27,"level":0},{"x":1155,"y":883,"score":36,"level":0},{"x":1165,"y":883,"score":35,"level":0},{"x":1284,"y":883,"score":42,"level":0},{"x":539,"y":884,"score":34,"level":0},{"x":607,"y":884,"score":33,"level":0},{"x":638,"y":884,"score":28,"level":0},{"x":774,"y":884,"score":30,"level":0},{"x":811,"y":884,"score":44,"level":0},{"x":813,"y":884,"score":32,"level":0},{"x":975,"y":884,"score":34,"level":0},{"x":1134,"y":884,"score":30,"level":0},{"x":1240,"y":884,"score":38,"level":0},{"x":414,"y":885,"score":39,"level":0},{"x":549,"y":885,"score":28,"level":0},{"x":555,"y":885,"score":39,"level":0},{"x":647,"y":885,"score":48,"level":0},{"x":745,"y":885,"score":35,"level":0},{"x":818,"y":885,"score":42,"level":0},{"x":820,"y":885,"score":62,"level":0},{"x":859,"y":885,"score":41,"level":0},{"x":864,"y":885,"score":70,"level":0},{"x":920,"y":885,"score":30,"level":0},{"x":1290,"y":885,"score":43,"level":0},{"x":589,"y":886,"score":31,"level":0},{"x":624,"y":886,"score":26,"level":0},{"x":638,"y":886,"score":27,"level":0},{"x":757,"y":886,"score":30,"level":0},{"x":792,"y":886,"score":36,"level":0},{"x":839,"y":886,"score":36,"level":0},{"x":1004,"y":886,"score":59,"level":0},{"x":1071,"y":886,"score":29,"level":0},{"x":1250,"y":886,"score":48,"level":0},{"x":397,"y":887,"score":30,"level":0},{"x":517,"y":887,"score":36,"level":0},{"x":523,"y":887,"score":35,"level":0},{"x":533,"y":887,"score":49,"level":0},{"x":723,"y":887,"score":61,"level":0},{"x":797,"y":887,"score":33,"level":0},{"x":886,"y":887,"score":31,"level":0},{"x":915,"y":887,"score":33,"level":0},{"x":942,"y":887,"score":28,"level":0},{"x":955,"y":887,"score":42,"level":0},{"x":1265,"y":887,"score":58,"level":0},{"x":1269,"y":887,"score":30,"level":0},{"x":473,"y":888,"score":36,"level":0},{"x":893,"y":888,"score":37,"level":0},{"x":403,"y":889,"score":36,"level":0},{"x":456,"y":889,"score":30,"level":0},{"x":539,"y":889,"score":27,"level":0},{"x":544,"y":889,"score":32,"level":0},{"x":586,"y":889,"score":40,"level":0},{"x":600,"y":889,"score":34,"level":0},{"x":756,"y":889,"score":26,"level":0},{"x":1036,"y":889,"score":40,"level":0},{"x":1041,"y":889,"score":60,"level":0},{"x":1128,"y":889,"score":26,"level":0},{"x":1188,"y":889,"score":28,"level":0},{"x":1240,"y":889,"score":30,"level":0},{"x":1436,"y":889,"score":35,"level":0},{"x":607,"y":890,"score":26,"level":0},{"x":678,"y":890,"score":32,"level":0},{"x":685,"y":890,"score":35,"level":0},{"x":795,"y":890,"score":29,"level":0},{"x":811,"y":890,"score":37,"level":0},{"x":1101,"y":890,"score":34,"level":0},{"x":1181,"y":890,"score":36,"level":0},{"x":1333,"y":890,"score":40,"level":0},{"x":1462,"y":890,"score":32,"level":0},{"x":1471,"y":890,"score":30,"level":0},{"x":408,"y":891,"score":36,"level":0},{"x":700,"y":891,"score":44,"level":0},{"x":705,"y":891,"score":54,"level":0},{"x":748,"y":891,"score":41,"level":0},{"x":864,"y":891,"score":65,"level":0},{"x":992,"y":891,"score":28,"level":0},{"x":1010,"y":891,"score":65,"level":0},{"x":1059,"y":891,"score":30,"level":0},{"x":1071,"y":891,"score":39,"level":0},{"x":1222,"y":891,"score":49,"level":0},{"x":459,"y":892,"score":35,"level":0},{"x":471,"y":892,"score":29,"level":0},{"x":494,"y":892,"score":62,"level":0},{"x":578,"y":892,"score":30,"level":0},{"x":753,"y":892,"score":36,"level":0},{"x":839,"y":892,"score":38,"level":0},{"x":1004,"y":892,"score":30,"level":0},{"x":1446,"y":892,"score":27,"level":0},{"x":508,"y":893,"score":28,"level":0},{"x":560,"y":893,"score":26,"level":0},{"x":646,"y":893,"score":44,"level":0},{"x":676,"y":893,"score":28,"level":0},{"x":697,"y":893,"score":28,"level":0},{"x":758,"y":893,"score":28,"level":0},{"x":760,"y":893,"score":36,"level":0},{"x":765,"y":893,"score":44,"level":0},{"x":927,"y":893,"score":41,"level":0},{"x":940,"y":893,"score":68,"level":0},{"x":945,"y":893,"score":45,"level":0},{"x":1010,"y":893,"score":73,"level":0},{"x":1394,"y":893,"score":30,"level":0},{"x":464,"y":894,"score":29,"level":0},{"x":466,"y":894,"score":30,"level":0},{"x":890,"y":894,"score":27,"level":0},{"x":999,"y":894,"score":30,"level":0},{"x":1030,"y":894,"score":30,"level":0},{"x":1131,"y":894,"score":39,"level":0},{"x":1401,"y":894,"score":57,"level":0},{"x":1440,"y":894,"score":34,"level":0},{"x":543,"y":895,"score":32,"level":0},{"x":581,"y":895,"score":70,"level":0},{"x":620,"y":895,"score":33,"level":0},{"x":720,"y":895,"score":30,"level":0},{"x":1191,"y":895,"score":44,"level":0},{"x":1242,"y":895,"score":33,"level":0},{"x":1290,"y":895,"score":46,"level":0},{"x":1364,"y":895,"score":37,"level":0},{"x":565,"y":896,"score":43,"level":0},{"x":594,"y":896,"score":32,"level":0},{"x":688,"y":896,"score":36,"level":0},{"x":778,"y":896,"score":26,"level":0},{"x":869,"y":896,"score":83,"level":0},{"x":912,"y":896,"score":35,"level":0},{"x":1058,"y":896,"score":34,"level":0},{"x":1254,"y":896,"score":45,"level":0},{"x":459,"y":897,"score":28,"level":0},{"x":550,"y":897,"score":30,"level":0},{"x":567,"y":897,"score":44,"level":0},{"x":599,"y":897,"score":30,"level":0},{"x":693,"y":897,"score":31,"level":0},{"x":867,"y":897,"score":45,"level":0},{"x":956,"y":897,"score":35,"level":0},{"x":1031,"y":897,"score":36,"level":0},{"x":1051,"y":897,"score":32,"level":0},{"x":1055,"y":897,"score":28,"level":0},{"x":1064,"y":897,"score":30,"level":0},{"x":1321,"y":897,"score":34,"level":0},{"x":1331,"y":897,"score":26,"level":0},{"x":1349,"y":897,"score":36,"level":0},{"x":1392,"y":897,"score":34,"level":0},{"x":1415,"y":897,"score":45,"level":0},{"x":527,"y":898,"score":43,"level":0},{"x":720,"y":898,"score":29,"level":0},{"x":817,"y":898,"score":36,"level":0},{"x":918,"y":898,"score":26,"level":0},{"x":1012,"y":898,"score":49,"level":0},{"x":1354,"y":898,"score":28,"level":0},{"x":1457,"y":898,"score":30,"level":0},{"x":423,"y":899,"score":38,"level":0},{"x":428,"y":899,"score":34,"level":0},{"x":438,"y":899,"score":27,"level":0},{"x":512,"y":899,"score":26,"level":0},{"x":695,"y":899,"score":30,"level":0},{"x":757,"y":899,"score":30,"level":0},{"x":991,"y":899,"score":33,"level":0},{"x":1164,"y":899,"score":37,"level":0},{"x":1462,"y":899,"score":30,"level":0},{"x":416,"y":900,"score":32,"level":0},{"x":510,"y":900,"score":36,"level":0},{"x":762,"y":900,"score":64,"level":0},{"x":826,"y":900,"score":26,"level":0},{"x":868,"y":900,"score":52,"level":0},{"x":1411,"y":900,"score":51,"level":0},{"x":392,"y":901,"score":40,"level":0},{"x":456,"y":901,"score":28,"level":0},{"x":498,"y":901,"score":36,"level":0},{"x":564,"y":901,"score":50,"level":0},{"x":581,"y":901,"score":27,"level":0},{"x":609,"y":901,"score":40,"level":0},{"x":709,"y":901,"score":28,"level":0},{"x":768,"y":901,"score":29,"level":0},{"x":770,"y":901,"score":30,"level":0},{"x":806,"y":901,"score":43,"level":0},{"x":837,"y":901,"score":53,"level":0},{"x":857,"y":901,"score":33,"level":0},{"x":916,"y":901,"score":38,"level":0},{"x":1045,"y":901,"score":30,"level":0},{"x":1227,"y":901,"score":46,"level":0},{"x":633,"y":902,"score":41,"level":0},{"x":750,"y":902,"score":29,"level":0},{"x":788,"y":902,"score":30,"level":0},{"x":868,"y":902,"score":35,"level":0},{"x":887,"y":902,"score":44,"level":0},{"x":893,"y":902,"score":26,"level":0},{"x":924,"y":902,"score":35,"level":0},{"x":927,"y":902,"score":36,"level":0},{"x":978,"y":902,"score":29,"level":0},{"x":1153,"y":902,"score":27,"level":0},{"x":1222,"y":902,"score":32,"level":0},{"x":1443,"y":902,"score":30,"level":0},{"x":400,"y":903,"score":44,"level":0},{"x":466,"y":903,"score":66,"level":0},{"x":531,"y":903,"score":37,"level":0},{"x":571,"y":903,"score":51,"level":0},{"x":610,"y":903,"score":40,"level":0},{"x":785,"y":903,"score":34,"level":0},{"x":903,"y":903,"score":56,"level":0},{"x":905,"y":903,"score":45,"level":0},{"x":910,"y":903,"score":58,"level":0},{"x":949,"y":903,"score":32,"level":0},{"x":1131,"y":903,"score":30,"level":0},{"x":1178,"y":903,"score":27,"level":0},{"x":1237,"y":903,"score":35,"level":0},{"x":1468,"y":903,"score":40,"level":0},{"x":1470,"y":903,"score":40,"level":0},{"x":475,"y":904,"score":43,"level":0},{"x":544,"y":904,"score":38,"level":0},{"x":561,"y":904,"score":35,"level":0},{"x":577,"y":904,"score":26,"level":0},{"x":593,"y":904,"score":38,"level":0},{"x":643,"y":904,"score":70,"level":0},{"x":747,"y":904,"score":42,"level":0},{"x":763,"y":904,"score":46,"level":0},{"x":1141,"y":904,"score":28,"level":0},{"x":1277,"y":904,"score":34,"level":0},{"x":1325,"y":904,"score":34,"level":0},{"x":1330,"y":904,"score":28,"level":0},{"x":1489,"y":904,"score":26,"level":0},{"x":525,"y":905,"score":32,"level":0},{"x":752,"y":905,"score":46,"level":0},{"x":761,"y":905,"score":41,"level":0},{"x":827,"y":905,"score":35,"level":0},{"x":920,"y":905,"score":29,"level":0},{"x":938,"y":905,"score":43,"level":0},{"x":1124,"y":905,"score":32,"level":0},{"x":1282,"y":905,"score":52,"level":0},{"x":492,"y":906,"score":33,"level":0},{"x":496,"y":906,"score":26,"level":0},{"x":771,"y":906,"score":33,"level":0},{"x":784,"y":906,"score":30,"level":0},{"x":813,"y":906,"score":28,"level":0},{"x":1032,"y":906,"score":73,"level":0},{"x":1038,"y":906,"score":29,"level":0},{"x":1042,"y":906,"score":48,"level":0},{"x":1055,"y":906,"score":29,"level":0},{"x":1060,"y":906,"score":33,"level":0},{"x":1198,"y":906,"score":61,"level":0},{"x":1250,"y":906,"score":27,"level":0},{"x":1451,"y":906,"score":26,"level":0},{"x":428,"y":907,"score":40,"level":0},{"x":586,"y":907,"score":33,"level":0},{"x":642,"y":907,"score":26,"level":0},{"x":719,"y":907,"score":52,"level":0},{"x":845,"y":907,"score":36,"level":0},{"x":870,"y":907,"score":42,"level":0},{"x":902,"y":907,"score":29,"level":0},{"x":955,"y":907,"score":30,"level":0},{"x":1030,"y":907,"score":68,"level":0},{"x":1075,"y":907,"score":26,"level":0},{"x":1288,"y":907,"score":45,"level":0},{"x":1342,"y":907,"score":40,"level":0},{"x":1414,"y":907,"score":39,"level":0},{"x":460,"y":908,"score":56,"level":0},{"x":596,"y":908,"score":36,"level":0},{"x":619,"y":908,"score":45,"level":0},{"x":724,"y":908,"score":32,"level":0},{"x":836,"y":908,"score":34,"level":0},{"x":1004,"y":908,"score":52,"level":0},{"x":1154,"y":908,"score":26,"level":0},{"x":1226,"y":908,"score":53,"level":0},{"x":1293,"y":908,"score":41,"level":0},{"x":1446,"y":908,"score":38,"level":0},{"x":418,"y":909,"score":35,"level":0},{"x":423,"y":909,"score":31,"level":0},{"x":465,"y":909,"score":45,"level":0},{"x":574,"y":909,"score":36,"level":0},{"x":867,"y":909,"score":26,"level":0},{"x":994,"y":909,"score":27,"level":0},{"x":1126,"y":909,"score":28,"level":0},{"x":1191,"y":909,"score":26,"level":0},{"x":611,"y":910,"score":30,"level":0},{"x":827,"y":910,"score":46,"level":0},{"x":861,"y":910,"score":30,"level":0},{"x":941,"y":910,"score":42,"level":0},{"x":1270,"y":910,"score":32,"level":0},{"x":383,"y":911,"score":28,"level":0},{"x":496,"y":911,"score":44,"level":0},{"x":508,"y":911,"score":27,"level":0},{"x":563,"y":911,"score":28,"level":0},{"x":763,"y":911,"score":54,"level":0},{"x":785,"y":911,"score":48,"level":0},{"x":1421,"y":911,"score":51,"level":0},{"x":1450,"y":911,"score":27,"level":0},{"x":516,"y":912,"score":34,"level":0},{"x":668,"y":912,"score":30,"level":0},{"x":776,"y":912,"score":27,"level":0},{"x":987,"y":912,"score":26,"level":0},{"x":1202,"y":912,"score":38,"level":0},{"x":1454,"y":912,"score":38,"level":0},{"x":1472,"y":912,"score":28,"level":0},{"x":1490,"y":912,"score":32,"level":0},{"x":720,"y":913,"score":28,"level":0},{"x":746,"y":913,"score":55,"level":0},{"x":755,"y":913,"score":27,"level":0},{"x":874,"y":913,"score":28,"level":0},{"x":885,"y":913,"score":54,"level":0},{"x":1041,"y":913,"score":28,"level":0},{"x":1081,"y":913,"score":29,"level":0},{"x":1122,"y":913,"score":27,"level":0},{"x":1459,"y":913,"score":43,"level":0},{"x":394,"y":914,"score":28,"level":0},{"x":417,"y":914,"score":41,"level":0},{"x":489,"y":914,"score":26,"level":0},{"x":503,"y":914,"score":41,"level":0},{"x":631,"y":914,"score":29,"level":0},{"x":650,"y":914,"score":30,"level":0},{"x":668,"y":914,"score":29,"level":0},{"x":1007,"y":914,"score":28,"level":0},{"x":1047,"y":914,"score":40,"level":0},{"x":1101,"y":914,"score":70,"level":0},{"x":1174,"y":914,"score":28,"level":0},{"x":1234,"y":914,"score":34,"level":0},{"x":1467,"y":914,"score":29,"level":0},{"x":468,"y":915,"score":31,"level":0},{"x":584,"y":915,"score":33,"level":0},{"x":655,"y":915,"score":50,"level":0},{"x":658,"y":915,"score":36,"level":0},{"x":718,"y":915,"score":35,"level":0},{"x":744,"y":915,"score":27,"level":0},{"x":832,"y":915,"score":38,"level":0},{"x":862,"y":915,"score":39,"level":0},{"x":1055,"y":915,"score":26,"level":0},{"x":1060,"y":915,"score":28,"level":0},{"x":1186,"y":915,"score":36,"level":0},{"x":1480,"y":915,"score":27,"level":0},{"x":596,"y":916,"score":36,"level":0},{"x":768,"y":916,"score":44,"level":0},{"x":777,"y":916,"score":56,"level":0},{"x":918,"y":916,"score":48,"level":0},{"x":1006,"y":916,"score":34,"level":0},{"x":1288,"y":916,"score":26,"level":0},{"x":1329,"y":916,"score":39,"level":0},{"x":550,"y":917,"score":32,"level":0},{"x":630,"y":917,"score":32,"level":0},{"x":641,"y":917,"score":36,"level":0},{"x":692,"y":917,"score":53,"level":0},{"x":694,"y":917,"score":54,"level":0},{"x":749,"y":917,"score":45,"level":0},{"x":774,"y":917,"score":27,"level":0},{"x":853,"y":917,"score":30,"level":0},{"x":899,"y":917,"score":44,"level":0},{"x":1140,"y":917,"score":31,"level":0},{"x":1451,"y":917,"score":42,"level":0},{"x":449,"y":918,"score":26,"level":0},{"x":577,"y":918,"score":36,"level":0},{"x":610,"y":918,"score":82,"level":0},{"x":613,"y":918,"score":49,"level":0},{"x":617,"y":918,"score":47,"level":0},{"x":628,"y":918,"score":31,"level":0},{"x":671,"y":918,"score":28,"level":0},{"x":825,"y":918,"score":40,"level":0},{"x":869,"y":918,"score":58,"level":0},{"x":887,"y":918,"score":29,"level":0},{"x":974,"y":918,"score":43,"level":0},{"x":1033,"y":918,"score":38,"level":0},{"x":1038,"y":918,"score":32,"level":0},{"x":1331,"y":918,"score":36,"level":0},{"x":418,"y":919,"score":33,"level":0},{"x":423,"y":919,"score":26,"level":0},{"x":431,"y":919,"score":28,"level":0},{"x":491,"y":919,"score":64,"level":0},{"x":496,"y":919,"score":34,"level":0},{"x":651,"y":919,"score":34,"level":0},{"x":680,"y":919,"score":40,"level":0},{"x":904,"y":919,"score":34,"level":0},{"x":926,"y":919,"score":30,"level":0},{"x":944,"y":919,"score":46,"level":0},{"x":1087,"y":919,"score":36,"level":0},{"x":1127,"y":919,"score":56,"level":0},{"x":1234,"y":919,"score":39,"level":0},{"x":1239,"y":919,"score":40,"level":0},{"x":460,"y":920,"score":26,"level":0},{"x":556,"y":920,"score":58,"level":0},{"x":698,"y":920,"score":32,"level":0},{"x":870,"y":920,"score":52,"level":0},{"x":1008,"y":920,"score":28,"level":0},{"x":1476,"y":920,"score":26,"level":0},{"x":768,"y":921,"score":47,"level":0},{"x":950,"y":921,"score":31,"level":0},{"x":960,"y":921,"score":38,"level":0},{"x":1170,"y":921,"score":41,"level":0},{"x":1291,"y":921,"score":26,"level":0},{"x":1354,"y":921,"score":46,"level":0},{"x":1374,"y":921,"score":32,"level":0},{"x":1379,"y":921,"score":29,"level":0},{"x":1448,"y":921,"score":28,"level":0},{"x":550,"y":922,"score":48,"level":0},{"x":552,"y":922,"score":46,"level":0},{"x":653,"y":922,"score":29,"level":0},{"x":672,"y":922,"score":32,"level":0},{"x":681,"y":922,"score":37,"level":0},{"x":750,"y":922,"score":42,"level":0},{"x":889,"y":922,"score":28,"level":0},{"x":975,"y":922,"score":33,"level":0},{"x":984,"y":922,"score":27,"level":0},{"x":1197,"y":922,"score":70,"level":0},{"x":1250,"y":922,"score":30,"level":0},{"x":520,"y":923,"score":40,"level":0},{"x":569,"y":923,"score":32,"level":0},{"x":690,"y":923,"score":31,"level":0},{"x":980,"y":923,"score":45,"level":0},{"x":1097,"y":923,"score":34,"level":0},{"x":1325,"y":923,"score":51,"level":0},{"x":1411,"y":923,"score":32,"level":0},{"x":1460,"y":923,"score":32,"level":0},{"x":380,"y":924,"score":56,"level":0},{"x":392,"y":924,"score":31,"level":0},{"x":534,"y":924,"score":31,"level":0},{"x":621,"y":924,"score":31,"level":0},{"x":628,"y":924,"score":29,"level":0},{"x":706,"y":924,"score":54,"level":0},{"x":737,"y":924,"score":40,"level":0},{"x":860,"y":924,"score":41,"level":0},{"x":1030,"y":924,"score":28,"level":0},{"x":1340,"y":924,"score":36,"level":0},{"x":537,"y":925,"score":50,"level":0},{"x":699,"y":925,"score":27,"level":0},{"x":769,"y":925,"score":35,"level":0},{"x":927,"y":925,"score":84,"level":0},{"x":944,"y":925,"score":40,"level":0},{"x":997,"y":925,"score":34,"level":0},{"x":1124,"y":925,"score":39,"level":0},{"x":402,"y":926,"score":26,"level":0},{"x":506,"y":926,"score":53,"level":0},{"x":579,"y":926,"score":28,"level":0},{"x":742,"y":926,"score":44,"level":0},{"x":844,"y":926,"score":26,"level":0},{"x":870,"y":926,"score":30,"level":0},{"x":911,"y":926,"score":30,"level":0},{"x":1027,"y":926,"score":54,"level":0},{"x":1222,"y":926,"score":50,"level":0},{"x":1373,"y":926,"score":29,"level":0},{"x":683,"y":927,"score":51,"level":0},{"x":794,"y":927,"score":88,"level":0},{"x":816,"y":927,"score":54,"level":0},{"x":821,"y":927,"score":37,"level":0},{"x":920,"y":927,"score":46,"level":0},{"x":962,"y":927,"score":28,"level":0},{"x":1289,"y":927,"score":52,"level":0},{"x":1352,"y":927,"score":46,"level":0},{"x":552,"y":928,"score":26,"level":0},{"x":668,"y":928,"score":41,"level":0},{"x":1055,"y":928,"score":30,"level":0},{"x":1262,"y":928,"score":38,"level":0},{"x":408,"y":929,"score":27,"level":0},{"x":434,"y":929,"score":33,"level":0},{"x":490,"y":929,"score":75,"level":0},{"x":622,"y":929,"score":27,"level":0},{"x":633,"y":929,"score":68,"level":0},{"x":689,"y":929,"score":40,"level":0},{"x":721,"y":929,"score":42,"level":0},{"x":737,"y":929,"score":35,"level":0},{"x":752,"y":929,"score":61,"level":0},{"x":761,"y":929,"score":40,"level":0},{"x":782,"y":929,"score":27,"level":0},{"x":952,"y":929,"score":26,"level":0},{"x":1127,"y":929,"score":56,"level":0},{"x":1325,"y":929,"score":42,"level":0},{"x":1453,"y":929,"score":58,"level":0},{"x":447,"y":930,"score":36,"level":0},{"x":498,"y":930,"score":42,"level":0},{"x":701,"y":930,"score":39,"level":0},{"x":709,"y":930,"score":114,"level":0},{"x":712,"y":930,"score":42,"level":0},{"x":727,"y":930,"score":45,"level":0},{"x":795,"y":930,"score":33,"level":0},{"x":879,"y":930,"score":79,"level":0},{"x":1098,"y":930,"score":26,"level":0},{"x":1138,"y":930,"score":26,"level":0},{"x":1254,"y":930,"score":26,"level":0},{"x":1294,"y":930,"score":27,"level":0},{"x":1321,"y":930,"score":36,"level":0},{"x":575,"y":931,"score":34,"level":0},{"x":504,"y":932,"score":42,"level":0},{"x":596,"y":932,"score":50,"level":0},{"x":634,"y":932,"score":57,"level":0},{"x":653,"y":932,"score":44,"level":0},{"x":754,"y":932,"score":38,"level":0},{"x":762,"y":932,"score":30,"level":0},{"x":847,"y":932,"score":31,"level":0},{"x":964,"y":932,"score":27,"level":0},{"x":1026,"y":932,"score":49,"level":0},{"x":1144,"y":932,"score":26,"level":0},{"x":530,"y":933,"score":43,"level":0},{"x":772,"y":933,"score":48,"level":0},{"x":843,"y":933,"score":44,"level":0},{"x":923,"y":933,"score":26,"level":0},{"x":1033,"y":933,"score":52,"level":0},{"x":1124,"y":933,"score":26,"level":0},{"x":1214,"y":933,"score":40,"level":0},{"x":382,"y":934,"score":32,"level":0},{"x":494,"y":934,"score":32,"level":0},{"x":509,"y":934,"score":26,"level":0},{"x":608,"y":934,"score":62,"level":0},{"x":854,"y":934,"score":56,"level":0},{"x":991,"y":934,"score":33,"level":0},{"x":1150,"y":934,"score":31,"level":0},{"x":1402,"y":934,"score":26,"level":0},{"x":1469,"y":934,"score":142,"level":0},{"x":1475,"y":934,"score":125,"level":0},{"x":1489,"y":934,"score":37,"level":0},{"x":482,"y":935,"score":33,"level":0},{"x":511,"y":935,"score":35,"level":0},{"x":553,"y":935,"score":30,"level":0},{"x":639,"y":935,"score":66,"level":0},{"x":673,"y":935,"score":74,"level":0},{"x":676,"y":935,"score":50,"level":0},{"x":682,"y":935,"score":37,"level":0},{"x":688,"y":935,"score":36,"level":0},{"x":732,"y":935,"score":31,"level":0},{"x":738,"y":935,"score":40,"level":0},{"x":763,"y":935,"score":38,"level":0},{"x":885,"y":935,"score":35,"level":0},{"x":929,"y":935,"score":29,"level":0},{"x":1201,"y":935,"score":50,"level":0},{"x":1242,"y":935,"score":29,"level":0},{"x":1247,"y":935,"score":34,"level":0},{"x":1345,"y":935,"score":33,"level":0},{"x":456,"y":936,"score":27,"level":0},{"x":567,"y":936,"score":29,"level":0},{"x":645,"y":936,"score":63,"level":0},{"x":693,"y":936,"score":30,"level":0},{"x":719,"y":936,"score":30,"level":0},{"x":811,"y":936,"score":26,"level":0},{"x":831,"y":936,"score":44,"level":0},{"x":900,"y":936,"score":30,"level":0},{"x":924,"y":936,"score":28,"level":0},{"x":945,"y":936,"score":55,"level":0},{"x":1073,"y":936,"score":30,"level":0},{"x":1325,"y":936,"score":31,"level":0},{"x":1422,"y":936,"score":36,"level":0},{"x":482,"y":937,"score":44,"level":0},{"x":729,"y":937,"score":52,"level":0},{"x":759,"y":937,"score":26,"level":0},{"x":804,"y":937,"score":28,"level":0},{"x":877,"y":937,"score":44,"level":0},{"x":962,"y":937,"score":26,"level":0},{"x":1179,"y":937,"score":28,"level":0},{"x":1226,"y":937,"score":42,"level":0},{"x":1320,"y":937,"score":52,"level":0},{"x":377,"y":938,"score":44,"level":0},{"x":417,"y":938,"score":29,"level":0},{"x":598,"y":938,"score":52,"level":0},{"x":688,"y":938,"score":49,"level":0},{"x":697,"y":938,"score":29,"level":0},{"x":839,"y":938,"score":34,"level":0},{"x":843,"y":938,"score":60,"level":0},{"x":884,"y":938,"score":36,"level":0},{"x":887,"y":938,"score":35,"level":0},{"x":1030,"y":938,"score":36,"level":0},{"x":1167,"y":938,"score":31,"level":0},{"x":1231,"y":938,"score":34,"level":0},{"x":1235,"y":938,"score":46,"level":0},{"x":1259,"y":938,"score":32,"level":0},{"x":435,"y":939,"score":34,"level":0},{"x":448,"y":939,"score":49,"level":0},{"x":507,"y":939,"score":34,"level":0},{"x":686,"y":939,"score":26,"level":0},{"x":694,"y":939,"score":48,"level":0},{"x":756,"y":939,"score":46,"level":0},{"x":771,"y":939,"score":27,"level":0},{"x":776,"y":939,"score":39,"level":0},{"x":1130,"y":939,"score":52,"level":0},{"x":1276,"y":939,"score":27,"level":0},{"x":427,"y":940,"score":30,"level":0},{"x":429,"y":940,"score":44,"level":0},{"x":606,"y":940,"score":62,"level":0},{"x":699,"y":940,"score":44,"level":0},{"x":712,"y":940,"score":35,"level":0},{"x":1007,"y":940,"score":60,"level":0},{"x":1082,"y":940,"score":28,"level":0},{"x":1087,"y":940,"score":31,"level":0},{"x":1112,"y":940,"score":27,"level":0},{"x":1241,"y":940,"score":29,"level":0},{"x":1326,"y":940,"score":31,"level":0},{"x":1377,"y":940,"score":28,"level":0},{"x":1390,"y":940,"score":34,"level":0},{"x":1458,"y":940,"score":66,"level":0},{"x":1470,"y":940,"score":43,"level":0},{"x":1484,"y":940,"score":139,"level":0},{"x":392,"y":941,"score":40,"level":0},{"x":462,"y":941,"score":48,"level":0},{"x":475,"y":941,"score":38,"level":0},{"x":477,"y":941,"score":57,"level":0},{"x":517,"y":941,"score":31,"level":0},{"x":553,"y":941,"score":32,"level":0},{"x":715,"y":941,"score":47,"level":0},{"x":753,"y":941,"score":47,"level":0},{"x":921,"y":941,"score":29,"level":0},{"x":1077,"y":941,"score":48,"level":0},{"x":1360,"y":941,"score":26,"level":0},{"x":1422,"y":941,"score":32,"level":0},{"x":394,"y":942,"score":32,"level":0},{"x":482,"y":942,"score":47,"level":0},{"x":487,"y":942,"score":27,"level":0},{"x":491,"y":942,"score":29,"level":0},{"x":545,"y":942,"score":29,"level":0},{"x":658,"y":942,"score":60,"level":0},{"x":664,"y":942,"score":60,"level":0},{"x":857,"y":942,"score":46,"level":0},{"x":891,"y":942,"score":49,"level":0},{"x":896,"y":942,"score":29,"level":0},{"x":1049,"y":942,"score":33,"level":0},{"x":1104,"y":942,"score":46,"level":0},{"x":383,"y":943,"score":40,"level":0},{"x":550,"y":943,"score":26,"level":0},{"x":684,"y":943,"score":62,"level":0},{"x":752,"y":943,"score":50,"level":0},{"x":764,"y":943,"score":26,"level":0},{"x":766,"y":943,"score":36,"level":0},{"x":834,"y":943,"score":33,"level":0},{"x":878,"y":943,"score":100,"level":0},{"x":1260,"y":943,"score":28,"level":0},{"x":1324,"y":943,"score":80,"level":0},{"x":1349,"y":943,"score":30,"level":0},{"x":385,"y":944,"score":35,"level":0},{"x":412,"y":944,"score":32,"level":0},{"x":636,"y":944,"score":62,"level":0},{"x":642,"y":944,"score":29,"level":0},{"x":679,"y":944,"score":42,"level":0},{"x":778,"y":944,"score":35,"level":0},{"x":803,"y":944,"score":34,"level":0},{"x":844,"y":944,"score":31,"level":0},{"x":1340,"y":944,"score":29,"level":0},{"x":1477,"y":944,"score":52,"level":0},{"x":434,"y":945,"score":26,"level":0},{"x":448,"y":945,"score":43,"level":0},{"x":722,"y":945,"score":49,"level":0},{"x":792,"y":945,"score":31,"level":0},{"x":916,"y":945,"score":36,"level":0},{"x":961,"y":945,"score":52,"level":0},{"x":1125,"y":945,"score":41,"level":0},{"x":1132,"y":945,"score":47,"level":0},{"x":1153,"y":945,"score":29,"level":0},{"x":1216,"y":945,"score":29,"level":0},{"x":385,"y":946,"score":28,"level":0},{"x":539,"y":946,"score":38,"level":0},{"x":578,"y":946,"score":64,"level":0},{"x":584,"y":946,"score":129,"level":0},{"x":668,"y":946,"score":26,"level":0},{"x":842,"y":946,"score":38,"level":0},{"x":981,"y":946,"score":32,"level":0},{"x":1119,"y":946,"score":70,"level":0},{"x":1315,"y":946,"score":35,"level":0},{"x":1327,"y":946,"score":32,"level":0},{"x":398,"y":947,"score":34,"level":0},{"x":455,"y":947,"score":45,"level":0},{"x":526,"y":947,"score":41,"level":0},{"x":532,"y":947,"score":26,"level":0},{"x":1027,"y":947,"score":46,"level":0},{"x":1194,"y":947,"score":28,"level":0},{"x":1240,"y":947,"score":31,"level":0},{"x":1289,"y":947,"score":33,"level":0},{"x":403,"y":948,"score":34,"level":0},{"x":654,"y":948,"score":31,"level":0},{"x":866,"y":948,"score":76,"level":0},{"x":891,"y":948,"score":34,"level":0},{"x":953,"y":948,"score":60,"level":0},{"x":1032,"y":948,"score":31,"level":0},{"x":1059,"y":948,"score":38,"level":0},{"x":1085,"y":948,"score":40,"level":0},{"x":1255,"y":948,"score":30,"level":0},{"x":1377,"y":948,"score":30,"level":0},{"x":1430,"y":948,"score":45,"level":0},{"x":1436,"y":948,"score":44,"level":0},{"x":652,"y":949,"score":50,"level":0},{"x":679,"y":949,"score":54,"level":0},{"x":692,"y":949,"score":34,"level":0},{"x":707,"y":949,"score":30,"level":0},{"x":1139,"y":949,"score":32,"level":0},{"x":1298,"y":949,"score":61,"level":0},{"x":473,"y":950,"score":43,"level":0},{"x":517,"y":950,"score":31,"level":0},{"x":598,"y":950,"score":82,"level":0},{"x":654,"y":950,"score":41,"level":0},{"x":697,"y":950,"score":48,"level":0},{"x":715,"y":950,"score":37,"level":0},{"x":745,"y":950,"score":40,"level":0},{"x":763,"y":950,"score":42,"level":0},{"x":858,"y":950,"score":28,"level":0},{"x":1046,"y":950,"score":28,"level":0},{"x":1172,"y":950,"score":32,"level":0},{"x":1334,"y":950,"score":28,"level":0},{"x":419,"y":951,"score":34,"level":0},{"x":652,"y":951,"score":35,"level":0},{"x":776,"y":951,"score":28,"level":0},{"x":876,"y":951,"score":72,"level":0},{"x":896,"y":951,"score":36,"level":0},{"x":904,"y":951,"score":34,"level":0},{"x":946,"y":951,"score":74,"level":0},{"x":1009,"y":951,"score":26,"level":0},{"x":1197,"y":951,"score":33,"level":0},{"x":1325,"y":951,"score":86,"level":0},{"x":1401,"y":951,"score":42,"level":0},{"x":416,"y":952,"score":54,"level":0},{"x":440,"y":952,"score":50,"level":0},{"x":642,"y":952,"score":50,"level":0},{"x":684,"y":952,"score":52,"level":0},{"x":689,"y":952,"score":39,"level":0},{"x":790,"y":952,"score":29,"level":0},{"x":887,"y":952,"score":36,"level":0},{"x":964,"y":952,"score":50,"level":0},{"x":1245,"y":952,"score":30,"level":0},{"x":1266,"y":952,"score":42,"level":0},{"x":1420,"y":952,"score":38,"level":0},{"x":378,"y":953,"score":30,"level":0},{"x":478,"y":953,"score":40,"level":0},{"x":526,"y":953,"score":57,"level":0},{"x":647,"y":953,"score":33,"level":0},{"x":713,"y":953,"score":29,"level":0},{"x":733,"y":953,"score":38,"level":0},{"x":759,"y":953,"score":57,"level":0},{"x":954,"y":953,"score":58,"level":0},{"x":996,"y":953,"score":34,"level":0},{"x":1095,"y":953,"score":43,"level":0},{"x":1241,"y":953,"score":37,"level":0},{"x":1255,"y":953,"score":32,"level":0},{"x":1264,"y":953,"score":32,"level":0},{"x":469,"y":954,"score":32,"level":0},{"x":630,"y":954,"score":87,"level":0},{"x":920,"y":954,"score":28,"level":0},{"x":929,"y":954,"score":26,"level":0},{"x":961,"y":954,"score":34,"level":0},{"x":971,"y":954,"score":36,"level":0},{"x":976,"y":954,"score":31,"level":0},{"x":1278,"y":954,"score":30,"level":0},{"x":1377,"y":954,"score":26,"level":0},{"x":529,"y":955,"score":49,"level":0},{"x":543,"y":955,"score":40,"level":0},{"x":594,"y":955,"score":34,"level":0},{"x":645,"y":955,"score":30,"level":0},{"x":903,"y":955,"score":36,"level":0},{"x":1039,"y":955,"score":34,"level":0},{"x":1217,"y":955,"score":30,"level":0},{"x":1233,"y":955,"score":34,"level":0},{"x":1284,"y":955,"score":36,"level":0},{"x":1467,"y":955,"score":32,"level":0},{"x":1471,"y":955,"score":42,"level":0},{"x":392,"y":956,"score":45,"level":0},{"x":460,"y":956,"score":33,"level":0},{"x":498,"y":956,"score":31,"level":0},{"x":705,"y":956,"score":33,"level":0},{"x":746,"y":956,"score":46,"level":0},{"x":776,"y":956,"score":32,"level":0},{"x":781,"y":956,"score":59,"level":0},{"x":847,"y":956,"score":54,"level":0},{"x":1127,"y":956,"score":78,"level":0},{"x":1276,"y":956,"score":30,"level":0},{"x":1327,"y":956,"score":55,"level":0},{"x":1334,"y":956,"score":47,"level":0},{"x":1435,"y":956,"score":43,"level":0},{"x":403,"y":957,"score":35,"level":0},{"x":442,"y":957,"score":41,"level":0},{"x":697,"y":957,"score":32,"level":0},{"x":740,"y":957,"score":28,"level":0},{"x":771,"y":957,"score":34,"level":0},{"x":1133,"y":957,"score":43,"level":0},{"x":1356,"y":957,"score":32,"level":0},{"x":1389,"y":957,"score":27,"level":0},{"x":377,"y":958,"score":28,"level":0},{"x":587,"y":958,"score":28,"level":0},{"x":678,"y":958,"score":47,"level":0},{"x":788,"y":958,"score":97,"level":0},{"x":808,"y":958,"score":29,"level":0},{"x":889,"y":958,"score":39,"level":0},{"x":1153,"y":958,"score":74,"level":0},{"x":1406,"y":958,"score":38,"level":0},{"x":1455,"y":958,"score":29,"level":0},{"x":1461,"y":958,"score":64,"level":0},{"x":552,"y":959,"score":34,"level":0},{"x":596,"y":959,"score":33,"level":0},{"x":665,"y":959,"score":28,"level":0},{"x":961,"y":959,"score":44,"level":0},{"x":1159,"y":959,"score":45,"level":0},{"x":475,"y":960,"score":27,"level":0},{"x":485,"y":960,"score":29,"level":0},{"x":557,"y":960,"score":30,"level":0},{"x":560,"y":960,"score":42,"level":0},{"x":695,"y":960,"score":37,"level":0},{"x":731,"y":960,"score":27,"level":0},{"x":794,"y":960,"score":34,"level":0},{"x":819,"y":960,"score":44,"level":0},{"x":824,"y":960,"score":29,"level":0},{"x":953,"y":960,"score":29,"level":0},{"x":1083,"y":960,"score":28,"level":0},{"x":1180,"y":960,"score":56,"level":0},{"x":1185,"y":960,"score":30,"level":0},{"x":1476,"y":960,"score":48,"level":0},{"x":503,"y":961,"score":46,"level":0},{"x":524,"y":961,"score":27,"level":0},{"x":529,"y":961,"score":44,"level":0},{"x":605,"y":961,"score":54,"level":0},{"x":636,"y":961,"score":64,"level":0},{"x":670,"y":961,"score":40,"level":0},{"x":690,"y":961,"score":48,"level":0},{"x":866,"y":961,"score":38,"level":0},{"x":892,"y":961,"score":31,"level":0},{"x":964,"y":961,"score":26,"level":0},{"x":975,"y":961,"score":30,"level":0},{"x":1174,"y":961,"score":44,"level":0},{"x":1272,"y":961,"score":34,"level":0},{"x":1275,"y":961,"score":28,"level":0},{"x":1345,"y":961,"score":38,"level":0},{"x":1413,"y":961,"score":30,"level":0},{"x":1423,"y":961,"score":37,"level":0},{"x":464,"y":962,"score":28,"level":0},{"x":631,"y":962,"score":64,"level":0},{"x":664,"y":962,"score":29,"level":0},{"x":746,"y":962,"score":63,"level":0},{"x":754,"y":962,"score":41,"level":0},{"x":933,"y":962,"score":45,"level":0},{"x":1093,"y":962,"score":31,"level":0},{"x":1198,"y":962,"score":72,"level":0},{"x":1333,"y":962,"score":32,"level":0},{"x":468,"y":963,"score":32,"level":0},{"x":544,"y":963,"score":42,"level":0},{"x":669,"y":963,"score":32,"level":0},{"x":725,"y":963,"score":28,"level":0},{"x":906,"y":963,"score":37,"level":0},{"x":979,"y":963,"score":30,"level":0},{"x":1063,"y":963,"score":30,"level":0},{"x":1100,"y":963,"score":47,"level":0},{"x":1164,"y":963,"score":48,"level":0},{"x":1221,"y":963,"score":47,"level":0},{"x":1281,"y":963,"score":37,"level":0},{"x":1454,"y":963,"score":47,"level":0},{"x":405,"y":964,"score":26,"level":0},{"x":500,"y":964,"score":51,"level":0},{"x":583,"y":964,"score":37,"level":0},{"x":603,"y":964,"score":50,"level":0},{"x":605,"y":964,"score":80,"level":0},{"x":860,"y":964,"score":67,"level":0},{"x":900,"y":964,"score":26,"level":0},{"x":1029,"y":964,"score":52,"level":0},{"x":1056,"y":964,"score":29,"level":0},{"x":1158,"y":964,"score":63,"level":0},{"x":1170,"y":964,"score":35,"level":0},{"x":1359,"y":964,"score":30,"level":0},{"x":1364,"y":964,"score":29,"level":0},{"x":492,"y":965,"score":46,"level":0},{"x":552,"y":965,"score":29,"level":0},{"x":709,"y":965,"score":30,"level":0},{"x":758,"y":965,"score":56,"level":0},{"x":850,"y":965,"score":36,"level":0},{"x":865,"y":965,"score":54,"level":0},{"x":887,"y":965,"score":31,"level":0},{"x":994,"y":965,"score":44,"level":0},{"x":1010,"y":965,"score":59,"level":0},{"x":1080,"y":965,"score":28,"level":0},{"x":1175,"y":965,"score":29,"level":0},{"x":1297,"y":965,"score":31,"level":0},{"x":1373,"y":965,"score":30,"level":0},{"x":636,"y":966,"score":38,"level":0},{"x":714,"y":966,"score":54,"level":0},{"x":719,"y":966,"score":50,"level":0},{"x":809,"y":966,"score":28,"level":0},{"x":814,"y":966,"score":32,"level":0},{"x":990,"y":966,"score":32,"level":0},{"x":1332,"y":966,"score":30,"level":0},{"x":418,"y":967,"score":43,"level":0},{"x":424,"y":967,"score":36,"level":0},{"x":458,"y":967,"score":35,"level":0},{"x":464,"y":967,"score":27,"level":0},{"x":564,"y":967,"score":35,"level":0},{"x":641,"y":967,"score":64,"level":0},{"x":678,"y":967,"score":32,"level":0},{"x":788,"y":967,"score":49,"level":0},{"x":799,"y":967,"score":28,"level":0},{"x":840,"y":967,"score":34,"level":0},{"x":893,"y":967,"score":62,"level":0},{"x":1065,"y":967,"score":28,"level":0},{"x":1124,"y":967,"score":52,"level":0},{"x":1148,"y":967,"score":29,"level":0},{"x":1213,"y":967,"score":65,"level":0},{"x":1260,"y":967,"score":29,"level":0},{"x":1265,"y":967,"score":97,"level":0},{"x":1487,"y":967,"score":28,"level":0},{"x":435,"y":968,"score":29,"level":0},{"x":601,"y":968,"score":28,"level":0},{"x":649,"y":968,"score":28,"level":0},{"x":708,"y":968,"score":48,"level":0},{"x":845,"y":968,"score":35,"level":0},{"x":1006,"y":968,"score":55,"level":0},{"x":1165,"y":968,"score":46,"level":0},{"x":1234,"y":968,"score":41,"level":0},{"x":405,"y":969,"score":26,"level":0},{"x":589,"y":969,"score":26,"level":0},{"x":630,"y":969,"score":46,"level":0},{"x":668,"y":969,"score":34,"level":0},{"x":674,"y":969,"score":30,"level":0},{"x":726,"y":969,"score":32,"level":0},{"x":765,"y":969,"score":54,"level":0},{"x":935,"y":969,"score":27,"level":0},{"x":1125,"y":969,"score":39,"level":0},{"x":1134,"y":969,"score":26,"level":0},{"x":1172,"y":969,"score":56,"level":0},{"x":1195,"y":969,"score":44,"level":0},{"x":1289,"y":969,"score":29,"level":0},{"x":1452,"y":969,"score":76,"level":0},{"x":412,"y":970,"score":33,"level":0},{"x":416,"y":970,"score":36,"level":0},{"x":547,"y":970,"score":42,"level":0},{"x":582,"y":970,"score":26,"level":0},{"x":686,"y":970,"score":37,"level":0},{"x":737,"y":970,"score":27,"level":0},{"x":742,"y":970,"score":52,"level":0},{"x":781,"y":970,"score":35,"level":0},{"x":918,"y":970,"score":28,"level":0},{"x":942,"y":970,"score":26,"level":0},{"x":1158,"y":970,"score":44,"level":0},{"x":1409,"y":970,"score":43,"level":0},{"x":525,"y":971,"score":27,"level":0},{"x":865,"y":971,"score":44,"level":0},{"x":1387,"y":971,"score":27,"level":0},{"x":1404,"y":971,"score":26,"level":0},{"x":1470,"y":971,"score":44,"level":0},{"x":463,"y":972,"score":28,"level":0},{"x":476,"y":972,"score":28,"level":0},{"x":514,"y":972,"score":50,"level":0},{"x":654,"y":972,"score":44,"level":0},{"x":713,"y":972,"score":39,"level":0},{"x":718,"y":972,"score":29,"level":0},{"x":808,"y":972,"score":35,"level":0},{"x":885,"y":972,"score":36,"level":0},{"x":460,"y":973,"score":32,"level":0},{"x":659,"y":973,"score":68,"level":0},{"x":676,"y":973,"score":28,"level":0},{"x":783,"y":973,"score":33,"level":0},{"x":826,"y":973,"score":41,"level":0},{"x":844,"y":973,"score":26,"level":0},{"x":979,"y":973,"score":32,"level":0},{"x":1162,"y":973,"score":30,"level":0},{"x":1183,"y":973,"score":44,"level":0},{"x":1219,"y":973,"score":32,"level":0},{"x":1487,"y":973,"score":35,"level":0},{"x":449,"y":974,"score":44,"level":0},{"x":454,"y":974,"score":39,"level":0},{"x":572,"y":974,"score":38,"level":0},{"x":646,"y":974,"score":36,"level":0},{"x":890,"y":974,"score":32,"level":0},{"x":970,"y":974,"score":45,"level":0},{"x":1009,"y":974,"score":35,"level":0},{"x":1199,"y":974,"score":45,"level":0},{"x":1294,"y":974,"score":53,"level":0},{"x":1321,"y":974,"score":62,"level":0},{"x":438,"y":975,"score":40,"level":0},{"x":470,"y":975,"score":30,"level":0},{"x":736,"y":975,"score":48,"level":0},{"x":788,"y":975,"score":34,"level":0},{"x":968,"y":975,"score":51,"level":0},{"x":986,"y":975,"score":26,"level":0},{"x":1056,"y":975,"score":28,"level":0},{"x":1273,"y":975,"score":36,"level":0},{"x":1474,"y":975,"score":40,"level":0},{"x":497,"y":976,"score":40,"level":0},{"x":546,"y":976,"score":27,"level":0},{"x":769,"y":976,"score":55,"level":0},{"x":790,"y":976,"score":40,"level":0},{"x":1008,"y":976,"score":28,"level":0},{"x":435,"y":977,"score":53,"level":0},{"x":585,"y":977,"score":54,"level":0},{"x":624,"y":977,"score":43,"level":0},{"x":630,"y":977,"score":54,"level":0},{"x":763,"y":977,"score":78,"level":0},{"x":899,"y":977,"score":30,"level":0},{"x":901,"y":977,"score":29,"level":0},{"x":1028,"y":977,"score":75,"level":0},{"x":1196,"y":977,"score":26,"level":0},{"x":1335,"y":977,"score":26,"level":0},{"x":400,"y":978,"score":28,"level":0},{"x":481,"y":978,"score":58,"level":0},{"x":532,"y":978,"score":38,"level":0},{"x":594,"y":978,"score":31,"level":0},{"x":603,"y":978,"score":42,"level":0},{"x":721,"y":978,"score":34,"level":0},{"x":728,"y":978,"score":37,"level":0},{"x":775,"y":978,"score":26,"level":0},{"x":801,"y":978,"score":37,"level":0},{"x":960,"y":978,"score":36,"level":0},{"x":1070,"y":978,"score":31,"level":0},{"x":1329,"y":978,"score":48,"level":0},{"x":1406,"y":978,"score":44,"level":0},{"x":385,"y":979,"score":29,"level":0},{"x":840,"y":979,"score":30,"level":0},{"x":1008,"y":979,"score":44,"level":0},{"x":1034,"y":979,"score":65,"level":0},{"x":1093,"y":979,"score":31,"level":0},{"x":1098,"y":979,"score":26,"level":0},{"x":1144,"y":979,"score":44,"level":0},{"x":1150,"y":979,"score":48,"level":0},{"x":1176,"y":979,"score":27,"level":0},{"x":1202,"y":979,"score":34,"level":0},{"x":1255,"y":979,"score":28,"level":0},{"x":1457,"y":979,"score":36,"level":0},{"x":441,"y":980,"score":46,"level":0},{"x":447,"y":980,"score":33,"level":0},{"x":711,"y":980,"score":26,"level":0},{"x":752,"y":980,"score":31,"level":0},{"x":942,"y":980,"score":31,"level":0},{"x":1022,"y":980,"score":97,"level":0},{"x":1062,"y":980,"score":35,"level":0},{"x":563,"y":981,"score":26,"level":0},{"x":701,"y":981,"score":26,"level":0},{"x":740,"y":981,"score":32,"level":0},{"x":854,"y":981,"score":29,"level":0},{"x":893,"y":981,"score":35,"level":0},{"x":1044,"y":981,"score":35,"level":0},{"x":1171,"y":981,"score":39,"level":0},{"x":1374,"y":981,"score":28,"level":0},{"x":1388,"y":981,"score":32,"level":0},{"x":1439,"y":981,"score":26,"level":0},{"x":430,"y":982,"score":37,"level":0},{"x":624,"y":982,"score":26,"level":0},{"x":731,"y":982,"score":28,"level":0},{"x":765,"y":982,"score":44,"level":0},{"x":915,"y":982,"score":32,"level":0},{"x":957,"y":982,"score":26,"level":0},{"x":1216,"y":982,"score":31,"level":0},{"x":481,"y":983,"score":26,"level":0},{"x":510,"y":983,"score":35,"level":0},{"x":726,"y":983,"score":47,"level":0},{"x":728,"y":983,"score":30,"level":0},{"x":936,"y":983,"score":27,"level":0},{"x":1019,"y":983,"score":29,"level":0},{"x":1027,"y":983,"score":262,"level":0},{"x":529,"y":984,"score":32,"level":0},{"x":681,"y":984,"score":30,"level":0},{"x":799,"y":984,"score":32,"level":0},{"x":801,"y":984,"score":33,"level":0},{"x":831,"y":984,"score":32,"level":0},{"x":863,"y":984,"score":27,"level":0},{"x":992,"y":984,"score":33,"level":0},{"x":1003,"y":984,"score":30,"level":0},{"x":1153,"y":984,"score":26,"level":0},{"x":1196,"y":984,"score":75,"level":0},{"x":1353,"y":984,"score":26,"level":0},{"x":421,"y":985,"score":26,"level":0},{"x":517,"y":985,"score":34,"level":0},{"x":523,"y":985,"score":40,"level":0},{"x":570,"y":985,"score":31,"level":0},{"x":583,"y":985,"score":37,"level":0},{"x":646,"y":985,"score":52,"level":0},{"x":1078,"y":985,"score":39,"level":0},{"x":1168,"y":985,"score":26,"level":0},{"x":1339,"y":985,"score":29,"level":0},{"x":481,"y":986,"score":42,"level":0},{"x":597,"y":986,"score":57,"level":0},{"x":685,"y":986,"score":26,"level":0},{"x":784,"y":986,"score":35,"level":0},{"x":874,"y":986,"score":35,"level":0},{"x":1034,"y":986,"score":128,"level":0},{"x":1148,"y":986,"score":34,"level":0},{"x":1163,"y":986,"score":68,"level":0},{"x":1188,"y":986,"score":36,"level":0},{"x":1438,"y":986,"score":28,"level":0},{"x":1467,"y":986,"score":30,"level":0},{"x":455,"y":987,"score":34,"level":0},{"x":458,"y":987,"score":39,"level":0},{"x":542,"y":987,"score":27,"level":0},{"x":555,"y":987,"score":54,"level":0},{"x":652,"y":987,"score":26,"level":0},{"x":752,"y":987,"score":128,"level":0},{"x":854,"y":987,"score":42,"level":0},{"x":898,"y":987,"score":42,"level":0},{"x":1040,"y":987,"score":27,"level":0},{"x":1043,"y":987,"score":56,"level":0},{"x":1317,"y":987,"score":54,"level":0},{"x":535,"y":988,"score":35,"level":0},{"x":722,"y":988,"score":35,"level":0},{"x":969,"y":988,"score":32,"level":0},{"x":1366,"y":988,"score":27,"level":0},{"x":1433,"y":988,"score":51,"level":0},{"x":427,"y":989,"score":39,"level":0},{"x":529,"y":989,"score":35,"level":0},{"x":542,"y":989,"score":26,"level":0},{"x":565,"y":989,"score":30,"level":0},{"x":747,"y":989,"score":26,"level":0},{"x":757,"y":989,"score":54,"level":0},{"x":770,"y":989,"score":27,"level":0},{"x":801,"y":989,"score":36,"level":0},{"x":814,"y":989,"score":28,"level":0},{"x":843,"y":989,"score":38,"level":0},{"x":1088,"y":989,"score":31,"level":0},{"x":1110,"y":989,"score":30,"level":0},{"x":1400,"y":989,"score":57,"level":0},{"x":402,"y":990,"score":36,"level":0},{"x":577,"y":990,"score":40,"level":0},{"x":807,"y":990,"score":27,"level":0},{"x":832,"y":990,"score":27,"level":0},{"x":890,"y":990,"score":37,"level":0},{"x":948,"y":990,"score":33,"level":0},{"x":1048,"y":990,"score":42,"level":0},{"x":1055,"y":990,"score":64,"level":0},{"x":1140,"y":990,"score":30,"level":0},{"x":1200,"y":990,"score":27,"level":0},{"x":1270,"y":990,"score":34,"level":0},{"x":1412,"y":990,"score":30,"level":0},{"x":1484,"y":990,"score":26,"level":0},{"x":399,"y":991,"score":41,"level":0},{"x":407,"y":991,"score":30,"level":0},{"x":438,"y":991,"score":64,"level":0},{"x":681,"y":991,"score":42,"level":0},{"x":717,"y":991,"score":32,"level":0},{"x":965,"y":991,"score":35,"level":0},{"x":994,"y":991,"score":44,"level":0},{"x":1031,"y":991,"score":83,"level":0},{"x":1072,"y":991,"score":48,"level":0},{"x":1239,"y":991,"score":34,"level":0},{"x":1313,"y":991,"score":57,"level":0},{"x":413,"y":992,"score":26,"level":0},{"x":492,"y":992,"score":54,"level":0},{"x":511,"y":992,"score":37,"level":0},{"x":535,"y":992,"score":31,"level":0},{"x":547,"y":992,"score":37,"level":0},{"x":592,"y":992,"score":44,"level":0},{"x":705,"y":992,"score":38,"level":0},{"x":710,"y":992,"score":28,"level":0},{"x":751,"y":992,"score":36,"level":0},{"x":773,"y":992,"score":44,"level":0},{"x":778,"y":992,"score":39,"level":0},{"x":873,"y":992,"score":38,"level":0},{"x":953,"y":992,"score":28,"level":0},{"x":982,"y":992,"score":33,"level":0},{"x":1000,"y":992,"score":42,"level":0},{"x":1002,"y":992,"score":31,"level":0},{"x":1164,"y":992,"score":32,"level":0},{"x":1233,"y":992,"score":29,"level":0},{"x":1287,"y":992,"score":62,"level":0},{"x":1329,"y":992,"score":49,"level":0},{"x":1356,"y":992,"score":28,"level":0},{"x":1412,"y":992,"score":37,"level":0}]}
});
require.register("noflo-noflo-image/spec/fixtures/noText/flickr-8132786781-small.jpg.corners.json", function(exports, require, module){
module.exports = {"corners":[{"x":377,"y":247,"score":36,"level":0},{"x":965,"y":248,"score":30,"level":0},{"x":1031,"y":248,"score":26,"level":0},{"x":869,"y":249,"score":44,"level":0},{"x":969,"y":250,"score":122,"level":0},{"x":1011,"y":251,"score":30,"level":0},{"x":1168,"y":251,"score":105,"level":0},{"x":1444,"y":251,"score":32,"level":0},{"x":372,"y":252,"score":46,"level":0},{"x":377,"y":252,"score":235,"level":0},{"x":388,"y":252,"score":33,"level":0},{"x":403,"y":252,"score":40,"level":0},{"x":435,"y":252,"score":83,"level":0},{"x":438,"y":252,"score":76,"level":0},{"x":452,"y":252,"score":127,"level":0},{"x":468,"y":252,"score":26,"level":0},{"x":476,"y":252,"score":90,"level":0},{"x":479,"y":252,"score":121,"level":0},{"x":491,"y":252,"score":114,"level":0},{"x":494,"y":252,"score":26,"level":0},{"x":507,"y":252,"score":149,"level":0},{"x":511,"y":252,"score":88,"level":0},{"x":513,"y":252,"score":95,"level":0},{"x":542,"y":252,"score":112,"level":0},{"x":559,"y":252,"score":176,"level":0},{"x":599,"y":252,"score":33,"level":0},{"x":606,"y":252,"score":88,"level":0},{"x":632,"y":252,"score":100,"level":0},{"x":659,"y":252,"score":104,"level":0},{"x":693,"y":252,"score":97,"level":0},{"x":704,"y":252,"score":81,"level":0},{"x":733,"y":252,"score":30,"level":0},{"x":735,"y":252,"score":36,"level":0},{"x":746,"y":252,"score":143,"level":0},{"x":756,"y":252,"score":61,"level":0},{"x":813,"y":252,"score":123,"level":0},{"x":826,"y":252,"score":137,"level":0},{"x":843,"y":252,"score":243,"level":0},{"x":877,"y":252,"score":197,"level":0},{"x":887,"y":252,"score":266,"level":0},{"x":908,"y":252,"score":51,"level":0},{"x":923,"y":252,"score":46,"level":0},{"x":932,"y":252,"score":76,"level":0},{"x":944,"y":252,"score":108,"level":0},{"x":953,"y":252,"score":28,"level":0},{"x":962,"y":252,"score":134,"level":0},{"x":989,"y":252,"score":79,"level":0},{"x":1017,"y":252,"score":141,"level":0},{"x":1026,"y":252,"score":80,"level":0},{"x":1051,"y":252,"score":229,"level":0},{"x":1063,"y":252,"score":274,"level":0},{"x":1075,"y":252,"score":113,"level":0},{"x":1086,"y":252,"score":124,"level":0},{"x":1093,"y":252,"score":38,"level":0},{"x":1096,"y":252,"score":34,"level":0},{"x":1113,"y":252,"score":172,"level":0},{"x":1127,"y":252,"score":54,"level":0},{"x":1130,"y":252,"score":26,"level":0},{"x":1141,"y":252,"score":145,"level":0},{"x":1152,"y":252,"score":138,"level":0},{"x":1163,"y":252,"score":223,"level":0},{"x":1173,"y":252,"score":159,"level":0},{"x":1194,"y":252,"score":35,"level":0},{"x":1206,"y":252,"score":136,"level":0},{"x":1219,"y":252,"score":68,"level":0},{"x":1228,"y":252,"score":73,"level":0},{"x":1236,"y":252,"score":74,"level":0},{"x":1255,"y":252,"score":51,"level":0},{"x":1265,"y":252,"score":132,"level":0},{"x":1275,"y":252,"score":231,"level":0},{"x":1286,"y":252,"score":29,"level":0},{"x":1293,"y":252,"score":55,"level":0},{"x":1323,"y":252,"score":94,"level":0},{"x":1334,"y":252,"score":105,"level":0},{"x":1344,"y":252,"score":70,"level":0},{"x":1352,"y":252,"score":60,"level":0},{"x":1360,"y":252,"score":28,"level":0},{"x":1366,"y":252,"score":69,"level":0},{"x":1368,"y":252,"score":145,"level":0},{"x":1391,"y":252,"score":30,"level":0},{"x":1395,"y":252,"score":27,"level":0},{"x":1397,"y":252,"score":56,"level":0},{"x":1411,"y":252,"score":112,"level":0},{"x":1424,"y":252,"score":52,"level":0},{"x":1438,"y":252,"score":34,"level":0},{"x":1453,"y":252,"score":148,"level":0},{"x":1474,"y":252,"score":80,"level":0},{"x":410,"y":253,"score":226,"level":0},{"x":415,"y":253,"score":48,"level":0},{"x":442,"y":253,"score":126,"level":0},{"x":618,"y":253,"score":69,"level":0},{"x":762,"y":253,"score":62,"level":0},{"x":1005,"y":253,"score":124,"level":0},{"x":1119,"y":253,"score":134,"level":0},{"x":1317,"y":253,"score":246,"level":0},{"x":1468,"y":253,"score":47,"level":0},{"x":1484,"y":253,"score":211,"level":0},{"x":501,"y":254,"score":253,"level":0},{"x":561,"y":254,"score":224,"level":0},{"x":900,"y":254,"score":252,"level":0},{"x":988,"y":254,"score":80,"level":0},{"x":1012,"y":254,"score":86,"level":0},{"x":1343,"y":254,"score":88,"level":0},{"x":1381,"y":254,"score":78,"level":0},{"x":1490,"y":254,"score":115,"level":0},{"x":377,"y":255,"score":142,"level":0},{"x":674,"y":255,"score":103,"level":0},{"x":868,"y":255,"score":213,"level":0},{"x":893,"y":255,"score":47,"level":0},{"x":1004,"y":255,"score":86,"level":0},{"x":1029,"y":255,"score":150,"level":0},{"x":1034,"y":255,"score":39,"level":0},{"x":1056,"y":255,"score":71,"level":0},{"x":1121,"y":255,"score":48,"level":0},{"x":1195,"y":255,"score":86,"level":0},{"x":1281,"y":255,"score":58,"level":0},{"x":1297,"y":255,"score":68,"level":0},{"x":1325,"y":255,"score":132,"level":0},{"x":1368,"y":255,"score":230,"level":0},{"x":495,"y":256,"score":44,"level":0},{"x":567,"y":256,"score":28,"level":0},{"x":679,"y":256,"score":58,"level":0},{"x":834,"y":256,"score":76,"level":0},{"x":926,"y":256,"score":30,"level":0},{"x":972,"y":256,"score":80,"level":0},{"x":994,"y":256,"score":90,"level":0},{"x":1233,"y":256,"score":39,"level":0},{"x":1337,"y":256,"score":28,"level":0},{"x":1450,"y":256,"score":141,"level":0},{"x":383,"y":257,"score":70,"level":0},{"x":486,"y":257,"score":66,"level":0},{"x":557,"y":257,"score":45,"level":0},{"x":595,"y":257,"score":44,"level":0},{"x":661,"y":257,"score":79,"level":0},{"x":718,"y":257,"score":29,"level":0},{"x":804,"y":257,"score":30,"level":0},{"x":875,"y":257,"score":149,"level":0},{"x":931,"y":257,"score":26,"level":0},{"x":953,"y":257,"score":72,"level":0},{"x":1207,"y":257,"score":97,"level":0},{"x":1281,"y":257,"score":49,"level":0},{"x":377,"y":258,"score":78,"level":0},{"x":513,"y":258,"score":41,"level":0},{"x":834,"y":258,"score":78,"level":0},{"x":936,"y":258,"score":49,"level":0},{"x":958,"y":258,"score":33,"level":0},{"x":999,"y":258,"score":36,"level":0},{"x":1116,"y":258,"score":54,"level":0},{"x":1148,"y":258,"score":87,"level":0},{"x":1174,"y":258,"score":72,"level":0},{"x":1267,"y":258,"score":155,"level":0},{"x":1395,"y":258,"score":53,"level":0},{"x":1421,"y":258,"score":48,"level":0},{"x":1435,"y":258,"score":56,"level":0},{"x":1441,"y":258,"score":30,"level":0},{"x":1458,"y":258,"score":100,"level":0},{"x":1465,"y":258,"score":89,"level":0},{"x":1468,"y":258,"score":116,"level":0},{"x":450,"y":259,"score":153,"level":0},{"x":816,"y":259,"score":34,"level":0},{"x":942,"y":259,"score":38,"level":0},{"x":963,"y":259,"score":88,"level":0},{"x":982,"y":259,"score":53,"level":0},{"x":1122,"y":259,"score":48,"level":0},{"x":1130,"y":259,"score":38,"level":0},{"x":1227,"y":259,"score":139,"level":0},{"x":1403,"y":259,"score":26,"level":0},{"x":417,"y":260,"score":30,"level":0},{"x":555,"y":260,"score":40,"level":0},{"x":619,"y":260,"score":26,"level":0},{"x":624,"y":260,"score":42,"level":0},{"x":715,"y":260,"score":45,"level":0},{"x":863,"y":260,"score":36,"level":0},{"x":888,"y":260,"score":30,"level":0},{"x":912,"y":260,"score":81,"level":0},{"x":917,"y":260,"score":115,"level":0},{"x":925,"y":260,"score":109,"level":0},{"x":1016,"y":260,"score":49,"level":0},{"x":1051,"y":260,"score":116,"level":0},{"x":1143,"y":260,"score":42,"level":0},{"x":1216,"y":260,"score":70,"level":0},{"x":1222,"y":260,"score":94,"level":0},{"x":1234,"y":260,"score":52,"level":0},{"x":1243,"y":260,"score":39,"level":0},{"x":1246,"y":260,"score":36,"level":0},{"x":1270,"y":260,"score":108,"level":0},{"x":1360,"y":260,"score":123,"level":0},{"x":444,"y":261,"score":42,"level":0},{"x":470,"y":261,"score":83,"level":0},{"x":590,"y":261,"score":30,"level":0},{"x":642,"y":261,"score":37,"level":0},{"x":721,"y":261,"score":56,"level":0},{"x":991,"y":261,"score":45,"level":0},{"x":1046,"y":261,"score":124,"level":0},{"x":1176,"y":261,"score":44,"level":0},{"x":1192,"y":261,"score":50,"level":0},{"x":1231,"y":261,"score":89,"level":0},{"x":1251,"y":261,"score":70,"level":0},{"x":1258,"y":261,"score":46,"level":0},{"x":1278,"y":261,"score":196,"level":0},{"x":1321,"y":261,"score":118,"level":0},{"x":1490,"y":261,"score":61,"level":0},{"x":412,"y":262,"score":52,"level":0},{"x":456,"y":262,"score":53,"level":0},{"x":698,"y":262,"score":46,"level":0},{"x":763,"y":262,"score":36,"level":0},{"x":823,"y":262,"score":54,"level":0},{"x":907,"y":262,"score":69,"level":0},{"x":947,"y":262,"score":66,"level":0},{"x":1061,"y":262,"score":64,"level":0},{"x":1080,"y":262,"score":77,"level":0},{"x":1094,"y":262,"score":36,"level":0},{"x":1153,"y":262,"score":58,"level":0},{"x":1161,"y":262,"score":154,"level":0},{"x":1169,"y":262,"score":84,"level":0},{"x":1237,"y":262,"score":46,"level":0},{"x":1312,"y":262,"score":34,"level":0},{"x":1345,"y":262,"score":79,"level":0},{"x":1391,"y":262,"score":28,"level":0},{"x":1414,"y":262,"score":27,"level":0},{"x":1472,"y":262,"score":64,"level":0},{"x":383,"y":263,"score":54,"level":0},{"x":463,"y":263,"score":46,"level":0},{"x":525,"y":263,"score":31,"level":0},{"x":636,"y":263,"score":68,"level":0},{"x":671,"y":263,"score":30,"level":0},{"x":740,"y":263,"score":33,"level":0},{"x":840,"y":263,"score":144,"level":0},{"x":972,"y":263,"score":73,"level":0},{"x":1012,"y":263,"score":51,"level":0},{"x":1076,"y":263,"score":51,"level":0},{"x":1085,"y":263,"score":85,"level":0},{"x":1114,"y":263,"score":48,"level":0},{"x":1174,"y":263,"score":48,"level":0},{"x":1426,"y":263,"score":44,"level":0},{"x":1443,"y":263,"score":29,"level":0},{"x":1455,"y":263,"score":31,"level":0},{"x":1490,"y":263,"score":64,"level":0},{"x":435,"y":264,"score":44,"level":0},{"x":511,"y":264,"score":121,"level":0},{"x":567,"y":264,"score":50,"level":0},{"x":611,"y":264,"score":33,"level":0},{"x":729,"y":264,"score":82,"level":0},{"x":751,"y":264,"score":36,"level":0},{"x":778,"y":264,"score":49,"level":0},{"x":811,"y":264,"score":26,"level":0},{"x":829,"y":264,"score":140,"level":0},{"x":845,"y":264,"score":56,"level":0},{"x":915,"y":264,"score":33,"level":0},{"x":1030,"y":264,"score":105,"level":0},{"x":1047,"y":264,"score":150,"level":0},{"x":1139,"y":264,"score":36,"level":0},{"x":1219,"y":264,"score":32,"level":0},{"x":1273,"y":264,"score":44,"level":0},{"x":1333,"y":264,"score":72,"level":0},{"x":1396,"y":264,"score":26,"level":0},{"x":1465,"y":264,"score":51,"level":0},{"x":412,"y":265,"score":62,"level":0},{"x":443,"y":265,"score":67,"level":0},{"x":453,"y":265,"score":110,"level":0},{"x":530,"y":265,"score":32,"level":0},{"x":562,"y":265,"score":109,"level":0},{"x":578,"y":265,"score":28,"level":0},{"x":717,"y":265,"score":28,"level":0},{"x":931,"y":265,"score":41,"level":0},{"x":975,"y":265,"score":27,"level":0},{"x":1077,"y":265,"score":52,"level":0},{"x":1095,"y":265,"score":54,"level":0},{"x":1107,"y":265,"score":37,"level":0},{"x":1120,"y":265,"score":86,"level":0},{"x":1127,"y":265,"score":39,"level":0},{"x":1132,"y":265,"score":37,"level":0},{"x":1144,"y":265,"score":37,"level":0},{"x":1149,"y":265,"score":26,"level":0},{"x":1200,"y":265,"score":72,"level":0},{"x":1210,"y":265,"score":52,"level":0},{"x":1223,"y":265,"score":28,"level":0},{"x":1246,"y":265,"score":78,"level":0},{"x":1263,"y":265,"score":73,"level":0},{"x":1381,"y":265,"score":44,"level":0},{"x":1407,"y":265,"score":74,"level":0},{"x":1432,"y":265,"score":41,"level":0},{"x":387,"y":266,"score":101,"level":0},{"x":433,"y":266,"score":52,"level":0},{"x":515,"y":266,"score":33,"level":0},{"x":520,"y":266,"score":26,"level":0},{"x":537,"y":266,"score":29,"level":0},{"x":571,"y":266,"score":43,"level":0},{"x":601,"y":266,"score":70,"level":0},{"x":669,"y":266,"score":27,"level":0},{"x":679,"y":266,"score":30,"level":0},{"x":685,"y":266,"score":58,"level":0},{"x":726,"y":266,"score":50,"level":0},{"x":801,"y":266,"score":48,"level":0},{"x":888,"y":266,"score":60,"level":0},{"x":903,"y":266,"score":58,"level":0},{"x":1001,"y":266,"score":118,"level":0},{"x":1014,"y":266,"score":32,"level":0},{"x":1019,"y":266,"score":49,"level":0},{"x":1089,"y":266,"score":28,"level":0},{"x":1191,"y":266,"score":74,"level":0},{"x":1228,"y":266,"score":110,"level":0},{"x":1365,"y":266,"score":132,"level":0},{"x":1421,"y":266,"score":32,"level":0},{"x":448,"y":267,"score":32,"level":0},{"x":472,"y":267,"score":42,"level":0},{"x":490,"y":267,"score":110,"level":0},{"x":495,"y":267,"score":85,"level":0},{"x":553,"y":267,"score":33,"level":0},{"x":690,"y":267,"score":34,"level":0},{"x":693,"y":267,"score":34,"level":0},{"x":794,"y":267,"score":26,"level":0},{"x":835,"y":267,"score":69,"level":0},{"x":883,"y":267,"score":40,"level":0},{"x":953,"y":267,"score":29,"level":0},{"x":1131,"y":267,"score":28,"level":0},{"x":1149,"y":267,"score":32,"level":0},{"x":1234,"y":267,"score":34,"level":0},{"x":377,"y":268,"score":48,"level":0},{"x":428,"y":268,"score":26,"level":0},{"x":484,"y":268,"score":58,"level":0},{"x":519,"y":268,"score":57,"level":0},{"x":555,"y":268,"score":41,"level":0},{"x":873,"y":268,"score":29,"level":0},{"x":1085,"y":268,"score":73,"level":0},{"x":1158,"y":268,"score":81,"level":0},{"x":1475,"y":268,"score":34,"level":0},{"x":521,"y":269,"score":40,"level":0},{"x":527,"y":269,"score":120,"level":0},{"x":536,"y":269,"score":70,"level":0},{"x":542,"y":269,"score":28,"level":0},{"x":568,"y":269,"score":27,"level":0},{"x":638,"y":269,"score":48,"level":0},{"x":645,"y":269,"score":52,"level":0},{"x":652,"y":269,"score":53,"level":0},{"x":701,"y":269,"score":108,"level":0},{"x":714,"y":269,"score":34,"level":0},{"x":878,"y":269,"score":32,"level":0},{"x":884,"y":269,"score":28,"level":0},{"x":897,"y":269,"score":89,"level":0},{"x":957,"y":269,"score":28,"level":0},{"x":1059,"y":269,"score":36,"level":0},{"x":1125,"y":269,"score":56,"level":0},{"x":1191,"y":269,"score":30,"level":0},{"x":1217,"y":269,"score":89,"level":0},{"x":1234,"y":269,"score":28,"level":0},{"x":1241,"y":269,"score":34,"level":0},{"x":1317,"y":269,"score":110,"level":0},{"x":1449,"y":269,"score":97,"level":0},{"x":688,"y":270,"score":26,"level":0},{"x":818,"y":270,"score":106,"level":0},{"x":841,"y":270,"score":99,"level":0},{"x":866,"y":270,"score":53,"level":0},{"x":996,"y":270,"score":78,"level":0},{"x":1016,"y":270,"score":97,"level":0},{"x":1065,"y":270,"score":78,"level":0},{"x":1109,"y":270,"score":42,"level":0},{"x":1118,"y":270,"score":74,"level":0},{"x":1275,"y":270,"score":239,"level":0},{"x":1411,"y":270,"score":33,"level":0},{"x":1429,"y":270,"score":58,"level":0},{"x":1435,"y":270,"score":107,"level":0},{"x":1441,"y":270,"score":40,"level":0},{"x":386,"y":271,"score":43,"level":0},{"x":400,"y":271,"score":40,"level":0},{"x":450,"y":271,"score":52,"level":0},{"x":612,"y":271,"score":85,"level":0},{"x":735,"y":271,"score":104,"level":0},{"x":829,"y":271,"score":138,"level":0},{"x":962,"y":271,"score":37,"level":0},{"x":974,"y":271,"score":62,"level":0},{"x":1005,"y":271,"score":91,"level":0},{"x":1096,"y":271,"score":104,"level":0},{"x":1152,"y":271,"score":100,"level":0},{"x":1209,"y":271,"score":176,"level":0},{"x":1224,"y":271,"score":67,"level":0},{"x":1280,"y":271,"score":44,"level":0},{"x":1332,"y":271,"score":112,"level":0},{"x":1466,"y":271,"score":57,"level":0},{"x":1488,"y":271,"score":103,"level":0},{"x":475,"y":272,"score":29,"level":0},{"x":563,"y":272,"score":92,"level":0},{"x":661,"y":272,"score":75,"level":0},{"x":692,"y":272,"score":78,"level":0},{"x":759,"y":272,"score":31,"level":0},{"x":988,"y":272,"score":176,"level":0},{"x":1059,"y":272,"score":48,"level":0},{"x":1078,"y":272,"score":114,"level":0},{"x":1091,"y":272,"score":51,"level":0},{"x":1102,"y":272,"score":144,"level":0},{"x":1146,"y":272,"score":34,"level":0},{"x":1154,"y":272,"score":31,"level":0},{"x":1192,"y":272,"score":50,"level":0},{"x":1194,"y":272,"score":37,"level":0},{"x":1229,"y":272,"score":43,"level":0},{"x":1256,"y":272,"score":45,"level":0},{"x":1321,"y":272,"score":91,"level":0},{"x":1327,"y":272,"score":58,"level":0},{"x":1337,"y":272,"score":26,"level":0},{"x":1365,"y":272,"score":161,"level":0},{"x":1443,"y":272,"score":70,"level":0},{"x":462,"y":273,"score":123,"level":0},{"x":468,"y":273,"score":44,"level":0},{"x":484,"y":273,"score":55,"level":0},{"x":611,"y":273,"score":72,"level":0},{"x":674,"y":273,"score":49,"level":0},{"x":685,"y":273,"score":32,"level":0},{"x":710,"y":273,"score":81,"level":0},{"x":730,"y":273,"score":89,"level":0},{"x":834,"y":273,"score":85,"level":0},{"x":922,"y":273,"score":47,"level":0},{"x":927,"y":273,"score":48,"level":0},{"x":937,"y":273,"score":66,"level":0},{"x":1028,"y":273,"score":100,"level":0},{"x":1073,"y":273,"score":136,"level":0},{"x":1083,"y":273,"score":212,"level":0},{"x":1111,"y":273,"score":71,"level":0},{"x":1162,"y":273,"score":86,"level":0},{"x":1389,"y":273,"score":76,"level":0},{"x":1403,"y":273,"score":195,"level":0},{"x":1409,"y":273,"score":55,"level":0},{"x":546,"y":274,"score":27,"level":0},{"x":554,"y":274,"score":57,"level":0},{"x":640,"y":274,"score":32,"level":0},{"x":697,"y":274,"score":62,"level":0},{"x":726,"y":274,"score":51,"level":0},{"x":732,"y":274,"score":53,"level":0},{"x":740,"y":274,"score":59,"level":0},{"x":768,"y":274,"score":56,"level":0},{"x":801,"y":274,"score":36,"level":0},{"x":804,"y":274,"score":50,"level":0},{"x":889,"y":274,"score":53,"level":0},{"x":944,"y":274,"score":72,"level":0},{"x":960,"y":274,"score":31,"level":0},{"x":1000,"y":274,"score":116,"level":0},{"x":1053,"y":274,"score":71,"level":0},{"x":1089,"y":274,"score":28,"level":0},{"x":1097,"y":274,"score":54,"level":0},{"x":1122,"y":274,"score":50,"level":0},{"x":1125,"y":274,"score":66,"level":0},{"x":1134,"y":274,"score":108,"level":0},{"x":1149,"y":274,"score":46,"level":0},{"x":1241,"y":274,"score":40,"level":0},{"x":1247,"y":274,"score":72,"level":0},{"x":1456,"y":274,"score":58,"level":0},{"x":436,"y":275,"score":60,"level":0},{"x":527,"y":275,"score":32,"level":0},{"x":619,"y":275,"score":44,"level":0},{"x":625,"y":275,"score":108,"level":0},{"x":671,"y":275,"score":33,"level":0},{"x":689,"y":275,"score":46,"level":0},{"x":734,"y":275,"score":36,"level":0},{"x":886,"y":275,"score":152,"level":0},{"x":894,"y":275,"score":26,"level":0},{"x":901,"y":275,"score":89,"level":0},{"x":931,"y":275,"score":33,"level":0},{"x":965,"y":275,"score":29,"level":0},{"x":991,"y":275,"score":37,"level":0},{"x":1041,"y":275,"score":32,"level":0},{"x":1046,"y":275,"score":81,"level":0},{"x":1058,"y":275,"score":44,"level":0},{"x":1062,"y":275,"score":62,"level":0},{"x":1179,"y":275,"score":49,"level":0},{"x":1234,"y":275,"score":94,"level":0},{"x":1303,"y":275,"score":34,"level":0},{"x":1312,"y":275,"score":48,"level":0},{"x":1358,"y":275,"score":94,"level":0},{"x":1379,"y":275,"score":27,"level":0},{"x":1381,"y":275,"score":47,"level":0},{"x":1408,"y":275,"score":58,"level":0},{"x":1425,"y":275,"score":102,"level":0},{"x":1448,"y":275,"score":36,"level":0},{"x":1469,"y":275,"score":84,"level":0},{"x":1474,"y":275,"score":46,"level":0},{"x":386,"y":276,"score":50,"level":0},{"x":400,"y":276,"score":95,"level":0},{"x":414,"y":276,"score":66,"level":0},{"x":507,"y":276,"score":135,"level":0},{"x":680,"y":276,"score":78,"level":0},{"x":751,"y":276,"score":120,"level":0},{"x":774,"y":276,"score":34,"level":0},{"x":831,"y":276,"score":126,"level":0},{"x":1168,"y":276,"score":32,"level":0},{"x":1175,"y":276,"score":56,"level":0},{"x":1185,"y":276,"score":37,"level":0},{"x":1191,"y":276,"score":30,"level":0},{"x":1199,"y":276,"score":74,"level":0},{"x":1275,"y":276,"score":43,"level":0},{"x":1277,"y":276,"score":130,"level":0},{"x":1300,"y":276,"score":36,"level":0},{"x":1317,"y":276,"score":42,"level":0},{"x":1366,"y":276,"score":185,"level":0},{"x":1465,"y":276,"score":141,"level":0},{"x":378,"y":277,"score":170,"level":0},{"x":442,"y":277,"score":36,"level":0},{"x":553,"y":277,"score":30,"level":0},{"x":651,"y":277,"score":120,"level":0},{"x":829,"y":277,"score":160,"level":0},{"x":873,"y":277,"score":41,"level":0},{"x":879,"y":277,"score":46,"level":0},{"x":1065,"y":277,"score":54,"level":0},{"x":1102,"y":277,"score":61,"level":0},{"x":1234,"y":277,"score":39,"level":0},{"x":1269,"y":277,"score":33,"level":0},{"x":1336,"y":277,"score":67,"level":0},{"x":1490,"y":277,"score":54,"level":0},{"x":395,"y":278,"score":40,"level":0},{"x":406,"y":278,"score":83,"level":0},{"x":607,"y":278,"score":110,"level":0},{"x":658,"y":278,"score":88,"level":0},{"x":673,"y":278,"score":31,"level":0},{"x":745,"y":278,"score":105,"level":0},{"x":821,"y":278,"score":74,"level":0},{"x":836,"y":278,"score":30,"level":0},{"x":911,"y":278,"score":66,"level":0},{"x":926,"y":278,"score":58,"level":0},{"x":977,"y":278,"score":72,"level":0},{"x":996,"y":278,"score":54,"level":0},{"x":1017,"y":278,"score":30,"level":0},{"x":1073,"y":278,"score":107,"level":0},{"x":1114,"y":278,"score":89,"level":0},{"x":1135,"y":278,"score":74,"level":0},{"x":1142,"y":278,"score":109,"level":0},{"x":1160,"y":278,"score":66,"level":0},{"x":1221,"y":278,"score":116,"level":0},{"x":1229,"y":278,"score":113,"level":0},{"x":1350,"y":278,"score":73,"level":0},{"x":1363,"y":278,"score":37,"level":0},{"x":1370,"y":278,"score":57,"level":0},{"x":1391,"y":278,"score":67,"level":0},{"x":435,"y":279,"score":26,"level":0},{"x":454,"y":279,"score":30,"level":0},{"x":513,"y":279,"score":26,"level":0},{"x":519,"y":279,"score":36,"level":0},{"x":564,"y":279,"score":26,"level":0},{"x":597,"y":279,"score":64,"level":0},{"x":695,"y":279,"score":55,"level":0},{"x":709,"y":279,"score":82,"level":0},{"x":763,"y":279,"score":107,"level":0},{"x":804,"y":279,"score":35,"level":0},{"x":814,"y":279,"score":60,"level":0},{"x":816,"y":279,"score":58,"level":0},{"x":941,"y":279,"score":35,"level":0},{"x":959,"y":279,"score":54,"level":0},{"x":1045,"y":279,"score":111,"level":0},{"x":1057,"y":279,"score":107,"level":0},{"x":1080,"y":279,"score":51,"level":0},{"x":1153,"y":279,"score":95,"level":0},{"x":1183,"y":279,"score":70,"level":0},{"x":1238,"y":279,"score":54,"level":0},{"x":1243,"y":279,"score":41,"level":0},{"x":1251,"y":279,"score":70,"level":0},{"x":1253,"y":279,"score":56,"level":0},{"x":1260,"y":279,"score":37,"level":0},{"x":1355,"y":279,"score":41,"level":0},{"x":1384,"y":279,"score":26,"level":0},{"x":1396,"y":279,"score":40,"level":0},{"x":612,"y":280,"score":75,"level":0},{"x":632,"y":280,"score":80,"level":0},{"x":658,"y":280,"score":59,"level":0},{"x":736,"y":280,"score":55,"level":0},{"x":771,"y":280,"score":41,"level":0},{"x":807,"y":280,"score":30,"level":0},{"x":926,"y":280,"score":43,"level":0},{"x":968,"y":280,"score":40,"level":0},{"x":1025,"y":280,"score":28,"level":0},{"x":1030,"y":280,"score":65,"level":0},{"x":1062,"y":280,"score":32,"level":0},{"x":1108,"y":280,"score":35,"level":0},{"x":1112,"y":280,"score":89,"level":0},{"x":1121,"y":280,"score":66,"level":0},{"x":1174,"y":280,"score":26,"level":0},{"x":1212,"y":280,"score":27,"level":0},{"x":1379,"y":280,"score":74,"level":0},{"x":1452,"y":280,"score":35,"level":0},{"x":1483,"y":280,"score":32,"level":0},{"x":397,"y":281,"score":56,"level":0},{"x":444,"y":281,"score":113,"level":0},{"x":449,"y":281,"score":77,"level":0},{"x":475,"y":281,"score":94,"level":0},{"x":526,"y":281,"score":56,"level":0},{"x":537,"y":281,"score":59,"level":0},{"x":548,"y":281,"score":61,"level":0},{"x":616,"y":281,"score":31,"level":0},{"x":621,"y":281,"score":49,"level":0},{"x":643,"y":281,"score":56,"level":0},{"x":698,"y":281,"score":43,"level":0},{"x":756,"y":281,"score":26,"level":0},{"x":931,"y":281,"score":95,"level":0},{"x":937,"y":281,"score":73,"level":0},{"x":960,"y":281,"score":35,"level":0},{"x":963,"y":281,"score":41,"level":0},{"x":991,"y":281,"score":38,"level":0},{"x":1045,"y":281,"score":61,"level":0},{"x":1169,"y":281,"score":41,"level":0},{"x":1192,"y":281,"score":111,"level":0},{"x":1217,"y":281,"score":50,"level":0},{"x":1226,"y":281,"score":150,"level":0},{"x":1239,"y":281,"score":95,"level":0},{"x":1244,"y":281,"score":38,"level":0},{"x":1258,"y":281,"score":39,"level":0},{"x":1283,"y":281,"score":100,"level":0},{"x":1374,"y":281,"score":29,"level":0},{"x":383,"y":282,"score":39,"level":0},{"x":455,"y":282,"score":98,"level":0},{"x":745,"y":282,"score":32,"level":0},{"x":788,"y":282,"score":90,"level":0},{"x":875,"y":282,"score":44,"level":0},{"x":885,"y":282,"score":72,"level":0},{"x":945,"y":282,"score":38,"level":0},{"x":1075,"y":282,"score":114,"level":0},{"x":1107,"y":282,"score":47,"level":0},{"x":1253,"y":282,"score":91,"level":0},{"x":1272,"y":282,"score":97,"level":0},{"x":1316,"y":282,"score":50,"level":0},{"x":1456,"y":282,"score":46,"level":0},{"x":1471,"y":282,"score":37,"level":0},{"x":1490,"y":282,"score":51,"level":0},{"x":403,"y":283,"score":78,"level":0},{"x":494,"y":283,"score":63,"level":0},{"x":637,"y":283,"score":87,"level":0},{"x":715,"y":283,"score":52,"level":0},{"x":720,"y":283,"score":46,"level":0},{"x":730,"y":283,"score":49,"level":0},{"x":776,"y":283,"score":100,"level":0},{"x":778,"y":283,"score":50,"level":0},{"x":826,"y":283,"score":85,"level":0},{"x":880,"y":283,"score":57,"level":0},{"x":919,"y":283,"score":28,"level":0},{"x":975,"y":283,"score":45,"level":0},{"x":1014,"y":283,"score":30,"level":0},{"x":1092,"y":283,"score":82,"level":0},{"x":1099,"y":283,"score":38,"level":0},{"x":1142,"y":283,"score":28,"level":0},{"x":1228,"y":283,"score":147,"level":0},{"x":1277,"y":283,"score":27,"level":0},{"x":1327,"y":283,"score":99,"level":0},{"x":1351,"y":283,"score":98,"level":0},{"x":1441,"y":283,"score":91,"level":0},{"x":1466,"y":283,"score":202,"level":0},{"x":607,"y":284,"score":50,"level":0},{"x":645,"y":284,"score":103,"level":0},{"x":652,"y":284,"score":60,"level":0},{"x":672,"y":284,"score":61,"level":0},{"x":702,"y":284,"score":46,"level":0},{"x":761,"y":284,"score":37,"level":0},{"x":864,"y":284,"score":103,"level":0},{"x":952,"y":284,"score":59,"level":0},{"x":954,"y":284,"score":51,"level":0},{"x":966,"y":284,"score":33,"level":0},{"x":1118,"y":284,"score":29,"level":0},{"x":1164,"y":284,"score":88,"level":0},{"x":1234,"y":284,"score":32,"level":0},{"x":1333,"y":284,"score":112,"level":0},{"x":1346,"y":284,"score":60,"level":0},{"x":1477,"y":284,"score":67,"level":0},{"x":477,"y":285,"score":67,"level":0},{"x":630,"y":285,"score":77,"level":0},{"x":650,"y":285,"score":61,"level":0},{"x":707,"y":285,"score":52,"level":0},{"x":715,"y":285,"score":53,"level":0},{"x":814,"y":285,"score":42,"level":0},{"x":889,"y":285,"score":58,"level":0},{"x":986,"y":285,"score":58,"level":0},{"x":1044,"y":285,"score":41,"level":0},{"x":1084,"y":285,"score":80,"level":0},{"x":1179,"y":285,"score":159,"level":0},{"x":1236,"y":285,"score":44,"level":0},{"x":1238,"y":285,"score":53,"level":0},{"x":1247,"y":285,"score":56,"level":0},{"x":1272,"y":285,"score":32,"level":0},{"x":1277,"y":285,"score":41,"level":0},{"x":1339,"y":285,"score":144,"level":0},{"x":1364,"y":285,"score":133,"level":0},{"x":1389,"y":285,"score":42,"level":0},{"x":415,"y":286,"score":218,"level":0},{"x":514,"y":286,"score":96,"level":0},{"x":537,"y":286,"score":82,"level":0},{"x":551,"y":286,"score":82,"level":0},{"x":556,"y":286,"score":62,"level":0},{"x":610,"y":286,"score":68,"level":0},{"x":668,"y":286,"score":38,"level":0},{"x":683,"y":286,"score":35,"level":0},{"x":739,"y":286,"score":45,"level":0},{"x":802,"y":286,"score":42,"level":0},{"x":915,"y":286,"score":52,"level":0},{"x":918,"y":286,"score":40,"level":0},{"x":924,"y":286,"score":37,"level":0},{"x":930,"y":286,"score":43,"level":0},{"x":959,"y":286,"score":36,"level":0},{"x":964,"y":286,"score":56,"level":0},{"x":969,"y":286,"score":66,"level":0},{"x":1023,"y":286,"score":119,"level":0},{"x":1029,"y":286,"score":143,"level":0},{"x":1146,"y":286,"score":72,"level":0},{"x":1358,"y":286,"score":147,"level":0},{"x":1398,"y":286,"score":28,"level":0},{"x":377,"y":287,"score":123,"level":0},{"x":384,"y":287,"score":29,"level":0},{"x":462,"y":287,"score":57,"level":0},{"x":470,"y":287,"score":46,"level":0},{"x":524,"y":287,"score":46,"level":0},{"x":543,"y":287,"score":26,"level":0},{"x":558,"y":287,"score":31,"level":0},{"x":597,"y":287,"score":36,"level":0},{"x":726,"y":287,"score":29,"level":0},{"x":791,"y":287,"score":36,"level":0},{"x":830,"y":287,"score":50,"level":0},{"x":910,"y":287,"score":54,"level":0},{"x":1015,"y":287,"score":49,"level":0},{"x":1117,"y":287,"score":28,"level":0},{"x":1241,"y":287,"score":50,"level":0},{"x":1258,"y":287,"score":40,"level":0},{"x":1263,"y":287,"score":76,"level":0},{"x":1439,"y":287,"score":53,"level":0},{"x":440,"y":288,"score":145,"level":0},{"x":451,"y":288,"score":42,"level":0},{"x":636,"y":288,"score":82,"level":0},{"x":663,"y":288,"score":50,"level":0},{"x":689,"y":288,"score":53,"level":0},{"x":696,"y":288,"score":65,"level":0},{"x":749,"y":288,"score":86,"level":0},{"x":764,"y":288,"score":42,"level":0},{"x":795,"y":288,"score":47,"level":0},{"x":1077,"y":288,"score":67,"level":0},{"x":1148,"y":288,"score":36,"level":0},{"x":1154,"y":288,"score":83,"level":0},{"x":1175,"y":288,"score":40,"level":0},{"x":1253,"y":288,"score":82,"level":0},{"x":1473,"y":288,"score":29,"level":0},{"x":446,"y":289,"score":108,"level":0},{"x":507,"y":289,"score":28,"level":0},{"x":538,"y":289,"score":76,"level":0},{"x":609,"y":289,"score":29,"level":0},{"x":658,"y":289,"score":52,"level":0},{"x":770,"y":289,"score":29,"level":0},{"x":785,"y":289,"score":28,"level":0},{"x":958,"y":289,"score":34,"level":0},{"x":975,"y":289,"score":111,"level":0},{"x":1017,"y":289,"score":68,"level":0},{"x":1056,"y":289,"score":98,"level":0},{"x":1062,"y":289,"score":51,"level":0},{"x":1093,"y":289,"score":30,"level":0},{"x":1095,"y":289,"score":74,"level":0},{"x":1109,"y":289,"score":30,"level":0},{"x":1169,"y":289,"score":77,"level":0},{"x":1187,"y":289,"score":56,"level":0},{"x":1217,"y":289,"score":66,"level":0},{"x":1272,"y":289,"score":69,"level":0},{"x":1335,"y":289,"score":158,"level":0},{"x":1349,"y":289,"score":52,"level":0},{"x":1381,"y":289,"score":42,"level":0},{"x":1430,"y":289,"score":76,"level":0},{"x":1437,"y":289,"score":58,"level":0},{"x":1445,"y":289,"score":34,"level":0},{"x":393,"y":290,"score":46,"level":0},{"x":404,"y":290,"score":138,"level":0},{"x":457,"y":290,"score":85,"level":0},{"x":607,"y":290,"score":76,"level":0},{"x":622,"y":290,"score":103,"level":0},{"x":631,"y":290,"score":30,"level":0},{"x":715,"y":290,"score":42,"level":0},{"x":822,"y":290,"score":32,"level":0},{"x":995,"y":290,"score":28,"level":0},{"x":1001,"y":290,"score":100,"level":0},{"x":1163,"y":290,"score":42,"level":0},{"x":1184,"y":290,"score":39,"level":0},{"x":1236,"y":290,"score":129,"level":0},{"x":1246,"y":290,"score":55,"level":0},{"x":1453,"y":290,"score":44,"level":0},{"x":397,"y":291,"score":115,"level":0},{"x":489,"y":291,"score":117,"level":0},{"x":495,"y":291,"score":64,"level":0},{"x":544,"y":291,"score":32,"level":0},{"x":668,"y":291,"score":82,"level":0},{"x":692,"y":291,"score":36,"level":0},{"x":704,"y":291,"score":36,"level":0},{"x":802,"y":291,"score":36,"level":0},{"x":925,"y":291,"score":62,"level":0},{"x":930,"y":291,"score":76,"level":0},{"x":951,"y":291,"score":58,"level":0},{"x":985,"y":291,"score":130,"level":0},{"x":1056,"y":291,"score":75,"level":0},{"x":1137,"y":291,"score":49,"level":0},{"x":1143,"y":291,"score":80,"level":0},{"x":1150,"y":291,"score":39,"level":0},{"x":1195,"y":291,"score":52,"level":0},{"x":1214,"y":291,"score":42,"level":0},{"x":1226,"y":291,"score":42,"level":0},{"x":1316,"y":291,"score":78,"level":0},{"x":1485,"y":291,"score":89,"level":0},{"x":408,"y":292,"score":32,"level":0},{"x":417,"y":292,"score":117,"level":0},{"x":514,"y":292,"score":96,"level":0},{"x":538,"y":292,"score":28,"level":0},{"x":602,"y":292,"score":100,"level":0},{"x":617,"y":292,"score":42,"level":0},{"x":680,"y":292,"score":91,"level":0},{"x":747,"y":292,"score":31,"level":0},{"x":831,"y":292,"score":99,"level":0},{"x":836,"y":292,"score":38,"level":0},{"x":877,"y":292,"score":100,"level":0},{"x":947,"y":292,"score":45,"level":0},{"x":995,"y":292,"score":73,"level":0},{"x":1050,"y":292,"score":80,"level":0},{"x":1096,"y":292,"score":70,"level":0},{"x":1155,"y":292,"score":42,"level":0},{"x":1223,"y":292,"score":52,"level":0},{"x":1271,"y":292,"score":52,"level":0},{"x":1337,"y":292,"score":83,"level":0},{"x":1394,"y":292,"score":29,"level":0},{"x":549,"y":293,"score":32,"level":0},{"x":556,"y":293,"score":59,"level":0},{"x":566,"y":293,"score":35,"level":0},{"x":612,"y":293,"score":117,"level":0},{"x":695,"y":293,"score":37,"level":0},{"x":780,"y":293,"score":42,"level":0},{"x":809,"y":293,"score":75,"level":0},{"x":865,"y":293,"score":117,"level":0},{"x":922,"y":293,"score":44,"level":0},{"x":989,"y":293,"score":38,"level":0},{"x":1015,"y":293,"score":127,"level":0},{"x":1022,"y":293,"score":32,"level":0},{"x":1079,"y":293,"score":50,"level":0},{"x":1091,"y":293,"score":58,"level":0},{"x":1116,"y":293,"score":84,"level":0},{"x":1122,"y":293,"score":64,"level":0},{"x":1158,"y":293,"score":30,"level":0},{"x":1165,"y":293,"score":116,"level":0},{"x":1265,"y":293,"score":42,"level":0},{"x":1329,"y":293,"score":176,"level":0},{"x":502,"y":294,"score":34,"level":0},{"x":686,"y":294,"score":80,"level":0},{"x":714,"y":294,"score":27,"level":0},{"x":764,"y":294,"score":149,"level":0},{"x":825,"y":294,"score":34,"level":0},{"x":879,"y":294,"score":33,"level":0},{"x":907,"y":294,"score":42,"level":0},{"x":912,"y":294,"score":52,"level":0},{"x":956,"y":294,"score":56,"level":0},{"x":980,"y":294,"score":33,"level":0},{"x":1031,"y":294,"score":37,"level":0},{"x":1043,"y":294,"score":112,"level":0},{"x":1127,"y":294,"score":58,"level":0},{"x":1150,"y":294,"score":36,"level":0},{"x":1240,"y":294,"score":42,"level":0},{"x":1259,"y":294,"score":85,"level":0},{"x":1277,"y":294,"score":99,"level":0},{"x":1335,"y":294,"score":87,"level":0},{"x":1353,"y":294,"score":61,"level":0},{"x":1386,"y":294,"score":29,"level":0},{"x":1476,"y":294,"score":49,"level":0},{"x":1489,"y":294,"score":36,"level":0},{"x":419,"y":295,"score":67,"level":0},{"x":464,"y":295,"score":116,"level":0},{"x":652,"y":295,"score":89,"level":0},{"x":759,"y":295,"score":53,"level":0},{"x":816,"y":295,"score":60,"level":0},{"x":871,"y":295,"score":81,"level":0},{"x":884,"y":295,"score":101,"level":0},{"x":962,"y":295,"score":91,"level":0},{"x":989,"y":295,"score":83,"level":0},{"x":1067,"y":295,"score":50,"level":0},{"x":1113,"y":295,"score":54,"level":0},{"x":1155,"y":295,"score":35,"level":0},{"x":1176,"y":295,"score":45,"level":0},{"x":1187,"y":295,"score":120,"level":0},{"x":1198,"y":295,"score":50,"level":0},{"x":1234,"y":295,"score":73,"level":0},{"x":1253,"y":295,"score":43,"level":0},{"x":1432,"y":295,"score":46,"level":0},{"x":1437,"y":295,"score":109,"level":0},{"x":1457,"y":295,"score":70,"level":0},{"x":1459,"y":295,"score":71,"level":0},{"x":1465,"y":295,"score":66,"level":0},{"x":441,"y":296,"score":180,"level":0},{"x":458,"y":296,"score":64,"level":0},{"x":480,"y":296,"score":74,"level":0},{"x":506,"y":296,"score":40,"level":0},{"x":644,"y":296,"score":50,"level":0},{"x":708,"y":296,"score":90,"level":0},{"x":725,"y":296,"score":42,"level":0},{"x":820,"y":296,"score":108,"level":0},{"x":927,"y":296,"score":52,"level":0},{"x":936,"y":296,"score":69,"level":0},{"x":938,"y":296,"score":80,"level":0},{"x":1026,"y":296,"score":98,"level":0},{"x":1069,"y":296,"score":64,"level":0},{"x":1137,"y":296,"score":64,"level":0},{"x":1170,"y":296,"score":32,"level":0},{"x":1208,"y":296,"score":80,"level":0},{"x":1261,"y":296,"score":68,"level":0},{"x":1371,"y":296,"score":46,"level":0},{"x":1398,"y":296,"score":29,"level":0},{"x":1481,"y":296,"score":53,"level":0},{"x":1486,"y":296,"score":56,"level":0},{"x":397,"y":297,"score":61,"level":0},{"x":402,"y":297,"score":78,"level":0},{"x":456,"y":297,"score":58,"level":0},{"x":500,"y":297,"score":49,"level":0},{"x":540,"y":297,"score":50,"level":0},{"x":553,"y":297,"score":29,"level":0},{"x":604,"y":297,"score":111,"level":0},{"x":611,"y":297,"score":98,"level":0},{"x":619,"y":297,"score":54,"level":0},{"x":678,"y":297,"score":48,"level":0},{"x":722,"y":297,"score":36,"level":0},{"x":838,"y":297,"score":142,"level":0},{"x":932,"y":297,"score":89,"level":0},{"x":947,"y":297,"score":41,"level":0},{"x":953,"y":297,"score":57,"level":0},{"x":967,"y":297,"score":36,"level":0},{"x":1048,"y":297,"score":31,"level":0},{"x":1140,"y":297,"score":28,"level":0},{"x":1233,"y":297,"score":63,"level":0},{"x":1320,"y":297,"score":93,"level":0},{"x":1325,"y":297,"score":107,"level":0},{"x":1438,"y":297,"score":88,"level":0},{"x":1453,"y":297,"score":34,"level":0},{"x":1470,"y":297,"score":41,"level":0},{"x":377,"y":298,"score":76,"level":0},{"x":494,"y":298,"score":33,"level":0},{"x":579,"y":298,"score":31,"level":0},{"x":649,"y":298,"score":30,"level":0},{"x":660,"y":298,"score":45,"level":0},{"x":685,"y":298,"score":93,"level":0},{"x":694,"y":298,"score":99,"level":0},{"x":813,"y":298,"score":31,"level":0},{"x":991,"y":298,"score":81,"level":0},{"x":1083,"y":298,"score":78,"level":0},{"x":1101,"y":298,"score":42,"level":0},{"x":1103,"y":298,"score":50,"level":0},{"x":1122,"y":298,"score":95,"level":0},{"x":1151,"y":298,"score":40,"level":0},{"x":1167,"y":298,"score":130,"level":0},{"x":1179,"y":298,"score":72,"level":0},{"x":1192,"y":298,"score":54,"level":0},{"x":1225,"y":298,"score":28,"level":0},{"x":1311,"y":298,"score":26,"level":0},{"x":1350,"y":298,"score":74,"level":0},{"x":1367,"y":298,"score":32,"level":0},{"x":1387,"y":298,"score":47,"level":0},{"x":1465,"y":298,"score":32,"level":0},{"x":1472,"y":298,"score":95,"level":0},{"x":390,"y":299,"score":64,"level":0},{"x":688,"y":299,"score":90,"level":0},{"x":700,"y":299,"score":52,"level":0},{"x":712,"y":299,"score":62,"level":0},{"x":729,"y":299,"score":51,"level":0},{"x":747,"y":299,"score":30,"level":0},{"x":782,"y":299,"score":120,"level":0},{"x":801,"y":299,"score":51,"level":0},{"x":879,"y":299,"score":66,"level":0},{"x":985,"y":299,"score":84,"level":0},{"x":1003,"y":299,"score":29,"level":0},{"x":1027,"y":299,"score":94,"level":0},{"x":1237,"y":299,"score":51,"level":0},{"x":1250,"y":299,"score":56,"level":0},{"x":1258,"y":299,"score":28,"level":0},{"x":1355,"y":299,"score":44,"level":0},{"x":1374,"y":299,"score":37,"level":0},{"x":1477,"y":299,"score":55,"level":0},{"x":384,"y":300,"score":36,"level":0},{"x":392,"y":300,"score":76,"level":0},{"x":412,"y":300,"score":34,"level":0},{"x":483,"y":300,"score":41,"level":0},{"x":499,"y":300,"score":36,"level":0},{"x":671,"y":300,"score":60,"level":0},{"x":761,"y":300,"score":71,"level":0},{"x":770,"y":300,"score":105,"level":0},{"x":871,"y":300,"score":56,"level":0},{"x":890,"y":300,"score":50,"level":0},{"x":939,"y":300,"score":49,"level":0},{"x":991,"y":300,"score":66,"level":0},{"x":1020,"y":300,"score":36,"level":0},{"x":1054,"y":300,"score":68,"level":0},{"x":1088,"y":300,"score":27,"level":0},{"x":1136,"y":300,"score":51,"level":0},{"x":1145,"y":300,"score":111,"level":0},{"x":1155,"y":300,"score":35,"level":0},{"x":1186,"y":300,"score":50,"level":0},{"x":475,"y":301,"score":26,"level":0},{"x":504,"y":301,"score":29,"level":0},{"x":562,"y":301,"score":80,"level":0},{"x":636,"y":301,"score":98,"level":0},{"x":642,"y":301,"score":60,"level":0},{"x":702,"y":301,"score":35,"level":0},{"x":753,"y":301,"score":32,"level":0},{"x":766,"y":301,"score":92,"level":0},{"x":785,"y":301,"score":135,"level":0},{"x":928,"y":301,"score":49,"level":0},{"x":948,"y":301,"score":81,"level":0},{"x":973,"y":301,"score":102,"level":0},{"x":979,"y":301,"score":28,"level":0},{"x":1007,"y":301,"score":31,"level":0},{"x":1042,"y":301,"score":68,"level":0},{"x":1063,"y":301,"score":42,"level":0},{"x":1074,"y":301,"score":58,"level":0},{"x":1108,"y":301,"score":30,"level":0},{"x":1243,"y":301,"score":69,"level":0},{"x":1280,"y":301,"score":73,"level":0},{"x":1324,"y":301,"score":40,"level":0},{"x":1429,"y":301,"score":99,"level":0},{"x":1473,"y":301,"score":56,"level":0},{"x":1481,"y":301,"score":38,"level":0},{"x":401,"y":302,"score":39,"level":0},{"x":406,"y":302,"score":36,"level":0},{"x":484,"y":302,"score":59,"level":0},{"x":489,"y":302,"score":29,"level":0},{"x":530,"y":302,"score":71,"level":0},{"x":552,"y":302,"score":110,"level":0},{"x":560,"y":302,"score":71,"level":0},{"x":618,"y":302,"score":128,"level":0},{"x":721,"y":302,"score":46,"level":0},{"x":822,"y":302,"score":34,"level":0},{"x":828,"y":302,"score":66,"level":0},{"x":932,"y":302,"score":82,"level":0},{"x":1149,"y":302,"score":47,"level":0},{"x":1165,"y":302,"score":96,"level":0},{"x":1238,"y":302,"score":35,"level":0},{"x":1329,"y":302,"score":79,"level":0},{"x":1334,"y":302,"score":57,"level":0},{"x":1343,"y":302,"score":34,"level":0},{"x":1438,"y":302,"score":63,"level":0},{"x":1444,"y":302,"score":50,"level":0},{"x":1453,"y":302,"score":32,"level":0},{"x":440,"y":303,"score":72,"level":0},{"x":523,"y":303,"score":76,"level":0},{"x":546,"y":303,"score":28,"level":0},{"x":649,"y":303,"score":77,"level":0},{"x":655,"y":303,"score":46,"level":0},{"x":759,"y":303,"score":48,"level":0},{"x":1016,"y":303,"score":121,"level":0},{"x":1112,"y":303,"score":74,"level":0},{"x":1137,"y":303,"score":48,"level":0},{"x":1174,"y":303,"score":67,"level":0},{"x":1181,"y":303,"score":81,"level":0},{"x":1214,"y":303,"score":83,"level":0},{"x":1225,"y":303,"score":146,"level":0},{"x":1270,"y":303,"score":143,"level":0},{"x":1353,"y":303,"score":95,"level":0},{"x":1393,"y":303,"score":46,"level":0},{"x":377,"y":304,"score":274,"level":0},{"x":417,"y":304,"score":88,"level":0},{"x":660,"y":304,"score":34,"level":0},{"x":707,"y":304,"score":55,"level":0},{"x":712,"y":304,"score":33,"level":0},{"x":793,"y":304,"score":187,"level":0},{"x":833,"y":304,"score":37,"level":0},{"x":864,"y":304,"score":174,"level":0},{"x":890,"y":304,"score":64,"level":0},{"x":937,"y":304,"score":34,"level":0},{"x":967,"y":304,"score":54,"level":0},{"x":984,"y":304,"score":57,"level":0},{"x":1117,"y":304,"score":114,"level":0},{"x":1276,"y":304,"score":110,"level":0},{"x":1291,"y":304,"score":39,"level":0},{"x":1357,"y":304,"score":54,"level":0},{"x":1387,"y":304,"score":60,"level":0},{"x":1462,"y":304,"score":91,"level":0},{"x":1485,"y":304,"score":91,"level":0},{"x":1488,"y":304,"score":65,"level":0},{"x":431,"y":305,"score":45,"level":0},{"x":447,"y":305,"score":69,"level":0},{"x":462,"y":305,"score":109,"level":0},{"x":499,"y":305,"score":69,"level":0},{"x":523,"y":305,"score":37,"level":0},{"x":607,"y":305,"score":46,"level":0},{"x":613,"y":305,"score":49,"level":0},{"x":655,"y":305,"score":51,"level":0},{"x":697,"y":305,"score":91,"level":0},{"x":781,"y":305,"score":112,"level":0},{"x":902,"y":305,"score":83,"level":0},{"x":942,"y":305,"score":47,"level":0},{"x":1093,"y":305,"score":53,"level":0},{"x":1124,"y":305,"score":44,"level":0},{"x":1129,"y":305,"score":63,"level":0},{"x":1148,"y":305,"score":37,"level":0},{"x":1165,"y":305,"score":49,"level":0},{"x":1187,"y":305,"score":28,"level":0},{"x":1213,"y":305,"score":48,"level":0},{"x":1252,"y":305,"score":59,"level":0},{"x":1348,"y":305,"score":138,"level":0},{"x":1449,"y":305,"score":36,"level":0},{"x":452,"y":306,"score":37,"level":0},{"x":489,"y":306,"score":27,"level":0},{"x":643,"y":306,"score":31,"level":0},{"x":704,"y":306,"score":53,"level":0},{"x":767,"y":306,"score":120,"level":0},{"x":774,"y":306,"score":74,"level":0},{"x":801,"y":306,"score":60,"level":0},{"x":832,"y":306,"score":37,"level":0},{"x":869,"y":306,"score":58,"level":0},{"x":955,"y":306,"score":96,"level":0},{"x":1002,"y":306,"score":156,"level":0},{"x":1007,"y":306,"score":81,"level":0},{"x":1082,"y":306,"score":83,"level":0},{"x":1088,"y":306,"score":37,"level":0},{"x":1193,"y":306,"score":27,"level":0},{"x":1199,"y":306,"score":70,"level":0},{"x":1260,"y":306,"score":38,"level":0},{"x":1375,"y":306,"score":38,"level":0},{"x":1421,"y":306,"score":28,"level":0},{"x":1430,"y":306,"score":35,"level":0},{"x":1446,"y":306,"score":39,"level":0},{"x":1457,"y":306,"score":44,"level":0},{"x":1484,"y":306,"score":52,"level":0},{"x":408,"y":307,"score":55,"level":0},{"x":510,"y":307,"score":48,"level":0},{"x":552,"y":307,"score":37,"level":0},{"x":557,"y":307,"score":26,"level":0},{"x":599,"y":307,"score":34,"level":0},{"x":692,"y":307,"score":48,"level":0},{"x":883,"y":307,"score":45,"level":0},{"x":948,"y":307,"score":199,"level":0},{"x":968,"y":307,"score":42,"level":0},{"x":1140,"y":307,"score":92,"level":0},{"x":1153,"y":307,"score":31,"level":0},{"x":1162,"y":307,"score":41,"level":0},{"x":1212,"y":307,"score":59,"level":0},{"x":1316,"y":307,"score":74,"level":0},{"x":1340,"y":307,"score":52,"level":0},{"x":1361,"y":307,"score":120,"level":0},{"x":1452,"y":307,"score":36,"level":0},{"x":1479,"y":307,"score":147,"level":0},{"x":400,"y":308,"score":113,"level":0},{"x":406,"y":308,"score":72,"level":0},{"x":547,"y":308,"score":105,"level":0},{"x":752,"y":308,"score":102,"level":0},{"x":761,"y":308,"score":69,"level":0},{"x":1103,"y":308,"score":40,"level":0},{"x":1112,"y":308,"score":88,"level":0},{"x":1181,"y":308,"score":93,"level":0},{"x":1234,"y":308,"score":55,"level":0},{"x":1248,"y":308,"score":32,"level":0},{"x":1280,"y":308,"score":121,"level":0},{"x":1335,"y":308,"score":72,"level":0},{"x":1377,"y":308,"score":30,"level":0},{"x":1398,"y":308,"score":29,"level":0},{"x":1469,"y":308,"score":32,"level":0},{"x":435,"y":309,"score":35,"level":0},{"x":451,"y":309,"score":31,"level":0},{"x":721,"y":309,"score":44,"level":0},{"x":724,"y":309,"score":31,"level":0},{"x":1018,"y":309,"score":52,"level":0},{"x":1095,"y":309,"score":56,"level":0},{"x":1100,"y":309,"score":60,"level":0},{"x":1210,"y":309,"score":90,"level":0},{"x":1272,"y":309,"score":45,"level":0},{"x":1443,"y":309,"score":70,"level":0},{"x":548,"y":310,"score":98,"level":0},{"x":711,"y":310,"score":104,"level":0},{"x":745,"y":310,"score":62,"level":0},{"x":783,"y":310,"score":82,"level":0},{"x":806,"y":310,"score":143,"level":0},{"x":839,"y":310,"score":26,"level":0},{"x":1025,"y":310,"score":101,"level":0},{"x":1117,"y":310,"score":35,"level":0},{"x":1290,"y":310,"score":80,"level":0},{"x":380,"y":311,"score":123,"level":0},{"x":399,"y":311,"score":153,"level":0},{"x":467,"y":311,"score":30,"level":0},{"x":566,"y":311,"score":210,"level":0},{"x":607,"y":311,"score":126,"level":0},{"x":613,"y":311,"score":130,"level":0},{"x":618,"y":311,"score":53,"level":0},{"x":623,"y":311,"score":80,"level":0},{"x":640,"y":311,"score":35,"level":0},{"x":696,"y":311,"score":66,"level":0},{"x":720,"y":311,"score":32,"level":0},{"x":800,"y":311,"score":181,"level":0},{"x":872,"y":311,"score":29,"level":0},{"x":906,"y":311,"score":41,"level":0},{"x":978,"y":311,"score":30,"level":0},{"x":987,"y":311,"score":43,"level":0},{"x":995,"y":311,"score":48,"level":0},{"x":1078,"y":311,"score":58,"level":0},{"x":1132,"y":311,"score":75,"level":0},{"x":1144,"y":311,"score":104,"level":0},{"x":1191,"y":311,"score":46,"level":0},{"x":1227,"y":311,"score":58,"level":0},{"x":1229,"y":311,"score":94,"level":0},{"x":1268,"y":311,"score":55,"level":0},{"x":1353,"y":311,"score":43,"level":0},{"x":1456,"y":311,"score":35,"level":0},{"x":1469,"y":311,"score":35,"level":0},{"x":393,"y":312,"score":101,"level":0},{"x":551,"y":312,"score":95,"level":0},{"x":556,"y":312,"score":124,"level":0},{"x":633,"y":312,"score":41,"level":0},{"x":660,"y":312,"score":29,"level":0},{"x":716,"y":312,"score":38,"level":0},{"x":735,"y":312,"score":46,"level":0},{"x":786,"y":312,"score":108,"level":0},{"x":942,"y":312,"score":47,"level":0},{"x":1056,"y":312,"score":39,"level":0},{"x":1106,"y":312,"score":32,"level":0},{"x":1150,"y":312,"score":44,"level":0},{"x":1186,"y":312,"score":35,"level":0},{"x":1245,"y":312,"score":45,"level":0},{"x":1339,"y":312,"score":34,"level":0},{"x":1376,"y":312,"score":26,"level":0},{"x":1464,"y":312,"score":88,"level":0},{"x":403,"y":313,"score":69,"level":0},{"x":441,"y":313,"score":108,"level":0},{"x":513,"y":313,"score":70,"level":0},{"x":655,"y":313,"score":68,"level":0},{"x":675,"y":313,"score":99,"level":0},{"x":728,"y":313,"score":32,"level":0},{"x":826,"y":313,"score":73,"level":0},{"x":924,"y":313,"score":44,"level":0},{"x":1002,"y":313,"score":48,"level":0},{"x":1121,"y":313,"score":70,"level":0},{"x":1175,"y":313,"score":30,"level":0},{"x":1200,"y":313,"score":148,"level":0},{"x":1205,"y":313,"score":123,"level":0},{"x":1278,"y":313,"score":84,"level":0},{"x":1451,"y":313,"score":45,"level":0},{"x":1458,"y":313,"score":76,"level":0},{"x":1488,"y":313,"score":29,"level":0},{"x":413,"y":314,"score":51,"level":0},{"x":436,"y":314,"score":66,"level":0},{"x":627,"y":314,"score":38,"level":0},{"x":670,"y":314,"score":52,"level":0},{"x":685,"y":314,"score":71,"level":0},{"x":791,"y":314,"score":161,"level":0},{"x":834,"y":314,"score":46,"level":0},{"x":948,"y":314,"score":61,"level":0},{"x":992,"y":314,"score":26,"level":0},{"x":1040,"y":314,"score":58,"level":0},{"x":1091,"y":314,"score":81,"level":0},{"x":1164,"y":314,"score":48,"level":0},{"x":1170,"y":314,"score":44,"level":0},{"x":1180,"y":314,"score":60,"level":0},{"x":1220,"y":314,"score":26,"level":0},{"x":1251,"y":314,"score":37,"level":0},{"x":1270,"y":314,"score":47,"level":0},{"x":1332,"y":314,"score":50,"level":0},{"x":1337,"y":314,"score":92,"level":0},{"x":1355,"y":314,"score":34,"level":0},{"x":1365,"y":314,"score":45,"level":0},{"x":1386,"y":314,"score":30,"level":0},{"x":1474,"y":314,"score":45,"level":0},{"x":1477,"y":314,"score":124,"level":0},{"x":1484,"y":314,"score":95,"level":0},{"x":497,"y":315,"score":156,"level":0},{"x":738,"y":315,"score":28,"level":0},{"x":891,"y":315,"score":152,"level":0},{"x":904,"y":315,"score":58,"level":0},{"x":954,"y":315,"score":42,"level":0},{"x":995,"y":315,"score":85,"level":0},{"x":1003,"y":315,"score":51,"level":0},{"x":1008,"y":315,"score":32,"level":0},{"x":1059,"y":315,"score":63,"level":0},{"x":1103,"y":315,"score":36,"level":0},{"x":1121,"y":315,"score":72,"level":0},{"x":1127,"y":315,"score":26,"level":0},{"x":1233,"y":315,"score":40,"level":0},{"x":1346,"y":315,"score":35,"level":0},{"x":1360,"y":315,"score":159,"level":0},{"x":1388,"y":315,"score":35,"level":0},{"x":1390,"y":315,"score":47,"level":0},{"x":490,"y":316,"score":57,"level":0},{"x":552,"y":316,"score":26,"level":0},{"x":570,"y":316,"score":51,"level":0},{"x":702,"y":316,"score":42,"level":0},{"x":717,"y":316,"score":120,"level":0},{"x":730,"y":316,"score":39,"level":0},{"x":740,"y":316,"score":46,"level":0},{"x":809,"y":316,"score":151,"level":0},{"x":827,"y":316,"score":60,"level":0},{"x":866,"y":316,"score":56,"level":0},{"x":875,"y":316,"score":60,"level":0},{"x":889,"y":316,"score":168,"level":0},{"x":919,"y":316,"score":36,"level":0},{"x":1057,"y":316,"score":61,"level":0},{"x":1290,"y":316,"score":151,"level":0},{"x":1295,"y":316,"score":54,"level":0},{"x":399,"y":317,"score":61,"level":0},{"x":506,"y":317,"score":116,"level":0},{"x":547,"y":317,"score":157,"level":0},{"x":642,"y":317,"score":53,"level":0},{"x":711,"y":317,"score":28,"level":0},{"x":794,"y":317,"score":132,"level":0},{"x":801,"y":317,"score":104,"level":0},{"x":879,"y":317,"score":40,"level":0},{"x":980,"y":317,"score":29,"level":0},{"x":1001,"y":317,"score":35,"level":0},{"x":1007,"y":317,"score":40,"level":0},{"x":1068,"y":317,"score":49,"level":0},{"x":1086,"y":317,"score":44,"level":0},{"x":1146,"y":317,"score":26,"level":0},{"x":1155,"y":317,"score":77,"level":0},{"x":1379,"y":317,"score":54,"level":0},{"x":1463,"y":317,"score":30,"level":0},{"x":1470,"y":317,"score":31,"level":0},{"x":419,"y":318,"score":126,"level":0},{"x":470,"y":318,"score":114,"level":0},{"x":504,"y":318,"score":118,"level":0},{"x":527,"y":318,"score":68,"level":0},{"x":564,"y":318,"score":35,"level":0},{"x":907,"y":318,"score":42,"level":0},{"x":924,"y":318,"score":32,"level":0},{"x":1091,"y":318,"score":54,"level":0},{"x":1102,"y":318,"score":48,"level":0},{"x":1230,"y":318,"score":48,"level":0},{"x":1256,"y":318,"score":32,"level":0},{"x":1285,"y":318,"score":35,"level":0},{"x":1328,"y":318,"score":55,"level":0},{"x":1396,"y":318,"score":56,"level":0},{"x":1483,"y":318,"score":93,"level":0},{"x":377,"y":319,"score":63,"level":0},{"x":383,"y":319,"score":149,"level":0},{"x":482,"y":319,"score":56,"level":0},{"x":521,"y":319,"score":53,"level":0},{"x":582,"y":319,"score":40,"level":0},{"x":612,"y":319,"score":60,"level":0},{"x":689,"y":319,"score":208,"level":0},{"x":789,"y":319,"score":64,"level":0},{"x":839,"y":319,"score":59,"level":0},{"x":934,"y":319,"score":36,"level":0},{"x":1053,"y":319,"score":116,"level":0},{"x":1115,"y":319,"score":95,"level":0},{"x":1206,"y":319,"score":147,"level":0},{"x":1235,"y":319,"score":51,"level":0},{"x":1272,"y":319,"score":54,"level":0},{"x":1277,"y":319,"score":44,"level":0},{"x":1317,"y":319,"score":48,"level":0},{"x":1335,"y":319,"score":42,"level":0},{"x":1339,"y":319,"score":27,"level":0},{"x":1341,"y":319,"score":50,"level":0},{"x":1357,"y":319,"score":142,"level":0},{"x":1393,"y":319,"score":29,"level":0},{"x":1455,"y":319,"score":44,"level":0},{"x":393,"y":320,"score":104,"level":0},{"x":403,"y":320,"score":89,"level":0},{"x":449,"y":320,"score":188,"level":0},{"x":507,"y":320,"score":67,"level":0},{"x":527,"y":320,"score":40,"level":0},{"x":601,"y":320,"score":92,"level":0},{"x":633,"y":320,"score":44,"level":0},{"x":654,"y":320,"score":39,"level":0},{"x":682,"y":320,"score":89,"level":0},{"x":745,"y":320,"score":46,"level":0},{"x":818,"y":320,"score":70,"level":0},{"x":823,"y":320,"score":155,"level":0},{"x":985,"y":320,"score":130,"level":0},{"x":991,"y":320,"score":50,"level":0},{"x":1010,"y":320,"score":86,"level":0},{"x":1012,"y":320,"score":39,"level":0},{"x":1021,"y":320,"score":56,"level":0},{"x":1051,"y":320,"score":105,"level":0},{"x":1066,"y":320,"score":74,"level":0},{"x":1139,"y":320,"score":66,"level":0},{"x":1192,"y":320,"score":33,"level":0},{"x":1252,"y":320,"score":26,"level":0},{"x":1388,"y":320,"score":44,"level":0},{"x":438,"y":321,"score":33,"level":0},{"x":476,"y":321,"score":77,"level":0},{"x":505,"y":321,"score":80,"level":0},{"x":531,"y":321,"score":30,"level":0},{"x":612,"y":321,"score":105,"level":0},{"x":638,"y":321,"score":88,"level":0},{"x":662,"y":321,"score":36,"level":0},{"x":703,"y":321,"score":52,"level":0},{"x":997,"y":321,"score":232,"level":0},{"x":1061,"y":321,"score":42,"level":0},{"x":1109,"y":321,"score":104,"level":0},{"x":1122,"y":321,"score":67,"level":0},{"x":1184,"y":321,"score":60,"level":0},{"x":1189,"y":321,"score":28,"level":0},{"x":1443,"y":321,"score":74,"level":0},{"x":1469,"y":321,"score":55,"level":0},{"x":443,"y":322,"score":68,"level":0},{"x":510,"y":322,"score":27,"level":0},{"x":715,"y":322,"score":64,"level":0},{"x":726,"y":322,"score":46,"level":0},{"x":745,"y":322,"score":26,"level":0},{"x":886,"y":322,"score":37,"level":0},{"x":904,"y":322,"score":30,"level":0},{"x":970,"y":322,"score":31,"level":0},{"x":1027,"y":322,"score":78,"level":0},{"x":1039,"y":322,"score":30,"level":0},{"x":1070,"y":322,"score":104,"level":0},{"x":1076,"y":322,"score":51,"level":0},{"x":1105,"y":322,"score":47,"level":0},{"x":1114,"y":322,"score":63,"level":0},{"x":1166,"y":322,"score":83,"level":0},{"x":1268,"y":322,"score":51,"level":0},{"x":1273,"y":322,"score":77,"level":0},{"x":1339,"y":322,"score":43,"level":0},{"x":1458,"y":322,"score":58,"level":0},{"x":389,"y":323,"score":80,"level":0},{"x":397,"y":323,"score":32,"level":0},{"x":523,"y":323,"score":162,"level":0},{"x":551,"y":323,"score":47,"level":0},{"x":585,"y":323,"score":52,"level":0},{"x":708,"y":323,"score":27,"level":0},{"x":912,"y":323,"score":33,"level":0},{"x":918,"y":323,"score":69,"level":0},{"x":973,"y":323,"score":30,"level":0},{"x":979,"y":323,"score":95,"level":0},{"x":1009,"y":323,"score":69,"level":0},{"x":1054,"y":323,"score":26,"level":0},{"x":1063,"y":323,"score":27,"level":0},{"x":1096,"y":323,"score":58,"level":0},{"x":1219,"y":323,"score":149,"level":0},{"x":1259,"y":323,"score":89,"level":0},{"x":1430,"y":323,"score":32,"level":0},{"x":407,"y":324,"score":30,"level":0},{"x":473,"y":324,"score":79,"level":0},{"x":483,"y":324,"score":28,"level":0},{"x":560,"y":324,"score":47,"level":0},{"x":591,"y":324,"score":103,"level":0},{"x":594,"y":324,"score":117,"level":0},{"x":619,"y":324,"score":209,"level":0},{"x":957,"y":324,"score":121,"level":0},{"x":1014,"y":324,"score":63,"level":0},{"x":1019,"y":324,"score":35,"level":0},{"x":1058,"y":324,"score":57,"level":0},{"x":1156,"y":324,"score":44,"level":0},{"x":1161,"y":324,"score":66,"level":0},{"x":1225,"y":324,"score":106,"level":0},{"x":1244,"y":324,"score":85,"level":0},{"x":1372,"y":324,"score":53,"level":0},{"x":1377,"y":324,"score":31,"level":0},{"x":1380,"y":324,"score":30,"level":0},{"x":1480,"y":324,"score":154,"level":0},{"x":529,"y":325,"score":126,"level":0},{"x":534,"y":325,"score":49,"level":0},{"x":605,"y":325,"score":33,"level":0},{"x":612,"y":325,"score":35,"level":0},{"x":632,"y":325,"score":67,"level":0},{"x":733,"y":325,"score":39,"level":0},{"x":740,"y":325,"score":81,"level":0},{"x":985,"y":325,"score":95,"level":0},{"x":1062,"y":325,"score":66,"level":0},{"x":1101,"y":325,"score":100,"level":0},{"x":1136,"y":325,"score":87,"level":0},{"x":1346,"y":325,"score":43,"level":0},{"x":1351,"y":325,"score":60,"level":0},{"x":1362,"y":325,"score":55,"level":0},{"x":396,"y":326,"score":75,"level":0},{"x":425,"y":326,"score":38,"level":0},{"x":463,"y":326,"score":146,"level":0},{"x":544,"y":326,"score":119,"level":0},{"x":553,"y":326,"score":29,"level":0},{"x":603,"y":326,"score":75,"level":0},{"x":638,"y":326,"score":41,"level":0},{"x":897,"y":326,"score":26,"level":0},{"x":972,"y":326,"score":43,"level":0},{"x":979,"y":326,"score":100,"level":0},{"x":1080,"y":326,"score":133,"level":0},{"x":1129,"y":326,"score":76,"level":0},{"x":1152,"y":326,"score":78,"level":0},{"x":1184,"y":326,"score":37,"level":0},{"x":1206,"y":326,"score":182,"level":0},{"x":1263,"y":326,"score":66,"level":0},{"x":1317,"y":326,"score":48,"level":0},{"x":1357,"y":326,"score":115,"level":0},{"x":1367,"y":326,"score":34,"level":0},{"x":1451,"y":326,"score":87,"level":0},{"x":418,"y":327,"score":57,"level":0},{"x":461,"y":327,"score":110,"level":0},{"x":476,"y":327,"score":33,"level":0},{"x":536,"y":327,"score":41,"level":0},{"x":556,"y":327,"score":29,"level":0},{"x":609,"y":327,"score":65,"level":0},{"x":613,"y":327,"score":67,"level":0},{"x":624,"y":327,"score":41,"level":0},{"x":655,"y":327,"score":95,"level":0},{"x":666,"y":327,"score":68,"level":0},{"x":693,"y":327,"score":100,"level":0},{"x":729,"y":327,"score":49,"level":0},{"x":838,"y":327,"score":46,"level":0},{"x":889,"y":327,"score":85,"level":0},{"x":966,"y":327,"score":136,"level":0},{"x":1023,"y":327,"score":42,"level":0},{"x":1060,"y":327,"score":96,"level":0},{"x":1121,"y":327,"score":41,"level":0},{"x":1253,"y":327,"score":28,"level":0},{"x":1348,"y":327,"score":50,"level":0},{"x":1465,"y":327,"score":150,"level":0},{"x":1481,"y":327,"score":72,"level":0},{"x":1487,"y":327,"score":69,"level":0},{"x":386,"y":328,"score":51,"level":0},{"x":451,"y":328,"score":30,"level":0},{"x":496,"y":328,"score":96,"level":0},{"x":549,"y":328,"score":72,"level":0},{"x":640,"y":328,"score":57,"level":0},{"x":647,"y":328,"score":104,"level":0},{"x":865,"y":328,"score":139,"level":0},{"x":919,"y":328,"score":41,"level":0},{"x":1008,"y":328,"score":105,"level":0},{"x":1053,"y":328,"score":130,"level":0},{"x":1196,"y":328,"score":40,"level":0},{"x":1211,"y":328,"score":61,"level":0},{"x":1236,"y":328,"score":29,"level":0},{"x":1338,"y":328,"score":52,"level":0},{"x":1400,"y":328,"score":28,"level":0},{"x":456,"y":329,"score":144,"level":0},{"x":464,"y":329,"score":120,"level":0},{"x":470,"y":329,"score":53,"level":0},{"x":484,"y":329,"score":48,"level":0},{"x":490,"y":329,"score":88,"level":0},{"x":503,"y":329,"score":73,"level":0},{"x":619,"y":329,"score":35,"level":0},{"x":669,"y":329,"score":28,"level":0},{"x":680,"y":329,"score":73,"level":0},{"x":819,"y":329,"score":137,"level":0},{"x":876,"y":329,"score":196,"level":0},{"x":892,"y":329,"score":41,"level":0},{"x":926,"y":329,"score":96,"level":0},{"x":947,"y":329,"score":64,"level":0},{"x":956,"y":329,"score":178,"level":0},{"x":969,"y":329,"score":153,"level":0},{"x":1050,"y":329,"score":91,"level":0},{"x":1218,"y":329,"score":165,"level":0},{"x":1266,"y":329,"score":32,"level":0},{"x":1272,"y":329,"score":89,"level":0},{"x":1366,"y":329,"score":50,"level":0},{"x":1440,"y":329,"score":87,"level":0},{"x":393,"y":330,"score":136,"level":0},{"x":598,"y":330,"score":58,"level":0},{"x":611,"y":330,"score":68,"level":0},{"x":663,"y":330,"score":93,"level":0},{"x":674,"y":330,"score":68,"level":0},{"x":713,"y":330,"score":72,"level":0},{"x":725,"y":330,"score":31,"level":0},{"x":732,"y":330,"score":168,"level":0},{"x":886,"y":330,"score":78,"level":0},{"x":980,"y":330,"score":89,"level":0},{"x":992,"y":330,"score":86,"level":0},{"x":1268,"y":330,"score":30,"level":0},{"x":1333,"y":330,"score":41,"level":0},{"x":1356,"y":330,"score":41,"level":0},{"x":1427,"y":330,"score":30,"level":0},{"x":1453,"y":330,"score":32,"level":0},{"x":1475,"y":330,"score":94,"level":0},{"x":1480,"y":330,"score":79,"level":0},{"x":1490,"y":330,"score":38,"level":0},{"x":404,"y":331,"score":91,"level":0},{"x":446,"y":331,"score":48,"level":0},{"x":652,"y":331,"score":47,"level":0},{"x":659,"y":331,"score":34,"level":0},{"x":952,"y":331,"score":114,"level":0},{"x":985,"y":331,"score":176,"level":0},{"x":1008,"y":331,"score":34,"level":0},{"x":1049,"y":331,"score":66,"level":0},{"x":1067,"y":331,"score":91,"level":0},{"x":1105,"y":331,"score":58,"level":0},{"x":1187,"y":331,"score":56,"level":0},{"x":1224,"y":331,"score":113,"level":0},{"x":1234,"y":331,"score":28,"level":0},{"x":1243,"y":331,"score":107,"level":0},{"x":417,"y":332,"score":52,"level":0},{"x":422,"y":332,"score":126,"level":0},{"x":435,"y":332,"score":31,"level":0},{"x":467,"y":332,"score":85,"level":0},{"x":588,"y":332,"score":34,"level":0},{"x":604,"y":332,"score":62,"level":0},{"x":666,"y":332,"score":77,"level":0},{"x":674,"y":332,"score":51,"level":0},{"x":839,"y":332,"score":29,"level":0},{"x":860,"y":332,"score":44,"level":0},{"x":870,"y":332,"score":27,"level":0},{"x":1002,"y":332,"score":94,"level":0},{"x":1044,"y":332,"score":66,"level":0},{"x":1092,"y":332,"score":61,"level":0},{"x":1259,"y":332,"score":93,"level":0},{"x":1278,"y":332,"score":216,"level":0},{"x":1334,"y":332,"score":62,"level":0},{"x":1348,"y":332,"score":44,"level":0},{"x":1355,"y":332,"score":52,"level":0},{"x":1468,"y":332,"score":44,"level":0},{"x":1490,"y":332,"score":27,"level":0},{"x":411,"y":333,"score":44,"level":0},{"x":446,"y":333,"score":38,"level":0},{"x":496,"y":333,"score":64,"level":0},{"x":509,"y":333,"score":26,"level":0},{"x":622,"y":333,"score":59,"level":0},{"x":629,"y":333,"score":88,"level":0},{"x":635,"y":333,"score":152,"level":0},{"x":701,"y":333,"score":55,"level":0},{"x":892,"y":333,"score":51,"level":0},{"x":898,"y":333,"score":32,"level":0},{"x":963,"y":333,"score":209,"level":0},{"x":974,"y":333,"score":52,"level":0},{"x":1060,"y":333,"score":27,"level":0},{"x":1128,"y":333,"score":120,"level":0},{"x":1196,"y":333,"score":32,"level":0},{"x":1204,"y":333,"score":66,"level":0},{"x":1256,"y":333,"score":68,"level":0},{"x":1449,"y":333,"score":26,"level":0},{"x":399,"y":334,"score":57,"level":0},{"x":455,"y":334,"score":94,"level":0},{"x":504,"y":334,"score":37,"level":0},{"x":524,"y":334,"score":140,"level":0},{"x":526,"y":334,"score":132,"level":0},{"x":531,"y":334,"score":80,"level":0},{"x":554,"y":334,"score":31,"level":0},{"x":641,"y":334,"score":119,"level":0},{"x":647,"y":334,"score":28,"level":0},{"x":665,"y":334,"score":61,"level":0},{"x":682,"y":334,"score":177,"level":0},{"x":693,"y":334,"score":72,"level":0},{"x":912,"y":334,"score":52,"level":0},{"x":947,"y":334,"score":119,"level":0},{"x":955,"y":334,"score":137,"level":0},{"x":1007,"y":334,"score":28,"level":0},{"x":1116,"y":334,"score":42,"level":0},{"x":1177,"y":334,"score":88,"level":0},{"x":1230,"y":334,"score":98,"level":0},{"x":1266,"y":334,"score":44,"level":0},{"x":1327,"y":334,"score":44,"level":0},{"x":1360,"y":334,"score":29,"level":0},{"x":1375,"y":334,"score":34,"level":0},{"x":1390,"y":334,"score":43,"level":0},{"x":1457,"y":334,"score":53,"level":0},{"x":476,"y":335,"score":33,"level":0},{"x":540,"y":335,"score":37,"level":0},{"x":717,"y":335,"score":67,"level":0},{"x":738,"y":335,"score":74,"level":0},{"x":905,"y":335,"score":160,"level":0},{"x":926,"y":335,"score":152,"level":0},{"x":982,"y":335,"score":113,"level":0},{"x":1055,"y":335,"score":96,"level":0},{"x":1215,"y":335,"score":176,"level":0},{"x":1222,"y":335,"score":63,"level":0},{"x":1271,"y":335,"score":228,"level":0},{"x":1335,"y":335,"score":33,"level":0},{"x":1462,"y":335,"score":26,"level":0},{"x":1479,"y":335,"score":132,"level":0},{"x":383,"y":336,"score":76,"level":0},{"x":416,"y":336,"score":182,"level":0},{"x":443,"y":336,"score":68,"level":0},{"x":529,"y":336,"score":54,"level":0},{"x":569,"y":336,"score":44,"level":0},{"x":574,"y":336,"score":30,"level":0},{"x":610,"y":336,"score":143,"level":0},{"x":674,"y":336,"score":35,"level":0},{"x":712,"y":336,"score":82,"level":0},{"x":722,"y":336,"score":158,"level":0},{"x":871,"y":336,"score":71,"level":0},{"x":960,"y":336,"score":63,"level":0},{"x":1016,"y":336,"score":68,"level":0},{"x":1073,"y":336,"score":49,"level":0},{"x":1109,"y":336,"score":96,"level":0},{"x":1119,"y":336,"score":66,"level":0},{"x":1146,"y":336,"score":56,"level":0},{"x":1200,"y":336,"score":26,"level":0},{"x":1210,"y":336,"score":109,"level":0},{"x":1237,"y":336,"score":92,"level":0},{"x":1484,"y":336,"score":123,"level":0},{"x":389,"y":337,"score":56,"level":0},{"x":394,"y":337,"score":132,"level":0},{"x":399,"y":337,"score":89,"level":0},{"x":514,"y":337,"score":71,"level":0},{"x":660,"y":337,"score":34,"level":0},{"x":669,"y":337,"score":116,"level":0},{"x":864,"y":337,"score":77,"level":0},{"x":888,"y":337,"score":32,"level":0},{"x":933,"y":337,"score":39,"level":0},{"x":1030,"y":337,"score":54,"level":0},{"x":1114,"y":337,"score":71,"level":0},{"x":1189,"y":337,"score":55,"level":0},{"x":1191,"y":337,"score":61,"level":0},{"x":1226,"y":337,"score":44,"level":0},{"x":1261,"y":337,"score":77,"level":0},{"x":1312,"y":337,"score":35,"level":0},{"x":1326,"y":337,"score":34,"level":0},{"x":1347,"y":337,"score":42,"level":0},{"x":1427,"y":337,"score":29,"level":0},{"x":450,"y":338,"score":81,"level":0},{"x":459,"y":338,"score":39,"level":0},{"x":496,"y":338,"score":48,"level":0},{"x":517,"y":338,"score":56,"level":0},{"x":520,"y":338,"score":33,"level":0},{"x":913,"y":338,"score":158,"level":0},{"x":967,"y":338,"score":64,"level":0},{"x":974,"y":338,"score":56,"level":0},{"x":1061,"y":338,"score":66,"level":0},{"x":1102,"y":338,"score":63,"level":0},{"x":1131,"y":338,"score":71,"level":0},{"x":1146,"y":338,"score":43,"level":0},{"x":1168,"y":338,"score":32,"level":0},{"x":1179,"y":338,"score":75,"level":0},{"x":1238,"y":338,"score":103,"level":0},{"x":1336,"y":338,"score":26,"level":0},{"x":1342,"y":338,"score":95,"level":0},{"x":1398,"y":338,"score":33,"level":0},{"x":1464,"y":338,"score":58,"level":0},{"x":1473,"y":338,"score":54,"level":0},{"x":377,"y":339,"score":48,"level":0},{"x":479,"y":339,"score":151,"level":0},{"x":524,"y":339,"score":47,"level":0},{"x":529,"y":339,"score":33,"level":0},{"x":641,"y":339,"score":165,"level":0},{"x":923,"y":339,"score":108,"level":0},{"x":947,"y":339,"score":63,"level":0},{"x":977,"y":339,"score":76,"level":0},{"x":1023,"y":339,"score":69,"level":0},{"x":1087,"y":339,"score":56,"level":0},{"x":1093,"y":339,"score":65,"level":0},{"x":1109,"y":339,"score":106,"level":0},{"x":1173,"y":339,"score":77,"level":0},{"x":1188,"y":339,"score":70,"level":0},{"x":1199,"y":339,"score":50,"level":0},{"x":1378,"y":339,"score":38,"level":0},{"x":1439,"y":339,"score":36,"level":0},{"x":389,"y":340,"score":41,"level":0},{"x":403,"y":340,"score":117,"level":0},{"x":412,"y":340,"score":76,"level":0},{"x":456,"y":340,"score":96,"level":0},{"x":473,"y":340,"score":117,"level":0},{"x":534,"y":340,"score":29,"level":0},{"x":540,"y":340,"score":94,"level":0},{"x":570,"y":340,"score":33,"level":0},{"x":647,"y":340,"score":84,"level":0},{"x":653,"y":340,"score":34,"level":0},{"x":955,"y":340,"score":87,"level":0},{"x":1017,"y":340,"score":31,"level":0},{"x":1135,"y":340,"score":55,"level":0},{"x":1183,"y":340,"score":66,"level":0},{"x":1204,"y":340,"score":113,"level":0},{"x":1286,"y":340,"score":138,"level":0},{"x":1448,"y":340,"score":54,"level":0},{"x":1459,"y":340,"score":34,"level":0},{"x":409,"y":341,"score":81,"level":0},{"x":445,"y":341,"score":51,"level":0},{"x":467,"y":341,"score":141,"level":0},{"x":681,"y":341,"score":72,"level":0},{"x":721,"y":341,"score":36,"level":0},{"x":741,"y":341,"score":26,"level":0},{"x":871,"y":341,"score":43,"level":0},{"x":938,"y":341,"score":69,"level":0},{"x":1047,"y":341,"score":39,"level":0},{"x":1106,"y":341,"score":68,"level":0},{"x":1224,"y":341,"score":140,"level":0},{"x":1245,"y":341,"score":102,"level":0},{"x":1377,"y":341,"score":30,"level":0},{"x":1439,"y":341,"score":45,"level":0},{"x":501,"y":342,"score":30,"level":0},{"x":606,"y":342,"score":58,"level":0},{"x":656,"y":342,"score":70,"level":0},{"x":675,"y":342,"score":50,"level":0},{"x":746,"y":342,"score":39,"level":0},{"x":823,"y":342,"score":169,"level":0},{"x":881,"y":342,"score":126,"level":0},{"x":906,"y":342,"score":34,"level":0},{"x":1052,"y":342,"score":81,"level":0},{"x":1057,"y":342,"score":74,"level":0},{"x":1069,"y":342,"score":157,"level":0},{"x":1090,"y":342,"score":37,"level":0},{"x":1117,"y":342,"score":125,"level":0},{"x":1157,"y":342,"score":95,"level":0},{"x":1162,"y":342,"score":191,"level":0},{"x":1182,"y":342,"score":83,"level":0},{"x":1207,"y":342,"score":107,"level":0},{"x":1293,"y":342,"score":246,"level":0},{"x":1360,"y":342,"score":34,"level":0},{"x":1468,"y":342,"score":69,"level":0},{"x":1473,"y":342,"score":46,"level":0},{"x":1481,"y":342,"score":50,"level":0},{"x":390,"y":343,"score":50,"level":0},{"x":398,"y":343,"score":110,"level":0},{"x":409,"y":343,"score":97,"level":0},{"x":420,"y":343,"score":77,"level":0},{"x":450,"y":343,"score":157,"level":0},{"x":524,"y":343,"score":40,"level":0},{"x":555,"y":343,"score":44,"level":0},{"x":707,"y":343,"score":68,"level":0},{"x":735,"y":343,"score":92,"level":0},{"x":820,"y":343,"score":104,"level":0},{"x":840,"y":343,"score":66,"level":0},{"x":861,"y":343,"score":47,"level":0},{"x":900,"y":343,"score":86,"level":0},{"x":913,"y":343,"score":55,"level":0},{"x":988,"y":343,"score":46,"level":0},{"x":1078,"y":343,"score":53,"level":0},{"x":1213,"y":343,"score":76,"level":0},{"x":1237,"y":343,"score":76,"level":0},{"x":1248,"y":343,"score":74,"level":0},{"x":1320,"y":343,"score":37,"level":0},{"x":1330,"y":343,"score":40,"level":0},{"x":1347,"y":343,"score":69,"level":0},{"x":508,"y":344,"score":41,"level":0},{"x":692,"y":344,"score":26,"level":0},{"x":720,"y":344,"score":55,"level":0},{"x":828,"y":344,"score":28,"level":0},{"x":927,"y":344,"score":38,"level":0},{"x":964,"y":344,"score":46,"level":0},{"x":969,"y":344,"score":102,"level":0},{"x":1004,"y":344,"score":46,"level":0},{"x":1026,"y":344,"score":66,"level":0},{"x":1098,"y":344,"score":73,"level":0},{"x":1231,"y":344,"score":94,"level":0},{"x":1315,"y":344,"score":92,"level":0},{"x":1342,"y":344,"score":63,"level":0},{"x":1468,"y":344,"score":73,"level":0},{"x":1476,"y":344,"score":90,"level":0},{"x":377,"y":345,"score":199,"level":0},{"x":424,"y":345,"score":132,"level":0},{"x":493,"y":345,"score":70,"level":0},{"x":564,"y":345,"score":40,"level":0},{"x":752,"y":345,"score":56,"level":0},{"x":920,"y":345,"score":102,"level":0},{"x":951,"y":345,"score":90,"level":0},{"x":1048,"y":345,"score":87,"level":0},{"x":1084,"y":345,"score":58,"level":0},{"x":1096,"y":345,"score":97,"level":0},{"x":1135,"y":345,"score":49,"level":0},{"x":1168,"y":345,"score":118,"level":0},{"x":1189,"y":345,"score":106,"level":0},{"x":1274,"y":345,"score":63,"level":0},{"x":1303,"y":345,"score":97,"level":0},{"x":1429,"y":345,"score":52,"level":0},{"x":1438,"y":345,"score":26,"level":0},{"x":1451,"y":345,"score":79,"level":0},{"x":453,"y":346,"score":79,"level":0},{"x":542,"y":346,"score":46,"level":0},{"x":550,"y":346,"score":59,"level":0},{"x":570,"y":346,"score":53,"level":0},{"x":649,"y":346,"score":41,"level":0},{"x":667,"y":346,"score":83,"level":0},{"x":701,"y":346,"score":75,"level":0},{"x":712,"y":346,"score":54,"level":0},{"x":754,"y":346,"score":60,"level":0},{"x":867,"y":346,"score":68,"level":0},{"x":915,"y":346,"score":27,"level":0},{"x":933,"y":346,"score":30,"level":0},{"x":979,"y":346,"score":42,"level":0},{"x":1200,"y":346,"score":41,"level":0},{"x":1226,"y":346,"score":36,"level":0},{"x":1319,"y":346,"score":42,"level":0},{"x":1324,"y":346,"score":78,"level":0},{"x":1354,"y":346,"score":167,"level":0},{"x":1433,"y":346,"score":38,"level":0},{"x":1462,"y":346,"score":26,"level":0},{"x":402,"y":347,"score":92,"level":0},{"x":405,"y":347,"score":43,"level":0},{"x":417,"y":347,"score":83,"level":0},{"x":423,"y":347,"score":108,"level":0},{"x":614,"y":347,"score":76,"level":0},{"x":634,"y":347,"score":67,"level":0},{"x":719,"y":347,"score":27,"level":0},{"x":737,"y":347,"score":56,"level":0},{"x":829,"y":347,"score":41,"level":0},{"x":906,"y":347,"score":276,"level":0},{"x":1021,"y":347,"score":91,"level":0},{"x":1048,"y":347,"score":79,"level":0},{"x":1052,"y":347,"score":66,"level":0},{"x":1058,"y":347,"score":109,"level":0},{"x":1066,"y":347,"score":35,"level":0},{"x":1112,"y":347,"score":60,"level":0},{"x":1154,"y":347,"score":164,"level":0},{"x":1177,"y":347,"score":62,"level":0},{"x":1183,"y":347,"score":69,"level":0},{"x":1260,"y":347,"score":78,"level":0},{"x":1285,"y":347,"score":97,"level":0},{"x":1293,"y":347,"score":180,"level":0},{"x":1391,"y":347,"score":42,"level":0},{"x":498,"y":348,"score":106,"level":0},{"x":523,"y":348,"score":106,"level":0},{"x":532,"y":348,"score":56,"level":0},{"x":550,"y":348,"score":61,"level":0},{"x":650,"y":348,"score":60,"level":0},{"x":655,"y":348,"score":138,"level":0},{"x":686,"y":348,"score":66,"level":0},{"x":708,"y":348,"score":48,"level":0},{"x":864,"y":348,"score":46,"level":0},{"x":879,"y":348,"score":41,"level":0},{"x":913,"y":348,"score":48,"level":0},{"x":1106,"y":348,"score":129,"level":0},{"x":1142,"y":348,"score":34,"level":0},{"x":1246,"y":348,"score":205,"level":0},{"x":1309,"y":348,"score":101,"level":0},{"x":374,"y":349,"score":85,"level":0},{"x":390,"y":349,"score":207,"level":0},{"x":398,"y":349,"score":72,"level":0},{"x":443,"y":349,"score":34,"level":0},{"x":692,"y":349,"score":63,"level":0},{"x":729,"y":349,"score":60,"level":0},{"x":819,"y":349,"score":58,"level":0},{"x":893,"y":349,"score":214,"level":0},{"x":960,"y":349,"score":34,"level":0},{"x":997,"y":349,"score":50,"level":0},{"x":1002,"y":349,"score":32,"level":0},{"x":1021,"y":349,"score":78,"level":0},{"x":1026,"y":349,"score":49,"level":0},{"x":1076,"y":349,"score":37,"level":0},{"x":1125,"y":349,"score":51,"level":0},{"x":1130,"y":349,"score":38,"level":0},{"x":1147,"y":349,"score":88,"level":0},{"x":1211,"y":349,"score":105,"level":0},{"x":1254,"y":349,"score":142,"level":0},{"x":1478,"y":349,"score":80,"level":0},{"x":493,"y":350,"score":32,"level":0},{"x":539,"y":350,"score":29,"level":0},{"x":589,"y":350,"score":31,"level":0},{"x":676,"y":350,"score":41,"level":0},{"x":938,"y":350,"score":44,"level":0},{"x":944,"y":350,"score":57,"level":0},{"x":1081,"y":350,"score":82,"level":0},{"x":1120,"y":350,"score":71,"level":0},{"x":1172,"y":350,"score":117,"level":0},{"x":1177,"y":350,"score":44,"level":0},{"x":1205,"y":350,"score":85,"level":0},{"x":1219,"y":350,"score":176,"level":0},{"x":1224,"y":350,"score":86,"level":0},{"x":1238,"y":350,"score":28,"level":0},{"x":1263,"y":350,"score":88,"level":0},{"x":1268,"y":350,"score":69,"level":0},{"x":1323,"y":350,"score":94,"level":0},{"x":1351,"y":350,"score":153,"level":0},{"x":1390,"y":350,"score":29,"level":0},{"x":499,"y":351,"score":41,"level":0},{"x":607,"y":351,"score":137,"level":0},{"x":618,"y":351,"score":71,"level":0},{"x":656,"y":351,"score":137,"level":0},{"x":727,"y":351,"score":67,"level":0},{"x":828,"y":351,"score":72,"level":0},{"x":840,"y":351,"score":40,"level":0},{"x":868,"y":351,"score":46,"level":0},{"x":884,"y":351,"score":56,"level":0},{"x":923,"y":351,"score":29,"level":0},{"x":961,"y":351,"score":50,"level":0},{"x":1024,"y":351,"score":39,"level":0},{"x":1099,"y":351,"score":37,"level":0},{"x":381,"y":352,"score":61,"level":0},{"x":417,"y":352,"score":74,"level":0},{"x":454,"y":352,"score":27,"level":0},{"x":469,"y":352,"score":60,"level":0},{"x":526,"y":352,"score":43,"level":0},{"x":554,"y":352,"score":71,"level":0},{"x":572,"y":352,"score":54,"level":0},{"x":624,"y":352,"score":37,"level":0},{"x":741,"y":352,"score":76,"level":0},{"x":748,"y":352,"score":59,"level":0},{"x":951,"y":352,"score":28,"level":0},{"x":1006,"y":352,"score":50,"level":0},{"x":1026,"y":352,"score":34,"level":0},{"x":1121,"y":352,"score":28,"level":0},{"x":1127,"y":352,"score":30,"level":0},{"x":1157,"y":352,"score":121,"level":0},{"x":1200,"y":352,"score":27,"level":0},{"x":1294,"y":352,"score":34,"level":0},{"x":1387,"y":352,"score":36,"level":0},{"x":1438,"y":352,"score":44,"level":0},{"x":426,"y":353,"score":47,"level":0},{"x":431,"y":353,"score":30,"level":0},{"x":482,"y":353,"score":112,"level":0},{"x":510,"y":353,"score":32,"level":0},{"x":649,"y":353,"score":52,"level":0},{"x":668,"y":353,"score":158,"level":0},{"x":701,"y":353,"score":42,"level":0},{"x":875,"y":353,"score":80,"level":0},{"x":910,"y":353,"score":61,"level":0},{"x":922,"y":353,"score":63,"level":0},{"x":971,"y":353,"score":63,"level":0},{"x":973,"y":353,"score":55,"level":0},{"x":1052,"y":353,"score":63,"level":0},{"x":1058,"y":353,"score":122,"level":0},{"x":1064,"y":353,"score":63,"level":0},{"x":1132,"y":353,"score":61,"level":0},{"x":1134,"y":353,"score":60,"level":0},{"x":1142,"y":353,"score":63,"level":0},{"x":1151,"y":353,"score":44,"level":0},{"x":1209,"y":353,"score":100,"level":0},{"x":1258,"y":353,"score":101,"level":0},{"x":1307,"y":353,"score":78,"level":0},{"x":1322,"y":353,"score":82,"level":0},{"x":1349,"y":353,"score":105,"level":0},{"x":1443,"y":353,"score":29,"level":0},{"x":468,"y":354,"score":59,"level":0},{"x":499,"y":354,"score":63,"level":0},{"x":550,"y":354,"score":75,"level":0},{"x":613,"y":354,"score":185,"level":0},{"x":673,"y":354,"score":27,"level":0},{"x":680,"y":354,"score":78,"level":0},{"x":694,"y":354,"score":90,"level":0},{"x":741,"y":354,"score":116,"level":0},{"x":927,"y":354,"score":67,"level":0},{"x":952,"y":354,"score":55,"level":0},{"x":990,"y":354,"score":30,"level":0},{"x":1001,"y":354,"score":64,"level":0},{"x":1106,"y":354,"score":96,"level":0},{"x":1110,"y":354,"score":75,"level":0},{"x":1116,"y":354,"score":95,"level":0},{"x":1121,"y":354,"score":74,"level":0},{"x":1223,"y":354,"score":198,"level":0},{"x":1264,"y":354,"score":88,"level":0},{"x":1269,"y":354,"score":62,"level":0},{"x":1310,"y":354,"score":78,"level":0},{"x":1312,"y":354,"score":99,"level":0},{"x":1338,"y":354,"score":30,"level":0},{"x":377,"y":355,"score":156,"level":0},{"x":402,"y":355,"score":85,"level":0},{"x":421,"y":355,"score":35,"level":0},{"x":458,"y":355,"score":74,"level":0},{"x":533,"y":355,"score":72,"level":0},{"x":568,"y":355,"score":28,"level":0},{"x":626,"y":355,"score":26,"level":0},{"x":820,"y":355,"score":110,"level":0},{"x":942,"y":355,"score":26,"level":0},{"x":996,"y":355,"score":99,"level":0},{"x":1006,"y":355,"score":91,"level":0},{"x":1045,"y":355,"score":64,"level":0},{"x":1077,"y":355,"score":122,"level":0},{"x":1134,"y":355,"score":52,"level":0},{"x":1159,"y":355,"score":47,"level":0},{"x":1185,"y":355,"score":62,"level":0},{"x":1246,"y":355,"score":37,"level":0},{"x":1280,"y":355,"score":47,"level":0},{"x":1300,"y":355,"score":62,"level":0},{"x":1355,"y":355,"score":127,"level":0},{"x":1381,"y":355,"score":47,"level":0},{"x":1393,"y":355,"score":36,"level":0},{"x":1437,"y":355,"score":40,"level":0},{"x":1444,"y":355,"score":31,"level":0},{"x":409,"y":356,"score":70,"level":0},{"x":494,"y":356,"score":55,"level":0},{"x":619,"y":356,"score":95,"level":0},{"x":710,"y":356,"score":163,"level":0},{"x":726,"y":356,"score":57,"level":0},{"x":731,"y":356,"score":105,"level":0},{"x":861,"y":356,"score":73,"level":0},{"x":934,"y":356,"score":55,"level":0},{"x":1014,"y":356,"score":88,"level":0},{"x":1055,"y":356,"score":41,"level":0},{"x":1062,"y":356,"score":59,"level":0},{"x":1166,"y":356,"score":111,"level":0},{"x":1218,"y":356,"score":292,"level":0},{"x":1240,"y":356,"score":37,"level":0},{"x":1291,"y":356,"score":122,"level":0},{"x":1361,"y":356,"score":35,"level":0},{"x":1463,"y":356,"score":109,"level":0},{"x":1469,"y":356,"score":52,"level":0},{"x":387,"y":357,"score":83,"level":0},{"x":463,"y":357,"score":124,"level":0},{"x":509,"y":357,"score":54,"level":0},{"x":520,"y":357,"score":96,"level":0},{"x":636,"y":357,"score":26,"level":0},{"x":655,"y":357,"score":140,"level":0},{"x":745,"y":357,"score":49,"level":0},{"x":1099,"y":357,"score":29,"level":0},{"x":1145,"y":357,"score":34,"level":0},{"x":1193,"y":357,"score":36,"level":0},{"x":1211,"y":357,"score":106,"level":0},{"x":1322,"y":357,"score":88,"level":0},{"x":1344,"y":357,"score":66,"level":0},{"x":1476,"y":357,"score":31,"level":0},{"x":418,"y":358,"score":47,"level":0},{"x":454,"y":358,"score":56,"level":0},{"x":620,"y":358,"score":42,"level":0},{"x":724,"y":358,"score":30,"level":0},{"x":939,"y":358,"score":30,"level":0},{"x":995,"y":358,"score":102,"level":0},{"x":1150,"y":358,"score":32,"level":0},{"x":1262,"y":358,"score":78,"level":0},{"x":1356,"y":358,"score":37,"level":0},{"x":1368,"y":358,"score":32,"level":0},{"x":410,"y":359,"score":84,"level":0},{"x":529,"y":359,"score":174,"level":0},{"x":636,"y":359,"score":84,"level":0},{"x":664,"y":359,"score":80,"level":0},{"x":669,"y":359,"score":31,"level":0},{"x":718,"y":359,"score":59,"level":0},{"x":754,"y":359,"score":81,"level":0},{"x":835,"y":359,"score":84,"level":0},{"x":879,"y":359,"score":63,"level":0},{"x":884,"y":359,"score":37,"level":0},{"x":971,"y":359,"score":41,"level":0},{"x":1071,"y":359,"score":96,"level":0},{"x":1100,"y":359,"score":55,"level":0},{"x":1114,"y":359,"score":32,"level":0},{"x":1146,"y":359,"score":50,"level":0},{"x":1266,"y":359,"score":57,"level":0},{"x":1377,"y":359,"score":39,"level":0},{"x":1395,"y":359,"score":92,"level":0},{"x":399,"y":360,"score":127,"level":0},{"x":458,"y":360,"score":74,"level":0},{"x":508,"y":360,"score":72,"level":0},{"x":539,"y":360,"score":207,"level":0},{"x":561,"y":360,"score":113,"level":0},{"x":568,"y":360,"score":262,"level":0},{"x":915,"y":360,"score":86,"level":0},{"x":924,"y":360,"score":83,"level":0},{"x":975,"y":360,"score":89,"level":0},{"x":1002,"y":360,"score":70,"level":0},{"x":1066,"y":360,"score":64,"level":0},{"x":1126,"y":360,"score":41,"level":0},{"x":1253,"y":360,"score":41,"level":0},{"x":1285,"y":360,"score":52,"level":0},{"x":1382,"y":360,"score":120,"level":0},{"x":1444,"y":360,"score":69,"level":0},{"x":1477,"y":360,"score":39,"level":0},{"x":422,"y":361,"score":35,"level":0},{"x":620,"y":361,"score":30,"level":0},{"x":701,"y":361,"score":197,"level":0},{"x":929,"y":361,"score":41,"level":0},{"x":1050,"y":361,"score":69,"level":0},{"x":1061,"y":361,"score":32,"level":0},{"x":1261,"y":361,"score":73,"level":0},{"x":1302,"y":361,"score":143,"level":0},{"x":1321,"y":361,"score":68,"level":0},{"x":1327,"y":361,"score":93,"level":0},{"x":1357,"y":361,"score":32,"level":0},{"x":1390,"y":361,"score":43,"level":0},{"x":1438,"y":361,"score":112,"level":0},{"x":1456,"y":361,"score":33,"level":0},{"x":1488,"y":361,"score":41,"level":0},{"x":419,"y":362,"score":36,"level":0},{"x":550,"y":362,"score":29,"level":0},{"x":683,"y":362,"score":64,"level":0},{"x":691,"y":362,"score":52,"level":0},{"x":709,"y":362,"score":76,"level":0},{"x":724,"y":362,"score":45,"level":0},{"x":830,"y":362,"score":70,"level":0},{"x":867,"y":362,"score":29,"level":0},{"x":946,"y":362,"score":92,"level":0},{"x":1008,"y":362,"score":42,"level":0},{"x":1014,"y":362,"score":41,"level":0},{"x":1044,"y":362,"score":46,"level":0},{"x":1090,"y":362,"score":69,"level":0},{"x":1147,"y":362,"score":41,"level":0},{"x":1158,"y":362,"score":72,"level":0},{"x":1191,"y":362,"score":84,"level":0},{"x":1194,"y":362,"score":44,"level":0},{"x":1207,"y":362,"score":61,"level":0},{"x":1223,"y":362,"score":64,"level":0},{"x":1229,"y":362,"score":80,"level":0},{"x":1255,"y":362,"score":60,"level":0},{"x":1275,"y":362,"score":64,"level":0},{"x":1290,"y":362,"score":89,"level":0},{"x":1342,"y":362,"score":47,"level":0},{"x":1367,"y":362,"score":48,"level":0},{"x":1465,"y":362,"score":28,"level":0},{"x":403,"y":363,"score":34,"level":0},{"x":408,"y":363,"score":40,"level":0},{"x":414,"y":363,"score":155,"level":0},{"x":456,"y":363,"score":38,"level":0},{"x":458,"y":363,"score":34,"level":0},{"x":474,"y":363,"score":36,"level":0},{"x":613,"y":363,"score":61,"level":0},{"x":628,"y":363,"score":34,"level":0},{"x":662,"y":363,"score":71,"level":0},{"x":712,"y":363,"score":48,"level":0},{"x":863,"y":363,"score":82,"level":0},{"x":872,"y":363,"score":43,"level":0},{"x":885,"y":363,"score":38,"level":0},{"x":906,"y":363,"score":111,"level":0},{"x":928,"y":363,"score":70,"level":0},{"x":953,"y":363,"score":49,"level":0},{"x":970,"y":363,"score":42,"level":0},{"x":1025,"y":363,"score":52,"level":0},{"x":1061,"y":363,"score":33,"level":0},{"x":1106,"y":363,"score":82,"level":0},{"x":1115,"y":363,"score":68,"level":0},{"x":1120,"y":363,"score":57,"level":0},{"x":1258,"y":363,"score":38,"level":0},{"x":1264,"y":363,"score":47,"level":0},{"x":1340,"y":363,"score":54,"level":0},{"x":1428,"y":363,"score":59,"level":0},{"x":1483,"y":363,"score":41,"level":0},{"x":433,"y":364,"score":32,"level":0},{"x":531,"y":364,"score":27,"level":0},{"x":572,"y":364,"score":45,"level":0},{"x":622,"y":364,"score":48,"level":0},{"x":642,"y":364,"score":61,"level":0},{"x":678,"y":364,"score":38,"level":0},{"x":743,"y":364,"score":51,"level":0},{"x":778,"y":364,"score":119,"level":0},{"x":878,"y":364,"score":49,"level":0},{"x":1048,"y":364,"score":26,"level":0},{"x":1101,"y":364,"score":37,"level":0},{"x":1164,"y":364,"score":220,"level":0},{"x":1169,"y":364,"score":79,"level":0},{"x":1245,"y":364,"score":57,"level":0},{"x":1269,"y":364,"score":154,"level":0},{"x":1298,"y":364,"score":37,"level":0},{"x":1374,"y":364,"score":44,"level":0},{"x":1449,"y":364,"score":57,"level":0},{"x":388,"y":365,"score":88,"level":0},{"x":403,"y":365,"score":84,"level":0},{"x":631,"y":365,"score":134,"level":0},{"x":749,"y":365,"score":62,"level":0},{"x":840,"y":365,"score":40,"level":0},{"x":960,"y":365,"score":41,"level":0},{"x":973,"y":365,"score":56,"level":0},{"x":997,"y":365,"score":122,"level":0},{"x":1009,"y":365,"score":33,"level":0},{"x":1126,"y":365,"score":41,"level":0},{"x":1145,"y":365,"score":72,"level":0},{"x":1152,"y":365,"score":60,"level":0},{"x":1157,"y":365,"score":30,"level":0},{"x":1258,"y":365,"score":31,"level":0},{"x":1260,"y":365,"score":81,"level":0},{"x":1275,"y":365,"score":48,"level":0},{"x":1357,"y":365,"score":64,"level":0},{"x":1382,"y":365,"score":51,"level":0},{"x":1428,"y":365,"score":62,"level":0},{"x":1434,"y":365,"score":37,"level":0},{"x":1482,"y":365,"score":28,"level":0},{"x":416,"y":366,"score":84,"level":0},{"x":479,"y":366,"score":128,"level":0},{"x":493,"y":366,"score":101,"level":0},{"x":539,"y":366,"score":86,"level":0},{"x":555,"y":366,"score":55,"level":0},{"x":572,"y":366,"score":80,"level":0},{"x":613,"y":366,"score":34,"level":0},{"x":649,"y":366,"score":35,"level":0},{"x":653,"y":366,"score":98,"level":0},{"x":698,"y":366,"score":120,"level":0},{"x":758,"y":366,"score":78,"level":0},{"x":773,"y":366,"score":30,"level":0},{"x":957,"y":366,"score":54,"level":0},{"x":968,"y":366,"score":74,"level":0},{"x":1004,"y":366,"score":34,"level":0},{"x":1041,"y":366,"score":29,"level":0},{"x":1120,"y":366,"score":49,"level":0},{"x":1233,"y":366,"score":63,"level":0},{"x":1270,"y":366,"score":159,"level":0},{"x":1364,"y":366,"score":100,"level":0},{"x":1389,"y":366,"score":91,"level":0},{"x":1408,"y":366,"score":31,"level":0},{"x":395,"y":367,"score":126,"level":0},{"x":428,"y":367,"score":143,"level":0},{"x":636,"y":367,"score":100,"level":0},{"x":821,"y":367,"score":128,"level":0},{"x":893,"y":367,"score":34,"level":0},{"x":1031,"y":367,"score":42,"level":0},{"x":1045,"y":367,"score":54,"level":0},{"x":1063,"y":367,"score":74,"level":0},{"x":1076,"y":367,"score":103,"level":0},{"x":1090,"y":367,"score":32,"level":0},{"x":1114,"y":367,"score":38,"level":0},{"x":1143,"y":367,"score":94,"level":0},{"x":1168,"y":367,"score":88,"level":0},{"x":1243,"y":367,"score":56,"level":0},{"x":1289,"y":367,"score":78,"level":0},{"x":1369,"y":367,"score":36,"level":0},{"x":724,"y":368,"score":36,"level":0},{"x":735,"y":368,"score":30,"level":0},{"x":827,"y":368,"score":91,"level":0},{"x":834,"y":368,"score":41,"level":0},{"x":840,"y":368,"score":54,"level":0},{"x":880,"y":368,"score":58,"level":0},{"x":925,"y":368,"score":52,"level":0},{"x":1047,"y":368,"score":69,"level":0},{"x":1177,"y":368,"score":28,"level":0},{"x":1195,"y":368,"score":55,"level":0},{"x":1223,"y":368,"score":26,"level":0},{"x":1358,"y":368,"score":68,"level":0},{"x":1376,"y":368,"score":30,"level":0},{"x":1428,"y":368,"score":30,"level":0},{"x":412,"y":369,"score":99,"level":0},{"x":563,"y":369,"score":93,"level":0},{"x":657,"y":369,"score":122,"level":0},{"x":670,"y":369,"score":68,"level":0},{"x":690,"y":369,"score":36,"level":0},{"x":702,"y":369,"score":118,"level":0},{"x":709,"y":369,"score":145,"level":0},{"x":744,"y":369,"score":47,"level":0},{"x":936,"y":369,"score":40,"level":0},{"x":954,"y":369,"score":159,"level":0},{"x":1018,"y":369,"score":66,"level":0},{"x":1099,"y":369,"score":27,"level":0},{"x":1115,"y":369,"score":54,"level":0},{"x":1204,"y":369,"score":53,"level":0},{"x":1252,"y":369,"score":41,"level":0},{"x":1296,"y":369,"score":50,"level":0},{"x":1340,"y":369,"score":64,"level":0},{"x":1347,"y":369,"score":59,"level":0},{"x":469,"y":370,"score":106,"level":0},{"x":500,"y":370,"score":73,"level":0},{"x":647,"y":370,"score":58,"level":0},{"x":654,"y":370,"score":93,"level":0},{"x":875,"y":370,"score":125,"level":0},{"x":884,"y":370,"score":44,"level":0},{"x":917,"y":370,"score":31,"level":0},{"x":960,"y":370,"score":78,"level":0},{"x":1000,"y":370,"score":57,"level":0},{"x":1026,"y":370,"score":44,"level":0},{"x":1059,"y":370,"score":57,"level":0},{"x":1071,"y":370,"score":59,"level":0},{"x":1082,"y":370,"score":44,"level":0},{"x":1086,"y":370,"score":82,"level":0},{"x":1093,"y":370,"score":38,"level":0},{"x":1108,"y":370,"score":77,"level":0},{"x":1157,"y":370,"score":58,"level":0},{"x":1166,"y":370,"score":86,"level":0},{"x":1172,"y":370,"score":33,"level":0},{"x":1220,"y":370,"score":60,"level":0},{"x":1228,"y":370,"score":91,"level":0},{"x":1310,"y":370,"score":143,"level":0},{"x":1316,"y":370,"score":31,"level":0},{"x":1462,"y":370,"score":61,"level":0},{"x":1467,"y":370,"score":51,"level":0},{"x":405,"y":371,"score":56,"level":0},{"x":410,"y":371,"score":41,"level":0},{"x":459,"y":371,"score":41,"level":0},{"x":481,"y":371,"score":50,"level":0},{"x":508,"y":371,"score":61,"level":0},{"x":624,"y":371,"score":167,"level":0},{"x":631,"y":371,"score":140,"level":0},{"x":640,"y":371,"score":45,"level":0},{"x":692,"y":371,"score":98,"level":0},{"x":879,"y":371,"score":48,"level":0},{"x":970,"y":371,"score":116,"level":0},{"x":995,"y":371,"score":156,"level":0},{"x":1049,"y":371,"score":28,"level":0},{"x":1199,"y":371,"score":102,"level":0},{"x":1245,"y":371,"score":67,"level":0},{"x":1260,"y":371,"score":31,"level":0},{"x":1333,"y":371,"score":32,"level":0},{"x":1335,"y":371,"score":27,"level":0},{"x":1442,"y":371,"score":27,"level":0},{"x":1487,"y":371,"score":75,"level":0},{"x":449,"y":372,"score":47,"level":0},{"x":454,"y":372,"score":142,"level":0},{"x":478,"y":372,"score":115,"level":0},{"x":514,"y":372,"score":170,"level":0},{"x":539,"y":372,"score":98,"level":0},{"x":665,"y":372,"score":126,"level":0},{"x":679,"y":372,"score":29,"level":0},{"x":796,"y":372,"score":76,"level":0},{"x":864,"y":372,"score":42,"level":0},{"x":906,"y":372,"score":44,"level":0},{"x":1007,"y":372,"score":53,"level":0},{"x":1012,"y":372,"score":150,"level":0},{"x":1088,"y":372,"score":52,"level":0},{"x":1147,"y":372,"score":168,"level":0},{"x":1271,"y":372,"score":40,"level":0},{"x":1395,"y":372,"score":48,"level":0},{"x":1433,"y":372,"score":26,"level":0},{"x":396,"y":373,"score":51,"level":0},{"x":550,"y":373,"score":31,"level":0},{"x":569,"y":373,"score":30,"level":0},{"x":617,"y":373,"score":202,"level":0},{"x":726,"y":373,"score":49,"level":0},{"x":843,"y":373,"score":50,"level":0},{"x":866,"y":373,"score":82,"level":0},{"x":939,"y":373,"score":55,"level":0},{"x":1131,"y":373,"score":40,"level":0},{"x":1137,"y":373,"score":40,"level":0},{"x":1173,"y":373,"score":29,"level":0},{"x":1236,"y":373,"score":35,"level":0},{"x":1265,"y":373,"score":118,"level":0},{"x":1478,"y":373,"score":36,"level":0},{"x":386,"y":374,"score":36,"level":0},{"x":391,"y":374,"score":43,"level":0},{"x":495,"y":374,"score":157,"level":0},{"x":558,"y":374,"score":65,"level":0},{"x":564,"y":374,"score":118,"level":0},{"x":575,"y":374,"score":29,"level":0},{"x":602,"y":374,"score":37,"level":0},{"x":659,"y":374,"score":120,"level":0},{"x":698,"y":374,"score":144,"level":0},{"x":711,"y":374,"score":68,"level":0},{"x":733,"y":374,"score":30,"level":0},{"x":735,"y":374,"score":68,"level":0},{"x":748,"y":374,"score":62,"level":0},{"x":796,"y":374,"score":71,"level":0},{"x":822,"y":374,"score":47,"level":0},{"x":882,"y":374,"score":32,"level":0},{"x":968,"y":374,"score":91,"level":0},{"x":1065,"y":374,"score":168,"level":0},{"x":1110,"y":374,"score":27,"level":0},{"x":1129,"y":374,"score":55,"level":0},{"x":1234,"y":374,"score":57,"level":0},{"x":1314,"y":374,"score":34,"level":0},{"x":1320,"y":374,"score":30,"level":0},{"x":1340,"y":374,"score":42,"level":0},{"x":1376,"y":374,"score":61,"level":0},{"x":1382,"y":374,"score":64,"level":0},{"x":1428,"y":374,"score":116,"level":0},{"x":1433,"y":374,"score":28,"level":0},{"x":423,"y":375,"score":128,"level":0},{"x":631,"y":375,"score":188,"level":0},{"x":672,"y":375,"score":61,"level":0},{"x":688,"y":375,"score":61,"level":0},{"x":713,"y":375,"score":44,"level":0},{"x":877,"y":375,"score":163,"level":0},{"x":906,"y":375,"score":48,"level":0},{"x":963,"y":375,"score":100,"level":0},{"x":978,"y":375,"score":86,"level":0},{"x":1075,"y":375,"score":129,"level":0},{"x":1099,"y":375,"score":67,"level":0},{"x":1212,"y":375,"score":240,"level":0},{"x":1227,"y":375,"score":164,"level":0},{"x":1249,"y":375,"score":38,"level":0},{"x":1259,"y":375,"score":109,"level":0},{"x":1346,"y":375,"score":170,"level":0},{"x":1362,"y":375,"score":119,"level":0},{"x":1458,"y":375,"score":67,"level":0},{"x":400,"y":376,"score":28,"level":0},{"x":405,"y":376,"score":61,"level":0},{"x":412,"y":376,"score":64,"level":0},{"x":429,"y":376,"score":55,"level":0},{"x":570,"y":376,"score":29,"level":0},{"x":830,"y":376,"score":118,"level":0},{"x":866,"y":376,"score":27,"level":0},{"x":887,"y":376,"score":56,"level":0},{"x":919,"y":376,"score":88,"level":0},{"x":1080,"y":376,"score":57,"level":0},{"x":1275,"y":376,"score":82,"level":0},{"x":1337,"y":376,"score":65,"level":0},{"x":480,"y":377,"score":154,"level":0},{"x":573,"y":377,"score":32,"level":0},{"x":623,"y":377,"score":66,"level":0},{"x":727,"y":377,"score":80,"level":0},{"x":759,"y":377,"score":39,"level":0},{"x":973,"y":377,"score":65,"level":0},{"x":982,"y":377,"score":69,"level":0},{"x":1204,"y":377,"score":98,"level":0},{"x":1310,"y":377,"score":31,"level":0},{"x":1335,"y":377,"score":81,"level":0},{"x":1358,"y":377,"score":144,"level":0},{"x":1471,"y":377,"score":79,"level":0},{"x":420,"y":378,"score":88,"level":0},{"x":489,"y":378,"score":36,"level":0},{"x":508,"y":378,"score":138,"level":0},{"x":513,"y":378,"score":44,"level":0},{"x":531,"y":378,"score":45,"level":0},{"x":550,"y":378,"score":66,"level":0},{"x":617,"y":378,"score":57,"level":0},{"x":664,"y":378,"score":116,"level":0},{"x":745,"y":378,"score":185,"level":0},{"x":840,"y":378,"score":122,"level":0},{"x":870,"y":378,"score":63,"level":0},{"x":937,"y":378,"score":38,"level":0},{"x":984,"y":378,"score":71,"level":0},{"x":1004,"y":378,"score":68,"level":0},{"x":1051,"y":378,"score":35,"level":0},{"x":1115,"y":378,"score":117,"level":0},{"x":1148,"y":378,"score":134,"level":0},{"x":1163,"y":378,"score":70,"level":0},{"x":1193,"y":378,"score":210,"level":0},{"x":1236,"y":378,"score":30,"level":0},{"x":1253,"y":378,"score":67,"level":0},{"x":1270,"y":378,"score":51,"level":0},{"x":1306,"y":378,"score":55,"level":0},{"x":1329,"y":378,"score":118,"level":0},{"x":1353,"y":378,"score":106,"level":0},{"x":377,"y":379,"score":71,"level":0},{"x":415,"y":379,"score":92,"level":0},{"x":454,"y":379,"score":211,"level":0},{"x":465,"y":379,"score":37,"level":0},{"x":520,"y":379,"score":145,"level":0},{"x":556,"y":379,"score":94,"level":0},{"x":628,"y":379,"score":74,"level":0},{"x":670,"y":379,"score":85,"level":0},{"x":697,"y":379,"score":188,"level":0},{"x":703,"y":379,"score":70,"level":0},{"x":825,"y":379,"score":43,"level":0},{"x":929,"y":379,"score":59,"level":0},{"x":978,"y":379,"score":46,"level":0},{"x":993,"y":379,"score":34,"level":0},{"x":1121,"y":379,"score":51,"level":0},{"x":1129,"y":379,"score":115,"level":0},{"x":1137,"y":379,"score":36,"level":0},{"x":1144,"y":379,"score":40,"level":0},{"x":1167,"y":379,"score":50,"level":0},{"x":1180,"y":379,"score":70,"level":0},{"x":1187,"y":379,"score":105,"level":0},{"x":1367,"y":379,"score":151,"level":0},{"x":494,"y":380,"score":51,"level":0},{"x":516,"y":380,"score":66,"level":0},{"x":546,"y":380,"score":63,"level":0},{"x":602,"y":380,"score":54,"level":0},{"x":617,"y":380,"score":54,"level":0},{"x":642,"y":380,"score":29,"level":0},{"x":647,"y":380,"score":81,"level":0},{"x":739,"y":380,"score":41,"level":0},{"x":742,"y":380,"score":65,"level":0},{"x":990,"y":380,"score":32,"level":0},{"x":1025,"y":380,"score":98,"level":0},{"x":1042,"y":380,"score":95,"level":0},{"x":1081,"y":380,"score":30,"level":0},{"x":1093,"y":380,"score":38,"level":0},{"x":1102,"y":380,"score":42,"level":0},{"x":1107,"y":380,"score":99,"level":0},{"x":1229,"y":380,"score":224,"level":0},{"x":1234,"y":380,"score":33,"level":0},{"x":1265,"y":380,"score":98,"level":0},{"x":1485,"y":380,"score":27,"level":0},{"x":410,"y":381,"score":32,"level":0},{"x":424,"y":381,"score":133,"level":0},{"x":553,"y":381,"score":105,"level":0},{"x":583,"y":381,"score":36,"level":0},{"x":638,"y":381,"score":26,"level":0},{"x":683,"y":381,"score":72,"level":0},{"x":688,"y":381,"score":70,"level":0},{"x":690,"y":381,"score":64,"level":0},{"x":716,"y":381,"score":58,"level":0},{"x":723,"y":381,"score":26,"level":0},{"x":821,"y":381,"score":50,"level":0},{"x":826,"y":381,"score":33,"level":0},{"x":877,"y":381,"score":30,"level":0},{"x":1003,"y":381,"score":68,"level":0},{"x":1133,"y":381,"score":29,"level":0},{"x":1150,"y":381,"score":58,"level":0},{"x":1206,"y":381,"score":69,"level":0},{"x":1212,"y":381,"score":168,"level":0},{"x":1224,"y":381,"score":26,"level":0},{"x":1375,"y":381,"score":74,"level":0},{"x":1476,"y":381,"score":30,"level":0},{"x":403,"y":382,"score":53,"level":0},{"x":429,"y":382,"score":88,"level":0},{"x":572,"y":382,"score":141,"level":0},{"x":614,"y":382,"score":49,"level":0},{"x":661,"y":382,"score":45,"level":0},{"x":706,"y":382,"score":120,"level":0},{"x":844,"y":382,"score":29,"level":0},{"x":971,"y":382,"score":54,"level":0},{"x":1009,"y":382,"score":30,"level":0},{"x":1024,"y":382,"score":62,"level":0},{"x":1139,"y":382,"score":71,"level":0},{"x":1156,"y":382,"score":74,"level":0},{"x":1319,"y":382,"score":52,"level":0},{"x":1326,"y":382,"score":32,"level":0},{"x":1349,"y":382,"score":40,"level":0},{"x":1441,"y":382,"score":32,"level":0},{"x":1467,"y":382,"score":34,"level":0},{"x":673,"y":383,"score":28,"level":0},{"x":719,"y":383,"score":78,"level":0},{"x":864,"y":383,"score":156,"level":0},{"x":875,"y":383,"score":99,"level":0},{"x":905,"y":383,"score":91,"level":0},{"x":915,"y":383,"score":56,"level":0},{"x":920,"y":383,"score":63,"level":0},{"x":958,"y":383,"score":38,"level":0},{"x":973,"y":383,"score":82,"level":0},{"x":1007,"y":383,"score":29,"level":0},{"x":1021,"y":383,"score":74,"level":0},{"x":1073,"y":383,"score":42,"level":0},{"x":1112,"y":383,"score":52,"level":0},{"x":1195,"y":383,"score":226,"level":0},{"x":1217,"y":383,"score":34,"level":0},{"x":1238,"y":383,"score":129,"level":0},{"x":1270,"y":383,"score":56,"level":0},{"x":1329,"y":383,"score":27,"level":0},{"x":1338,"y":383,"score":36,"level":0},{"x":1355,"y":383,"score":126,"level":0},{"x":1360,"y":383,"score":63,"level":0},{"x":1394,"y":383,"score":71,"level":0},{"x":1475,"y":383,"score":59,"level":0},{"x":414,"y":384,"score":61,"level":0},{"x":454,"y":384,"score":87,"level":0},{"x":478,"y":384,"score":60,"level":0},{"x":524,"y":384,"score":46,"level":0},{"x":534,"y":384,"score":147,"level":0},{"x":550,"y":384,"score":36,"level":0},{"x":621,"y":384,"score":154,"level":0},{"x":652,"y":384,"score":123,"level":0},{"x":670,"y":384,"score":102,"level":0},{"x":733,"y":384,"score":60,"level":0},{"x":825,"y":384,"score":151,"level":0},{"x":880,"y":384,"score":26,"level":0},{"x":949,"y":384,"score":56,"level":0},{"x":965,"y":384,"score":242,"level":0},{"x":982,"y":384,"score":113,"level":0},{"x":1012,"y":384,"score":33,"level":0},{"x":1051,"y":384,"score":36,"level":0},{"x":1057,"y":384,"score":34,"level":0},{"x":1082,"y":384,"score":36,"level":0},{"x":1087,"y":384,"score":77,"level":0},{"x":1118,"y":384,"score":58,"level":0},{"x":1123,"y":384,"score":53,"level":0},{"x":1189,"y":384,"score":104,"level":0},{"x":1222,"y":384,"score":45,"level":0},{"x":1244,"y":384,"score":52,"level":0},{"x":1311,"y":384,"score":72,"level":0},{"x":1318,"y":384,"score":97,"level":0},{"x":1372,"y":384,"score":46,"level":0},{"x":1484,"y":384,"score":55,"level":0},{"x":385,"y":385,"score":102,"level":0},{"x":461,"y":385,"score":27,"level":0},{"x":491,"y":385,"score":171,"level":0},{"x":529,"y":385,"score":35,"level":0},{"x":617,"y":385,"score":30,"level":0},{"x":659,"y":385,"score":51,"level":0},{"x":886,"y":385,"score":30,"level":0},{"x":911,"y":385,"score":42,"level":0},{"x":951,"y":385,"score":50,"level":0},{"x":1020,"y":385,"score":39,"level":0},{"x":1227,"y":385,"score":180,"level":0},{"x":1256,"y":385,"score":58,"level":0},{"x":1276,"y":385,"score":30,"level":0},{"x":1366,"y":385,"score":34,"level":0},{"x":1458,"y":385,"score":94,"level":0},{"x":1470,"y":385,"score":98,"level":0},{"x":471,"y":386,"score":49,"level":0},{"x":497,"y":386,"score":53,"level":0},{"x":545,"y":386,"score":46,"level":0},{"x":664,"y":386,"score":94,"level":0},{"x":699,"y":386,"score":74,"level":0},{"x":752,"y":386,"score":39,"level":0},{"x":921,"y":386,"score":46,"level":0},{"x":934,"y":386,"score":79,"level":0},{"x":960,"y":386,"score":58,"level":0},{"x":1029,"y":386,"score":65,"level":0},{"x":1050,"y":386,"score":31,"level":0},{"x":1086,"y":386,"score":63,"level":0},{"x":1133,"y":386,"score":76,"level":0},{"x":1167,"y":386,"score":57,"level":0},{"x":1447,"y":386,"score":48,"level":0},{"x":401,"y":387,"score":64,"level":0},{"x":419,"y":387,"score":121,"level":0},{"x":499,"y":387,"score":60,"level":0},{"x":528,"y":387,"score":83,"level":0},{"x":574,"y":387,"score":65,"level":0},{"x":747,"y":387,"score":115,"level":0},{"x":840,"y":387,"score":40,"level":0},{"x":878,"y":387,"score":32,"level":0},{"x":977,"y":387,"score":84,"level":0},{"x":987,"y":387,"score":33,"level":0},{"x":1007,"y":387,"score":27,"level":0},{"x":1139,"y":387,"score":34,"level":0},{"x":1143,"y":387,"score":50,"level":0},{"x":1214,"y":387,"score":122,"level":0},{"x":1246,"y":387,"score":58,"level":0},{"x":1326,"y":387,"score":98,"level":0},{"x":1345,"y":387,"score":76,"level":0},{"x":1382,"y":387,"score":82,"level":0},{"x":1387,"y":387,"score":44,"level":0},{"x":1389,"y":387,"score":57,"level":0},{"x":1438,"y":387,"score":114,"level":0},{"x":727,"y":388,"score":26,"level":0},{"x":804,"y":388,"score":42,"level":0},{"x":824,"y":388,"score":122,"level":0},{"x":845,"y":388,"score":60,"level":0},{"x":945,"y":388,"score":37,"level":0},{"x":995,"y":388,"score":105,"level":0},{"x":1042,"y":388,"score":112,"level":0},{"x":1098,"y":388,"score":64,"level":0},{"x":1113,"y":388,"score":47,"level":0},{"x":1147,"y":388,"score":62,"level":0},{"x":1206,"y":388,"score":44,"level":0},{"x":1230,"y":388,"score":33,"level":0},{"x":1334,"y":388,"score":28,"level":0},{"x":1350,"y":388,"score":60,"level":0},{"x":1393,"y":388,"score":26,"level":0},{"x":1450,"y":388,"score":60,"level":0},{"x":1463,"y":388,"score":76,"level":0},{"x":1490,"y":388,"score":44,"level":0},{"x":652,"y":389,"score":86,"level":0},{"x":675,"y":389,"score":53,"level":0},{"x":721,"y":389,"score":95,"level":0},{"x":738,"y":389,"score":38,"level":0},{"x":814,"y":389,"score":28,"level":0},{"x":893,"y":389,"score":66,"level":0},{"x":997,"y":389,"score":147,"level":0},{"x":1004,"y":389,"score":108,"level":0},{"x":1078,"y":389,"score":34,"level":0},{"x":1235,"y":389,"score":118,"level":0},{"x":1243,"y":389,"score":30,"level":0},{"x":1252,"y":389,"score":55,"level":0},{"x":1263,"y":389,"score":66,"level":0},{"x":1318,"y":389,"score":50,"level":0},{"x":1336,"y":389,"score":41,"level":0},{"x":1389,"y":389,"score":55,"level":0},{"x":1444,"y":389,"score":42,"level":0},{"x":1479,"y":389,"score":31,"level":0},{"x":1482,"y":389,"score":44,"level":0},{"x":392,"y":390,"score":112,"level":0},{"x":416,"y":390,"score":67,"level":0},{"x":423,"y":390,"score":72,"level":0},{"x":495,"y":390,"score":34,"level":0},{"x":505,"y":390,"score":97,"level":0},{"x":539,"y":390,"score":46,"level":0},{"x":552,"y":390,"score":64,"level":0},{"x":622,"y":390,"score":120,"level":0},{"x":627,"y":390,"score":150,"level":0},{"x":647,"y":390,"score":104,"level":0},{"x":660,"y":390,"score":146,"level":0},{"x":692,"y":390,"score":50,"level":0},{"x":863,"y":390,"score":47,"level":0},{"x":882,"y":390,"score":95,"level":0},{"x":925,"y":390,"score":29,"level":0},{"x":972,"y":390,"score":47,"level":0},{"x":977,"y":390,"score":81,"level":0},{"x":1021,"y":390,"score":62,"level":0},{"x":1049,"y":390,"score":42,"level":0},{"x":1257,"y":390,"score":57,"level":0},{"x":1366,"y":390,"score":82,"level":0},{"x":1376,"y":390,"score":60,"level":0},{"x":1453,"y":390,"score":64,"level":0},{"x":1463,"y":390,"score":100,"level":0},{"x":377,"y":391,"score":152,"level":0},{"x":454,"y":391,"score":65,"level":0},{"x":481,"y":391,"score":69,"level":0},{"x":546,"y":391,"score":28,"level":0},{"x":671,"y":391,"score":38,"level":0},{"x":682,"y":391,"score":57,"level":0},{"x":707,"y":391,"score":36,"level":0},{"x":829,"y":391,"score":139,"level":0},{"x":869,"y":391,"score":86,"level":0},{"x":913,"y":391,"score":36,"level":0},{"x":928,"y":391,"score":29,"level":0},{"x":933,"y":391,"score":124,"level":0},{"x":953,"y":391,"score":53,"level":0},{"x":966,"y":391,"score":113,"level":0},{"x":987,"y":391,"score":70,"level":0},{"x":1016,"y":391,"score":144,"level":0},{"x":1047,"y":391,"score":29,"level":0},{"x":1068,"y":391,"score":48,"level":0},{"x":1106,"y":391,"score":42,"level":0},{"x":1133,"y":391,"score":32,"level":0},{"x":1160,"y":391,"score":94,"level":0},{"x":1240,"y":391,"score":46,"level":0},{"x":1314,"y":391,"score":56,"level":0},{"x":1354,"y":391,"score":46,"level":0},{"x":1432,"y":391,"score":40,"level":0},{"x":401,"y":392,"score":67,"level":0},{"x":413,"y":392,"score":50,"level":0},{"x":521,"y":392,"score":27,"level":0},{"x":533,"y":392,"score":120,"level":0},{"x":539,"y":392,"score":36,"level":0},{"x":573,"y":392,"score":94,"level":0},{"x":922,"y":392,"score":35,"level":0},{"x":1124,"y":392,"score":33,"level":0},{"x":1144,"y":392,"score":90,"level":0},{"x":1156,"y":392,"score":70,"level":0},{"x":1245,"y":392,"score":118,"level":0},{"x":1273,"y":392,"score":141,"level":0},{"x":1308,"y":392,"score":32,"level":0},{"x":1327,"y":392,"score":114,"level":0},{"x":1372,"y":392,"score":57,"level":0},{"x":1454,"y":392,"score":48,"level":0},{"x":1475,"y":392,"score":65,"level":0},{"x":1488,"y":392,"score":42,"level":0},{"x":419,"y":393,"score":136,"level":0},{"x":455,"y":393,"score":104,"level":0},{"x":462,"y":393,"score":63,"level":0},{"x":560,"y":393,"score":80,"level":0},{"x":796,"y":393,"score":28,"level":0},{"x":824,"y":393,"score":181,"level":0},{"x":861,"y":393,"score":29,"level":0},{"x":876,"y":393,"score":58,"level":0},{"x":946,"y":393,"score":111,"level":0},{"x":986,"y":393,"score":80,"level":0},{"x":1004,"y":393,"score":36,"level":0},{"x":1024,"y":393,"score":148,"level":0},{"x":1047,"y":393,"score":38,"level":0},{"x":1097,"y":393,"score":59,"level":0},{"x":1137,"y":393,"score":29,"level":0},{"x":1208,"y":393,"score":72,"level":0},{"x":1215,"y":393,"score":110,"level":0},{"x":1346,"y":393,"score":90,"level":0},{"x":1360,"y":393,"score":97,"level":0},{"x":1365,"y":393,"score":26,"level":0},{"x":1438,"y":393,"score":72,"level":0},{"x":1440,"y":393,"score":55,"level":0},{"x":407,"y":394,"score":30,"level":0},{"x":639,"y":394,"score":42,"level":0},{"x":658,"y":394,"score":104,"level":0},{"x":699,"y":394,"score":118,"level":0},{"x":747,"y":394,"score":39,"level":0},{"x":766,"y":394,"score":28,"level":0},{"x":818,"y":394,"score":30,"level":0},{"x":840,"y":394,"score":29,"level":0},{"x":906,"y":394,"score":87,"level":0},{"x":1011,"y":394,"score":70,"level":0},{"x":1063,"y":394,"score":135,"level":0},{"x":1200,"y":394,"score":27,"level":0},{"x":1229,"y":394,"score":75,"level":0},{"x":1234,"y":394,"score":104,"level":0},{"x":1254,"y":394,"score":91,"level":0},{"x":1279,"y":394,"score":88,"level":0},{"x":1372,"y":394,"score":84,"level":0},{"x":1394,"y":394,"score":181,"level":0},{"x":1434,"y":394,"score":62,"level":0},{"x":1458,"y":394,"score":115,"level":0},{"x":1463,"y":394,"score":43,"level":0},{"x":413,"y":395,"score":60,"level":0},{"x":418,"y":395,"score":35,"level":0},{"x":497,"y":395,"score":54,"level":0},{"x":667,"y":395,"score":74,"level":0},{"x":694,"y":395,"score":49,"level":0},{"x":713,"y":395,"score":79,"level":0},{"x":865,"y":395,"score":106,"level":0},{"x":881,"y":395,"score":52,"level":0},{"x":885,"y":395,"score":60,"level":0},{"x":971,"y":395,"score":72,"level":0},{"x":1001,"y":395,"score":121,"level":0},{"x":1084,"y":395,"score":97,"level":0},{"x":1111,"y":395,"score":48,"level":0},{"x":1135,"y":395,"score":44,"level":0},{"x":1160,"y":395,"score":29,"level":0},{"x":1318,"y":395,"score":139,"level":0},{"x":1378,"y":395,"score":168,"level":0},{"x":1441,"y":395,"score":26,"level":0},{"x":1448,"y":395,"score":81,"level":0},{"x":394,"y":396,"score":55,"level":0},{"x":431,"y":396,"score":64,"level":0},{"x":568,"y":396,"score":32,"level":0},{"x":627,"y":396,"score":41,"level":0},{"x":800,"y":396,"score":38,"level":0},{"x":807,"y":396,"score":41,"level":0},{"x":912,"y":396,"score":32,"level":0},{"x":928,"y":396,"score":65,"level":0},{"x":1017,"y":396,"score":57,"level":0},{"x":1046,"y":396,"score":39,"level":0},{"x":1052,"y":396,"score":79,"level":0},{"x":1105,"y":396,"score":49,"level":0},{"x":1198,"y":396,"score":67,"level":0},{"x":1240,"y":396,"score":30,"level":0},{"x":1287,"y":396,"score":185,"level":0},{"x":1426,"y":396,"score":94,"level":0},{"x":1468,"y":396,"score":43,"level":0},{"x":382,"y":397,"score":49,"level":0},{"x":400,"y":397,"score":54,"level":0},{"x":416,"y":397,"score":51,"level":0},{"x":502,"y":397,"score":83,"level":0},{"x":528,"y":397,"score":57,"level":0},{"x":539,"y":397,"score":135,"level":0},{"x":548,"y":397,"score":97,"level":0},{"x":570,"y":397,"score":42,"level":0},{"x":661,"y":397,"score":88,"level":0},{"x":667,"y":397,"score":102,"level":0},{"x":827,"y":397,"score":29,"level":0},{"x":946,"y":397,"score":63,"level":0},{"x":948,"y":397,"score":120,"level":0},{"x":954,"y":397,"score":159,"level":0},{"x":1142,"y":397,"score":41,"level":0},{"x":1177,"y":397,"score":35,"level":0},{"x":1246,"y":397,"score":31,"level":0},{"x":1248,"y":397,"score":52,"level":0},{"x":1262,"y":397,"score":62,"level":0},{"x":1293,"y":397,"score":27,"level":0},{"x":1339,"y":397,"score":73,"level":0},{"x":1432,"y":397,"score":58,"level":0},{"x":1443,"y":397,"score":67,"level":0},{"x":1488,"y":397,"score":88,"level":0},{"x":389,"y":398,"score":30,"level":0},{"x":489,"y":398,"score":164,"level":0},{"x":635,"y":398,"score":34,"level":0},{"x":656,"y":398,"score":48,"level":0},{"x":689,"y":398,"score":31,"level":0},{"x":704,"y":398,"score":48,"level":0},{"x":725,"y":398,"score":136,"level":0},{"x":748,"y":398,"score":35,"level":0},{"x":753,"y":398,"score":60,"level":0},{"x":882,"y":398,"score":31,"level":0},{"x":937,"y":398,"score":108,"level":0},{"x":1008,"y":398,"score":39,"level":0},{"x":1042,"y":398,"score":98,"level":0},{"x":1072,"y":398,"score":44,"level":0},{"x":1123,"y":398,"score":82,"level":0},{"x":1192,"y":398,"score":106,"level":0},{"x":1222,"y":398,"score":111,"level":0},{"x":1230,"y":398,"score":95,"level":0},{"x":1253,"y":398,"score":39,"level":0},{"x":1372,"y":398,"score":44,"level":0},{"x":407,"y":399,"score":55,"level":0},{"x":458,"y":399,"score":56,"level":0},{"x":463,"y":399,"score":118,"level":0},{"x":471,"y":399,"score":164,"level":0},{"x":495,"y":399,"score":31,"level":0},{"x":528,"y":399,"score":51,"level":0},{"x":567,"y":399,"score":40,"level":0},{"x":629,"y":399,"score":26,"level":0},{"x":662,"y":399,"score":77,"level":0},{"x":684,"y":399,"score":109,"level":0},{"x":847,"y":399,"score":78,"level":0},{"x":920,"y":399,"score":83,"level":0},{"x":962,"y":399,"score":32,"level":0},{"x":971,"y":399,"score":76,"level":0},{"x":1173,"y":399,"score":36,"level":0},{"x":1330,"y":399,"score":33,"level":0},{"x":1357,"y":399,"score":185,"level":0},{"x":1367,"y":399,"score":169,"level":0},{"x":1434,"y":399,"score":98,"level":0},{"x":413,"y":400,"score":122,"level":0},{"x":562,"y":400,"score":49,"level":0},{"x":612,"y":400,"score":38,"level":0},{"x":797,"y":400,"score":47,"level":0},{"x":877,"y":400,"score":48,"level":0},{"x":884,"y":400,"score":68,"level":0},{"x":976,"y":400,"score":96,"level":0},{"x":990,"y":400,"score":101,"level":0},{"x":1024,"y":400,"score":54,"level":0},{"x":1072,"y":400,"score":29,"level":0},{"x":1129,"y":400,"score":39,"level":0},{"x":1154,"y":400,"score":156,"level":0},{"x":1160,"y":400,"score":105,"level":0},{"x":1282,"y":400,"score":53,"level":0},{"x":1335,"y":400,"score":84,"level":0},{"x":1342,"y":400,"score":35,"level":0},{"x":1381,"y":400,"score":62,"level":0},{"x":1395,"y":400,"score":32,"level":0},{"x":1473,"y":400,"score":57,"level":0},{"x":386,"y":401,"score":61,"level":0},{"x":482,"y":401,"score":76,"level":0},{"x":503,"y":401,"score":32,"level":0},{"x":510,"y":401,"score":52,"level":0},{"x":518,"y":401,"score":37,"level":0},{"x":687,"y":401,"score":49,"level":0},{"x":792,"y":401,"score":31,"level":0},{"x":825,"y":401,"score":36,"level":0},{"x":963,"y":401,"score":32,"level":0},{"x":999,"y":401,"score":59,"level":0},{"x":1017,"y":401,"score":30,"level":0},{"x":1112,"y":401,"score":56,"level":0},{"x":1139,"y":401,"score":61,"level":0},{"x":1146,"y":401,"score":32,"level":0},{"x":1178,"y":401,"score":58,"level":0},{"x":1247,"y":401,"score":46,"level":0},{"x":1255,"y":401,"score":120,"level":0},{"x":1270,"y":401,"score":98,"level":0},{"x":1275,"y":401,"score":117,"level":0},{"x":1371,"y":401,"score":84,"level":0},{"x":1435,"y":401,"score":80,"level":0},{"x":1442,"y":401,"score":32,"level":0},{"x":1461,"y":401,"score":54,"level":0},{"x":377,"y":402,"score":39,"level":0},{"x":432,"y":402,"score":53,"level":0},{"x":441,"y":402,"score":35,"level":0},{"x":538,"y":402,"score":39,"level":0},{"x":703,"y":402,"score":29,"level":0},{"x":738,"y":402,"score":170,"level":0},{"x":765,"y":402,"score":65,"level":0},{"x":851,"y":402,"score":70,"level":0},{"x":913,"y":402,"score":44,"level":0},{"x":940,"y":402,"score":26,"level":0},{"x":949,"y":402,"score":119,"level":0},{"x":961,"y":402,"score":50,"level":0},{"x":1058,"y":402,"score":68,"level":0},{"x":1137,"y":402,"score":52,"level":0},{"x":1218,"y":402,"score":33,"level":0},{"x":1261,"y":402,"score":101,"level":0},{"x":1389,"y":402,"score":42,"level":0},{"x":1451,"y":402,"score":46,"level":0},{"x":398,"y":403,"score":41,"level":0},{"x":415,"y":403,"score":88,"level":0},{"x":461,"y":403,"score":52,"level":0},{"x":472,"y":403,"score":49,"level":0},{"x":477,"y":403,"score":43,"level":0},{"x":522,"y":403,"score":44,"level":0},{"x":552,"y":403,"score":105,"level":0},{"x":576,"y":403,"score":29,"level":0},{"x":640,"y":403,"score":65,"level":0},{"x":672,"y":403,"score":30,"level":0},{"x":686,"y":403,"score":75,"level":0},{"x":900,"y":403,"score":34,"level":0},{"x":926,"y":403,"score":48,"level":0},{"x":955,"y":403,"score":101,"level":0},{"x":1103,"y":403,"score":51,"level":0},{"x":1143,"y":403,"score":59,"level":0},{"x":1201,"y":403,"score":35,"level":0},{"x":1355,"y":403,"score":43,"level":0},{"x":1454,"y":403,"score":54,"level":0},{"x":1456,"y":403,"score":39,"level":0},{"x":1469,"y":403,"score":32,"level":0},{"x":1488,"y":403,"score":115,"level":0},{"x":533,"y":404,"score":78,"level":0},{"x":568,"y":404,"score":65,"level":0},{"x":617,"y":404,"score":120,"level":0},{"x":662,"y":404,"score":29,"level":0},{"x":666,"y":404,"score":64,"level":0},{"x":678,"y":404,"score":181,"level":0},{"x":741,"y":404,"score":66,"level":0},{"x":747,"y":404,"score":26,"level":0},{"x":829,"y":404,"score":123,"level":0},{"x":840,"y":404,"score":50,"level":0},{"x":845,"y":404,"score":62,"level":0},{"x":885,"y":404,"score":48,"level":0},{"x":895,"y":404,"score":40,"level":0},{"x":1072,"y":404,"score":61,"level":0},{"x":1077,"y":404,"score":37,"level":0},{"x":1089,"y":404,"score":38,"level":0},{"x":1092,"y":404,"score":32,"level":0},{"x":1114,"y":404,"score":39,"level":0},{"x":1135,"y":404,"score":36,"level":0},{"x":1187,"y":404,"score":81,"level":0},{"x":1242,"y":404,"score":124,"level":0},{"x":1325,"y":404,"score":51,"level":0},{"x":1331,"y":404,"score":50,"level":0},{"x":1360,"y":404,"score":83,"level":0},{"x":1477,"y":404,"score":94,"level":0},{"x":423,"y":405,"score":28,"level":0},{"x":456,"y":405,"score":33,"level":0},{"x":490,"y":405,"score":48,"level":0},{"x":630,"y":405,"score":92,"level":0},{"x":726,"y":405,"score":50,"level":0},{"x":926,"y":405,"score":79,"level":0},{"x":950,"y":405,"score":136,"level":0},{"x":970,"y":405,"score":43,"level":0},{"x":1020,"y":405,"score":68,"level":0},{"x":1047,"y":405,"score":89,"level":0},{"x":1067,"y":405,"score":27,"level":0},{"x":1178,"y":405,"score":110,"level":0},{"x":1196,"y":405,"score":36,"level":0},{"x":1426,"y":405,"score":89,"level":0},{"x":1465,"y":405,"score":28,"level":0},{"x":412,"y":406,"score":55,"level":0},{"x":435,"y":406,"score":99,"level":0},{"x":472,"y":406,"score":70,"level":0},{"x":530,"y":406,"score":77,"level":0},{"x":684,"y":406,"score":62,"level":0},{"x":697,"y":406,"score":30,"level":0},{"x":800,"y":406,"score":50,"level":0},{"x":820,"y":406,"score":26,"level":0},{"x":865,"y":406,"score":138,"level":0},{"x":895,"y":406,"score":66,"level":0},{"x":998,"y":406,"score":73,"level":0},{"x":1130,"y":406,"score":42,"level":0},{"x":1192,"y":406,"score":106,"level":0},{"x":1234,"y":406,"score":87,"level":0},{"x":1380,"y":406,"score":41,"level":0},{"x":394,"y":407,"score":38,"level":0},{"x":430,"y":407,"score":216,"level":0},{"x":463,"y":407,"score":68,"level":0},{"x":483,"y":407,"score":58,"level":0},{"x":622,"y":407,"score":32,"level":0},{"x":631,"y":407,"score":31,"level":0},{"x":689,"y":407,"score":139,"level":0},{"x":722,"y":407,"score":68,"level":0},{"x":738,"y":407,"score":39,"level":0},{"x":786,"y":407,"score":73,"level":0},{"x":815,"y":407,"score":39,"level":0},{"x":965,"y":407,"score":82,"level":0},{"x":971,"y":407,"score":83,"level":0},{"x":976,"y":407,"score":42,"level":0},{"x":1008,"y":407,"score":26,"level":0},{"x":1155,"y":407,"score":69,"level":0},{"x":1220,"y":407,"score":150,"level":0},{"x":1265,"y":407,"score":150,"level":0},{"x":1318,"y":407,"score":59,"level":0},{"x":1336,"y":407,"score":43,"level":0},{"x":1367,"y":407,"score":106,"level":0},{"x":1373,"y":407,"score":239,"level":0},{"x":1470,"y":407,"score":92,"level":0},{"x":494,"y":408,"score":53,"level":0},{"x":542,"y":408,"score":85,"level":0},{"x":562,"y":408,"score":76,"level":0},{"x":644,"y":408,"score":29,"level":0},{"x":687,"y":408,"score":131,"level":0},{"x":730,"y":408,"score":31,"level":0},{"x":937,"y":408,"score":91,"level":0},{"x":1141,"y":408,"score":45,"level":0},{"x":1167,"y":408,"score":42,"level":0},{"x":1275,"y":408,"score":103,"level":0},{"x":1289,"y":408,"score":33,"level":0},{"x":1392,"y":408,"score":71,"level":0},{"x":1428,"y":408,"score":76,"level":0},{"x":1484,"y":408,"score":33,"level":0},{"x":390,"y":409,"score":37,"level":0},{"x":456,"y":409,"score":83,"level":0},{"x":468,"y":409,"score":144,"level":0},{"x":502,"y":409,"score":59,"level":0},{"x":533,"y":409,"score":45,"level":0},{"x":574,"y":409,"score":136,"level":0},{"x":707,"y":409,"score":43,"level":0},{"x":717,"y":409,"score":148,"level":0},{"x":742,"y":409,"score":112,"level":0},{"x":876,"y":409,"score":62,"level":0},{"x":885,"y":409,"score":103,"level":0},{"x":947,"y":409,"score":36,"level":0},{"x":957,"y":409,"score":29,"level":0},{"x":1009,"y":409,"score":34,"level":0},{"x":1123,"y":409,"score":57,"level":0},{"x":1128,"y":409,"score":70,"level":0},{"x":1188,"y":409,"score":53,"level":0},{"x":1204,"y":409,"score":52,"level":0},{"x":1249,"y":409,"score":146,"level":0},{"x":1256,"y":409,"score":29,"level":0},{"x":1323,"y":409,"score":26,"level":0},{"x":1345,"y":409,"score":66,"level":0},{"x":1384,"y":409,"score":94,"level":0},{"x":1453,"y":409,"score":26,"level":0},{"x":1479,"y":409,"score":109,"level":0},{"x":473,"y":410,"score":58,"level":0},{"x":629,"y":410,"score":39,"level":0},{"x":652,"y":410,"score":26,"level":0},{"x":693,"y":410,"score":76,"level":0},{"x":810,"y":410,"score":28,"level":0},{"x":880,"y":410,"score":44,"level":0},{"x":927,"y":410,"score":45,"level":0},{"x":952,"y":410,"score":42,"level":0},{"x":976,"y":410,"score":134,"level":0},{"x":1014,"y":410,"score":65,"level":0},{"x":1062,"y":410,"score":51,"level":0},{"x":1075,"y":410,"score":30,"level":0},{"x":1080,"y":410,"score":39,"level":0},{"x":1146,"y":410,"score":44,"level":0},{"x":1172,"y":410,"score":67,"level":0},{"x":1238,"y":410,"score":28,"level":0},{"x":1316,"y":410,"score":81,"level":0},{"x":1321,"y":410,"score":29,"level":0},{"x":1340,"y":410,"score":72,"level":0},{"x":1446,"y":410,"score":41,"level":0},{"x":424,"y":411,"score":34,"level":0},{"x":525,"y":411,"score":52,"level":0},{"x":530,"y":411,"score":58,"level":0},{"x":635,"y":411,"score":34,"level":0},{"x":676,"y":411,"score":154,"level":0},{"x":681,"y":411,"score":68,"level":0},{"x":713,"y":411,"score":36,"level":0},{"x":956,"y":411,"score":27,"level":0},{"x":967,"y":411,"score":114,"level":0},{"x":982,"y":411,"score":64,"level":0},{"x":988,"y":411,"score":137,"level":0},{"x":1000,"y":411,"score":130,"level":0},{"x":1017,"y":411,"score":65,"level":0},{"x":1161,"y":411,"score":103,"level":0},{"x":1166,"y":411,"score":51,"level":0},{"x":1435,"y":411,"score":92,"level":0},{"x":384,"y":412,"score":58,"level":0},{"x":479,"y":412,"score":86,"level":0},{"x":491,"y":412,"score":62,"level":0},{"x":619,"y":412,"score":70,"level":0},{"x":725,"y":412,"score":44,"level":0},{"x":818,"y":412,"score":35,"level":0},{"x":917,"y":412,"score":39,"level":0},{"x":1009,"y":412,"score":74,"level":0},{"x":1053,"y":412,"score":60,"level":0},{"x":1106,"y":412,"score":47,"level":0},{"x":1229,"y":412,"score":100,"level":0},{"x":1235,"y":412,"score":34,"level":0},{"x":1253,"y":412,"score":70,"level":0},{"x":1256,"y":412,"score":38,"level":0},{"x":1260,"y":412,"score":56,"level":0},{"x":405,"y":413,"score":82,"level":0},{"x":409,"y":413,"score":92,"level":0},{"x":746,"y":413,"score":51,"level":0},{"x":786,"y":413,"score":160,"level":0},{"x":808,"y":413,"score":51,"level":0},{"x":936,"y":413,"score":38,"level":0},{"x":974,"y":413,"score":48,"level":0},{"x":999,"y":413,"score":99,"level":0},{"x":1152,"y":413,"score":73,"level":0},{"x":1193,"y":413,"score":43,"level":0},{"x":1213,"y":413,"score":35,"level":0},{"x":1221,"y":413,"score":42,"level":0},{"x":1246,"y":413,"score":31,"level":0},{"x":1339,"y":413,"score":26,"level":0},{"x":1386,"y":413,"score":36,"level":0},{"x":1392,"y":413,"score":112,"level":0},{"x":1455,"y":413,"score":27,"level":0},{"x":384,"y":414,"score":42,"level":0},{"x":389,"y":414,"score":130,"level":0},{"x":421,"y":414,"score":110,"level":0},{"x":468,"y":414,"score":78,"level":0},{"x":533,"y":414,"score":53,"level":0},{"x":542,"y":414,"score":86,"level":0},{"x":572,"y":414,"score":47,"level":0},{"x":670,"y":414,"score":87,"level":0},{"x":702,"y":414,"score":46,"level":0},{"x":707,"y":414,"score":27,"level":0},{"x":711,"y":414,"score":72,"level":0},{"x":717,"y":414,"score":68,"level":0},{"x":876,"y":414,"score":80,"level":0},{"x":903,"y":414,"score":119,"level":0},{"x":916,"y":414,"score":39,"level":0},{"x":953,"y":414,"score":88,"level":0},{"x":1017,"y":414,"score":85,"level":0},{"x":1066,"y":414,"score":51,"level":0},{"x":1079,"y":414,"score":37,"level":0},{"x":1123,"y":414,"score":48,"level":0},{"x":1130,"y":414,"score":149,"level":0},{"x":1157,"y":414,"score":82,"level":0},{"x":1166,"y":414,"score":53,"level":0},{"x":1234,"y":414,"score":68,"level":0},{"x":1241,"y":414,"score":99,"level":0},{"x":1275,"y":414,"score":72,"level":0},{"x":1305,"y":414,"score":36,"level":0},{"x":1382,"y":414,"score":54,"level":0},{"x":401,"y":415,"score":46,"level":0},{"x":484,"y":415,"score":30,"level":0},{"x":491,"y":415,"score":44,"level":0},{"x":516,"y":415,"score":34,"level":0},{"x":575,"y":415,"score":60,"level":0},{"x":618,"y":415,"score":40,"level":0},{"x":684,"y":415,"score":229,"level":0},{"x":741,"y":415,"score":36,"level":0},{"x":958,"y":415,"score":112,"level":0},{"x":973,"y":415,"score":64,"level":0},{"x":1023,"y":415,"score":91,"level":0},{"x":1056,"y":415,"score":65,"level":0},{"x":1374,"y":415,"score":78,"level":0},{"x":1462,"y":415,"score":82,"level":0},{"x":1468,"y":415,"score":64,"level":0},{"x":1485,"y":415,"score":31,"level":0},{"x":410,"y":416,"score":49,"level":0},{"x":414,"y":416,"score":43,"level":0},{"x":462,"y":416,"score":69,"level":0},{"x":479,"y":416,"score":33,"level":0},{"x":613,"y":416,"score":30,"level":0},{"x":639,"y":416,"score":49,"level":0},{"x":805,"y":416,"score":44,"level":0},{"x":810,"y":416,"score":68,"level":0},{"x":860,"y":416,"score":40,"level":0},{"x":1010,"y":416,"score":37,"level":0},{"x":1016,"y":416,"score":66,"level":0},{"x":1060,"y":416,"score":26,"level":0},{"x":1103,"y":416,"score":38,"level":0},{"x":1131,"y":416,"score":167,"level":0},{"x":1190,"y":416,"score":26,"level":0},{"x":1197,"y":416,"score":32,"level":0},{"x":1246,"y":416,"score":42,"level":0},{"x":1314,"y":416,"score":102,"level":0},{"x":1320,"y":416,"score":56,"level":0},{"x":1328,"y":416,"score":70,"level":0},{"x":570,"y":417,"score":67,"level":0},{"x":633,"y":417,"score":29,"level":0},{"x":666,"y":417,"score":100,"level":0},{"x":679,"y":417,"score":120,"level":0},{"x":825,"y":417,"score":130,"level":0},{"x":833,"y":417,"score":86,"level":0},{"x":901,"y":417,"score":43,"level":0},{"x":908,"y":417,"score":106,"level":0},{"x":922,"y":417,"score":64,"level":0},{"x":942,"y":417,"score":144,"level":0},{"x":948,"y":417,"score":55,"level":0},{"x":1092,"y":417,"score":46,"level":0},{"x":1097,"y":417,"score":31,"level":0},{"x":1145,"y":417,"score":30,"level":0},{"x":1156,"y":417,"score":40,"level":0},{"x":1181,"y":417,"score":103,"level":0},{"x":1186,"y":417,"score":124,"level":0},{"x":1206,"y":417,"score":55,"level":0},{"x":1251,"y":417,"score":90,"level":0},{"x":1379,"y":417,"score":32,"level":0},{"x":1462,"y":417,"score":70,"level":0},{"x":410,"y":418,"score":31,"level":0},{"x":424,"y":418,"score":40,"level":0},{"x":431,"y":418,"score":98,"level":0},{"x":548,"y":418,"score":98,"level":0},{"x":671,"y":418,"score":37,"level":0},{"x":746,"y":418,"score":69,"level":0},{"x":828,"y":418,"score":74,"level":0},{"x":840,"y":418,"score":79,"level":0},{"x":979,"y":418,"score":47,"level":0},{"x":1045,"y":418,"score":103,"level":0},{"x":1062,"y":418,"score":70,"level":0},{"x":1077,"y":418,"score":38,"level":0},{"x":1167,"y":418,"score":36,"level":0},{"x":1188,"y":418,"score":76,"level":0},{"x":1216,"y":418,"score":110,"level":0},{"x":1222,"y":418,"score":87,"level":0},{"x":1227,"y":418,"score":43,"level":0},{"x":1259,"y":418,"score":224,"level":0},{"x":1269,"y":418,"score":83,"level":0},{"x":1301,"y":418,"score":51,"level":0},{"x":1386,"y":418,"score":219,"level":0},{"x":1447,"y":418,"score":48,"level":0},{"x":377,"y":419,"score":85,"level":0},{"x":392,"y":419,"score":28,"level":0},{"x":406,"y":419,"score":142,"level":0},{"x":458,"y":419,"score":40,"level":0},{"x":474,"y":419,"score":102,"level":0},{"x":505,"y":419,"score":28,"level":0},{"x":511,"y":419,"score":26,"level":0},{"x":575,"y":419,"score":37,"level":0},{"x":615,"y":419,"score":55,"level":0},{"x":622,"y":419,"score":37,"level":0},{"x":628,"y":419,"score":63,"level":0},{"x":865,"y":419,"score":43,"level":0},{"x":877,"y":419,"score":44,"level":0},{"x":881,"y":419,"score":27,"level":0},{"x":961,"y":419,"score":87,"level":0},{"x":1040,"y":419,"score":151,"level":0},{"x":1127,"y":419,"score":34,"level":0},{"x":1142,"y":419,"score":31,"level":0},{"x":1203,"y":419,"score":27,"level":0},{"x":1281,"y":419,"score":30,"level":0},{"x":1394,"y":419,"score":36,"level":0},{"x":1434,"y":419,"score":65,"level":0},{"x":1441,"y":419,"score":28,"level":0},{"x":1457,"y":419,"score":104,"level":0},{"x":1462,"y":419,"score":52,"level":0},{"x":1484,"y":419,"score":32,"level":0},{"x":1490,"y":419,"score":76,"level":0},{"x":485,"y":420,"score":59,"level":0},{"x":532,"y":420,"score":41,"level":0},{"x":567,"y":420,"score":28,"level":0},{"x":642,"y":420,"score":70,"level":0},{"x":690,"y":420,"score":89,"level":0},{"x":718,"y":420,"score":87,"level":0},{"x":724,"y":420,"score":49,"level":0},{"x":932,"y":420,"score":37,"level":0},{"x":946,"y":420,"score":99,"level":0},{"x":970,"y":420,"score":55,"level":0},{"x":1011,"y":420,"score":41,"level":0},{"x":1070,"y":420,"score":71,"level":0},{"x":1098,"y":420,"score":38,"level":0},{"x":1183,"y":420,"score":40,"level":0},{"x":1243,"y":420,"score":56,"level":0},{"x":1275,"y":420,"score":106,"level":0},{"x":1285,"y":420,"score":98,"level":0},{"x":1362,"y":420,"score":46,"level":0},{"x":1446,"y":420,"score":37,"level":0},{"x":1470,"y":420,"score":34,"level":0},{"x":1478,"y":420,"score":50,"level":0},{"x":432,"y":421,"score":73,"level":0},{"x":675,"y":421,"score":26,"level":0},{"x":685,"y":421,"score":76,"level":0},{"x":736,"y":421,"score":94,"level":0},{"x":748,"y":421,"score":44,"level":0},{"x":798,"y":421,"score":36,"level":0},{"x":801,"y":421,"score":30,"level":0},{"x":885,"y":421,"score":67,"level":0},{"x":936,"y":421,"score":82,"level":0},{"x":985,"y":421,"score":89,"level":0},{"x":1001,"y":421,"score":50,"level":0},{"x":1016,"y":421,"score":87,"level":0},{"x":1057,"y":421,"score":85,"level":0},{"x":1123,"y":421,"score":30,"level":0},{"x":1138,"y":421,"score":63,"level":0},{"x":1155,"y":421,"score":43,"level":0},{"x":1197,"y":421,"score":165,"level":0},{"x":1231,"y":421,"score":41,"level":0},{"x":1303,"y":421,"score":36,"level":0},{"x":1339,"y":421,"score":107,"level":0},{"x":1381,"y":421,"score":126,"level":0},{"x":670,"y":422,"score":34,"level":0},{"x":775,"y":422,"score":30,"level":0},{"x":796,"y":422,"score":37,"level":0},{"x":840,"y":422,"score":62,"level":0},{"x":845,"y":422,"score":30,"level":0},{"x":864,"y":422,"score":132,"level":0},{"x":927,"y":422,"score":50,"level":0},{"x":987,"y":422,"score":88,"level":0},{"x":1153,"y":422,"score":46,"level":0},{"x":1178,"y":422,"score":161,"level":0},{"x":1243,"y":422,"score":43,"level":0},{"x":1254,"y":422,"score":95,"level":0},{"x":1263,"y":422,"score":152,"level":0},{"x":1316,"y":422,"score":58,"level":0},{"x":1334,"y":422,"score":41,"level":0},{"x":1377,"y":422,"score":52,"level":0},{"x":1470,"y":422,"score":44,"level":0},{"x":466,"y":423,"score":92,"level":0},{"x":486,"y":423,"score":44,"level":0},{"x":492,"y":423,"score":42,"level":0},{"x":543,"y":423,"score":83,"level":0},{"x":562,"y":423,"score":128,"level":0},{"x":582,"y":423,"score":26,"level":0},{"x":680,"y":423,"score":132,"level":0},{"x":702,"y":423,"score":225,"level":0},{"x":731,"y":423,"score":73,"level":0},{"x":740,"y":423,"score":43,"level":0},{"x":754,"y":423,"score":38,"level":0},{"x":783,"y":423,"score":28,"level":0},{"x":804,"y":423,"score":43,"level":0},{"x":810,"y":423,"score":70,"level":0},{"x":921,"y":423,"score":153,"level":0},{"x":958,"y":423,"score":127,"level":0},{"x":964,"y":423,"score":60,"level":0},{"x":985,"y":423,"score":92,"level":0},{"x":1058,"y":423,"score":86,"level":0},{"x":1087,"y":423,"score":43,"level":0},{"x":1296,"y":423,"score":134,"level":0},{"x":1425,"y":423,"score":56,"level":0},{"x":425,"y":424,"score":107,"level":0},{"x":572,"y":424,"score":60,"level":0},{"x":665,"y":424,"score":126,"level":0},{"x":711,"y":424,"score":266,"level":0},{"x":722,"y":424,"score":63,"level":0},{"x":748,"y":424,"score":103,"level":0},{"x":802,"y":424,"score":49,"level":0},{"x":877,"y":424,"score":31,"level":0},{"x":883,"y":424,"score":79,"level":0},{"x":909,"y":424,"score":72,"level":0},{"x":948,"y":424,"score":60,"level":0},{"x":1039,"y":424,"score":57,"level":0},{"x":1047,"y":424,"score":57,"level":0},{"x":1065,"y":424,"score":34,"level":0},{"x":1203,"y":424,"score":111,"level":0},{"x":1215,"y":424,"score":106,"level":0},{"x":1224,"y":424,"score":44,"level":0},{"x":1269,"y":424,"score":80,"level":0},{"x":1311,"y":424,"score":62,"level":0},{"x":1393,"y":424,"score":79,"level":0},{"x":1423,"y":424,"score":46,"level":0},{"x":1428,"y":424,"score":48,"level":0},{"x":1444,"y":424,"score":41,"level":0},{"x":1465,"y":424,"score":35,"level":0},{"x":411,"y":425,"score":43,"level":0},{"x":530,"y":425,"score":27,"level":0},{"x":535,"y":425,"score":42,"level":0},{"x":628,"y":425,"score":43,"level":0},{"x":678,"y":425,"score":164,"level":0},{"x":690,"y":425,"score":81,"level":0},{"x":761,"y":425,"score":29,"level":0},{"x":821,"y":425,"score":38,"level":0},{"x":897,"y":425,"score":96,"level":0},{"x":954,"y":425,"score":90,"level":0},{"x":976,"y":425,"score":128,"level":0},{"x":1006,"y":425,"score":54,"level":0},{"x":1012,"y":425,"score":83,"level":0},{"x":1024,"y":425,"score":79,"level":0},{"x":1052,"y":425,"score":52,"level":0},{"x":1111,"y":425,"score":44,"level":0},{"x":1157,"y":425,"score":215,"level":0},{"x":1191,"y":425,"score":212,"level":0},{"x":1239,"y":425,"score":40,"level":0},{"x":1336,"y":425,"score":40,"level":0},{"x":1341,"y":425,"score":58,"level":0},{"x":1353,"y":425,"score":49,"level":0},{"x":1361,"y":425,"score":70,"level":0},{"x":1368,"y":425,"score":33,"level":0},{"x":1420,"y":425,"score":33,"level":0},{"x":1439,"y":425,"score":98,"level":0},{"x":377,"y":426,"score":29,"level":0},{"x":434,"y":426,"score":50,"level":0},{"x":457,"y":426,"score":53,"level":0},{"x":685,"y":426,"score":114,"level":0},{"x":727,"y":426,"score":125,"level":0},{"x":733,"y":426,"score":45,"level":0},{"x":826,"y":426,"score":233,"level":0},{"x":834,"y":426,"score":86,"level":0},{"x":915,"y":426,"score":45,"level":0},{"x":941,"y":426,"score":163,"level":0},{"x":981,"y":426,"score":40,"level":0},{"x":1001,"y":426,"score":43,"level":0},{"x":1048,"y":426,"score":53,"level":0},{"x":1081,"y":426,"score":102,"level":0},{"x":1145,"y":426,"score":64,"level":0},{"x":1166,"y":426,"score":93,"level":0},{"x":1172,"y":426,"score":30,"level":0},{"x":1181,"y":426,"score":106,"level":0},{"x":1185,"y":426,"score":155,"level":0},{"x":1258,"y":426,"score":125,"level":0},{"x":1300,"y":426,"score":99,"level":0},{"x":1351,"y":426,"score":57,"level":0},{"x":653,"y":427,"score":35,"level":0},{"x":788,"y":427,"score":103,"level":0},{"x":877,"y":427,"score":41,"level":0},{"x":882,"y":427,"score":77,"level":0},{"x":892,"y":427,"score":60,"level":0},{"x":925,"y":427,"score":26,"level":0},{"x":935,"y":427,"score":60,"level":0},{"x":962,"y":427,"score":98,"level":0},{"x":1005,"y":427,"score":30,"level":0},{"x":1016,"y":427,"score":98,"level":0},{"x":1061,"y":427,"score":36,"level":0},{"x":1092,"y":427,"score":88,"level":0},{"x":1139,"y":427,"score":79,"level":0},{"x":1248,"y":427,"score":28,"level":0},{"x":493,"y":428,"score":47,"level":0},{"x":551,"y":428,"score":129,"level":0},{"x":572,"y":428,"score":33,"level":0},{"x":613,"y":428,"score":35,"level":0},{"x":619,"y":428,"score":122,"level":0},{"x":638,"y":428,"score":115,"level":0},{"x":644,"y":428,"score":97,"level":0},{"x":708,"y":428,"score":77,"level":0},{"x":751,"y":428,"score":46,"level":0},{"x":972,"y":428,"score":116,"level":0},{"x":1055,"y":428,"score":51,"level":0},{"x":1100,"y":428,"score":88,"level":0},{"x":1119,"y":428,"score":89,"level":0},{"x":1128,"y":428,"score":68,"level":0},{"x":1162,"y":428,"score":33,"level":0},{"x":1177,"y":428,"score":66,"level":0},{"x":1212,"y":428,"score":91,"level":0},{"x":1265,"y":428,"score":181,"level":0},{"x":1270,"y":428,"score":36,"level":0},{"x":1296,"y":428,"score":62,"level":0},{"x":386,"y":429,"score":138,"level":0},{"x":393,"y":429,"score":26,"level":0},{"x":398,"y":429,"score":108,"level":0},{"x":428,"y":429,"score":97,"level":0},{"x":507,"y":429,"score":37,"level":0},{"x":587,"y":429,"score":27,"level":0},{"x":695,"y":429,"score":28,"level":0},{"x":703,"y":429,"score":173,"level":0},{"x":711,"y":429,"score":71,"level":0},{"x":892,"y":429,"score":61,"level":0},{"x":897,"y":429,"score":70,"level":0},{"x":1038,"y":429,"score":70,"level":0},{"x":1049,"y":429,"score":33,"level":0},{"x":1164,"y":429,"score":30,"level":0},{"x":1221,"y":429,"score":45,"level":0},{"x":1304,"y":429,"score":50,"level":0},{"x":1322,"y":429,"score":128,"level":0},{"x":1347,"y":429,"score":30,"level":0},{"x":1368,"y":429,"score":45,"level":0},{"x":1391,"y":429,"score":26,"level":0},{"x":1423,"y":429,"score":27,"level":0},{"x":1489,"y":429,"score":33,"level":0},{"x":406,"y":430,"score":33,"level":0},{"x":516,"y":430,"score":35,"level":0},{"x":602,"y":430,"score":39,"level":0},{"x":671,"y":430,"score":68,"level":0},{"x":681,"y":430,"score":51,"level":0},{"x":876,"y":430,"score":84,"level":0},{"x":885,"y":430,"score":85,"level":0},{"x":933,"y":430,"score":41,"level":0},{"x":1007,"y":430,"score":76,"level":0},{"x":1072,"y":430,"score":113,"level":0},{"x":1084,"y":430,"score":77,"level":0},{"x":1197,"y":430,"score":80,"level":0},{"x":1217,"y":430,"score":40,"level":0},{"x":1227,"y":430,"score":37,"level":0},{"x":1361,"y":430,"score":34,"level":0},{"x":1428,"y":430,"score":39,"level":0},{"x":438,"y":431,"score":26,"level":0},{"x":474,"y":431,"score":93,"level":0},{"x":538,"y":431,"score":64,"level":0},{"x":691,"y":431,"score":26,"level":0},{"x":907,"y":431,"score":28,"level":0},{"x":916,"y":431,"score":38,"level":0},{"x":953,"y":431,"score":123,"level":0},{"x":985,"y":431,"score":96,"level":0},{"x":1176,"y":431,"score":62,"level":0},{"x":1188,"y":431,"score":145,"level":0},{"x":1231,"y":431,"score":35,"level":0},{"x":1237,"y":431,"score":30,"level":0},{"x":1269,"y":431,"score":32,"level":0},{"x":1334,"y":431,"score":44,"level":0},{"x":1351,"y":431,"score":37,"level":0},{"x":1357,"y":431,"score":28,"level":0},{"x":1443,"y":431,"score":31,"level":0},{"x":463,"y":432,"score":41,"level":0},{"x":566,"y":432,"score":58,"level":0},{"x":641,"y":432,"score":77,"level":0},{"x":681,"y":432,"score":89,"level":0},{"x":734,"y":432,"score":59,"level":0},{"x":786,"y":432,"score":30,"level":0},{"x":826,"y":432,"score":87,"level":0},{"x":832,"y":432,"score":93,"level":0},{"x":864,"y":432,"score":132,"level":0},{"x":961,"y":432,"score":29,"level":0},{"x":1000,"y":432,"score":88,"level":0},{"x":1005,"y":432,"score":31,"level":0},{"x":1129,"y":432,"score":38,"level":0},{"x":1162,"y":432,"score":151,"level":0},{"x":1251,"y":432,"score":109,"level":0},{"x":1256,"y":432,"score":36,"level":0},{"x":1316,"y":432,"score":74,"level":0},{"x":1448,"y":432,"score":34,"level":0},{"x":415,"y":433,"score":72,"level":0},{"x":501,"y":433,"score":61,"level":0},{"x":572,"y":433,"score":151,"level":0},{"x":774,"y":433,"score":41,"level":0},{"x":920,"y":433,"score":95,"level":0},{"x":994,"y":433,"score":65,"level":0},{"x":1043,"y":433,"score":81,"level":0},{"x":1103,"y":433,"score":80,"level":0},{"x":1109,"y":433,"score":33,"level":0},{"x":1165,"y":433,"score":38,"level":0},{"x":1193,"y":433,"score":28,"level":0},{"x":1343,"y":433,"score":30,"level":0},{"x":1415,"y":433,"score":41,"level":0},{"x":653,"y":434,"score":147,"level":0},{"x":705,"y":434,"score":29,"level":0},{"x":724,"y":434,"score":39,"level":0},{"x":787,"y":434,"score":44,"level":0},{"x":858,"y":434,"score":27,"level":0},{"x":936,"y":434,"score":37,"level":0},{"x":978,"y":434,"score":38,"level":0},{"x":1049,"y":434,"score":64,"level":0},{"x":1065,"y":434,"score":102,"level":0},{"x":1087,"y":434,"score":37,"level":0},{"x":1247,"y":434,"score":45,"level":0},{"x":1269,"y":434,"score":54,"level":0},{"x":1303,"y":434,"score":55,"level":0},{"x":1347,"y":434,"score":54,"level":0},{"x":1374,"y":434,"score":50,"level":0},{"x":1423,"y":434,"score":100,"level":0},{"x":1432,"y":434,"score":81,"level":0},{"x":1447,"y":434,"score":30,"level":0},{"x":1467,"y":434,"score":49,"level":0},{"x":392,"y":435,"score":33,"level":0},{"x":488,"y":435,"score":108,"level":0},{"x":546,"y":435,"score":62,"level":0},{"x":793,"y":435,"score":64,"level":0},{"x":795,"y":435,"score":69,"level":0},{"x":889,"y":435,"score":68,"level":0},{"x":1017,"y":435,"score":188,"level":0},{"x":1058,"y":435,"score":55,"level":0},{"x":1076,"y":435,"score":27,"level":0},{"x":1190,"y":435,"score":124,"level":0},{"x":1224,"y":435,"score":34,"level":0},{"x":1367,"y":435,"score":249,"level":0},{"x":1455,"y":435,"score":46,"level":0},{"x":386,"y":436,"score":257,"level":0},{"x":431,"y":436,"score":74,"level":0},{"x":437,"y":436,"score":65,"level":0},{"x":478,"y":436,"score":38,"level":0},{"x":519,"y":436,"score":110,"level":0},{"x":558,"y":436,"score":123,"level":0},{"x":624,"y":436,"score":28,"level":0},{"x":634,"y":436,"score":56,"level":0},{"x":697,"y":436,"score":109,"level":0},{"x":749,"y":436,"score":112,"level":0},{"x":754,"y":436,"score":60,"level":0},{"x":841,"y":436,"score":61,"level":0},{"x":877,"y":436,"score":45,"level":0},{"x":884,"y":436,"score":65,"level":0},{"x":906,"y":436,"score":126,"level":0},{"x":958,"y":436,"score":163,"level":0},{"x":989,"y":436,"score":60,"level":0},{"x":1007,"y":436,"score":137,"level":0},{"x":1096,"y":436,"score":60,"level":0},{"x":1320,"y":436,"score":130,"level":0},{"x":1362,"y":436,"score":30,"level":0},{"x":1377,"y":436,"score":30,"level":0},{"x":1460,"y":436,"score":31,"level":0},{"x":1480,"y":436,"score":49,"level":0},{"x":718,"y":437,"score":52,"level":0},{"x":891,"y":437,"score":44,"level":0},{"x":935,"y":437,"score":56,"level":0},{"x":951,"y":437,"score":33,"level":0},{"x":963,"y":437,"score":92,"level":0},{"x":1039,"y":437,"score":70,"level":0},{"x":1060,"y":437,"score":119,"level":0},{"x":1072,"y":437,"score":82,"level":0},{"x":1174,"y":437,"score":38,"level":0},{"x":1179,"y":437,"score":72,"level":0},{"x":1312,"y":437,"score":56,"level":0},{"x":1466,"y":437,"score":34,"level":0},{"x":399,"y":438,"score":46,"level":0},{"x":411,"y":438,"score":56,"level":0},{"x":436,"y":438,"score":30,"level":0},{"x":464,"y":438,"score":81,"level":0},{"x":513,"y":438,"score":27,"level":0},{"x":528,"y":438,"score":33,"level":0},{"x":635,"y":438,"score":55,"level":0},{"x":641,"y":438,"score":43,"level":0},{"x":740,"y":438,"score":43,"level":0},{"x":921,"y":438,"score":66,"level":0},{"x":939,"y":438,"score":132,"level":0},{"x":997,"y":438,"score":70,"level":0},{"x":1012,"y":438,"score":39,"level":0},{"x":1043,"y":438,"score":34,"level":0},{"x":1068,"y":438,"score":32,"level":0},{"x":1142,"y":438,"score":86,"level":0},{"x":1164,"y":438,"score":40,"level":0},{"x":1184,"y":438,"score":147,"level":0},{"x":1195,"y":438,"score":42,"level":0},{"x":1211,"y":438,"score":36,"level":0},{"x":1317,"y":438,"score":41,"level":0},{"x":1326,"y":438,"score":31,"level":0},{"x":1442,"y":438,"score":30,"level":0},{"x":377,"y":439,"score":38,"level":0},{"x":394,"y":439,"score":70,"level":0},{"x":416,"y":439,"score":45,"level":0},{"x":459,"y":439,"score":145,"level":0},{"x":483,"y":439,"score":93,"level":0},{"x":502,"y":439,"score":74,"level":0},{"x":516,"y":439,"score":78,"level":0},{"x":565,"y":439,"score":56,"level":0},{"x":629,"y":439,"score":27,"level":0},{"x":674,"y":439,"score":89,"level":0},{"x":679,"y":439,"score":113,"level":0},{"x":705,"y":439,"score":46,"level":0},{"x":728,"y":439,"score":36,"level":0},{"x":735,"y":439,"score":105,"level":0},{"x":807,"y":439,"score":56,"level":0},{"x":876,"y":439,"score":77,"level":0},{"x":988,"y":439,"score":47,"level":0},{"x":1048,"y":439,"score":88,"level":0},{"x":1078,"y":439,"score":37,"level":0},{"x":1093,"y":439,"score":62,"level":0},{"x":1122,"y":439,"score":44,"level":0},{"x":1218,"y":439,"score":162,"level":0},{"x":1228,"y":439,"score":69,"level":0},{"x":1257,"y":439,"score":59,"level":0},{"x":1269,"y":439,"score":44,"level":0},{"x":1331,"y":439,"score":57,"level":0},{"x":1439,"y":439,"score":50,"level":0},{"x":489,"y":440,"score":35,"level":0},{"x":494,"y":440,"score":47,"level":0},{"x":600,"y":440,"score":29,"level":0},{"x":707,"y":440,"score":45,"level":0},{"x":717,"y":440,"score":76,"level":0},{"x":852,"y":440,"score":72,"level":0},{"x":895,"y":440,"score":30,"level":0},{"x":1088,"y":440,"score":91,"level":0},{"x":1226,"y":440,"score":32,"level":0},{"x":1322,"y":440,"score":43,"level":0},{"x":1449,"y":440,"score":63,"level":0},{"x":497,"y":441,"score":54,"level":0},{"x":509,"y":441,"score":34,"level":0},{"x":557,"y":441,"score":180,"level":0},{"x":565,"y":441,"score":51,"level":0},{"x":829,"y":441,"score":56,"level":0},{"x":912,"y":441,"score":77,"level":0},{"x":918,"y":441,"score":53,"level":0},{"x":946,"y":441,"score":117,"level":0},{"x":966,"y":441,"score":69,"level":0},{"x":1005,"y":441,"score":70,"level":0},{"x":1048,"y":441,"score":67,"level":0},{"x":1058,"y":441,"score":60,"level":0},{"x":1077,"y":441,"score":45,"level":0},{"x":1134,"y":441,"score":32,"level":0},{"x":1144,"y":441,"score":63,"level":0},{"x":1269,"y":441,"score":26,"level":0},{"x":1432,"y":441,"score":60,"level":0},{"x":383,"y":442,"score":60,"level":0},{"x":471,"y":442,"score":75,"level":0},{"x":621,"y":442,"score":49,"level":0},{"x":623,"y":442,"score":74,"level":0},{"x":649,"y":442,"score":39,"level":0},{"x":737,"y":442,"score":141,"level":0},{"x":834,"y":442,"score":90,"level":0},{"x":891,"y":442,"score":53,"level":0},{"x":924,"y":442,"score":180,"level":0},{"x":943,"y":442,"score":42,"level":0},{"x":957,"y":442,"score":70,"level":0},{"x":972,"y":442,"score":83,"level":0},{"x":979,"y":442,"score":112,"level":0},{"x":988,"y":442,"score":37,"level":0},{"x":1053,"y":442,"score":44,"level":0},{"x":1073,"y":442,"score":32,"level":0},{"x":1091,"y":442,"score":77,"level":0},{"x":1124,"y":442,"score":92,"level":0},{"x":1150,"y":442,"score":26,"level":0},{"x":1201,"y":442,"score":48,"level":0},{"x":1242,"y":442,"score":75,"level":0},{"x":1247,"y":442,"score":102,"level":0},{"x":1254,"y":442,"score":42,"level":0},{"x":1263,"y":442,"score":92,"level":0},{"x":1338,"y":442,"score":34,"level":0},{"x":1343,"y":442,"score":27,"level":0},{"x":1425,"y":442,"score":149,"level":0},{"x":1488,"y":442,"score":62,"level":0},{"x":410,"y":443,"score":40,"level":0},{"x":500,"y":443,"score":55,"level":0},{"x":512,"y":443,"score":33,"level":0},{"x":547,"y":443,"score":71,"level":0},{"x":561,"y":443,"score":43,"level":0},{"x":637,"y":443,"score":32,"level":0},{"x":1035,"y":443,"score":108,"level":0},{"x":1129,"y":443,"score":108,"level":0},{"x":1190,"y":443,"score":91,"level":0},{"x":1195,"y":443,"score":160,"level":0},{"x":1224,"y":443,"score":38,"level":0},{"x":1384,"y":443,"score":129,"level":0},{"x":1436,"y":443,"score":88,"level":0},{"x":1480,"y":443,"score":48,"level":0},{"x":419,"y":444,"score":42,"level":0},{"x":615,"y":444,"score":40,"level":0},{"x":694,"y":444,"score":26,"level":0},{"x":732,"y":444,"score":43,"level":0},{"x":939,"y":444,"score":56,"level":0},{"x":954,"y":444,"score":91,"level":0},{"x":1045,"y":444,"score":44,"level":0},{"x":1076,"y":444,"score":45,"level":0},{"x":1080,"y":444,"score":44,"level":0},{"x":1104,"y":444,"score":50,"level":0},{"x":1112,"y":444,"score":112,"level":0},{"x":1162,"y":444,"score":63,"level":0},{"x":1264,"y":444,"score":80,"level":0},{"x":1298,"y":444,"score":138,"level":0},{"x":1335,"y":444,"score":32,"level":0},{"x":1348,"y":444,"score":44,"level":0},{"x":1375,"y":444,"score":63,"level":0},{"x":1417,"y":444,"score":40,"level":0},{"x":1464,"y":444,"score":66,"level":0},{"x":1477,"y":444,"score":36,"level":0},{"x":489,"y":445,"score":97,"level":0},{"x":494,"y":445,"score":188,"level":0},{"x":566,"y":445,"score":30,"level":0},{"x":571,"y":445,"score":96,"level":0},{"x":600,"y":445,"score":226,"level":0},{"x":606,"y":445,"score":84,"level":0},{"x":686,"y":445,"score":67,"level":0},{"x":702,"y":445,"score":58,"level":0},{"x":850,"y":445,"score":36,"level":0},{"x":910,"y":445,"score":28,"level":0},{"x":914,"y":445,"score":66,"level":0},{"x":1095,"y":445,"score":50,"level":0},{"x":1150,"y":445,"score":67,"level":0},{"x":1154,"y":445,"score":85,"level":0},{"x":1185,"y":445,"score":72,"level":0},{"x":1255,"y":445,"score":29,"level":0},{"x":1365,"y":445,"score":32,"level":0},{"x":1444,"y":445,"score":43,"level":0},{"x":388,"y":446,"score":27,"level":0},{"x":394,"y":446,"score":70,"level":0},{"x":430,"y":446,"score":95,"level":0},{"x":519,"y":446,"score":61,"level":0},{"x":573,"y":446,"score":78,"level":0},{"x":632,"y":446,"score":45,"level":0},{"x":639,"y":446,"score":76,"level":0},{"x":676,"y":446,"score":51,"level":0},{"x":681,"y":446,"score":93,"level":0},{"x":829,"y":446,"score":108,"level":0},{"x":881,"y":446,"score":39,"level":0},{"x":962,"y":446,"score":62,"level":0},{"x":1011,"y":446,"score":64,"level":0},{"x":1016,"y":446,"score":161,"level":0},{"x":1217,"y":446,"score":123,"level":0},{"x":1294,"y":446,"score":51,"level":0},{"x":1334,"y":446,"score":49,"level":0},{"x":1459,"y":446,"score":32,"level":0},{"x":377,"y":447,"score":62,"level":0},{"x":460,"y":447,"score":266,"level":0},{"x":465,"y":447,"score":96,"level":0},{"x":554,"y":447,"score":94,"level":0},{"x":648,"y":447,"score":36,"level":0},{"x":650,"y":447,"score":60,"level":0},{"x":698,"y":447,"score":52,"level":0},{"x":713,"y":447,"score":81,"level":0},{"x":739,"y":447,"score":72,"level":0},{"x":863,"y":447,"score":104,"level":0},{"x":898,"y":447,"score":140,"level":0},{"x":904,"y":447,"score":30,"level":0},{"x":922,"y":447,"score":75,"level":0},{"x":945,"y":447,"score":45,"level":0},{"x":971,"y":447,"score":36,"level":0},{"x":986,"y":447,"score":76,"level":0},{"x":995,"y":447,"score":100,"level":0},{"x":1021,"y":447,"score":63,"level":0},{"x":1051,"y":447,"score":44,"level":0},{"x":1055,"y":447,"score":53,"level":0},{"x":1067,"y":447,"score":88,"level":0},{"x":1170,"y":447,"score":82,"level":0},{"x":1202,"y":447,"score":32,"level":0},{"x":1257,"y":447,"score":66,"level":0},{"x":1311,"y":447,"score":34,"level":0},{"x":1404,"y":447,"score":33,"level":0},{"x":1446,"y":447,"score":74,"level":0},{"x":506,"y":448,"score":87,"level":0},{"x":677,"y":448,"score":38,"level":0},{"x":732,"y":448,"score":87,"level":0},{"x":888,"y":448,"score":69,"level":0},{"x":977,"y":448,"score":62,"level":0},{"x":1110,"y":448,"score":64,"level":0},{"x":1127,"y":448,"score":42,"level":0},{"x":1143,"y":448,"score":98,"level":0},{"x":1305,"y":448,"score":36,"level":0},{"x":1322,"y":448,"score":83,"level":0},{"x":1377,"y":448,"score":49,"level":0},{"x":1420,"y":448,"score":52,"level":0},{"x":1429,"y":448,"score":27,"level":0},{"x":1468,"y":448,"score":30,"level":0},{"x":377,"y":449,"score":83,"level":0},{"x":533,"y":449,"score":44,"level":0},{"x":553,"y":449,"score":68,"level":0},{"x":743,"y":449,"score":35,"level":0},{"x":753,"y":449,"score":31,"level":0},{"x":793,"y":449,"score":34,"level":0},{"x":874,"y":449,"score":48,"level":0},{"x":891,"y":449,"score":56,"level":0},{"x":913,"y":449,"score":89,"level":0},{"x":1003,"y":449,"score":29,"level":0},{"x":1050,"y":449,"score":27,"level":0},{"x":1076,"y":449,"score":118,"level":0},{"x":1086,"y":449,"score":27,"level":0},{"x":1180,"y":449,"score":101,"level":0},{"x":1260,"y":449,"score":37,"level":0},{"x":1269,"y":449,"score":96,"level":0},{"x":1299,"y":449,"score":92,"level":0},{"x":1310,"y":449,"score":47,"level":0},{"x":1357,"y":449,"score":119,"level":0},{"x":1368,"y":449,"score":172,"level":0},{"x":1480,"y":449,"score":42,"level":0},{"x":418,"y":450,"score":80,"level":0},{"x":498,"y":450,"score":69,"level":0},{"x":558,"y":450,"score":33,"level":0},{"x":646,"y":450,"score":33,"level":0},{"x":648,"y":450,"score":28,"level":0},{"x":737,"y":450,"score":54,"level":0},{"x":778,"y":450,"score":134,"level":0},{"x":945,"y":450,"score":55,"level":0},{"x":988,"y":450,"score":69,"level":0},{"x":1079,"y":450,"score":67,"level":0},{"x":1100,"y":450,"score":85,"level":0},{"x":1238,"y":450,"score":35,"level":0},{"x":1338,"y":450,"score":120,"level":0},{"x":1438,"y":450,"score":156,"level":0},{"x":1453,"y":450,"score":123,"level":0},{"x":1456,"y":450,"score":90,"level":0},{"x":1472,"y":450,"score":50,"level":0},{"x":1483,"y":450,"score":44,"level":0},{"x":396,"y":451,"score":27,"level":0},{"x":474,"y":451,"score":204,"level":0},{"x":484,"y":451,"score":178,"level":0},{"x":500,"y":451,"score":39,"level":0},{"x":561,"y":451,"score":72,"level":0},{"x":567,"y":451,"score":42,"level":0},{"x":656,"y":451,"score":29,"level":0},{"x":660,"y":451,"score":35,"level":0},{"x":674,"y":451,"score":41,"level":0},{"x":710,"y":451,"score":102,"level":0},{"x":745,"y":451,"score":36,"level":0},{"x":839,"y":451,"score":28,"level":0},{"x":881,"y":451,"score":28,"level":0},{"x":893,"y":451,"score":70,"level":0},{"x":934,"y":451,"score":45,"level":0},{"x":961,"y":451,"score":89,"level":0},{"x":980,"y":451,"score":32,"level":0},{"x":1010,"y":451,"score":61,"level":0},{"x":1015,"y":451,"score":69,"level":0},{"x":1019,"y":451,"score":52,"level":0},{"x":1103,"y":451,"score":74,"level":0},{"x":1148,"y":451,"score":114,"level":0},{"x":1156,"y":451,"score":212,"level":0},{"x":1169,"y":451,"score":89,"level":0},{"x":1269,"y":451,"score":108,"level":0},{"x":1351,"y":451,"score":29,"level":0},{"x":1432,"y":451,"score":59,"level":0},{"x":398,"y":452,"score":45,"level":0},{"x":423,"y":452,"score":50,"level":0},{"x":429,"y":452,"score":28,"level":0},{"x":648,"y":452,"score":42,"level":0},{"x":664,"y":452,"score":55,"level":0},{"x":684,"y":452,"score":85,"level":0},{"x":834,"y":452,"score":59,"level":0},{"x":899,"y":452,"score":44,"level":0},{"x":903,"y":452,"score":72,"level":0},{"x":994,"y":452,"score":70,"level":0},{"x":999,"y":452,"score":77,"level":0},{"x":1004,"y":452,"score":31,"level":0},{"x":1083,"y":452,"score":44,"level":0},{"x":1114,"y":452,"score":44,"level":0},{"x":1197,"y":452,"score":112,"level":0},{"x":1362,"y":452,"score":70,"level":0},{"x":1448,"y":452,"score":34,"level":0},{"x":394,"y":453,"score":47,"level":0},{"x":493,"y":453,"score":85,"level":0},{"x":718,"y":453,"score":30,"level":0},{"x":734,"y":453,"score":29,"level":0},{"x":888,"y":453,"score":100,"level":0},{"x":896,"y":453,"score":76,"level":0},{"x":922,"y":453,"score":179,"level":0},{"x":985,"y":453,"score":38,"level":0},{"x":1096,"y":453,"score":45,"level":0},{"x":1141,"y":453,"score":63,"level":0},{"x":1354,"y":453,"score":52,"level":0},{"x":1372,"y":453,"score":32,"level":0},{"x":1389,"y":453,"score":61,"level":0},{"x":489,"y":454,"score":58,"level":0},{"x":505,"y":454,"score":34,"level":0},{"x":553,"y":454,"score":68,"level":0},{"x":559,"y":454,"score":49,"level":0},{"x":609,"y":454,"score":26,"level":0},{"x":705,"y":454,"score":91,"level":0},{"x":727,"y":454,"score":61,"level":0},{"x":750,"y":454,"score":165,"level":0},{"x":890,"y":454,"score":85,"level":0},{"x":1017,"y":454,"score":114,"level":0},{"x":1055,"y":454,"score":81,"level":0},{"x":1109,"y":454,"score":49,"level":0},{"x":1118,"y":454,"score":38,"level":0},{"x":1123,"y":454,"score":43,"level":0},{"x":1242,"y":454,"score":123,"level":0},{"x":1260,"y":454,"score":123,"level":0},{"x":1427,"y":454,"score":106,"level":0},{"x":575,"y":455,"score":116,"level":0},{"x":642,"y":455,"score":59,"level":0},{"x":864,"y":455,"score":73,"level":0},{"x":905,"y":455,"score":71,"level":0},{"x":946,"y":455,"score":99,"level":0},{"x":974,"y":455,"score":65,"level":0},{"x":1043,"y":455,"score":134,"level":0},{"x":1077,"y":455,"score":62,"level":0},{"x":1090,"y":455,"score":87,"level":0},{"x":1202,"y":455,"score":32,"level":0},{"x":1379,"y":455,"score":35,"level":0},{"x":1384,"y":455,"score":29,"level":0},{"x":1449,"y":455,"score":113,"level":0},{"x":418,"y":456,"score":49,"level":0},{"x":457,"y":456,"score":40,"level":0},{"x":502,"y":456,"score":35,"level":0},{"x":547,"y":456,"score":48,"level":0},{"x":672,"y":456,"score":47,"level":0},{"x":696,"y":456,"score":95,"level":0},{"x":701,"y":456,"score":73,"level":0},{"x":931,"y":456,"score":202,"level":0},{"x":1001,"y":456,"score":70,"level":0},{"x":1085,"y":456,"score":73,"level":0},{"x":1100,"y":456,"score":52,"level":0},{"x":1166,"y":456,"score":30,"level":0},{"x":1381,"y":456,"score":62,"level":0},{"x":1490,"y":456,"score":244,"level":0},{"x":404,"y":457,"score":206,"level":0},{"x":429,"y":457,"score":88,"level":0},{"x":462,"y":457,"score":145,"level":0},{"x":468,"y":457,"score":52,"level":0},{"x":471,"y":457,"score":86,"level":0},{"x":601,"y":457,"score":56,"level":0},{"x":693,"y":457,"score":51,"level":0},{"x":900,"y":457,"score":122,"level":0},{"x":937,"y":457,"score":52,"level":0},{"x":1004,"y":457,"score":48,"level":0},{"x":1154,"y":457,"score":90,"level":0},{"x":1173,"y":457,"score":29,"level":0},{"x":1187,"y":457,"score":102,"level":0},{"x":1247,"y":457,"score":76,"level":0},{"x":1254,"y":457,"score":40,"level":0},{"x":1423,"y":457,"score":64,"level":0},{"x":424,"y":458,"score":77,"level":0},{"x":487,"y":458,"score":40,"level":0},{"x":725,"y":458,"score":80,"level":0},{"x":875,"y":458,"score":49,"level":0},{"x":905,"y":458,"score":47,"level":0},{"x":954,"y":458,"score":76,"level":0},{"x":979,"y":458,"score":116,"level":0},{"x":1111,"y":458,"score":61,"level":0},{"x":1134,"y":458,"score":29,"level":0},{"x":1161,"y":458,"score":61,"level":0},{"x":1167,"y":458,"score":29,"level":0},{"x":1229,"y":458,"score":138,"level":0},{"x":1306,"y":458,"score":45,"level":0},{"x":1312,"y":458,"score":103,"level":0},{"x":1317,"y":458,"score":115,"level":0},{"x":1337,"y":458,"score":36,"level":0},{"x":1342,"y":458,"score":90,"level":0},{"x":1463,"y":458,"score":30,"level":0},{"x":1468,"y":458,"score":33,"level":0},{"x":377,"y":459,"score":131,"level":0},{"x":436,"y":459,"score":112,"level":0},{"x":649,"y":459,"score":33,"level":0},{"x":654,"y":459,"score":42,"level":0},{"x":668,"y":459,"score":115,"level":0},{"x":768,"y":459,"score":159,"level":0},{"x":783,"y":459,"score":39,"level":0},{"x":877,"y":459,"score":69,"level":0},{"x":925,"y":459,"score":138,"level":0},{"x":959,"y":459,"score":28,"level":0},{"x":973,"y":459,"score":57,"level":0},{"x":1052,"y":459,"score":27,"level":0},{"x":1069,"y":459,"score":169,"level":0},{"x":1081,"y":459,"score":33,"level":0},{"x":1108,"y":459,"score":97,"level":0},{"x":1123,"y":459,"score":43,"level":0},{"x":1131,"y":459,"score":37,"level":0},{"x":1154,"y":459,"score":162,"level":0},{"x":1260,"y":459,"score":47,"level":0},{"x":1332,"y":459,"score":106,"level":0},{"x":1371,"y":459,"score":55,"level":0},{"x":1485,"y":459,"score":29,"level":0},{"x":441,"y":460,"score":35,"level":0},{"x":660,"y":460,"score":84,"level":0},{"x":685,"y":460,"score":62,"level":0},{"x":733,"y":460,"score":111,"level":0},{"x":752,"y":460,"score":27,"level":0},{"x":918,"y":460,"score":132,"level":0},{"x":941,"y":460,"score":146,"level":0},{"x":947,"y":460,"score":41,"level":0},{"x":1013,"y":460,"score":26,"level":0},{"x":1084,"y":460,"score":43,"level":0},{"x":1144,"y":460,"score":30,"level":0},{"x":1171,"y":460,"score":45,"level":0},{"x":1223,"y":460,"score":149,"level":0},{"x":1359,"y":460,"score":26,"level":0},{"x":1463,"y":460,"score":60,"level":0},{"x":422,"y":461,"score":34,"level":0},{"x":643,"y":461,"score":162,"level":0},{"x":665,"y":461,"score":123,"level":0},{"x":709,"y":461,"score":62,"level":0},{"x":720,"y":461,"score":42,"level":0},{"x":878,"y":461,"score":38,"level":0},{"x":911,"y":461,"score":54,"level":0},{"x":963,"y":461,"score":48,"level":0},{"x":1040,"y":461,"score":69,"level":0},{"x":1062,"y":461,"score":42,"level":0},{"x":1242,"y":461,"score":67,"level":0},{"x":1255,"y":461,"score":43,"level":0},{"x":1379,"y":461,"score":42,"level":0},{"x":1384,"y":461,"score":27,"level":0},{"x":1450,"y":461,"score":127,"level":0},{"x":1455,"y":461,"score":248,"level":0},{"x":1475,"y":461,"score":28,"level":0},{"x":450,"y":462,"score":29,"level":0},{"x":467,"y":462,"score":175,"level":0},{"x":474,"y":462,"score":33,"level":0},{"x":627,"y":462,"score":76,"level":0},{"x":681,"y":462,"score":110,"level":0},{"x":690,"y":462,"score":156,"level":0},{"x":728,"y":462,"score":107,"level":0},{"x":779,"y":462,"score":66,"level":0},{"x":829,"y":462,"score":34,"level":0},{"x":935,"y":462,"score":106,"level":0},{"x":997,"y":462,"score":81,"level":0},{"x":1022,"y":462,"score":28,"level":0},{"x":1056,"y":462,"score":33,"level":0},{"x":1090,"y":462,"score":92,"level":0},{"x":1101,"y":462,"score":27,"level":0},{"x":1137,"y":462,"score":28,"level":0},{"x":1197,"y":462,"score":172,"level":0},{"x":1246,"y":462,"score":50,"level":0},{"x":1248,"y":462,"score":30,"level":0},{"x":1269,"y":462,"score":46,"level":0},{"x":1325,"y":462,"score":49,"level":0},{"x":1330,"y":462,"score":80,"level":0},{"x":1345,"y":462,"score":34,"level":0},{"x":1352,"y":462,"score":43,"level":0},{"x":1436,"y":462,"score":161,"level":0},{"x":1490,"y":462,"score":33,"level":0},{"x":391,"y":463,"score":55,"level":0},{"x":458,"y":463,"score":33,"level":0},{"x":485,"y":463,"score":89,"level":0},{"x":579,"y":463,"score":31,"level":0},{"x":631,"y":463,"score":42,"level":0},{"x":1004,"y":463,"score":120,"level":0},{"x":1035,"y":463,"score":28,"level":0},{"x":1111,"y":463,"score":29,"level":0},{"x":1214,"y":463,"score":51,"level":0},{"x":1222,"y":463,"score":200,"level":0},{"x":1238,"y":463,"score":83,"level":0},{"x":1320,"y":463,"score":69,"level":0},{"x":1424,"y":463,"score":51,"level":0},{"x":421,"y":464,"score":89,"level":0},{"x":592,"y":464,"score":34,"level":0},{"x":598,"y":464,"score":30,"level":0},{"x":746,"y":464,"score":145,"level":0},{"x":781,"y":464,"score":123,"level":0},{"x":871,"y":464,"score":41,"level":0},{"x":904,"y":464,"score":26,"level":0},{"x":915,"y":464,"score":87,"level":0},{"x":982,"y":464,"score":104,"level":0},{"x":1009,"y":464,"score":91,"level":0},{"x":1053,"y":464,"score":93,"level":0},{"x":1066,"y":464,"score":72,"level":0},{"x":1157,"y":464,"score":67,"level":0},{"x":1227,"y":464,"score":144,"level":0},{"x":1261,"y":464,"score":60,"level":0},{"x":1263,"y":464,"score":62,"level":0},{"x":1339,"y":464,"score":100,"level":0},{"x":1383,"y":464,"score":45,"level":0},{"x":1386,"y":464,"score":32,"level":0},{"x":1484,"y":464,"score":111,"level":0},{"x":397,"y":465,"score":37,"level":0},{"x":409,"y":465,"score":96,"level":0},{"x":648,"y":465,"score":62,"level":0},{"x":656,"y":465,"score":42,"level":0},{"x":897,"y":465,"score":115,"level":0},{"x":928,"y":465,"score":52,"level":0},{"x":940,"y":465,"score":43,"level":0},{"x":968,"y":465,"score":35,"level":0},{"x":1017,"y":465,"score":60,"level":0},{"x":1071,"y":465,"score":40,"level":0},{"x":1077,"y":465,"score":54,"level":0},{"x":1126,"y":465,"score":73,"level":0},{"x":1143,"y":465,"score":42,"level":0},{"x":1169,"y":465,"score":180,"level":0},{"x":1185,"y":465,"score":38,"level":0},{"x":1234,"y":465,"score":74,"level":0},{"x":1315,"y":465,"score":102,"level":0},{"x":1362,"y":465,"score":41,"level":0},{"x":420,"y":466,"score":96,"level":0},{"x":429,"y":466,"score":105,"level":0},{"x":477,"y":466,"score":143,"level":0},{"x":506,"y":466,"score":30,"level":0},{"x":626,"y":466,"score":51,"level":0},{"x":665,"y":466,"score":81,"level":0},{"x":672,"y":466,"score":146,"level":0},{"x":720,"y":466,"score":62,"level":0},{"x":840,"y":466,"score":68,"level":0},{"x":862,"y":466,"score":84,"level":0},{"x":950,"y":466,"score":119,"level":0},{"x":964,"y":466,"score":30,"level":0},{"x":1040,"y":466,"score":38,"level":0},{"x":1042,"y":466,"score":41,"level":0},{"x":1069,"y":466,"score":103,"level":0},{"x":1074,"y":466,"score":41,"level":0},{"x":1164,"y":466,"score":44,"level":0},{"x":1179,"y":466,"score":208,"level":0},{"x":1255,"y":466,"score":43,"level":0},{"x":1302,"y":466,"score":65,"level":0},{"x":1307,"y":466,"score":64,"level":0},{"x":1419,"y":466,"score":45,"level":0},{"x":382,"y":467,"score":264,"level":0},{"x":465,"y":467,"score":62,"level":0},{"x":471,"y":467,"score":121,"level":0},{"x":575,"y":467,"score":37,"level":0},{"x":640,"y":467,"score":41,"level":0},{"x":709,"y":467,"score":58,"level":0},{"x":778,"y":467,"score":76,"level":0},{"x":834,"y":467,"score":154,"level":0},{"x":878,"y":467,"score":86,"level":0},{"x":884,"y":467,"score":32,"level":0},{"x":889,"y":467,"score":69,"level":0},{"x":1002,"y":467,"score":29,"level":0},{"x":1005,"y":467,"score":123,"level":0},{"x":1078,"y":467,"score":67,"level":0},{"x":1080,"y":467,"score":36,"level":0},{"x":1101,"y":467,"score":67,"level":0},{"x":1158,"y":467,"score":88,"level":0},{"x":1234,"y":467,"score":78,"level":0},{"x":1317,"y":467,"score":80,"level":0},{"x":1455,"y":467,"score":33,"level":0},{"x":1461,"y":467,"score":53,"level":0},{"x":1487,"y":467,"score":32,"level":0},{"x":377,"y":468,"score":72,"level":0},{"x":488,"y":468,"score":42,"level":0},{"x":570,"y":468,"score":67,"level":0},{"x":688,"y":468,"score":36,"level":0},{"x":700,"y":468,"score":48,"level":0},{"x":724,"y":468,"score":97,"level":0},{"x":733,"y":468,"score":62,"level":0},{"x":738,"y":468,"score":179,"level":0},{"x":862,"y":468,"score":75,"level":0},{"x":1072,"y":468,"score":30,"level":0},{"x":1121,"y":468,"score":84,"level":0},{"x":1144,"y":468,"score":58,"level":0},{"x":1238,"y":468,"score":59,"level":0},{"x":1266,"y":468,"score":42,"level":0},{"x":1358,"y":468,"score":30,"level":0},{"x":1375,"y":468,"score":32,"level":0},{"x":1426,"y":468,"score":105,"level":0},{"x":1434,"y":468,"score":38,"level":0},{"x":1448,"y":468,"score":120,"level":0},{"x":403,"y":469,"score":104,"level":0},{"x":439,"y":469,"score":126,"level":0},{"x":526,"y":469,"score":38,"level":0},{"x":542,"y":469,"score":34,"level":0},{"x":650,"y":469,"score":117,"level":0},{"x":896,"y":469,"score":33,"level":0},{"x":900,"y":469,"score":60,"level":0},{"x":1017,"y":469,"score":36,"level":0},{"x":1114,"y":469,"score":55,"level":0},{"x":1157,"y":469,"score":33,"level":0},{"x":1193,"y":469,"score":77,"level":0},{"x":1221,"y":469,"score":109,"level":0},{"x":1231,"y":469,"score":77,"level":0},{"x":1246,"y":469,"score":37,"level":0},{"x":1340,"y":469,"score":93,"level":0},{"x":1353,"y":469,"score":41,"level":0},{"x":1431,"y":469,"score":47,"level":0},{"x":1484,"y":469,"score":47,"level":0},{"x":393,"y":470,"score":81,"level":0},{"x":423,"y":470,"score":31,"level":0},{"x":441,"y":470,"score":74,"level":0},{"x":460,"y":470,"score":95,"level":0},{"x":514,"y":470,"score":77,"level":0},{"x":565,"y":470,"score":31,"level":0},{"x":622,"y":470,"score":51,"level":0},{"x":660,"y":470,"score":61,"level":0},{"x":666,"y":470,"score":31,"level":0},{"x":678,"y":470,"score":40,"level":0},{"x":715,"y":470,"score":111,"level":0},{"x":731,"y":470,"score":28,"level":0},{"x":831,"y":470,"score":215,"level":0},{"x":865,"y":470,"score":89,"level":0},{"x":871,"y":470,"score":144,"level":0},{"x":985,"y":470,"score":141,"level":0},{"x":1077,"y":470,"score":45,"level":0},{"x":1104,"y":470,"score":26,"level":0},{"x":1167,"y":470,"score":46,"level":0},{"x":1312,"y":470,"score":121,"level":0},{"x":427,"y":471,"score":39,"level":0},{"x":475,"y":471,"score":138,"level":0},{"x":506,"y":471,"score":132,"level":0},{"x":626,"y":471,"score":49,"level":0},{"x":750,"y":471,"score":178,"level":0},{"x":910,"y":471,"score":33,"level":0},{"x":937,"y":471,"score":38,"level":0},{"x":957,"y":471,"score":195,"level":0},{"x":996,"y":471,"score":108,"level":0},{"x":1008,"y":471,"score":109,"level":0},{"x":1041,"y":471,"score":62,"level":0},{"x":1062,"y":471,"score":56,"level":0},{"x":1096,"y":471,"score":107,"level":0},{"x":1249,"y":471,"score":70,"level":0},{"x":431,"y":472,"score":72,"level":0},{"x":481,"y":472,"score":48,"level":0},{"x":486,"y":472,"score":48,"level":0},{"x":498,"y":472,"score":26,"level":0},{"x":512,"y":472,"score":58,"level":0},{"x":535,"y":472,"score":34,"level":0},{"x":542,"y":472,"score":29,"level":0},{"x":629,"y":472,"score":40,"level":0},{"x":633,"y":472,"score":36,"level":0},{"x":917,"y":472,"score":103,"level":0},{"x":930,"y":472,"score":107,"level":0},{"x":950,"y":472,"score":51,"level":0},{"x":991,"y":472,"score":54,"level":0},{"x":1017,"y":472,"score":52,"level":0},{"x":1159,"y":472,"score":148,"level":0},{"x":1220,"y":472,"score":52,"level":0},{"x":1243,"y":472,"score":28,"level":0},{"x":1328,"y":472,"score":70,"level":0},{"x":1379,"y":472,"score":26,"level":0},{"x":1434,"y":472,"score":123,"level":0},{"x":1454,"y":472,"score":63,"level":0},{"x":1467,"y":472,"score":29,"level":0},{"x":645,"y":473,"score":99,"level":0},{"x":680,"y":473,"score":38,"level":0},{"x":700,"y":473,"score":44,"level":0},{"x":723,"y":473,"score":118,"level":0},{"x":732,"y":473,"score":41,"level":0},{"x":743,"y":473,"score":136,"level":0},{"x":837,"y":473,"score":30,"level":0},{"x":878,"y":473,"score":39,"level":0},{"x":883,"y":473,"score":32,"level":0},{"x":893,"y":473,"score":78,"level":0},{"x":944,"y":473,"score":78,"level":0},{"x":1080,"y":473,"score":28,"level":0},{"x":1140,"y":473,"score":55,"level":0},{"x":1154,"y":473,"score":162,"level":0},{"x":1173,"y":473,"score":84,"level":0},{"x":1262,"y":473,"score":73,"level":0},{"x":1333,"y":473,"score":39,"level":0},{"x":383,"y":474,"score":86,"level":0},{"x":403,"y":474,"score":46,"level":0},{"x":409,"y":474,"score":61,"level":0},{"x":414,"y":474,"score":34,"level":0},{"x":468,"y":474,"score":38,"level":0},{"x":695,"y":474,"score":70,"level":0},{"x":921,"y":474,"score":73,"level":0},{"x":973,"y":474,"score":230,"level":0},{"x":1038,"y":474,"score":111,"level":0},{"x":1052,"y":474,"score":49,"level":0},{"x":1066,"y":474,"score":56,"level":0},{"x":1068,"y":474,"score":36,"level":0},{"x":1071,"y":474,"score":38,"level":0},{"x":1075,"y":474,"score":136,"level":0},{"x":1091,"y":474,"score":59,"level":0},{"x":1127,"y":474,"score":63,"level":0},{"x":1133,"y":474,"score":218,"level":0},{"x":1160,"y":474,"score":96,"level":0},{"x":1191,"y":474,"score":29,"level":0},{"x":1203,"y":474,"score":252,"level":0},{"x":1230,"y":474,"score":68,"level":0},{"x":1275,"y":474,"score":114,"level":0},{"x":394,"y":475,"score":48,"level":0},{"x":419,"y":475,"score":132,"level":0},{"x":492,"y":475,"score":33,"level":0},{"x":539,"y":475,"score":74,"level":0},{"x":638,"y":475,"score":62,"level":0},{"x":837,"y":475,"score":49,"level":0},{"x":863,"y":475,"score":129,"level":0},{"x":871,"y":475,"score":36,"level":0},{"x":873,"y":475,"score":63,"level":0},{"x":938,"y":475,"score":64,"level":0},{"x":962,"y":475,"score":63,"level":0},{"x":968,"y":475,"score":71,"level":0},{"x":1197,"y":475,"score":78,"level":0},{"x":1269,"y":475,"score":60,"level":0},{"x":1440,"y":475,"score":102,"level":0},{"x":1449,"y":475,"score":138,"level":0},{"x":1457,"y":475,"score":60,"level":0},{"x":424,"y":476,"score":120,"level":0},{"x":467,"y":476,"score":48,"level":0},{"x":647,"y":476,"score":36,"level":0},{"x":672,"y":476,"score":94,"level":0},{"x":677,"y":476,"score":102,"level":0},{"x":707,"y":476,"score":198,"level":0},{"x":882,"y":476,"score":66,"level":0},{"x":979,"y":476,"score":177,"level":0},{"x":1001,"y":476,"score":127,"level":0},{"x":1043,"y":476,"score":26,"level":0},{"x":1115,"y":476,"score":27,"level":0},{"x":1122,"y":476,"score":102,"level":0},{"x":1239,"y":476,"score":110,"level":0},{"x":1311,"y":476,"score":61,"level":0},{"x":1319,"y":476,"score":80,"level":0},{"x":1460,"y":476,"score":72,"level":0},{"x":414,"y":477,"score":85,"level":0},{"x":475,"y":477,"score":33,"level":0},{"x":511,"y":477,"score":26,"level":0},{"x":528,"y":477,"score":68,"level":0},{"x":550,"y":477,"score":93,"level":0},{"x":556,"y":477,"score":44,"level":0},{"x":605,"y":477,"score":28,"level":0},{"x":633,"y":477,"score":67,"level":0},{"x":925,"y":477,"score":70,"level":0},{"x":943,"y":477,"score":112,"level":0},{"x":1010,"y":477,"score":80,"level":0},{"x":1015,"y":477,"score":30,"level":0},{"x":1049,"y":477,"score":40,"level":0},{"x":1065,"y":477,"score":50,"level":0},{"x":1101,"y":477,"score":35,"level":0},{"x":1106,"y":477,"score":26,"level":0},{"x":1165,"y":477,"score":47,"level":0},{"x":1241,"y":477,"score":90,"level":0},{"x":1352,"y":477,"score":52,"level":0},{"x":1364,"y":477,"score":44,"level":0},{"x":1377,"y":477,"score":38,"level":0},{"x":1443,"y":477,"score":105,"level":0},{"x":377,"y":478,"score":94,"level":0},{"x":431,"y":478,"score":73,"level":0},{"x":436,"y":478,"score":77,"level":0},{"x":464,"y":478,"score":40,"level":0},{"x":535,"y":478,"score":79,"level":0},{"x":638,"y":478,"score":94,"level":0},{"x":678,"y":478,"score":137,"level":0},{"x":713,"y":478,"score":68,"level":0},{"x":735,"y":478,"score":92,"level":0},{"x":746,"y":478,"score":97,"level":0},{"x":861,"y":478,"score":33,"level":0},{"x":920,"y":478,"score":33,"level":0},{"x":934,"y":478,"score":74,"level":0},{"x":959,"y":478,"score":53,"level":0},{"x":1019,"y":478,"score":28,"level":0},{"x":1021,"y":478,"score":30,"level":0},{"x":1080,"y":478,"score":167,"level":0},{"x":1369,"y":478,"score":30,"level":0},{"x":1380,"y":478,"score":57,"level":0},{"x":1430,"y":478,"score":80,"level":0},{"x":1434,"y":478,"score":114,"level":0},{"x":1439,"y":478,"score":98,"level":0},{"x":403,"y":479,"score":68,"level":0},{"x":459,"y":479,"score":76,"level":0},{"x":508,"y":479,"score":69,"level":0},{"x":574,"y":479,"score":42,"level":0},{"x":624,"y":479,"score":44,"level":0},{"x":627,"y":479,"score":34,"level":0},{"x":668,"y":479,"score":41,"level":0},{"x":877,"y":479,"score":42,"level":0},{"x":914,"y":479,"score":102,"level":0},{"x":1054,"y":479,"score":128,"level":0},{"x":1075,"y":479,"score":267,"level":0},{"x":1088,"y":479,"score":68,"level":0},{"x":1094,"y":479,"score":142,"level":0},{"x":1144,"y":479,"score":64,"level":0},{"x":1154,"y":479,"score":34,"level":0},{"x":1158,"y":479,"score":106,"level":0},{"x":1226,"y":479,"score":120,"level":0},{"x":1263,"y":479,"score":43,"level":0},{"x":1291,"y":479,"score":29,"level":0},{"x":1382,"y":479,"score":67,"level":0},{"x":415,"y":480,"score":73,"level":0},{"x":495,"y":480,"score":113,"level":0},{"x":567,"y":480,"score":87,"level":0},{"x":632,"y":480,"score":35,"level":0},{"x":646,"y":480,"score":39,"level":0},{"x":695,"y":480,"score":147,"level":0},{"x":725,"y":480,"score":59,"level":0},{"x":892,"y":480,"score":56,"level":0},{"x":938,"y":480,"score":66,"level":0},{"x":955,"y":480,"score":58,"level":0},{"x":1003,"y":480,"score":40,"level":0},{"x":1181,"y":480,"score":95,"level":0},{"x":1190,"y":480,"score":100,"level":0},{"x":1202,"y":480,"score":115,"level":0},{"x":1209,"y":480,"score":137,"level":0},{"x":1214,"y":480,"score":75,"level":0},{"x":1270,"y":480,"score":54,"level":0},{"x":1314,"y":480,"score":53,"level":0},{"x":503,"y":481,"score":74,"level":0},{"x":542,"y":481,"score":55,"level":0},{"x":690,"y":481,"score":67,"level":0},{"x":741,"y":481,"score":72,"level":0},{"x":835,"y":481,"score":111,"level":0},{"x":870,"y":481,"score":56,"level":0},{"x":880,"y":481,"score":40,"level":0},{"x":886,"y":481,"score":76,"level":0},{"x":899,"y":481,"score":48,"level":0},{"x":949,"y":481,"score":27,"level":0},{"x":965,"y":481,"score":131,"level":0},{"x":1013,"y":481,"score":75,"level":0},{"x":1032,"y":481,"score":31,"level":0},{"x":1037,"y":481,"score":36,"level":0},{"x":1043,"y":481,"score":107,"level":0},{"x":1239,"y":481,"score":41,"level":0},{"x":1251,"y":481,"score":60,"level":0},{"x":1340,"y":481,"score":28,"level":0},{"x":1418,"y":481,"score":105,"level":0},{"x":377,"y":482,"score":70,"level":0},{"x":462,"y":482,"score":56,"level":0},{"x":472,"y":482,"score":87,"level":0},{"x":485,"y":482,"score":73,"level":0},{"x":532,"y":482,"score":29,"level":0},{"x":550,"y":482,"score":33,"level":0},{"x":557,"y":482,"score":83,"level":0},{"x":687,"y":482,"score":172,"level":0},{"x":700,"y":482,"score":35,"level":0},{"x":705,"y":482,"score":67,"level":0},{"x":744,"y":482,"score":35,"level":0},{"x":1018,"y":482,"score":42,"level":0},{"x":1057,"y":482,"score":87,"level":0},{"x":1083,"y":482,"score":33,"level":0},{"x":1114,"y":482,"score":189,"level":0},{"x":1130,"y":482,"score":32,"level":0},{"x":1142,"y":482,"score":58,"level":0},{"x":1166,"y":482,"score":86,"level":0},{"x":1170,"y":482,"score":38,"level":0},{"x":1268,"y":482,"score":29,"level":0},{"x":1325,"y":482,"score":128,"level":0},{"x":1445,"y":482,"score":70,"level":0},{"x":513,"y":483,"score":56,"level":0},{"x":517,"y":483,"score":66,"level":0},{"x":662,"y":483,"score":110,"level":0},{"x":873,"y":483,"score":30,"level":0},{"x":945,"y":483,"score":54,"level":0},{"x":980,"y":483,"score":54,"level":0},{"x":1000,"y":483,"score":32,"level":0},{"x":1008,"y":483,"score":30,"level":0},{"x":1048,"y":483,"score":32,"level":0},{"x":1069,"y":483,"score":84,"level":0},{"x":1120,"y":483,"score":88,"level":0},{"x":1150,"y":483,"score":62,"level":0},{"x":1255,"y":483,"score":40,"level":0},{"x":1300,"y":483,"score":51,"level":0},{"x":1330,"y":483,"score":73,"level":0},{"x":397,"y":484,"score":48,"level":0},{"x":479,"y":484,"score":26,"level":0},{"x":547,"y":484,"score":44,"level":0},{"x":554,"y":484,"score":43,"level":0},{"x":628,"y":484,"score":97,"level":0},{"x":638,"y":484,"score":90,"level":0},{"x":704,"y":484,"score":82,"level":0},{"x":878,"y":484,"score":41,"level":0},{"x":975,"y":484,"score":109,"level":0},{"x":1073,"y":484,"score":72,"level":0},{"x":1075,"y":484,"score":83,"level":0},{"x":1094,"y":484,"score":75,"level":0},{"x":1175,"y":484,"score":52,"level":0},{"x":1208,"y":484,"score":128,"level":0},{"x":1381,"y":484,"score":104,"level":0},{"x":1440,"y":484,"score":132,"level":0},{"x":402,"y":485,"score":50,"level":0},{"x":437,"y":485,"score":46,"level":0},{"x":500,"y":485,"score":63,"level":0},{"x":505,"y":485,"score":38,"level":0},{"x":574,"y":485,"score":116,"level":0},{"x":633,"y":485,"score":56,"level":0},{"x":679,"y":485,"score":33,"level":0},{"x":694,"y":485,"score":61,"level":0},{"x":907,"y":485,"score":33,"level":0},{"x":1044,"y":485,"score":54,"level":0},{"x":1083,"y":485,"score":92,"level":0},{"x":1142,"y":485,"score":75,"level":0},{"x":1252,"y":485,"score":36,"level":0},{"x":1267,"y":485,"score":102,"level":0},{"x":1322,"y":485,"score":32,"level":0},{"x":1365,"y":485,"score":31,"level":0},{"x":1367,"y":485,"score":48,"level":0},{"x":1372,"y":485,"score":104,"level":0},{"x":1435,"y":485,"score":82,"level":0},{"x":1461,"y":485,"score":71,"level":0},{"x":391,"y":486,"score":36,"level":0},{"x":420,"y":486,"score":95,"level":0},{"x":425,"y":486,"score":58,"level":0},{"x":517,"y":486,"score":50,"level":0},{"x":609,"y":486,"score":99,"level":0},{"x":689,"y":486,"score":117,"level":0},{"x":725,"y":486,"score":79,"level":0},{"x":749,"y":486,"score":96,"level":0},{"x":855,"y":486,"score":69,"level":0},{"x":861,"y":486,"score":122,"level":0},{"x":916,"y":486,"score":122,"level":0},{"x":980,"y":486,"score":35,"level":0},{"x":985,"y":486,"score":59,"level":0},{"x":1010,"y":486,"score":110,"level":0},{"x":1032,"y":486,"score":31,"level":0},{"x":1062,"y":486,"score":32,"level":0},{"x":1078,"y":486,"score":39,"level":0},{"x":1089,"y":486,"score":105,"level":0},{"x":1125,"y":486,"score":81,"level":0},{"x":1154,"y":486,"score":84,"level":0},{"x":1221,"y":486,"score":60,"level":0},{"x":1244,"y":486,"score":28,"level":0},{"x":1399,"y":486,"score":34,"level":0},{"x":380,"y":487,"score":28,"level":0},{"x":384,"y":487,"score":48,"level":0},{"x":464,"y":487,"score":27,"level":0},{"x":470,"y":487,"score":53,"level":0},{"x":480,"y":487,"score":45,"level":0},{"x":495,"y":487,"score":60,"level":0},{"x":506,"y":487,"score":28,"level":0},{"x":509,"y":487,"score":56,"level":0},{"x":533,"y":487,"score":48,"level":0},{"x":540,"y":487,"score":26,"level":0},{"x":573,"y":487,"score":66,"level":0},{"x":644,"y":487,"score":31,"level":0},{"x":723,"y":487,"score":58,"level":0},{"x":746,"y":487,"score":98,"level":0},{"x":833,"y":487,"score":135,"level":0},{"x":879,"y":487,"score":51,"level":0},{"x":885,"y":487,"score":87,"level":0},{"x":941,"y":487,"score":105,"level":0},{"x":1004,"y":487,"score":74,"level":0},{"x":1099,"y":487,"score":54,"level":0},{"x":1109,"y":487,"score":44,"level":0},{"x":1168,"y":487,"score":74,"level":0},{"x":1195,"y":487,"score":85,"level":0},{"x":1240,"y":487,"score":38,"level":0},{"x":1304,"y":487,"score":51,"level":0},{"x":459,"y":488,"score":134,"level":0},{"x":475,"y":488,"score":46,"level":0},{"x":583,"y":488,"score":70,"level":0},{"x":684,"y":488,"score":241,"level":0},{"x":718,"y":488,"score":35,"level":0},{"x":890,"y":488,"score":168,"level":0},{"x":931,"y":488,"score":56,"level":0},{"x":1018,"y":488,"score":61,"level":0},{"x":1023,"y":488,"score":70,"level":0},{"x":1039,"y":488,"score":138,"level":0},{"x":1070,"y":488,"score":60,"level":0},{"x":1204,"y":488,"score":179,"level":0},{"x":1227,"y":488,"score":26,"level":0},{"x":1315,"y":488,"score":50,"level":0},{"x":1321,"y":488,"score":82,"level":0},{"x":1360,"y":488,"score":51,"level":0},{"x":1369,"y":488,"score":26,"level":0},{"x":1458,"y":488,"score":34,"level":0},{"x":1470,"y":488,"score":30,"level":0},{"x":430,"y":489,"score":52,"level":0},{"x":534,"y":489,"score":71,"level":0},{"x":563,"y":489,"score":49,"level":0},{"x":571,"y":489,"score":61,"level":0},{"x":656,"y":489,"score":44,"level":0},{"x":811,"y":489,"score":30,"level":0},{"x":849,"y":489,"score":56,"level":0},{"x":873,"y":489,"score":68,"level":0},{"x":911,"y":489,"score":54,"level":0},{"x":921,"y":489,"score":30,"level":0},{"x":967,"y":489,"score":41,"level":0},{"x":977,"y":489,"score":42,"level":0},{"x":997,"y":489,"score":70,"level":0},{"x":1002,"y":489,"score":40,"level":0},{"x":1042,"y":489,"score":36,"level":0},{"x":1094,"y":489,"score":76,"level":0},{"x":1096,"y":489,"score":70,"level":0},{"x":1106,"y":489,"score":32,"level":0},{"x":1162,"y":489,"score":138,"level":0},{"x":1209,"y":489,"score":103,"level":0},{"x":1218,"y":489,"score":219,"level":0},{"x":1233,"y":489,"score":89,"level":0},{"x":1375,"y":489,"score":29,"level":0},{"x":1381,"y":489,"score":151,"level":0},{"x":1425,"y":489,"score":104,"level":0},{"x":1443,"y":489,"score":94,"level":0},{"x":1453,"y":489,"score":29,"level":0},{"x":1482,"y":489,"score":49,"level":0},{"x":436,"y":490,"score":130,"level":0},{"x":580,"y":490,"score":50,"level":0},{"x":590,"y":490,"score":146,"level":0},{"x":637,"y":490,"score":71,"level":0},{"x":715,"y":490,"score":92,"level":0},{"x":875,"y":490,"score":137,"level":0},{"x":946,"y":490,"score":182,"level":0},{"x":984,"y":490,"score":52,"level":0},{"x":1045,"y":490,"score":34,"level":0},{"x":1047,"y":490,"score":37,"level":0},{"x":1104,"y":490,"score":62,"level":0},{"x":1175,"y":490,"score":40,"level":0},{"x":1180,"y":490,"score":124,"level":0},{"x":1337,"y":490,"score":38,"level":0},{"x":1348,"y":490,"score":36,"level":0},{"x":1360,"y":490,"score":48,"level":0},{"x":391,"y":491,"score":83,"level":0},{"x":393,"y":491,"score":83,"level":0},{"x":398,"y":491,"score":95,"level":0},{"x":486,"y":491,"score":58,"level":0},{"x":519,"y":491,"score":47,"level":0},{"x":574,"y":491,"score":52,"level":0},{"x":673,"y":491,"score":98,"level":0},{"x":700,"y":491,"score":98,"level":0},{"x":730,"y":491,"score":83,"level":0},{"x":740,"y":491,"score":61,"level":0},{"x":752,"y":491,"score":68,"level":0},{"x":837,"y":491,"score":51,"level":0},{"x":902,"y":491,"score":93,"level":0},{"x":934,"y":491,"score":116,"level":0},{"x":1075,"y":491,"score":64,"level":0},{"x":1083,"y":491,"score":146,"level":0},{"x":1142,"y":491,"score":44,"level":0},{"x":1262,"y":491,"score":193,"level":0},{"x":1448,"y":491,"score":203,"level":0},{"x":1456,"y":491,"score":50,"level":0},{"x":1466,"y":491,"score":57,"level":0},{"x":442,"y":492,"score":31,"level":0},{"x":475,"y":492,"score":109,"level":0},{"x":493,"y":492,"score":158,"level":0},{"x":653,"y":492,"score":68,"level":0},{"x":662,"y":492,"score":119,"level":0},{"x":735,"y":492,"score":90,"level":0},{"x":849,"y":492,"score":34,"level":0},{"x":868,"y":492,"score":84,"level":0},{"x":880,"y":492,"score":99,"level":0},{"x":940,"y":492,"score":37,"level":0},{"x":984,"y":492,"score":67,"level":0},{"x":1061,"y":492,"score":27,"level":0},{"x":1088,"y":492,"score":69,"level":0},{"x":1113,"y":492,"score":70,"level":0},{"x":1130,"y":492,"score":44,"level":0},{"x":1145,"y":492,"score":78,"level":0},{"x":1164,"y":492,"score":56,"level":0},{"x":1189,"y":492,"score":44,"level":0},{"x":1241,"y":492,"score":32,"level":0},{"x":1321,"y":492,"score":61,"level":0},{"x":1461,"y":492,"score":39,"level":0},{"x":1486,"y":492,"score":38,"level":0},{"x":377,"y":493,"score":49,"level":0},{"x":382,"y":493,"score":60,"level":0},{"x":527,"y":493,"score":138,"level":0},{"x":637,"y":493,"score":31,"level":0},{"x":682,"y":493,"score":43,"level":0},{"x":705,"y":493,"score":53,"level":0},{"x":757,"y":493,"score":48,"level":0},{"x":823,"y":493,"score":29,"level":0},{"x":911,"y":493,"score":63,"level":0},{"x":915,"y":493,"score":45,"level":0},{"x":994,"y":493,"score":48,"level":0},{"x":1036,"y":493,"score":101,"level":0},{"x":1069,"y":493,"score":101,"level":0},{"x":1180,"y":493,"score":88,"level":0},{"x":1186,"y":493,"score":69,"level":0},{"x":1209,"y":493,"score":89,"level":0},{"x":1424,"y":493,"score":47,"level":0},{"x":413,"y":494,"score":139,"level":0},{"x":429,"y":494,"score":70,"level":0},{"x":506,"y":494,"score":107,"level":0},{"x":543,"y":494,"score":90,"level":0},{"x":570,"y":494,"score":131,"level":0},{"x":575,"y":494,"score":48,"level":0},{"x":582,"y":494,"score":41,"level":0},{"x":627,"y":494,"score":89,"level":0},{"x":633,"y":494,"score":33,"level":0},{"x":677,"y":494,"score":79,"level":0},{"x":691,"y":494,"score":109,"level":0},{"x":696,"y":494,"score":36,"level":0},{"x":751,"y":494,"score":32,"level":0},{"x":928,"y":494,"score":40,"level":0},{"x":1055,"y":494,"score":183,"level":0},{"x":1326,"y":494,"score":98,"level":0},{"x":1374,"y":494,"score":82,"level":0},{"x":1431,"y":494,"score":48,"level":0},{"x":405,"y":495,"score":92,"level":0},{"x":515,"y":495,"score":94,"level":0},{"x":541,"y":495,"score":82,"level":0},{"x":710,"y":495,"score":66,"level":0},{"x":720,"y":495,"score":95,"level":0},{"x":725,"y":495,"score":57,"level":0},{"x":734,"y":495,"score":96,"level":0},{"x":854,"y":495,"score":91,"level":0},{"x":906,"y":495,"score":79,"level":0},{"x":986,"y":495,"score":70,"level":0},{"x":991,"y":495,"score":40,"level":0},{"x":1090,"y":495,"score":77,"level":0},{"x":1099,"y":495,"score":88,"level":0},{"x":1112,"y":495,"score":36,"level":0},{"x":1126,"y":495,"score":43,"level":0},{"x":1204,"y":495,"score":228,"level":0},{"x":1212,"y":495,"score":51,"level":0},{"x":1217,"y":495,"score":183,"level":0},{"x":1335,"y":495,"score":41,"level":0},{"x":1459,"y":495,"score":38,"level":0},{"x":1465,"y":495,"score":42,"level":0},{"x":463,"y":496,"score":71,"level":0},{"x":520,"y":496,"score":51,"level":0},{"x":669,"y":496,"score":60,"level":0},{"x":782,"y":496,"score":35,"level":0},{"x":790,"y":496,"score":29,"level":0},{"x":800,"y":496,"score":81,"level":0},{"x":849,"y":496,"score":30,"level":0},{"x":860,"y":496,"score":162,"level":0},{"x":894,"y":496,"score":119,"level":0},{"x":953,"y":496,"score":30,"level":0},{"x":1006,"y":496,"score":172,"level":0},{"x":1014,"y":496,"score":53,"level":0},{"x":1050,"y":496,"score":37,"level":0},{"x":1075,"y":496,"score":128,"level":0},{"x":1083,"y":496,"score":48,"level":0},{"x":1129,"y":496,"score":29,"level":0},{"x":1135,"y":496,"score":80,"level":0},{"x":1159,"y":496,"score":108,"level":0},{"x":1174,"y":496,"score":35,"level":0},{"x":1179,"y":496,"score":28,"level":0},{"x":1188,"y":496,"score":72,"level":0},{"x":1374,"y":496,"score":78,"level":0},{"x":1417,"y":496,"score":76,"level":0},{"x":1430,"y":496,"score":90,"level":0},{"x":1489,"y":496,"score":82,"level":0},{"x":405,"y":497,"score":116,"level":0},{"x":416,"y":497,"score":129,"level":0},{"x":425,"y":497,"score":31,"level":0},{"x":437,"y":497,"score":38,"level":0},{"x":566,"y":497,"score":40,"level":0},{"x":632,"y":497,"score":35,"level":0},{"x":655,"y":497,"score":46,"level":0},{"x":660,"y":497,"score":88,"level":0},{"x":750,"y":497,"score":39,"level":0},{"x":752,"y":497,"score":30,"level":0},{"x":834,"y":497,"score":98,"level":0},{"x":839,"y":497,"score":27,"level":0},{"x":868,"y":497,"score":59,"level":0},{"x":881,"y":497,"score":63,"level":0},{"x":1001,"y":497,"score":101,"level":0},{"x":1093,"y":497,"score":33,"level":0},{"x":1105,"y":497,"score":72,"level":0},{"x":1142,"y":497,"score":174,"level":0},{"x":1183,"y":497,"score":26,"level":0},{"x":1193,"y":497,"score":40,"level":0},{"x":1238,"y":497,"score":158,"level":0},{"x":1256,"y":497,"score":83,"level":0},{"x":1270,"y":497,"score":156,"level":0},{"x":1355,"y":497,"score":51,"level":0},{"x":1448,"y":497,"score":63,"level":0},{"x":1454,"y":497,"score":64,"level":0},{"x":1460,"y":497,"score":82,"level":0},{"x":1466,"y":497,"score":70,"level":0},{"x":1485,"y":497,"score":48,"level":0},{"x":386,"y":498,"score":118,"level":0},{"x":391,"y":498,"score":104,"level":0},{"x":486,"y":498,"score":32,"level":0},{"x":577,"y":498,"score":83,"level":0},{"x":670,"y":498,"score":64,"level":0},{"x":695,"y":498,"score":35,"level":0},{"x":708,"y":498,"score":32,"level":0},{"x":756,"y":498,"score":54,"level":0},{"x":776,"y":498,"score":46,"level":0},{"x":783,"y":498,"score":50,"level":0},{"x":829,"y":498,"score":77,"level":0},{"x":886,"y":498,"score":73,"level":0},{"x":902,"y":498,"score":80,"level":0},{"x":917,"y":498,"score":47,"level":0},{"x":929,"y":498,"score":90,"level":0},{"x":985,"y":498,"score":52,"level":0},{"x":1163,"y":498,"score":55,"level":0},{"x":1198,"y":498,"score":118,"level":0},{"x":1316,"y":498,"score":77,"level":0},{"x":1321,"y":498,"score":92,"level":0},{"x":1362,"y":498,"score":32,"level":0},{"x":1437,"y":498,"score":62,"level":0},{"x":398,"y":499,"score":64,"level":0},{"x":467,"y":499,"score":144,"level":0},{"x":493,"y":499,"score":38,"level":0},{"x":499,"y":499,"score":115,"level":0},{"x":532,"y":499,"score":47,"level":0},{"x":572,"y":499,"score":208,"level":0},{"x":638,"y":499,"score":136,"level":0},{"x":677,"y":499,"score":51,"level":0},{"x":684,"y":499,"score":199,"level":0},{"x":789,"y":499,"score":28,"level":0},{"x":812,"y":499,"score":37,"level":0},{"x":817,"y":499,"score":84,"level":0},{"x":957,"y":499,"score":32,"level":0},{"x":1040,"y":499,"score":41,"level":0},{"x":1045,"y":499,"score":34,"level":0},{"x":1065,"y":499,"score":240,"level":0},{"x":1142,"y":499,"score":146,"level":0},{"x":1147,"y":499,"score":70,"level":0},{"x":1227,"y":499,"score":57,"level":0},{"x":1289,"y":499,"score":70,"level":0},{"x":1338,"y":499,"score":39,"level":0},{"x":1345,"y":499,"score":82,"level":0},{"x":1367,"y":499,"score":31,"level":0},{"x":1374,"y":499,"score":36,"level":0},{"x":1412,"y":499,"score":46,"level":0},{"x":1417,"y":499,"score":65,"level":0},{"x":1432,"y":499,"score":70,"level":0},{"x":1457,"y":499,"score":57,"level":0},{"x":1464,"y":499,"score":50,"level":0},{"x":1470,"y":499,"score":100,"level":0},{"x":473,"y":500,"score":27,"level":0},{"x":526,"y":500,"score":28,"level":0},{"x":541,"y":500,"score":31,"level":0},{"x":561,"y":500,"score":85,"level":0},{"x":615,"y":500,"score":37,"level":0},{"x":628,"y":500,"score":148,"level":0},{"x":649,"y":500,"score":54,"level":0},{"x":651,"y":500,"score":57,"level":0},{"x":689,"y":500,"score":50,"level":0},{"x":720,"y":500,"score":58,"level":0},{"x":725,"y":500,"score":46,"level":0},{"x":850,"y":500,"score":31,"level":0},{"x":859,"y":500,"score":28,"level":0},{"x":876,"y":500,"score":160,"level":0},{"x":896,"y":500,"score":157,"level":0},{"x":902,"y":500,"score":94,"level":0},{"x":982,"y":500,"score":133,"level":0},{"x":993,"y":500,"score":131,"level":0},{"x":1013,"y":500,"score":76,"level":0},{"x":1055,"y":500,"score":136,"level":0},{"x":1080,"y":500,"score":118,"level":0},{"x":1103,"y":500,"score":38,"level":0},{"x":1205,"y":500,"score":198,"level":0},{"x":1269,"y":500,"score":99,"level":0},{"x":1335,"y":500,"score":26,"level":0},{"x":1377,"y":500,"score":40,"level":0},{"x":1383,"y":500,"score":46,"level":0},{"x":476,"y":501,"score":40,"level":0},{"x":487,"y":501,"score":51,"level":0},{"x":514,"y":501,"score":40,"level":0},{"x":577,"y":501,"score":44,"level":0},{"x":582,"y":501,"score":27,"level":0},{"x":702,"y":501,"score":60,"level":0},{"x":732,"y":501,"score":66,"level":0},{"x":749,"y":501,"score":53,"level":0},{"x":799,"y":501,"score":54,"level":0},{"x":894,"y":501,"score":112,"level":0},{"x":966,"y":501,"score":53,"level":0},{"x":1043,"y":501,"score":26,"level":0},{"x":1051,"y":501,"score":72,"level":0},{"x":1075,"y":501,"score":145,"level":0},{"x":1088,"y":501,"score":63,"level":0},{"x":1118,"y":501,"score":50,"level":0},{"x":1120,"y":501,"score":55,"level":0},{"x":1167,"y":501,"score":172,"level":0},{"x":1180,"y":501,"score":142,"level":0},{"x":1185,"y":501,"score":37,"level":0},{"x":1196,"y":501,"score":208,"level":0},{"x":1244,"y":501,"score":92,"level":0},{"x":1351,"y":501,"score":61,"level":0},{"x":1426,"y":501,"score":69,"level":0},{"x":382,"y":502,"score":64,"level":0},{"x":399,"y":502,"score":86,"level":0},{"x":413,"y":502,"score":83,"level":0},{"x":430,"y":502,"score":42,"level":0},{"x":481,"y":502,"score":166,"level":0},{"x":503,"y":502,"score":182,"level":0},{"x":508,"y":502,"score":88,"level":0},{"x":536,"y":502,"score":49,"level":0},{"x":556,"y":502,"score":82,"level":0},{"x":655,"y":502,"score":86,"level":0},{"x":767,"y":502,"score":28,"level":0},{"x":864,"y":502,"score":109,"level":0},{"x":944,"y":502,"score":88,"level":0},{"x":993,"y":502,"score":32,"level":0},{"x":1109,"y":502,"score":35,"level":0},{"x":1112,"y":502,"score":50,"level":0},{"x":1130,"y":502,"score":149,"level":0},{"x":1139,"y":502,"score":66,"level":0},{"x":1249,"y":502,"score":182,"level":0},{"x":1419,"y":502,"score":59,"level":0},{"x":435,"y":503,"score":46,"level":0},{"x":464,"y":503,"score":84,"level":0},{"x":476,"y":503,"score":81,"level":0},{"x":523,"y":503,"score":46,"level":0},{"x":550,"y":503,"score":53,"level":0},{"x":560,"y":503,"score":62,"level":0},{"x":648,"y":503,"score":47,"level":0},{"x":683,"y":503,"score":64,"level":0},{"x":773,"y":503,"score":70,"level":0},{"x":782,"y":503,"score":28,"level":0},{"x":815,"y":503,"score":84,"level":0},{"x":859,"y":503,"score":26,"level":0},{"x":886,"y":503,"score":141,"level":0},{"x":969,"y":503,"score":109,"level":0},{"x":1096,"y":503,"score":91,"level":0},{"x":1106,"y":503,"score":60,"level":0},{"x":1141,"y":503,"score":33,"level":0},{"x":1190,"y":503,"score":93,"level":0},{"x":1269,"y":503,"score":38,"level":0},{"x":1279,"y":503,"score":34,"level":0},{"x":1406,"y":503,"score":30,"level":0},{"x":1444,"y":503,"score":170,"level":0},{"x":1461,"y":503,"score":48,"level":0},{"x":409,"y":504,"score":107,"level":0},{"x":678,"y":504,"score":202,"level":0},{"x":697,"y":504,"score":41,"level":0},{"x":759,"y":504,"score":65,"level":0},{"x":793,"y":504,"score":48,"level":0},{"x":821,"y":504,"score":59,"level":0},{"x":928,"y":504,"score":124,"level":0},{"x":978,"y":504,"score":45,"level":0},{"x":989,"y":504,"score":126,"level":0},{"x":1025,"y":504,"score":35,"level":0},{"x":1043,"y":504,"score":66,"level":0},{"x":1174,"y":504,"score":67,"level":0},{"x":1236,"y":504,"score":72,"level":0},{"x":1371,"y":504,"score":39,"level":0},{"x":1426,"y":504,"score":31,"level":0},{"x":400,"y":505,"score":45,"level":0},{"x":424,"y":505,"score":55,"level":0},{"x":505,"y":505,"score":44,"level":0},{"x":529,"y":505,"score":40,"level":0},{"x":579,"y":505,"score":34,"level":0},{"x":639,"y":505,"score":72,"level":0},{"x":771,"y":505,"score":70,"level":0},{"x":773,"y":505,"score":59,"level":0},{"x":785,"y":505,"score":30,"level":0},{"x":830,"y":505,"score":75,"level":0},{"x":876,"y":505,"score":36,"level":0},{"x":912,"y":505,"score":27,"level":0},{"x":938,"y":505,"score":36,"level":0},{"x":948,"y":505,"score":76,"level":0},{"x":955,"y":505,"score":195,"level":0},{"x":1036,"y":505,"score":98,"level":0},{"x":1046,"y":505,"score":32,"level":0},{"x":1119,"y":505,"score":54,"level":0},{"x":1135,"y":505,"score":28,"level":0},{"x":1183,"y":505,"score":57,"level":0},{"x":1379,"y":505,"score":76,"level":0},{"x":1429,"y":505,"score":48,"level":0},{"x":393,"y":506,"score":92,"level":0},{"x":432,"y":506,"score":60,"level":0},{"x":519,"y":506,"score":28,"level":0},{"x":563,"y":506,"score":66,"level":0},{"x":627,"y":506,"score":162,"level":0},{"x":654,"y":506,"score":142,"level":0},{"x":664,"y":506,"score":143,"level":0},{"x":718,"y":506,"score":37,"level":0},{"x":840,"y":506,"score":33,"level":0},{"x":843,"y":506,"score":56,"level":0},{"x":868,"y":506,"score":28,"level":0},{"x":879,"y":506,"score":46,"level":0},{"x":907,"y":506,"score":151,"level":0},{"x":921,"y":506,"score":124,"level":0},{"x":975,"y":506,"score":60,"level":0},{"x":1000,"y":506,"score":114,"level":0},{"x":1010,"y":506,"score":66,"level":0},{"x":1033,"y":506,"score":39,"level":0},{"x":1039,"y":506,"score":72,"level":0},{"x":1050,"y":506,"score":168,"level":0},{"x":1186,"y":506,"score":31,"level":0},{"x":1205,"y":506,"score":69,"level":0},{"x":1288,"y":506,"score":278,"level":0},{"x":1297,"y":506,"score":46,"level":0},{"x":1322,"y":506,"score":81,"level":0},{"x":1333,"y":506,"score":45,"level":0},{"x":1342,"y":506,"score":48,"level":0},{"x":1360,"y":506,"score":48,"level":0},{"x":488,"y":507,"score":49,"level":0},{"x":543,"y":507,"score":63,"level":0},{"x":573,"y":507,"score":53,"level":0},{"x":737,"y":507,"score":99,"level":0},{"x":764,"y":507,"score":54,"level":0},{"x":791,"y":507,"score":27,"level":0},{"x":962,"y":507,"score":96,"level":0},{"x":1083,"y":507,"score":103,"level":0},{"x":1108,"y":507,"score":61,"level":0},{"x":1147,"y":507,"score":100,"level":0},{"x":1158,"y":507,"score":48,"level":0},{"x":1161,"y":507,"score":54,"level":0},{"x":1220,"y":507,"score":212,"level":0},{"x":1228,"y":507,"score":99,"level":0},{"x":1270,"y":507,"score":64,"level":0},{"x":1317,"y":507,"score":48,"level":0},{"x":1424,"y":507,"score":78,"level":0},{"x":429,"y":508,"score":53,"level":0},{"x":501,"y":508,"score":49,"level":0},{"x":525,"y":508,"score":56,"level":0},{"x":571,"y":508,"score":51,"level":0},{"x":609,"y":508,"score":150,"level":0},{"x":647,"y":508,"score":117,"level":0},{"x":702,"y":508,"score":44,"level":0},{"x":722,"y":508,"score":40,"level":0},{"x":743,"y":508,"score":64,"level":0},{"x":853,"y":508,"score":76,"level":0},{"x":862,"y":508,"score":194,"level":0},{"x":936,"y":508,"score":111,"level":0},{"x":999,"y":508,"score":136,"level":0},{"x":1007,"y":508,"score":76,"level":0},{"x":1013,"y":508,"score":30,"level":0},{"x":1033,"y":508,"score":39,"level":0},{"x":1095,"y":508,"score":76,"level":0},{"x":1097,"y":508,"score":56,"level":0},{"x":1167,"y":508,"score":101,"level":0},{"x":1193,"y":508,"score":29,"level":0},{"x":1203,"y":508,"score":35,"level":0},{"x":1261,"y":508,"score":65,"level":0},{"x":1279,"y":508,"score":103,"level":0},{"x":1372,"y":508,"score":31,"level":0},{"x":1449,"y":508,"score":105,"level":0},{"x":508,"y":509,"score":28,"level":0},{"x":546,"y":509,"score":40,"level":0},{"x":707,"y":509,"score":39,"level":0},{"x":713,"y":509,"score":135,"level":0},{"x":775,"y":509,"score":28,"level":0},{"x":930,"y":509,"score":78,"level":0},{"x":994,"y":509,"score":62,"level":0},{"x":1018,"y":509,"score":52,"level":0},{"x":1023,"y":509,"score":34,"level":0},{"x":1130,"y":509,"score":93,"level":0},{"x":1173,"y":509,"score":71,"level":0},{"x":1184,"y":509,"score":29,"level":0},{"x":1189,"y":509,"score":100,"level":0},{"x":1214,"y":509,"score":29,"level":0},{"x":1250,"y":509,"score":126,"level":0},{"x":1266,"y":509,"score":30,"level":0},{"x":1428,"y":509,"score":28,"level":0},{"x":1469,"y":509,"score":114,"level":0},{"x":459,"y":510,"score":58,"level":0},{"x":491,"y":510,"score":39,"level":0},{"x":498,"y":510,"score":52,"level":0},{"x":553,"y":510,"score":113,"level":0},{"x":641,"y":510,"score":87,"level":0},{"x":659,"y":510,"score":27,"level":0},{"x":692,"y":510,"score":95,"level":0},{"x":697,"y":510,"score":154,"level":0},{"x":727,"y":510,"score":146,"level":0},{"x":738,"y":510,"score":65,"level":0},{"x":761,"y":510,"score":33,"level":0},{"x":794,"y":510,"score":77,"level":0},{"x":815,"y":510,"score":139,"level":0},{"x":874,"y":510,"score":29,"level":0},{"x":1007,"y":510,"score":100,"level":0},{"x":1037,"y":510,"score":63,"level":0},{"x":1045,"y":510,"score":60,"level":0},{"x":1165,"y":510,"score":98,"level":0},{"x":1374,"y":510,"score":50,"level":0},{"x":1379,"y":510,"score":29,"level":0},{"x":1416,"y":510,"score":54,"level":0},{"x":1444,"y":510,"score":146,"level":0},{"x":387,"y":511,"score":112,"level":0},{"x":465,"y":511,"score":119,"level":0},{"x":522,"y":511,"score":67,"level":0},{"x":529,"y":511,"score":68,"level":0},{"x":681,"y":511,"score":56,"level":0},{"x":687,"y":511,"score":51,"level":0},{"x":783,"y":511,"score":45,"level":0},{"x":797,"y":511,"score":49,"level":0},{"x":882,"y":511,"score":137,"level":0},{"x":941,"y":511,"score":113,"level":0},{"x":1010,"y":511,"score":63,"level":0},{"x":1027,"y":511,"score":74,"level":0},{"x":1069,"y":511,"score":78,"level":0},{"x":1078,"y":511,"score":35,"level":0},{"x":1115,"y":511,"score":41,"level":0},{"x":1135,"y":511,"score":246,"level":0},{"x":1242,"y":511,"score":40,"level":0},{"x":1273,"y":511,"score":143,"level":0},{"x":1293,"y":511,"score":26,"level":0},{"x":1303,"y":511,"score":59,"level":0},{"x":1305,"y":511,"score":64,"level":0},{"x":1312,"y":511,"score":116,"level":0},{"x":1352,"y":511,"score":35,"level":0},{"x":1355,"y":511,"score":54,"level":0},{"x":1370,"y":511,"score":32,"level":0},{"x":1376,"y":511,"score":55,"level":0},{"x":1381,"y":511,"score":78,"level":0},{"x":1421,"y":511,"score":44,"level":0},{"x":1429,"y":511,"score":27,"level":0},{"x":1433,"y":511,"score":51,"level":0},{"x":1438,"y":511,"score":123,"level":0},{"x":1455,"y":511,"score":50,"level":0},{"x":1462,"y":511,"score":87,"level":0},{"x":394,"y":512,"score":90,"level":0},{"x":409,"y":512,"score":143,"level":0},{"x":533,"y":512,"score":83,"level":0},{"x":561,"y":512,"score":174,"level":0},{"x":627,"y":512,"score":46,"level":0},{"x":636,"y":512,"score":108,"level":0},{"x":657,"y":512,"score":35,"level":0},{"x":667,"y":512,"score":119,"level":0},{"x":674,"y":512,"score":66,"level":0},{"x":734,"y":512,"score":71,"level":0},{"x":749,"y":512,"score":78,"level":0},{"x":789,"y":512,"score":29,"level":0},{"x":804,"y":512,"score":106,"level":0},{"x":823,"y":512,"score":165,"level":0},{"x":842,"y":512,"score":29,"level":0},{"x":946,"y":512,"score":127,"level":0},{"x":962,"y":512,"score":76,"level":0},{"x":1088,"y":512,"score":135,"level":0},{"x":1117,"y":512,"score":92,"level":0},{"x":1178,"y":512,"score":28,"level":0},{"x":1192,"y":512,"score":56,"level":0},{"x":1288,"y":512,"score":26,"level":0},{"x":1330,"y":512,"score":75,"level":0},{"x":631,"y":513,"score":78,"level":0},{"x":744,"y":513,"score":85,"level":0},{"x":854,"y":513,"score":70,"level":0},{"x":867,"y":513,"score":35,"level":0},{"x":932,"y":513,"score":55,"level":0},{"x":979,"y":513,"score":201,"level":0},{"x":1020,"y":513,"score":42,"level":0},{"x":1045,"y":513,"score":72,"level":0},{"x":1098,"y":513,"score":106,"level":0},{"x":1106,"y":513,"score":187,"level":0},{"x":1355,"y":513,"score":62,"level":0},{"x":1372,"y":513,"score":34,"level":0},{"x":1427,"y":513,"score":47,"level":0},{"x":1433,"y":513,"score":44,"level":0},{"x":1455,"y":513,"score":35,"level":0},{"x":423,"y":514,"score":138,"level":0},{"x":524,"y":514,"score":26,"level":0},{"x":547,"y":514,"score":31,"level":0},{"x":576,"y":514,"score":139,"level":0},{"x":627,"y":514,"score":44,"level":0},{"x":640,"y":514,"score":50,"level":0},{"x":673,"y":514,"score":76,"level":0},{"x":694,"y":514,"score":45,"level":0},{"x":707,"y":514,"score":233,"level":0},{"x":712,"y":514,"score":41,"level":0},{"x":785,"y":514,"score":51,"level":0},{"x":787,"y":514,"score":47,"level":0},{"x":836,"y":514,"score":28,"level":0},{"x":985,"y":514,"score":54,"level":0},{"x":1017,"y":514,"score":76,"level":0},{"x":1038,"y":514,"score":114,"level":0},{"x":1162,"y":514,"score":64,"level":0},{"x":1219,"y":514,"score":71,"level":0},{"x":404,"y":515,"score":259,"level":0},{"x":414,"y":515,"score":101,"level":0},{"x":419,"y":515,"score":33,"level":0},{"x":460,"y":515,"score":106,"level":0},{"x":476,"y":515,"score":46,"level":0},{"x":513,"y":515,"score":90,"level":0},{"x":518,"y":515,"score":49,"level":0},{"x":532,"y":515,"score":31,"level":0},{"x":689,"y":515,"score":66,"level":0},{"x":699,"y":515,"score":86,"level":0},{"x":809,"y":515,"score":109,"level":0},{"x":861,"y":515,"score":104,"level":0},{"x":995,"y":515,"score":65,"level":0},{"x":1000,"y":515,"score":118,"level":0},{"x":1101,"y":515,"score":73,"level":0},{"x":1138,"y":515,"score":110,"level":0},{"x":1277,"y":515,"score":97,"level":0},{"x":1332,"y":515,"score":55,"level":0},{"x":1349,"y":515,"score":31,"level":0},{"x":1424,"y":515,"score":36,"level":0},{"x":1481,"y":515,"score":60,"level":0},{"x":377,"y":516,"score":33,"level":0},{"x":507,"y":516,"score":62,"level":0},{"x":526,"y":516,"score":75,"level":0},{"x":538,"y":516,"score":104,"level":0},{"x":551,"y":516,"score":127,"level":0},{"x":577,"y":516,"score":100,"level":0},{"x":583,"y":516,"score":41,"level":0},{"x":644,"y":516,"score":93,"level":0},{"x":651,"y":516,"score":96,"level":0},{"x":754,"y":516,"score":84,"level":0},{"x":756,"y":516,"score":35,"level":0},{"x":814,"y":516,"score":106,"level":0},{"x":844,"y":516,"score":68,"level":0},{"x":872,"y":516,"score":37,"level":0},{"x":956,"y":516,"score":108,"level":0},{"x":1007,"y":516,"score":102,"level":0},{"x":1013,"y":516,"score":47,"level":0},{"x":1028,"y":516,"score":140,"level":0},{"x":1127,"y":516,"score":28,"level":0},{"x":1132,"y":516,"score":108,"level":0},{"x":1144,"y":516,"score":29,"level":0},{"x":1174,"y":516,"score":56,"level":0},{"x":1207,"y":516,"score":28,"level":0},{"x":1293,"y":516,"score":28,"level":0},{"x":1354,"y":516,"score":41,"level":0},{"x":1371,"y":516,"score":32,"level":0},{"x":1402,"y":516,"score":34,"level":0},{"x":1440,"y":516,"score":100,"level":0},{"x":1450,"y":516,"score":47,"level":0},{"x":428,"y":517,"score":104,"level":0},{"x":436,"y":517,"score":131,"level":0},{"x":636,"y":517,"score":81,"level":0},{"x":656,"y":517,"score":36,"level":0},{"x":685,"y":517,"score":33,"level":0},{"x":717,"y":517,"score":96,"level":0},{"x":723,"y":517,"score":106,"level":0},{"x":732,"y":517,"score":126,"level":0},{"x":769,"y":517,"score":135,"level":0},{"x":801,"y":517,"score":66,"level":0},{"x":842,"y":517,"score":42,"level":0},{"x":888,"y":517,"score":41,"level":0},{"x":917,"y":517,"score":46,"level":0},{"x":945,"y":517,"score":36,"level":0},{"x":969,"y":517,"score":104,"level":0},{"x":1044,"y":517,"score":42,"level":0},{"x":1239,"y":517,"score":113,"level":0},{"x":1339,"y":517,"score":27,"level":0},{"x":1346,"y":517,"score":27,"level":0},{"x":1365,"y":517,"score":48,"level":0},{"x":1375,"y":517,"score":32,"level":0},{"x":1379,"y":517,"score":29,"level":0},{"x":1455,"y":517,"score":32,"level":0},{"x":1467,"y":517,"score":88,"level":0},{"x":395,"y":518,"score":40,"level":0},{"x":433,"y":518,"score":76,"level":0},{"x":473,"y":518,"score":50,"level":0},{"x":503,"y":518,"score":28,"level":0},{"x":556,"y":518,"score":47,"level":0},{"x":562,"y":518,"score":107,"level":0},{"x":624,"y":518,"score":57,"level":0},{"x":648,"y":518,"score":30,"level":0},{"x":671,"y":518,"score":29,"level":0},{"x":680,"y":518,"score":52,"level":0},{"x":748,"y":518,"score":93,"level":0},{"x":789,"y":518,"score":60,"level":0},{"x":821,"y":518,"score":50,"level":0},{"x":852,"y":518,"score":48,"level":0},{"x":1023,"y":518,"score":55,"level":0},{"x":1060,"y":518,"score":54,"level":0},{"x":1097,"y":518,"score":156,"level":0},{"x":1104,"y":518,"score":62,"level":0},{"x":1186,"y":518,"score":80,"level":0},{"x":1232,"y":518,"score":78,"level":0},{"x":1355,"y":518,"score":52,"level":0},{"x":1460,"y":518,"score":46,"level":0},{"x":382,"y":519,"score":60,"level":0},{"x":481,"y":519,"score":160,"level":0},{"x":506,"y":519,"score":42,"level":0},{"x":676,"y":519,"score":94,"level":0},{"x":696,"y":519,"score":56,"level":0},{"x":703,"y":519,"score":88,"level":0},{"x":756,"y":519,"score":40,"level":0},{"x":830,"y":519,"score":37,"level":0},{"x":928,"y":519,"score":71,"level":0},{"x":936,"y":519,"score":59,"level":0},{"x":976,"y":519,"score":56,"level":0},{"x":1019,"y":519,"score":28,"level":0},{"x":1035,"y":519,"score":43,"level":0},{"x":1079,"y":519,"score":116,"level":0},{"x":1137,"y":519,"score":57,"level":0},{"x":1201,"y":519,"score":180,"level":0},{"x":1273,"y":519,"score":50,"level":0},{"x":1426,"y":519,"score":38,"level":0},{"x":1440,"y":519,"score":127,"level":0},{"x":1472,"y":519,"score":47,"level":0},{"x":399,"y":520,"score":68,"level":0},{"x":404,"y":520,"score":166,"level":0},{"x":412,"y":520,"score":48,"level":0},{"x":510,"y":520,"score":50,"level":0},{"x":652,"y":520,"score":39,"level":0},{"x":693,"y":520,"score":28,"level":0},{"x":710,"y":520,"score":70,"level":0},{"x":753,"y":520,"score":31,"level":0},{"x":785,"y":520,"score":39,"level":0},{"x":954,"y":520,"score":50,"level":0},{"x":1098,"y":520,"score":75,"level":0},{"x":1107,"y":520,"score":41,"level":0},{"x":1151,"y":520,"score":50,"level":0},{"x":1159,"y":520,"score":102,"level":0},{"x":1163,"y":520,"score":90,"level":0},{"x":1208,"y":520,"score":83,"level":0},{"x":1332,"y":520,"score":80,"level":0},{"x":1447,"y":520,"score":138,"level":0},{"x":456,"y":521,"score":66,"level":0},{"x":530,"y":521,"score":53,"level":0},{"x":557,"y":521,"score":76,"level":0},{"x":611,"y":521,"score":58,"level":0},{"x":662,"y":521,"score":129,"level":0},{"x":686,"y":521,"score":134,"level":0},{"x":721,"y":521,"score":77,"level":0},{"x":864,"y":521,"score":46,"level":0},{"x":946,"y":521,"score":101,"level":0},{"x":964,"y":521,"score":148,"level":0},{"x":1028,"y":521,"score":27,"level":0},{"x":1052,"y":521,"score":196,"level":0},{"x":1081,"y":521,"score":111,"level":0},{"x":1119,"y":521,"score":28,"level":0},{"x":1127,"y":521,"score":36,"level":0},{"x":1138,"y":521,"score":81,"level":0},{"x":1191,"y":521,"score":62,"level":0},{"x":1301,"y":521,"score":45,"level":0},{"x":1326,"y":521,"score":26,"level":0},{"x":1481,"y":521,"score":135,"level":0},{"x":417,"y":522,"score":79,"level":0},{"x":488,"y":522,"score":126,"level":0},{"x":494,"y":522,"score":122,"level":0},{"x":521,"y":522,"score":27,"level":0},{"x":620,"y":522,"score":68,"level":0},{"x":641,"y":522,"score":76,"level":0},{"x":657,"y":522,"score":134,"level":0},{"x":874,"y":522,"score":43,"level":0},{"x":1056,"y":522,"score":69,"level":0},{"x":1092,"y":522,"score":26,"level":0},{"x":1295,"y":522,"score":42,"level":0},{"x":1318,"y":522,"score":56,"level":0},{"x":1430,"y":522,"score":87,"level":0},{"x":1468,"y":522,"score":34,"level":0},{"x":1489,"y":522,"score":90,"level":0},{"x":579,"y":523,"score":147,"level":0},{"x":634,"y":523,"score":298,"level":0},{"x":662,"y":523,"score":90,"level":0},{"x":800,"y":523,"score":82,"level":0},{"x":952,"y":523,"score":38,"level":0},{"x":1005,"y":523,"score":33,"level":0},{"x":1059,"y":523,"score":89,"level":0},{"x":1087,"y":523,"score":94,"level":0},{"x":1215,"y":523,"score":60,"level":0},{"x":1221,"y":523,"score":121,"level":0},{"x":1283,"y":523,"score":39,"level":0},{"x":1444,"y":523,"score":82,"level":0},{"x":426,"y":524,"score":155,"level":0},{"x":470,"y":524,"score":190,"level":0},{"x":477,"y":524,"score":53,"level":0},{"x":550,"y":524,"score":103,"level":0},{"x":624,"y":524,"score":127,"level":0},{"x":648,"y":524,"score":240,"level":0},{"x":667,"y":524,"score":27,"level":0},{"x":677,"y":524,"score":78,"level":0},{"x":740,"y":524,"score":136,"level":0},{"x":757,"y":524,"score":32,"level":0},{"x":789,"y":524,"score":115,"level":0},{"x":936,"y":524,"score":37,"level":0},{"x":1078,"y":524,"score":94,"level":0},{"x":1137,"y":524,"score":119,"level":0},{"x":1270,"y":524,"score":34,"level":0},{"x":1342,"y":524,"score":44,"level":0},{"x":1439,"y":524,"score":30,"level":0},{"x":1467,"y":524,"score":40,"level":0},{"x":410,"y":525,"score":68,"level":0},{"x":442,"y":525,"score":88,"level":0},{"x":462,"y":525,"score":70,"level":0},{"x":504,"y":525,"score":42,"level":0},{"x":511,"y":525,"score":44,"level":0},{"x":513,"y":525,"score":34,"level":0},{"x":585,"y":525,"score":37,"level":0},{"x":747,"y":525,"score":46,"level":0},{"x":753,"y":525,"score":40,"level":0},{"x":776,"y":525,"score":86,"level":0},{"x":1020,"y":525,"score":28,"level":0},{"x":1178,"y":525,"score":29,"level":0},{"x":1199,"y":525,"score":205,"level":0},{"x":1206,"y":525,"score":106,"level":0},{"x":1246,"y":525,"score":32,"level":0},{"x":1326,"y":525,"score":58,"level":0},{"x":1463,"y":525,"score":87,"level":0},{"x":404,"y":526,"score":61,"level":0},{"x":437,"y":526,"score":28,"level":0},{"x":484,"y":526,"score":61,"level":0},{"x":527,"y":526,"score":82,"level":0},{"x":529,"y":526,"score":64,"level":0},{"x":539,"y":526,"score":170,"level":0},{"x":557,"y":526,"score":44,"level":0},{"x":576,"y":526,"score":165,"level":0},{"x":718,"y":526,"score":46,"level":0},{"x":731,"y":526,"score":116,"level":0},{"x":805,"y":526,"score":28,"level":0},{"x":885,"y":526,"score":38,"level":0},{"x":934,"y":526,"score":38,"level":0},{"x":977,"y":526,"score":44,"level":0},{"x":985,"y":526,"score":50,"level":0},{"x":1079,"y":526,"score":49,"level":0},{"x":1120,"y":526,"score":60,"level":0},{"x":1186,"y":526,"score":105,"level":0},{"x":1192,"y":526,"score":131,"level":0},{"x":1350,"y":526,"score":27,"level":0},{"x":500,"y":527,"score":78,"level":0},{"x":516,"y":527,"score":29,"level":0},{"x":641,"y":527,"score":196,"level":0},{"x":688,"y":527,"score":119,"level":0},{"x":696,"y":527,"score":97,"level":0},{"x":837,"y":527,"score":54,"level":0},{"x":867,"y":527,"score":74,"level":0},{"x":890,"y":527,"score":39,"level":0},{"x":964,"y":527,"score":93,"level":0},{"x":1054,"y":527,"score":36,"level":0},{"x":1068,"y":527,"score":40,"level":0},{"x":1092,"y":527,"score":28,"level":0},{"x":1247,"y":527,"score":46,"level":0},{"x":1295,"y":527,"score":41,"level":0},{"x":1302,"y":527,"score":127,"level":0},{"x":1318,"y":527,"score":27,"level":0},{"x":1375,"y":527,"score":33,"level":0},{"x":1414,"y":527,"score":28,"level":0},{"x":1460,"y":527,"score":35,"level":0},{"x":1463,"y":527,"score":94,"level":0},{"x":1470,"y":527,"score":137,"level":0},{"x":474,"y":528,"score":80,"level":0},{"x":582,"y":528,"score":73,"level":0},{"x":619,"y":528,"score":118,"level":0},{"x":708,"y":528,"score":80,"level":0},{"x":782,"y":528,"score":44,"level":0},{"x":852,"y":528,"score":31,"level":0},{"x":859,"y":528,"score":40,"level":0},{"x":898,"y":528,"score":39,"level":0},{"x":953,"y":528,"score":32,"level":0},{"x":1088,"y":528,"score":26,"level":0},{"x":1149,"y":528,"score":33,"level":0},{"x":1273,"y":528,"score":33,"level":0},{"x":1308,"y":528,"score":35,"level":0},{"x":1478,"y":528,"score":113,"level":0},{"x":1482,"y":528,"score":45,"level":0},{"x":493,"y":529,"score":80,"level":0},{"x":849,"y":529,"score":42,"level":0},{"x":978,"y":529,"score":88,"level":0},{"x":1340,"y":529,"score":28,"level":0},{"x":1459,"y":529,"score":31,"level":0},{"x":1488,"y":529,"score":111,"level":0},{"x":427,"y":530,"score":33,"level":0},{"x":510,"y":530,"score":29,"level":0},{"x":514,"y":530,"score":59,"level":0},{"x":580,"y":530,"score":92,"level":0},{"x":628,"y":530,"score":34,"level":0},{"x":905,"y":530,"score":32,"level":0},{"x":1074,"y":530,"score":36,"level":0},{"x":1219,"y":530,"score":31,"level":0},{"x":1296,"y":530,"score":26,"level":0},{"x":1316,"y":530,"score":39,"level":0},{"x":442,"y":531,"score":116,"level":0},{"x":519,"y":531,"score":54,"level":0},{"x":545,"y":531,"score":76,"level":0},{"x":648,"y":531,"score":92,"level":0},{"x":841,"y":531,"score":39,"level":0},{"x":954,"y":531,"score":34,"level":0},{"x":1200,"y":531,"score":41,"level":0},{"x":1223,"y":531,"score":37,"level":0},{"x":1363,"y":531,"score":31,"level":0},{"x":394,"y":532,"score":50,"level":0},{"x":467,"y":532,"score":117,"level":0},{"x":537,"y":532,"score":32,"level":0},{"x":640,"y":532,"score":87,"level":0},{"x":698,"y":532,"score":71,"level":0},{"x":706,"y":532,"score":81,"level":0},{"x":718,"y":532,"score":75,"level":0},{"x":732,"y":532,"score":120,"level":0},{"x":739,"y":532,"score":40,"level":0},{"x":751,"y":532,"score":31,"level":0},{"x":805,"y":532,"score":51,"level":0},{"x":867,"y":532,"score":32,"level":0},{"x":890,"y":532,"score":91,"level":0},{"x":1077,"y":532,"score":26,"level":0},{"x":1262,"y":532,"score":30,"level":0},{"x":1268,"y":532,"score":31,"level":0},{"x":1443,"y":532,"score":128,"level":0},{"x":1469,"y":532,"score":127,"level":0},{"x":448,"y":533,"score":53,"level":0},{"x":500,"y":533,"score":53,"level":0},{"x":690,"y":533,"score":82,"level":0},{"x":852,"y":533,"score":44,"level":0},{"x":864,"y":533,"score":28,"level":0},{"x":870,"y":533,"score":47,"level":0},{"x":899,"y":533,"score":30,"level":0},{"x":1273,"y":533,"score":59,"level":0},{"x":1287,"y":533,"score":83,"level":0},{"x":1356,"y":533,"score":37,"level":0},{"x":1361,"y":533,"score":26,"level":0},{"x":1477,"y":533,"score":133,"level":0},{"x":1483,"y":533,"score":38,"level":0},{"x":443,"y":534,"score":69,"level":0},{"x":492,"y":534,"score":54,"level":0},{"x":573,"y":534,"score":104,"level":0},{"x":674,"y":534,"score":62,"level":0},{"x":743,"y":534,"score":42,"level":0},{"x":775,"y":534,"score":32,"level":0},{"x":780,"y":534,"score":94,"level":0},{"x":786,"y":534,"score":60,"level":0},{"x":849,"y":534,"score":76,"level":0},{"x":856,"y":534,"score":51,"level":0},{"x":890,"y":534,"score":42,"level":0},{"x":942,"y":534,"score":97,"level":0},{"x":1349,"y":534,"score":46,"level":0},{"x":1402,"y":534,"score":28,"level":0},{"x":1417,"y":534,"score":142,"level":0},{"x":1433,"y":534,"score":64,"level":0},{"x":421,"y":535,"score":33,"level":0},{"x":435,"y":535,"score":52,"level":0},{"x":448,"y":535,"score":49,"level":0},{"x":467,"y":535,"score":74,"level":0},{"x":511,"y":535,"score":27,"level":0},{"x":527,"y":535,"score":130,"level":0},{"x":556,"y":535,"score":128,"level":0},{"x":580,"y":535,"score":139,"level":0},{"x":630,"y":535,"score":65,"level":0},{"x":681,"y":535,"score":38,"level":0},{"x":726,"y":535,"score":133,"level":0},{"x":788,"y":535,"score":56,"level":0},{"x":975,"y":535,"score":44,"level":0},{"x":984,"y":535,"score":57,"level":0},{"x":1150,"y":535,"score":191,"level":0},{"x":1156,"y":535,"score":36,"level":0},{"x":1189,"y":535,"score":34,"level":0},{"x":1219,"y":535,"score":27,"level":0},{"x":1303,"y":535,"score":34,"level":0},{"x":1364,"y":535,"score":64,"level":0},{"x":1436,"y":535,"score":34,"level":0},{"x":1469,"y":535,"score":110,"level":0},{"x":1487,"y":535,"score":79,"level":0},{"x":429,"y":536,"score":58,"level":0},{"x":461,"y":536,"score":26,"level":0},{"x":507,"y":536,"score":94,"level":0},{"x":546,"y":536,"score":48,"level":0},{"x":567,"y":536,"score":135,"level":0},{"x":768,"y":536,"score":39,"level":0},{"x":882,"y":536,"score":57,"level":0},{"x":898,"y":536,"score":44,"level":0},{"x":993,"y":536,"score":44,"level":0},{"x":1032,"y":536,"score":64,"level":0},{"x":1217,"y":536,"score":32,"level":0},{"x":1246,"y":536,"score":36,"level":0},{"x":1339,"y":536,"score":54,"level":0},{"x":1429,"y":536,"score":47,"level":0},{"x":1485,"y":536,"score":90,"level":0},{"x":562,"y":537,"score":52,"level":0},{"x":625,"y":537,"score":138,"level":0},{"x":630,"y":537,"score":81,"level":0},{"x":644,"y":537,"score":39,"level":0},{"x":732,"y":537,"score":83,"level":0},{"x":864,"y":537,"score":80,"level":0},{"x":1123,"y":537,"score":81,"level":0},{"x":1327,"y":537,"score":27,"level":0},{"x":1377,"y":537,"score":33,"level":0},{"x":1424,"y":537,"score":56,"level":0},{"x":1433,"y":537,"score":42,"level":0},{"x":1440,"y":537,"score":66,"level":0},{"x":402,"y":538,"score":34,"level":0},{"x":484,"y":538,"score":51,"level":0},{"x":490,"y":538,"score":155,"level":0},{"x":500,"y":538,"score":93,"level":0},{"x":521,"y":538,"score":207,"level":0},{"x":567,"y":538,"score":72,"level":0},{"x":614,"y":538,"score":27,"level":0},{"x":718,"y":538,"score":176,"level":0},{"x":737,"y":538,"score":78,"level":0},{"x":861,"y":538,"score":59,"level":0},{"x":878,"y":538,"score":82,"level":0},{"x":1276,"y":538,"score":95,"level":0},{"x":1479,"y":538,"score":43,"level":0},{"x":405,"y":539,"score":47,"level":0},{"x":413,"y":539,"score":37,"level":0},{"x":590,"y":539,"score":35,"level":0},{"x":633,"y":539,"score":71,"level":0},{"x":649,"y":539,"score":32,"level":0},{"x":763,"y":539,"score":49,"level":0},{"x":783,"y":539,"score":54,"level":0},{"x":799,"y":539,"score":34,"level":0},{"x":804,"y":539,"score":32,"level":0},{"x":849,"y":539,"score":50,"level":0},{"x":855,"y":539,"score":75,"level":0},{"x":998,"y":539,"score":43,"level":0},{"x":1127,"y":539,"score":116,"level":0},{"x":581,"y":540,"score":119,"level":0},{"x":593,"y":540,"score":33,"level":0},{"x":641,"y":540,"score":152,"level":0},{"x":677,"y":540,"score":49,"level":0},{"x":726,"y":540,"score":32,"level":0},{"x":770,"y":540,"score":30,"level":0},{"x":778,"y":540,"score":93,"level":0},{"x":792,"y":540,"score":69,"level":0},{"x":902,"y":540,"score":27,"level":0},{"x":925,"y":540,"score":56,"level":0},{"x":1063,"y":540,"score":26,"level":0},{"x":1140,"y":540,"score":34,"level":0},{"x":1146,"y":540,"score":95,"level":0},{"x":1183,"y":540,"score":36,"level":0},{"x":1268,"y":540,"score":66,"level":0},{"x":1270,"y":540,"score":54,"level":0},{"x":1293,"y":540,"score":77,"level":0},{"x":1342,"y":540,"score":44,"level":0},{"x":1368,"y":540,"score":58,"level":0},{"x":1391,"y":540,"score":27,"level":0},{"x":1465,"y":540,"score":27,"level":0},{"x":1468,"y":540,"score":51,"level":0},{"x":1472,"y":540,"score":57,"level":0},{"x":528,"y":541,"score":81,"level":0},{"x":546,"y":541,"score":27,"level":0},{"x":657,"y":541,"score":30,"level":0},{"x":731,"y":541,"score":69,"level":0},{"x":765,"y":541,"score":27,"level":0},{"x":836,"y":541,"score":108,"level":0},{"x":885,"y":541,"score":51,"level":0},{"x":943,"y":541,"score":97,"level":0},{"x":1154,"y":541,"score":46,"level":0},{"x":1325,"y":541,"score":54,"level":0},{"x":1420,"y":541,"score":56,"level":0},{"x":1486,"y":541,"score":102,"level":0},{"x":443,"y":542,"score":48,"level":0},{"x":564,"y":542,"score":51,"level":0},{"x":582,"y":542,"score":119,"level":0},{"x":608,"y":542,"score":39,"level":0},{"x":652,"y":542,"score":29,"level":0},{"x":706,"y":542,"score":96,"level":0},{"x":711,"y":542,"score":47,"level":0},{"x":713,"y":542,"score":48,"level":0},{"x":814,"y":542,"score":34,"level":0},{"x":841,"y":542,"score":84,"level":0},{"x":864,"y":542,"score":50,"level":0},{"x":985,"y":542,"score":26,"level":0},{"x":1032,"y":542,"score":67,"level":0},{"x":1117,"y":542,"score":50,"level":0},{"x":1242,"y":542,"score":34,"level":0},{"x":1288,"y":542,"score":106,"level":0},{"x":1314,"y":542,"score":30,"level":0},{"x":1417,"y":542,"score":60,"level":0},{"x":1424,"y":542,"score":57,"level":0},{"x":1469,"y":542,"score":32,"level":0},{"x":1473,"y":542,"score":47,"level":0},{"x":454,"y":543,"score":29,"level":0},{"x":570,"y":543,"score":38,"level":0},{"x":720,"y":543,"score":101,"level":0},{"x":727,"y":543,"score":84,"level":0},{"x":742,"y":543,"score":81,"level":0},{"x":744,"y":543,"score":84,"level":0},{"x":777,"y":543,"score":31,"level":0},{"x":848,"y":543,"score":131,"level":0},{"x":854,"y":543,"score":73,"level":0},{"x":1346,"y":543,"score":28,"level":0},{"x":1412,"y":543,"score":34,"level":0},{"x":1421,"y":543,"score":58,"level":0},{"x":533,"y":544,"score":73,"level":0},{"x":643,"y":544,"score":141,"level":0},{"x":764,"y":544,"score":41,"level":0},{"x":868,"y":544,"score":31,"level":0},{"x":1337,"y":544,"score":55,"level":0},{"x":1417,"y":544,"score":89,"level":0},{"x":1459,"y":544,"score":54,"level":0},{"x":407,"y":545,"score":50,"level":0},{"x":521,"y":545,"score":84,"level":0},{"x":681,"y":545,"score":32,"level":0},{"x":786,"y":545,"score":35,"level":0},{"x":792,"y":545,"score":95,"level":0},{"x":798,"y":545,"score":53,"level":0},{"x":1134,"y":545,"score":26,"level":0},{"x":1301,"y":545,"score":31,"level":0},{"x":1434,"y":545,"score":93,"level":0},{"x":1490,"y":545,"score":89,"level":0},{"x":388,"y":546,"score":26,"level":0},{"x":653,"y":546,"score":32,"level":0},{"x":676,"y":546,"score":68,"level":0},{"x":735,"y":546,"score":82,"level":0},{"x":831,"y":546,"score":44,"level":0},{"x":1140,"y":546,"score":102,"level":0},{"x":1437,"y":546,"score":60,"level":0},{"x":1486,"y":546,"score":163,"level":0},{"x":384,"y":547,"score":28,"level":0},{"x":419,"y":547,"score":42,"level":0},{"x":685,"y":547,"score":115,"level":0},{"x":756,"y":547,"score":36,"level":0},{"x":841,"y":547,"score":106,"level":0},{"x":867,"y":547,"score":66,"level":0},{"x":918,"y":547,"score":50,"level":0},{"x":1036,"y":547,"score":47,"level":0},{"x":1038,"y":547,"score":41,"level":0},{"x":1405,"y":547,"score":39,"level":0},{"x":1463,"y":547,"score":53,"level":0},{"x":661,"y":548,"score":70,"level":0},{"x":673,"y":548,"score":52,"level":0},{"x":696,"y":548,"score":55,"level":0},{"x":1235,"y":548,"score":42,"level":0},{"x":1430,"y":548,"score":41,"level":0},{"x":1452,"y":548,"score":77,"level":0},{"x":1473,"y":548,"score":176,"level":0},{"x":610,"y":549,"score":26,"level":0},{"x":644,"y":549,"score":45,"level":0},{"x":701,"y":549,"score":36,"level":0},{"x":715,"y":549,"score":44,"level":0},{"x":762,"y":549,"score":34,"level":0},{"x":767,"y":549,"score":64,"level":0},{"x":803,"y":549,"score":54,"level":0},{"x":847,"y":549,"score":138,"level":0},{"x":853,"y":549,"score":85,"level":0},{"x":1027,"y":549,"score":53,"level":0},{"x":1219,"y":549,"score":34,"level":0},{"x":1372,"y":549,"score":98,"level":0},{"x":1436,"y":549,"score":46,"level":0},{"x":397,"y":550,"score":41,"level":0},{"x":514,"y":550,"score":38,"level":0},{"x":623,"y":550,"score":47,"level":0},{"x":633,"y":550,"score":65,"level":0},{"x":667,"y":550,"score":31,"level":0},{"x":742,"y":550,"score":138,"level":0},{"x":1342,"y":550,"score":191,"level":0},{"x":1347,"y":550,"score":27,"level":0},{"x":1479,"y":550,"score":80,"level":0},{"x":1485,"y":550,"score":30,"level":0},{"x":395,"y":551,"score":36,"level":0},{"x":512,"y":551,"score":45,"level":0},{"x":581,"y":551,"score":33,"level":0},{"x":615,"y":551,"score":78,"level":0},{"x":723,"y":551,"score":68,"level":0},{"x":791,"y":551,"score":88,"level":0},{"x":1427,"y":551,"score":38,"level":0},{"x":1437,"y":551,"score":36,"level":0},{"x":384,"y":552,"score":32,"level":0},{"x":424,"y":552,"score":40,"level":0},{"x":509,"y":552,"score":31,"level":0},{"x":521,"y":552,"score":45,"level":0},{"x":539,"y":552,"score":32,"level":0},{"x":570,"y":552,"score":35,"level":0},{"x":638,"y":552,"score":37,"level":0},{"x":685,"y":552,"score":27,"level":0},{"x":696,"y":552,"score":41,"level":0},{"x":716,"y":552,"score":83,"level":0},{"x":830,"y":552,"score":30,"level":0},{"x":1377,"y":552,"score":62,"level":0},{"x":1419,"y":552,"score":80,"level":0},{"x":1464,"y":552,"score":132,"level":0},{"x":1469,"y":552,"score":114,"level":0},{"x":380,"y":553,"score":30,"level":0},{"x":444,"y":553,"score":54,"level":0},{"x":450,"y":553,"score":52,"level":0},{"x":506,"y":553,"score":50,"level":0},{"x":610,"y":553,"score":28,"level":0},{"x":675,"y":553,"score":31,"level":0},{"x":679,"y":553,"score":46,"level":0},{"x":710,"y":553,"score":114,"level":0},{"x":728,"y":553,"score":74,"level":0},{"x":752,"y":553,"score":99,"level":0},{"x":842,"y":553,"score":39,"level":0},{"x":898,"y":553,"score":28,"level":0},{"x":1035,"y":553,"score":50,"level":0},{"x":1109,"y":553,"score":61,"level":0},{"x":1209,"y":553,"score":36,"level":0},{"x":1361,"y":553,"score":45,"level":0},{"x":1403,"y":553,"score":32,"level":0},{"x":1413,"y":553,"score":53,"level":0},{"x":1430,"y":553,"score":41,"level":0},{"x":377,"y":554,"score":48,"level":0},{"x":469,"y":554,"score":36,"level":0},{"x":504,"y":554,"score":75,"level":0},{"x":578,"y":554,"score":33,"level":0},{"x":621,"y":554,"score":49,"level":0},{"x":654,"y":554,"score":28,"level":0},{"x":737,"y":554,"score":180,"level":0},{"x":776,"y":554,"score":60,"level":0},{"x":782,"y":554,"score":80,"level":0},{"x":819,"y":554,"score":67,"level":0},{"x":1041,"y":554,"score":42,"level":0},{"x":1159,"y":554,"score":56,"level":0},{"x":1388,"y":554,"score":87,"level":0},{"x":1394,"y":554,"score":66,"level":0},{"x":1408,"y":554,"score":54,"level":0},{"x":1432,"y":554,"score":84,"level":0},{"x":1444,"y":554,"score":82,"level":0},{"x":1452,"y":554,"score":104,"level":0},{"x":1477,"y":554,"score":34,"level":0},{"x":1490,"y":554,"score":26,"level":0},{"x":425,"y":555,"score":49,"level":0},{"x":431,"y":555,"score":43,"level":0},{"x":464,"y":555,"score":32,"level":0},{"x":499,"y":555,"score":34,"level":0},{"x":541,"y":555,"score":26,"level":0},{"x":568,"y":555,"score":36,"level":0},{"x":666,"y":555,"score":34,"level":0},{"x":679,"y":555,"score":30,"level":0},{"x":743,"y":555,"score":39,"level":0},{"x":835,"y":555,"score":44,"level":0},{"x":1030,"y":555,"score":49,"level":0},{"x":1136,"y":555,"score":32,"level":0},{"x":1221,"y":555,"score":27,"level":0},{"x":1347,"y":555,"score":160,"level":0},{"x":1458,"y":555,"score":75,"level":0},{"x":574,"y":556,"score":86,"level":0},{"x":686,"y":556,"score":62,"level":0},{"x":833,"y":556,"score":45,"level":0},{"x":846,"y":556,"score":128,"level":0},{"x":866,"y":556,"score":43,"level":0},{"x":876,"y":556,"score":46,"level":0},{"x":892,"y":556,"score":49,"level":0},{"x":1142,"y":556,"score":46,"level":0},{"x":1247,"y":556,"score":56,"level":0},{"x":1303,"y":556,"score":27,"level":0},{"x":1366,"y":556,"score":48,"level":0},{"x":1426,"y":556,"score":26,"level":0},{"x":377,"y":557,"score":42,"level":0},{"x":425,"y":557,"score":42,"level":0},{"x":481,"y":557,"score":50,"level":0},{"x":519,"y":557,"score":42,"level":0},{"x":684,"y":557,"score":37,"level":0},{"x":696,"y":557,"score":174,"level":0},{"x":732,"y":557,"score":33,"level":0},{"x":736,"y":557,"score":138,"level":0},{"x":775,"y":557,"score":71,"level":0},{"x":1089,"y":557,"score":32,"level":0},{"x":1131,"y":557,"score":48,"level":0},{"x":1216,"y":557,"score":63,"level":0},{"x":1416,"y":557,"score":84,"level":0},{"x":1469,"y":557,"score":70,"level":0},{"x":1477,"y":557,"score":60,"level":0},{"x":478,"y":558,"score":47,"level":0},{"x":629,"y":558,"score":30,"level":0},{"x":663,"y":558,"score":48,"level":0},{"x":703,"y":558,"score":40,"level":0},{"x":819,"y":558,"score":32,"level":0},{"x":853,"y":558,"score":162,"level":0},{"x":1016,"y":558,"score":38,"level":0},{"x":1070,"y":558,"score":34,"level":0},{"x":1360,"y":558,"score":121,"level":0},{"x":1461,"y":558,"score":65,"level":0},{"x":474,"y":559,"score":70,"level":0},{"x":674,"y":559,"score":104,"level":0},{"x":683,"y":559,"score":101,"level":0},{"x":720,"y":559,"score":59,"level":0},{"x":751,"y":559,"score":85,"level":0},{"x":780,"y":559,"score":94,"level":0},{"x":785,"y":559,"score":182,"level":0},{"x":1485,"y":559,"score":137,"level":0},{"x":461,"y":560,"score":107,"level":0},{"x":470,"y":560,"score":98,"level":0},{"x":482,"y":560,"score":30,"level":0},{"x":496,"y":560,"score":29,"level":0},{"x":540,"y":560,"score":65,"level":0},{"x":568,"y":560,"score":46,"level":0},{"x":707,"y":560,"score":104,"level":0},{"x":743,"y":560,"score":123,"level":0},{"x":808,"y":560,"score":68,"level":0},{"x":838,"y":560,"score":61,"level":0},{"x":896,"y":560,"score":36,"level":0},{"x":1221,"y":560,"score":58,"level":0},{"x":1346,"y":560,"score":26,"level":0},{"x":1389,"y":560,"score":59,"level":0},{"x":527,"y":561,"score":41,"level":0},{"x":652,"y":561,"score":60,"level":0},{"x":687,"y":561,"score":71,"level":0},{"x":757,"y":561,"score":35,"level":0},{"x":844,"y":561,"score":44,"level":0},{"x":872,"y":561,"score":43,"level":0},{"x":1192,"y":561,"score":26,"level":0},{"x":1254,"y":561,"score":49,"level":0},{"x":1263,"y":561,"score":32,"level":0},{"x":1348,"y":561,"score":38,"level":0},{"x":1353,"y":561,"score":26,"level":0},{"x":1420,"y":561,"score":33,"level":0},{"x":1457,"y":561,"score":68,"level":0},{"x":1466,"y":561,"score":88,"level":0},{"x":481,"y":562,"score":37,"level":0},{"x":573,"y":562,"score":34,"level":0},{"x":678,"y":562,"score":40,"level":0},{"x":697,"y":562,"score":76,"level":0},{"x":770,"y":562,"score":160,"level":0},{"x":804,"y":562,"score":63,"level":0},{"x":839,"y":562,"score":40,"level":0},{"x":1210,"y":562,"score":32,"level":0},{"x":1340,"y":562,"score":27,"level":0},{"x":1362,"y":562,"score":44,"level":0},{"x":1404,"y":562,"score":72,"level":0},{"x":1415,"y":562,"score":26,"level":0},{"x":498,"y":563,"score":63,"level":0},{"x":507,"y":563,"score":69,"level":0},{"x":584,"y":563,"score":94,"level":0},{"x":609,"y":563,"score":59,"level":0},{"x":663,"y":563,"score":31,"level":0},{"x":736,"y":563,"score":131,"level":0},{"x":819,"y":563,"score":73,"level":0},{"x":1023,"y":563,"score":31,"level":0},{"x":1030,"y":563,"score":49,"level":0},{"x":1337,"y":563,"score":26,"level":0},{"x":1432,"y":563,"score":35,"level":0},{"x":1445,"y":563,"score":115,"level":0},{"x":1484,"y":563,"score":70,"level":0},{"x":474,"y":564,"score":53,"level":0},{"x":529,"y":564,"score":33,"level":0},{"x":623,"y":564,"score":58,"level":0},{"x":629,"y":564,"score":79,"level":0},{"x":651,"y":564,"score":41,"level":0},{"x":653,"y":564,"score":46,"level":0},{"x":703,"y":564,"score":96,"level":0},{"x":713,"y":564,"score":141,"level":0},{"x":725,"y":564,"score":87,"level":0},{"x":741,"y":564,"score":31,"level":0},{"x":761,"y":564,"score":61,"level":0},{"x":832,"y":564,"score":35,"level":0},{"x":970,"y":564,"score":30,"level":0},{"x":1141,"y":564,"score":66,"level":0},{"x":1482,"y":564,"score":68,"level":0},{"x":1490,"y":564,"score":75,"level":0},{"x":430,"y":565,"score":56,"level":0},{"x":461,"y":565,"score":30,"level":0},{"x":497,"y":565,"score":70,"level":0},{"x":676,"y":565,"score":135,"level":0},{"x":691,"y":565,"score":63,"level":0},{"x":755,"y":565,"score":56,"level":0},{"x":785,"y":565,"score":127,"level":0},{"x":827,"y":565,"score":48,"level":0},{"x":1156,"y":565,"score":33,"level":0},{"x":1342,"y":565,"score":71,"level":0},{"x":1346,"y":565,"score":26,"level":0},{"x":1354,"y":565,"score":32,"level":0},{"x":1415,"y":565,"score":58,"level":0},{"x":441,"y":566,"score":43,"level":0},{"x":572,"y":566,"score":43,"level":0},{"x":585,"y":566,"score":63,"level":0},{"x":630,"y":566,"score":54,"level":0},{"x":688,"y":566,"score":60,"level":0},{"x":778,"y":566,"score":79,"level":0},{"x":795,"y":566,"score":69,"level":0},{"x":863,"y":566,"score":49,"level":0},{"x":1201,"y":566,"score":50,"level":0},{"x":1348,"y":566,"score":26,"level":0},{"x":1369,"y":566,"score":119,"level":0},{"x":1374,"y":566,"score":128,"level":0},{"x":1391,"y":566,"score":26,"level":0},{"x":1411,"y":566,"score":43,"level":0},{"x":1453,"y":566,"score":48,"level":0},{"x":1472,"y":566,"score":90,"level":0},{"x":503,"y":567,"score":61,"level":0},{"x":644,"y":567,"score":29,"level":0},{"x":771,"y":567,"score":103,"level":0},{"x":835,"y":567,"score":49,"level":0},{"x":1024,"y":567,"score":114,"level":0},{"x":1211,"y":567,"score":29,"level":0},{"x":1218,"y":567,"score":39,"level":0},{"x":1340,"y":567,"score":49,"level":0},{"x":1362,"y":567,"score":74,"level":0},{"x":1365,"y":567,"score":57,"level":0},{"x":1396,"y":567,"score":70,"level":0},{"x":1401,"y":567,"score":122,"level":0},{"x":1419,"y":567,"score":87,"level":0},{"x":1460,"y":567,"score":96,"level":0},{"x":395,"y":568,"score":28,"level":0},{"x":462,"y":568,"score":76,"level":0},{"x":709,"y":568,"score":42,"level":0},{"x":723,"y":568,"score":77,"level":0},{"x":864,"y":568,"score":34,"level":0},{"x":902,"y":568,"score":29,"level":0},{"x":1040,"y":568,"score":39,"level":0},{"x":1235,"y":568,"score":42,"level":0},{"x":1382,"y":568,"score":147,"level":0},{"x":1444,"y":568,"score":58,"level":0},{"x":1462,"y":568,"score":97,"level":0},{"x":420,"y":569,"score":113,"level":0},{"x":468,"y":569,"score":68,"level":0},{"x":585,"y":569,"score":40,"level":0},{"x":662,"y":569,"score":37,"level":0},{"x":667,"y":569,"score":31,"level":0},{"x":738,"y":569,"score":43,"level":0},{"x":743,"y":569,"score":61,"level":0},{"x":749,"y":569,"score":94,"level":0},{"x":761,"y":569,"score":154,"level":0},{"x":788,"y":569,"score":218,"level":0},{"x":797,"y":569,"score":101,"level":0},{"x":800,"y":569,"score":79,"level":0},{"x":806,"y":569,"score":99,"level":0},{"x":1008,"y":569,"score":41,"level":0},{"x":1026,"y":569,"score":103,"level":0},{"x":1045,"y":569,"score":33,"level":0},{"x":1059,"y":569,"score":32,"level":0},{"x":1079,"y":569,"score":26,"level":0},{"x":1460,"y":569,"score":110,"level":0},{"x":1481,"y":569,"score":101,"level":0},{"x":1490,"y":569,"score":65,"level":0},{"x":384,"y":570,"score":26,"level":0},{"x":672,"y":570,"score":48,"level":0},{"x":681,"y":570,"score":34,"level":0},{"x":724,"y":570,"score":72,"level":0},{"x":791,"y":570,"score":123,"level":0},{"x":855,"y":570,"score":91,"level":0},{"x":865,"y":570,"score":35,"level":0},{"x":961,"y":570,"score":39,"level":0},{"x":1089,"y":570,"score":32,"level":0},{"x":1351,"y":570,"score":48,"level":0},{"x":1358,"y":570,"score":78,"level":0},{"x":1408,"y":570,"score":169,"level":0},{"x":1416,"y":570,"score":56,"level":0},{"x":396,"y":571,"score":60,"level":0},{"x":452,"y":571,"score":80,"level":0},{"x":470,"y":571,"score":84,"level":0},{"x":487,"y":571,"score":35,"level":0},{"x":510,"y":571,"score":59,"level":0},{"x":569,"y":571,"score":48,"level":0},{"x":631,"y":571,"score":110,"level":0},{"x":694,"y":571,"score":34,"level":0},{"x":1369,"y":571,"score":96,"level":0},{"x":1398,"y":571,"score":43,"level":0},{"x":1452,"y":571,"score":57,"level":0},{"x":438,"y":572,"score":174,"level":0},{"x":596,"y":572,"score":36,"level":0},{"x":656,"y":572,"score":205,"level":0},{"x":739,"y":572,"score":47,"level":0},{"x":772,"y":572,"score":141,"level":0},{"x":829,"y":572,"score":27,"level":0},{"x":866,"y":572,"score":35,"level":0},{"x":1031,"y":572,"score":29,"level":0},{"x":1307,"y":572,"score":50,"level":0},{"x":1373,"y":572,"score":43,"level":0},{"x":1388,"y":572,"score":124,"level":0},{"x":1422,"y":572,"score":104,"level":0},{"x":1450,"y":572,"score":54,"level":0},{"x":1455,"y":572,"score":54,"level":0},{"x":1489,"y":572,"score":29,"level":0},{"x":377,"y":573,"score":197,"level":0},{"x":432,"y":573,"score":28,"level":0},{"x":482,"y":573,"score":90,"level":0},{"x":502,"y":573,"score":41,"level":0},{"x":650,"y":573,"score":41,"level":0},{"x":732,"y":573,"score":38,"level":0},{"x":755,"y":573,"score":36,"level":0},{"x":760,"y":573,"score":144,"level":0},{"x":997,"y":573,"score":69,"level":0},{"x":1012,"y":573,"score":55,"level":0},{"x":1066,"y":573,"score":28,"level":0},{"x":1376,"y":573,"score":84,"level":0},{"x":1383,"y":573,"score":64,"level":0},{"x":674,"y":574,"score":64,"level":0},{"x":806,"y":574,"score":63,"level":0},{"x":811,"y":574,"score":123,"level":0},{"x":913,"y":574,"score":28,"level":0},{"x":918,"y":574,"score":50,"level":0},{"x":1432,"y":574,"score":68,"level":0},{"x":1444,"y":574,"score":53,"level":0},{"x":519,"y":575,"score":73,"level":0},{"x":606,"y":575,"score":46,"level":0},{"x":637,"y":575,"score":80,"level":0},{"x":679,"y":575,"score":56,"level":0},{"x":685,"y":575,"score":30,"level":0},{"x":749,"y":575,"score":41,"level":0},{"x":788,"y":575,"score":110,"level":0},{"x":791,"y":575,"score":70,"level":0},{"x":847,"y":575,"score":45,"level":0},{"x":852,"y":575,"score":29,"level":0},{"x":1248,"y":575,"score":181,"level":0},{"x":1255,"y":575,"score":80,"level":0},{"x":1423,"y":575,"score":76,"level":0},{"x":1437,"y":575,"score":32,"level":0},{"x":1486,"y":575,"score":43,"level":0},{"x":509,"y":576,"score":60,"level":0},{"x":666,"y":576,"score":85,"level":0},{"x":694,"y":576,"score":44,"level":0},{"x":723,"y":576,"score":90,"level":0},{"x":764,"y":576,"score":45,"level":0},{"x":780,"y":576,"score":143,"level":0},{"x":839,"y":576,"score":26,"level":0},{"x":897,"y":576,"score":56,"level":0},{"x":1229,"y":576,"score":32,"level":0},{"x":1368,"y":576,"score":83,"level":0},{"x":1380,"y":576,"score":124,"level":0},{"x":1409,"y":576,"score":124,"level":0},{"x":1418,"y":576,"score":62,"level":0},{"x":1474,"y":576,"score":59,"level":0},{"x":1480,"y":576,"score":60,"level":0},{"x":611,"y":577,"score":31,"level":0},{"x":717,"y":577,"score":48,"level":0},{"x":774,"y":577,"score":33,"level":0},{"x":886,"y":577,"score":36,"level":0},{"x":1026,"y":577,"score":46,"level":0},{"x":1241,"y":577,"score":76,"level":0},{"x":1254,"y":577,"score":35,"level":0},{"x":1278,"y":577,"score":50,"level":0},{"x":1359,"y":577,"score":86,"level":0},{"x":1371,"y":577,"score":62,"level":0},{"x":1403,"y":577,"score":174,"level":0},{"x":1448,"y":577,"score":90,"level":0},{"x":1461,"y":577,"score":108,"level":0},{"x":1467,"y":577,"score":159,"level":0},{"x":1488,"y":577,"score":29,"level":0},{"x":388,"y":578,"score":49,"level":0},{"x":495,"y":578,"score":33,"level":0},{"x":740,"y":578,"score":62,"level":0},{"x":745,"y":578,"score":117,"level":0},{"x":851,"y":578,"score":39,"level":0},{"x":917,"y":578,"score":70,"level":0},{"x":1226,"y":578,"score":47,"level":0},{"x":1338,"y":578,"score":38,"level":0},{"x":1390,"y":578,"score":78,"level":0},{"x":1396,"y":578,"score":168,"level":0},{"x":1410,"y":578,"score":174,"level":0},{"x":1459,"y":578,"score":117,"level":0},{"x":427,"y":579,"score":29,"level":0},{"x":444,"y":579,"score":90,"level":0},{"x":471,"y":579,"score":57,"level":0},{"x":517,"y":579,"score":73,"level":0},{"x":579,"y":579,"score":28,"level":0},{"x":678,"y":579,"score":52,"level":0},{"x":799,"y":579,"score":27,"level":0},{"x":912,"y":579,"score":53,"level":0},{"x":992,"y":579,"score":32,"level":0},{"x":1185,"y":579,"score":26,"level":0},{"x":1206,"y":579,"score":45,"level":0},{"x":1243,"y":579,"score":124,"level":0},{"x":1345,"y":579,"score":48,"level":0},{"x":1365,"y":579,"score":66,"level":0},{"x":1386,"y":579,"score":124,"level":0},{"x":1433,"y":579,"score":106,"level":0},{"x":1461,"y":579,"score":39,"level":0},{"x":442,"y":580,"score":64,"level":0},{"x":492,"y":580,"score":50,"level":0},{"x":614,"y":580,"score":29,"level":0},{"x":731,"y":580,"score":26,"level":0},{"x":757,"y":580,"score":120,"level":0},{"x":767,"y":580,"score":27,"level":0},{"x":817,"y":580,"score":130,"level":0},{"x":851,"y":580,"score":57,"level":0},{"x":926,"y":580,"score":36,"level":0},{"x":971,"y":580,"score":80,"level":0},{"x":1032,"y":580,"score":29,"level":0},{"x":1371,"y":580,"score":33,"level":0},{"x":1405,"y":580,"score":115,"level":0},{"x":1456,"y":580,"score":46,"level":0},{"x":379,"y":581,"score":44,"level":0},{"x":385,"y":581,"score":28,"level":0},{"x":625,"y":581,"score":85,"level":0},{"x":630,"y":581,"score":171,"level":0},{"x":637,"y":581,"score":36,"level":0},{"x":662,"y":581,"score":282,"level":0},{"x":743,"y":581,"score":54,"level":0},{"x":750,"y":581,"score":67,"level":0},{"x":762,"y":581,"score":29,"level":0},{"x":790,"y":581,"score":106,"level":0},{"x":793,"y":581,"score":75,"level":0},{"x":891,"y":581,"score":45,"level":0},{"x":923,"y":581,"score":37,"level":0},{"x":1199,"y":581,"score":53,"level":0},{"x":1220,"y":581,"score":84,"level":0},{"x":1226,"y":581,"score":60,"level":0},{"x":1376,"y":581,"score":41,"level":0},{"x":1408,"y":581,"score":26,"level":0},{"x":1418,"y":581,"score":108,"level":0},{"x":1440,"y":581,"score":32,"level":0},{"x":466,"y":582,"score":28,"level":0},{"x":504,"y":582,"score":52,"level":0},{"x":698,"y":582,"score":44,"level":0},{"x":775,"y":582,"score":56,"level":0},{"x":781,"y":582,"score":80,"level":0},{"x":788,"y":582,"score":94,"level":0},{"x":807,"y":582,"score":176,"level":0},{"x":853,"y":582,"score":39,"level":0},{"x":1010,"y":582,"score":41,"level":0},{"x":1402,"y":582,"score":106,"level":0},{"x":1405,"y":582,"score":50,"level":0},{"x":1448,"y":582,"score":172,"level":0},{"x":1467,"y":582,"score":54,"level":0},{"x":520,"y":583,"score":43,"level":0},{"x":587,"y":583,"score":49,"level":0},{"x":682,"y":583,"score":62,"level":0},{"x":711,"y":583,"score":39,"level":0},{"x":1215,"y":583,"score":101,"level":0},{"x":1227,"y":583,"score":28,"level":0},{"x":1254,"y":583,"score":94,"level":0},{"x":1338,"y":583,"score":35,"level":0},{"x":1366,"y":583,"score":39,"level":0},{"x":1413,"y":583,"score":65,"level":0},{"x":1439,"y":583,"score":28,"level":0},{"x":1455,"y":583,"score":92,"level":0},{"x":1458,"y":583,"score":32,"level":0},{"x":415,"y":584,"score":43,"level":0},{"x":566,"y":584,"score":34,"level":0},{"x":582,"y":584,"score":41,"level":0},{"x":635,"y":584,"score":60,"level":0},{"x":672,"y":584,"score":35,"level":0},{"x":736,"y":584,"score":45,"level":0},{"x":790,"y":584,"score":76,"level":0},{"x":799,"y":584,"score":126,"level":0},{"x":826,"y":584,"score":55,"level":0},{"x":978,"y":584,"score":40,"level":0},{"x":1020,"y":584,"score":65,"level":0},{"x":1028,"y":584,"score":51,"level":0},{"x":1141,"y":584,"score":36,"level":0},{"x":1239,"y":584,"score":158,"level":0},{"x":1356,"y":584,"score":50,"level":0},{"x":1386,"y":584,"score":133,"level":0},{"x":1395,"y":584,"score":109,"level":0},{"x":1415,"y":584,"score":35,"level":0},{"x":1462,"y":584,"score":130,"level":0},{"x":1468,"y":584,"score":110,"level":0},{"x":588,"y":585,"score":54,"level":0},{"x":657,"y":585,"score":50,"level":0},{"x":714,"y":585,"score":44,"level":0},{"x":728,"y":585,"score":34,"level":0},{"x":971,"y":585,"score":28,"level":0},{"x":1015,"y":585,"score":46,"level":0},{"x":1212,"y":585,"score":69,"level":0},{"x":1237,"y":585,"score":86,"level":0},{"x":1264,"y":585,"score":30,"level":0},{"x":1381,"y":585,"score":173,"level":0},{"x":1490,"y":585,"score":132,"level":0},{"x":522,"y":586,"score":131,"level":0},{"x":607,"y":586,"score":28,"level":0},{"x":617,"y":586,"score":29,"level":0},{"x":739,"y":586,"score":43,"level":0},{"x":744,"y":586,"score":94,"level":0},{"x":757,"y":586,"score":90,"level":0},{"x":770,"y":586,"score":66,"level":0},{"x":786,"y":586,"score":106,"level":0},{"x":912,"y":586,"score":115,"level":0},{"x":1428,"y":586,"score":31,"level":0},{"x":1463,"y":586,"score":106,"level":0},{"x":392,"y":587,"score":77,"level":0},{"x":398,"y":587,"score":32,"level":0},{"x":505,"y":587,"score":155,"level":0},{"x":545,"y":587,"score":28,"level":0},{"x":781,"y":587,"score":81,"level":0},{"x":821,"y":587,"score":51,"level":0},{"x":1140,"y":587,"score":42,"level":0},{"x":1374,"y":587,"score":112,"level":0},{"x":1419,"y":587,"score":70,"level":0},{"x":1444,"y":587,"score":55,"level":0},{"x":1456,"y":587,"score":35,"level":0},{"x":426,"y":588,"score":39,"level":0},{"x":491,"y":588,"score":72,"level":0},{"x":575,"y":588,"score":52,"level":0},{"x":601,"y":588,"score":31,"level":0},{"x":648,"y":588,"score":54,"level":0},{"x":726,"y":588,"score":27,"level":0},{"x":800,"y":588,"score":26,"level":0},{"x":813,"y":588,"score":60,"level":0},{"x":823,"y":588,"score":41,"level":0},{"x":839,"y":588,"score":76,"level":0},{"x":1014,"y":588,"score":69,"level":0},{"x":1148,"y":588,"score":52,"level":0},{"x":1215,"y":588,"score":148,"level":0},{"x":1217,"y":588,"score":178,"level":0},{"x":1227,"y":588,"score":176,"level":0},{"x":1361,"y":588,"score":29,"level":0},{"x":1407,"y":588,"score":79,"level":0},{"x":1439,"y":588,"score":39,"level":0},{"x":377,"y":589,"score":66,"level":0},{"x":438,"y":589,"score":53,"level":0},{"x":511,"y":589,"score":62,"level":0},{"x":554,"y":589,"score":28,"level":0},{"x":849,"y":589,"score":58,"level":0},{"x":1012,"y":589,"score":34,"level":0},{"x":1022,"y":589,"score":65,"level":0},{"x":1030,"y":589,"score":102,"level":0},{"x":1246,"y":589,"score":106,"level":0},{"x":1354,"y":589,"score":182,"level":0},{"x":1403,"y":589,"score":60,"level":0},{"x":1429,"y":589,"score":60,"level":0},{"x":1434,"y":589,"score":70,"level":0},{"x":1453,"y":589,"score":75,"level":0},{"x":448,"y":590,"score":78,"level":0},{"x":467,"y":590,"score":27,"level":0},{"x":528,"y":590,"score":65,"level":0},{"x":541,"y":590,"score":43,"level":0},{"x":560,"y":590,"score":28,"level":0},{"x":618,"y":590,"score":35,"level":0},{"x":752,"y":590,"score":97,"level":0},{"x":772,"y":590,"score":52,"level":0},{"x":805,"y":590,"score":65,"level":0},{"x":890,"y":590,"score":30,"level":0},{"x":918,"y":590,"score":26,"level":0},{"x":924,"y":590,"score":40,"level":0},{"x":1017,"y":590,"score":41,"level":0},{"x":1028,"y":590,"score":152,"level":0},{"x":1080,"y":590,"score":54,"level":0},{"x":1174,"y":590,"score":31,"level":0},{"x":1192,"y":590,"score":92,"level":0},{"x":1195,"y":590,"score":98,"level":0},{"x":1201,"y":590,"score":124,"level":0},{"x":1252,"y":590,"score":30,"level":0},{"x":1260,"y":590,"score":63,"level":0},{"x":1284,"y":590,"score":34,"level":0},{"x":1410,"y":590,"score":34,"level":0},{"x":1479,"y":590,"score":40,"level":0},{"x":1486,"y":590,"score":114,"level":0},{"x":712,"y":591,"score":30,"level":0},{"x":733,"y":591,"score":47,"level":0},{"x":738,"y":591,"score":31,"level":0},{"x":745,"y":591,"score":81,"level":0},{"x":786,"y":591,"score":31,"level":0},{"x":932,"y":591,"score":53,"level":0},{"x":1184,"y":591,"score":27,"level":0},{"x":1264,"y":591,"score":63,"level":0},{"x":1287,"y":591,"score":35,"level":0},{"x":1382,"y":591,"score":51,"level":0},{"x":1386,"y":591,"score":58,"level":0},{"x":1388,"y":591,"score":29,"level":0},{"x":1467,"y":591,"score":58,"level":0},{"x":1489,"y":591,"score":79,"level":0},{"x":377,"y":592,"score":48,"level":0},{"x":513,"y":592,"score":28,"level":0},{"x":636,"y":592,"score":95,"level":0},{"x":769,"y":592,"score":60,"level":0},{"x":777,"y":592,"score":41,"level":0},{"x":796,"y":592,"score":36,"level":0},{"x":912,"y":592,"score":44,"level":0},{"x":1006,"y":592,"score":39,"level":0},{"x":1033,"y":592,"score":50,"level":0},{"x":1415,"y":592,"score":56,"level":0},{"x":1454,"y":592,"score":158,"level":0},{"x":399,"y":593,"score":31,"level":0},{"x":537,"y":593,"score":104,"level":0},{"x":581,"y":593,"score":30,"level":0},{"x":653,"y":593,"score":52,"level":0},{"x":801,"y":593,"score":41,"level":0},{"x":813,"y":593,"score":88,"level":0},{"x":839,"y":593,"score":136,"level":0},{"x":875,"y":593,"score":32,"level":0},{"x":881,"y":593,"score":126,"level":0},{"x":965,"y":593,"score":54,"level":0},{"x":1190,"y":593,"score":128,"level":0},{"x":1203,"y":593,"score":92,"level":0},{"x":1225,"y":593,"score":70,"level":0},{"x":1233,"y":593,"score":79,"level":0},{"x":1273,"y":593,"score":50,"level":0},{"x":1293,"y":593,"score":57,"level":0},{"x":1369,"y":593,"score":125,"level":0},{"x":1400,"y":593,"score":124,"level":0},{"x":1406,"y":593,"score":279,"level":0},{"x":1420,"y":593,"score":145,"level":0},{"x":1425,"y":593,"score":57,"level":0},{"x":1462,"y":593,"score":156,"level":0},{"x":1467,"y":593,"score":40,"level":0},{"x":394,"y":594,"score":64,"level":0},{"x":519,"y":594,"score":58,"level":0},{"x":631,"y":594,"score":43,"level":0},{"x":715,"y":594,"score":38,"level":0},{"x":790,"y":594,"score":153,"level":0},{"x":849,"y":594,"score":33,"level":0},{"x":895,"y":594,"score":28,"level":0},{"x":979,"y":594,"score":42,"level":0},{"x":988,"y":594,"score":55,"level":0},{"x":1011,"y":594,"score":45,"level":0},{"x":1214,"y":594,"score":175,"level":0},{"x":1239,"y":594,"score":33,"level":0},{"x":1282,"y":594,"score":140,"level":0},{"x":1355,"y":594,"score":34,"level":0},{"x":1362,"y":594,"score":43,"level":0},{"x":377,"y":595,"score":26,"level":0},{"x":437,"y":595,"score":118,"level":0},{"x":454,"y":595,"score":38,"level":0},{"x":540,"y":595,"score":34,"level":0},{"x":588,"y":595,"score":40,"level":0},{"x":593,"y":595,"score":27,"level":0},{"x":749,"y":595,"score":51,"level":0},{"x":761,"y":595,"score":152,"level":0},{"x":767,"y":595,"score":80,"level":0},{"x":835,"y":595,"score":29,"level":0},{"x":913,"y":595,"score":42,"level":0},{"x":918,"y":595,"score":55,"level":0},{"x":938,"y":595,"score":44,"level":0},{"x":971,"y":595,"score":60,"level":0},{"x":1245,"y":595,"score":83,"level":0},{"x":1278,"y":595,"score":44,"level":0},{"x":1284,"y":595,"score":140,"level":0},{"x":1289,"y":595,"score":66,"level":0},{"x":1348,"y":595,"score":39,"level":0},{"x":1358,"y":595,"score":137,"level":0},{"x":1385,"y":595,"score":52,"level":0},{"x":1391,"y":595,"score":63,"level":0},{"x":1414,"y":595,"score":47,"level":0},{"x":1427,"y":595,"score":85,"level":0},{"x":1435,"y":595,"score":199,"level":0},{"x":1441,"y":595,"score":26,"level":0},{"x":1478,"y":595,"score":136,"level":0},{"x":448,"y":596,"score":144,"level":0},{"x":463,"y":596,"score":31,"level":0},{"x":573,"y":596,"score":30,"level":0},{"x":576,"y":596,"score":71,"level":0},{"x":690,"y":596,"score":51,"level":0},{"x":727,"y":596,"score":138,"level":0},{"x":1023,"y":596,"score":106,"level":0},{"x":1175,"y":596,"score":99,"level":0},{"x":1207,"y":596,"score":86,"level":0},{"x":1304,"y":596,"score":92,"level":0},{"x":1416,"y":596,"score":58,"level":0},{"x":1462,"y":596,"score":107,"level":0},{"x":685,"y":597,"score":33,"level":0},{"x":696,"y":597,"score":75,"level":0},{"x":786,"y":597,"score":242,"level":0},{"x":827,"y":597,"score":68,"level":0},{"x":853,"y":597,"score":92,"level":0},{"x":927,"y":597,"score":42,"level":0},{"x":993,"y":597,"score":168,"level":0},{"x":1163,"y":597,"score":28,"level":0},{"x":1204,"y":597,"score":163,"level":0},{"x":1230,"y":597,"score":41,"level":0},{"x":1240,"y":597,"score":93,"level":0},{"x":1260,"y":597,"score":53,"level":0},{"x":1265,"y":597,"score":81,"level":0},{"x":1313,"y":597,"score":71,"level":0},{"x":1383,"y":597,"score":44,"level":0},{"x":1412,"y":597,"score":52,"level":0},{"x":1423,"y":597,"score":42,"level":0},{"x":1454,"y":597,"score":114,"level":0},{"x":1471,"y":597,"score":48,"level":0},{"x":406,"y":598,"score":26,"level":0},{"x":432,"y":598,"score":41,"level":0},{"x":448,"y":598,"score":88,"level":0},{"x":511,"y":598,"score":69,"level":0},{"x":517,"y":598,"score":115,"level":0},{"x":581,"y":598,"score":76,"level":0},{"x":756,"y":598,"score":91,"level":0},{"x":772,"y":598,"score":103,"level":0},{"x":780,"y":598,"score":68,"level":0},{"x":808,"y":598,"score":34,"level":0},{"x":813,"y":598,"score":48,"level":0},{"x":843,"y":598,"score":83,"level":0},{"x":867,"y":598,"score":91,"level":0},{"x":875,"y":598,"score":26,"level":0},{"x":964,"y":598,"score":57,"level":0},{"x":1012,"y":598,"score":70,"level":0},{"x":1180,"y":598,"score":51,"level":0},{"x":1189,"y":598,"score":105,"level":0},{"x":1249,"y":598,"score":34,"level":0},{"x":1288,"y":598,"score":88,"level":0},{"x":1294,"y":598,"score":149,"level":0},{"x":1322,"y":598,"score":26,"level":0},{"x":1339,"y":598,"score":70,"level":0},{"x":1344,"y":598,"score":36,"level":0},{"x":1359,"y":598,"score":158,"level":0},{"x":1405,"y":598,"score":56,"level":0},{"x":1430,"y":598,"score":60,"level":0},{"x":1443,"y":598,"score":84,"level":0},{"x":1445,"y":598,"score":57,"level":0},{"x":1449,"y":598,"score":50,"level":0},{"x":1485,"y":598,"score":82,"level":0},{"x":389,"y":599,"score":36,"level":0},{"x":545,"y":599,"score":40,"level":0},{"x":796,"y":599,"score":167,"level":0},{"x":881,"y":599,"score":104,"level":0},{"x":893,"y":599,"score":77,"level":0},{"x":901,"y":599,"score":58,"level":0},{"x":970,"y":599,"score":32,"level":0},{"x":992,"y":599,"score":248,"level":0},{"x":1033,"y":599,"score":69,"level":0},{"x":1214,"y":599,"score":30,"level":0},{"x":1275,"y":599,"score":172,"level":0},{"x":1306,"y":599,"score":37,"level":0},{"x":1351,"y":599,"score":76,"level":0},{"x":1366,"y":599,"score":33,"level":0},{"x":1391,"y":599,"score":123,"level":0},{"x":1425,"y":599,"score":32,"level":0},{"x":1474,"y":599,"score":34,"level":0},{"x":468,"y":600,"score":33,"level":0},{"x":585,"y":600,"score":122,"level":0},{"x":740,"y":600,"score":29,"level":0},{"x":761,"y":600,"score":111,"level":0},{"x":825,"y":600,"score":91,"level":0},{"x":957,"y":600,"score":222,"level":0},{"x":1038,"y":600,"score":100,"level":0},{"x":1052,"y":600,"score":104,"level":0},{"x":1100,"y":600,"score":48,"level":0},{"x":1149,"y":600,"score":31,"level":0},{"x":1156,"y":600,"score":33,"level":0},{"x":1159,"y":600,"score":65,"level":0},{"x":1278,"y":600,"score":95,"level":0},{"x":1328,"y":600,"score":102,"level":0},{"x":1381,"y":600,"score":84,"level":0},{"x":552,"y":601,"score":122,"level":0},{"x":574,"y":601,"score":61,"level":0},{"x":684,"y":601,"score":59,"level":0},{"x":716,"y":601,"score":99,"level":0},{"x":725,"y":601,"score":26,"level":0},{"x":727,"y":601,"score":54,"level":0},{"x":911,"y":601,"score":46,"level":0},{"x":914,"y":601,"score":43,"level":0},{"x":943,"y":601,"score":44,"level":0},{"x":950,"y":601,"score":33,"level":0},{"x":1019,"y":601,"score":90,"level":0},{"x":1022,"y":601,"score":71,"level":0},{"x":1064,"y":601,"score":37,"level":0},{"x":1116,"y":601,"score":36,"level":0},{"x":1137,"y":601,"score":34,"level":0},{"x":1224,"y":601,"score":73,"level":0},{"x":1233,"y":601,"score":96,"level":0},{"x":1243,"y":601,"score":36,"level":0},{"x":1256,"y":601,"score":58,"level":0},{"x":1345,"y":601,"score":84,"level":0},{"x":1351,"y":601,"score":136,"level":0},{"x":1410,"y":601,"score":31,"level":0},{"x":1479,"y":601,"score":32,"level":0},{"x":449,"y":602,"score":79,"level":0},{"x":489,"y":602,"score":30,"level":0},{"x":540,"y":602,"score":33,"level":0},{"x":766,"y":602,"score":198,"level":0},{"x":782,"y":602,"score":121,"level":0},{"x":791,"y":602,"score":32,"level":0},{"x":873,"y":602,"score":54,"level":0},{"x":981,"y":602,"score":86,"level":0},{"x":1001,"y":602,"score":77,"level":0},{"x":1114,"y":602,"score":27,"level":0},{"x":1143,"y":602,"score":38,"level":0},{"x":1174,"y":602,"score":163,"level":0},{"x":1236,"y":602,"score":127,"level":0},{"x":1245,"y":602,"score":117,"level":0},{"x":1403,"y":602,"score":168,"level":0},{"x":1421,"y":602,"score":53,"level":0},{"x":1437,"y":602,"score":54,"level":0},{"x":1445,"y":602,"score":41,"level":0},{"x":1467,"y":602,"score":36,"level":0},{"x":420,"y":603,"score":131,"level":0},{"x":426,"y":603,"score":29,"level":0},{"x":524,"y":603,"score":68,"level":0},{"x":566,"y":603,"score":100,"level":0},{"x":594,"y":603,"score":29,"level":0},{"x":604,"y":603,"score":28,"level":0},{"x":733,"y":603,"score":75,"level":0},{"x":806,"y":603,"score":60,"level":0},{"x":819,"y":603,"score":53,"level":0},{"x":857,"y":603,"score":112,"level":0},{"x":875,"y":603,"score":75,"level":0},{"x":884,"y":603,"score":90,"level":0},{"x":938,"y":603,"score":50,"level":0},{"x":964,"y":603,"score":44,"level":0},{"x":986,"y":603,"score":152,"level":0},{"x":1047,"y":603,"score":78,"level":0},{"x":1361,"y":603,"score":90,"level":0},{"x":1396,"y":603,"score":56,"level":0},{"x":1426,"y":603,"score":30,"level":0},{"x":1441,"y":603,"score":53,"level":0},{"x":1462,"y":603,"score":103,"level":0},{"x":474,"y":604,"score":35,"level":0},{"x":558,"y":604,"score":91,"level":0},{"x":575,"y":604,"score":65,"level":0},{"x":583,"y":604,"score":67,"level":0},{"x":711,"y":604,"score":57,"level":0},{"x":735,"y":604,"score":97,"level":0},{"x":747,"y":604,"score":32,"level":0},{"x":756,"y":604,"score":112,"level":0},{"x":772,"y":604,"score":161,"level":0},{"x":812,"y":604,"score":39,"level":0},{"x":837,"y":604,"score":180,"level":0},{"x":852,"y":604,"score":37,"level":0},{"x":920,"y":604,"score":151,"level":0},{"x":1003,"y":604,"score":30,"level":0},{"x":1032,"y":604,"score":87,"level":0},{"x":1076,"y":604,"score":85,"level":0},{"x":1088,"y":604,"score":54,"level":0},{"x":1126,"y":604,"score":64,"level":0},{"x":1179,"y":604,"score":63,"level":0},{"x":1288,"y":604,"score":78,"level":0},{"x":1300,"y":604,"score":201,"level":0},{"x":1373,"y":604,"score":45,"level":0},{"x":415,"y":605,"score":43,"level":0},{"x":432,"y":605,"score":68,"level":0},{"x":438,"y":605,"score":34,"level":0},{"x":444,"y":605,"score":30,"level":0},{"x":509,"y":605,"score":31,"level":0},{"x":649,"y":605,"score":66,"level":0},{"x":687,"y":605,"score":89,"level":0},{"x":694,"y":605,"score":106,"level":0},{"x":726,"y":605,"score":60,"level":0},{"x":818,"y":605,"score":64,"level":0},{"x":903,"y":605,"score":33,"level":0},{"x":933,"y":605,"score":182,"level":0},{"x":1050,"y":605,"score":55,"level":0},{"x":1070,"y":605,"score":126,"level":0},{"x":1190,"y":605,"score":102,"level":0},{"x":1275,"y":605,"score":97,"level":0},{"x":1318,"y":605,"score":33,"level":0},{"x":1327,"y":605,"score":46,"level":0},{"x":1352,"y":605,"score":100,"level":0},{"x":1381,"y":605,"score":42,"level":0},{"x":1456,"y":605,"score":141,"level":0},{"x":1483,"y":605,"score":66,"level":0},{"x":507,"y":606,"score":43,"level":0},{"x":586,"y":606,"score":32,"level":0},{"x":683,"y":606,"score":32,"level":0},{"x":719,"y":606,"score":95,"level":0},{"x":799,"y":606,"score":60,"level":0},{"x":842,"y":606,"score":77,"level":0},{"x":848,"y":606,"score":28,"level":0},{"x":853,"y":606,"score":28,"level":0},{"x":896,"y":606,"score":73,"level":0},{"x":983,"y":606,"score":33,"level":0},{"x":990,"y":606,"score":77,"level":0},{"x":1030,"y":606,"score":114,"level":0},{"x":1105,"y":606,"score":59,"level":0},{"x":1118,"y":606,"score":80,"level":0},{"x":1156,"y":606,"score":30,"level":0},{"x":1164,"y":606,"score":73,"level":0},{"x":1197,"y":606,"score":66,"level":0},{"x":1252,"y":606,"score":27,"level":0},{"x":1310,"y":606,"score":116,"level":0},{"x":1315,"y":606,"score":27,"level":0},{"x":1451,"y":606,"score":140,"level":0},{"x":1471,"y":606,"score":37,"level":0},{"x":575,"y":607,"score":54,"level":0},{"x":580,"y":607,"score":97,"level":0},{"x":652,"y":607,"score":68,"level":0},{"x":674,"y":607,"score":68,"level":0},{"x":730,"y":607,"score":66,"level":0},{"x":758,"y":607,"score":55,"level":0},{"x":855,"y":607,"score":40,"level":0},{"x":873,"y":607,"score":40,"level":0},{"x":981,"y":607,"score":51,"level":0},{"x":1010,"y":607,"score":134,"level":0},{"x":1016,"y":607,"score":41,"level":0},{"x":1025,"y":607,"score":46,"level":0},{"x":1045,"y":607,"score":27,"level":0},{"x":1065,"y":607,"score":50,"level":0},{"x":1306,"y":607,"score":41,"level":0},{"x":1364,"y":607,"score":135,"level":0},{"x":1387,"y":607,"score":78,"level":0},{"x":1424,"y":607,"score":80,"level":0},{"x":1445,"y":607,"score":72,"level":0},{"x":765,"y":608,"score":81,"level":0},{"x":784,"y":608,"score":29,"level":0},{"x":806,"y":608,"score":28,"level":0},{"x":857,"y":608,"score":41,"level":0},{"x":881,"y":608,"score":58,"level":0},{"x":894,"y":608,"score":27,"level":0},{"x":1113,"y":608,"score":62,"level":0},{"x":1147,"y":608,"score":29,"level":0},{"x":1159,"y":608,"score":128,"level":0},{"x":1183,"y":608,"score":55,"level":0},{"x":1213,"y":608,"score":54,"level":0},{"x":1259,"y":608,"score":124,"level":0},{"x":1359,"y":608,"score":118,"level":0},{"x":1371,"y":608,"score":61,"level":0},{"x":1431,"y":608,"score":62,"level":0},{"x":1448,"y":608,"score":43,"level":0},{"x":1451,"y":608,"score":106,"level":0},{"x":1472,"y":608,"score":55,"level":0},{"x":1478,"y":608,"score":142,"level":0},{"x":511,"y":609,"score":27,"level":0},{"x":520,"y":609,"score":36,"level":0},{"x":683,"y":609,"score":62,"level":0},{"x":723,"y":609,"score":38,"level":0},{"x":776,"y":609,"score":115,"level":0},{"x":793,"y":609,"score":55,"level":0},{"x":822,"y":609,"score":26,"level":0},{"x":828,"y":609,"score":96,"level":0},{"x":838,"y":609,"score":96,"level":0},{"x":846,"y":609,"score":27,"level":0},{"x":852,"y":609,"score":26,"level":0},{"x":868,"y":609,"score":68,"level":0},{"x":924,"y":609,"score":56,"level":0},{"x":969,"y":609,"score":107,"level":0},{"x":1035,"y":609,"score":137,"level":0},{"x":1054,"y":609,"score":39,"level":0},{"x":1059,"y":609,"score":118,"level":0},{"x":1065,"y":609,"score":80,"level":0},{"x":1099,"y":609,"score":86,"level":0},{"x":1126,"y":609,"score":125,"level":0},{"x":1166,"y":609,"score":26,"level":0},{"x":1169,"y":609,"score":33,"level":0},{"x":1222,"y":609,"score":112,"level":0},{"x":1243,"y":609,"score":228,"level":0},{"x":1272,"y":609,"score":36,"level":0},{"x":1300,"y":609,"score":104,"level":0},{"x":1316,"y":609,"score":49,"level":0},{"x":1334,"y":609,"score":66,"level":0},{"x":1375,"y":609,"score":38,"level":0},{"x":1396,"y":609,"score":86,"level":0},{"x":1412,"y":609,"score":99,"level":0},{"x":1435,"y":609,"score":48,"level":0},{"x":1461,"y":609,"score":215,"level":0},{"x":469,"y":610,"score":38,"level":0},{"x":569,"y":610,"score":31,"level":0},{"x":574,"y":610,"score":68,"level":0},{"x":632,"y":610,"score":30,"level":0},{"x":638,"y":610,"score":159,"level":0},{"x":695,"y":610,"score":49,"level":0},{"x":705,"y":610,"score":30,"level":0},{"x":737,"y":610,"score":43,"level":0},{"x":833,"y":610,"score":29,"level":0},{"x":910,"y":610,"score":85,"level":0},{"x":1049,"y":610,"score":84,"level":0},{"x":1088,"y":610,"score":177,"level":0},{"x":1191,"y":610,"score":75,"level":0},{"x":1220,"y":610,"score":29,"level":0},{"x":1322,"y":610,"score":126,"level":0},{"x":1330,"y":610,"score":31,"level":0},{"x":1340,"y":610,"score":29,"level":0},{"x":1355,"y":610,"score":43,"level":0},{"x":1384,"y":610,"score":32,"level":0},{"x":1440,"y":610,"score":96,"level":0},{"x":521,"y":611,"score":35,"level":0},{"x":552,"y":611,"score":36,"level":0},{"x":618,"y":611,"score":57,"level":0},{"x":670,"y":611,"score":38,"level":0},{"x":716,"y":611,"score":27,"level":0},{"x":753,"y":611,"score":42,"level":0},{"x":758,"y":611,"score":51,"level":0},{"x":788,"y":611,"score":36,"level":0},{"x":801,"y":611,"score":125,"level":0},{"x":839,"y":611,"score":104,"level":0},{"x":847,"y":611,"score":146,"level":0},{"x":897,"y":611,"score":38,"level":0},{"x":903,"y":611,"score":33,"level":0},{"x":917,"y":611,"score":82,"level":0},{"x":927,"y":611,"score":65,"level":0},{"x":977,"y":611,"score":50,"level":0},{"x":1119,"y":611,"score":30,"level":0},{"x":1139,"y":611,"score":133,"level":0},{"x":1144,"y":611,"score":84,"level":0},{"x":1241,"y":611,"score":101,"level":0},{"x":1277,"y":611,"score":28,"level":0},{"x":1420,"y":611,"score":107,"level":0},{"x":1449,"y":611,"score":51,"level":0},{"x":1461,"y":611,"score":150,"level":0},{"x":540,"y":612,"score":80,"level":0},{"x":647,"y":612,"score":64,"level":0},{"x":653,"y":612,"score":59,"level":0},{"x":690,"y":612,"score":117,"level":0},{"x":729,"y":612,"score":94,"level":0},{"x":762,"y":612,"score":66,"level":0},{"x":769,"y":612,"score":84,"level":0},{"x":779,"y":612,"score":59,"level":0},{"x":783,"y":612,"score":28,"level":0},{"x":815,"y":612,"score":53,"level":0},{"x":863,"y":612,"score":46,"level":0},{"x":929,"y":612,"score":100,"level":0},{"x":942,"y":612,"score":62,"level":0},{"x":947,"y":612,"score":58,"level":0},{"x":969,"y":612,"score":42,"level":0},{"x":974,"y":612,"score":62,"level":0},{"x":982,"y":612,"score":194,"level":0},{"x":1017,"y":612,"score":147,"level":0},{"x":1093,"y":612,"score":45,"level":0},{"x":1104,"y":612,"score":42,"level":0},{"x":1180,"y":612,"score":38,"level":0},{"x":1227,"y":612,"score":87,"level":0},{"x":1235,"y":612,"score":129,"level":0},{"x":1244,"y":612,"score":72,"level":0},{"x":1264,"y":612,"score":56,"level":0},{"x":1291,"y":612,"score":50,"level":0},{"x":1329,"y":612,"score":40,"level":0},{"x":1332,"y":612,"score":34,"level":0},{"x":1348,"y":612,"score":35,"level":0},{"x":1425,"y":612,"score":67,"level":0},{"x":449,"y":613,"score":90,"level":0},{"x":491,"y":613,"score":52,"level":0},{"x":528,"y":613,"score":36,"level":0},{"x":545,"y":613,"score":44,"level":0},{"x":569,"y":613,"score":35,"level":0},{"x":578,"y":613,"score":131,"level":0},{"x":588,"y":613,"score":47,"level":0},{"x":675,"y":613,"score":51,"level":0},{"x":726,"y":613,"score":34,"level":0},{"x":748,"y":613,"score":68,"level":0},{"x":767,"y":613,"score":53,"level":0},{"x":856,"y":613,"score":44,"level":0},{"x":892,"y":613,"score":83,"level":0},{"x":905,"y":613,"score":45,"level":0},{"x":955,"y":613,"score":52,"level":0},{"x":987,"y":613,"score":77,"level":0},{"x":1003,"y":613,"score":127,"level":0},{"x":1027,"y":613,"score":110,"level":0},{"x":1074,"y":613,"score":35,"level":0},{"x":1169,"y":613,"score":139,"level":0},{"x":1185,"y":613,"score":28,"level":0},{"x":1214,"y":613,"score":100,"level":0},{"x":1312,"y":613,"score":126,"level":0},{"x":1336,"y":613,"score":75,"level":0},{"x":1353,"y":613,"score":37,"level":0},{"x":1371,"y":613,"score":33,"level":0},{"x":1389,"y":613,"score":130,"level":0},{"x":1405,"y":613,"score":78,"level":0},{"x":1432,"y":613,"score":80,"level":0},{"x":1446,"y":613,"score":135,"level":0},{"x":1490,"y":613,"score":37,"level":0},{"x":420,"y":614,"score":145,"level":0},{"x":484,"y":614,"score":117,"level":0},{"x":496,"y":614,"score":39,"level":0},{"x":510,"y":614,"score":182,"level":0},{"x":516,"y":614,"score":77,"level":0},{"x":554,"y":614,"score":28,"level":0},{"x":698,"y":614,"score":119,"level":0},{"x":743,"y":614,"score":42,"level":0},{"x":765,"y":614,"score":99,"level":0},{"x":823,"y":614,"score":118,"level":0},{"x":830,"y":614,"score":157,"level":0},{"x":879,"y":614,"score":70,"level":0},{"x":941,"y":614,"score":95,"level":0},{"x":968,"y":614,"score":48,"level":0},{"x":1035,"y":614,"score":115,"level":0},{"x":1123,"y":614,"score":63,"level":0},{"x":1194,"y":614,"score":67,"level":0},{"x":1300,"y":614,"score":161,"level":0},{"x":1396,"y":614,"score":54,"level":0},{"x":1417,"y":614,"score":60,"level":0},{"x":1444,"y":614,"score":159,"level":0},{"x":1456,"y":614,"score":55,"level":0},{"x":1472,"y":614,"score":61,"level":0},{"x":583,"y":615,"score":140,"level":0},{"x":671,"y":615,"score":64,"level":0},{"x":711,"y":615,"score":111,"level":0},{"x":738,"y":615,"score":95,"level":0},{"x":845,"y":615,"score":32,"level":0},{"x":859,"y":615,"score":42,"level":0},{"x":910,"y":615,"score":91,"level":0},{"x":923,"y":615,"score":101,"level":0},{"x":957,"y":615,"score":95,"level":0},{"x":1032,"y":615,"score":124,"level":0},{"x":1058,"y":615,"score":125,"level":0},{"x":1064,"y":615,"score":120,"level":0},{"x":1069,"y":615,"score":90,"level":0},{"x":1098,"y":615,"score":57,"level":0},{"x":1132,"y":615,"score":192,"level":0},{"x":1162,"y":615,"score":72,"level":0},{"x":1356,"y":615,"score":126,"level":0},{"x":1411,"y":615,"score":197,"level":0},{"x":1423,"y":615,"score":33,"level":0},{"x":1439,"y":615,"score":63,"level":0},{"x":1465,"y":615,"score":116,"level":0},{"x":1484,"y":615,"score":58,"level":0},{"x":439,"y":616,"score":94,"level":0},{"x":499,"y":616,"score":58,"level":0},{"x":504,"y":616,"score":58,"level":0},{"x":663,"y":616,"score":179,"level":0},{"x":676,"y":616,"score":29,"level":0},{"x":687,"y":616,"score":104,"level":0},{"x":744,"y":616,"score":43,"level":0},{"x":789,"y":616,"score":199,"level":0},{"x":799,"y":616,"score":45,"level":0},{"x":851,"y":616,"score":79,"level":0},{"x":950,"y":616,"score":103,"level":0},{"x":1051,"y":616,"score":50,"level":0},{"x":1117,"y":616,"score":74,"level":0},{"x":1140,"y":616,"score":271,"level":0},{"x":1148,"y":616,"score":74,"level":0},{"x":1156,"y":616,"score":62,"level":0},{"x":1175,"y":616,"score":220,"level":0},{"x":1200,"y":616,"score":26,"level":0},{"x":1221,"y":616,"score":50,"level":0},{"x":1234,"y":616,"score":109,"level":0},{"x":1245,"y":616,"score":29,"level":0},{"x":1283,"y":616,"score":38,"level":0},{"x":1298,"y":616,"score":221,"level":0},{"x":1324,"y":616,"score":63,"level":0},{"x":1391,"y":616,"score":127,"level":0},{"x":561,"y":617,"score":30,"level":0},{"x":615,"y":617,"score":26,"level":0},{"x":638,"y":617,"score":74,"level":0},{"x":647,"y":617,"score":143,"level":0},{"x":652,"y":617,"score":174,"level":0},{"x":718,"y":617,"score":154,"level":0},{"x":783,"y":617,"score":124,"level":0},{"x":802,"y":617,"score":104,"level":0},{"x":815,"y":617,"score":57,"level":0},{"x":842,"y":617,"score":30,"level":0},{"x":863,"y":617,"score":51,"level":0},{"x":896,"y":617,"score":58,"level":0},{"x":931,"y":617,"score":171,"level":0},{"x":936,"y":617,"score":52,"level":0},{"x":1046,"y":617,"score":49,"level":0},{"x":1082,"y":617,"score":48,"level":0},{"x":1166,"y":617,"score":150,"level":0},{"x":1198,"y":617,"score":50,"level":0},{"x":1243,"y":617,"score":57,"level":0},{"x":1290,"y":617,"score":124,"level":0},{"x":1422,"y":617,"score":39,"level":0},{"x":1428,"y":617,"score":58,"level":0},{"x":1442,"y":617,"score":124,"level":0},{"x":1449,"y":617,"score":162,"level":0},{"x":1460,"y":617,"score":50,"level":0},{"x":491,"y":618,"score":40,"level":0},{"x":526,"y":618,"score":40,"level":0},{"x":547,"y":618,"score":92,"level":0},{"x":668,"y":618,"score":49,"level":0},{"x":740,"y":618,"score":67,"level":0},{"x":748,"y":618,"score":70,"level":0},{"x":773,"y":618,"score":71,"level":0},{"x":820,"y":618,"score":120,"level":0},{"x":826,"y":618,"score":80,"level":0},{"x":900,"y":618,"score":70,"level":0},{"x":982,"y":618,"score":48,"level":0},{"x":1033,"y":618,"score":188,"level":0},{"x":1092,"y":618,"score":34,"level":0},{"x":1184,"y":618,"score":81,"level":0},{"x":1214,"y":618,"score":26,"level":0},{"x":1252,"y":618,"score":40,"level":0},{"x":1255,"y":618,"score":55,"level":0},{"x":1306,"y":618,"score":122,"level":0},{"x":1405,"y":618,"score":63,"level":0},{"x":1434,"y":618,"score":107,"level":0},{"x":1480,"y":618,"score":98,"level":0},{"x":404,"y":619,"score":134,"level":0},{"x":532,"y":619,"score":104,"level":0},{"x":556,"y":619,"score":66,"level":0},{"x":569,"y":619,"score":46,"level":0},{"x":634,"y":619,"score":107,"level":0},{"x":657,"y":619,"score":66,"level":0},{"x":696,"y":619,"score":81,"level":0},{"x":786,"y":619,"score":137,"level":0},{"x":944,"y":619,"score":76,"level":0},{"x":988,"y":619,"score":46,"level":0},{"x":1119,"y":619,"score":74,"level":0},{"x":1124,"y":619,"score":133,"level":0},{"x":1157,"y":619,"score":104,"level":0},{"x":1188,"y":619,"score":142,"level":0},{"x":1193,"y":619,"score":155,"level":0},{"x":1260,"y":619,"score":130,"level":0},{"x":1263,"y":619,"score":90,"level":0},{"x":1275,"y":619,"score":243,"level":0},{"x":1294,"y":619,"score":104,"level":0},{"x":1333,"y":619,"score":38,"level":0},{"x":1372,"y":619,"score":41,"level":0},{"x":1397,"y":619,"score":45,"level":0},{"x":1415,"y":619,"score":31,"level":0},{"x":1456,"y":619,"score":144,"level":0},{"x":1489,"y":619,"score":32,"level":0},{"x":397,"y":620,"score":165,"level":0},{"x":598,"y":620,"score":26,"level":0},{"x":690,"y":620,"score":87,"level":0},{"x":765,"y":620,"score":98,"level":0},{"x":875,"y":620,"score":40,"level":0},{"x":883,"y":620,"score":38,"level":0},{"x":1004,"y":620,"score":90,"level":0},{"x":1025,"y":620,"score":34,"level":0},{"x":1039,"y":620,"score":136,"level":0},{"x":1056,"y":620,"score":38,"level":0},{"x":1116,"y":620,"score":32,"level":0},{"x":1133,"y":620,"score":106,"level":0},{"x":1238,"y":620,"score":57,"level":0},{"x":1270,"y":620,"score":119,"level":0},{"x":1362,"y":620,"score":136,"level":0},{"x":1371,"y":620,"score":73,"level":0},{"x":1378,"y":620,"score":78,"level":0},{"x":1388,"y":620,"score":86,"level":0},{"x":1463,"y":620,"score":91,"level":0},{"x":469,"y":621,"score":48,"level":0},{"x":475,"y":621,"score":142,"level":0},{"x":495,"y":621,"score":111,"level":0},{"x":500,"y":621,"score":30,"level":0},{"x":540,"y":621,"score":56,"level":0},{"x":674,"y":621,"score":48,"level":0},{"x":806,"y":621,"score":60,"level":0},{"x":870,"y":621,"score":51,"level":0},{"x":888,"y":621,"score":45,"level":0},{"x":908,"y":621,"score":86,"level":0},{"x":928,"y":621,"score":49,"level":0},{"x":1028,"y":621,"score":44,"level":0},{"x":1034,"y":621,"score":159,"level":0},{"x":1078,"y":621,"score":48,"level":0},{"x":1105,"y":621,"score":132,"level":0},{"x":1112,"y":621,"score":105,"level":0},{"x":1144,"y":621,"score":39,"level":0},{"x":1153,"y":621,"score":40,"level":0},{"x":1212,"y":621,"score":58,"level":0},{"x":1227,"y":621,"score":107,"level":0},{"x":1233,"y":621,"score":71,"level":0},{"x":1284,"y":621,"score":83,"level":0},{"x":427,"y":622,"score":82,"level":0},{"x":450,"y":622,"score":69,"level":0},{"x":561,"y":622,"score":115,"level":0},{"x":578,"y":622,"score":51,"level":0},{"x":593,"y":622,"score":61,"level":0},{"x":635,"y":622,"score":44,"level":0},{"x":646,"y":622,"score":104,"level":0},{"x":653,"y":622,"score":87,"level":0},{"x":756,"y":622,"score":60,"level":0},{"x":770,"y":622,"score":49,"level":0},{"x":792,"y":622,"score":168,"level":0},{"x":802,"y":622,"score":32,"level":0},{"x":852,"y":622,"score":108,"level":0},{"x":867,"y":622,"score":66,"level":0},{"x":913,"y":622,"score":98,"level":0},{"x":920,"y":622,"score":87,"level":0},{"x":943,"y":622,"score":49,"level":0},{"x":960,"y":622,"score":50,"level":0},{"x":1011,"y":622,"score":144,"level":0},{"x":1052,"y":622,"score":57,"level":0},{"x":1057,"y":622,"score":33,"level":0},{"x":1139,"y":622,"score":40,"level":0},{"x":1176,"y":622,"score":148,"level":0},{"x":1310,"y":622,"score":144,"level":0},{"x":1329,"y":622,"score":34,"level":0},{"x":1351,"y":622,"score":96,"level":0},{"x":1385,"y":622,"score":57,"level":0},{"x":1425,"y":622,"score":89,"level":0},{"x":1440,"y":622,"score":65,"level":0},{"x":1446,"y":622,"score":103,"level":0},{"x":1451,"y":622,"score":60,"level":0},{"x":1458,"y":622,"score":107,"level":0},{"x":1469,"y":622,"score":130,"level":0},{"x":382,"y":623,"score":55,"level":0},{"x":387,"y":623,"score":72,"level":0},{"x":413,"y":623,"score":134,"level":0},{"x":422,"y":623,"score":39,"level":0},{"x":433,"y":623,"score":131,"level":0},{"x":516,"y":623,"score":55,"level":0},{"x":527,"y":623,"score":82,"level":0},{"x":544,"y":623,"score":75,"level":0},{"x":703,"y":623,"score":51,"level":0},{"x":740,"y":623,"score":39,"level":0},{"x":819,"y":623,"score":103,"level":0},{"x":825,"y":623,"score":62,"level":0},{"x":833,"y":623,"score":44,"level":0},{"x":873,"y":623,"score":42,"level":0},{"x":981,"y":623,"score":41,"level":0},{"x":996,"y":623,"score":88,"level":0},{"x":1182,"y":623,"score":61,"level":0},{"x":1200,"y":623,"score":103,"level":0},{"x":1205,"y":623,"score":34,"level":0},{"x":1217,"y":623,"score":81,"level":0},{"x":1219,"y":623,"score":76,"level":0},{"x":1222,"y":623,"score":78,"level":0},{"x":1224,"y":623,"score":65,"level":0},{"x":1243,"y":623,"score":182,"level":0},{"x":1252,"y":623,"score":73,"level":0},{"x":1257,"y":623,"score":48,"level":0},{"x":1304,"y":623,"score":89,"level":0},{"x":1326,"y":623,"score":35,"level":0},{"x":1358,"y":623,"score":86,"level":0},{"x":1393,"y":623,"score":104,"level":0},{"x":1406,"y":623,"score":112,"level":0},{"x":1437,"y":623,"score":80,"level":0},{"x":1480,"y":623,"score":89,"level":0},{"x":533,"y":624,"score":61,"level":0},{"x":637,"y":624,"score":44,"level":0},{"x":751,"y":624,"score":89,"level":0},{"x":775,"y":624,"score":75,"level":0},{"x":805,"y":624,"score":35,"level":0},{"x":934,"y":624,"score":36,"level":0},{"x":1051,"y":624,"score":66,"level":0},{"x":1058,"y":624,"score":36,"level":0},{"x":1159,"y":624,"score":31,"level":0},{"x":1168,"y":624,"score":133,"level":0},{"x":1193,"y":624,"score":68,"level":0},{"x":1295,"y":624,"score":260,"level":0},{"x":1375,"y":624,"score":84,"level":0},{"x":1442,"y":624,"score":38,"level":0},{"x":1487,"y":624,"score":47,"level":0},{"x":398,"y":625,"score":113,"level":0},{"x":460,"y":625,"score":30,"level":0},{"x":634,"y":625,"score":30,"level":0},{"x":675,"y":625,"score":46,"level":0},{"x":779,"y":625,"score":60,"level":0},{"x":861,"y":625,"score":92,"level":0},{"x":878,"y":625,"score":31,"level":0},{"x":884,"y":625,"score":47,"level":0},{"x":894,"y":625,"score":133,"level":0},{"x":927,"y":625,"score":155,"level":0},{"x":956,"y":625,"score":98,"level":0},{"x":1044,"y":625,"score":61,"level":0},{"x":1071,"y":625,"score":68,"level":0},{"x":1079,"y":625,"score":35,"level":0},{"x":1088,"y":625,"score":82,"level":0},{"x":1097,"y":625,"score":94,"level":0},{"x":1197,"y":625,"score":44,"level":0},{"x":1237,"y":625,"score":63,"level":0},{"x":1269,"y":625,"score":29,"level":0},{"x":1333,"y":625,"score":112,"level":0},{"x":1371,"y":625,"score":32,"level":0},{"x":1461,"y":625,"score":45,"level":0},{"x":476,"y":626,"score":202,"level":0},{"x":491,"y":626,"score":26,"level":0},{"x":542,"y":626,"score":27,"level":0},{"x":548,"y":626,"score":33,"level":0},{"x":661,"y":626,"score":72,"level":0},{"x":690,"y":626,"score":54,"level":0},{"x":754,"y":626,"score":44,"level":0},{"x":784,"y":626,"score":42,"level":0},{"x":789,"y":626,"score":46,"level":0},{"x":806,"y":626,"score":140,"level":0},{"x":958,"y":626,"score":67,"level":0},{"x":975,"y":626,"score":47,"level":0},{"x":1006,"y":626,"score":36,"level":0},{"x":1017,"y":626,"score":188,"level":0},{"x":1023,"y":626,"score":109,"level":0},{"x":1034,"y":626,"score":63,"level":0},{"x":1113,"y":626,"score":104,"level":0},{"x":1128,"y":626,"score":83,"level":0},{"x":1212,"y":626,"score":52,"level":0},{"x":1228,"y":626,"score":122,"level":0},{"x":1257,"y":626,"score":41,"level":0},{"x":1280,"y":626,"score":64,"level":0},{"x":1320,"y":626,"score":42,"level":0},{"x":1389,"y":626,"score":46,"level":0},{"x":1395,"y":626,"score":52,"level":0},{"x":1415,"y":626,"score":239,"level":0},{"x":1430,"y":626,"score":119,"level":0},{"x":1435,"y":626,"score":28,"level":0},{"x":1446,"y":626,"score":104,"level":0},{"x":1472,"y":626,"score":92,"level":0},{"x":520,"y":627,"score":45,"level":0},{"x":579,"y":627,"score":47,"level":0},{"x":861,"y":627,"score":74,"level":0},{"x":909,"y":627,"score":83,"level":0},{"x":960,"y":627,"score":41,"level":0},{"x":999,"y":627,"score":44,"level":0},{"x":1038,"y":627,"score":80,"level":0},{"x":1138,"y":627,"score":59,"level":0},{"x":1144,"y":627,"score":130,"level":0},{"x":1232,"y":627,"score":142,"level":0},{"x":1263,"y":627,"score":27,"level":0},{"x":1284,"y":627,"score":67,"level":0},{"x":1317,"y":627,"score":62,"level":0},{"x":1328,"y":627,"score":33,"level":0},{"x":1354,"y":627,"score":116,"level":0},{"x":1367,"y":627,"score":149,"level":0},{"x":1373,"y":627,"score":41,"level":0},{"x":1382,"y":627,"score":39,"level":0},{"x":1409,"y":627,"score":38,"level":0},{"x":1453,"y":627,"score":110,"level":0},{"x":1470,"y":627,"score":107,"level":0},{"x":1490,"y":627,"score":60,"level":0},{"x":387,"y":628,"score":35,"level":0},{"x":406,"y":628,"score":73,"level":0},{"x":437,"y":628,"score":118,"level":0},{"x":444,"y":628,"score":155,"level":0},{"x":470,"y":628,"score":28,"level":0},{"x":492,"y":628,"score":48,"level":0},{"x":531,"y":628,"score":31,"level":0},{"x":545,"y":628,"score":64,"level":0},{"x":638,"y":628,"score":52,"level":0},{"x":681,"y":628,"score":122,"level":0},{"x":701,"y":628,"score":32,"level":0},{"x":727,"y":628,"score":62,"level":0},{"x":837,"y":628,"score":37,"level":0},{"x":883,"y":628,"score":37,"level":0},{"x":917,"y":628,"score":55,"level":0},{"x":984,"y":628,"score":117,"level":0},{"x":994,"y":628,"score":46,"level":0},{"x":1108,"y":628,"score":141,"level":0},{"x":1132,"y":628,"score":102,"level":0},{"x":1155,"y":628,"score":73,"level":0},{"x":1179,"y":628,"score":36,"level":0},{"x":1198,"y":628,"score":50,"level":0},{"x":1222,"y":628,"score":79,"level":0},{"x":1251,"y":628,"score":63,"level":0},{"x":1260,"y":628,"score":65,"level":0},{"x":1267,"y":628,"score":29,"level":0},{"x":1340,"y":628,"score":82,"level":0},{"x":1358,"y":628,"score":204,"level":0},{"x":1440,"y":628,"score":64,"level":0},{"x":1455,"y":628,"score":60,"level":0},{"x":1462,"y":628,"score":29,"level":0},{"x":1480,"y":628,"score":108,"level":0},{"x":389,"y":629,"score":48,"level":0},{"x":496,"y":629,"score":58,"level":0},{"x":523,"y":629,"score":28,"level":0},{"x":568,"y":629,"score":46,"level":0},{"x":656,"y":629,"score":61,"level":0},{"x":763,"y":629,"score":64,"level":0},{"x":804,"y":629,"score":74,"level":0},{"x":807,"y":629,"score":31,"level":0},{"x":810,"y":629,"score":28,"level":0},{"x":835,"y":629,"score":42,"level":0},{"x":871,"y":629,"score":209,"level":0},{"x":889,"y":629,"score":215,"level":0},{"x":936,"y":629,"score":164,"level":0},{"x":970,"y":629,"score":31,"level":0},{"x":978,"y":629,"score":52,"level":0},{"x":1012,"y":629,"score":77,"level":0},{"x":1032,"y":629,"score":63,"level":0},{"x":1175,"y":629,"score":86,"level":0},{"x":1184,"y":629,"score":52,"level":0},{"x":1216,"y":629,"score":84,"level":0},{"x":1255,"y":629,"score":100,"level":0},{"x":1295,"y":629,"score":57,"level":0},{"x":1308,"y":629,"score":47,"level":0},{"x":451,"y":630,"score":108,"level":0},{"x":526,"y":630,"score":52,"level":0},{"x":531,"y":630,"score":51,"level":0},{"x":536,"y":630,"score":107,"level":0},{"x":687,"y":630,"score":70,"level":0},{"x":693,"y":630,"score":87,"level":0},{"x":779,"y":630,"score":26,"level":0},{"x":901,"y":630,"score":135,"level":0},{"x":943,"y":630,"score":60,"level":0},{"x":956,"y":630,"score":47,"level":0},{"x":1007,"y":630,"score":31,"level":0},{"x":1021,"y":630,"score":186,"level":0},{"x":1026,"y":630,"score":185,"level":0},{"x":1050,"y":630,"score":127,"level":0},{"x":1059,"y":630,"score":64,"level":0},{"x":1076,"y":630,"score":94,"level":0},{"x":1088,"y":630,"score":164,"level":0},{"x":1100,"y":630,"score":50,"level":0},{"x":1168,"y":630,"score":103,"level":0},{"x":1303,"y":630,"score":73,"level":0},{"x":1349,"y":630,"score":248,"level":0},{"x":1433,"y":630,"score":28,"level":0},{"x":402,"y":631,"score":98,"level":0},{"x":426,"y":631,"score":65,"level":0},{"x":486,"y":631,"score":34,"level":0},{"x":539,"y":631,"score":89,"level":0},{"x":618,"y":631,"score":72,"level":0},{"x":707,"y":631,"score":26,"level":0},{"x":755,"y":631,"score":63,"level":0},{"x":786,"y":631,"score":39,"level":0},{"x":803,"y":631,"score":108,"level":0},{"x":862,"y":631,"score":88,"level":0},{"x":875,"y":631,"score":49,"level":0},{"x":1110,"y":631,"score":82,"level":0},{"x":1113,"y":631,"score":35,"level":0},{"x":1200,"y":631,"score":62,"level":0},{"x":1216,"y":631,"score":90,"level":0},{"x":1226,"y":631,"score":40,"level":0},{"x":1243,"y":631,"score":98,"level":0},{"x":1263,"y":631,"score":61,"level":0},{"x":1265,"y":631,"score":56,"level":0},{"x":1276,"y":631,"score":122,"level":0},{"x":1404,"y":631,"score":99,"level":0},{"x":1436,"y":631,"score":32,"level":0},{"x":1464,"y":631,"score":35,"level":0},{"x":1484,"y":631,"score":196,"level":0},{"x":499,"y":632,"score":76,"level":0},{"x":509,"y":632,"score":68,"level":0},{"x":516,"y":632,"score":33,"level":0},{"x":568,"y":632,"score":38,"level":0},{"x":634,"y":632,"score":37,"level":0},{"x":671,"y":632,"score":91,"level":0},{"x":739,"y":632,"score":44,"level":0},{"x":993,"y":632,"score":34,"level":0},{"x":1063,"y":632,"score":74,"level":0},{"x":1081,"y":632,"score":126,"level":0},{"x":1163,"y":632,"score":38,"level":0},{"x":1195,"y":632,"score":39,"level":0},{"x":1210,"y":632,"score":72,"level":0},{"x":1251,"y":632,"score":91,"level":0},{"x":1318,"y":632,"score":61,"level":0},{"x":1327,"y":632,"score":197,"level":0},{"x":1339,"y":632,"score":90,"level":0},{"x":1373,"y":632,"score":64,"level":0},{"x":1376,"y":632,"score":62,"level":0},{"x":1444,"y":632,"score":77,"level":0},{"x":1449,"y":632,"score":28,"level":0},{"x":1453,"y":632,"score":28,"level":0},{"x":1477,"y":632,"score":149,"level":0},{"x":410,"y":633,"score":118,"level":0},{"x":437,"y":633,"score":36,"level":0},{"x":475,"y":633,"score":79,"level":0},{"x":484,"y":633,"score":62,"level":0},{"x":521,"y":633,"score":27,"level":0},{"x":653,"y":633,"score":62,"level":0},{"x":718,"y":633,"score":58,"level":0},{"x":724,"y":633,"score":112,"level":0},{"x":782,"y":633,"score":28,"level":0},{"x":933,"y":633,"score":53,"level":0},{"x":952,"y":633,"score":104,"level":0},{"x":985,"y":633,"score":44,"level":0},{"x":1000,"y":633,"score":41,"level":0},{"x":1009,"y":633,"score":28,"level":0},{"x":1125,"y":633,"score":198,"level":0},{"x":1133,"y":633,"score":36,"level":0},{"x":1145,"y":633,"score":58,"level":0},{"x":1179,"y":633,"score":85,"level":0},{"x":1379,"y":633,"score":61,"level":0},{"x":1434,"y":633,"score":35,"level":0},{"x":1457,"y":633,"score":45,"level":0},{"x":1460,"y":633,"score":31,"level":0},{"x":1470,"y":633,"score":139,"level":0},{"x":383,"y":634,"score":74,"level":0},{"x":397,"y":634,"score":100,"level":0},{"x":419,"y":634,"score":145,"level":0},{"x":444,"y":634,"score":170,"level":0},{"x":624,"y":634,"score":56,"level":0},{"x":640,"y":634,"score":69,"level":0},{"x":660,"y":634,"score":87,"level":0},{"x":662,"y":634,"score":92,"level":0},{"x":675,"y":634,"score":61,"level":0},{"x":680,"y":634,"score":82,"level":0},{"x":735,"y":634,"score":39,"level":0},{"x":776,"y":634,"score":47,"level":0},{"x":792,"y":634,"score":41,"level":0},{"x":809,"y":634,"score":74,"level":0},{"x":847,"y":634,"score":39,"level":0},{"x":916,"y":634,"score":125,"level":0},{"x":940,"y":634,"score":37,"level":0},{"x":966,"y":634,"score":74,"level":0},{"x":1005,"y":634,"score":32,"level":0},{"x":1015,"y":634,"score":61,"level":0},{"x":1072,"y":634,"score":40,"level":0},{"x":1092,"y":634,"score":99,"level":0},{"x":1147,"y":634,"score":60,"level":0},{"x":1183,"y":634,"score":58,"level":0},{"x":1366,"y":634,"score":68,"level":0},{"x":1372,"y":634,"score":45,"level":0},{"x":1390,"y":634,"score":40,"level":0},{"x":1409,"y":634,"score":26,"level":0},{"x":1442,"y":634,"score":63,"level":0},{"x":399,"y":635,"score":106,"level":0},{"x":405,"y":635,"score":50,"level":0},{"x":484,"y":635,"score":137,"level":0},{"x":502,"y":635,"score":40,"level":0},{"x":532,"y":635,"score":60,"level":0},{"x":630,"y":635,"score":26,"level":0},{"x":645,"y":635,"score":112,"level":0},{"x":654,"y":635,"score":39,"level":0},{"x":693,"y":635,"score":31,"level":0},{"x":765,"y":635,"score":74,"level":0},{"x":853,"y":635,"score":152,"level":0},{"x":875,"y":635,"score":44,"level":0},{"x":900,"y":635,"score":140,"level":0},{"x":946,"y":635,"score":101,"level":0},{"x":995,"y":635,"score":52,"level":0},{"x":1026,"y":635,"score":94,"level":0},{"x":1057,"y":635,"score":63,"level":0},{"x":1114,"y":635,"score":176,"level":0},{"x":1119,"y":635,"score":161,"level":0},{"x":1185,"y":635,"score":167,"level":0},{"x":1222,"y":635,"score":43,"level":0},{"x":1225,"y":635,"score":49,"level":0},{"x":1232,"y":635,"score":83,"level":0},{"x":1316,"y":635,"score":142,"level":0},{"x":1344,"y":635,"score":83,"level":0},{"x":1349,"y":635,"score":216,"level":0},{"x":1402,"y":635,"score":107,"level":0},{"x":380,"y":636,"score":79,"level":0},{"x":427,"y":636,"score":38,"level":0},{"x":429,"y":636,"score":29,"level":0},{"x":448,"y":636,"score":29,"level":0},{"x":587,"y":636,"score":39,"level":0},{"x":595,"y":636,"score":34,"level":0},{"x":640,"y":636,"score":76,"level":0},{"x":699,"y":636,"score":88,"level":0},{"x":704,"y":636,"score":157,"level":0},{"x":710,"y":636,"score":62,"level":0},{"x":715,"y":636,"score":46,"level":0},{"x":767,"y":636,"score":91,"level":0},{"x":773,"y":636,"score":45,"level":0},{"x":855,"y":636,"score":106,"level":0},{"x":867,"y":636,"score":50,"level":0},{"x":891,"y":636,"score":130,"level":0},{"x":925,"y":636,"score":92,"level":0},{"x":952,"y":636,"score":85,"level":0},{"x":989,"y":636,"score":114,"level":0},{"x":1003,"y":636,"score":66,"level":0},{"x":1040,"y":636,"score":113,"level":0},{"x":1049,"y":636,"score":122,"level":0},{"x":1087,"y":636,"score":85,"level":0},{"x":1239,"y":636,"score":57,"level":0},{"x":1254,"y":636,"score":77,"level":0},{"x":1266,"y":636,"score":62,"level":0},{"x":1276,"y":636,"score":193,"level":0},{"x":1307,"y":636,"score":322,"level":0},{"x":1404,"y":636,"score":39,"level":0},{"x":1409,"y":636,"score":42,"level":0},{"x":1424,"y":636,"score":56,"level":0},{"x":1441,"y":636,"score":67,"level":0},{"x":377,"y":637,"score":160,"level":0},{"x":389,"y":637,"score":27,"level":0},{"x":456,"y":637,"score":31,"level":0},{"x":507,"y":637,"score":178,"level":0},{"x":635,"y":637,"score":26,"level":0},{"x":671,"y":637,"score":36,"level":0},{"x":739,"y":637,"score":49,"level":0},{"x":741,"y":637,"score":43,"level":0},{"x":779,"y":637,"score":33,"level":0},{"x":799,"y":637,"score":86,"level":0},{"x":802,"y":637,"score":55,"level":0},{"x":814,"y":637,"score":51,"level":0},{"x":858,"y":637,"score":31,"level":0},{"x":960,"y":637,"score":95,"level":0},{"x":1032,"y":637,"score":199,"level":0},{"x":1063,"y":637,"score":105,"level":0},{"x":1070,"y":637,"score":33,"level":0},{"x":1072,"y":637,"score":50,"level":0},{"x":1101,"y":637,"score":28,"level":0},{"x":1139,"y":637,"score":34,"level":0},{"x":1176,"y":637,"score":69,"level":0},{"x":1214,"y":637,"score":29,"level":0},{"x":1219,"y":637,"score":58,"level":0},{"x":1244,"y":637,"score":128,"level":0},{"x":1252,"y":637,"score":120,"level":0},{"x":1282,"y":637,"score":125,"level":0},{"x":1321,"y":637,"score":30,"level":0},{"x":1327,"y":637,"score":33,"level":0},{"x":1334,"y":637,"score":84,"level":0},{"x":1421,"y":637,"score":68,"level":0},{"x":1445,"y":637,"score":42,"level":0},{"x":1450,"y":637,"score":36,"level":0},{"x":1464,"y":637,"score":96,"level":0},{"x":1476,"y":637,"score":163,"level":0},{"x":686,"y":638,"score":29,"level":0},{"x":761,"y":638,"score":26,"level":0},{"x":794,"y":638,"score":35,"level":0},{"x":823,"y":638,"score":29,"level":0},{"x":849,"y":638,"score":94,"level":0},{"x":878,"y":638,"score":111,"level":0},{"x":883,"y":638,"score":148,"level":0},{"x":999,"y":638,"score":46,"level":0},{"x":1079,"y":638,"score":79,"level":0},{"x":1106,"y":638,"score":26,"level":0},{"x":1129,"y":638,"score":39,"level":0},{"x":1154,"y":638,"score":89,"level":0},{"x":1186,"y":638,"score":47,"level":0},{"x":1203,"y":638,"score":105,"level":0},{"x":1295,"y":638,"score":96,"level":0},{"x":1360,"y":638,"score":39,"level":0},{"x":1368,"y":638,"score":56,"level":0},{"x":1370,"y":638,"score":34,"level":0},{"x":1378,"y":638,"score":116,"level":0},{"x":1396,"y":638,"score":137,"level":0},{"x":1425,"y":638,"score":57,"level":0},{"x":1431,"y":638,"score":78,"level":0},{"x":1436,"y":638,"score":55,"level":0},{"x":1460,"y":638,"score":126,"level":0},{"x":1467,"y":638,"score":67,"level":0},{"x":467,"y":639,"score":78,"level":0},{"x":645,"y":639,"score":47,"level":0},{"x":661,"y":639,"score":83,"level":0},{"x":667,"y":639,"score":55,"level":0},{"x":756,"y":639,"score":82,"level":0},{"x":929,"y":639,"score":63,"level":0},{"x":940,"y":639,"score":116,"level":0},{"x":956,"y":639,"score":56,"level":0},{"x":979,"y":639,"score":50,"level":0},{"x":1014,"y":639,"score":108,"level":0},{"x":1071,"y":639,"score":41,"level":0},{"x":1091,"y":639,"score":37,"level":0},{"x":1102,"y":639,"score":44,"level":0},{"x":1165,"y":639,"score":43,"level":0},{"x":1191,"y":639,"score":177,"level":0},{"x":1211,"y":639,"score":79,"level":0},{"x":1230,"y":639,"score":88,"level":0},{"x":1268,"y":639,"score":149,"level":0},{"x":1331,"y":639,"score":36,"level":0},{"x":1389,"y":639,"score":75,"level":0},{"x":1413,"y":639,"score":29,"level":0},{"x":1481,"y":639,"score":100,"level":0},{"x":403,"y":640,"score":58,"level":0},{"x":405,"y":640,"score":49,"level":0},{"x":425,"y":640,"score":36,"level":0},{"x":479,"y":640,"score":70,"level":0},{"x":528,"y":640,"score":28,"level":0},{"x":650,"y":640,"score":73,"level":0},{"x":678,"y":640,"score":66,"level":0},{"x":711,"y":640,"score":45,"level":0},{"x":719,"y":640,"score":72,"level":0},{"x":728,"y":640,"score":123,"level":0},{"x":830,"y":640,"score":97,"level":0},{"x":875,"y":640,"score":75,"level":0},{"x":900,"y":640,"score":81,"level":0},{"x":987,"y":640,"score":102,"level":0},{"x":1009,"y":640,"score":42,"level":0},{"x":1017,"y":640,"score":77,"level":0},{"x":1054,"y":640,"score":67,"level":0},{"x":1067,"y":640,"score":144,"level":0},{"x":1111,"y":640,"score":32,"level":0},{"x":1115,"y":640,"score":49,"level":0},{"x":1125,"y":640,"score":102,"level":0},{"x":1135,"y":640,"score":69,"level":0},{"x":1154,"y":640,"score":40,"level":0},{"x":1179,"y":640,"score":108,"level":0},{"x":1199,"y":640,"score":68,"level":0},{"x":1239,"y":640,"score":93,"level":0},{"x":1315,"y":640,"score":187,"level":0},{"x":1350,"y":640,"score":82,"level":0},{"x":1407,"y":640,"score":89,"level":0},{"x":1420,"y":640,"score":154,"level":0},{"x":1428,"y":640,"score":30,"level":0},{"x":1436,"y":640,"score":102,"level":0},{"x":1461,"y":640,"score":105,"level":0},{"x":382,"y":641,"score":66,"level":0},{"x":388,"y":641,"score":60,"level":0},{"x":430,"y":641,"score":67,"level":0},{"x":486,"y":641,"score":42,"level":0},{"x":695,"y":641,"score":109,"level":0},{"x":735,"y":641,"score":80,"level":0},{"x":766,"y":641,"score":106,"level":0},{"x":771,"y":641,"score":54,"level":0},{"x":795,"y":641,"score":51,"level":0},{"x":808,"y":641,"score":98,"level":0},{"x":892,"y":641,"score":83,"level":0},{"x":993,"y":641,"score":58,"level":0},{"x":1060,"y":641,"score":102,"level":0},{"x":1120,"y":641,"score":232,"level":0},{"x":1210,"y":641,"score":41,"level":0},{"x":1216,"y":641,"score":67,"level":0},{"x":1286,"y":641,"score":83,"level":0},{"x":1340,"y":641,"score":75,"level":0},{"x":1342,"y":641,"score":31,"level":0},{"x":1357,"y":641,"score":26,"level":0},{"x":1374,"y":641,"score":51,"level":0},{"x":1385,"y":641,"score":135,"level":0},{"x":1415,"y":641,"score":46,"level":0},{"x":1424,"y":641,"score":46,"level":0},{"x":1453,"y":641,"score":99,"level":0},{"x":1479,"y":641,"score":150,"level":0},{"x":400,"y":642,"score":44,"level":0},{"x":432,"y":642,"score":89,"level":0},{"x":531,"y":642,"score":31,"level":0},{"x":570,"y":642,"score":44,"level":0},{"x":631,"y":642,"score":30,"level":0},{"x":640,"y":642,"score":98,"level":0},{"x":671,"y":642,"score":154,"level":0},{"x":785,"y":642,"score":114,"level":0},{"x":803,"y":642,"score":39,"level":0},{"x":960,"y":642,"score":94,"level":0},{"x":965,"y":642,"score":61,"level":0},{"x":1024,"y":642,"score":40,"level":0},{"x":1029,"y":642,"score":73,"level":0},{"x":1043,"y":642,"score":66,"level":0},{"x":1050,"y":642,"score":122,"level":0},{"x":1083,"y":642,"score":32,"level":0},{"x":1096,"y":642,"score":46,"level":0},{"x":1163,"y":642,"score":33,"level":0},{"x":1257,"y":642,"score":118,"level":0},{"x":1262,"y":642,"score":108,"level":0},{"x":1298,"y":642,"score":72,"level":0},{"x":1304,"y":642,"score":158,"level":0},{"x":1325,"y":642,"score":188,"level":0},{"x":1330,"y":642,"score":39,"level":0},{"x":1471,"y":642,"score":80,"level":0},{"x":1474,"y":642,"score":55,"level":0},{"x":407,"y":643,"score":100,"level":0},{"x":450,"y":643,"score":69,"level":0},{"x":568,"y":643,"score":36,"level":0},{"x":587,"y":643,"score":51,"level":0},{"x":613,"y":643,"score":30,"level":0},{"x":655,"y":643,"score":59,"level":0},{"x":725,"y":643,"score":26,"level":0},{"x":771,"y":643,"score":34,"level":0},{"x":817,"y":643,"score":76,"level":0},{"x":883,"y":643,"score":109,"level":0},{"x":1000,"y":643,"score":29,"level":0},{"x":1022,"y":643,"score":79,"level":0},{"x":1089,"y":643,"score":38,"level":0},{"x":1129,"y":643,"score":26,"level":0},{"x":1134,"y":643,"score":130,"level":0},{"x":1243,"y":643,"score":104,"level":0},{"x":1271,"y":643,"score":122,"level":0},{"x":1281,"y":643,"score":81,"level":0},{"x":1319,"y":643,"score":114,"level":0},{"x":1423,"y":643,"score":50,"level":0},{"x":1429,"y":643,"score":36,"level":0},{"x":1453,"y":643,"score":74,"level":0},{"x":1465,"y":643,"score":30,"level":0},{"x":1490,"y":643,"score":72,"level":0},{"x":414,"y":644,"score":110,"level":0},{"x":504,"y":644,"score":96,"level":0},{"x":512,"y":644,"score":31,"level":0},{"x":574,"y":644,"score":34,"level":0},{"x":661,"y":644,"score":117,"level":0},{"x":687,"y":644,"score":123,"level":0},{"x":721,"y":644,"score":39,"level":0},{"x":750,"y":644,"score":51,"level":0},{"x":755,"y":644,"score":47,"level":0},{"x":787,"y":644,"score":118,"level":0},{"x":922,"y":644,"score":126,"level":0},{"x":932,"y":644,"score":96,"level":0},{"x":947,"y":644,"score":115,"level":0},{"x":949,"y":644,"score":31,"level":0},{"x":979,"y":644,"score":80,"level":0},{"x":993,"y":644,"score":27,"level":0},{"x":995,"y":644,"score":37,"level":0},{"x":1030,"y":644,"score":35,"level":0},{"x":1038,"y":644,"score":215,"level":0},{"x":1072,"y":644,"score":208,"level":0},{"x":1105,"y":644,"score":137,"level":0},{"x":1150,"y":644,"score":189,"level":0},{"x":1175,"y":644,"score":122,"level":0},{"x":1185,"y":644,"score":85,"level":0},{"x":1197,"y":644,"score":64,"level":0},{"x":1203,"y":644,"score":71,"level":0},{"x":1298,"y":644,"score":66,"level":0},{"x":1325,"y":644,"score":296,"level":0},{"x":1331,"y":644,"score":76,"level":0},{"x":1337,"y":644,"score":125,"level":0},{"x":1348,"y":644,"score":72,"level":0},{"x":1380,"y":644,"score":114,"level":0},{"x":1418,"y":644,"score":55,"level":0},{"x":1435,"y":644,"score":105,"level":0},{"x":1467,"y":644,"score":56,"level":0},{"x":678,"y":645,"score":76,"level":0},{"x":777,"y":645,"score":125,"level":0},{"x":861,"y":645,"score":48,"level":0},{"x":890,"y":645,"score":46,"level":0},{"x":913,"y":645,"score":210,"level":0},{"x":987,"y":645,"score":95,"level":0},{"x":1018,"y":645,"score":65,"level":0},{"x":1045,"y":645,"score":148,"level":0},{"x":1066,"y":645,"score":32,"level":0},{"x":1183,"y":645,"score":101,"level":0},{"x":1314,"y":645,"score":50,"level":0},{"x":1354,"y":645,"score":136,"level":0},{"x":1364,"y":645,"score":90,"level":0},{"x":1369,"y":645,"score":101,"level":0},{"x":395,"y":646,"score":54,"level":0},{"x":442,"y":646,"score":83,"level":0},{"x":602,"y":646,"score":28,"level":0},{"x":670,"y":646,"score":32,"level":0},{"x":729,"y":646,"score":67,"level":0},{"x":767,"y":646,"score":33,"level":0},{"x":779,"y":646,"score":138,"level":0},{"x":808,"y":646,"score":185,"level":0},{"x":855,"y":646,"score":49,"level":0},{"x":869,"y":646,"score":38,"level":0},{"x":901,"y":646,"score":34,"level":0},{"x":918,"y":646,"score":143,"level":0},{"x":1022,"y":646,"score":103,"level":0},{"x":1115,"y":646,"score":110,"level":0},{"x":1120,"y":646,"score":49,"level":0},{"x":1180,"y":646,"score":44,"level":0},{"x":1216,"y":646,"score":72,"level":0},{"x":1236,"y":646,"score":100,"level":0},{"x":1361,"y":646,"score":67,"level":0},{"x":1425,"y":646,"score":74,"level":0},{"x":1448,"y":646,"score":184,"level":0},{"x":1488,"y":646,"score":68,"level":0},{"x":400,"y":647,"score":134,"level":0},{"x":425,"y":647,"score":88,"level":0},{"x":482,"y":647,"score":52,"level":0},{"x":487,"y":647,"score":28,"level":0},{"x":641,"y":647,"score":62,"level":0},{"x":697,"y":647,"score":70,"level":0},{"x":761,"y":647,"score":138,"level":0},{"x":793,"y":647,"score":33,"level":0},{"x":802,"y":647,"score":180,"level":0},{"x":858,"y":647,"score":67,"level":0},{"x":952,"y":647,"score":77,"level":0},{"x":984,"y":647,"score":62,"level":0},{"x":1047,"y":647,"score":56,"level":0},{"x":1081,"y":647,"score":44,"level":0},{"x":1083,"y":647,"score":81,"level":0},{"x":1097,"y":647,"score":146,"level":0},{"x":1158,"y":647,"score":195,"level":0},{"x":1225,"y":647,"score":55,"level":0},{"x":1251,"y":647,"score":52,"level":0},{"x":1279,"y":647,"score":38,"level":0},{"x":1289,"y":647,"score":99,"level":0},{"x":1295,"y":647,"score":67,"level":0},{"x":1304,"y":647,"score":84,"level":0},{"x":1315,"y":647,"score":27,"level":0},{"x":1334,"y":647,"score":109,"level":0},{"x":1343,"y":647,"score":251,"level":0},{"x":1443,"y":647,"score":184,"level":0},{"x":389,"y":648,"score":90,"level":0},{"x":552,"y":648,"score":34,"level":0},{"x":572,"y":648,"score":37,"level":0},{"x":665,"y":648,"score":40,"level":0},{"x":686,"y":648,"score":46,"level":0},{"x":725,"y":648,"score":29,"level":0},{"x":755,"y":648,"score":51,"level":0},{"x":784,"y":648,"score":72,"level":0},{"x":846,"y":648,"score":152,"level":0},{"x":940,"y":648,"score":139,"level":0},{"x":964,"y":648,"score":118,"level":0},{"x":973,"y":648,"score":103,"level":0},{"x":1014,"y":648,"score":138,"level":0},{"x":1029,"y":648,"score":157,"level":0},{"x":1042,"y":648,"score":170,"level":0},{"x":1075,"y":648,"score":43,"level":0},{"x":1088,"y":648,"score":86,"level":0},{"x":1108,"y":648,"score":42,"level":0},{"x":1111,"y":648,"score":65,"level":0},{"x":1163,"y":648,"score":223,"level":0},{"x":1220,"y":648,"score":51,"level":0},{"x":1274,"y":648,"score":179,"level":0},{"x":1364,"y":648,"score":41,"level":0},{"x":1399,"y":648,"score":82,"level":0},{"x":1430,"y":648,"score":133,"level":0},{"x":1454,"y":648,"score":152,"level":0},{"x":1460,"y":648,"score":115,"level":0},{"x":476,"y":649,"score":61,"level":0},{"x":576,"y":649,"score":49,"level":0},{"x":626,"y":649,"score":45,"level":0},{"x":692,"y":649,"score":46,"level":0},{"x":706,"y":649,"score":43,"level":0},{"x":720,"y":649,"score":63,"level":0},{"x":823,"y":649,"score":62,"level":0},{"x":840,"y":649,"score":108,"level":0},{"x":906,"y":649,"score":96,"level":0},{"x":919,"y":649,"score":44,"level":0},{"x":1008,"y":649,"score":224,"level":0},{"x":1035,"y":649,"score":41,"level":0},{"x":1140,"y":649,"score":80,"level":0},{"x":1186,"y":649,"score":100,"level":0},{"x":1286,"y":649,"score":81,"level":0},{"x":1328,"y":649,"score":57,"level":0},{"x":1336,"y":649,"score":78,"level":0},{"x":1341,"y":649,"score":47,"level":0},{"x":1350,"y":649,"score":72,"level":0},{"x":1357,"y":649,"score":124,"level":0},{"x":1382,"y":649,"score":62,"level":0},{"x":1387,"y":649,"score":67,"level":0},{"x":1405,"y":649,"score":80,"level":0},{"x":1413,"y":649,"score":127,"level":0},{"x":1418,"y":649,"score":151,"level":0},{"x":1435,"y":649,"score":156,"level":0},{"x":414,"y":650,"score":129,"level":0},{"x":581,"y":650,"score":119,"level":0},{"x":642,"y":650,"score":46,"level":0},{"x":680,"y":650,"score":126,"level":0},{"x":743,"y":650,"score":53,"level":0},{"x":757,"y":650,"score":31,"level":0},{"x":837,"y":650,"score":94,"level":0},{"x":865,"y":650,"score":68,"level":0},{"x":896,"y":650,"score":95,"level":0},{"x":933,"y":650,"score":161,"level":0},{"x":939,"y":650,"score":58,"level":0},{"x":945,"y":650,"score":45,"level":0},{"x":1021,"y":650,"score":122,"level":0},{"x":1057,"y":650,"score":330,"level":0},{"x":1063,"y":650,"score":117,"level":0},{"x":1142,"y":650,"score":57,"level":0},{"x":1191,"y":650,"score":105,"level":0},{"x":1198,"y":650,"score":174,"level":0},{"x":1205,"y":650,"score":110,"level":0},{"x":1212,"y":650,"score":112,"level":0},{"x":1243,"y":650,"score":86,"level":0},{"x":1314,"y":650,"score":58,"level":0},{"x":1319,"y":650,"score":53,"level":0},{"x":1466,"y":650,"score":148,"level":0},{"x":572,"y":651,"score":64,"level":0},{"x":632,"y":651,"score":45,"level":0},{"x":637,"y":651,"score":40,"level":0},{"x":652,"y":651,"score":61,"level":0},{"x":768,"y":651,"score":54,"level":0},{"x":956,"y":651,"score":51,"level":0},{"x":969,"y":651,"score":90,"level":0},{"x":975,"y":651,"score":42,"level":0},{"x":1039,"y":651,"score":205,"level":0},{"x":1045,"y":651,"score":108,"level":0},{"x":1122,"y":651,"score":203,"level":0},{"x":1135,"y":651,"score":41,"level":0},{"x":1169,"y":651,"score":90,"level":0},{"x":1229,"y":651,"score":48,"level":0},{"x":1257,"y":651,"score":39,"level":0},{"x":1294,"y":651,"score":39,"level":0},{"x":1406,"y":651,"score":147,"level":0},{"x":1449,"y":651,"score":94,"level":0},{"x":1478,"y":651,"score":133,"level":0},{"x":1488,"y":651,"score":160,"level":0},{"x":377,"y":652,"score":136,"level":0},{"x":398,"y":652,"score":121,"level":0},{"x":434,"y":652,"score":67,"level":0},{"x":564,"y":652,"score":78,"level":0},{"x":647,"y":652,"score":29,"level":0},{"x":747,"y":652,"score":41,"level":0},{"x":824,"y":652,"score":37,"level":0},{"x":853,"y":652,"score":192,"level":0},{"x":923,"y":652,"score":141,"level":0},{"x":948,"y":652,"score":51,"level":0},{"x":1070,"y":652,"score":59,"level":0},{"x":1178,"y":652,"score":168,"level":0},{"x":1224,"y":652,"score":32,"level":0},{"x":1284,"y":652,"score":65,"level":0},{"x":1345,"y":652,"score":121,"level":0},{"x":1364,"y":652,"score":111,"level":0},{"x":1375,"y":652,"score":110,"level":0},{"x":1395,"y":652,"score":242,"level":0},{"x":1409,"y":652,"score":38,"level":0},{"x":1439,"y":652,"score":128,"level":0},{"x":1444,"y":652,"score":122,"level":0},{"x":536,"y":653,"score":28,"level":0},{"x":633,"y":653,"score":106,"level":0},{"x":664,"y":653,"score":34,"level":0},{"x":671,"y":653,"score":177,"level":0},{"x":683,"y":653,"score":76,"level":0},{"x":724,"y":653,"score":38,"level":0},{"x":734,"y":653,"score":97,"level":0},{"x":776,"y":653,"score":27,"level":0},{"x":779,"y":653,"score":28,"level":0},{"x":803,"y":653,"score":61,"level":0},{"x":833,"y":653,"score":60,"level":0},{"x":861,"y":653,"score":100,"level":0},{"x":874,"y":653,"score":88,"level":0},{"x":910,"y":653,"score":42,"level":0},{"x":988,"y":653,"score":98,"level":0},{"x":994,"y":653,"score":77,"level":0},{"x":1001,"y":653,"score":156,"level":0},{"x":1079,"y":653,"score":106,"level":0},{"x":1086,"y":653,"score":135,"level":0},{"x":1104,"y":653,"score":56,"level":0},{"x":1115,"y":653,"score":80,"level":0},{"x":1136,"y":653,"score":34,"level":0},{"x":1145,"y":653,"score":84,"level":0},{"x":1154,"y":653,"score":124,"level":0},{"x":1306,"y":653,"score":45,"level":0},{"x":1311,"y":653,"score":62,"level":0},{"x":1352,"y":653,"score":86,"level":0},{"x":1390,"y":653,"score":48,"level":0},{"x":1401,"y":653,"score":35,"level":0},{"x":1411,"y":653,"score":51,"level":0},{"x":1426,"y":653,"score":72,"level":0},{"x":1469,"y":653,"score":62,"level":0},{"x":382,"y":654,"score":58,"level":0},{"x":410,"y":654,"score":29,"level":0},{"x":575,"y":654,"score":56,"level":0},{"x":628,"y":654,"score":113,"level":0},{"x":643,"y":654,"score":46,"level":0},{"x":772,"y":654,"score":33,"level":0},{"x":877,"y":654,"score":27,"level":0},{"x":881,"y":654,"score":62,"level":0},{"x":887,"y":654,"score":181,"level":0},{"x":919,"y":654,"score":182,"level":0},{"x":925,"y":654,"score":191,"level":0},{"x":962,"y":654,"score":129,"level":0},{"x":1007,"y":654,"score":150,"level":0},{"x":1028,"y":654,"score":162,"level":0},{"x":1074,"y":654,"score":46,"level":0},{"x":1207,"y":654,"score":45,"level":0},{"x":1241,"y":654,"score":38,"level":0},{"x":1258,"y":654,"score":84,"level":0},{"x":1341,"y":654,"score":31,"level":0},{"x":1357,"y":654,"score":71,"level":0},{"x":1429,"y":654,"score":26,"level":0},{"x":1457,"y":654,"score":29,"level":0},{"x":393,"y":655,"score":29,"level":0},{"x":419,"y":655,"score":32,"level":0},{"x":439,"y":655,"score":34,"level":0},{"x":677,"y":655,"score":65,"level":0},{"x":712,"y":655,"score":78,"level":0},{"x":742,"y":655,"score":170,"level":0},{"x":763,"y":655,"score":112,"level":0},{"x":817,"y":655,"score":32,"level":0},{"x":845,"y":655,"score":46,"level":0},{"x":866,"y":655,"score":61,"level":0},{"x":906,"y":655,"score":60,"level":0},{"x":980,"y":655,"score":69,"level":0},{"x":1015,"y":655,"score":99,"level":0},{"x":1020,"y":655,"score":119,"level":0},{"x":1032,"y":655,"score":202,"level":0},{"x":1055,"y":655,"score":99,"level":0},{"x":1077,"y":655,"score":56,"level":0},{"x":1107,"y":655,"score":70,"level":0},{"x":1227,"y":655,"score":40,"level":0},{"x":1243,"y":655,"score":26,"level":0},{"x":1382,"y":655,"score":38,"level":0},{"x":1421,"y":655,"score":146,"level":0},{"x":1453,"y":655,"score":53,"level":0},{"x":1462,"y":655,"score":89,"level":0},{"x":1474,"y":655,"score":60,"level":0},{"x":474,"y":656,"score":61,"level":0},{"x":486,"y":656,"score":168,"level":0},{"x":491,"y":656,"score":103,"level":0},{"x":520,"y":656,"score":36,"level":0},{"x":529,"y":656,"score":43,"level":0},{"x":554,"y":656,"score":45,"level":0},{"x":562,"y":656,"score":34,"level":0},{"x":579,"y":656,"score":65,"level":0},{"x":644,"y":656,"score":59,"level":0},{"x":649,"y":656,"score":43,"level":0},{"x":720,"y":656,"score":87,"level":0},{"x":728,"y":656,"score":67,"level":0},{"x":757,"y":656,"score":155,"level":0},{"x":875,"y":656,"score":35,"level":0},{"x":1042,"y":656,"score":96,"level":0},{"x":1062,"y":656,"score":110,"level":0},{"x":1134,"y":656,"score":79,"level":0},{"x":1186,"y":656,"score":171,"level":0},{"x":1275,"y":656,"score":38,"level":0},{"x":1286,"y":656,"score":117,"level":0},{"x":1331,"y":656,"score":164,"level":0},{"x":1483,"y":656,"score":71,"level":0},{"x":396,"y":657,"score":78,"level":0},{"x":548,"y":657,"score":55,"level":0},{"x":653,"y":657,"score":30,"level":0},{"x":696,"y":657,"score":61,"level":0},{"x":799,"y":657,"score":49,"level":0},{"x":860,"y":657,"score":52,"level":0},{"x":879,"y":657,"score":33,"level":0},{"x":930,"y":657,"score":26,"level":0},{"x":948,"y":657,"score":172,"level":0},{"x":1128,"y":657,"score":120,"level":0},{"x":1202,"y":657,"score":94,"level":0},{"x":1268,"y":657,"score":90,"level":0},{"x":1325,"y":657,"score":197,"level":0},{"x":1345,"y":657,"score":121,"level":0},{"x":1440,"y":657,"score":44,"level":0},{"x":1453,"y":657,"score":57,"level":0},{"x":377,"y":658,"score":39,"level":0},{"x":435,"y":658,"score":36,"level":0},{"x":452,"y":658,"score":54,"level":0},{"x":457,"y":658,"score":28,"level":0},{"x":671,"y":658,"score":32,"level":0},{"x":683,"y":658,"score":42,"level":0},{"x":751,"y":658,"score":44,"level":0},{"x":776,"y":658,"score":39,"level":0},{"x":841,"y":658,"score":26,"level":0},{"x":853,"y":658,"score":63,"level":0},{"x":972,"y":658,"score":150,"level":0},{"x":1000,"y":658,"score":28,"level":0},{"x":1042,"y":658,"score":113,"level":0},{"x":1048,"y":658,"score":160,"level":0},{"x":1085,"y":658,"score":125,"level":0},{"x":1095,"y":658,"score":165,"level":0},{"x":1104,"y":658,"score":60,"level":0},{"x":1447,"y":658,"score":74,"level":0},{"x":1465,"y":658,"score":54,"level":0},{"x":1468,"y":658,"score":29,"level":0},{"x":390,"y":659,"score":38,"level":0},{"x":409,"y":659,"score":36,"level":0},{"x":501,"y":659,"score":38,"level":0},{"x":503,"y":659,"score":78,"level":0},{"x":632,"y":659,"score":85,"level":0},{"x":642,"y":659,"score":28,"level":0},{"x":650,"y":659,"score":50,"level":0},{"x":704,"y":659,"score":76,"level":0},{"x":727,"y":659,"score":63,"level":0},{"x":772,"y":659,"score":75,"level":0},{"x":814,"y":659,"score":88,"level":0},{"x":825,"y":659,"score":96,"level":0},{"x":906,"y":659,"score":81,"level":0},{"x":921,"y":659,"score":36,"level":0},{"x":926,"y":659,"score":47,"level":0},{"x":1125,"y":659,"score":107,"level":0},{"x":1146,"y":659,"score":134,"level":0},{"x":1153,"y":659,"score":38,"level":0},{"x":1157,"y":659,"score":40,"level":0},{"x":1189,"y":659,"score":90,"level":0},{"x":1207,"y":659,"score":35,"level":0},{"x":1212,"y":659,"score":67,"level":0},{"x":1243,"y":659,"score":141,"level":0},{"x":1247,"y":659,"score":108,"level":0},{"x":1298,"y":659,"score":85,"level":0},{"x":1304,"y":659,"score":199,"level":0},{"x":1316,"y":659,"score":115,"level":0},{"x":1360,"y":659,"score":40,"level":0},{"x":1363,"y":659,"score":36,"level":0},{"x":1434,"y":659,"score":45,"level":0},{"x":1442,"y":659,"score":79,"level":0},{"x":1459,"y":659,"score":34,"level":0},{"x":1479,"y":659,"score":41,"level":0},{"x":1490,"y":659,"score":52,"level":0},{"x":520,"y":660,"score":121,"level":0},{"x":538,"y":660,"score":54,"level":0},{"x":548,"y":660,"score":50,"level":0},{"x":550,"y":660,"score":46,"level":0},{"x":677,"y":660,"score":120,"level":0},{"x":696,"y":660,"score":51,"level":0},{"x":743,"y":660,"score":77,"level":0},{"x":745,"y":660,"score":72,"level":0},{"x":788,"y":660,"score":127,"level":0},{"x":800,"y":660,"score":30,"level":0},{"x":864,"y":660,"score":63,"level":0},{"x":868,"y":660,"score":128,"level":0},{"x":955,"y":660,"score":39,"level":0},{"x":977,"y":660,"score":160,"level":0},{"x":1021,"y":660,"score":38,"level":0},{"x":1057,"y":660,"score":62,"level":0},{"x":1166,"y":660,"score":49,"level":0},{"x":1170,"y":660,"score":29,"level":0},{"x":1172,"y":660,"score":43,"level":0},{"x":1230,"y":660,"score":45,"level":0},{"x":1321,"y":660,"score":154,"level":0},{"x":1393,"y":660,"score":126,"level":0},{"x":1399,"y":660,"score":186,"level":0},{"x":448,"y":661,"score":32,"level":0},{"x":476,"y":661,"score":45,"level":0},{"x":486,"y":661,"score":72,"level":0},{"x":554,"y":661,"score":54,"level":0},{"x":575,"y":661,"score":78,"level":0},{"x":624,"y":661,"score":38,"level":0},{"x":643,"y":661,"score":78,"level":0},{"x":661,"y":661,"score":163,"level":0},{"x":720,"y":661,"score":92,"level":0},{"x":795,"y":661,"score":77,"level":0},{"x":830,"y":661,"score":71,"level":0},{"x":876,"y":661,"score":93,"level":0},{"x":900,"y":661,"score":40,"level":0},{"x":934,"y":661,"score":43,"level":0},{"x":1032,"y":661,"score":33,"level":0},{"x":1044,"y":661,"score":124,"level":0},{"x":1074,"y":661,"score":45,"level":0},{"x":1103,"y":661,"score":31,"level":0},{"x":1134,"y":661,"score":101,"level":0},{"x":1139,"y":661,"score":125,"level":0},{"x":1223,"y":661,"score":122,"level":0},{"x":1237,"y":661,"score":118,"level":0},{"x":1266,"y":661,"score":26,"level":0},{"x":1280,"y":661,"score":81,"level":0},{"x":1309,"y":661,"score":50,"level":0},{"x":1352,"y":661,"score":105,"level":0},{"x":1363,"y":661,"score":34,"level":0},{"x":1371,"y":661,"score":59,"level":0},{"x":1376,"y":661,"score":204,"level":0},{"x":1385,"y":661,"score":90,"level":0},{"x":1410,"y":661,"score":80,"level":0},{"x":1423,"y":661,"score":100,"level":0},{"x":1474,"y":661,"score":108,"level":0},{"x":407,"y":662,"score":118,"level":0},{"x":426,"y":662,"score":28,"level":0},{"x":432,"y":662,"score":36,"level":0},{"x":495,"y":662,"score":105,"level":0},{"x":572,"y":662,"score":100,"level":0},{"x":599,"y":662,"score":34,"level":0},{"x":651,"y":662,"score":27,"level":0},{"x":655,"y":662,"score":55,"level":0},{"x":718,"y":662,"score":102,"level":0},{"x":885,"y":662,"score":120,"level":0},{"x":912,"y":662,"score":80,"level":0},{"x":945,"y":662,"score":60,"level":0},{"x":950,"y":662,"score":69,"level":0},{"x":965,"y":662,"score":115,"level":0},{"x":975,"y":662,"score":83,"level":0},{"x":985,"y":662,"score":97,"level":0},{"x":990,"y":662,"score":75,"level":0},{"x":1083,"y":662,"score":61,"level":0},{"x":1089,"y":662,"score":129,"level":0},{"x":1108,"y":662,"score":153,"level":0},{"x":1142,"y":662,"score":87,"level":0},{"x":1162,"y":662,"score":119,"level":0},{"x":1202,"y":662,"score":27,"level":0},{"x":1275,"y":662,"score":59,"level":0},{"x":1313,"y":662,"score":45,"level":0},{"x":1329,"y":662,"score":39,"level":0},{"x":1334,"y":662,"score":54,"level":0},{"x":1387,"y":662,"score":77,"level":0},{"x":1490,"y":662,"score":44,"level":0},{"x":377,"y":663,"score":37,"level":0},{"x":386,"y":663,"score":118,"level":0},{"x":445,"y":663,"score":26,"level":0},{"x":477,"y":663,"score":56,"level":0},{"x":646,"y":663,"score":46,"level":0},{"x":675,"y":663,"score":120,"level":0},{"x":710,"y":663,"score":93,"level":0},{"x":734,"y":663,"score":33,"level":0},{"x":762,"y":663,"score":46,"level":0},{"x":802,"y":663,"score":145,"level":0},{"x":810,"y":663,"score":157,"level":0},{"x":1079,"y":663,"score":36,"level":0},{"x":1177,"y":663,"score":43,"level":0},{"x":1255,"y":663,"score":68,"level":0},{"x":1300,"y":663,"score":182,"level":0},{"x":1339,"y":663,"score":229,"level":0},{"x":1346,"y":663,"score":127,"level":0},{"x":1357,"y":663,"score":43,"level":0},{"x":1482,"y":663,"score":144,"level":0},{"x":402,"y":664,"score":74,"level":0},{"x":414,"y":664,"score":167,"level":0},{"x":536,"y":664,"score":48,"level":0},{"x":562,"y":664,"score":75,"level":0},{"x":684,"y":664,"score":63,"level":0},{"x":697,"y":664,"score":70,"level":0},{"x":703,"y":664,"score":29,"level":0},{"x":738,"y":664,"score":48,"level":0},{"x":774,"y":664,"score":55,"level":0},{"x":839,"y":664,"score":60,"level":0},{"x":864,"y":664,"score":55,"level":0},{"x":890,"y":664,"score":79,"level":0},{"x":951,"y":664,"score":82,"level":0},{"x":981,"y":664,"score":27,"level":0},{"x":993,"y":664,"score":33,"level":0},{"x":1006,"y":664,"score":26,"level":0},{"x":1027,"y":664,"score":48,"level":0},{"x":1043,"y":664,"score":115,"level":0},{"x":1048,"y":664,"score":167,"level":0},{"x":1103,"y":664,"score":128,"level":0},{"x":1118,"y":664,"score":120,"level":0},{"x":1168,"y":664,"score":98,"level":0},{"x":1244,"y":664,"score":27,"level":0},{"x":1257,"y":664,"score":48,"level":0},{"x":1270,"y":664,"score":75,"level":0},{"x":1285,"y":664,"score":81,"level":0},{"x":1315,"y":664,"score":152,"level":0},{"x":1418,"y":664,"score":61,"level":0},{"x":1427,"y":664,"score":115,"level":0},{"x":1431,"y":664,"score":129,"level":0},{"x":1440,"y":664,"score":126,"level":0},{"x":1467,"y":664,"score":119,"level":0},{"x":1475,"y":664,"score":35,"level":0},{"x":1480,"y":664,"score":80,"level":0},{"x":518,"y":665,"score":45,"level":0},{"x":552,"y":665,"score":79,"level":0},{"x":558,"y":665,"score":46,"level":0},{"x":637,"y":665,"score":69,"level":0},{"x":655,"y":665,"score":103,"level":0},{"x":728,"y":665,"score":30,"level":0},{"x":849,"y":665,"score":64,"level":0},{"x":854,"y":665,"score":48,"level":0},{"x":964,"y":665,"score":105,"level":0},{"x":973,"y":665,"score":111,"level":0},{"x":1053,"y":665,"score":100,"level":0},{"x":1077,"y":665,"score":62,"level":0},{"x":1206,"y":665,"score":186,"level":0},{"x":1218,"y":665,"score":159,"level":0},{"x":1247,"y":665,"score":127,"level":0},{"x":1250,"y":665,"score":61,"level":0},{"x":1296,"y":665,"score":150,"level":0},{"x":1319,"y":665,"score":47,"level":0},{"x":1327,"y":665,"score":67,"level":0},{"x":1333,"y":665,"score":27,"level":0},{"x":1399,"y":665,"score":52,"level":0},{"x":1406,"y":665,"score":27,"level":0},{"x":378,"y":666,"score":68,"level":0},{"x":400,"y":666,"score":52,"level":0},{"x":425,"y":666,"score":78,"level":0},{"x":527,"y":666,"score":31,"level":0},{"x":562,"y":666,"score":28,"level":0},{"x":575,"y":666,"score":26,"level":0},{"x":708,"y":666,"score":162,"level":0},{"x":715,"y":666,"score":77,"level":0},{"x":720,"y":666,"score":95,"level":0},{"x":829,"y":666,"score":70,"level":0},{"x":861,"y":666,"score":32,"level":0},{"x":894,"y":666,"score":52,"level":0},{"x":915,"y":666,"score":123,"level":0},{"x":936,"y":666,"score":51,"level":0},{"x":957,"y":666,"score":142,"level":0},{"x":968,"y":666,"score":45,"level":0},{"x":981,"y":666,"score":84,"level":0},{"x":1015,"y":666,"score":193,"level":0},{"x":1035,"y":666,"score":80,"level":0},{"x":1091,"y":666,"score":67,"level":0},{"x":1138,"y":666,"score":138,"level":0},{"x":1190,"y":666,"score":52,"level":0},{"x":1200,"y":666,"score":60,"level":0},{"x":1274,"y":666,"score":48,"level":0},{"x":1279,"y":666,"score":62,"level":0},{"x":1393,"y":666,"score":67,"level":0},{"x":1423,"y":666,"score":98,"level":0},{"x":1436,"y":666,"score":94,"level":0},{"x":1443,"y":666,"score":191,"level":0},{"x":410,"y":667,"score":54,"level":0},{"x":555,"y":667,"score":69,"level":0},{"x":572,"y":667,"score":30,"level":0},{"x":632,"y":667,"score":56,"level":0},{"x":634,"y":667,"score":40,"level":0},{"x":663,"y":667,"score":57,"level":0},{"x":669,"y":667,"score":42,"level":0},{"x":679,"y":667,"score":168,"level":0},{"x":761,"y":667,"score":27,"level":0},{"x":765,"y":667,"score":42,"level":0},{"x":806,"y":667,"score":34,"level":0},{"x":847,"y":667,"score":34,"level":0},{"x":885,"y":667,"score":100,"level":0},{"x":929,"y":667,"score":95,"level":0},{"x":972,"y":667,"score":46,"level":0},{"x":1059,"y":667,"score":108,"level":0},{"x":1074,"y":667,"score":71,"level":0},{"x":1107,"y":667,"score":64,"level":0},{"x":1134,"y":667,"score":40,"level":0},{"x":1150,"y":667,"score":43,"level":0},{"x":1162,"y":667,"score":68,"level":0},{"x":1222,"y":667,"score":72,"level":0},{"x":1233,"y":667,"score":286,"level":0},{"x":1243,"y":667,"score":74,"level":0},{"x":1309,"y":667,"score":112,"level":0},{"x":1353,"y":667,"score":181,"level":0},{"x":1389,"y":667,"score":43,"level":0},{"x":1455,"y":667,"score":151,"level":0},{"x":1490,"y":667,"score":45,"level":0},{"x":418,"y":668,"score":40,"level":0},{"x":446,"y":668,"score":48,"level":0},{"x":496,"y":668,"score":48,"level":0},{"x":508,"y":668,"score":29,"level":0},{"x":546,"y":668,"score":28,"level":0},{"x":642,"y":668,"score":171,"level":0},{"x":700,"y":668,"score":33,"level":0},{"x":713,"y":668,"score":27,"level":0},{"x":718,"y":668,"score":61,"level":0},{"x":733,"y":668,"score":30,"level":0},{"x":809,"y":668,"score":29,"level":0},{"x":819,"y":668,"score":180,"level":0},{"x":834,"y":668,"score":107,"level":0},{"x":921,"y":668,"score":144,"level":0},{"x":998,"y":668,"score":84,"level":0},{"x":1025,"y":668,"score":156,"level":0},{"x":1035,"y":668,"score":69,"level":0},{"x":1038,"y":668,"score":27,"level":0},{"x":1072,"y":668,"score":33,"level":0},{"x":1097,"y":668,"score":96,"level":0},{"x":1153,"y":668,"score":27,"level":0},{"x":1183,"y":668,"score":119,"level":0},{"x":1216,"y":668,"score":88,"level":0},{"x":1226,"y":668,"score":96,"level":0},{"x":1240,"y":668,"score":48,"level":0},{"x":1253,"y":668,"score":111,"level":0},{"x":1361,"y":668,"score":69,"level":0},{"x":1450,"y":668,"score":86,"level":0},{"x":1461,"y":668,"score":88,"level":0},{"x":400,"y":669,"score":51,"level":0},{"x":484,"y":669,"score":81,"level":0},{"x":489,"y":669,"score":162,"level":0},{"x":652,"y":669,"score":39,"level":0},{"x":669,"y":669,"score":45,"level":0},{"x":688,"y":669,"score":117,"level":0},{"x":738,"y":669,"score":53,"level":0},{"x":749,"y":669,"score":108,"level":0},{"x":769,"y":669,"score":81,"level":0},{"x":774,"y":669,"score":107,"level":0},{"x":803,"y":669,"score":62,"level":0},{"x":836,"y":669,"score":123,"level":0},{"x":856,"y":669,"score":109,"level":0},{"x":864,"y":669,"score":122,"level":0},{"x":896,"y":669,"score":61,"level":0},{"x":907,"y":669,"score":206,"level":0},{"x":935,"y":669,"score":138,"level":0},{"x":984,"y":669,"score":45,"level":0},{"x":993,"y":669,"score":58,"level":0},{"x":1043,"y":669,"score":60,"level":0},{"x":1080,"y":669,"score":105,"level":0},{"x":1088,"y":669,"score":174,"level":0},{"x":1093,"y":669,"score":68,"level":0},{"x":1133,"y":669,"score":60,"level":0},{"x":1167,"y":669,"score":67,"level":0},{"x":1267,"y":669,"score":94,"level":0},{"x":1292,"y":669,"score":75,"level":0},{"x":1294,"y":669,"score":84,"level":0},{"x":1332,"y":669,"score":73,"level":0},{"x":1335,"y":669,"score":79,"level":0},{"x":1346,"y":669,"score":89,"level":0},{"x":1374,"y":669,"score":92,"level":0},{"x":1427,"y":669,"score":151,"level":0},{"x":390,"y":670,"score":48,"level":0},{"x":424,"y":670,"score":30,"level":0},{"x":538,"y":670,"score":40,"level":0},{"x":625,"y":670,"score":28,"level":0},{"x":631,"y":670,"score":52,"level":0},{"x":697,"y":670,"score":39,"level":0},{"x":787,"y":670,"score":52,"level":0},{"x":850,"y":670,"score":72,"level":0},{"x":870,"y":670,"score":61,"level":0},{"x":1010,"y":670,"score":32,"level":0},{"x":1019,"y":670,"score":97,"level":0},{"x":1031,"y":670,"score":46,"level":0},{"x":1049,"y":670,"score":60,"level":0},{"x":1066,"y":670,"score":73,"level":0},{"x":1211,"y":670,"score":75,"level":0},{"x":1246,"y":670,"score":47,"level":0},{"x":1272,"y":670,"score":83,"level":0},{"x":1312,"y":670,"score":46,"level":0},{"x":1338,"y":670,"score":63,"level":0},{"x":1366,"y":670,"score":62,"level":0},{"x":1423,"y":670,"score":56,"level":0},{"x":1468,"y":670,"score":153,"level":0},{"x":1475,"y":670,"score":111,"level":0},{"x":377,"y":671,"score":84,"level":0},{"x":519,"y":671,"score":35,"level":0},{"x":657,"y":671,"score":77,"level":0},{"x":682,"y":671,"score":82,"level":0},{"x":708,"y":671,"score":48,"level":0},{"x":754,"y":671,"score":108,"level":0},{"x":768,"y":671,"score":45,"level":0},{"x":781,"y":671,"score":53,"level":0},{"x":799,"y":671,"score":36,"level":0},{"x":804,"y":671,"score":70,"level":0},{"x":810,"y":671,"score":46,"level":0},{"x":840,"y":671,"score":55,"level":0},{"x":862,"y":671,"score":30,"level":0},{"x":873,"y":671,"score":74,"level":0},{"x":901,"y":671,"score":180,"level":0},{"x":917,"y":671,"score":45,"level":0},{"x":949,"y":671,"score":39,"level":0},{"x":977,"y":671,"score":98,"level":0},{"x":1092,"y":671,"score":70,"level":0},{"x":1105,"y":671,"score":161,"level":0},{"x":1121,"y":671,"score":70,"level":0},{"x":1189,"y":671,"score":187,"level":0},{"x":1275,"y":671,"score":54,"level":0},{"x":1313,"y":671,"score":30,"level":0},{"x":1350,"y":671,"score":81,"level":0},{"x":435,"y":672,"score":101,"level":0},{"x":452,"y":672,"score":135,"level":0},{"x":478,"y":672,"score":29,"level":0},{"x":541,"y":672,"score":46,"level":0},{"x":547,"y":672,"score":26,"level":0},{"x":565,"y":672,"score":51,"level":0},{"x":652,"y":672,"score":72,"level":0},{"x":663,"y":672,"score":57,"level":0},{"x":725,"y":672,"score":124,"level":0},{"x":730,"y":672,"score":70,"level":0},{"x":827,"y":672,"score":96,"level":0},{"x":884,"y":672,"score":61,"level":0},{"x":889,"y":672,"score":148,"level":0},{"x":932,"y":672,"score":61,"level":0},{"x":962,"y":672,"score":91,"level":0},{"x":982,"y":672,"score":120,"level":0},{"x":1012,"y":672,"score":49,"level":0},{"x":1058,"y":672,"score":161,"level":0},{"x":1130,"y":672,"score":32,"level":0},{"x":1206,"y":672,"score":180,"level":0},{"x":1240,"y":672,"score":123,"level":0},{"x":1251,"y":672,"score":72,"level":0},{"x":1300,"y":672,"score":175,"level":0},{"x":1306,"y":672,"score":81,"level":0},{"x":1336,"y":672,"score":81,"level":0},{"x":1380,"y":672,"score":163,"level":0},{"x":1386,"y":672,"score":166,"level":0},{"x":1403,"y":672,"score":89,"level":0},{"x":1422,"y":672,"score":66,"level":0},{"x":1455,"y":672,"score":73,"level":0},{"x":600,"y":673,"score":60,"level":0},{"x":686,"y":673,"score":26,"level":0},{"x":776,"y":673,"score":31,"level":0},{"x":817,"y":673,"score":38,"level":0},{"x":847,"y":673,"score":37,"level":0},{"x":940,"y":673,"score":27,"level":0},{"x":989,"y":673,"score":147,"level":0},{"x":998,"y":673,"score":55,"level":0},{"x":1040,"y":673,"score":43,"level":0},{"x":1053,"y":673,"score":226,"level":0},{"x":1099,"y":673,"score":52,"level":0},{"x":1126,"y":673,"score":37,"level":0},{"x":1168,"y":673,"score":68,"level":0},{"x":1180,"y":673,"score":68,"level":0},{"x":1223,"y":673,"score":119,"level":0},{"x":1284,"y":673,"score":263,"level":0},{"x":1291,"y":673,"score":75,"level":0},{"x":1317,"y":673,"score":59,"level":0},{"x":1352,"y":673,"score":61,"level":0},{"x":1417,"y":673,"score":32,"level":0},{"x":1437,"y":673,"score":177,"level":0},{"x":1444,"y":673,"score":136,"level":0},{"x":428,"y":674,"score":99,"level":0},{"x":444,"y":674,"score":46,"level":0},{"x":551,"y":674,"score":36,"level":0},{"x":692,"y":674,"score":106,"level":0},{"x":718,"y":674,"score":88,"level":0},{"x":740,"y":674,"score":70,"level":0},{"x":759,"y":674,"score":40,"level":0},{"x":764,"y":674,"score":164,"level":0},{"x":769,"y":674,"score":64,"level":0},{"x":784,"y":674,"score":31,"level":0},{"x":806,"y":674,"score":34,"level":0},{"x":855,"y":674,"score":114,"level":0},{"x":931,"y":674,"score":45,"level":0},{"x":956,"y":674,"score":124,"level":0},{"x":1035,"y":674,"score":65,"level":0},{"x":1111,"y":674,"score":232,"level":0},{"x":1131,"y":674,"score":85,"level":0},{"x":1149,"y":674,"score":37,"level":0},{"x":1195,"y":674,"score":110,"level":0},{"x":1256,"y":674,"score":44,"level":0},{"x":1264,"y":674,"score":206,"level":0},{"x":1327,"y":674,"score":48,"level":0},{"x":1364,"y":674,"score":37,"level":0},{"x":452,"y":675,"score":72,"level":0},{"x":561,"y":675,"score":65,"level":0},{"x":577,"y":675,"score":40,"level":0},{"x":637,"y":675,"score":26,"level":0},{"x":643,"y":675,"score":76,"level":0},{"x":648,"y":675,"score":38,"level":0},{"x":681,"y":675,"score":120,"level":0},{"x":820,"y":675,"score":122,"level":0},{"x":878,"y":675,"score":35,"level":0},{"x":908,"y":675,"score":100,"level":0},{"x":936,"y":675,"score":41,"level":0},{"x":984,"y":675,"score":78,"level":0},{"x":1019,"y":675,"score":33,"level":0},{"x":1028,"y":675,"score":99,"level":0},{"x":1088,"y":675,"score":118,"level":0},{"x":1095,"y":675,"score":54,"level":0},{"x":1118,"y":675,"score":42,"level":0},{"x":1322,"y":675,"score":158,"level":0},{"x":1342,"y":675,"score":53,"level":0},{"x":1358,"y":675,"score":52,"level":0},{"x":1434,"y":675,"score":154,"level":0},{"x":545,"y":676,"score":41,"level":0},{"x":565,"y":676,"score":100,"level":0},{"x":834,"y":676,"score":47,"level":0},{"x":840,"y":676,"score":114,"level":0},{"x":864,"y":676,"score":43,"level":0},{"x":949,"y":676,"score":143,"level":0},{"x":955,"y":676,"score":123,"level":0},{"x":968,"y":676,"score":106,"level":0},{"x":1067,"y":676,"score":143,"level":0},{"x":1104,"y":676,"score":85,"level":0},{"x":1133,"y":676,"score":75,"level":0},{"x":1189,"y":676,"score":72,"level":0},{"x":1252,"y":676,"score":40,"level":0},{"x":1274,"y":676,"score":131,"level":0},{"x":1288,"y":676,"score":203,"level":0},{"x":1336,"y":676,"score":186,"level":0},{"x":1392,"y":676,"score":35,"level":0},{"x":1397,"y":676,"score":116,"level":0},{"x":1411,"y":676,"score":34,"level":0},{"x":1453,"y":676,"score":96,"level":0},{"x":1459,"y":676,"score":27,"level":0},{"x":387,"y":677,"score":49,"level":0},{"x":419,"y":677,"score":30,"level":0},{"x":423,"y":677,"score":122,"level":0},{"x":430,"y":677,"score":54,"level":0},{"x":436,"y":677,"score":87,"level":0},{"x":477,"y":677,"score":66,"level":0},{"x":484,"y":677,"score":55,"level":0},{"x":517,"y":677,"score":139,"level":0},{"x":531,"y":677,"score":52,"level":0},{"x":563,"y":677,"score":104,"level":0},{"x":606,"y":677,"score":29,"level":0},{"x":700,"y":677,"score":54,"level":0},{"x":725,"y":677,"score":119,"level":0},{"x":730,"y":677,"score":116,"level":0},{"x":898,"y":677,"score":138,"level":0},{"x":904,"y":677,"score":81,"level":0},{"x":917,"y":677,"score":142,"level":0},{"x":922,"y":677,"score":98,"level":0},{"x":977,"y":677,"score":85,"level":0},{"x":1018,"y":677,"score":33,"level":0},{"x":1061,"y":677,"score":54,"level":0},{"x":1137,"y":677,"score":116,"level":0},{"x":1175,"y":677,"score":167,"level":0},{"x":1218,"y":677,"score":122,"level":0},{"x":1243,"y":677,"score":236,"level":0},{"x":1309,"y":677,"score":55,"level":0},{"x":1385,"y":677,"score":162,"level":0},{"x":1413,"y":677,"score":46,"level":0},{"x":394,"y":678,"score":58,"level":0},{"x":443,"y":678,"score":112,"level":0},{"x":498,"y":678,"score":31,"level":0},{"x":533,"y":678,"score":62,"level":0},{"x":601,"y":678,"score":55,"level":0},{"x":634,"y":678,"score":60,"level":0},{"x":744,"y":678,"score":95,"level":0},{"x":792,"y":678,"score":40,"level":0},{"x":827,"y":678,"score":114,"level":0},{"x":830,"y":678,"score":76,"level":0},{"x":884,"y":678,"score":222,"level":0},{"x":889,"y":678,"score":95,"level":0},{"x":927,"y":678,"score":90,"level":0},{"x":967,"y":678,"score":162,"level":0},{"x":985,"y":678,"score":111,"level":0},{"x":1011,"y":678,"score":130,"level":0},{"x":1024,"y":678,"score":157,"level":0},{"x":1033,"y":678,"score":46,"level":0},{"x":1127,"y":678,"score":88,"level":0},{"x":1169,"y":678,"score":136,"level":0},{"x":1180,"y":678,"score":142,"level":0},{"x":1203,"y":678,"score":194,"level":0},{"x":1237,"y":678,"score":96,"level":0},{"x":1299,"y":678,"score":115,"level":0},{"x":1353,"y":678,"score":88,"level":0},{"x":1397,"y":678,"score":128,"level":0},{"x":1407,"y":678,"score":27,"level":0},{"x":1436,"y":678,"score":115,"level":0},{"x":1466,"y":678,"score":206,"level":0},{"x":1480,"y":678,"score":186,"level":0},{"x":1490,"y":678,"score":57,"level":0},{"x":377,"y":679,"score":60,"level":0},{"x":477,"y":679,"score":61,"level":0},{"x":525,"y":679,"score":78,"level":0},{"x":580,"y":679,"score":32,"level":0},{"x":662,"y":679,"score":37,"level":0},{"x":711,"y":679,"score":234,"level":0},{"x":717,"y":679,"score":73,"level":0},{"x":775,"y":679,"score":136,"level":0},{"x":805,"y":679,"score":79,"level":0},{"x":811,"y":679,"score":69,"level":0},{"x":877,"y":679,"score":35,"level":0},{"x":979,"y":679,"score":33,"level":0},{"x":1000,"y":679,"score":26,"level":0},{"x":1080,"y":679,"score":29,"level":0},{"x":1085,"y":679,"score":76,"level":0},{"x":1213,"y":679,"score":251,"level":0},{"x":1260,"y":679,"score":131,"level":0},{"x":1265,"y":679,"score":32,"level":0},{"x":1269,"y":679,"score":66,"level":0},{"x":1280,"y":679,"score":126,"level":0},{"x":1286,"y":679,"score":44,"level":0},{"x":1420,"y":679,"score":126,"level":0},{"x":1429,"y":679,"score":210,"level":0},{"x":380,"y":680,"score":57,"level":0},{"x":542,"y":680,"score":70,"level":0},{"x":643,"y":680,"score":65,"level":0},{"x":680,"y":680,"score":84,"level":0},{"x":708,"y":680,"score":145,"level":0},{"x":728,"y":680,"score":36,"level":0},{"x":784,"y":680,"score":119,"level":0},{"x":908,"y":680,"score":35,"level":0},{"x":940,"y":680,"score":84,"level":0},{"x":962,"y":680,"score":31,"level":0},{"x":1016,"y":680,"score":80,"level":0},{"x":1070,"y":680,"score":41,"level":0},{"x":1095,"y":680,"score":66,"level":0},{"x":1104,"y":680,"score":74,"level":0},{"x":1111,"y":680,"score":47,"level":0},{"x":1124,"y":680,"score":128,"level":0},{"x":1134,"y":680,"score":73,"level":0},{"x":1148,"y":680,"score":74,"level":0},{"x":1191,"y":680,"score":72,"level":0},{"x":1311,"y":680,"score":56,"level":0},{"x":1345,"y":680,"score":110,"level":0},{"x":1350,"y":680,"score":108,"level":0},{"x":1374,"y":680,"score":159,"level":0},{"x":1409,"y":680,"score":54,"level":0},{"x":383,"y":681,"score":80,"level":0},{"x":411,"y":681,"score":118,"level":0},{"x":558,"y":681,"score":98,"level":0},{"x":735,"y":681,"score":154,"level":0},{"x":740,"y":681,"score":57,"level":0},{"x":760,"y":681,"score":29,"level":0},{"x":879,"y":681,"score":61,"level":0},{"x":956,"y":681,"score":45,"level":0},{"x":995,"y":681,"score":189,"level":0},{"x":1006,"y":681,"score":146,"level":0},{"x":1075,"y":681,"score":232,"level":0},{"x":1085,"y":681,"score":107,"level":0},{"x":1143,"y":681,"score":124,"level":0},{"x":1292,"y":681,"score":157,"level":0},{"x":1323,"y":681,"score":78,"level":0},{"x":1421,"y":681,"score":58,"level":0},{"x":1460,"y":681,"score":89,"level":0},{"x":1487,"y":681,"score":125,"level":0},{"x":418,"y":682,"score":30,"level":0},{"x":449,"y":682,"score":178,"level":0},{"x":494,"y":682,"score":74,"level":0},{"x":506,"y":682,"score":151,"level":0},{"x":513,"y":682,"score":138,"level":0},{"x":577,"y":682,"score":109,"level":0},{"x":638,"y":682,"score":35,"level":0},{"x":697,"y":682,"score":58,"level":0},{"x":762,"y":682,"score":52,"level":0},{"x":868,"y":682,"score":52,"level":0},{"x":915,"y":682,"score":54,"level":0},{"x":935,"y":682,"score":37,"level":0},{"x":945,"y":682,"score":43,"level":0},{"x":974,"y":682,"score":96,"level":0},{"x":976,"y":682,"score":82,"level":0},{"x":998,"y":682,"score":83,"level":0},{"x":1064,"y":682,"score":81,"level":0},{"x":1112,"y":682,"score":30,"level":0},{"x":1120,"y":682,"score":184,"level":0},{"x":1137,"y":682,"score":65,"level":0},{"x":1199,"y":682,"score":37,"level":0},{"x":1223,"y":682,"score":212,"level":0},{"x":1242,"y":682,"score":49,"level":0},{"x":1251,"y":682,"score":216,"level":0},{"x":1276,"y":682,"score":64,"level":0},{"x":1282,"y":682,"score":89,"level":0},{"x":1312,"y":682,"score":83,"level":0},{"x":1358,"y":682,"score":30,"level":0},{"x":1363,"y":682,"score":192,"level":0},{"x":1393,"y":682,"score":44,"level":0},{"x":1434,"y":682,"score":39,"level":0},{"x":1453,"y":682,"score":159,"level":0},{"x":422,"y":683,"score":91,"level":0},{"x":484,"y":683,"score":56,"level":0},{"x":516,"y":683,"score":197,"level":0},{"x":522,"y":683,"score":47,"level":0},{"x":543,"y":683,"score":39,"level":0},{"x":564,"y":683,"score":45,"level":0},{"x":597,"y":683,"score":40,"level":0},{"x":621,"y":683,"score":32,"level":0},{"x":702,"y":683,"score":57,"level":0},{"x":739,"y":683,"score":69,"level":0},{"x":745,"y":683,"score":85,"level":0},{"x":752,"y":683,"score":161,"level":0},{"x":827,"y":683,"score":72,"level":0},{"x":831,"y":683,"score":47,"level":0},{"x":841,"y":683,"score":77,"level":0},{"x":852,"y":683,"score":184,"level":0},{"x":858,"y":683,"score":66,"level":0},{"x":924,"y":683,"score":152,"level":0},{"x":970,"y":683,"score":48,"level":0},{"x":1011,"y":683,"score":34,"level":0},{"x":1062,"y":683,"score":64,"level":0},{"x":1103,"y":683,"score":44,"level":0},{"x":1166,"y":683,"score":56,"level":0},{"x":1169,"y":683,"score":65,"level":0},{"x":1183,"y":683,"score":84,"level":0},{"x":1230,"y":683,"score":158,"level":0},{"x":1237,"y":683,"score":47,"level":0},{"x":1298,"y":683,"score":244,"level":0},{"x":1337,"y":683,"score":185,"level":0},{"x":1407,"y":683,"score":117,"level":0},{"x":1415,"y":683,"score":85,"level":0},{"x":1470,"y":683,"score":220,"level":0},{"x":1480,"y":683,"score":167,"level":0},{"x":441,"y":684,"score":53,"level":0},{"x":444,"y":684,"score":48,"level":0},{"x":553,"y":684,"score":63,"level":0},{"x":569,"y":684,"score":38,"level":0},{"x":804,"y":684,"score":66,"level":0},{"x":888,"y":684,"score":28,"level":0},{"x":898,"y":684,"score":86,"level":0},{"x":912,"y":684,"score":136,"level":0},{"x":950,"y":684,"score":52,"level":0},{"x":1019,"y":684,"score":30,"level":0},{"x":1044,"y":684,"score":125,"level":0},{"x":1051,"y":684,"score":108,"level":0},{"x":1093,"y":684,"score":83,"level":0},{"x":1128,"y":684,"score":262,"level":0},{"x":1134,"y":684,"score":56,"level":0},{"x":1207,"y":684,"score":32,"level":0},{"x":1212,"y":684,"score":120,"level":0},{"x":1245,"y":684,"score":73,"level":0},{"x":1257,"y":684,"score":227,"level":0},{"x":1350,"y":684,"score":119,"level":0},{"x":1355,"y":684,"score":186,"level":0},{"x":1383,"y":684,"score":38,"level":0},{"x":1392,"y":684,"score":84,"level":0},{"x":1419,"y":684,"score":64,"level":0},{"x":1428,"y":684,"score":133,"level":0},{"x":1442,"y":684,"score":114,"level":0},{"x":397,"y":685,"score":100,"level":0},{"x":474,"y":685,"score":91,"level":0},{"x":499,"y":685,"score":32,"level":0},{"x":622,"y":685,"score":63,"level":0},{"x":664,"y":685,"score":68,"level":0},{"x":679,"y":685,"score":42,"level":0},{"x":710,"y":685,"score":49,"level":0},{"x":722,"y":685,"score":58,"level":0},{"x":764,"y":685,"score":161,"level":0},{"x":784,"y":685,"score":314,"level":0},{"x":835,"y":685,"score":117,"level":0},{"x":841,"y":685,"score":52,"level":0},{"x":877,"y":685,"score":78,"level":0},{"x":932,"y":685,"score":27,"level":0},{"x":1179,"y":685,"score":171,"level":0},{"x":1206,"y":685,"score":88,"level":0},{"x":1307,"y":685,"score":26,"level":0},{"x":1369,"y":685,"score":42,"level":0},{"x":1373,"y":685,"score":51,"level":0},{"x":1408,"y":685,"score":196,"level":0},{"x":413,"y":686,"score":79,"level":0},{"x":419,"y":686,"score":30,"level":0},{"x":424,"y":686,"score":139,"level":0},{"x":480,"y":686,"score":62,"level":0},{"x":544,"y":686,"score":41,"level":0},{"x":602,"y":686,"score":165,"level":0},{"x":773,"y":686,"score":26,"level":0},{"x":921,"y":686,"score":40,"level":0},{"x":993,"y":686,"score":41,"level":0},{"x":1059,"y":686,"score":45,"level":0},{"x":1100,"y":686,"score":68,"level":0},{"x":1174,"y":686,"score":67,"level":0},{"x":1187,"y":686,"score":77,"level":0},{"x":1242,"y":686,"score":38,"level":0},{"x":1323,"y":686,"score":88,"level":0},{"x":1346,"y":686,"score":83,"level":0},{"x":1421,"y":686,"score":92,"level":0},{"x":406,"y":687,"score":98,"level":0},{"x":447,"y":687,"score":101,"level":0},{"x":510,"y":687,"score":64,"level":0},{"x":558,"y":687,"score":48,"level":0},{"x":573,"y":687,"score":153,"level":0},{"x":635,"y":687,"score":61,"level":0},{"x":715,"y":687,"score":44,"level":0},{"x":830,"y":687,"score":45,"level":0},{"x":917,"y":687,"score":54,"level":0},{"x":1072,"y":687,"score":85,"level":0},{"x":1086,"y":687,"score":52,"level":0},{"x":1091,"y":687,"score":60,"level":0},{"x":1138,"y":687,"score":203,"level":0},{"x":1288,"y":687,"score":53,"level":0},{"x":1297,"y":687,"score":56,"level":0},{"x":1302,"y":687,"score":113,"level":0},{"x":1366,"y":687,"score":142,"level":0},{"x":1448,"y":687,"score":102,"level":0},{"x":412,"y":688,"score":120,"level":0},{"x":565,"y":688,"score":62,"level":0},{"x":645,"y":688,"score":80,"level":0},{"x":700,"y":688,"score":74,"level":0},{"x":740,"y":688,"score":160,"level":0},{"x":746,"y":688,"score":107,"level":0},{"x":799,"y":688,"score":42,"level":0},{"x":814,"y":688,"score":48,"level":0},{"x":866,"y":688,"score":91,"level":0},{"x":900,"y":688,"score":27,"level":0},{"x":909,"y":688,"score":103,"level":0},{"x":926,"y":688,"score":34,"level":0},{"x":985,"y":688,"score":89,"level":0},{"x":1063,"y":688,"score":49,"level":0},{"x":1105,"y":688,"score":31,"level":0},{"x":1133,"y":688,"score":129,"level":0},{"x":1154,"y":688,"score":85,"level":0},{"x":1164,"y":688,"score":26,"level":0},{"x":1171,"y":688,"score":108,"level":0},{"x":1230,"y":688,"score":26,"level":0},{"x":1333,"y":688,"score":30,"level":0},{"x":1397,"y":688,"score":38,"level":0},{"x":1427,"y":688,"score":243,"level":0},{"x":1462,"y":688,"score":30,"level":0},{"x":1466,"y":688,"score":37,"level":0},{"x":1472,"y":688,"score":39,"level":0},{"x":1485,"y":688,"score":72,"level":0},{"x":1490,"y":688,"score":119,"level":0},{"x":434,"y":689,"score":74,"level":0},{"x":497,"y":689,"score":91,"level":0},{"x":534,"y":689,"score":122,"level":0},{"x":556,"y":689,"score":118,"level":0},{"x":702,"y":689,"score":83,"level":0},{"x":808,"y":689,"score":34,"level":0},{"x":855,"y":689,"score":140,"level":0},{"x":1045,"y":689,"score":142,"level":0},{"x":1103,"y":689,"score":45,"level":0},{"x":1128,"y":689,"score":46,"level":0},{"x":1151,"y":689,"score":205,"level":0},{"x":1194,"y":689,"score":35,"level":0},{"x":1204,"y":689,"score":51,"level":0},{"x":1238,"y":689,"score":140,"level":0},{"x":1241,"y":689,"score":57,"level":0},{"x":1244,"y":689,"score":54,"level":0},{"x":1284,"y":689,"score":135,"level":0},{"x":1293,"y":689,"score":121,"level":0},{"x":1314,"y":689,"score":52,"level":0},{"x":1342,"y":689,"score":106,"level":0},{"x":1355,"y":689,"score":212,"level":0},{"x":1361,"y":689,"score":67,"level":0},{"x":1411,"y":689,"score":105,"level":0},{"x":1434,"y":689,"score":172,"level":0},{"x":1449,"y":689,"score":108,"level":0},{"x":377,"y":690,"score":130,"level":0},{"x":396,"y":690,"score":180,"level":0},{"x":627,"y":690,"score":26,"level":0},{"x":651,"y":690,"score":50,"level":0},{"x":710,"y":690,"score":51,"level":0},{"x":765,"y":690,"score":165,"level":0},{"x":931,"y":690,"score":252,"level":0},{"x":957,"y":690,"score":56,"level":0},{"x":1077,"y":690,"score":123,"level":0},{"x":1145,"y":690,"score":176,"level":0},{"x":1273,"y":690,"score":119,"level":0},{"x":1337,"y":690,"score":188,"level":0},{"x":1373,"y":690,"score":54,"level":0},{"x":1395,"y":690,"score":58,"level":0},{"x":1401,"y":690,"score":67,"level":0},{"x":1414,"y":690,"score":96,"level":0},{"x":1442,"y":690,"score":79,"level":0},{"x":402,"y":691,"score":117,"level":0},{"x":454,"y":691,"score":102,"level":0},{"x":488,"y":691,"score":32,"level":0},{"x":619,"y":691,"score":26,"level":0},{"x":663,"y":691,"score":107,"level":0},{"x":684,"y":691,"score":30,"level":0},{"x":759,"y":691,"score":46,"level":0},{"x":822,"y":691,"score":62,"level":0},{"x":834,"y":691,"score":80,"level":0},{"x":884,"y":691,"score":34,"level":0},{"x":896,"y":691,"score":54,"level":0},{"x":916,"y":691,"score":30,"level":0},{"x":923,"y":691,"score":170,"level":0},{"x":1008,"y":691,"score":88,"level":0},{"x":1054,"y":691,"score":58,"level":0},{"x":1059,"y":691,"score":149,"level":0},{"x":1100,"y":691,"score":98,"level":0},{"x":1115,"y":691,"score":50,"level":0},{"x":1121,"y":691,"score":64,"level":0},{"x":1158,"y":691,"score":26,"level":0},{"x":1198,"y":691,"score":40,"level":0},{"x":1279,"y":691,"score":155,"level":0},{"x":1314,"y":691,"score":72,"level":0},{"x":1325,"y":691,"score":224,"level":0},{"x":1420,"y":691,"score":39,"level":0},{"x":381,"y":692,"score":60,"level":0},{"x":434,"y":692,"score":110,"level":0},{"x":445,"y":692,"score":88,"level":0},{"x":490,"y":692,"score":65,"level":0},{"x":501,"y":692,"score":57,"level":0},{"x":514,"y":692,"score":28,"level":0},{"x":522,"y":692,"score":49,"level":0},{"x":550,"y":692,"score":83,"level":0},{"x":565,"y":692,"score":31,"level":0},{"x":609,"y":692,"score":26,"level":0},{"x":744,"y":692,"score":38,"level":0},{"x":776,"y":692,"score":75,"level":0},{"x":816,"y":692,"score":95,"level":0},{"x":841,"y":692,"score":78,"level":0},{"x":851,"y":692,"score":59,"level":0},{"x":1109,"y":692,"score":102,"level":0},{"x":1126,"y":692,"score":76,"level":0},{"x":1163,"y":692,"score":40,"level":0},{"x":1175,"y":692,"score":38,"level":0},{"x":1219,"y":692,"score":138,"level":0},{"x":1244,"y":692,"score":36,"level":0},{"x":1289,"y":692,"score":137,"level":0},{"x":1389,"y":692,"score":100,"level":0},{"x":1425,"y":692,"score":45,"level":0},{"x":1468,"y":692,"score":32,"level":0},{"x":1473,"y":692,"score":37,"level":0},{"x":387,"y":693,"score":103,"level":0},{"x":483,"y":693,"score":63,"level":0},{"x":541,"y":693,"score":32,"level":0},{"x":653,"y":693,"score":83,"level":0},{"x":738,"y":693,"score":69,"level":0},{"x":771,"y":693,"score":72,"level":0},{"x":826,"y":693,"score":26,"level":0},{"x":848,"y":693,"score":80,"level":0},{"x":1133,"y":693,"score":136,"level":0},{"x":1139,"y":693,"score":162,"level":0},{"x":1170,"y":693,"score":36,"level":0},{"x":1193,"y":693,"score":53,"level":0},{"x":1225,"y":693,"score":129,"level":0},{"x":1232,"y":693,"score":101,"level":0},{"x":1302,"y":693,"score":86,"level":0},{"x":1331,"y":693,"score":80,"level":0},{"x":1345,"y":693,"score":99,"level":0},{"x":1360,"y":693,"score":87,"level":0},{"x":1454,"y":693,"score":164,"level":0},{"x":431,"y":694,"score":81,"level":0},{"x":468,"y":694,"score":31,"level":0},{"x":504,"y":694,"score":38,"level":0},{"x":518,"y":694,"score":31,"level":0},{"x":602,"y":694,"score":30,"level":0},{"x":716,"y":694,"score":42,"level":0},{"x":725,"y":694,"score":59,"level":0},{"x":789,"y":694,"score":37,"level":0},{"x":796,"y":694,"score":117,"level":0},{"x":887,"y":694,"score":42,"level":0},{"x":902,"y":694,"score":26,"level":0},{"x":994,"y":694,"score":31,"level":0},{"x":1015,"y":694,"score":32,"level":0},{"x":1046,"y":694,"score":105,"level":0},{"x":1078,"y":694,"score":112,"level":0},{"x":1155,"y":694,"score":45,"level":0},{"x":1160,"y":694,"score":63,"level":0},{"x":1183,"y":694,"score":130,"level":0},{"x":1206,"y":694,"score":102,"level":0},{"x":1243,"y":694,"score":81,"level":0},{"x":1249,"y":694,"score":49,"level":0},{"x":1283,"y":694,"score":58,"level":0},{"x":1286,"y":694,"score":92,"level":0},{"x":1340,"y":694,"score":79,"level":0},{"x":1428,"y":694,"score":100,"level":0},{"x":1481,"y":694,"score":76,"level":0},{"x":447,"y":695,"score":130,"level":0},{"x":481,"y":695,"score":103,"level":0},{"x":572,"y":695,"score":31,"level":0},{"x":658,"y":695,"score":125,"level":0},{"x":695,"y":695,"score":53,"level":0},{"x":810,"y":695,"score":141,"level":0},{"x":816,"y":695,"score":126,"level":0},{"x":821,"y":695,"score":40,"level":0},{"x":951,"y":695,"score":33,"level":0},{"x":978,"y":695,"score":179,"level":0},{"x":1029,"y":695,"score":69,"level":0},{"x":1152,"y":695,"score":68,"level":0},{"x":1201,"y":695,"score":32,"level":0},{"x":1213,"y":695,"score":29,"level":0},{"x":1305,"y":695,"score":74,"level":0},{"x":1354,"y":695,"score":152,"level":0},{"x":1366,"y":695,"score":37,"level":0},{"x":1372,"y":695,"score":30,"level":0},{"x":1413,"y":695,"score":203,"level":0},{"x":1438,"y":695,"score":31,"level":0},{"x":1448,"y":695,"score":71,"level":0},{"x":1471,"y":695,"score":65,"level":0},{"x":1487,"y":695,"score":96,"level":0},{"x":402,"y":696,"score":70,"level":0},{"x":429,"y":696,"score":48,"level":0},{"x":453,"y":696,"score":136,"level":0},{"x":498,"y":696,"score":62,"level":0},{"x":525,"y":696,"score":175,"level":0},{"x":552,"y":696,"score":38,"level":0},{"x":755,"y":696,"score":102,"level":0},{"x":831,"y":696,"score":76,"level":0},{"x":913,"y":696,"score":37,"level":0},{"x":917,"y":696,"score":39,"level":0},{"x":962,"y":696,"score":175,"level":0},{"x":967,"y":696,"score":128,"level":0},{"x":989,"y":696,"score":82,"level":0},{"x":1086,"y":696,"score":115,"level":0},{"x":1108,"y":696,"score":107,"level":0},{"x":1113,"y":696,"score":27,"level":0},{"x":1121,"y":696,"score":45,"level":0},{"x":1189,"y":696,"score":158,"level":0},{"x":1261,"y":696,"score":43,"level":0},{"x":1335,"y":696,"score":323,"level":0},{"x":1341,"y":696,"score":75,"level":0},{"x":1361,"y":696,"score":48,"level":0},{"x":1420,"y":696,"score":100,"level":0},{"x":520,"y":697,"score":83,"level":0},{"x":651,"y":697,"score":118,"level":0},{"x":656,"y":697,"score":80,"level":0},{"x":663,"y":697,"score":44,"level":0},{"x":776,"y":697,"score":48,"level":0},{"x":840,"y":697,"score":32,"level":0},{"x":923,"y":697,"score":126,"level":0},{"x":997,"y":697,"score":54,"level":0},{"x":1021,"y":697,"score":30,"level":0},{"x":1162,"y":697,"score":184,"level":0},{"x":1177,"y":697,"score":170,"level":0},{"x":1219,"y":697,"score":47,"level":0},{"x":1268,"y":697,"score":42,"level":0},{"x":1289,"y":697,"score":101,"level":0},{"x":1329,"y":697,"score":136,"level":0},{"x":1387,"y":697,"score":41,"level":0},{"x":1397,"y":697,"score":102,"level":0},{"x":1457,"y":697,"score":43,"level":0},{"x":407,"y":698,"score":60,"level":0},{"x":547,"y":698,"score":39,"level":0},{"x":565,"y":698,"score":187,"level":0},{"x":930,"y":698,"score":139,"level":0},{"x":941,"y":698,"score":27,"level":0},{"x":1040,"y":698,"score":62,"level":0},{"x":1064,"y":698,"score":129,"level":0},{"x":1136,"y":698,"score":81,"level":0},{"x":1156,"y":698,"score":113,"level":0},{"x":1209,"y":698,"score":43,"level":0},{"x":1232,"y":698,"score":29,"level":0},{"x":1313,"y":698,"score":66,"level":0},{"x":1403,"y":698,"score":291,"level":0},{"x":1490,"y":698,"score":42,"level":0},{"x":387,"y":699,"score":30,"level":0},{"x":537,"y":699,"score":73,"level":0},{"x":559,"y":699,"score":50,"level":0},{"x":664,"y":699,"score":37,"level":0},{"x":681,"y":699,"score":39,"level":0},{"x":800,"y":699,"score":48,"level":0},{"x":843,"y":699,"score":26,"level":0},{"x":845,"y":699,"score":39,"level":0},{"x":886,"y":699,"score":60,"level":0},{"x":1042,"y":699,"score":61,"level":0},{"x":1046,"y":699,"score":96,"level":0},{"x":1058,"y":699,"score":52,"level":0},{"x":1099,"y":699,"score":86,"level":0},{"x":1145,"y":699,"score":50,"level":0},{"x":1234,"y":699,"score":60,"level":0},{"x":1244,"y":699,"score":87,"level":0},{"x":1252,"y":699,"score":29,"level":0},{"x":1257,"y":699,"score":33,"level":0},{"x":1340,"y":699,"score":38,"level":0},{"x":1414,"y":699,"score":147,"level":0},{"x":1430,"y":699,"score":156,"level":0},{"x":1463,"y":699,"score":83,"level":0},{"x":1474,"y":699,"score":52,"level":0},{"x":1480,"y":699,"score":242,"level":0},{"x":399,"y":700,"score":58,"level":0},{"x":437,"y":700,"score":90,"level":0},{"x":446,"y":700,"score":36,"level":0},{"x":481,"y":700,"score":29,"level":0},{"x":495,"y":700,"score":88,"level":0},{"x":521,"y":700,"score":44,"level":0},{"x":564,"y":700,"score":169,"level":0},{"x":622,"y":700,"score":28,"level":0},{"x":643,"y":700,"score":30,"level":0},{"x":736,"y":700,"score":28,"level":0},{"x":767,"y":700,"score":138,"level":0},{"x":785,"y":700,"score":80,"level":0},{"x":833,"y":700,"score":38,"level":0},{"x":852,"y":700,"score":59,"level":0},{"x":937,"y":700,"score":71,"level":0},{"x":978,"y":700,"score":225,"level":0},{"x":991,"y":700,"score":35,"level":0},{"x":1004,"y":700,"score":56,"level":0},{"x":1012,"y":700,"score":57,"level":0},{"x":1052,"y":700,"score":33,"level":0},{"x":1062,"y":700,"score":65,"level":0},{"x":1129,"y":700,"score":97,"level":0},{"x":1147,"y":700,"score":54,"level":0},{"x":1156,"y":700,"score":103,"level":0},{"x":1167,"y":700,"score":31,"level":0},{"x":1240,"y":700,"score":69,"level":0},{"x":1269,"y":700,"score":36,"level":0},{"x":1296,"y":700,"score":52,"level":0},{"x":1354,"y":700,"score":146,"level":0},{"x":1364,"y":700,"score":105,"level":0},{"x":1424,"y":700,"score":37,"level":0},{"x":1438,"y":700,"score":36,"level":0},{"x":1452,"y":700,"score":121,"level":0},{"x":428,"y":701,"score":54,"level":0},{"x":500,"y":701,"score":38,"level":0},{"x":531,"y":701,"score":73,"level":0},{"x":667,"y":701,"score":41,"level":0},{"x":730,"y":701,"score":34,"level":0},{"x":765,"y":701,"score":90,"level":0},{"x":814,"y":701,"score":70,"level":0},{"x":912,"y":701,"score":55,"level":0},{"x":917,"y":701,"score":107,"level":0},{"x":926,"y":701,"score":78,"level":0},{"x":931,"y":701,"score":156,"level":0},{"x":968,"y":701,"score":150,"level":0},{"x":1015,"y":701,"score":66,"level":0},{"x":1107,"y":701,"score":38,"level":0},{"x":1121,"y":701,"score":35,"level":0},{"x":1172,"y":701,"score":96,"level":0},{"x":1205,"y":701,"score":44,"level":0},{"x":1214,"y":701,"score":92,"level":0},{"x":1257,"y":701,"score":48,"level":0},{"x":1370,"y":701,"score":229,"level":0},{"x":1393,"y":701,"score":48,"level":0},{"x":1399,"y":701,"score":37,"level":0},{"x":1486,"y":701,"score":45,"level":0},{"x":417,"y":702,"score":54,"level":0},{"x":453,"y":702,"score":34,"level":0},{"x":468,"y":702,"score":52,"level":0},{"x":487,"y":702,"score":74,"level":0},{"x":541,"y":702,"score":176,"level":0},{"x":659,"y":702,"score":46,"level":0},{"x":835,"y":702,"score":29,"level":0},{"x":875,"y":702,"score":66,"level":0},{"x":1021,"y":702,"score":68,"level":0},{"x":1081,"y":702,"score":59,"level":0},{"x":1087,"y":702,"score":225,"level":0},{"x":1094,"y":702,"score":229,"level":0},{"x":1199,"y":702,"score":38,"level":0},{"x":1250,"y":702,"score":37,"level":0},{"x":1334,"y":702,"score":30,"level":0},{"x":1344,"y":702,"score":44,"level":0},{"x":1348,"y":702,"score":85,"level":0},{"x":1375,"y":702,"score":94,"level":0},{"x":409,"y":703,"score":87,"level":0},{"x":603,"y":703,"score":36,"level":0},{"x":669,"y":703,"score":33,"level":0},{"x":707,"y":703,"score":54,"level":0},{"x":897,"y":703,"score":177,"level":0},{"x":905,"y":703,"score":40,"level":0},{"x":941,"y":703,"score":162,"level":0},{"x":984,"y":703,"score":53,"level":0},{"x":994,"y":703,"score":44,"level":0},{"x":1058,"y":703,"score":149,"level":0},{"x":1063,"y":703,"score":28,"level":0},{"x":1193,"y":703,"score":42,"level":0},{"x":1210,"y":703,"score":148,"level":0},{"x":1217,"y":703,"score":64,"level":0},{"x":1263,"y":703,"score":42,"level":0},{"x":1316,"y":703,"score":76,"level":0},{"x":1385,"y":703,"score":74,"level":0},{"x":1403,"y":703,"score":92,"level":0},{"x":1418,"y":703,"score":277,"level":0},{"x":1458,"y":703,"score":58,"level":0},{"x":460,"y":704,"score":35,"level":0},{"x":524,"y":704,"score":40,"level":0},{"x":597,"y":704,"score":190,"level":0},{"x":682,"y":704,"score":49,"level":0},{"x":801,"y":704,"score":61,"level":0},{"x":865,"y":704,"score":89,"level":0},{"x":1003,"y":704,"score":62,"level":0},{"x":1014,"y":704,"score":31,"level":0},{"x":1052,"y":704,"score":42,"level":0},{"x":1160,"y":704,"score":82,"level":0},{"x":1204,"y":704,"score":54,"level":0},{"x":1225,"y":704,"score":36,"level":0},{"x":1244,"y":704,"score":86,"level":0},{"x":1292,"y":704,"score":52,"level":0},{"x":1325,"y":704,"score":32,"level":0},{"x":1361,"y":704,"score":57,"level":0},{"x":1380,"y":704,"score":83,"level":0},{"x":1411,"y":704,"score":169,"level":0},{"x":1430,"y":704,"score":63,"level":0},{"x":1445,"y":704,"score":88,"level":0},{"x":1464,"y":704,"score":86,"level":0},{"x":447,"y":705,"score":104,"level":0},{"x":546,"y":705,"score":31,"level":0},{"x":568,"y":705,"score":42,"level":0},{"x":604,"y":705,"score":36,"level":0},{"x":704,"y":705,"score":44,"level":0},{"x":754,"y":705,"score":68,"level":0},{"x":784,"y":705,"score":37,"level":0},{"x":797,"y":705,"score":29,"level":0},{"x":828,"y":705,"score":41,"level":0},{"x":888,"y":705,"score":90,"level":0},{"x":928,"y":705,"score":57,"level":0},{"x":934,"y":705,"score":48,"level":0},{"x":968,"y":705,"score":64,"level":0},{"x":1009,"y":705,"score":130,"level":0},{"x":1044,"y":705,"score":35,"level":0},{"x":1130,"y":705,"score":83,"level":0},{"x":1137,"y":705,"score":97,"level":0},{"x":1260,"y":705,"score":27,"level":0},{"x":1309,"y":705,"score":148,"level":0},{"x":1340,"y":705,"score":80,"level":0},{"x":1375,"y":705,"score":54,"level":0},{"x":1389,"y":705,"score":72,"level":0},{"x":1471,"y":705,"score":179,"level":0},{"x":1478,"y":705,"score":105,"level":0},{"x":377,"y":706,"score":187,"level":0},{"x":392,"y":706,"score":38,"level":0},{"x":433,"y":706,"score":48,"level":0},{"x":494,"y":706,"score":113,"level":0},{"x":563,"y":706,"score":82,"level":0},{"x":731,"y":706,"score":36,"level":0},{"x":745,"y":706,"score":49,"level":0},{"x":791,"y":706,"score":134,"level":0},{"x":811,"y":706,"score":32,"level":0},{"x":1016,"y":706,"score":89,"level":0},{"x":1069,"y":706,"score":208,"level":0},{"x":1101,"y":706,"score":72,"level":0},{"x":1118,"y":706,"score":172,"level":0},{"x":1169,"y":706,"score":159,"level":0},{"x":1183,"y":706,"score":94,"level":0},{"x":1231,"y":706,"score":162,"level":0},{"x":1280,"y":706,"score":32,"level":0},{"x":1319,"y":706,"score":31,"level":0},{"x":1452,"y":706,"score":136,"level":0},{"x":1485,"y":706,"score":162,"level":0},{"x":388,"y":707,"score":56,"level":0},{"x":426,"y":707,"score":171,"level":0},{"x":488,"y":707,"score":84,"level":0},{"x":501,"y":707,"score":105,"level":0},{"x":658,"y":707,"score":140,"level":0},{"x":818,"y":707,"score":66,"level":0},{"x":851,"y":707,"score":31,"level":0},{"x":874,"y":707,"score":71,"level":0},{"x":882,"y":707,"score":75,"level":0},{"x":969,"y":707,"score":136,"level":0},{"x":983,"y":707,"score":71,"level":0},{"x":1027,"y":707,"score":107,"level":0},{"x":1106,"y":707,"score":100,"level":0},{"x":1123,"y":707,"score":42,"level":0},{"x":1297,"y":707,"score":143,"level":0},{"x":1312,"y":707,"score":85,"level":0},{"x":1331,"y":707,"score":48,"level":0},{"x":1340,"y":707,"score":84,"level":0},{"x":1354,"y":707,"score":114,"level":0},{"x":1369,"y":707,"score":116,"level":0},{"x":1375,"y":707,"score":146,"level":0},{"x":1384,"y":707,"score":47,"level":0},{"x":1397,"y":707,"score":92,"level":0},{"x":415,"y":708,"score":33,"level":0},{"x":432,"y":708,"score":28,"level":0},{"x":439,"y":708,"score":61,"level":0},{"x":483,"y":708,"score":40,"level":0},{"x":569,"y":708,"score":33,"level":0},{"x":608,"y":708,"score":46,"level":0},{"x":644,"y":708,"score":41,"level":0},{"x":670,"y":708,"score":148,"level":0},{"x":736,"y":708,"score":135,"level":0},{"x":743,"y":708,"score":83,"level":0},{"x":763,"y":708,"score":178,"level":0},{"x":901,"y":708,"score":62,"level":0},{"x":938,"y":708,"score":30,"level":0},{"x":959,"y":708,"score":155,"level":0},{"x":987,"y":708,"score":82,"level":0},{"x":999,"y":708,"score":38,"level":0},{"x":1021,"y":708,"score":120,"level":0},{"x":1032,"y":708,"score":121,"level":0},{"x":1089,"y":708,"score":96,"level":0},{"x":1095,"y":708,"score":131,"level":0},{"x":1140,"y":708,"score":108,"level":0},{"x":1178,"y":708,"score":71,"level":0},{"x":1203,"y":708,"score":79,"level":0},{"x":1215,"y":708,"score":212,"level":0},{"x":1285,"y":708,"score":169,"level":0},{"x":1436,"y":708,"score":114,"level":0},{"x":445,"y":709,"score":122,"level":0},{"x":455,"y":709,"score":99,"level":0},{"x":518,"y":709,"score":48,"level":0},{"x":694,"y":709,"score":55,"level":0},{"x":769,"y":709,"score":112,"level":0},{"x":774,"y":709,"score":54,"level":0},{"x":781,"y":709,"score":110,"level":0},{"x":795,"y":709,"score":30,"level":0},{"x":810,"y":709,"score":132,"level":0},{"x":862,"y":709,"score":69,"level":0},{"x":951,"y":709,"score":62,"level":0},{"x":994,"y":709,"score":202,"level":0},{"x":1004,"y":709,"score":91,"level":0},{"x":1015,"y":709,"score":76,"level":0},{"x":1038,"y":709,"score":168,"level":0},{"x":1162,"y":709,"score":56,"level":0},{"x":1229,"y":709,"score":66,"level":0},{"x":1336,"y":709,"score":34,"level":0},{"x":1354,"y":709,"score":185,"level":0},{"x":1375,"y":709,"score":63,"level":0},{"x":1380,"y":709,"score":63,"level":0},{"x":1389,"y":709,"score":104,"level":0},{"x":1425,"y":709,"score":192,"level":0},{"x":1431,"y":709,"score":74,"level":0},{"x":411,"y":710,"score":72,"level":0},{"x":418,"y":710,"score":59,"level":0},{"x":473,"y":710,"score":26,"level":0},{"x":571,"y":710,"score":26,"level":0},{"x":598,"y":710,"score":60,"level":0},{"x":679,"y":710,"score":80,"level":0},{"x":721,"y":710,"score":88,"level":0},{"x":755,"y":710,"score":127,"level":0},{"x":800,"y":710,"score":94,"level":0},{"x":835,"y":710,"score":40,"level":0},{"x":888,"y":710,"score":172,"level":0},{"x":933,"y":710,"score":42,"level":0},{"x":1053,"y":710,"score":149,"level":0},{"x":1134,"y":710,"score":64,"level":0},{"x":1139,"y":710,"score":71,"level":0},{"x":1197,"y":710,"score":38,"level":0},{"x":1206,"y":710,"score":41,"level":0},{"x":1234,"y":710,"score":71,"level":0},{"x":1451,"y":710,"score":46,"level":0},{"x":1470,"y":710,"score":43,"level":0},{"x":381,"y":711,"score":40,"level":0},{"x":396,"y":711,"score":55,"level":0},{"x":421,"y":711,"score":34,"level":0},{"x":439,"y":711,"score":27,"level":0},{"x":504,"y":711,"score":34,"level":0},{"x":527,"y":711,"score":44,"level":0},{"x":529,"y":711,"score":76,"level":0},{"x":552,"y":711,"score":63,"level":0},{"x":558,"y":711,"score":55,"level":0},{"x":563,"y":711,"score":50,"level":0},{"x":596,"y":711,"score":37,"level":0},{"x":675,"y":711,"score":73,"level":0},{"x":1072,"y":711,"score":37,"level":0},{"x":1144,"y":711,"score":46,"level":0},{"x":1210,"y":711,"score":52,"level":0},{"x":1275,"y":711,"score":100,"level":0},{"x":1318,"y":711,"score":228,"level":0},{"x":1323,"y":711,"score":28,"level":0},{"x":1337,"y":711,"score":134,"level":0},{"x":1363,"y":711,"score":62,"level":0},{"x":1390,"y":711,"score":94,"level":0},{"x":1395,"y":711,"score":180,"level":0},{"x":1404,"y":711,"score":39,"level":0},{"x":1443,"y":711,"score":202,"level":0},{"x":1477,"y":711,"score":217,"level":0},{"x":1485,"y":711,"score":121,"level":0},{"x":426,"y":712,"score":42,"level":0},{"x":468,"y":712,"score":31,"level":0},{"x":539,"y":712,"score":44,"level":0},{"x":637,"y":712,"score":42,"level":0},{"x":640,"y":712,"score":37,"level":0},{"x":666,"y":712,"score":87,"level":0},{"x":671,"y":712,"score":80,"level":0},{"x":691,"y":712,"score":46,"level":0},{"x":796,"y":712,"score":103,"level":0},{"x":875,"y":712,"score":149,"level":0},{"x":915,"y":712,"score":99,"level":0},{"x":935,"y":712,"score":39,"level":0},{"x":963,"y":712,"score":62,"level":0},{"x":970,"y":712,"score":116,"level":0},{"x":981,"y":712,"score":63,"level":0},{"x":989,"y":712,"score":39,"level":0},{"x":1047,"y":712,"score":88,"level":0},{"x":1117,"y":712,"score":190,"level":0},{"x":1123,"y":712,"score":66,"level":0},{"x":1131,"y":712,"score":66,"level":0},{"x":1297,"y":712,"score":71,"level":0},{"x":1347,"y":712,"score":83,"level":0},{"x":403,"y":713,"score":63,"level":0},{"x":422,"y":713,"score":33,"level":0},{"x":431,"y":713,"score":68,"level":0},{"x":473,"y":713,"score":26,"level":0},{"x":509,"y":713,"score":142,"level":0},{"x":553,"y":713,"score":53,"level":0},{"x":680,"y":713,"score":60,"level":0},{"x":685,"y":713,"score":94,"level":0},{"x":737,"y":713,"score":103,"level":0},{"x":824,"y":713,"score":96,"level":0},{"x":929,"y":713,"score":37,"level":0},{"x":959,"y":713,"score":51,"level":0},{"x":1022,"y":713,"score":28,"level":0},{"x":1087,"y":713,"score":119,"level":0},{"x":1097,"y":713,"score":41,"level":0},{"x":1136,"y":713,"score":65,"level":0},{"x":1166,"y":713,"score":47,"level":0},{"x":1185,"y":713,"score":202,"level":0},{"x":1277,"y":713,"score":113,"level":0},{"x":1358,"y":713,"score":40,"level":0},{"x":1385,"y":713,"score":93,"level":0},{"x":388,"y":714,"score":42,"level":0},{"x":409,"y":714,"score":26,"level":0},{"x":445,"y":714,"score":73,"level":0},{"x":482,"y":714,"score":50,"level":0},{"x":488,"y":714,"score":50,"level":0},{"x":501,"y":714,"score":26,"level":0},{"x":559,"y":714,"score":108,"level":0},{"x":571,"y":714,"score":36,"level":0},{"x":745,"y":714,"score":209,"level":0},{"x":751,"y":714,"score":122,"level":0},{"x":758,"y":714,"score":36,"level":0},{"x":763,"y":714,"score":103,"level":0},{"x":946,"y":714,"score":85,"level":0},{"x":954,"y":714,"score":62,"level":0},{"x":1041,"y":714,"score":81,"level":0},{"x":1055,"y":714,"score":28,"level":0},{"x":1141,"y":714,"score":36,"level":0},{"x":1162,"y":714,"score":53,"level":0},{"x":1172,"y":714,"score":27,"level":0},{"x":1174,"y":714,"score":83,"level":0},{"x":1196,"y":714,"score":115,"level":0},{"x":1285,"y":714,"score":65,"level":0},{"x":1294,"y":714,"score":84,"level":0},{"x":1345,"y":714,"score":154,"level":0},{"x":1355,"y":714,"score":96,"level":0},{"x":1487,"y":714,"score":59,"level":0},{"x":403,"y":715,"score":41,"level":0},{"x":423,"y":715,"score":34,"level":0},{"x":448,"y":715,"score":93,"level":0},{"x":459,"y":715,"score":47,"level":0},{"x":530,"y":715,"score":57,"level":0},{"x":536,"y":715,"score":72,"level":0},{"x":686,"y":715,"score":74,"level":0},{"x":698,"y":715,"score":43,"level":0},{"x":708,"y":715,"score":58,"level":0},{"x":769,"y":715,"score":77,"level":0},{"x":797,"y":715,"score":75,"level":0},{"x":801,"y":715,"score":50,"level":0},{"x":900,"y":715,"score":49,"level":0},{"x":910,"y":715,"score":36,"level":0},{"x":929,"y":715,"score":86,"level":0},{"x":977,"y":715,"score":71,"level":0},{"x":1180,"y":715,"score":98,"level":0},{"x":1235,"y":715,"score":116,"level":0},{"x":1242,"y":715,"score":113,"level":0},{"x":1278,"y":715,"score":74,"level":0},{"x":1296,"y":715,"score":88,"level":0},{"x":1335,"y":715,"score":40,"level":0},{"x":1374,"y":715,"score":126,"level":0},{"x":1391,"y":715,"score":103,"level":0},{"x":1404,"y":715,"score":124,"level":0},{"x":1452,"y":715,"score":41,"level":0},{"x":474,"y":716,"score":27,"level":0},{"x":481,"y":716,"score":46,"level":0},{"x":515,"y":716,"score":42,"level":0},{"x":571,"y":716,"score":33,"level":0},{"x":664,"y":716,"score":146,"level":0},{"x":785,"y":716,"score":235,"level":0},{"x":835,"y":716,"score":60,"level":0},{"x":861,"y":716,"score":65,"level":0},{"x":1011,"y":716,"score":50,"level":0},{"x":1066,"y":716,"score":52,"level":0},{"x":1092,"y":716,"score":38,"level":0},{"x":1107,"y":716,"score":130,"level":0},{"x":1127,"y":716,"score":68,"level":0},{"x":1202,"y":716,"score":165,"level":0},{"x":1217,"y":716,"score":207,"level":0},{"x":1256,"y":716,"score":161,"level":0},{"x":1265,"y":716,"score":79,"level":0},{"x":1409,"y":716,"score":106,"level":0},{"x":1424,"y":716,"score":215,"level":0},{"x":1471,"y":716,"score":105,"level":0},{"x":392,"y":717,"score":69,"level":0},{"x":397,"y":717,"score":39,"level":0},{"x":493,"y":717,"score":28,"level":0},{"x":526,"y":717,"score":51,"level":0},{"x":654,"y":717,"score":147,"level":0},{"x":778,"y":717,"score":87,"level":0},{"x":915,"y":717,"score":42,"level":0},{"x":986,"y":717,"score":63,"level":0},{"x":1125,"y":717,"score":59,"level":0},{"x":1152,"y":717,"score":75,"level":0},{"x":1212,"y":717,"score":121,"level":0},{"x":1273,"y":717,"score":216,"level":0},{"x":1290,"y":717,"score":133,"level":0},{"x":1301,"y":717,"score":255,"level":0},{"x":1358,"y":717,"score":102,"level":0},{"x":1490,"y":717,"score":77,"level":0},{"x":508,"y":718,"score":50,"level":0},{"x":532,"y":718,"score":31,"level":0},{"x":556,"y":718,"score":87,"level":0},{"x":690,"y":718,"score":55,"level":0},{"x":809,"y":718,"score":75,"level":0},{"x":888,"y":718,"score":48,"level":0},{"x":893,"y":718,"score":36,"level":0},{"x":904,"y":718,"score":32,"level":0},{"x":907,"y":718,"score":65,"level":0},{"x":1150,"y":718,"score":30,"level":0},{"x":1204,"y":718,"score":170,"level":0},{"x":1307,"y":718,"score":27,"level":0},{"x":1350,"y":718,"score":95,"level":0},{"x":1382,"y":718,"score":84,"level":0},{"x":1395,"y":718,"score":64,"level":0},{"x":1430,"y":718,"score":26,"level":0},{"x":385,"y":719,"score":108,"level":0},{"x":633,"y":719,"score":26,"level":0},{"x":677,"y":719,"score":53,"level":0},{"x":743,"y":719,"score":36,"level":0},{"x":757,"y":719,"score":66,"level":0},{"x":794,"y":719,"score":85,"level":0},{"x":1041,"y":719,"score":93,"level":0},{"x":1189,"y":719,"score":194,"level":0},{"x":1236,"y":719,"score":55,"level":0},{"x":1257,"y":719,"score":254,"level":0},{"x":1282,"y":719,"score":114,"level":0},{"x":1290,"y":719,"score":110,"level":0},{"x":1327,"y":719,"score":211,"level":0},{"x":1397,"y":719,"score":118,"level":0},{"x":1483,"y":719,"score":118,"level":0},{"x":376,"y":720,"score":63,"level":0},{"x":403,"y":720,"score":64,"level":0},{"x":406,"y":720,"score":30,"level":0},{"x":413,"y":720,"score":69,"level":0},{"x":423,"y":720,"score":63,"level":0},{"x":545,"y":720,"score":70,"level":0},{"x":673,"y":720,"score":78,"level":0},{"x":697,"y":720,"score":51,"level":0},{"x":714,"y":720,"score":38,"level":0},{"x":723,"y":720,"score":40,"level":0},{"x":765,"y":720,"score":190,"level":0},{"x":799,"y":720,"score":78,"level":0},{"x":804,"y":720,"score":46,"level":0},{"x":852,"y":720,"score":52,"level":0},{"x":923,"y":720,"score":111,"level":0},{"x":929,"y":720,"score":30,"level":0},{"x":984,"y":720,"score":34,"level":0},{"x":1025,"y":720,"score":41,"level":0},{"x":1036,"y":720,"score":92,"level":0},{"x":1083,"y":720,"score":81,"level":0},{"x":1094,"y":720,"score":86,"level":0},{"x":1135,"y":720,"score":54,"level":0},{"x":1163,"y":720,"score":31,"level":0},{"x":1184,"y":720,"score":148,"level":0},{"x":1229,"y":720,"score":134,"level":0},{"x":1243,"y":720,"score":238,"level":0},{"x":1284,"y":720,"score":92,"level":0},{"x":1348,"y":720,"score":125,"level":0},{"x":1379,"y":720,"score":125,"level":0},{"x":1403,"y":720,"score":104,"level":0},{"x":1417,"y":720,"score":49,"level":0},{"x":1435,"y":720,"score":154,"level":0},{"x":1441,"y":720,"score":192,"level":0},{"x":1462,"y":720,"score":66,"level":0},{"x":409,"y":721,"score":57,"level":0},{"x":428,"y":721,"score":27,"level":0},{"x":461,"y":721,"score":51,"level":0},{"x":473,"y":721,"score":38,"level":0},{"x":599,"y":721,"score":58,"level":0},{"x":649,"y":721,"score":53,"level":0},{"x":685,"y":721,"score":46,"level":0},{"x":754,"y":721,"score":89,"level":0},{"x":785,"y":721,"score":32,"level":0},{"x":814,"y":721,"score":38,"level":0},{"x":816,"y":721,"score":53,"level":0},{"x":865,"y":721,"score":54,"level":0},{"x":896,"y":721,"score":75,"level":0},{"x":978,"y":721,"score":110,"level":0},{"x":1023,"y":721,"score":37,"level":0},{"x":1088,"y":721,"score":49,"level":0},{"x":1138,"y":721,"score":59,"level":0},{"x":1209,"y":721,"score":65,"level":0},{"x":1401,"y":721,"score":120,"level":0},{"x":1408,"y":721,"score":86,"level":0},{"x":1457,"y":721,"score":83,"level":0},{"x":1468,"y":721,"score":65,"level":0},{"x":418,"y":722,"score":39,"level":0},{"x":515,"y":722,"score":78,"level":0},{"x":538,"y":722,"score":91,"level":0},{"x":679,"y":722,"score":208,"level":0},{"x":825,"y":722,"score":115,"level":0},{"x":918,"y":722,"score":115,"level":0},{"x":988,"y":722,"score":52,"level":0},{"x":1057,"y":722,"score":49,"level":0},{"x":1171,"y":722,"score":130,"level":0},{"x":1200,"y":722,"score":28,"level":0},{"x":1218,"y":722,"score":42,"level":0},{"x":1277,"y":722,"score":46,"level":0},{"x":1289,"y":722,"score":53,"level":0},{"x":1341,"y":722,"score":70,"level":0},{"x":1354,"y":722,"score":43,"level":0},{"x":1390,"y":722,"score":87,"level":0},{"x":1478,"y":722,"score":211,"level":0},{"x":393,"y":723,"score":71,"level":0},{"x":592,"y":723,"score":43,"level":0},{"x":645,"y":723,"score":68,"level":0},{"x":703,"y":723,"score":115,"level":0},{"x":799,"y":723,"score":132,"level":0},{"x":882,"y":723,"score":41,"level":0},{"x":909,"y":723,"score":190,"level":0},{"x":978,"y":723,"score":28,"level":0},{"x":993,"y":723,"score":124,"level":0},{"x":1015,"y":723,"score":86,"level":0},{"x":1030,"y":723,"score":180,"level":0},{"x":1110,"y":723,"score":97,"level":0},{"x":1295,"y":723,"score":142,"level":0},{"x":1488,"y":723,"score":67,"level":0},{"x":398,"y":724,"score":70,"level":0},{"x":504,"y":724,"score":68,"level":0},{"x":557,"y":724,"score":32,"level":0},{"x":604,"y":724,"score":110,"level":0},{"x":662,"y":724,"score":68,"level":0},{"x":729,"y":724,"score":137,"level":0},{"x":759,"y":724,"score":61,"level":0},{"x":775,"y":724,"score":31,"level":0},{"x":892,"y":724,"score":96,"level":0},{"x":960,"y":724,"score":109,"level":0},{"x":983,"y":724,"score":94,"level":0},{"x":1017,"y":724,"score":100,"level":0},{"x":1052,"y":724,"score":101,"level":0},{"x":1068,"y":724,"score":34,"level":0},{"x":1085,"y":724,"score":31,"level":0},{"x":1102,"y":724,"score":31,"level":0},{"x":1107,"y":724,"score":119,"level":0},{"x":1144,"y":724,"score":112,"level":0},{"x":1173,"y":724,"score":178,"level":0},{"x":1194,"y":724,"score":30,"level":0},{"x":1232,"y":724,"score":144,"level":0},{"x":1272,"y":724,"score":88,"level":0},{"x":1298,"y":724,"score":119,"level":0},{"x":1303,"y":724,"score":57,"level":0},{"x":1405,"y":724,"score":59,"level":0},{"x":1433,"y":724,"score":42,"level":0},{"x":377,"y":725,"score":170,"level":0},{"x":417,"y":725,"score":44,"level":0},{"x":445,"y":725,"score":30,"level":0},{"x":533,"y":725,"score":137,"level":0},{"x":545,"y":725,"score":45,"level":0},{"x":561,"y":725,"score":38,"level":0},{"x":689,"y":725,"score":147,"level":0},{"x":696,"y":725,"score":135,"level":0},{"x":704,"y":725,"score":113,"level":0},{"x":709,"y":725,"score":29,"level":0},{"x":714,"y":725,"score":113,"level":0},{"x":791,"y":725,"score":57,"level":0},{"x":870,"y":725,"score":138,"level":0},{"x":876,"y":725,"score":30,"level":0},{"x":1114,"y":725,"score":58,"level":0},{"x":1119,"y":725,"score":276,"level":0},{"x":1184,"y":725,"score":73,"level":0},{"x":1238,"y":725,"score":40,"level":0},{"x":1253,"y":725,"score":32,"level":0},{"x":1258,"y":725,"score":57,"level":0},{"x":1347,"y":725,"score":87,"level":0},{"x":1377,"y":725,"score":259,"level":0},{"x":1399,"y":725,"score":71,"level":0},{"x":1479,"y":725,"score":201,"level":0},{"x":447,"y":726,"score":29,"level":0},{"x":461,"y":726,"score":31,"level":0},{"x":469,"y":726,"score":125,"level":0},{"x":499,"y":726,"score":28,"level":0},{"x":739,"y":726,"score":77,"level":0},{"x":766,"y":726,"score":39,"level":0},{"x":825,"y":726,"score":94,"level":0},{"x":830,"y":726,"score":79,"level":0},{"x":886,"y":726,"score":120,"level":0},{"x":897,"y":726,"score":241,"level":0},{"x":916,"y":726,"score":49,"level":0},{"x":936,"y":726,"score":89,"level":0},{"x":1035,"y":726,"score":65,"level":0},{"x":1125,"y":726,"score":116,"level":0},{"x":1155,"y":726,"score":43,"level":0},{"x":1226,"y":726,"score":99,"level":0},{"x":1284,"y":726,"score":99,"level":0},{"x":1409,"y":726,"score":33,"level":0},{"x":1441,"y":726,"score":40,"level":0},{"x":1470,"y":726,"score":121,"level":0},{"x":514,"y":727,"score":64,"level":0},{"x":558,"y":727,"score":45,"level":0},{"x":684,"y":727,"score":73,"level":0},{"x":747,"y":727,"score":26,"level":0},{"x":756,"y":727,"score":61,"level":0},{"x":821,"y":727,"score":43,"level":0},{"x":987,"y":727,"score":92,"level":0},{"x":1047,"y":727,"score":135,"level":0},{"x":1057,"y":727,"score":53,"level":0},{"x":1098,"y":727,"score":48,"level":0},{"x":1133,"y":727,"score":184,"level":0},{"x":1178,"y":727,"score":59,"level":0},{"x":1211,"y":727,"score":148,"level":0},{"x":1368,"y":727,"score":225,"level":0},{"x":1454,"y":727,"score":101,"level":0},{"x":419,"y":728,"score":92,"level":0},{"x":544,"y":728,"score":48,"level":0},{"x":672,"y":728,"score":76,"level":0},{"x":772,"y":728,"score":53,"level":0},{"x":995,"y":728,"score":106,"level":0},{"x":1065,"y":728,"score":54,"level":0},{"x":1077,"y":728,"score":56,"level":0},{"x":1115,"y":728,"score":78,"level":0},{"x":1159,"y":728,"score":33,"level":0},{"x":1162,"y":728,"score":31,"level":0},{"x":1215,"y":728,"score":90,"level":0},{"x":1234,"y":728,"score":97,"level":0},{"x":1267,"y":728,"score":35,"level":0},{"x":1294,"y":728,"score":59,"level":0},{"x":1305,"y":728,"score":68,"level":0},{"x":1447,"y":728,"score":139,"level":0},{"x":1487,"y":728,"score":192,"level":0},{"x":385,"y":729,"score":41,"level":0},{"x":391,"y":729,"score":46,"level":0},{"x":493,"y":729,"score":44,"level":0},{"x":579,"y":729,"score":63,"level":0},{"x":592,"y":729,"score":85,"level":0},{"x":602,"y":729,"score":57,"level":0},{"x":729,"y":729,"score":85,"level":0},{"x":738,"y":729,"score":78,"level":0},{"x":802,"y":729,"score":71,"level":0},{"x":842,"y":729,"score":137,"level":0},{"x":924,"y":729,"score":157,"level":0},{"x":938,"y":729,"score":46,"level":0},{"x":1060,"y":729,"score":55,"level":0},{"x":1170,"y":729,"score":61,"level":0},{"x":1271,"y":729,"score":73,"level":0},{"x":1298,"y":729,"score":84,"level":0},{"x":1384,"y":729,"score":171,"level":0},{"x":405,"y":730,"score":26,"level":0},{"x":440,"y":730,"score":75,"level":0},{"x":454,"y":730,"score":49,"level":0},{"x":480,"y":730,"score":80,"level":0},{"x":644,"y":730,"score":114,"level":0},{"x":654,"y":730,"score":49,"level":0},{"x":707,"y":730,"score":133,"level":0},{"x":715,"y":730,"score":31,"level":0},{"x":720,"y":730,"score":101,"level":0},{"x":793,"y":730,"score":64,"level":0},{"x":838,"y":730,"score":126,"level":0},{"x":850,"y":730,"score":58,"level":0},{"x":947,"y":730,"score":139,"level":0},{"x":1017,"y":730,"score":94,"level":0},{"x":1196,"y":730,"score":180,"level":0},{"x":1202,"y":730,"score":33,"level":0},{"x":1240,"y":730,"score":94,"level":0},{"x":1280,"y":730,"score":53,"level":0},{"x":1289,"y":730,"score":36,"level":0},{"x":1294,"y":730,"score":78,"level":0},{"x":1377,"y":730,"score":217,"level":0},{"x":1423,"y":730,"score":82,"level":0},{"x":1426,"y":730,"score":34,"level":0},{"x":377,"y":731,"score":37,"level":0},{"x":502,"y":731,"score":70,"level":0},{"x":508,"y":731,"score":85,"level":0},{"x":548,"y":731,"score":60,"level":0},{"x":694,"y":731,"score":52,"level":0},{"x":712,"y":731,"score":70,"level":0},{"x":765,"y":731,"score":102,"level":0},{"x":776,"y":731,"score":35,"level":0},{"x":859,"y":731,"score":33,"level":0},{"x":926,"y":731,"score":172,"level":0},{"x":936,"y":731,"score":50,"level":0},{"x":983,"y":731,"score":305,"level":0},{"x":1000,"y":731,"score":163,"level":0},{"x":1258,"y":731,"score":162,"level":0},{"x":1274,"y":731,"score":70,"level":0},{"x":1322,"y":731,"score":28,"level":0},{"x":1334,"y":731,"score":188,"level":0},{"x":1402,"y":731,"score":86,"level":0},{"x":396,"y":732,"score":65,"level":0},{"x":421,"y":732,"score":67,"level":0},{"x":461,"y":732,"score":36,"level":0},{"x":571,"y":732,"score":73,"level":0},{"x":577,"y":732,"score":43,"level":0},{"x":664,"y":732,"score":52,"level":0},{"x":738,"y":732,"score":68,"level":0},{"x":760,"y":732,"score":72,"level":0},{"x":887,"y":732,"score":27,"level":0},{"x":941,"y":732,"score":81,"level":0},{"x":975,"y":732,"score":102,"level":0},{"x":1009,"y":732,"score":38,"level":0},{"x":1027,"y":732,"score":31,"level":0},{"x":1033,"y":732,"score":254,"level":0},{"x":1043,"y":732,"score":33,"level":0},{"x":1073,"y":732,"score":39,"level":0},{"x":1126,"y":732,"score":139,"level":0},{"x":1232,"y":732,"score":27,"level":0},{"x":1375,"y":732,"score":117,"level":0},{"x":1416,"y":732,"score":87,"level":0},{"x":1440,"y":732,"score":92,"level":0},{"x":1467,"y":732,"score":81,"level":0},{"x":383,"y":733,"score":34,"level":0},{"x":449,"y":733,"score":42,"level":0},{"x":469,"y":733,"score":51,"level":0},{"x":475,"y":733,"score":85,"level":0},{"x":498,"y":733,"score":70,"level":0},{"x":598,"y":733,"score":143,"level":0},{"x":604,"y":733,"score":56,"level":0},{"x":670,"y":733,"score":63,"level":0},{"x":753,"y":733,"score":47,"level":0},{"x":865,"y":733,"score":102,"level":0},{"x":902,"y":733,"score":116,"level":0},{"x":931,"y":733,"score":26,"level":0},{"x":969,"y":733,"score":72,"level":0},{"x":998,"y":733,"score":189,"level":0},{"x":1022,"y":733,"score":31,"level":0},{"x":1105,"y":733,"score":32,"level":0},{"x":1111,"y":733,"score":44,"level":0},{"x":1140,"y":733,"score":124,"level":0},{"x":1148,"y":733,"score":40,"level":0},{"x":1175,"y":733,"score":40,"level":0},{"x":1211,"y":733,"score":49,"level":0},{"x":1227,"y":733,"score":242,"level":0},{"x":1253,"y":733,"score":60,"level":0},{"x":1267,"y":733,"score":121,"level":0},{"x":1304,"y":733,"score":44,"level":0},{"x":1308,"y":733,"score":59,"level":0},{"x":1405,"y":733,"score":30,"level":0},{"x":417,"y":734,"score":54,"level":0},{"x":432,"y":734,"score":58,"level":0},{"x":640,"y":734,"score":224,"level":0},{"x":661,"y":734,"score":118,"level":0},{"x":801,"y":734,"score":61,"level":0},{"x":820,"y":734,"score":130,"level":0},{"x":825,"y":734,"score":100,"level":0},{"x":832,"y":734,"score":43,"level":0},{"x":852,"y":734,"score":164,"level":0},{"x":922,"y":734,"score":44,"level":0},{"x":992,"y":734,"score":81,"level":0},{"x":1014,"y":734,"score":36,"level":0},{"x":1054,"y":734,"score":54,"level":0},{"x":1065,"y":734,"score":160,"level":0},{"x":1079,"y":734,"score":34,"level":0},{"x":1097,"y":734,"score":167,"level":0},{"x":1127,"y":734,"score":70,"level":0},{"x":1129,"y":734,"score":37,"level":0},{"x":1135,"y":734,"score":173,"level":0},{"x":1190,"y":734,"score":114,"level":0},{"x":1369,"y":734,"score":115,"level":0},{"x":1481,"y":734,"score":92,"level":0},{"x":405,"y":735,"score":51,"level":0},{"x":442,"y":735,"score":66,"level":0},{"x":484,"y":735,"score":86,"level":0},{"x":528,"y":735,"score":50,"level":0},{"x":567,"y":735,"score":62,"level":0},{"x":676,"y":735,"score":36,"level":0},{"x":770,"y":735,"score":32,"level":0},{"x":810,"y":735,"score":129,"level":0},{"x":845,"y":735,"score":172,"level":0},{"x":1195,"y":735,"score":162,"level":0},{"x":1219,"y":735,"score":120,"level":0},{"x":1241,"y":735,"score":61,"level":0},{"x":1263,"y":735,"score":74,"level":0},{"x":1280,"y":735,"score":222,"level":0},{"x":1285,"y":735,"score":204,"level":0},{"x":1411,"y":735,"score":97,"level":0},{"x":1422,"y":735,"score":37,"level":0},{"x":1426,"y":735,"score":104,"level":0},{"x":1461,"y":735,"score":121,"level":0},{"x":1475,"y":735,"score":50,"level":0},{"x":505,"y":736,"score":140,"level":0},{"x":631,"y":736,"score":44,"level":0},{"x":784,"y":736,"score":59,"level":0},{"x":796,"y":736,"score":52,"level":0},{"x":872,"y":736,"score":97,"level":0},{"x":906,"y":736,"score":47,"level":0},{"x":949,"y":736,"score":119,"level":0},{"x":958,"y":736,"score":108,"level":0},{"x":980,"y":736,"score":78,"level":0},{"x":1060,"y":736,"score":69,"level":0},{"x":1114,"y":736,"score":162,"level":0},{"x":1123,"y":736,"score":49,"level":0},{"x":1164,"y":736,"score":140,"level":0},{"x":1185,"y":736,"score":45,"level":0},{"x":1291,"y":736,"score":68,"level":0},{"x":1293,"y":736,"score":71,"level":0},{"x":1335,"y":736,"score":105,"level":0},{"x":1369,"y":736,"score":93,"level":0},{"x":1383,"y":736,"score":147,"level":0},{"x":1435,"y":736,"score":53,"level":0},{"x":1448,"y":736,"score":98,"level":0},{"x":377,"y":737,"score":132,"level":0},{"x":407,"y":737,"score":44,"level":0},{"x":498,"y":737,"score":111,"level":0},{"x":554,"y":737,"score":50,"level":0},{"x":686,"y":737,"score":35,"level":0},{"x":908,"y":737,"score":43,"level":0},{"x":920,"y":737,"score":156,"level":0},{"x":1108,"y":737,"score":27,"level":0},{"x":1133,"y":737,"score":111,"level":0},{"x":1230,"y":737,"score":161,"level":0},{"x":1264,"y":737,"score":32,"level":0},{"x":1350,"y":737,"score":95,"level":0},{"x":1365,"y":737,"score":100,"level":0},{"x":1400,"y":737,"score":44,"level":0},{"x":473,"y":738,"score":76,"level":0},{"x":575,"y":738,"score":45,"level":0},{"x":607,"y":738,"score":45,"level":0},{"x":657,"y":738,"score":35,"level":0},{"x":672,"y":738,"score":74,"level":0},{"x":811,"y":738,"score":63,"level":0},{"x":816,"y":738,"score":194,"level":0},{"x":1146,"y":738,"score":33,"level":0},{"x":1213,"y":738,"score":55,"level":0},{"x":1224,"y":738,"score":41,"level":0},{"x":1260,"y":738,"score":26,"level":0},{"x":1313,"y":738,"score":63,"level":0},{"x":1393,"y":738,"score":30,"level":0},{"x":1442,"y":738,"score":74,"level":0},{"x":454,"y":739,"score":177,"level":0},{"x":636,"y":739,"score":75,"level":0},{"x":649,"y":739,"score":67,"level":0},{"x":694,"y":739,"score":39,"level":0},{"x":712,"y":739,"score":69,"level":0},{"x":724,"y":739,"score":130,"level":0},{"x":739,"y":739,"score":31,"level":0},{"x":764,"y":739,"score":47,"level":0},{"x":829,"y":739,"score":142,"level":0},{"x":868,"y":739,"score":46,"level":0},{"x":972,"y":739,"score":46,"level":0},{"x":975,"y":739,"score":28,"level":0},{"x":1036,"y":739,"score":65,"level":0},{"x":1071,"y":739,"score":117,"level":0},{"x":1178,"y":739,"score":46,"level":0},{"x":1181,"y":739,"score":57,"level":0},{"x":1191,"y":739,"score":160,"level":0},{"x":1302,"y":739,"score":178,"level":0},{"x":1358,"y":739,"score":284,"level":0},{"x":1365,"y":739,"score":83,"level":0},{"x":1414,"y":739,"score":95,"level":0},{"x":1419,"y":739,"score":38,"level":0},{"x":413,"y":740,"score":38,"level":0},{"x":429,"y":740,"score":68,"level":0},{"x":484,"y":740,"score":42,"level":0},{"x":643,"y":740,"score":178,"level":0},{"x":664,"y":740,"score":49,"level":0},{"x":719,"y":740,"score":224,"level":0},{"x":800,"y":740,"score":121,"level":0},{"x":823,"y":740,"score":26,"level":0},{"x":843,"y":740,"score":95,"level":0},{"x":856,"y":740,"score":133,"level":0},{"x":903,"y":740,"score":133,"level":0},{"x":910,"y":740,"score":30,"level":0},{"x":985,"y":740,"score":28,"level":0},{"x":1047,"y":740,"score":92,"level":0},{"x":1066,"y":740,"score":157,"level":0},{"x":1079,"y":740,"score":139,"level":0},{"x":1085,"y":740,"score":248,"level":0},{"x":1092,"y":740,"score":84,"level":0},{"x":1126,"y":740,"score":60,"level":0},{"x":1134,"y":740,"score":61,"level":0},{"x":1139,"y":740,"score":161,"level":0},{"x":1172,"y":740,"score":137,"level":0},{"x":1202,"y":740,"score":55,"level":0},{"x":1208,"y":740,"score":71,"level":0},{"x":1274,"y":740,"score":78,"level":0},{"x":1308,"y":740,"score":50,"level":0},{"x":1331,"y":740,"score":219,"level":0},{"x":1338,"y":740,"score":37,"level":0},{"x":1343,"y":740,"score":48,"level":0},{"x":1405,"y":740,"score":151,"level":0},{"x":421,"y":741,"score":82,"level":0},{"x":447,"y":741,"score":41,"level":0},{"x":499,"y":741,"score":27,"level":0},{"x":507,"y":741,"score":195,"level":0},{"x":831,"y":741,"score":72,"level":0},{"x":851,"y":741,"score":30,"level":0},{"x":905,"y":741,"score":98,"level":0},{"x":913,"y":741,"score":39,"level":0},{"x":936,"y":741,"score":114,"level":0},{"x":956,"y":741,"score":68,"level":0},{"x":1027,"y":741,"score":59,"level":0},{"x":1036,"y":741,"score":50,"level":0},{"x":1061,"y":741,"score":119,"level":0},{"x":1117,"y":741,"score":65,"level":0},{"x":1120,"y":741,"score":83,"level":0},{"x":1158,"y":741,"score":50,"level":0},{"x":1180,"y":741,"score":38,"level":0},{"x":1235,"y":741,"score":156,"level":0},{"x":1381,"y":741,"score":75,"level":0},{"x":410,"y":742,"score":56,"level":0},{"x":468,"y":742,"score":43,"level":0},{"x":493,"y":742,"score":104,"level":0},{"x":514,"y":742,"score":83,"level":0},{"x":532,"y":742,"score":30,"level":0},{"x":546,"y":742,"score":62,"level":0},{"x":561,"y":742,"score":78,"level":0},{"x":668,"y":742,"score":192,"level":0},{"x":768,"y":742,"score":108,"level":0},{"x":774,"y":742,"score":124,"level":0},{"x":784,"y":742,"score":184,"level":0},{"x":840,"y":742,"score":35,"level":0},{"x":963,"y":742,"score":60,"level":0},{"x":981,"y":742,"score":96,"level":0},{"x":1091,"y":742,"score":33,"level":0},{"x":1155,"y":742,"score":75,"level":0},{"x":1284,"y":742,"score":48,"level":0},{"x":1291,"y":742,"score":27,"level":0},{"x":1368,"y":742,"score":62,"level":0},{"x":1439,"y":742,"score":109,"level":0},{"x":1456,"y":742,"score":121,"level":0},{"x":378,"y":743,"score":104,"level":0},{"x":395,"y":743,"score":51,"level":0},{"x":566,"y":743,"score":63,"level":0},{"x":596,"y":743,"score":26,"level":0},{"x":699,"y":743,"score":73,"level":0},{"x":838,"y":743,"score":48,"level":0},{"x":880,"y":743,"score":44,"level":0},{"x":1042,"y":743,"score":93,"level":0},{"x":1056,"y":743,"score":79,"level":0},{"x":1073,"y":743,"score":136,"level":0},{"x":1097,"y":743,"score":36,"level":0},{"x":1110,"y":743,"score":94,"level":0},{"x":1129,"y":743,"score":34,"level":0},{"x":1135,"y":743,"score":106,"level":0},{"x":1200,"y":743,"score":79,"level":0},{"x":1236,"y":743,"score":98,"level":0},{"x":1266,"y":743,"score":80,"level":0},{"x":1349,"y":743,"score":136,"level":0},{"x":1359,"y":743,"score":107,"level":0},{"x":1372,"y":743,"score":87,"level":0},{"x":1424,"y":743,"score":221,"level":0},{"x":624,"y":744,"score":77,"level":0},{"x":682,"y":744,"score":79,"level":0},{"x":712,"y":744,"score":132,"level":0},{"x":739,"y":744,"score":167,"level":0},{"x":752,"y":744,"score":52,"level":0},{"x":862,"y":744,"score":73,"level":0},{"x":925,"y":744,"score":123,"level":0},{"x":1155,"y":744,"score":42,"level":0},{"x":1212,"y":744,"score":111,"level":0},{"x":1221,"y":744,"score":94,"level":0},{"x":1322,"y":744,"score":39,"level":0},{"x":1413,"y":744,"score":99,"level":0},{"x":1470,"y":744,"score":78,"level":0},{"x":1480,"y":744,"score":48,"level":0},{"x":403,"y":745,"score":197,"level":0},{"x":452,"y":745,"score":94,"level":0},{"x":524,"y":745,"score":35,"level":0},{"x":706,"y":745,"score":36,"level":0},{"x":718,"y":745,"score":208,"level":0},{"x":922,"y":745,"score":46,"level":0},{"x":1006,"y":745,"score":29,"level":0},{"x":1044,"y":745,"score":69,"level":0},{"x":1170,"y":745,"score":68,"level":0},{"x":1218,"y":745,"score":47,"level":0},{"x":1231,"y":745,"score":161,"level":0},{"x":1275,"y":745,"score":217,"level":0},{"x":1282,"y":745,"score":77,"level":0},{"x":1301,"y":745,"score":35,"level":0},{"x":1384,"y":745,"score":70,"level":0},{"x":1391,"y":745,"score":148,"level":0},{"x":1408,"y":745,"score":31,"level":0},{"x":1459,"y":745,"score":194,"level":0},{"x":657,"y":746,"score":75,"level":0},{"x":713,"y":746,"score":31,"level":0},{"x":856,"y":746,"score":45,"level":0},{"x":999,"y":746,"score":149,"level":0},{"x":1033,"y":746,"score":187,"level":0},{"x":1087,"y":746,"score":36,"level":0},{"x":1127,"y":746,"score":66,"level":0},{"x":1134,"y":746,"score":153,"level":0},{"x":1139,"y":746,"score":77,"level":0},{"x":1207,"y":746,"score":40,"level":0},{"x":1308,"y":746,"score":142,"level":0},{"x":1314,"y":746,"score":360,"level":0},{"x":1378,"y":746,"score":135,"level":0},{"x":1402,"y":746,"score":38,"level":0},{"x":1447,"y":746,"score":91,"level":0},{"x":1486,"y":746,"score":170,"level":0},{"x":388,"y":747,"score":76,"level":0},{"x":497,"y":747,"score":107,"level":0},{"x":509,"y":747,"score":47,"level":0},{"x":515,"y":747,"score":57,"level":0},{"x":531,"y":747,"score":26,"level":0},{"x":598,"y":747,"score":34,"level":0},{"x":627,"y":747,"score":58,"level":0},{"x":824,"y":747,"score":144,"level":0},{"x":833,"y":747,"score":96,"level":0},{"x":904,"y":747,"score":26,"level":0},{"x":940,"y":747,"score":28,"level":0},{"x":981,"y":747,"score":56,"level":0},{"x":984,"y":747,"score":96,"level":0},{"x":1053,"y":747,"score":31,"level":0},{"x":1071,"y":747,"score":62,"level":0},{"x":1094,"y":747,"score":154,"level":0},{"x":1118,"y":747,"score":100,"level":0},{"x":1246,"y":747,"score":45,"level":0},{"x":1254,"y":747,"score":62,"level":0},{"x":1270,"y":747,"score":67,"level":0},{"x":1345,"y":747,"score":47,"level":0},{"x":1438,"y":747,"score":132,"level":0},{"x":1456,"y":747,"score":94,"level":0},{"x":1471,"y":747,"score":106,"level":0},{"x":398,"y":748,"score":111,"level":0},{"x":479,"y":748,"score":47,"level":0},{"x":484,"y":748,"score":84,"level":0},{"x":495,"y":748,"score":148,"level":0},{"x":503,"y":748,"score":37,"level":0},{"x":519,"y":748,"score":58,"level":0},{"x":591,"y":748,"score":35,"level":0},{"x":642,"y":748,"score":110,"level":0},{"x":648,"y":748,"score":33,"level":0},{"x":749,"y":748,"score":58,"level":0},{"x":892,"y":748,"score":106,"level":0},{"x":943,"y":748,"score":59,"level":0},{"x":1011,"y":748,"score":84,"level":0},{"x":1018,"y":748,"score":30,"level":0},{"x":1063,"y":748,"score":143,"level":0},{"x":1110,"y":748,"score":90,"level":0},{"x":1128,"y":748,"score":53,"level":0},{"x":1203,"y":748,"score":27,"level":0},{"x":1342,"y":748,"score":47,"level":0},{"x":1348,"y":748,"score":38,"level":0},{"x":1355,"y":748,"score":76,"level":0},{"x":1426,"y":748,"score":31,"level":0},{"x":1451,"y":748,"score":80,"level":0},{"x":468,"y":749,"score":82,"level":0},{"x":632,"y":749,"score":58,"level":0},{"x":714,"y":749,"score":40,"level":0},{"x":734,"y":749,"score":43,"level":0},{"x":862,"y":749,"score":189,"level":0},{"x":869,"y":749,"score":129,"level":0},{"x":878,"y":749,"score":124,"level":0},{"x":1026,"y":749,"score":32,"level":0},{"x":1038,"y":749,"score":82,"level":0},{"x":1081,"y":749,"score":33,"level":0},{"x":1260,"y":749,"score":63,"level":0},{"x":1265,"y":749,"score":90,"level":0},{"x":1286,"y":749,"score":39,"level":0},{"x":1294,"y":749,"score":42,"level":0},{"x":1308,"y":749,"score":110,"level":0},{"x":1362,"y":749,"score":83,"level":0},{"x":1417,"y":749,"score":30,"level":0},{"x":1430,"y":749,"score":87,"level":0},{"x":1434,"y":749,"score":27,"level":0},{"x":1464,"y":749,"score":107,"level":0},{"x":393,"y":750,"score":28,"level":0},{"x":517,"y":750,"score":66,"level":0},{"x":544,"y":750,"score":62,"level":0},{"x":685,"y":750,"score":160,"level":0},{"x":695,"y":750,"score":27,"level":0},{"x":739,"y":750,"score":40,"level":0},{"x":848,"y":750,"score":190,"level":0},{"x":921,"y":750,"score":95,"level":0},{"x":1049,"y":750,"score":189,"level":0},{"x":1057,"y":750,"score":73,"level":0},{"x":1276,"y":750,"score":151,"level":0},{"x":1299,"y":750,"score":63,"level":0},{"x":1355,"y":750,"score":69,"level":0},{"x":1370,"y":750,"score":122,"level":0},{"x":1391,"y":750,"score":61,"level":0},{"x":1459,"y":750,"score":113,"level":0},{"x":1477,"y":750,"score":75,"level":0},{"x":1479,"y":750,"score":66,"level":0},{"x":445,"y":751,"score":102,"level":0},{"x":622,"y":751,"score":83,"level":0},{"x":654,"y":751,"score":77,"level":0},{"x":724,"y":751,"score":115,"level":0},{"x":766,"y":751,"score":59,"level":0},{"x":769,"y":751,"score":68,"level":0},{"x":787,"y":751,"score":46,"level":0},{"x":793,"y":751,"score":90,"level":0},{"x":805,"y":751,"score":83,"level":0},{"x":808,"y":751,"score":95,"level":0},{"x":816,"y":751,"score":147,"level":0},{"x":912,"y":751,"score":53,"level":0},{"x":976,"y":751,"score":78,"level":0},{"x":998,"y":751,"score":77,"level":0},{"x":1062,"y":751,"score":36,"level":0},{"x":1067,"y":751,"score":140,"level":0},{"x":1226,"y":751,"score":35,"level":0},{"x":1383,"y":751,"score":263,"level":0},{"x":1461,"y":751,"score":136,"level":0},{"x":1485,"y":751,"score":107,"level":0},{"x":386,"y":752,"score":53,"level":0},{"x":456,"y":752,"score":44,"level":0},{"x":619,"y":752,"score":90,"level":0},{"x":671,"y":752,"score":26,"level":0},{"x":755,"y":752,"score":143,"level":0},{"x":757,"y":752,"score":103,"level":0},{"x":813,"y":752,"score":71,"level":0},{"x":881,"y":752,"score":57,"level":0},{"x":902,"y":752,"score":62,"level":0},{"x":926,"y":752,"score":40,"level":0},{"x":968,"y":752,"score":53,"level":0},{"x":972,"y":752,"score":48,"level":0},{"x":1006,"y":752,"score":132,"level":0},{"x":1078,"y":752,"score":48,"level":0},{"x":1117,"y":752,"score":114,"level":0},{"x":1123,"y":752,"score":184,"level":0},{"x":1132,"y":752,"score":195,"level":0},{"x":1198,"y":752,"score":30,"level":0},{"x":1215,"y":752,"score":62,"level":0},{"x":1314,"y":752,"score":91,"level":0},{"x":1320,"y":752,"score":107,"level":0},{"x":1355,"y":752,"score":64,"level":0},{"x":1401,"y":752,"score":90,"level":0},{"x":1457,"y":752,"score":173,"level":0},{"x":1471,"y":752,"score":42,"level":0},{"x":1477,"y":752,"score":72,"level":0},{"x":486,"y":753,"score":29,"level":0},{"x":554,"y":753,"score":63,"level":0},{"x":568,"y":753,"score":45,"level":0},{"x":592,"y":753,"score":100,"level":0},{"x":603,"y":753,"score":205,"level":0},{"x":611,"y":753,"score":26,"level":0},{"x":684,"y":753,"score":150,"level":0},{"x":792,"y":753,"score":68,"level":0},{"x":816,"y":753,"score":118,"level":0},{"x":897,"y":753,"score":69,"level":0},{"x":941,"y":753,"score":133,"level":0},{"x":953,"y":753,"score":29,"level":0},{"x":958,"y":753,"score":175,"level":0},{"x":992,"y":753,"score":80,"level":0},{"x":1012,"y":753,"score":225,"level":0},{"x":1032,"y":753,"score":74,"level":0},{"x":1064,"y":753,"score":88,"level":0},{"x":1070,"y":753,"score":30,"level":0},{"x":1247,"y":753,"score":78,"level":0},{"x":1345,"y":753,"score":82,"level":0},{"x":377,"y":754,"score":151,"level":0},{"x":575,"y":754,"score":122,"level":0},{"x":582,"y":754,"score":147,"level":0},{"x":630,"y":754,"score":34,"level":0},{"x":643,"y":754,"score":94,"level":0},{"x":654,"y":754,"score":80,"level":0},{"x":713,"y":754,"score":30,"level":0},{"x":763,"y":754,"score":37,"level":0},{"x":841,"y":754,"score":59,"level":0},{"x":868,"y":754,"score":146,"level":0},{"x":885,"y":754,"score":213,"level":0},{"x":934,"y":754,"score":120,"level":0},{"x":962,"y":754,"score":99,"level":0},{"x":1139,"y":754,"score":48,"level":0},{"x":1210,"y":754,"score":50,"level":0},{"x":1285,"y":754,"score":266,"level":0},{"x":1337,"y":754,"score":113,"level":0},{"x":1360,"y":754,"score":100,"level":0},{"x":1366,"y":754,"score":161,"level":0},{"x":1425,"y":754,"score":75,"level":0},{"x":1440,"y":754,"score":46,"level":0},{"x":505,"y":755,"score":41,"level":0},{"x":517,"y":755,"score":28,"level":0},{"x":730,"y":755,"score":34,"level":0},{"x":738,"y":755,"score":32,"level":0},{"x":748,"y":755,"score":41,"level":0},{"x":796,"y":755,"score":76,"level":0},{"x":809,"y":755,"score":93,"level":0},{"x":862,"y":755,"score":221,"level":0},{"x":873,"y":755,"score":170,"level":0},{"x":986,"y":755,"score":175,"level":0},{"x":1023,"y":755,"score":32,"level":0},{"x":1058,"y":755,"score":114,"level":0},{"x":1066,"y":755,"score":40,"level":0},{"x":1232,"y":755,"score":46,"level":0},{"x":1236,"y":755,"score":44,"level":0},{"x":1274,"y":755,"score":162,"level":0},{"x":1279,"y":755,"score":62,"level":0},{"x":1292,"y":755,"score":234,"level":0},{"x":1405,"y":755,"score":36,"level":0},{"x":1419,"y":755,"score":58,"level":0},{"x":1452,"y":755,"score":114,"level":0},{"x":1490,"y":755,"score":140,"level":0},{"x":395,"y":756,"score":29,"level":0},{"x":416,"y":756,"score":50,"level":0},{"x":469,"y":756,"score":46,"level":0},{"x":546,"y":756,"score":68,"level":0},{"x":607,"y":756,"score":28,"level":0},{"x":769,"y":756,"score":50,"level":0},{"x":776,"y":756,"score":27,"level":0},{"x":919,"y":756,"score":27,"level":0},{"x":999,"y":756,"score":39,"level":0},{"x":1074,"y":756,"score":35,"level":0},{"x":1091,"y":756,"score":44,"level":0},{"x":1126,"y":756,"score":97,"level":0},{"x":1207,"y":756,"score":71,"level":0},{"x":1219,"y":756,"score":102,"level":0},{"x":1224,"y":756,"score":56,"level":0},{"x":1229,"y":756,"score":133,"level":0},{"x":1260,"y":756,"score":44,"level":0},{"x":1323,"y":756,"score":136,"level":0},{"x":1430,"y":756,"score":61,"level":0},{"x":1460,"y":756,"score":56,"level":0},{"x":1482,"y":756,"score":215,"level":0},{"x":444,"y":757,"score":82,"level":0},{"x":560,"y":757,"score":40,"level":0},{"x":592,"y":757,"score":98,"level":0},{"x":803,"y":757,"score":92,"level":0},{"x":908,"y":757,"score":48,"level":0},{"x":949,"y":757,"score":54,"level":0},{"x":968,"y":757,"score":150,"level":0},{"x":1040,"y":757,"score":145,"level":0},{"x":1051,"y":757,"score":173,"level":0},{"x":1121,"y":757,"score":33,"level":0},{"x":1266,"y":757,"score":60,"level":0},{"x":1316,"y":757,"score":241,"level":0},{"x":1356,"y":757,"score":84,"level":0},{"x":1382,"y":757,"score":62,"level":0},{"x":1435,"y":757,"score":109,"level":0},{"x":1455,"y":757,"score":31,"level":0},{"x":1465,"y":757,"score":52,"level":0},{"x":1473,"y":757,"score":94,"level":0},{"x":502,"y":758,"score":57,"level":0},{"x":566,"y":758,"score":88,"level":0},{"x":598,"y":758,"score":74,"level":0},{"x":611,"y":758,"score":128,"level":0},{"x":701,"y":758,"score":121,"level":0},{"x":752,"y":758,"score":74,"level":0},{"x":791,"y":758,"score":27,"level":0},{"x":799,"y":758,"score":58,"level":0},{"x":815,"y":758,"score":173,"level":0},{"x":821,"y":758,"score":107,"level":0},{"x":871,"y":758,"score":123,"level":0},{"x":877,"y":758,"score":175,"level":0},{"x":892,"y":758,"score":213,"level":0},{"x":957,"y":758,"score":86,"level":0},{"x":1011,"y":758,"score":92,"level":0},{"x":1018,"y":758,"score":28,"level":0},{"x":1045,"y":758,"score":79,"level":0},{"x":1167,"y":758,"score":29,"level":0},{"x":1268,"y":758,"score":120,"level":0},{"x":1392,"y":758,"score":79,"level":0},{"x":1405,"y":758,"score":72,"level":0},{"x":1415,"y":758,"score":32,"level":0},{"x":1450,"y":758,"score":119,"level":0},{"x":1477,"y":758,"score":69,"level":0},{"x":390,"y":759,"score":88,"level":0},{"x":522,"y":759,"score":26,"level":0},{"x":618,"y":759,"score":82,"level":0},{"x":621,"y":759,"score":26,"level":0},{"x":683,"y":759,"score":42,"level":0},{"x":744,"y":759,"score":32,"level":0},{"x":809,"y":759,"score":79,"level":0},{"x":902,"y":759,"score":62,"level":0},{"x":907,"y":759,"score":40,"level":0},{"x":942,"y":759,"score":64,"level":0},{"x":962,"y":759,"score":49,"level":0},{"x":990,"y":759,"score":317,"level":0},{"x":997,"y":759,"score":98,"level":0},{"x":1078,"y":759,"score":44,"level":0},{"x":1085,"y":759,"score":63,"level":0},{"x":1100,"y":759,"score":87,"level":0},{"x":1210,"y":759,"score":106,"level":0},{"x":1285,"y":759,"score":70,"level":0},{"x":1365,"y":759,"score":40,"level":0},{"x":497,"y":760,"score":117,"level":0},{"x":826,"y":760,"score":69,"level":0},{"x":857,"y":760,"score":108,"level":0},{"x":883,"y":760,"score":32,"level":0},{"x":920,"y":760,"score":32,"level":0},{"x":984,"y":760,"score":214,"level":0},{"x":1026,"y":760,"score":145,"level":0},{"x":1033,"y":760,"score":171,"level":0},{"x":1135,"y":760,"score":31,"level":0},{"x":1213,"y":760,"score":146,"level":0},{"x":1268,"y":760,"score":57,"level":0},{"x":1275,"y":760,"score":167,"level":0},{"x":1283,"y":760,"score":67,"level":0},{"x":1345,"y":760,"score":125,"level":0},{"x":1424,"y":760,"score":111,"level":0},{"x":1432,"y":760,"score":126,"level":0},{"x":1445,"y":760,"score":64,"level":0},{"x":1461,"y":760,"score":137,"level":0},{"x":1466,"y":760,"score":184,"level":0},{"x":396,"y":761,"score":57,"level":0},{"x":416,"y":761,"score":91,"level":0},{"x":465,"y":761,"score":42,"level":0},{"x":467,"y":761,"score":31,"level":0},{"x":546,"y":761,"score":129,"level":0},{"x":583,"y":761,"score":86,"level":0},{"x":594,"y":761,"score":49,"level":0},{"x":671,"y":761,"score":46,"level":0},{"x":677,"y":761,"score":65,"level":0},{"x":696,"y":761,"score":73,"level":0},{"x":844,"y":761,"score":31,"level":0},{"x":862,"y":761,"score":69,"level":0},{"x":916,"y":761,"score":31,"level":0},{"x":966,"y":761,"score":99,"level":0},{"x":1048,"y":761,"score":50,"level":0},{"x":1169,"y":761,"score":54,"level":0},{"x":1259,"y":761,"score":90,"level":0},{"x":1294,"y":761,"score":201,"level":0},{"x":1337,"y":761,"score":42,"level":0},{"x":1448,"y":761,"score":54,"level":0},{"x":377,"y":762,"score":109,"level":0},{"x":489,"y":762,"score":62,"level":0},{"x":535,"y":762,"score":52,"level":0},{"x":540,"y":762,"score":42,"level":0},{"x":553,"y":762,"score":132,"level":0},{"x":699,"y":762,"score":74,"level":0},{"x":705,"y":762,"score":42,"level":0},{"x":914,"y":762,"score":41,"level":0},{"x":1010,"y":762,"score":55,"level":0},{"x":1056,"y":762,"score":159,"level":0},{"x":1091,"y":762,"score":112,"level":0},{"x":1183,"y":762,"score":26,"level":0},{"x":1238,"y":762,"score":45,"level":0},{"x":1289,"y":762,"score":111,"level":0},{"x":1317,"y":762,"score":48,"level":0},{"x":1399,"y":762,"score":65,"level":0},{"x":1418,"y":762,"score":41,"level":0},{"x":1430,"y":762,"score":52,"level":0},{"x":1455,"y":762,"score":102,"level":0},{"x":1489,"y":762,"score":172,"level":0},{"x":401,"y":763,"score":37,"level":0},{"x":441,"y":763,"score":92,"level":0},{"x":504,"y":763,"score":39,"level":0},{"x":515,"y":763,"score":33,"level":0},{"x":522,"y":763,"score":43,"level":0},{"x":558,"y":763,"score":47,"level":0},{"x":566,"y":763,"score":68,"level":0},{"x":633,"y":763,"score":70,"level":0},{"x":638,"y":763,"score":28,"level":0},{"x":690,"y":763,"score":36,"level":0},{"x":749,"y":763,"score":46,"level":0},{"x":854,"y":763,"score":31,"level":0},{"x":961,"y":763,"score":62,"level":0},{"x":974,"y":763,"score":45,"level":0},{"x":1003,"y":763,"score":50,"level":0},{"x":1016,"y":763,"score":66,"level":0},{"x":1222,"y":763,"score":161,"level":0},{"x":1281,"y":763,"score":97,"level":0},{"x":1405,"y":763,"score":215,"level":0},{"x":1423,"y":763,"score":92,"level":0},{"x":1436,"y":763,"score":111,"level":0},{"x":1474,"y":763,"score":45,"level":0},{"x":381,"y":764,"score":98,"level":0},{"x":412,"y":764,"score":116,"level":0},{"x":436,"y":764,"score":31,"level":0},{"x":477,"y":764,"score":74,"level":0},{"x":488,"y":764,"score":53,"level":0},{"x":528,"y":764,"score":80,"level":0},{"x":791,"y":764,"score":53,"level":0},{"x":809,"y":764,"score":48,"level":0},{"x":872,"y":764,"score":80,"level":0},{"x":880,"y":764,"score":75,"level":0},{"x":979,"y":764,"score":53,"level":0},{"x":991,"y":764,"score":176,"level":0},{"x":1042,"y":764,"score":170,"level":0},{"x":1147,"y":764,"score":34,"level":0},{"x":1208,"y":764,"score":55,"level":0},{"x":1328,"y":764,"score":58,"level":0},{"x":625,"y":765,"score":152,"level":0},{"x":727,"y":765,"score":107,"level":0},{"x":773,"y":765,"score":39,"level":0},{"x":839,"y":765,"score":122,"level":0},{"x":856,"y":765,"score":122,"level":0},{"x":1006,"y":765,"score":107,"level":0},{"x":1101,"y":765,"score":85,"level":0},{"x":1110,"y":765,"score":188,"level":0},{"x":1137,"y":765,"score":136,"level":0},{"x":1142,"y":765,"score":130,"level":0},{"x":1156,"y":765,"score":72,"level":0},{"x":1167,"y":765,"score":53,"level":0},{"x":1227,"y":765,"score":74,"level":0},{"x":1232,"y":765,"score":35,"level":0},{"x":1264,"y":765,"score":36,"level":0},{"x":1287,"y":765,"score":203,"level":0},{"x":1292,"y":765,"score":159,"level":0},{"x":1342,"y":765,"score":28,"level":0},{"x":1353,"y":765,"score":187,"level":0},{"x":1431,"y":765,"score":124,"level":0},{"x":1444,"y":765,"score":160,"level":0},{"x":574,"y":766,"score":70,"level":0},{"x":697,"y":766,"score":151,"level":0},{"x":710,"y":766,"score":73,"level":0},{"x":830,"y":766,"score":316,"level":0},{"x":845,"y":766,"score":129,"level":0},{"x":1013,"y":766,"score":120,"level":0},{"x":1039,"y":766,"score":91,"level":0},{"x":1099,"y":766,"score":98,"level":0},{"x":1268,"y":766,"score":47,"level":0},{"x":1276,"y":766,"score":43,"level":0},{"x":1302,"y":766,"score":34,"level":0},{"x":1423,"y":766,"score":138,"level":0},{"x":1460,"y":766,"score":38,"level":0},{"x":1479,"y":766,"score":51,"level":0},{"x":394,"y":767,"score":30,"level":0},{"x":470,"y":767,"score":26,"level":0},{"x":498,"y":767,"score":136,"level":0},{"x":595,"y":767,"score":34,"level":0},{"x":675,"y":767,"score":41,"level":0},{"x":691,"y":767,"score":84,"level":0},{"x":722,"y":767,"score":132,"level":0},{"x":867,"y":767,"score":48,"level":0},{"x":898,"y":767,"score":202,"level":0},{"x":913,"y":767,"score":63,"level":0},{"x":1252,"y":767,"score":61,"level":0},{"x":1292,"y":767,"score":146,"level":0},{"x":1443,"y":767,"score":88,"level":0},{"x":1455,"y":767,"score":28,"level":0},{"x":513,"y":768,"score":61,"level":0},{"x":521,"y":768,"score":71,"level":0},{"x":532,"y":768,"score":130,"level":0},{"x":554,"y":768,"score":34,"level":0},{"x":587,"y":768,"score":28,"level":0},{"x":606,"y":768,"score":112,"level":0},{"x":734,"y":768,"score":32,"level":0},{"x":750,"y":768,"score":55,"level":0},{"x":755,"y":768,"score":53,"level":0},{"x":795,"y":768,"score":26,"level":0},{"x":847,"y":768,"score":100,"level":0},{"x":922,"y":768,"score":62,"level":0},{"x":984,"y":768,"score":183,"level":0},{"x":1050,"y":768,"score":79,"level":0},{"x":1092,"y":768,"score":42,"level":0},{"x":1104,"y":768,"score":151,"level":0},{"x":1118,"y":768,"score":152,"level":0},{"x":1156,"y":768,"score":84,"level":0},{"x":1158,"y":768,"score":82,"level":0},{"x":1391,"y":768,"score":80,"level":0},{"x":1411,"y":768,"score":84,"level":0},{"x":1417,"y":768,"score":115,"level":0},{"x":382,"y":769,"score":57,"level":0},{"x":492,"y":769,"score":140,"level":0},{"x":541,"y":769,"score":32,"level":0},{"x":670,"y":769,"score":38,"level":0},{"x":784,"y":769,"score":60,"level":0},{"x":810,"y":769,"score":27,"level":0},{"x":874,"y":769,"score":190,"level":0},{"x":888,"y":769,"score":150,"level":0},{"x":1009,"y":769,"score":231,"level":0},{"x":1162,"y":769,"score":86,"level":0},{"x":1165,"y":769,"score":79,"level":0},{"x":1195,"y":769,"score":168,"level":0},{"x":1222,"y":769,"score":166,"level":0},{"x":1237,"y":769,"score":122,"level":0},{"x":1258,"y":769,"score":86,"level":0},{"x":1273,"y":769,"score":64,"level":0},{"x":1282,"y":769,"score":26,"level":0},{"x":1406,"y":769,"score":62,"level":0},{"x":1469,"y":769,"score":114,"level":0},{"x":391,"y":770,"score":65,"level":0},{"x":408,"y":770,"score":38,"level":0},{"x":418,"y":770,"score":91,"level":0},{"x":441,"y":770,"score":153,"level":0},{"x":583,"y":770,"score":34,"level":0},{"x":744,"y":770,"score":60,"level":0},{"x":978,"y":770,"score":65,"level":0},{"x":1108,"y":770,"score":184,"level":0},{"x":1217,"y":770,"score":148,"level":0},{"x":1227,"y":770,"score":124,"level":0},{"x":1247,"y":770,"score":301,"level":0},{"x":1260,"y":770,"score":83,"level":0},{"x":1284,"y":770,"score":125,"level":0},{"x":1309,"y":770,"score":42,"level":0},{"x":1338,"y":770,"score":56,"level":0},{"x":402,"y":771,"score":102,"level":0},{"x":556,"y":771,"score":44,"level":0},{"x":615,"y":771,"score":89,"level":0},{"x":623,"y":771,"score":102,"level":0},{"x":690,"y":771,"score":55,"level":0},{"x":718,"y":771,"score":124,"level":0},{"x":734,"y":771,"score":38,"level":0},{"x":821,"y":771,"score":44,"level":0},{"x":837,"y":771,"score":43,"level":0},{"x":894,"y":771,"score":35,"level":0},{"x":1232,"y":771,"score":41,"level":0},{"x":1265,"y":771,"score":236,"level":0},{"x":1276,"y":771,"score":92,"level":0},{"x":1401,"y":771,"score":128,"level":0},{"x":377,"y":772,"score":90,"level":0},{"x":435,"y":772,"score":82,"level":0},{"x":448,"y":772,"score":173,"level":0},{"x":528,"y":772,"score":167,"level":0},{"x":534,"y":772,"score":103,"level":0},{"x":594,"y":772,"score":126,"level":0},{"x":672,"y":772,"score":60,"level":0},{"x":724,"y":772,"score":68,"level":0},{"x":830,"y":772,"score":37,"level":0},{"x":1007,"y":772,"score":31,"level":0},{"x":1038,"y":772,"score":64,"level":0},{"x":1046,"y":772,"score":242,"level":0},{"x":1144,"y":772,"score":64,"level":0},{"x":1206,"y":772,"score":34,"level":0},{"x":1210,"y":772,"score":28,"level":0},{"x":1345,"y":772,"score":100,"level":0},{"x":1365,"y":772,"score":46,"level":0},{"x":1466,"y":772,"score":62,"level":0},{"x":414,"y":773,"score":59,"level":0},{"x":488,"y":773,"score":66,"level":0},{"x":517,"y":773,"score":46,"level":0},{"x":520,"y":773,"score":48,"level":0},{"x":576,"y":773,"score":55,"level":0},{"x":709,"y":773,"score":63,"level":0},{"x":711,"y":773,"score":81,"level":0},{"x":821,"y":773,"score":35,"level":0},{"x":857,"y":773,"score":85,"level":0},{"x":870,"y":773,"score":143,"level":0},{"x":899,"y":773,"score":150,"level":0},{"x":974,"y":773,"score":32,"level":0},{"x":1013,"y":773,"score":91,"level":0},{"x":1059,"y":773,"score":66,"level":0},{"x":1099,"y":773,"score":111,"level":0},{"x":1105,"y":773,"score":271,"level":0},{"x":1127,"y":773,"score":79,"level":0},{"x":1168,"y":773,"score":91,"level":0},{"x":1352,"y":773,"score":130,"level":0},{"x":1410,"y":773,"score":136,"level":0},{"x":1442,"y":773,"score":96,"level":0},{"x":1460,"y":773,"score":148,"level":0},{"x":1471,"y":773,"score":88,"level":0},{"x":1483,"y":773,"score":52,"level":0},{"x":539,"y":774,"score":52,"level":0},{"x":644,"y":774,"score":41,"level":0},{"x":674,"y":774,"score":40,"level":0},{"x":852,"y":774,"score":99,"level":0},{"x":888,"y":774,"score":147,"level":0},{"x":912,"y":774,"score":53,"level":0},{"x":928,"y":774,"score":36,"level":0},{"x":1112,"y":774,"score":161,"level":0},{"x":1120,"y":774,"score":194,"level":0},{"x":1125,"y":774,"score":36,"level":0},{"x":1133,"y":774,"score":227,"level":0},{"x":1139,"y":774,"score":177,"level":0},{"x":1161,"y":774,"score":102,"level":0},{"x":1175,"y":774,"score":64,"level":0},{"x":1314,"y":774,"score":168,"level":0},{"x":1416,"y":774,"score":139,"level":0},{"x":1422,"y":774,"score":205,"level":0},{"x":1429,"y":774,"score":69,"level":0},{"x":1435,"y":774,"score":57,"level":0},{"x":1473,"y":774,"score":85,"level":0},{"x":493,"y":775,"score":63,"level":0},{"x":588,"y":775,"score":98,"level":0},{"x":620,"y":775,"score":31,"level":0},{"x":715,"y":775,"score":59,"level":0},{"x":722,"y":775,"score":71,"level":0},{"x":778,"y":775,"score":46,"level":0},{"x":827,"y":775,"score":136,"level":0},{"x":870,"y":775,"score":112,"level":0},{"x":996,"y":775,"score":57,"level":0},{"x":1033,"y":775,"score":74,"level":0},{"x":1060,"y":775,"score":70,"level":0},{"x":1149,"y":775,"score":72,"level":0},{"x":1178,"y":775,"score":106,"level":0},{"x":1217,"y":775,"score":40,"level":0},{"x":1261,"y":775,"score":65,"level":0},{"x":1271,"y":775,"score":68,"level":0},{"x":1321,"y":775,"score":60,"level":0},{"x":1387,"y":775,"score":42,"level":0},{"x":404,"y":776,"score":56,"level":0},{"x":446,"y":776,"score":47,"level":0},{"x":516,"y":776,"score":36,"level":0},{"x":607,"y":776,"score":55,"level":0},{"x":742,"y":776,"score":32,"level":0},{"x":815,"y":776,"score":26,"level":0},{"x":838,"y":776,"score":142,"level":0},{"x":864,"y":776,"score":90,"level":0},{"x":875,"y":776,"score":41,"level":0},{"x":882,"y":776,"score":151,"level":0},{"x":899,"y":776,"score":70,"level":0},{"x":1074,"y":776,"score":58,"level":0},{"x":1155,"y":776,"score":39,"level":0},{"x":1228,"y":776,"score":76,"level":0},{"x":1234,"y":776,"score":29,"level":0},{"x":1248,"y":776,"score":247,"level":0},{"x":1362,"y":776,"score":34,"level":0},{"x":392,"y":777,"score":36,"level":0},{"x":441,"y":777,"score":41,"level":0},{"x":455,"y":777,"score":32,"level":0},{"x":522,"y":777,"score":126,"level":0},{"x":594,"y":777,"score":29,"level":0},{"x":693,"y":777,"score":27,"level":0},{"x":695,"y":777,"score":40,"level":0},{"x":749,"y":777,"score":26,"level":0},{"x":922,"y":777,"score":141,"level":0},{"x":1061,"y":777,"score":43,"level":0},{"x":1081,"y":777,"score":62,"level":0},{"x":1109,"y":777,"score":28,"level":0},{"x":1174,"y":777,"score":33,"level":0},{"x":1185,"y":777,"score":170,"level":0},{"x":1202,"y":777,"score":92,"level":0},{"x":1207,"y":777,"score":128,"level":0},{"x":1212,"y":777,"score":43,"level":0},{"x":1275,"y":777,"score":45,"level":0},{"x":1335,"y":777,"score":83,"level":0},{"x":1399,"y":777,"score":80,"level":0},{"x":505,"y":778,"score":29,"level":0},{"x":632,"y":778,"score":160,"level":0},{"x":652,"y":778,"score":102,"level":0},{"x":709,"y":778,"score":94,"level":0},{"x":781,"y":778,"score":46,"level":0},{"x":909,"y":778,"score":98,"level":0},{"x":1049,"y":778,"score":174,"level":0},{"x":1052,"y":778,"score":147,"level":0},{"x":1067,"y":778,"score":40,"level":0},{"x":1088,"y":778,"score":42,"level":0},{"x":1104,"y":778,"score":66,"level":0},{"x":1166,"y":778,"score":37,"level":0},{"x":1223,"y":778,"score":59,"level":0},{"x":1451,"y":778,"score":54,"level":0},{"x":1470,"y":778,"score":99,"level":0},{"x":1475,"y":778,"score":103,"level":0},{"x":475,"y":779,"score":43,"level":0},{"x":511,"y":779,"score":64,"level":0},{"x":516,"y":779,"score":29,"level":0},{"x":539,"y":779,"score":52,"level":0},{"x":547,"y":779,"score":69,"level":0},{"x":564,"y":779,"score":170,"level":0},{"x":616,"y":779,"score":53,"level":0},{"x":731,"y":779,"score":123,"level":0},{"x":736,"y":779,"score":130,"level":0},{"x":783,"y":779,"score":52,"level":0},{"x":831,"y":779,"score":195,"level":0},{"x":929,"y":779,"score":94,"level":0},{"x":957,"y":779,"score":43,"level":0},{"x":1016,"y":779,"score":33,"level":0},{"x":1081,"y":779,"score":65,"level":0},{"x":1144,"y":779,"score":178,"level":0},{"x":1199,"y":779,"score":61,"level":0},{"x":1372,"y":779,"score":79,"level":0},{"x":1421,"y":779,"score":126,"level":0},{"x":1437,"y":779,"score":115,"level":0},{"x":1484,"y":779,"score":90,"level":0},{"x":429,"y":780,"score":30,"level":0},{"x":439,"y":780,"score":111,"level":0},{"x":500,"y":780,"score":39,"level":0},{"x":874,"y":780,"score":64,"level":0},{"x":916,"y":780,"score":33,"level":0},{"x":948,"y":780,"score":41,"level":0},{"x":1059,"y":780,"score":112,"level":0},{"x":1071,"y":780,"score":45,"level":0},{"x":1112,"y":780,"score":33,"level":0},{"x":1120,"y":780,"score":234,"level":0},{"x":1125,"y":780,"score":168,"level":0},{"x":1161,"y":780,"score":51,"level":0},{"x":1268,"y":780,"score":183,"level":0},{"x":1274,"y":780,"score":201,"level":0},{"x":1291,"y":780,"score":30,"level":0},{"x":1309,"y":780,"score":44,"level":0},{"x":1317,"y":780,"score":117,"level":0},{"x":1472,"y":780,"score":31,"level":0},{"x":485,"y":781,"score":94,"level":0},{"x":538,"y":781,"score":99,"level":0},{"x":595,"y":781,"score":42,"level":0},{"x":742,"y":781,"score":89,"level":0},{"x":761,"y":781,"score":43,"level":0},{"x":858,"y":781,"score":106,"level":0},{"x":906,"y":781,"score":90,"level":0},{"x":913,"y":781,"score":37,"level":0},{"x":956,"y":781,"score":32,"level":0},{"x":1031,"y":781,"score":125,"level":0},{"x":1075,"y":781,"score":82,"level":0},{"x":1135,"y":781,"score":123,"level":0},{"x":1164,"y":781,"score":98,"level":0},{"x":1174,"y":781,"score":60,"level":0},{"x":1247,"y":781,"score":142,"level":0},{"x":1256,"y":781,"score":53,"level":0},{"x":1339,"y":781,"score":67,"level":0},{"x":1460,"y":781,"score":304,"level":0},{"x":445,"y":782,"score":54,"level":0},{"x":544,"y":782,"score":42,"level":0},{"x":582,"y":782,"score":117,"level":0},{"x":712,"y":782,"score":224,"level":0},{"x":789,"y":782,"score":112,"level":0},{"x":801,"y":782,"score":68,"level":0},{"x":834,"y":782,"score":164,"level":0},{"x":849,"y":782,"score":26,"level":0},{"x":855,"y":782,"score":80,"level":0},{"x":901,"y":782,"score":278,"level":0},{"x":1033,"y":782,"score":59,"level":0},{"x":1038,"y":782,"score":96,"level":0},{"x":1085,"y":782,"score":89,"level":0},{"x":1170,"y":782,"score":69,"level":0},{"x":1193,"y":782,"score":115,"level":0},{"x":1265,"y":782,"score":84,"level":0},{"x":1303,"y":782,"score":76,"level":0},{"x":1313,"y":782,"score":149,"level":0},{"x":1387,"y":782,"score":118,"level":0},{"x":1453,"y":782,"score":153,"level":0},{"x":1465,"y":782,"score":62,"level":0},{"x":506,"y":783,"score":66,"level":0},{"x":525,"y":783,"score":45,"level":0},{"x":588,"y":783,"score":60,"level":0},{"x":687,"y":783,"score":121,"level":0},{"x":707,"y":783,"score":30,"level":0},{"x":817,"y":783,"score":75,"level":0},{"x":921,"y":783,"score":86,"level":0},{"x":940,"y":783,"score":48,"level":0},{"x":967,"y":783,"score":86,"level":0},{"x":1068,"y":783,"score":39,"level":0},{"x":1074,"y":783,"score":49,"level":0},{"x":1110,"y":783,"score":75,"level":0},{"x":1186,"y":783,"score":27,"level":0},{"x":1220,"y":783,"score":101,"level":0},{"x":1238,"y":783,"score":82,"level":0},{"x":1283,"y":783,"score":65,"level":0},{"x":1472,"y":783,"score":84,"level":0},{"x":1477,"y":783,"score":91,"level":0},{"x":420,"y":784,"score":154,"level":0},{"x":486,"y":784,"score":87,"level":0},{"x":511,"y":784,"score":31,"level":0},{"x":565,"y":784,"score":28,"level":0},{"x":572,"y":784,"score":67,"level":0},{"x":610,"y":784,"score":31,"level":0},{"x":721,"y":784,"score":38,"level":0},{"x":837,"y":784,"score":43,"level":0},{"x":871,"y":784,"score":76,"level":0},{"x":878,"y":784,"score":151,"level":0},{"x":928,"y":784,"score":80,"level":0},{"x":958,"y":784,"score":35,"level":0},{"x":974,"y":784,"score":48,"level":0},{"x":980,"y":784,"score":49,"level":0},{"x":1002,"y":784,"score":90,"level":0},{"x":1044,"y":784,"score":187,"level":0},{"x":1051,"y":784,"score":186,"level":0},{"x":1056,"y":784,"score":230,"level":0},{"x":1107,"y":784,"score":63,"level":0},{"x":1209,"y":784,"score":199,"level":0},{"x":1252,"y":784,"score":82,"level":0},{"x":1300,"y":784,"score":71,"level":0},{"x":1310,"y":784,"score":166,"level":0},{"x":1328,"y":784,"score":60,"level":0},{"x":1362,"y":784,"score":26,"level":0},{"x":1397,"y":784,"score":59,"level":0},{"x":1406,"y":784,"score":26,"level":0},{"x":1426,"y":784,"score":169,"level":0},{"x":449,"y":785,"score":71,"level":0},{"x":648,"y":785,"score":108,"level":0},{"x":654,"y":785,"score":52,"level":0},{"x":659,"y":785,"score":43,"level":0},{"x":733,"y":785,"score":65,"level":0},{"x":800,"y":785,"score":27,"level":0},{"x":967,"y":785,"score":66,"level":0},{"x":989,"y":785,"score":130,"level":0},{"x":995,"y":785,"score":43,"level":0},{"x":1009,"y":785,"score":138,"level":0},{"x":1063,"y":785,"score":200,"level":0},{"x":1071,"y":785,"score":44,"level":0},{"x":1100,"y":785,"score":128,"level":0},{"x":1138,"y":785,"score":158,"level":0},{"x":1169,"y":785,"score":79,"level":0},{"x":1214,"y":785,"score":48,"level":0},{"x":1303,"y":785,"score":84,"level":0},{"x":1381,"y":785,"score":73,"level":0},{"x":1411,"y":785,"score":124,"level":0},{"x":1478,"y":785,"score":27,"level":0},{"x":1490,"y":785,"score":29,"level":0},{"x":405,"y":786,"score":82,"level":0},{"x":471,"y":786,"score":88,"level":0},{"x":615,"y":786,"score":36,"level":0},{"x":810,"y":786,"score":95,"level":0},{"x":844,"y":786,"score":43,"level":0},{"x":916,"y":786,"score":56,"level":0},{"x":1023,"y":786,"score":38,"level":0},{"x":1049,"y":786,"score":113,"level":0},{"x":1176,"y":786,"score":184,"level":0},{"x":1188,"y":786,"score":37,"level":0},{"x":1193,"y":786,"score":53,"level":0},{"x":1203,"y":786,"score":184,"level":0},{"x":1248,"y":786,"score":120,"level":0},{"x":1266,"y":786,"score":42,"level":0},{"x":1441,"y":786,"score":116,"level":0},{"x":1471,"y":786,"score":77,"level":0},{"x":495,"y":787,"score":85,"level":0},{"x":541,"y":787,"score":39,"level":0},{"x":562,"y":787,"score":49,"level":0},{"x":759,"y":787,"score":113,"level":0},{"x":767,"y":787,"score":42,"level":0},{"x":896,"y":787,"score":65,"level":0},{"x":907,"y":787,"score":152,"level":0},{"x":1084,"y":787,"score":74,"level":0},{"x":1089,"y":787,"score":76,"level":0},{"x":1095,"y":787,"score":129,"level":0},{"x":1134,"y":787,"score":119,"level":0},{"x":1161,"y":787,"score":167,"level":0},{"x":1213,"y":787,"score":86,"level":0},{"x":1230,"y":787,"score":78,"level":0},{"x":1292,"y":787,"score":36,"level":0},{"x":1311,"y":787,"score":93,"level":0},{"x":1317,"y":787,"score":69,"level":0},{"x":1334,"y":787,"score":66,"level":0},{"x":1375,"y":787,"score":155,"level":0},{"x":1390,"y":787,"score":140,"level":0},{"x":1400,"y":787,"score":96,"level":0},{"x":1418,"y":787,"score":112,"level":0},{"x":1447,"y":787,"score":218,"level":0},{"x":1459,"y":787,"score":186,"level":0},{"x":393,"y":788,"score":42,"level":0},{"x":395,"y":788,"score":40,"level":0},{"x":554,"y":788,"score":49,"level":0},{"x":614,"y":788,"score":28,"level":0},{"x":623,"y":788,"score":29,"level":0},{"x":714,"y":788,"score":207,"level":0},{"x":832,"y":788,"score":48,"level":0},{"x":924,"y":788,"score":37,"level":0},{"x":933,"y":788,"score":48,"level":0},{"x":1181,"y":788,"score":28,"level":0},{"x":1201,"y":788,"score":212,"level":0},{"x":1304,"y":788,"score":31,"level":0},{"x":1326,"y":788,"score":74,"level":0},{"x":1329,"y":788,"score":38,"level":0},{"x":1426,"y":788,"score":152,"level":0},{"x":1435,"y":788,"score":71,"level":0},{"x":1452,"y":788,"score":312,"level":0},{"x":1490,"y":788,"score":37,"level":0},{"x":377,"y":789,"score":29,"level":0},{"x":544,"y":789,"score":79,"level":0},{"x":566,"y":789,"score":84,"level":0},{"x":587,"y":789,"score":45,"level":0},{"x":773,"y":789,"score":33,"level":0},{"x":871,"y":789,"score":155,"level":0},{"x":878,"y":789,"score":43,"level":0},{"x":887,"y":789,"score":69,"level":0},{"x":956,"y":789,"score":29,"level":0},{"x":975,"y":789,"score":84,"level":0},{"x":981,"y":789,"score":55,"level":0},{"x":992,"y":789,"score":73,"level":0},{"x":1043,"y":789,"score":189,"level":0},{"x":1106,"y":789,"score":68,"level":0},{"x":1109,"y":789,"score":69,"level":0},{"x":1240,"y":789,"score":197,"level":0},{"x":1414,"y":789,"score":31,"level":0},{"x":383,"y":790,"score":45,"level":0},{"x":424,"y":790,"score":93,"level":0},{"x":465,"y":790,"score":67,"level":0},{"x":479,"y":790,"score":32,"level":0},{"x":522,"y":790,"score":123,"level":0},{"x":582,"y":790,"score":159,"level":0},{"x":595,"y":790,"score":53,"level":0},{"x":615,"y":790,"score":45,"level":0},{"x":795,"y":790,"score":81,"level":0},{"x":815,"y":790,"score":84,"level":0},{"x":1038,"y":790,"score":40,"level":0},{"x":1103,"y":790,"score":61,"level":0},{"x":1181,"y":790,"score":100,"level":0},{"x":1257,"y":790,"score":79,"level":0},{"x":1280,"y":790,"score":53,"level":0},{"x":1302,"y":790,"score":81,"level":0},{"x":1325,"y":790,"score":48,"level":0},{"x":1401,"y":790,"score":48,"level":0},{"x":1407,"y":790,"score":187,"level":0},{"x":1469,"y":790,"score":95,"level":0},{"x":471,"y":791,"score":50,"level":0},{"x":599,"y":791,"score":30,"level":0},{"x":631,"y":791,"score":49,"level":0},{"x":649,"y":791,"score":87,"level":0},{"x":657,"y":791,"score":54,"level":0},{"x":693,"y":791,"score":106,"level":0},{"x":809,"y":791,"score":48,"level":0},{"x":833,"y":791,"score":46,"level":0},{"x":914,"y":791,"score":212,"level":0},{"x":926,"y":791,"score":71,"level":0},{"x":952,"y":791,"score":35,"level":0},{"x":961,"y":791,"score":157,"level":0},{"x":967,"y":791,"score":119,"level":0},{"x":1054,"y":791,"score":68,"level":0},{"x":1061,"y":791,"score":50,"level":0},{"x":1106,"y":791,"score":134,"level":0},{"x":1109,"y":791,"score":97,"level":0},{"x":1193,"y":791,"score":112,"level":0},{"x":1209,"y":791,"score":131,"level":0},{"x":1309,"y":791,"score":45,"level":0},{"x":1314,"y":791,"score":79,"level":0},{"x":1333,"y":791,"score":196,"level":0},{"x":1380,"y":791,"score":64,"level":0},{"x":1432,"y":791,"score":41,"level":0},{"x":1442,"y":791,"score":53,"level":0},{"x":383,"y":792,"score":56,"level":0},{"x":413,"y":792,"score":78,"level":0},{"x":491,"y":792,"score":160,"level":0},{"x":498,"y":792,"score":80,"level":0},{"x":732,"y":792,"score":69,"level":0},{"x":741,"y":792,"score":135,"level":0},{"x":749,"y":792,"score":174,"level":0},{"x":829,"y":792,"score":27,"level":0},{"x":987,"y":792,"score":70,"level":0},{"x":998,"y":792,"score":129,"level":0},{"x":1215,"y":792,"score":116,"level":0},{"x":1229,"y":792,"score":76,"level":0},{"x":1293,"y":792,"score":144,"level":0},{"x":1339,"y":792,"score":285,"level":0},{"x":1345,"y":792,"score":39,"level":0},{"x":1350,"y":792,"score":62,"level":0},{"x":1376,"y":792,"score":35,"level":0},{"x":1408,"y":792,"score":81,"level":0},{"x":554,"y":793,"score":30,"level":0},{"x":572,"y":793,"score":94,"level":0},{"x":755,"y":793,"score":92,"level":0},{"x":768,"y":793,"score":26,"level":0},{"x":782,"y":793,"score":184,"level":0},{"x":939,"y":793,"score":40,"level":0},{"x":943,"y":793,"score":32,"level":0},{"x":984,"y":793,"score":49,"level":0},{"x":1012,"y":793,"score":32,"level":0},{"x":1063,"y":793,"score":71,"level":0},{"x":1068,"y":793,"score":73,"level":0},{"x":1085,"y":793,"score":74,"level":0},{"x":1114,"y":793,"score":33,"level":0},{"x":1134,"y":793,"score":57,"level":0},{"x":1140,"y":793,"score":58,"level":0},{"x":1147,"y":793,"score":30,"level":0},{"x":1164,"y":793,"score":170,"level":0},{"x":1188,"y":793,"score":75,"level":0},{"x":1273,"y":793,"score":36,"level":0},{"x":1361,"y":793,"score":26,"level":0},{"x":1418,"y":793,"score":52,"level":0},{"x":1439,"y":793,"score":60,"level":0},{"x":1447,"y":793,"score":100,"level":0},{"x":1452,"y":793,"score":243,"level":0},{"x":1459,"y":793,"score":189,"level":0},{"x":377,"y":794,"score":39,"level":0},{"x":418,"y":794,"score":34,"level":0},{"x":517,"y":794,"score":192,"level":0},{"x":523,"y":794,"score":66,"level":0},{"x":532,"y":794,"score":32,"level":0},{"x":558,"y":794,"score":58,"level":0},{"x":577,"y":794,"score":61,"level":0},{"x":699,"y":794,"score":50,"level":0},{"x":707,"y":794,"score":65,"level":0},{"x":718,"y":794,"score":95,"level":0},{"x":797,"y":794,"score":152,"level":0},{"x":804,"y":794,"score":93,"level":0},{"x":811,"y":794,"score":73,"level":0},{"x":861,"y":794,"score":38,"level":0},{"x":886,"y":794,"score":34,"level":0},{"x":937,"y":794,"score":73,"level":0},{"x":980,"y":794,"score":39,"level":0},{"x":987,"y":794,"score":35,"level":0},{"x":993,"y":794,"score":36,"level":0},{"x":1042,"y":794,"score":153,"level":0},{"x":1057,"y":794,"score":30,"level":0},{"x":1100,"y":794,"score":89,"level":0},{"x":1176,"y":794,"score":78,"level":0},{"x":1203,"y":794,"score":88,"level":0},{"x":1231,"y":794,"score":109,"level":0},{"x":1241,"y":794,"score":151,"level":0},{"x":1248,"y":794,"score":253,"level":0},{"x":1346,"y":794,"score":33,"level":0},{"x":1389,"y":794,"score":34,"level":0},{"x":1428,"y":794,"score":128,"level":0},{"x":1476,"y":794,"score":126,"level":0},{"x":1489,"y":794,"score":98,"level":0},{"x":403,"y":795,"score":110,"level":0},{"x":409,"y":795,"score":66,"level":0},{"x":439,"y":795,"score":50,"level":0},{"x":513,"y":795,"score":55,"level":0},{"x":625,"y":795,"score":114,"level":0},{"x":668,"y":795,"score":36,"level":0},{"x":1008,"y":795,"score":56,"level":0},{"x":1091,"y":795,"score":92,"level":0},{"x":1120,"y":795,"score":165,"level":0},{"x":1258,"y":795,"score":112,"level":0},{"x":1292,"y":795,"score":47,"level":0},{"x":1300,"y":795,"score":86,"level":0},{"x":1306,"y":795,"score":52,"level":0},{"x":1317,"y":795,"score":123,"level":0},{"x":1327,"y":795,"score":27,"level":0},{"x":1464,"y":795,"score":36,"level":0},{"x":423,"y":796,"score":78,"level":0},{"x":429,"y":796,"score":81,"level":0},{"x":468,"y":796,"score":30,"level":0},{"x":511,"y":796,"score":43,"level":0},{"x":577,"y":796,"score":81,"level":0},{"x":774,"y":796,"score":37,"level":0},{"x":788,"y":796,"score":93,"level":0},{"x":796,"y":796,"score":182,"level":0},{"x":1003,"y":796,"score":113,"level":0},{"x":1134,"y":796,"score":68,"level":0},{"x":1150,"y":796,"score":114,"level":0},{"x":1156,"y":796,"score":55,"level":0},{"x":1279,"y":796,"score":51,"level":0},{"x":1455,"y":796,"score":154,"level":0},{"x":377,"y":797,"score":52,"level":0},{"x":413,"y":797,"score":70,"level":0},{"x":598,"y":797,"score":85,"level":0},{"x":690,"y":797,"score":36,"level":0},{"x":811,"y":797,"score":47,"level":0},{"x":931,"y":797,"score":34,"level":0},{"x":951,"y":797,"score":191,"level":0},{"x":982,"y":797,"score":87,"level":0},{"x":1061,"y":797,"score":62,"level":0},{"x":1115,"y":797,"score":141,"level":0},{"x":1121,"y":797,"score":83,"level":0},{"x":1181,"y":797,"score":28,"level":0},{"x":1207,"y":797,"score":60,"level":0},{"x":1213,"y":797,"score":62,"level":0},{"x":1300,"y":797,"score":73,"level":0},{"x":1377,"y":797,"score":104,"level":0},{"x":1401,"y":797,"score":52,"level":0},{"x":1405,"y":797,"score":26,"level":0},{"x":1442,"y":797,"score":96,"level":0},{"x":427,"y":798,"score":27,"level":0},{"x":471,"y":798,"score":59,"level":0},{"x":521,"y":798,"score":47,"level":0},{"x":725,"y":798,"score":54,"level":0},{"x":733,"y":798,"score":70,"level":0},{"x":746,"y":798,"score":96,"level":0},{"x":759,"y":798,"score":52,"level":0},{"x":882,"y":798,"score":97,"level":0},{"x":923,"y":798,"score":122,"level":0},{"x":976,"y":798,"score":44,"level":0},{"x":990,"y":798,"score":38,"level":0},{"x":1136,"y":798,"score":77,"level":0},{"x":1161,"y":798,"score":54,"level":0},{"x":1173,"y":798,"score":46,"level":0},{"x":1318,"y":798,"score":82,"level":0},{"x":1418,"y":798,"score":77,"level":0},{"x":1430,"y":798,"score":54,"level":0},{"x":1477,"y":798,"score":33,"level":0},{"x":393,"y":799,"score":49,"level":0},{"x":453,"y":799,"score":96,"level":0},{"x":499,"y":799,"score":65,"level":0},{"x":518,"y":799,"score":33,"level":0},{"x":537,"y":799,"score":33,"level":0},{"x":565,"y":799,"score":91,"level":0},{"x":705,"y":799,"score":114,"level":0},{"x":748,"y":799,"score":146,"level":0},{"x":841,"y":799,"score":28,"level":0},{"x":895,"y":799,"score":166,"level":0},{"x":904,"y":799,"score":39,"level":0},{"x":916,"y":799,"score":198,"level":0},{"x":994,"y":799,"score":97,"level":0},{"x":1155,"y":799,"score":60,"level":0},{"x":1179,"y":799,"score":139,"level":0},{"x":1238,"y":799,"score":208,"level":0},{"x":1244,"y":799,"score":67,"level":0},{"x":1290,"y":799,"score":94,"level":0},{"x":1298,"y":799,"score":92,"level":0},{"x":1351,"y":799,"score":176,"level":0},{"x":1485,"y":799,"score":85,"level":0},{"x":386,"y":800,"score":59,"level":0},{"x":447,"y":800,"score":97,"level":0},{"x":460,"y":800,"score":134,"level":0},{"x":719,"y":800,"score":142,"level":0},{"x":741,"y":800,"score":120,"level":0},{"x":772,"y":800,"score":53,"level":0},{"x":863,"y":800,"score":99,"level":0},{"x":960,"y":800,"score":58,"level":0},{"x":1323,"y":800,"score":32,"level":0},{"x":1341,"y":800,"score":135,"level":0},{"x":1389,"y":800,"score":88,"level":0},{"x":1433,"y":800,"score":95,"level":0},{"x":424,"y":801,"score":29,"level":0},{"x":432,"y":801,"score":34,"level":0},{"x":510,"y":801,"score":60,"level":0},{"x":676,"y":801,"score":59,"level":0},{"x":778,"y":801,"score":109,"level":0},{"x":802,"y":801,"score":258,"level":0},{"x":808,"y":801,"score":152,"level":0},{"x":875,"y":801,"score":53,"level":0},{"x":934,"y":801,"score":30,"level":0},{"x":971,"y":801,"score":62,"level":0},{"x":1014,"y":801,"score":51,"level":0},{"x":1024,"y":801,"score":68,"level":0},{"x":1100,"y":801,"score":54,"level":0},{"x":1121,"y":801,"score":73,"level":0},{"x":1132,"y":801,"score":34,"level":0},{"x":1141,"y":801,"score":153,"level":0},{"x":1151,"y":801,"score":69,"level":0},{"x":1158,"y":801,"score":86,"level":0},{"x":1256,"y":801,"score":94,"level":0},{"x":1273,"y":801,"score":31,"level":0},{"x":1285,"y":801,"score":42,"level":0},{"x":1473,"y":801,"score":98,"level":0},{"x":408,"y":802,"score":44,"level":0},{"x":418,"y":802,"score":128,"level":0},{"x":602,"y":802,"score":50,"level":0},{"x":717,"y":802,"score":40,"level":0},{"x":720,"y":802,"score":61,"level":0},{"x":788,"y":802,"score":27,"level":0},{"x":835,"y":802,"score":72,"level":0},{"x":928,"y":802,"score":63,"level":0},{"x":949,"y":802,"score":137,"level":0},{"x":985,"y":802,"score":34,"level":0},{"x":990,"y":802,"score":44,"level":0},{"x":1021,"y":802,"score":34,"level":0},{"x":1077,"y":802,"score":37,"level":0},{"x":1115,"y":802,"score":38,"level":0},{"x":1171,"y":802,"score":122,"level":0},{"x":1201,"y":802,"score":59,"level":0},{"x":1218,"y":802,"score":164,"level":0},{"x":1229,"y":802,"score":133,"level":0},{"x":1235,"y":802,"score":269,"level":0},{"x":1364,"y":802,"score":240,"level":0},{"x":1409,"y":802,"score":44,"level":0},{"x":1448,"y":802,"score":75,"level":0},{"x":1467,"y":802,"score":160,"level":0},{"x":486,"y":803,"score":36,"level":0},{"x":558,"y":803,"score":88,"level":0},{"x":955,"y":803,"score":90,"level":0},{"x":1009,"y":803,"score":160,"level":0},{"x":1061,"y":803,"score":66,"level":0},{"x":1164,"y":803,"score":64,"level":0},{"x":1184,"y":803,"score":71,"level":0},{"x":1212,"y":803,"score":59,"level":0},{"x":1318,"y":803,"score":75,"level":0},{"x":1331,"y":803,"score":37,"level":0},{"x":1359,"y":803,"score":71,"level":0},{"x":1442,"y":803,"score":120,"level":0},{"x":377,"y":804,"score":41,"level":0},{"x":393,"y":804,"score":144,"level":0},{"x":454,"y":804,"score":28,"level":0},{"x":471,"y":804,"score":26,"level":0},{"x":492,"y":804,"score":129,"level":0},{"x":511,"y":804,"score":121,"level":0},{"x":519,"y":804,"score":84,"level":0},{"x":588,"y":804,"score":123,"level":0},{"x":609,"y":804,"score":35,"level":0},{"x":734,"y":804,"score":73,"level":0},{"x":852,"y":804,"score":177,"level":0},{"x":894,"y":804,"score":74,"level":0},{"x":919,"y":804,"score":43,"level":0},{"x":976,"y":804,"score":64,"level":0},{"x":1085,"y":804,"score":64,"level":0},{"x":1095,"y":804,"score":126,"level":0},{"x":1108,"y":804,"score":119,"level":0},{"x":1123,"y":804,"score":66,"level":0},{"x":1166,"y":804,"score":80,"level":0},{"x":1354,"y":804,"score":63,"level":0},{"x":1370,"y":804,"score":126,"level":0},{"x":1487,"y":804,"score":64,"level":0},{"x":401,"y":805,"score":108,"level":0},{"x":459,"y":805,"score":66,"level":0},{"x":628,"y":805,"score":27,"level":0},{"x":741,"y":805,"score":100,"level":0},{"x":784,"y":805,"score":144,"level":0},{"x":794,"y":805,"score":68,"level":0},{"x":818,"y":805,"score":69,"level":0},{"x":846,"y":805,"score":45,"level":0},{"x":867,"y":805,"score":96,"level":0},{"x":886,"y":805,"score":152,"level":0},{"x":966,"y":805,"score":68,"level":0},{"x":974,"y":805,"score":39,"level":0},{"x":1042,"y":805,"score":64,"level":0},{"x":1047,"y":805,"score":49,"level":0},{"x":1056,"y":805,"score":120,"level":0},{"x":1242,"y":805,"score":56,"level":0},{"x":1376,"y":805,"score":97,"level":0},{"x":1390,"y":805,"score":136,"level":0},{"x":1397,"y":805,"score":30,"level":0},{"x":1403,"y":805,"score":57,"level":0},{"x":1432,"y":805,"score":26,"level":0},{"x":1449,"y":805,"score":51,"level":0},{"x":1454,"y":805,"score":103,"level":0},{"x":1480,"y":805,"score":106,"level":0},{"x":1482,"y":805,"score":82,"level":0},{"x":595,"y":806,"score":113,"level":0},{"x":709,"y":806,"score":84,"level":0},{"x":803,"y":806,"score":64,"level":0},{"x":820,"y":806,"score":35,"level":0},{"x":910,"y":806,"score":28,"level":0},{"x":951,"y":806,"score":90,"level":0},{"x":960,"y":806,"score":57,"level":0},{"x":982,"y":806,"score":36,"level":0},{"x":1087,"y":806,"score":61,"level":0},{"x":1151,"y":806,"score":52,"level":0},{"x":1190,"y":806,"score":169,"level":0},{"x":1233,"y":806,"score":39,"level":0},{"x":1256,"y":806,"score":34,"level":0},{"x":1344,"y":806,"score":92,"level":0},{"x":1473,"y":806,"score":49,"level":0},{"x":383,"y":807,"score":148,"level":0},{"x":548,"y":807,"score":92,"level":0},{"x":688,"y":807,"score":102,"level":0},{"x":694,"y":807,"score":45,"level":0},{"x":705,"y":807,"score":85,"level":0},{"x":747,"y":807,"score":88,"level":0},{"x":833,"y":807,"score":53,"level":0},{"x":843,"y":807,"score":36,"level":0},{"x":925,"y":807,"score":44,"level":0},{"x":944,"y":807,"score":164,"level":0},{"x":1029,"y":807,"score":50,"level":0},{"x":1039,"y":807,"score":78,"level":0},{"x":1069,"y":807,"score":49,"level":0},{"x":1098,"y":807,"score":45,"level":0},{"x":1102,"y":807,"score":82,"level":0},{"x":1116,"y":807,"score":53,"level":0},{"x":1135,"y":807,"score":240,"level":0},{"x":1161,"y":807,"score":57,"level":0},{"x":1214,"y":807,"score":167,"level":0},{"x":1272,"y":807,"score":103,"level":0},{"x":1284,"y":807,"score":88,"level":0},{"x":1435,"y":807,"score":78,"level":0},{"x":418,"y":808,"score":86,"level":0},{"x":559,"y":808,"score":98,"level":0},{"x":602,"y":808,"score":82,"level":0},{"x":680,"y":808,"score":52,"level":0},{"x":835,"y":808,"score":45,"level":0},{"x":1005,"y":808,"score":89,"level":0},{"x":1021,"y":808,"score":88,"level":0},{"x":1163,"y":808,"score":49,"level":0},{"x":1201,"y":808,"score":274,"level":0},{"x":1292,"y":808,"score":42,"level":0},{"x":1298,"y":808,"score":190,"level":0},{"x":1317,"y":808,"score":114,"level":0},{"x":1384,"y":808,"score":218,"level":0},{"x":1440,"y":808,"score":38,"level":0},{"x":1457,"y":808,"score":122,"level":0},{"x":1484,"y":808,"score":26,"level":0},{"x":413,"y":809,"score":79,"level":0},{"x":450,"y":809,"score":38,"level":0},{"x":576,"y":809,"score":45,"level":0},{"x":616,"y":809,"score":50,"level":0},{"x":673,"y":809,"score":36,"level":0},{"x":777,"y":809,"score":99,"level":0},{"x":815,"y":809,"score":82,"level":0},{"x":905,"y":809,"score":91,"level":0},{"x":1000,"y":809,"score":55,"level":0},{"x":1052,"y":809,"score":125,"level":0},{"x":1072,"y":809,"score":121,"level":0},{"x":1084,"y":809,"score":34,"level":0},{"x":1206,"y":809,"score":98,"level":0},{"x":1309,"y":809,"score":119,"level":0},{"x":1468,"y":809,"score":181,"level":0},{"x":391,"y":810,"score":63,"level":0},{"x":393,"y":810,"score":54,"level":0},{"x":469,"y":810,"score":86,"level":0},{"x":741,"y":810,"score":51,"level":0},{"x":827,"y":810,"score":62,"level":0},{"x":876,"y":810,"score":126,"level":0},{"x":878,"y":810,"score":141,"level":0},{"x":957,"y":810,"score":65,"level":0},{"x":972,"y":810,"score":81,"level":0},{"x":996,"y":810,"score":55,"level":0},{"x":1011,"y":810,"score":63,"level":0},{"x":1035,"y":810,"score":46,"level":0},{"x":1142,"y":810,"score":131,"level":0},{"x":1156,"y":810,"score":103,"level":0},{"x":1237,"y":810,"score":249,"level":0},{"x":1293,"y":810,"score":27,"level":0},{"x":1390,"y":810,"score":231,"level":0},{"x":1398,"y":810,"score":63,"level":0},{"x":1443,"y":810,"score":56,"level":0},{"x":1457,"y":810,"score":130,"level":0},{"x":396,"y":811,"score":66,"level":0},{"x":478,"y":811,"score":36,"level":0},{"x":594,"y":811,"score":33,"level":0},{"x":768,"y":811,"score":82,"level":0},{"x":891,"y":811,"score":41,"level":0},{"x":988,"y":811,"score":54,"level":0},{"x":990,"y":811,"score":62,"level":0},{"x":1015,"y":811,"score":63,"level":0},{"x":1087,"y":811,"score":146,"level":0},{"x":1158,"y":811,"score":88,"level":0},{"x":1193,"y":811,"score":159,"level":0},{"x":1227,"y":811,"score":161,"level":0},{"x":1267,"y":811,"score":119,"level":0},{"x":1281,"y":811,"score":266,"level":0},{"x":1329,"y":811,"score":64,"level":0},{"x":1340,"y":811,"score":82,"level":0},{"x":1347,"y":811,"score":176,"level":0},{"x":1374,"y":811,"score":145,"level":0},{"x":1380,"y":811,"score":90,"level":0},{"x":1423,"y":811,"score":37,"level":0},{"x":420,"y":812,"score":45,"level":0},{"x":435,"y":812,"score":67,"level":0},{"x":523,"y":812,"score":66,"level":0},{"x":709,"y":812,"score":52,"level":0},{"x":725,"y":812,"score":44,"level":0},{"x":799,"y":812,"score":65,"level":0},{"x":805,"y":812,"score":58,"level":0},{"x":843,"y":812,"score":44,"level":0},{"x":849,"y":812,"score":43,"level":0},{"x":916,"y":812,"score":26,"level":0},{"x":930,"y":812,"score":108,"level":0},{"x":964,"y":812,"score":232,"level":0},{"x":971,"y":812,"score":96,"level":0},{"x":1010,"y":812,"score":44,"level":0},{"x":1062,"y":812,"score":26,"level":0},{"x":1092,"y":812,"score":90,"level":0},{"x":1214,"y":812,"score":124,"level":0},{"x":1232,"y":812,"score":147,"level":0},{"x":1370,"y":812,"score":198,"level":0},{"x":1405,"y":812,"score":31,"level":0},{"x":1430,"y":812,"score":87,"level":0},{"x":1454,"y":812,"score":111,"level":0},{"x":379,"y":813,"score":116,"level":0},{"x":381,"y":813,"score":60,"level":0},{"x":395,"y":813,"score":60,"level":0},{"x":404,"y":813,"score":43,"level":0},{"x":442,"y":813,"score":63,"level":0},{"x":482,"y":813,"score":79,"level":0},{"x":486,"y":813,"score":69,"level":0},{"x":551,"y":813,"score":169,"level":0},{"x":682,"y":813,"score":75,"level":0},{"x":695,"y":813,"score":44,"level":0},{"x":716,"y":813,"score":130,"level":0},{"x":760,"y":813,"score":105,"level":0},{"x":786,"y":813,"score":91,"level":0},{"x":837,"y":813,"score":189,"level":0},{"x":857,"y":813,"score":196,"level":0},{"x":863,"y":813,"score":103,"level":0},{"x":872,"y":813,"score":36,"level":0},{"x":899,"y":813,"score":53,"level":0},{"x":910,"y":813,"score":181,"level":0},{"x":958,"y":813,"score":34,"level":0},{"x":976,"y":813,"score":88,"level":0},{"x":1040,"y":813,"score":95,"level":0},{"x":1069,"y":813,"score":27,"level":0},{"x":1244,"y":813,"score":45,"level":0},{"x":1286,"y":813,"score":207,"level":0},{"x":1301,"y":813,"score":43,"level":0},{"x":1316,"y":813,"score":139,"level":0},{"x":1334,"y":813,"score":88,"level":0},{"x":1383,"y":813,"score":38,"level":0},{"x":1433,"y":813,"score":147,"level":0},{"x":429,"y":814,"score":152,"level":0},{"x":574,"y":814,"score":32,"level":0},{"x":585,"y":814,"score":55,"level":0},{"x":601,"y":814,"score":108,"level":0},{"x":735,"y":814,"score":40,"level":0},{"x":796,"y":814,"score":106,"level":0},{"x":895,"y":814,"score":48,"level":0},{"x":944,"y":814,"score":153,"level":0},{"x":992,"y":814,"score":43,"level":0},{"x":1020,"y":814,"score":80,"level":0},{"x":1046,"y":814,"score":31,"level":0},{"x":1115,"y":814,"score":40,"level":0},{"x":1174,"y":814,"score":196,"level":0},{"x":1182,"y":814,"score":214,"level":0},{"x":1361,"y":814,"score":58,"level":0},{"x":1396,"y":814,"score":98,"level":0},{"x":1406,"y":814,"score":98,"level":0},{"x":1452,"y":814,"score":80,"level":0},{"x":1461,"y":814,"score":74,"level":0},{"x":1469,"y":814,"score":29,"level":0},{"x":448,"y":815,"score":128,"level":0},{"x":479,"y":815,"score":126,"level":0},{"x":490,"y":815,"score":50,"level":0},{"x":539,"y":815,"score":65,"level":0},{"x":569,"y":815,"score":32,"level":0},{"x":580,"y":815,"score":61,"level":0},{"x":669,"y":815,"score":59,"level":0},{"x":691,"y":815,"score":86,"level":0},{"x":700,"y":815,"score":66,"level":0},{"x":705,"y":815,"score":34,"level":0},{"x":742,"y":815,"score":91,"level":0},{"x":810,"y":815,"score":33,"level":0},{"x":816,"y":815,"score":112,"level":0},{"x":875,"y":815,"score":58,"level":0},{"x":897,"y":815,"score":32,"level":0},{"x":903,"y":815,"score":76,"level":0},{"x":985,"y":815,"score":28,"level":0},{"x":995,"y":815,"score":62,"level":0},{"x":1001,"y":815,"score":67,"level":0},{"x":1029,"y":815,"score":88,"level":0},{"x":1035,"y":815,"score":67,"level":0},{"x":1146,"y":815,"score":52,"level":0},{"x":1278,"y":815,"score":249,"level":0},{"x":1298,"y":815,"score":55,"level":0},{"x":1418,"y":815,"score":61,"level":0},{"x":783,"y":816,"score":79,"level":0},{"x":788,"y":816,"score":156,"level":0},{"x":847,"y":816,"score":28,"level":0},{"x":891,"y":816,"score":32,"level":0},{"x":1007,"y":816,"score":60,"level":0},{"x":1090,"y":816,"score":56,"level":0},{"x":1239,"y":816,"score":30,"level":0},{"x":1252,"y":816,"score":53,"level":0},{"x":1263,"y":816,"score":96,"level":0},{"x":1318,"y":816,"score":64,"level":0},{"x":1327,"y":816,"score":235,"level":0},{"x":1390,"y":816,"score":112,"level":0},{"x":1446,"y":816,"score":91,"level":0},{"x":439,"y":817,"score":82,"level":0},{"x":456,"y":817,"score":78,"level":0},{"x":534,"y":817,"score":77,"level":0},{"x":640,"y":817,"score":33,"level":0},{"x":675,"y":817,"score":33,"level":0},{"x":751,"y":817,"score":102,"level":0},{"x":870,"y":817,"score":69,"level":0},{"x":886,"y":817,"score":82,"level":0},{"x":933,"y":817,"score":41,"level":0},{"x":1013,"y":817,"score":39,"level":0},{"x":1031,"y":817,"score":29,"level":0},{"x":1036,"y":817,"score":97,"level":0},{"x":1080,"y":817,"score":138,"level":0},{"x":1173,"y":817,"score":120,"level":0},{"x":1206,"y":817,"score":106,"level":0},{"x":1231,"y":817,"score":66,"level":0},{"x":1242,"y":817,"score":154,"level":0},{"x":1248,"y":817,"score":81,"level":0},{"x":1313,"y":817,"score":206,"level":0},{"x":381,"y":818,"score":116,"level":0},{"x":396,"y":818,"score":81,"level":0},{"x":406,"y":818,"score":31,"level":0},{"x":491,"y":818,"score":88,"level":0},{"x":785,"y":818,"score":28,"level":0},{"x":823,"y":818,"score":75,"level":0},{"x":863,"y":818,"score":35,"level":0},{"x":965,"y":818,"score":67,"level":0},{"x":1018,"y":818,"score":44,"level":0},{"x":1057,"y":818,"score":41,"level":0},{"x":1087,"y":818,"score":123,"level":0},{"x":1095,"y":818,"score":83,"level":0},{"x":1204,"y":818,"score":31,"level":0},{"x":1209,"y":818,"score":114,"level":0},{"x":1226,"y":818,"score":95,"level":0},{"x":1235,"y":818,"score":27,"level":0},{"x":1250,"y":818,"score":56,"level":0},{"x":1272,"y":818,"score":67,"level":0},{"x":390,"y":819,"score":91,"level":0},{"x":681,"y":819,"score":51,"level":0},{"x":716,"y":819,"score":36,"level":0},{"x":724,"y":819,"score":85,"level":0},{"x":844,"y":819,"score":40,"level":0},{"x":1040,"y":819,"score":60,"level":0},{"x":1052,"y":819,"score":69,"level":0},{"x":1108,"y":819,"score":213,"level":0},{"x":1255,"y":819,"score":43,"level":0},{"x":1262,"y":819,"score":100,"level":0},{"x":1308,"y":819,"score":153,"level":0},{"x":1319,"y":819,"score":53,"level":0},{"x":1452,"y":819,"score":47,"level":0},{"x":1467,"y":819,"score":34,"level":0},{"x":434,"y":820,"score":79,"level":0},{"x":496,"y":820,"score":86,"level":0},{"x":548,"y":820,"score":74,"level":0},{"x":563,"y":820,"score":134,"level":0},{"x":741,"y":820,"score":35,"level":0},{"x":816,"y":820,"score":128,"level":0},{"x":830,"y":820,"score":102,"level":0},{"x":904,"y":820,"score":115,"level":0},{"x":941,"y":820,"score":184,"level":0},{"x":977,"y":820,"score":47,"level":0},{"x":1003,"y":820,"score":104,"level":0},{"x":1009,"y":820,"score":163,"level":0},{"x":1064,"y":820,"score":30,"level":0},{"x":1177,"y":820,"score":26,"level":0},{"x":1182,"y":820,"score":135,"level":0},{"x":1220,"y":820,"score":240,"level":0},{"x":1226,"y":820,"score":133,"level":0},{"x":1282,"y":820,"score":41,"level":0},{"x":1334,"y":820,"score":28,"level":0},{"x":1398,"y":820,"score":117,"level":0},{"x":1406,"y":820,"score":213,"level":0},{"x":1429,"y":820,"score":83,"level":0},{"x":1433,"y":820,"score":97,"level":0},{"x":1441,"y":820,"score":102,"level":0},{"x":476,"y":821,"score":46,"level":0},{"x":525,"y":821,"score":111,"level":0},{"x":603,"y":821,"score":44,"level":0},{"x":659,"y":821,"score":62,"level":0},{"x":756,"y":821,"score":62,"level":0},{"x":835,"y":821,"score":37,"level":0},{"x":947,"y":821,"score":142,"level":0},{"x":997,"y":821,"score":30,"level":0},{"x":1098,"y":821,"score":72,"level":0},{"x":1103,"y":821,"score":90,"level":0},{"x":1158,"y":821,"score":27,"level":0},{"x":1160,"y":821,"score":38,"level":0},{"x":1208,"y":821,"score":38,"level":0},{"x":1237,"y":821,"score":92,"level":0},{"x":1267,"y":821,"score":138,"level":0},{"x":1295,"y":821,"score":172,"level":0},{"x":1323,"y":821,"score":172,"level":0},{"x":1391,"y":821,"score":83,"level":0},{"x":1416,"y":821,"score":74,"level":0},{"x":1453,"y":821,"score":126,"level":0},{"x":1485,"y":821,"score":182,"level":0},{"x":377,"y":822,"score":34,"level":0},{"x":399,"y":822,"score":35,"level":0},{"x":439,"y":822,"score":33,"level":0},{"x":498,"y":822,"score":99,"level":0},{"x":537,"y":822,"score":107,"level":0},{"x":589,"y":822,"score":64,"level":0},{"x":616,"y":822,"score":85,"level":0},{"x":676,"y":822,"score":50,"level":0},{"x":764,"y":822,"score":31,"level":0},{"x":768,"y":822,"score":47,"level":0},{"x":781,"y":822,"score":109,"level":0},{"x":790,"y":822,"score":89,"level":0},{"x":808,"y":822,"score":98,"level":0},{"x":815,"y":822,"score":108,"level":0},{"x":844,"y":822,"score":52,"level":0},{"x":972,"y":822,"score":131,"level":0},{"x":984,"y":822,"score":39,"level":0},{"x":994,"y":822,"score":38,"level":0},{"x":1008,"y":822,"score":50,"level":0},{"x":1022,"y":822,"score":33,"level":0},{"x":1028,"y":822,"score":130,"level":0},{"x":1068,"y":822,"score":54,"level":0},{"x":1090,"y":822,"score":92,"level":0},{"x":1142,"y":822,"score":91,"level":0},{"x":1168,"y":822,"score":86,"level":0},{"x":1230,"y":822,"score":128,"level":0},{"x":1242,"y":822,"score":36,"level":0},{"x":1247,"y":822,"score":141,"level":0},{"x":1253,"y":822,"score":39,"level":0},{"x":1329,"y":822,"score":49,"level":0},{"x":1361,"y":822,"score":30,"level":0},{"x":1448,"y":822,"score":61,"level":0},{"x":451,"y":823,"score":94,"level":0},{"x":459,"y":823,"score":44,"level":0},{"x":473,"y":823,"score":32,"level":0},{"x":701,"y":823,"score":76,"level":0},{"x":707,"y":823,"score":38,"level":0},{"x":722,"y":823,"score":128,"level":0},{"x":729,"y":823,"score":154,"level":0},{"x":744,"y":823,"score":54,"level":0},{"x":779,"y":823,"score":90,"level":0},{"x":840,"y":823,"score":41,"level":0},{"x":912,"y":823,"score":42,"level":0},{"x":1018,"y":823,"score":28,"level":0},{"x":1036,"y":823,"score":59,"level":0},{"x":1138,"y":823,"score":89,"level":0},{"x":1204,"y":823,"score":92,"level":0},{"x":1225,"y":823,"score":62,"level":0},{"x":1257,"y":823,"score":48,"level":0},{"x":1278,"y":823,"score":77,"level":0},{"x":1378,"y":823,"score":99,"level":0},{"x":1423,"y":823,"score":62,"level":0},{"x":1474,"y":823,"score":72,"level":0},{"x":427,"y":824,"score":27,"level":0},{"x":442,"y":824,"score":50,"level":0},{"x":471,"y":824,"score":30,"level":0},{"x":531,"y":824,"score":86,"level":0},{"x":568,"y":824,"score":135,"level":0},{"x":607,"y":824,"score":73,"level":0},{"x":647,"y":824,"score":81,"level":0},{"x":688,"y":824,"score":90,"level":0},{"x":775,"y":824,"score":93,"level":0},{"x":843,"y":824,"score":52,"level":0},{"x":858,"y":824,"score":64,"level":0},{"x":1055,"y":824,"score":106,"level":0},{"x":1072,"y":824,"score":32,"level":0},{"x":1089,"y":824,"score":138,"level":0},{"x":1110,"y":824,"score":30,"level":0},{"x":1116,"y":824,"score":108,"level":0},{"x":1250,"y":824,"score":29,"level":0},{"x":1255,"y":824,"score":32,"level":0},{"x":1295,"y":824,"score":154,"level":0},{"x":1312,"y":824,"score":330,"level":0},{"x":1319,"y":824,"score":35,"level":0},{"x":1376,"y":824,"score":61,"level":0},{"x":1389,"y":824,"score":48,"level":0},{"x":1402,"y":824,"score":41,"level":0},{"x":1417,"y":824,"score":88,"level":0},{"x":393,"y":825,"score":90,"level":0},{"x":507,"y":825,"score":72,"level":0},{"x":551,"y":825,"score":92,"level":0},{"x":655,"y":825,"score":67,"level":0},{"x":665,"y":825,"score":43,"level":0},{"x":699,"y":825,"score":92,"level":0},{"x":799,"y":825,"score":43,"level":0},{"x":824,"y":825,"score":92,"level":0},{"x":831,"y":825,"score":161,"level":0},{"x":920,"y":825,"score":34,"level":0},{"x":970,"y":825,"score":30,"level":0},{"x":1042,"y":825,"score":84,"level":0},{"x":1063,"y":825,"score":83,"level":0},{"x":1095,"y":825,"score":63,"level":0},{"x":1121,"y":825,"score":152,"level":0},{"x":1194,"y":825,"score":40,"level":0},{"x":1215,"y":825,"score":134,"level":0},{"x":1221,"y":825,"score":191,"level":0},{"x":1286,"y":825,"score":58,"level":0},{"x":1306,"y":825,"score":108,"level":0},{"x":1435,"y":825,"score":44,"level":0},{"x":476,"y":826,"score":41,"level":0},{"x":587,"y":826,"score":80,"level":0},{"x":592,"y":826,"score":147,"level":0},{"x":598,"y":826,"score":59,"level":0},{"x":622,"y":826,"score":49,"level":0},{"x":683,"y":826,"score":41,"level":0},{"x":708,"y":826,"score":96,"level":0},{"x":716,"y":826,"score":32,"level":0},{"x":841,"y":826,"score":39,"level":0},{"x":916,"y":826,"score":27,"level":0},{"x":965,"y":826,"score":164,"level":0},{"x":1099,"y":826,"score":67,"level":0},{"x":1150,"y":826,"score":172,"level":0},{"x":1230,"y":826,"score":60,"level":0},{"x":1329,"y":826,"score":94,"level":0},{"x":1331,"y":826,"score":41,"level":0},{"x":1427,"y":826,"score":66,"level":0},{"x":414,"y":827,"score":40,"level":0},{"x":493,"y":827,"score":72,"level":0},{"x":699,"y":827,"score":91,"level":0},{"x":714,"y":827,"score":58,"level":0},{"x":837,"y":827,"score":26,"level":0},{"x":890,"y":827,"score":59,"level":0},{"x":924,"y":827,"score":120,"level":0},{"x":993,"y":827,"score":48,"level":0},{"x":1027,"y":827,"score":77,"level":0},{"x":1084,"y":827,"score":88,"level":0},{"x":1107,"y":827,"score":46,"level":0},{"x":1158,"y":827,"score":62,"level":0},{"x":1163,"y":827,"score":222,"level":0},{"x":1184,"y":827,"score":69,"level":0},{"x":1225,"y":827,"score":111,"level":0},{"x":1243,"y":827,"score":30,"level":0},{"x":1255,"y":827,"score":88,"level":0},{"x":1368,"y":827,"score":70,"level":0},{"x":1448,"y":827,"score":129,"level":0},{"x":1482,"y":827,"score":130,"level":0},{"x":386,"y":828,"score":41,"level":0},{"x":452,"y":828,"score":93,"level":0},{"x":459,"y":828,"score":145,"level":0},{"x":507,"y":828,"score":64,"level":0},{"x":543,"y":828,"score":38,"level":0},{"x":626,"y":828,"score":38,"level":0},{"x":631,"y":828,"score":56,"level":0},{"x":723,"y":828,"score":40,"level":0},{"x":736,"y":828,"score":64,"level":0},{"x":744,"y":828,"score":152,"level":0},{"x":768,"y":828,"score":45,"level":0},{"x":779,"y":828,"score":51,"level":0},{"x":847,"y":828,"score":43,"level":0},{"x":871,"y":828,"score":62,"level":0},{"x":886,"y":828,"score":49,"level":0},{"x":973,"y":828,"score":107,"level":0},{"x":978,"y":828,"score":127,"level":0},{"x":986,"y":828,"score":30,"level":0},{"x":1002,"y":828,"score":186,"level":0},{"x":1029,"y":828,"score":63,"level":0},{"x":1100,"y":828,"score":46,"level":0},{"x":1129,"y":828,"score":30,"level":0},{"x":1237,"y":828,"score":65,"level":0},{"x":1323,"y":828,"score":153,"level":0},{"x":1423,"y":828,"score":83,"level":0},{"x":505,"y":829,"score":48,"level":0},{"x":515,"y":829,"score":94,"level":0},{"x":556,"y":829,"score":98,"level":0},{"x":558,"y":829,"score":86,"level":0},{"x":572,"y":829,"score":167,"level":0},{"x":703,"y":829,"score":75,"level":0},{"x":760,"y":829,"score":44,"level":0},{"x":796,"y":829,"score":56,"level":0},{"x":843,"y":829,"score":34,"level":0},{"x":906,"y":829,"score":41,"level":0},{"x":1015,"y":829,"score":170,"level":0},{"x":1106,"y":829,"score":65,"level":0},{"x":1141,"y":829,"score":47,"level":0},{"x":1179,"y":829,"score":29,"level":0},{"x":1185,"y":829,"score":115,"level":0},{"x":1282,"y":829,"score":53,"level":0},{"x":1292,"y":829,"score":40,"level":0},{"x":1311,"y":829,"score":43,"level":0},{"x":1376,"y":829,"score":199,"level":0},{"x":1455,"y":829,"score":34,"level":0},{"x":1466,"y":829,"score":138,"level":0},{"x":427,"y":830,"score":70,"level":0},{"x":512,"y":830,"score":80,"level":0},{"x":752,"y":830,"score":44,"level":0},{"x":816,"y":830,"score":64,"level":0},{"x":919,"y":830,"score":67,"level":0},{"x":940,"y":830,"score":52,"level":0},{"x":1076,"y":830,"score":36,"level":0},{"x":1191,"y":830,"score":27,"level":0},{"x":1203,"y":830,"score":139,"level":0},{"x":1246,"y":830,"score":44,"level":0},{"x":1303,"y":830,"score":145,"level":0},{"x":1385,"y":830,"score":44,"level":0},{"x":1402,"y":830,"score":354,"level":0},{"x":1408,"y":830,"score":196,"level":0},{"x":1417,"y":830,"score":90,"level":0},{"x":1472,"y":830,"score":37,"level":0},{"x":390,"y":831,"score":42,"level":0},{"x":418,"y":831,"score":98,"level":0},{"x":550,"y":831,"score":77,"level":0},{"x":582,"y":831,"score":54,"level":0},{"x":622,"y":831,"score":56,"level":0},{"x":832,"y":831,"score":71,"level":0},{"x":862,"y":831,"score":34,"level":0},{"x":930,"y":831,"score":264,"level":0},{"x":943,"y":831,"score":101,"level":0},{"x":952,"y":831,"score":71,"level":0},{"x":998,"y":831,"score":34,"level":0},{"x":1027,"y":831,"score":48,"level":0},{"x":1033,"y":831,"score":133,"level":0},{"x":1098,"y":831,"score":46,"level":0},{"x":1121,"y":831,"score":159,"level":0},{"x":1234,"y":831,"score":35,"level":0},{"x":1260,"y":831,"score":83,"level":0},{"x":1333,"y":831,"score":217,"level":0},{"x":1413,"y":831,"score":93,"level":0},{"x":1444,"y":831,"score":93,"level":0},{"x":1458,"y":831,"score":71,"level":0},{"x":377,"y":832,"score":70,"level":0},{"x":487,"y":832,"score":87,"level":0},{"x":545,"y":832,"score":30,"level":0},{"x":666,"y":832,"score":52,"level":0},{"x":714,"y":832,"score":78,"level":0},{"x":730,"y":832,"score":125,"level":0},{"x":761,"y":832,"score":30,"level":0},{"x":806,"y":832,"score":97,"level":0},{"x":838,"y":832,"score":142,"level":0},{"x":891,"y":832,"score":67,"level":0},{"x":900,"y":832,"score":86,"level":0},{"x":937,"y":832,"score":57,"level":0},{"x":1051,"y":832,"score":137,"level":0},{"x":1087,"y":832,"score":89,"level":0},{"x":1161,"y":832,"score":36,"level":0},{"x":1196,"y":832,"score":80,"level":0},{"x":1250,"y":832,"score":62,"level":0},{"x":1320,"y":832,"score":82,"level":0},{"x":1380,"y":832,"score":36,"level":0},{"x":1448,"y":832,"score":45,"level":0},{"x":1482,"y":832,"score":141,"level":0},{"x":1489,"y":832,"score":47,"level":0},{"x":386,"y":833,"score":50,"level":0},{"x":398,"y":833,"score":49,"level":0},{"x":497,"y":833,"score":132,"level":0},{"x":581,"y":833,"score":32,"level":0},{"x":613,"y":833,"score":57,"level":0},{"x":625,"y":833,"score":56,"level":0},{"x":632,"y":833,"score":61,"level":0},{"x":741,"y":833,"score":81,"level":0},{"x":751,"y":833,"score":34,"level":0},{"x":801,"y":833,"score":46,"level":0},{"x":949,"y":833,"score":38,"level":0},{"x":975,"y":833,"score":76,"level":0},{"x":1029,"y":833,"score":38,"level":0},{"x":1076,"y":833,"score":38,"level":0},{"x":1092,"y":833,"score":38,"level":0},{"x":1103,"y":833,"score":96,"level":0},{"x":1122,"y":833,"score":106,"level":0},{"x":1127,"y":833,"score":120,"level":0},{"x":1138,"y":833,"score":162,"level":0},{"x":1190,"y":833,"score":48,"level":0},{"x":1341,"y":833,"score":136,"level":0},{"x":1451,"y":833,"score":51,"level":0},{"x":425,"y":834,"score":59,"level":0},{"x":492,"y":834,"score":130,"level":0},{"x":506,"y":834,"score":30,"level":0},{"x":600,"y":834,"score":64,"level":0},{"x":665,"y":834,"score":51,"level":0},{"x":679,"y":834,"score":52,"level":0},{"x":696,"y":834,"score":128,"level":0},{"x":792,"y":834,"score":55,"level":0},{"x":883,"y":834,"score":97,"level":0},{"x":904,"y":834,"score":38,"level":0},{"x":1000,"y":834,"score":92,"level":0},{"x":1006,"y":834,"score":47,"level":0},{"x":1013,"y":834,"score":106,"level":0},{"x":1222,"y":834,"score":54,"level":0},{"x":1254,"y":834,"score":137,"level":0},{"x":1283,"y":834,"score":50,"level":0},{"x":1347,"y":834,"score":42,"level":0},{"x":404,"y":835,"score":47,"level":0},{"x":410,"y":835,"score":59,"level":0},{"x":579,"y":835,"score":41,"level":0},{"x":606,"y":835,"score":85,"level":0},{"x":713,"y":835,"score":86,"level":0},{"x":736,"y":835,"score":41,"level":0},{"x":783,"y":835,"score":108,"level":0},{"x":795,"y":835,"score":42,"level":0},{"x":818,"y":835,"score":47,"level":0},{"x":824,"y":835,"score":90,"level":0},{"x":857,"y":835,"score":165,"level":0},{"x":872,"y":835,"score":93,"level":0},{"x":919,"y":835,"score":121,"level":0},{"x":926,"y":835,"score":189,"level":0},{"x":984,"y":835,"score":31,"level":0},{"x":1045,"y":835,"score":124,"level":0},{"x":1059,"y":835,"score":99,"level":0},{"x":1140,"y":835,"score":66,"level":0},{"x":1199,"y":835,"score":77,"level":0},{"x":1204,"y":835,"score":63,"level":0},{"x":1243,"y":835,"score":107,"level":0},{"x":1271,"y":835,"score":57,"level":0},{"x":1288,"y":835,"score":26,"level":0},{"x":1303,"y":835,"score":29,"level":0},{"x":1374,"y":835,"score":123,"level":0},{"x":1389,"y":835,"score":88,"level":0},{"x":1408,"y":835,"score":93,"level":0},{"x":1477,"y":835,"score":72,"level":0},{"x":392,"y":836,"score":54,"level":0},{"x":523,"y":836,"score":168,"level":0},{"x":529,"y":836,"score":200,"level":0},{"x":551,"y":836,"score":55,"level":0},{"x":557,"y":836,"score":114,"level":0},{"x":686,"y":836,"score":35,"level":0},{"x":688,"y":836,"score":47,"level":0},{"x":790,"y":836,"score":30,"level":0},{"x":851,"y":836,"score":74,"level":0},{"x":1033,"y":836,"score":88,"level":0},{"x":1040,"y":836,"score":28,"level":0},{"x":1083,"y":836,"score":94,"level":0},{"x":1135,"y":836,"score":85,"level":0},{"x":1147,"y":836,"score":34,"level":0},{"x":1234,"y":836,"score":166,"level":0},{"x":1267,"y":836,"score":63,"level":0},{"x":1295,"y":836,"score":82,"level":0},{"x":1313,"y":836,"score":68,"level":0},{"x":1317,"y":836,"score":38,"level":0},{"x":1391,"y":836,"score":40,"level":0},{"x":1395,"y":836,"score":49,"level":0},{"x":1400,"y":836,"score":37,"level":0},{"x":673,"y":837,"score":142,"level":0},{"x":755,"y":837,"score":63,"level":0},{"x":830,"y":837,"score":108,"level":0},{"x":836,"y":837,"score":58,"level":0},{"x":863,"y":837,"score":174,"level":0},{"x":868,"y":837,"score":144,"level":0},{"x":879,"y":837,"score":181,"level":0},{"x":898,"y":837,"score":33,"level":0},{"x":959,"y":837,"score":36,"level":0},{"x":966,"y":837,"score":168,"level":0},{"x":999,"y":837,"score":50,"level":0},{"x":1054,"y":837,"score":50,"level":0},{"x":1099,"y":837,"score":64,"level":0},{"x":1214,"y":837,"score":26,"level":0},{"x":1282,"y":837,"score":39,"level":0},{"x":1304,"y":837,"score":26,"level":0},{"x":1415,"y":837,"score":155,"level":0},{"x":1420,"y":837,"score":118,"level":0},{"x":1457,"y":837,"score":124,"level":0},{"x":422,"y":838,"score":34,"level":0},{"x":534,"y":838,"score":34,"level":0},{"x":578,"y":838,"score":27,"level":0},{"x":721,"y":838,"score":34,"level":0},{"x":749,"y":838,"score":176,"level":0},{"x":1009,"y":838,"score":56,"level":0},{"x":1048,"y":838,"score":73,"level":0},{"x":1107,"y":838,"score":55,"level":0},{"x":1163,"y":838,"score":65,"level":0},{"x":1251,"y":838,"score":70,"level":0},{"x":1307,"y":838,"score":59,"level":0},{"x":1324,"y":838,"score":27,"level":0},{"x":1364,"y":838,"score":76,"level":0},{"x":1379,"y":838,"score":69,"level":0},{"x":1470,"y":838,"score":36,"level":0},{"x":1472,"y":838,"score":44,"level":0},{"x":432,"y":839,"score":35,"level":0},{"x":516,"y":839,"score":107,"level":0},{"x":583,"y":839,"score":61,"level":0},{"x":629,"y":839,"score":27,"level":0},{"x":632,"y":839,"score":63,"level":0},{"x":657,"y":839,"score":53,"level":0},{"x":771,"y":839,"score":85,"level":0},{"x":817,"y":839,"score":64,"level":0},{"x":824,"y":839,"score":26,"level":0},{"x":889,"y":839,"score":53,"level":0},{"x":969,"y":839,"score":120,"level":0},{"x":1025,"y":839,"score":192,"level":0},{"x":1038,"y":839,"score":70,"level":0},{"x":1119,"y":839,"score":179,"level":0},{"x":1219,"y":839,"score":142,"level":0},{"x":1224,"y":839,"score":91,"level":0},{"x":1273,"y":839,"score":74,"level":0},{"x":1341,"y":839,"score":35,"level":0},{"x":1349,"y":839,"score":63,"level":0},{"x":1398,"y":839,"score":72,"level":0},{"x":1413,"y":839,"score":90,"level":0},{"x":1488,"y":839,"score":42,"level":0},{"x":397,"y":840,"score":148,"level":0},{"x":408,"y":840,"score":31,"level":0},{"x":419,"y":840,"score":41,"level":0},{"x":428,"y":840,"score":44,"level":0},{"x":569,"y":840,"score":31,"level":0},{"x":718,"y":840,"score":42,"level":0},{"x":736,"y":840,"score":30,"level":0},{"x":761,"y":840,"score":29,"level":0},{"x":785,"y":840,"score":102,"level":0},{"x":800,"y":840,"score":105,"level":0},{"x":806,"y":840,"score":189,"level":0},{"x":932,"y":840,"score":70,"level":0},{"x":1009,"y":840,"score":157,"level":0},{"x":1016,"y":840,"score":41,"level":0},{"x":1061,"y":840,"score":70,"level":0},{"x":1136,"y":840,"score":52,"level":0},{"x":1169,"y":840,"score":164,"level":0},{"x":1200,"y":840,"score":82,"level":0},{"x":1229,"y":840,"score":208,"level":0},{"x":1446,"y":840,"score":98,"level":0},{"x":530,"y":841,"score":28,"level":0},{"x":623,"y":841,"score":28,"level":0},{"x":702,"y":841,"score":30,"level":0},{"x":711,"y":841,"score":196,"level":0},{"x":814,"y":841,"score":57,"level":0},{"x":906,"y":841,"score":98,"level":0},{"x":1045,"y":841,"score":34,"level":0},{"x":1121,"y":841,"score":132,"level":0},{"x":1147,"y":841,"score":110,"level":0},{"x":1243,"y":841,"score":143,"level":0},{"x":1401,"y":841,"score":102,"level":0},{"x":1429,"y":841,"score":96,"level":0},{"x":564,"y":842,"score":57,"level":0},{"x":615,"y":842,"score":34,"level":0},{"x":681,"y":842,"score":70,"level":0},{"x":700,"y":842,"score":30,"level":0},{"x":794,"y":842,"score":31,"level":0},{"x":884,"y":842,"score":60,"level":0},{"x":926,"y":842,"score":66,"level":0},{"x":975,"y":842,"score":58,"level":0},{"x":1005,"y":842,"score":93,"level":0},{"x":1032,"y":842,"score":105,"level":0},{"x":1055,"y":842,"score":41,"level":0},{"x":1061,"y":842,"score":40,"level":0},{"x":1100,"y":842,"score":35,"level":0},{"x":1128,"y":842,"score":82,"level":0},{"x":1138,"y":842,"score":91,"level":0},{"x":1172,"y":842,"score":120,"level":0},{"x":1186,"y":842,"score":50,"level":0},{"x":1237,"y":842,"score":307,"level":0},{"x":1333,"y":842,"score":73,"level":0},{"x":1403,"y":842,"score":157,"level":0},{"x":1414,"y":842,"score":41,"level":0},{"x":1440,"y":842,"score":54,"level":0},{"x":1477,"y":842,"score":32,"level":0},{"x":418,"y":843,"score":76,"level":0},{"x":466,"y":843,"score":27,"level":0},{"x":501,"y":843,"score":53,"level":0},{"x":524,"y":843,"score":167,"level":0},{"x":534,"y":843,"score":71,"level":0},{"x":557,"y":843,"score":55,"level":0},{"x":571,"y":843,"score":64,"level":0},{"x":672,"y":843,"score":47,"level":0},{"x":721,"y":843,"score":90,"level":0},{"x":743,"y":843,"score":51,"level":0},{"x":767,"y":843,"score":78,"level":0},{"x":949,"y":843,"score":101,"level":0},{"x":1047,"y":843,"score":50,"level":0},{"x":1103,"y":843,"score":30,"level":0},{"x":1191,"y":843,"score":115,"level":0},{"x":1196,"y":843,"score":50,"level":0},{"x":1270,"y":843,"score":81,"level":0},{"x":1287,"y":843,"score":217,"level":0},{"x":1317,"y":843,"score":168,"level":0},{"x":1350,"y":843,"score":30,"level":0},{"x":1355,"y":843,"score":47,"level":0},{"x":1379,"y":843,"score":241,"level":0},{"x":1396,"y":843,"score":80,"level":0},{"x":1412,"y":843,"score":112,"level":0},{"x":1420,"y":843,"score":122,"level":0},{"x":1429,"y":843,"score":135,"level":0},{"x":1438,"y":843,"score":33,"level":0},{"x":1483,"y":843,"score":70,"level":0},{"x":392,"y":844,"score":48,"level":0},{"x":510,"y":844,"score":149,"level":0},{"x":539,"y":844,"score":105,"level":0},{"x":652,"y":844,"score":44,"level":0},{"x":683,"y":844,"score":44,"level":0},{"x":806,"y":844,"score":70,"level":0},{"x":820,"y":844,"score":64,"level":0},{"x":825,"y":844,"score":101,"level":0},{"x":868,"y":844,"score":172,"level":0},{"x":878,"y":844,"score":80,"level":0},{"x":908,"y":844,"score":69,"level":0},{"x":915,"y":844,"score":85,"level":0},{"x":980,"y":844,"score":113,"level":0},{"x":1117,"y":844,"score":47,"level":0},{"x":1157,"y":844,"score":56,"level":0},{"x":1257,"y":844,"score":139,"level":0},{"x":1487,"y":844,"score":88,"level":0},{"x":455,"y":845,"score":33,"level":0},{"x":503,"y":845,"score":75,"level":0},{"x":750,"y":845,"score":47,"level":0},{"x":770,"y":845,"score":122,"level":0},{"x":785,"y":845,"score":125,"level":0},{"x":940,"y":845,"score":47,"level":0},{"x":999,"y":845,"score":271,"level":0},{"x":1035,"y":845,"score":60,"level":0},{"x":1161,"y":845,"score":82,"level":0},{"x":1305,"y":845,"score":47,"level":0},{"x":1327,"y":845,"score":184,"level":0},{"x":1467,"y":845,"score":36,"level":0},{"x":397,"y":846,"score":38,"level":0},{"x":415,"y":846,"score":29,"level":0},{"x":555,"y":846,"score":47,"level":0},{"x":597,"y":846,"score":98,"level":0},{"x":703,"y":846,"score":58,"level":0},{"x":711,"y":846,"score":27,"level":0},{"x":842,"y":846,"score":46,"level":0},{"x":858,"y":846,"score":110,"level":0},{"x":895,"y":846,"score":43,"level":0},{"x":915,"y":846,"score":125,"level":0},{"x":994,"y":846,"score":179,"level":0},{"x":1042,"y":846,"score":162,"level":0},{"x":1077,"y":846,"score":34,"level":0},{"x":1112,"y":846,"score":83,"level":0},{"x":1135,"y":846,"score":200,"level":0},{"x":1152,"y":846,"score":192,"level":0},{"x":1226,"y":846,"score":206,"level":0},{"x":1250,"y":846,"score":267,"level":0},{"x":1322,"y":846,"score":56,"level":0},{"x":1351,"y":846,"score":72,"level":0},{"x":1399,"y":846,"score":79,"level":0},{"x":1445,"y":846,"score":75,"level":0},{"x":388,"y":847,"score":42,"level":0},{"x":516,"y":847,"score":31,"level":0},{"x":612,"y":847,"score":67,"level":0},{"x":690,"y":847,"score":108,"level":0},{"x":762,"y":847,"score":141,"level":0},{"x":778,"y":847,"score":71,"level":0},{"x":793,"y":847,"score":43,"level":0},{"x":881,"y":847,"score":106,"level":0},{"x":934,"y":847,"score":46,"level":0},{"x":1019,"y":847,"score":27,"level":0},{"x":1028,"y":847,"score":41,"level":0},{"x":1169,"y":847,"score":130,"level":0},{"x":1189,"y":847,"score":135,"level":0},{"x":1220,"y":847,"score":153,"level":0},{"x":1296,"y":847,"score":48,"level":0},{"x":1316,"y":847,"score":38,"level":0},{"x":1340,"y":847,"score":100,"level":0},{"x":1412,"y":847,"score":51,"level":0},{"x":1415,"y":847,"score":31,"level":0},{"x":1453,"y":847,"score":34,"level":0},{"x":451,"y":848,"score":64,"level":0},{"x":524,"y":848,"score":126,"level":0},{"x":617,"y":848,"score":52,"level":0},{"x":637,"y":848,"score":56,"level":0},{"x":670,"y":848,"score":35,"level":0},{"x":675,"y":848,"score":30,"level":0},{"x":850,"y":848,"score":156,"level":0},{"x":921,"y":848,"score":47,"level":0},{"x":949,"y":848,"score":58,"level":0},{"x":968,"y":848,"score":30,"level":0},{"x":1062,"y":848,"score":109,"level":0},{"x":1074,"y":848,"score":58,"level":0},{"x":1141,"y":848,"score":117,"level":0},{"x":1234,"y":848,"score":33,"level":0},{"x":1275,"y":848,"score":169,"level":0},{"x":1287,"y":848,"score":86,"level":0},{"x":1357,"y":848,"score":140,"level":0},{"x":1366,"y":848,"score":69,"level":0},{"x":1378,"y":848,"score":160,"level":0},{"x":1394,"y":848,"score":33,"level":0},{"x":1463,"y":848,"score":65,"level":0},{"x":403,"y":849,"score":106,"level":0},{"x":534,"y":849,"score":78,"level":0},{"x":585,"y":849,"score":168,"level":0},{"x":604,"y":849,"score":76,"level":0},{"x":742,"y":849,"score":93,"level":0},{"x":755,"y":849,"score":228,"level":0},{"x":870,"y":849,"score":119,"level":0},{"x":876,"y":849,"score":162,"level":0},{"x":978,"y":849,"score":76,"level":0},{"x":1041,"y":849,"score":161,"level":0},{"x":1350,"y":849,"score":32,"level":0},{"x":1484,"y":849,"score":46,"level":0},{"x":394,"y":850,"score":35,"level":0},{"x":544,"y":850,"score":128,"level":0},{"x":549,"y":850,"score":109,"level":0},{"x":591,"y":850,"score":48,"level":0},{"x":615,"y":850,"score":54,"level":0},{"x":655,"y":850,"score":29,"level":0},{"x":683,"y":850,"score":138,"level":0},{"x":790,"y":850,"score":96,"level":0},{"x":961,"y":850,"score":68,"level":0},{"x":1145,"y":850,"score":47,"level":0},{"x":1164,"y":850,"score":27,"level":0},{"x":1194,"y":850,"score":55,"level":0},{"x":1258,"y":850,"score":45,"level":0},{"x":1307,"y":850,"score":48,"level":0},{"x":1471,"y":850,"score":100,"level":0},{"x":1489,"y":850,"score":55,"level":0},{"x":630,"y":851,"score":114,"level":0},{"x":649,"y":851,"score":85,"level":0},{"x":748,"y":851,"score":203,"level":0},{"x":783,"y":851,"score":62,"level":0},{"x":796,"y":851,"score":102,"level":0},{"x":890,"y":851,"score":27,"level":0},{"x":1012,"y":851,"score":136,"level":0},{"x":1134,"y":851,"score":102,"level":0},{"x":1152,"y":851,"score":132,"level":0},{"x":1217,"y":851,"score":53,"level":0},{"x":1328,"y":851,"score":177,"level":0},{"x":1346,"y":851,"score":75,"level":0},{"x":1373,"y":851,"score":54,"level":0},{"x":1446,"y":851,"score":36,"level":0},{"x":415,"y":852,"score":81,"level":0},{"x":421,"y":852,"score":115,"level":0},{"x":484,"y":852,"score":37,"level":0},{"x":555,"y":852,"score":64,"level":0},{"x":597,"y":852,"score":72,"level":0},{"x":612,"y":852,"score":168,"level":0},{"x":713,"y":852,"score":62,"level":0},{"x":761,"y":852,"score":82,"level":0},{"x":805,"y":852,"score":120,"level":0},{"x":833,"y":852,"score":65,"level":0},{"x":839,"y":852,"score":43,"level":0},{"x":930,"y":852,"score":41,"level":0},{"x":967,"y":852,"score":75,"level":0},{"x":994,"y":852,"score":248,"level":0},{"x":1062,"y":852,"score":71,"level":0},{"x":1117,"y":852,"score":211,"level":0},{"x":1200,"y":852,"score":87,"level":0},{"x":1245,"y":852,"score":152,"level":0},{"x":1278,"y":852,"score":227,"level":0},{"x":1356,"y":852,"score":154,"level":0},{"x":1412,"y":852,"score":142,"level":0},{"x":1467,"y":852,"score":37,"level":0},{"x":451,"y":853,"score":26,"level":0},{"x":475,"y":853,"score":87,"level":0},{"x":486,"y":853,"score":45,"level":0},{"x":606,"y":853,"score":148,"level":0},{"x":618,"y":853,"score":125,"level":0},{"x":636,"y":853,"score":151,"level":0},{"x":643,"y":853,"score":156,"level":0},{"x":692,"y":853,"score":27,"level":0},{"x":697,"y":853,"score":67,"level":0},{"x":772,"y":853,"score":100,"level":0},{"x":940,"y":853,"score":45,"level":0},{"x":1055,"y":853,"score":123,"level":0},{"x":1090,"y":853,"score":57,"level":0},{"x":1124,"y":853,"score":110,"level":0},{"x":1186,"y":853,"score":28,"level":0},{"x":1230,"y":853,"score":77,"level":0},{"x":1239,"y":853,"score":102,"level":0},{"x":1287,"y":853,"score":59,"level":0},{"x":1348,"y":853,"score":40,"level":0},{"x":1366,"y":853,"score":38,"level":0},{"x":1389,"y":853,"score":32,"level":0},{"x":1400,"y":853,"score":171,"level":0},{"x":1409,"y":853,"score":106,"level":0},{"x":1439,"y":853,"score":41,"level":0},{"x":1474,"y":853,"score":146,"level":0},{"x":1490,"y":853,"score":52,"level":0},{"x":437,"y":854,"score":88,"level":0},{"x":466,"y":854,"score":129,"level":0},{"x":488,"y":854,"score":62,"level":0},{"x":527,"y":854,"score":58,"level":0},{"x":537,"y":854,"score":35,"level":0},{"x":624,"y":854,"score":77,"level":0},{"x":858,"y":854,"score":40,"level":0},{"x":902,"y":854,"score":43,"level":0},{"x":921,"y":854,"score":187,"level":0},{"x":950,"y":854,"score":64,"level":0},{"x":967,"y":854,"score":50,"level":0},{"x":1006,"y":854,"score":29,"level":0},{"x":1034,"y":854,"score":32,"level":0},{"x":1040,"y":854,"score":145,"level":0},{"x":1297,"y":854,"score":61,"level":0},{"x":1329,"y":854,"score":205,"level":0},{"x":1480,"y":854,"score":102,"level":0},{"x":389,"y":855,"score":54,"level":0},{"x":425,"y":855,"score":48,"level":0},{"x":543,"y":855,"score":126,"level":0},{"x":585,"y":855,"score":71,"level":0},{"x":653,"y":855,"score":97,"level":0},{"x":669,"y":855,"score":33,"level":0},{"x":944,"y":855,"score":40,"level":0},{"x":973,"y":855,"score":78,"level":0},{"x":1016,"y":855,"score":39,"level":0},{"x":1078,"y":855,"score":48,"level":0},{"x":1139,"y":855,"score":161,"level":0},{"x":1247,"y":855,"score":73,"level":0},{"x":1250,"y":855,"score":82,"level":0},{"x":1282,"y":855,"score":200,"level":0},{"x":1304,"y":855,"score":44,"level":0},{"x":1342,"y":855,"score":211,"level":0},{"x":1348,"y":855,"score":26,"level":0},{"x":1373,"y":855,"score":116,"level":0},{"x":400,"y":856,"score":92,"level":0},{"x":472,"y":856,"score":61,"level":0},{"x":664,"y":856,"score":100,"level":0},{"x":768,"y":856,"score":30,"level":0},{"x":816,"y":856,"score":180,"level":0},{"x":872,"y":856,"score":81,"level":0},{"x":886,"y":856,"score":90,"level":0},{"x":894,"y":856,"score":115,"level":0},{"x":908,"y":856,"score":38,"level":0},{"x":933,"y":856,"score":61,"level":0},{"x":980,"y":856,"score":49,"level":0},{"x":1040,"y":856,"score":124,"level":0},{"x":1046,"y":856,"score":42,"level":0},{"x":1274,"y":856,"score":122,"level":0},{"x":1375,"y":856,"score":116,"level":0},{"x":1432,"y":856,"score":58,"level":0},{"x":1444,"y":856,"score":52,"level":0},{"x":420,"y":857,"score":37,"level":0},{"x":484,"y":857,"score":90,"level":0},{"x":499,"y":857,"score":61,"level":0},{"x":547,"y":857,"score":80,"level":0},{"x":677,"y":857,"score":44,"level":0},{"x":702,"y":857,"score":176,"level":0},{"x":723,"y":857,"score":112,"level":0},{"x":758,"y":857,"score":29,"level":0},{"x":781,"y":857,"score":95,"level":0},{"x":850,"y":857,"score":71,"level":0},{"x":940,"y":857,"score":84,"level":0},{"x":963,"y":857,"score":52,"level":0},{"x":988,"y":857,"score":38,"level":0},{"x":1012,"y":857,"score":101,"level":0},{"x":1061,"y":857,"score":164,"level":0},{"x":1189,"y":857,"score":78,"level":0},{"x":1195,"y":857,"score":140,"level":0},{"x":1379,"y":857,"score":39,"level":0},{"x":377,"y":858,"score":26,"level":0},{"x":403,"y":858,"score":56,"level":0},{"x":479,"y":858,"score":41,"level":0},{"x":533,"y":858,"score":47,"level":0},{"x":540,"y":858,"score":49,"level":0},{"x":578,"y":858,"score":71,"level":0},{"x":589,"y":858,"score":132,"level":0},{"x":617,"y":858,"score":196,"level":0},{"x":629,"y":858,"score":210,"level":0},{"x":642,"y":858,"score":67,"level":0},{"x":707,"y":858,"score":38,"level":0},{"x":867,"y":858,"score":61,"level":0},{"x":881,"y":858,"score":53,"level":0},{"x":938,"y":858,"score":68,"level":0},{"x":977,"y":858,"score":37,"level":0},{"x":996,"y":858,"score":76,"level":0},{"x":1051,"y":858,"score":222,"level":0},{"x":1206,"y":858,"score":32,"level":0},{"x":1230,"y":858,"score":198,"level":0},{"x":1235,"y":858,"score":33,"level":0},{"x":1257,"y":858,"score":250,"level":0},{"x":1369,"y":858,"score":169,"level":0},{"x":1382,"y":858,"score":91,"level":0},{"x":1460,"y":858,"score":134,"level":0},{"x":1469,"y":858,"score":28,"level":0},{"x":1475,"y":858,"score":161,"level":0},{"x":1490,"y":858,"score":56,"level":0},{"x":436,"y":859,"score":56,"level":0},{"x":521,"y":859,"score":51,"level":0},{"x":538,"y":859,"score":80,"level":0},{"x":599,"y":859,"score":142,"level":0},{"x":612,"y":859,"score":58,"level":0},{"x":623,"y":859,"score":68,"level":0},{"x":691,"y":859,"score":27,"level":0},{"x":922,"y":859,"score":62,"level":0},{"x":951,"y":859,"score":57,"level":0},{"x":966,"y":859,"score":34,"level":0},{"x":1211,"y":859,"score":119,"level":0},{"x":1218,"y":859,"score":127,"level":0},{"x":1262,"y":859,"score":44,"level":0},{"x":1327,"y":859,"score":80,"level":0},{"x":1335,"y":859,"score":90,"level":0},{"x":1455,"y":859,"score":41,"level":0},{"x":392,"y":860,"score":59,"level":0},{"x":492,"y":860,"score":31,"level":0},{"x":526,"y":860,"score":52,"level":0},{"x":585,"y":860,"score":81,"level":0},{"x":746,"y":860,"score":178,"level":0},{"x":947,"y":860,"score":64,"level":0},{"x":1005,"y":860,"score":46,"level":0},{"x":1098,"y":860,"score":40,"level":0},{"x":1242,"y":860,"score":94,"level":0},{"x":1279,"y":860,"score":71,"level":0},{"x":1389,"y":860,"score":84,"level":0},{"x":1481,"y":860,"score":82,"level":0},{"x":696,"y":861,"score":117,"level":0},{"x":718,"y":861,"score":87,"level":0},{"x":788,"y":861,"score":129,"level":0},{"x":811,"y":861,"score":88,"level":0},{"x":1132,"y":861,"score":191,"level":0},{"x":1239,"y":861,"score":135,"level":0},{"x":1273,"y":861,"score":225,"level":0},{"x":1293,"y":861,"score":34,"level":0},{"x":1300,"y":861,"score":143,"level":0},{"x":1307,"y":861,"score":40,"level":0},{"x":1334,"y":861,"score":54,"level":0},{"x":1366,"y":861,"score":78,"level":0},{"x":1407,"y":861,"score":26,"level":0},{"x":1432,"y":861,"score":75,"level":0},{"x":1438,"y":861,"score":94,"level":0},{"x":439,"y":862,"score":31,"level":0},{"x":446,"y":862,"score":47,"level":0},{"x":460,"y":862,"score":38,"level":0},{"x":546,"y":862,"score":81,"level":0},{"x":703,"y":862,"score":115,"level":0},{"x":709,"y":862,"score":60,"level":0},{"x":726,"y":862,"score":54,"level":0},{"x":778,"y":862,"score":27,"level":0},{"x":906,"y":862,"score":51,"level":0},{"x":960,"y":862,"score":35,"level":0},{"x":983,"y":862,"score":111,"level":0},{"x":1035,"y":862,"score":89,"level":0},{"x":1078,"y":862,"score":184,"level":0},{"x":1126,"y":862,"score":101,"level":0},{"x":1144,"y":862,"score":83,"level":0},{"x":1236,"y":862,"score":162,"level":0},{"x":1285,"y":862,"score":134,"level":0},{"x":1342,"y":862,"score":113,"level":0},{"x":1377,"y":862,"score":175,"level":0},{"x":377,"y":863,"score":106,"level":0},{"x":385,"y":863,"score":62,"level":0},{"x":577,"y":863,"score":80,"level":0},{"x":583,"y":863,"score":45,"level":0},{"x":762,"y":863,"score":68,"level":0},{"x":819,"y":863,"score":44,"level":0},{"x":849,"y":863,"score":29,"level":0},{"x":882,"y":863,"score":48,"level":0},{"x":899,"y":863,"score":91,"level":0},{"x":938,"y":863,"score":105,"level":0},{"x":948,"y":863,"score":28,"level":0},{"x":1017,"y":863,"score":89,"level":0},{"x":1149,"y":863,"score":91,"level":0},{"x":1200,"y":863,"score":66,"level":0},{"x":1369,"y":863,"score":93,"level":0},{"x":1403,"y":863,"score":33,"level":0},{"x":1413,"y":863,"score":37,"level":0},{"x":523,"y":864,"score":37,"level":0},{"x":555,"y":864,"score":58,"level":0},{"x":588,"y":864,"score":124,"level":0},{"x":630,"y":864,"score":32,"level":0},{"x":783,"y":864,"score":74,"level":0},{"x":852,"y":864,"score":48,"level":0},{"x":1195,"y":864,"score":50,"level":0},{"x":1237,"y":864,"score":134,"level":0},{"x":1262,"y":864,"score":29,"level":0},{"x":1328,"y":864,"score":207,"level":0},{"x":1335,"y":864,"score":65,"level":0},{"x":1394,"y":864,"score":36,"level":0},{"x":1464,"y":864,"score":55,"level":0},{"x":416,"y":865,"score":174,"level":0},{"x":537,"y":865,"score":39,"level":0},{"x":600,"y":865,"score":54,"level":0},{"x":654,"y":865,"score":158,"level":0},{"x":660,"y":865,"score":112,"level":0},{"x":835,"y":865,"score":190,"level":0},{"x":917,"y":865,"score":54,"level":0},{"x":945,"y":865,"score":93,"level":0},{"x":955,"y":865,"score":59,"level":0},{"x":977,"y":865,"score":59,"level":0},{"x":993,"y":865,"score":95,"level":0},{"x":1008,"y":865,"score":66,"level":0},{"x":1114,"y":865,"score":148,"level":0},{"x":1141,"y":865,"score":158,"level":0},{"x":1243,"y":865,"score":66,"level":0},{"x":1250,"y":865,"score":100,"level":0},{"x":1315,"y":865,"score":26,"level":0},{"x":1347,"y":865,"score":28,"level":0},{"x":1354,"y":865,"score":73,"level":0},{"x":1454,"y":865,"score":66,"level":0},{"x":1456,"y":865,"score":38,"level":0},{"x":1473,"y":865,"score":88,"level":0},{"x":1481,"y":865,"score":32,"level":0},{"x":512,"y":866,"score":33,"level":0},{"x":911,"y":866,"score":38,"level":0},{"x":1015,"y":866,"score":60,"level":0},{"x":1063,"y":866,"score":26,"level":0},{"x":1107,"y":866,"score":137,"level":0},{"x":1121,"y":866,"score":78,"level":0},{"x":1184,"y":866,"score":58,"level":0},{"x":1214,"y":866,"score":143,"level":0},{"x":1280,"y":866,"score":50,"level":0},{"x":1300,"y":866,"score":132,"level":0},{"x":1352,"y":866,"score":72,"level":0},{"x":1406,"y":866,"score":46,"level":0},{"x":1470,"y":866,"score":82,"level":0},{"x":1487,"y":866,"score":67,"level":0},{"x":463,"y":867,"score":107,"level":0},{"x":470,"y":867,"score":63,"level":0},{"x":526,"y":867,"score":63,"level":0},{"x":558,"y":867,"score":63,"level":0},{"x":594,"y":867,"score":55,"level":0},{"x":647,"y":867,"score":76,"level":0},{"x":689,"y":867,"score":33,"level":0},{"x":865,"y":867,"score":54,"level":0},{"x":889,"y":867,"score":36,"level":0},{"x":986,"y":867,"score":114,"level":0},{"x":1131,"y":867,"score":58,"level":0},{"x":1212,"y":867,"score":183,"level":0},{"x":1274,"y":867,"score":49,"level":0},{"x":1286,"y":867,"score":146,"level":0},{"x":1313,"y":867,"score":32,"level":0},{"x":1319,"y":867,"score":58,"level":0},{"x":1371,"y":867,"score":48,"level":0},{"x":1431,"y":867,"score":54,"level":0},{"x":445,"y":868,"score":53,"level":0},{"x":455,"y":868,"score":61,"level":0},{"x":481,"y":868,"score":31,"level":0},{"x":536,"y":868,"score":58,"level":0},{"x":547,"y":868,"score":273,"level":0},{"x":583,"y":868,"score":176,"level":0},{"x":598,"y":868,"score":48,"level":0},{"x":696,"y":868,"score":42,"level":0},{"x":858,"y":868,"score":68,"level":0},{"x":873,"y":868,"score":48,"level":0},{"x":906,"y":868,"score":106,"level":0},{"x":1231,"y":868,"score":76,"level":0},{"x":1377,"y":868,"score":102,"level":0},{"x":1448,"y":868,"score":26,"level":0},{"x":377,"y":869,"score":176,"level":0},{"x":384,"y":869,"score":35,"level":0},{"x":430,"y":869,"score":26,"level":0},{"x":453,"y":869,"score":82,"level":0},{"x":616,"y":869,"score":128,"level":0},{"x":630,"y":869,"score":80,"level":0},{"x":804,"y":869,"score":30,"level":0},{"x":853,"y":869,"score":56,"level":0},{"x":1033,"y":869,"score":96,"level":0},{"x":1153,"y":869,"score":38,"level":0},{"x":1175,"y":869,"score":27,"level":0},{"x":1221,"y":869,"score":130,"level":0},{"x":1339,"y":869,"score":34,"level":0},{"x":1433,"y":869,"score":56,"level":0},{"x":1490,"y":869,"score":57,"level":0},{"x":416,"y":870,"score":106,"level":0},{"x":442,"y":870,"score":40,"level":0},{"x":459,"y":870,"score":72,"level":0},{"x":507,"y":870,"score":70,"level":0},{"x":555,"y":870,"score":234,"level":0},{"x":561,"y":870,"score":73,"level":0},{"x":589,"y":870,"score":58,"level":0},{"x":610,"y":870,"score":100,"level":0},{"x":713,"y":870,"score":32,"level":0},{"x":788,"y":870,"score":150,"level":0},{"x":877,"y":870,"score":37,"level":0},{"x":992,"y":870,"score":86,"level":0},{"x":997,"y":870,"score":127,"level":0},{"x":1008,"y":870,"score":48,"level":0},{"x":1013,"y":870,"score":82,"level":0},{"x":1149,"y":870,"score":27,"level":0},{"x":1178,"y":870,"score":30,"level":0},{"x":1260,"y":870,"score":94,"level":0},{"x":1309,"y":870,"score":96,"level":0},{"x":1343,"y":870,"score":72,"level":0},{"x":1353,"y":870,"score":117,"level":0},{"x":1408,"y":870,"score":42,"level":0},{"x":1439,"y":870,"score":60,"level":0},{"x":493,"y":871,"score":49,"level":0},{"x":509,"y":871,"score":96,"level":0},{"x":542,"y":871,"score":32,"level":0},{"x":647,"y":871,"score":34,"level":0},{"x":669,"y":871,"score":134,"level":0},{"x":675,"y":871,"score":90,"level":0},{"x":882,"y":871,"score":46,"level":0},{"x":945,"y":871,"score":105,"level":0},{"x":954,"y":871,"score":157,"level":0},{"x":961,"y":871,"score":46,"level":0},{"x":1114,"y":871,"score":196,"level":0},{"x":1202,"y":871,"score":77,"level":0},{"x":1253,"y":871,"score":35,"level":0},{"x":1276,"y":871,"score":94,"level":0},{"x":1359,"y":871,"score":144,"level":0},{"x":1370,"y":871,"score":47,"level":0},{"x":1461,"y":871,"score":67,"level":0},{"x":438,"y":872,"score":60,"level":0},{"x":550,"y":872,"score":90,"level":0},{"x":600,"y":872,"score":37,"level":0},{"x":771,"y":872,"score":27,"level":0},{"x":794,"y":872,"score":56,"level":0},{"x":866,"y":872,"score":53,"level":0},{"x":918,"y":872,"score":88,"level":0},{"x":925,"y":872,"score":80,"level":0},{"x":987,"y":872,"score":37,"level":0},{"x":1000,"y":872,"score":61,"level":0},{"x":1108,"y":872,"score":254,"level":0},{"x":1208,"y":872,"score":201,"level":0},{"x":1274,"y":872,"score":125,"level":0},{"x":1394,"y":872,"score":73,"level":0},{"x":1423,"y":872,"score":51,"level":0},{"x":455,"y":873,"score":58,"level":0},{"x":469,"y":873,"score":31,"level":0},{"x":530,"y":873,"score":44,"level":0},{"x":690,"y":873,"score":56,"level":0},{"x":707,"y":873,"score":28,"level":0},{"x":718,"y":873,"score":52,"level":0},{"x":827,"y":873,"score":84,"level":0},{"x":872,"y":873,"score":90,"level":0},{"x":1085,"y":873,"score":43,"level":0},{"x":1177,"y":873,"score":41,"level":0},{"x":1280,"y":873,"score":125,"level":0},{"x":1293,"y":873,"score":69,"level":0},{"x":1398,"y":873,"score":45,"level":0},{"x":1436,"y":873,"score":42,"level":0},{"x":1450,"y":873,"score":88,"level":0},{"x":582,"y":874,"score":65,"level":0},{"x":1043,"y":874,"score":28,"level":0},{"x":1079,"y":874,"score":93,"level":0},{"x":1123,"y":874,"score":143,"level":0},{"x":1151,"y":874,"score":73,"level":0},{"x":1180,"y":874,"score":54,"level":0},{"x":1252,"y":874,"score":64,"level":0},{"x":1268,"y":874,"score":208,"level":0},{"x":1285,"y":874,"score":38,"level":0},{"x":1323,"y":874,"score":72,"level":0},{"x":1457,"y":874,"score":71,"level":0},{"x":1490,"y":874,"score":30,"level":0},{"x":394,"y":875,"score":30,"level":0},{"x":442,"y":875,"score":27,"level":0},{"x":515,"y":875,"score":50,"level":0},{"x":555,"y":875,"score":54,"level":0},{"x":605,"y":875,"score":85,"level":0},{"x":714,"y":875,"score":40,"level":0},{"x":778,"y":875,"score":46,"level":0},{"x":856,"y":875,"score":72,"level":0},{"x":1007,"y":875,"score":85,"level":0},{"x":1015,"y":875,"score":96,"level":0},{"x":1148,"y":875,"score":26,"level":0},{"x":1226,"y":875,"score":60,"level":0},{"x":1259,"y":875,"score":204,"level":0},{"x":1309,"y":875,"score":130,"level":0},{"x":1337,"y":875,"score":99,"level":0},{"x":1363,"y":875,"score":51,"level":0},{"x":1436,"y":875,"score":104,"level":0},{"x":501,"y":876,"score":70,"level":0},{"x":507,"y":876,"score":75,"level":0},{"x":658,"y":876,"score":93,"level":0},{"x":860,"y":876,"score":60,"level":0},{"x":876,"y":876,"score":173,"level":0},{"x":922,"y":876,"score":68,"level":0},{"x":934,"y":876,"score":125,"level":0},{"x":945,"y":876,"score":48,"level":0},{"x":1021,"y":876,"score":29,"level":0},{"x":1102,"y":876,"score":34,"level":0},{"x":1365,"y":876,"score":42,"level":0},{"x":1414,"y":876,"score":29,"level":0},{"x":1447,"y":876,"score":126,"level":0},{"x":1463,"y":876,"score":83,"level":0},{"x":378,"y":877,"score":97,"level":0},{"x":403,"y":877,"score":138,"level":0},{"x":427,"y":877,"score":59,"level":0},{"x":437,"y":877,"score":118,"level":0},{"x":464,"y":877,"score":49,"level":0},{"x":483,"y":877,"score":72,"level":0},{"x":530,"y":877,"score":38,"level":0},{"x":541,"y":877,"score":49,"level":0},{"x":560,"y":877,"score":146,"level":0},{"x":565,"y":877,"score":175,"level":0},{"x":618,"y":877,"score":42,"level":0},{"x":725,"y":877,"score":50,"level":0},{"x":805,"y":877,"score":51,"level":0},{"x":900,"y":877,"score":164,"level":0},{"x":929,"y":877,"score":136,"level":0},{"x":995,"y":877,"score":67,"level":0},{"x":1073,"y":877,"score":97,"level":0},{"x":1114,"y":877,"score":164,"level":0},{"x":1136,"y":877,"score":84,"level":0},{"x":1159,"y":877,"score":41,"level":0},{"x":1164,"y":877,"score":51,"level":0},{"x":1222,"y":877,"score":80,"level":0},{"x":1387,"y":877,"score":55,"level":0},{"x":1423,"y":877,"score":61,"level":0},{"x":1432,"y":877,"score":34,"level":0},{"x":409,"y":878,"score":95,"level":0},{"x":412,"y":878,"score":89,"level":0},{"x":447,"y":878,"score":30,"level":0},{"x":571,"y":878,"score":68,"level":0},{"x":597,"y":878,"score":34,"level":0},{"x":628,"y":878,"score":154,"level":0},{"x":635,"y":878,"score":89,"level":0},{"x":821,"y":878,"score":242,"level":0},{"x":868,"y":878,"score":45,"level":0},{"x":961,"y":878,"score":101,"level":0},{"x":1170,"y":878,"score":39,"level":0},{"x":1176,"y":878,"score":60,"level":0},{"x":1204,"y":878,"score":40,"level":0},{"x":1271,"y":878,"score":110,"level":0},{"x":1282,"y":878,"score":148,"level":0},{"x":1293,"y":878,"score":42,"level":0},{"x":511,"y":879,"score":84,"level":0},{"x":622,"y":879,"score":33,"level":0},{"x":640,"y":879,"score":172,"level":0},{"x":646,"y":879,"score":86,"level":0},{"x":653,"y":879,"score":66,"level":0},{"x":688,"y":879,"score":30,"level":0},{"x":742,"y":879,"score":75,"level":0},{"x":786,"y":879,"score":28,"level":0},{"x":851,"y":879,"score":63,"level":0},{"x":980,"y":879,"score":64,"level":0},{"x":1118,"y":879,"score":29,"level":0},{"x":1200,"y":879,"score":27,"level":0},{"x":1219,"y":879,"score":53,"level":0},{"x":1247,"y":879,"score":88,"level":0},{"x":1253,"y":879,"score":66,"level":0},{"x":1296,"y":879,"score":101,"level":0},{"x":1367,"y":879,"score":81,"level":0},{"x":1467,"y":879,"score":34,"level":0},{"x":395,"y":880,"score":138,"level":0},{"x":401,"y":880,"score":78,"level":0},{"x":656,"y":880,"score":55,"level":0},{"x":666,"y":880,"score":63,"level":0},{"x":677,"y":880,"score":55,"level":0},{"x":932,"y":880,"score":49,"level":0},{"x":984,"y":880,"score":38,"level":0},{"x":989,"y":880,"score":87,"level":0},{"x":1002,"y":880,"score":84,"level":0},{"x":1007,"y":880,"score":83,"level":0},{"x":1015,"y":880,"score":76,"level":0},{"x":1150,"y":880,"score":33,"level":0},{"x":1155,"y":880,"score":171,"level":0},{"x":1187,"y":880,"score":181,"level":0},{"x":1304,"y":880,"score":102,"level":0},{"x":1310,"y":880,"score":113,"level":0},{"x":1355,"y":880,"score":85,"level":0},{"x":1362,"y":880,"score":29,"level":0},{"x":1428,"y":880,"score":68,"level":0},{"x":496,"y":881,"score":39,"level":0},{"x":715,"y":881,"score":38,"level":0},{"x":763,"y":881,"score":32,"level":0},{"x":789,"y":881,"score":47,"level":0},{"x":799,"y":881,"score":104,"level":0},{"x":878,"y":881,"score":98,"level":0},{"x":920,"y":881,"score":54,"level":0},{"x":966,"y":881,"score":52,"level":0},{"x":1034,"y":881,"score":29,"level":0},{"x":1126,"y":881,"score":60,"level":0},{"x":1140,"y":881,"score":49,"level":0},{"x":1167,"y":881,"score":32,"level":0},{"x":1209,"y":881,"score":78,"level":0},{"x":1266,"y":881,"score":46,"level":0},{"x":1437,"y":881,"score":44,"level":0},{"x":1454,"y":881,"score":119,"level":0},{"x":382,"y":882,"score":130,"level":0},{"x":405,"y":882,"score":59,"level":0},{"x":415,"y":882,"score":101,"level":0},{"x":441,"y":882,"score":152,"level":0},{"x":453,"y":882,"score":59,"level":0},{"x":474,"y":882,"score":104,"level":0},{"x":521,"y":882,"score":28,"level":0},{"x":526,"y":882,"score":45,"level":0},{"x":578,"y":882,"score":68,"level":0},{"x":691,"y":882,"score":45,"level":0},{"x":726,"y":882,"score":42,"level":0},{"x":838,"y":882,"score":38,"level":0},{"x":903,"y":882,"score":130,"level":0},{"x":1051,"y":882,"score":26,"level":0},{"x":1081,"y":882,"score":55,"level":0},{"x":1087,"y":882,"score":128,"level":0},{"x":1108,"y":882,"score":57,"level":0},{"x":1192,"y":882,"score":124,"level":0},{"x":1224,"y":882,"score":190,"level":0},{"x":1260,"y":882,"score":33,"level":0},{"x":1444,"y":882,"score":255,"level":0},{"x":1474,"y":882,"score":113,"level":0},{"x":409,"y":883,"score":88,"level":0},{"x":435,"y":883,"score":146,"level":0},{"x":461,"y":883,"score":36,"level":0},{"x":485,"y":883,"score":29,"level":0},{"x":538,"y":883,"score":65,"level":0},{"x":560,"y":883,"score":42,"level":0},{"x":674,"y":883,"score":35,"level":0},{"x":679,"y":883,"score":58,"level":0},{"x":893,"y":883,"score":110,"level":0},{"x":931,"y":883,"score":33,"level":0},{"x":937,"y":883,"score":48,"level":0},{"x":1092,"y":883,"score":115,"level":0},{"x":1132,"y":883,"score":79,"level":0},{"x":1207,"y":883,"score":54,"level":0},{"x":1234,"y":883,"score":106,"level":0},{"x":1246,"y":883,"score":74,"level":0},{"x":1354,"y":883,"score":57,"level":0},{"x":1485,"y":883,"score":60,"level":0},{"x":488,"y":884,"score":47,"level":0},{"x":502,"y":884,"score":46,"level":0},{"x":508,"y":884,"score":47,"level":0},{"x":572,"y":884,"score":31,"level":0},{"x":604,"y":884,"score":30,"level":0},{"x":625,"y":884,"score":42,"level":0},{"x":661,"y":884,"score":97,"level":0},{"x":987,"y":884,"score":33,"level":0},{"x":1021,"y":884,"score":29,"level":0},{"x":1068,"y":884,"score":30,"level":0},{"x":1146,"y":884,"score":118,"level":0},{"x":1213,"y":884,"score":57,"level":0},{"x":1281,"y":884,"score":88,"level":0},{"x":1334,"y":884,"score":30,"level":0},{"x":1366,"y":884,"score":57,"level":0},{"x":554,"y":885,"score":120,"level":0},{"x":566,"y":885,"score":67,"level":0},{"x":621,"y":885,"score":31,"level":0},{"x":792,"y":885,"score":73,"level":0},{"x":887,"y":885,"score":134,"level":0},{"x":893,"y":885,"score":86,"level":0},{"x":996,"y":885,"score":225,"level":0},{"x":1156,"y":885,"score":109,"level":0},{"x":1206,"y":885,"score":60,"level":0},{"x":1360,"y":885,"score":30,"level":0},{"x":1417,"y":885,"score":27,"level":0},{"x":1449,"y":885,"score":103,"level":0},{"x":483,"y":886,"score":26,"level":0},{"x":513,"y":886,"score":51,"level":0},{"x":598,"y":886,"score":44,"level":0},{"x":669,"y":886,"score":96,"level":0},{"x":983,"y":886,"score":56,"level":0},{"x":1129,"y":886,"score":34,"level":0},{"x":1140,"y":886,"score":67,"level":0},{"x":1187,"y":886,"score":284,"level":0},{"x":1253,"y":886,"score":56,"level":0},{"x":1312,"y":886,"score":145,"level":0},{"x":1447,"y":886,"score":67,"level":0},{"x":1457,"y":886,"score":28,"level":0},{"x":1465,"y":886,"score":36,"level":0},{"x":1472,"y":886,"score":78,"level":0},{"x":391,"y":887,"score":77,"level":0},{"x":424,"y":887,"score":70,"level":0},{"x":496,"y":887,"score":72,"level":0},{"x":631,"y":887,"score":31,"level":0},{"x":660,"y":887,"score":31,"level":0},{"x":710,"y":887,"score":31,"level":0},{"x":798,"y":887,"score":68,"level":0},{"x":910,"y":887,"score":28,"level":0},{"x":965,"y":887,"score":41,"level":0},{"x":1194,"y":887,"score":110,"level":0},{"x":1290,"y":887,"score":28,"level":0},{"x":1427,"y":887,"score":54,"level":0},{"x":1445,"y":887,"score":39,"level":0},{"x":470,"y":888,"score":26,"level":0},{"x":521,"y":888,"score":59,"level":0},{"x":582,"y":888,"score":46,"level":0},{"x":634,"y":888,"score":27,"level":0},{"x":679,"y":888,"score":89,"level":0},{"x":735,"y":888,"score":31,"level":0},{"x":893,"y":888,"score":105,"level":0},{"x":931,"y":888,"score":27,"level":0},{"x":971,"y":888,"score":32,"level":0},{"x":1031,"y":888,"score":91,"level":0},{"x":1136,"y":888,"score":91,"level":0},{"x":1250,"y":888,"score":41,"level":0},{"x":1300,"y":888,"score":140,"level":0},{"x":1345,"y":888,"score":55,"level":0},{"x":1385,"y":888,"score":30,"level":0},{"x":1432,"y":888,"score":27,"level":0},{"x":1462,"y":888,"score":26,"level":0},{"x":418,"y":889,"score":81,"level":0},{"x":433,"y":889,"score":153,"level":0},{"x":453,"y":889,"score":92,"level":0},{"x":527,"y":889,"score":38,"level":0},{"x":578,"y":889,"score":45,"level":0},{"x":625,"y":889,"score":56,"level":0},{"x":654,"y":889,"score":94,"level":0},{"x":663,"y":889,"score":84,"level":0},{"x":818,"y":889,"score":27,"level":0},{"x":913,"y":889,"score":27,"level":0},{"x":989,"y":889,"score":124,"level":0},{"x":993,"y":889,"score":75,"level":0},{"x":1024,"y":889,"score":112,"level":0},{"x":1062,"y":889,"score":89,"level":0},{"x":1109,"y":889,"score":46,"level":0},{"x":1208,"y":889,"score":32,"level":0},{"x":1246,"y":889,"score":132,"level":0},{"x":1263,"y":889,"score":65,"level":0},{"x":1278,"y":889,"score":99,"level":0},{"x":1285,"y":889,"score":79,"level":0},{"x":416,"y":890,"score":83,"level":0},{"x":447,"y":890,"score":30,"level":0},{"x":507,"y":890,"score":47,"level":0},{"x":523,"y":890,"score":99,"level":0},{"x":561,"y":890,"score":42,"level":0},{"x":648,"y":890,"score":88,"level":0},{"x":750,"y":890,"score":36,"level":0},{"x":888,"y":890,"score":147,"level":0},{"x":894,"y":890,"score":102,"level":0},{"x":971,"y":890,"score":36,"level":0},{"x":1086,"y":890,"score":53,"level":0},{"x":1227,"y":890,"score":54,"level":0},{"x":1330,"y":890,"score":32,"level":0},{"x":1343,"y":890,"score":26,"level":0},{"x":427,"y":891,"score":50,"level":0},{"x":483,"y":891,"score":46,"level":0},{"x":513,"y":891,"score":29,"level":0},{"x":517,"y":891,"score":47,"level":0},{"x":567,"y":891,"score":76,"level":0},{"x":574,"y":891,"score":31,"level":0},{"x":598,"y":891,"score":42,"level":0},{"x":621,"y":891,"score":57,"level":0},{"x":641,"y":891,"score":116,"level":0},{"x":674,"y":891,"score":30,"level":0},{"x":724,"y":891,"score":29,"level":0},{"x":802,"y":891,"score":31,"level":0},{"x":993,"y":891,"score":33,"level":0},{"x":1090,"y":891,"score":64,"level":0},{"x":1255,"y":891,"score":47,"level":0},{"x":1356,"y":891,"score":66,"level":0},{"x":1373,"y":891,"score":38,"level":0},{"x":1457,"y":891,"score":57,"level":0},{"x":1488,"y":891,"score":32,"level":0},{"x":659,"y":892,"score":27,"level":0},{"x":668,"y":892,"score":246,"level":0},{"x":726,"y":892,"score":56,"level":0},{"x":732,"y":892,"score":60,"level":0},{"x":764,"y":892,"score":42,"level":0},{"x":874,"y":892,"score":42,"level":0},{"x":916,"y":892,"score":88,"level":0},{"x":935,"y":892,"score":64,"level":0},{"x":953,"y":892,"score":51,"level":0},{"x":1011,"y":892,"score":153,"level":0},{"x":1056,"y":892,"score":140,"level":0},{"x":1094,"y":892,"score":36,"level":0},{"x":1102,"y":892,"score":53,"level":0},{"x":1111,"y":892,"score":90,"level":0},{"x":1147,"y":892,"score":76,"level":0},{"x":1218,"y":892,"score":52,"level":0},{"x":1302,"y":892,"score":258,"level":0},{"x":1397,"y":892,"score":28,"level":0},{"x":1479,"y":892,"score":41,"level":0},{"x":451,"y":893,"score":72,"level":0},{"x":742,"y":893,"score":46,"level":0},{"x":947,"y":893,"score":88,"level":0},{"x":973,"y":893,"score":35,"level":0},{"x":1129,"y":893,"score":35,"level":0},{"x":1295,"y":893,"score":45,"level":0},{"x":1314,"y":893,"score":58,"level":0},{"x":1330,"y":893,"score":54,"level":0},{"x":1364,"y":893,"score":47,"level":0},{"x":1445,"y":893,"score":42,"level":0},{"x":1463,"y":893,"score":26,"level":0},{"x":425,"y":894,"score":41,"level":0},{"x":462,"y":894,"score":71,"level":0},{"x":572,"y":894,"score":106,"level":0},{"x":578,"y":894,"score":53,"level":0},{"x":683,"y":894,"score":52,"level":0},{"x":690,"y":894,"score":34,"level":0},{"x":811,"y":894,"score":44,"level":0},{"x":882,"y":894,"score":152,"level":0},{"x":944,"y":894,"score":32,"level":0},{"x":965,"y":894,"score":85,"level":0},{"x":989,"y":894,"score":96,"level":0},{"x":1023,"y":894,"score":63,"level":0},{"x":1043,"y":894,"score":116,"level":0},{"x":1060,"y":894,"score":55,"level":0},{"x":1075,"y":894,"score":62,"level":0},{"x":1078,"y":894,"score":50,"level":0},{"x":1140,"y":894,"score":85,"level":0},{"x":1147,"y":894,"score":64,"level":0},{"x":1278,"y":894,"score":97,"level":0},{"x":1283,"y":894,"score":97,"level":0},{"x":1336,"y":894,"score":63,"level":0},{"x":1341,"y":894,"score":53,"level":0},{"x":1434,"y":894,"score":49,"level":0},{"x":1476,"y":894,"score":40,"level":0},{"x":412,"y":895,"score":40,"level":0},{"x":532,"y":895,"score":28,"level":0},{"x":548,"y":895,"score":31,"level":0},{"x":654,"y":895,"score":83,"level":0},{"x":660,"y":895,"score":38,"level":0},{"x":899,"y":895,"score":53,"level":0},{"x":923,"y":895,"score":49,"level":0},{"x":932,"y":895,"score":86,"level":0},{"x":1120,"y":895,"score":67,"level":0},{"x":1161,"y":895,"score":114,"level":0},{"x":1187,"y":895,"score":114,"level":0},{"x":1199,"y":895,"score":61,"level":0},{"x":1211,"y":895,"score":104,"level":0},{"x":1216,"y":895,"score":41,"level":0},{"x":1221,"y":895,"score":43,"level":0},{"x":1236,"y":895,"score":141,"level":0},{"x":1346,"y":895,"score":50,"level":0},{"x":1382,"y":895,"score":32,"level":0},{"x":1412,"y":895,"score":60,"level":0},{"x":438,"y":896,"score":71,"level":0},{"x":445,"y":896,"score":264,"level":0},{"x":560,"y":896,"score":238,"level":0},{"x":600,"y":896,"score":44,"level":0},{"x":734,"y":896,"score":58,"level":0},{"x":774,"y":896,"score":74,"level":0},{"x":1048,"y":896,"score":59,"level":0},{"x":1090,"y":896,"score":26,"level":0},{"x":1193,"y":896,"score":73,"level":0},{"x":1249,"y":896,"score":135,"level":0},{"x":1349,"y":896,"score":29,"level":0},{"x":1426,"y":896,"score":116,"level":0},{"x":1467,"y":896,"score":102,"level":0},{"x":465,"y":897,"score":41,"level":0},{"x":636,"y":897,"score":68,"level":0},{"x":794,"y":897,"score":36,"level":0},{"x":993,"y":897,"score":66,"level":0},{"x":1003,"y":897,"score":54,"level":0},{"x":1138,"y":897,"score":68,"level":0},{"x":1214,"y":897,"score":75,"level":0},{"x":1323,"y":897,"score":36,"level":0},{"x":459,"y":898,"score":88,"level":0},{"x":723,"y":898,"score":30,"level":0},{"x":831,"y":898,"score":95,"level":0},{"x":918,"y":898,"score":29,"level":0},{"x":953,"y":898,"score":31,"level":0},{"x":1034,"y":898,"score":29,"level":0},{"x":1067,"y":898,"score":36,"level":0},{"x":1086,"y":898,"score":64,"level":0},{"x":1096,"y":898,"score":90,"level":0},{"x":1127,"y":898,"score":151,"level":0},{"x":1150,"y":898,"score":76,"level":0},{"x":1290,"y":898,"score":156,"level":0},{"x":1301,"y":898,"score":65,"level":0},{"x":1363,"y":898,"score":31,"level":0},{"x":1430,"y":898,"score":77,"level":0},{"x":426,"y":899,"score":45,"level":0},{"x":553,"y":899,"score":75,"level":0},{"x":591,"y":899,"score":154,"level":0},{"x":668,"y":899,"score":40,"level":0},{"x":858,"y":899,"score":81,"level":0},{"x":979,"y":899,"score":194,"level":0},{"x":1008,"y":899,"score":54,"level":0},{"x":1031,"y":899,"score":62,"level":0},{"x":1099,"y":899,"score":69,"level":0},{"x":1121,"y":899,"score":95,"level":0},{"x":1148,"y":899,"score":79,"level":0},{"x":1264,"y":899,"score":42,"level":0},{"x":1276,"y":899,"score":51,"level":0},{"x":1377,"y":899,"score":29,"level":0},{"x":1416,"y":899,"score":30,"level":0},{"x":417,"y":900,"score":91,"level":0},{"x":641,"y":900,"score":113,"level":0},{"x":732,"y":900,"score":34,"level":0},{"x":820,"y":900,"score":140,"level":0},{"x":837,"y":900,"score":30,"level":0},{"x":993,"y":900,"score":72,"level":0},{"x":1041,"y":900,"score":152,"level":0},{"x":1136,"y":900,"score":35,"level":0},{"x":1144,"y":900,"score":30,"level":0},{"x":1208,"y":900,"score":272,"level":0},{"x":1224,"y":900,"score":175,"level":0},{"x":1229,"y":900,"score":112,"level":0},{"x":1244,"y":900,"score":179,"level":0},{"x":1250,"y":900,"score":37,"level":0},{"x":1336,"y":900,"score":29,"level":0},{"x":1407,"y":900,"score":89,"level":0},{"x":432,"y":901,"score":69,"level":0},{"x":452,"y":901,"score":74,"level":0},{"x":481,"y":901,"score":52,"level":0},{"x":631,"y":901,"score":30,"level":0},{"x":648,"y":901,"score":35,"level":0},{"x":661,"y":901,"score":55,"level":0},{"x":673,"y":901,"score":52,"level":0},{"x":713,"y":901,"score":78,"level":0},{"x":826,"y":901,"score":70,"level":0},{"x":846,"y":901,"score":108,"level":0},{"x":967,"y":901,"score":61,"level":0},{"x":1053,"y":901,"score":126,"level":0},{"x":1092,"y":901,"score":47,"level":0},{"x":1173,"y":901,"score":207,"level":0},{"x":1256,"y":901,"score":45,"level":0},{"x":1258,"y":901,"score":28,"level":0},{"x":1304,"y":901,"score":130,"level":0},{"x":1331,"y":901,"score":55,"level":0},{"x":1468,"y":901,"score":30,"level":0},{"x":1490,"y":901,"score":87,"level":0},{"x":655,"y":902,"score":151,"level":0},{"x":782,"y":902,"score":66,"level":0},{"x":816,"y":902,"score":103,"level":0},{"x":985,"y":902,"score":32,"level":0},{"x":1115,"y":902,"score":92,"level":0},{"x":1133,"y":902,"score":44,"level":0},{"x":1313,"y":902,"score":70,"level":0},{"x":1425,"y":902,"score":63,"level":0},{"x":1431,"y":902,"score":26,"level":0},{"x":1457,"y":902,"score":70,"level":0},{"x":447,"y":903,"score":76,"level":0},{"x":546,"y":903,"score":38,"level":0},{"x":679,"y":903,"score":175,"level":0},{"x":736,"y":903,"score":98,"level":0},{"x":762,"y":903,"score":66,"level":0},{"x":842,"y":903,"score":62,"level":0},{"x":866,"y":903,"score":147,"level":0},{"x":892,"y":903,"score":33,"level":0},{"x":918,"y":903,"score":26,"level":0},{"x":997,"y":903,"score":88,"level":0},{"x":1021,"y":903,"score":39,"level":0},{"x":1122,"y":903,"score":35,"level":0},{"x":1183,"y":903,"score":60,"level":0},{"x":1252,"y":903,"score":45,"level":0},{"x":1316,"y":903,"score":64,"level":0},{"x":1363,"y":903,"score":39,"level":0},{"x":476,"y":904,"score":35,"level":0},{"x":485,"y":904,"score":32,"level":0},{"x":540,"y":904,"score":116,"level":0},{"x":557,"y":904,"score":124,"level":0},{"x":575,"y":904,"score":149,"level":0},{"x":624,"y":904,"score":86,"level":0},{"x":627,"y":904,"score":56,"level":0},{"x":741,"y":904,"score":34,"level":0},{"x":759,"y":904,"score":41,"level":0},{"x":796,"y":904,"score":29,"level":0},{"x":834,"y":904,"score":52,"level":0},{"x":887,"y":904,"score":28,"level":0},{"x":1191,"y":904,"score":94,"level":0},{"x":1198,"y":904,"score":47,"level":0},{"x":1376,"y":904,"score":28,"level":0},{"x":1445,"y":904,"score":90,"level":0},{"x":1459,"y":904,"score":132,"level":0},{"x":545,"y":905,"score":29,"level":0},{"x":580,"y":905,"score":138,"level":0},{"x":589,"y":905,"score":98,"level":0},{"x":595,"y":905,"score":164,"level":0},{"x":710,"y":905,"score":26,"level":0},{"x":757,"y":905,"score":34,"level":0},{"x":811,"y":905,"score":33,"level":0},{"x":857,"y":905,"score":43,"level":0},{"x":907,"y":905,"score":91,"level":0},{"x":979,"y":905,"score":38,"level":0},{"x":1003,"y":905,"score":113,"level":0},{"x":1010,"y":905,"score":90,"level":0},{"x":1028,"y":905,"score":32,"level":0},{"x":1111,"y":905,"score":29,"level":0},{"x":1272,"y":905,"score":69,"level":0},{"x":1275,"y":905,"score":58,"level":0},{"x":1374,"y":905,"score":33,"level":0},{"x":1405,"y":905,"score":62,"level":0},{"x":1411,"y":905,"score":32,"level":0},{"x":1481,"y":905,"score":81,"level":0},{"x":1487,"y":905,"score":36,"level":0},{"x":404,"y":906,"score":31,"level":0},{"x":417,"y":906,"score":91,"level":0},{"x":526,"y":906,"score":67,"level":0},{"x":570,"y":906,"score":64,"level":0},{"x":618,"y":906,"score":27,"level":0},{"x":686,"y":906,"score":46,"level":0},{"x":970,"y":906,"score":201,"level":0},{"x":976,"y":906,"score":92,"level":0},{"x":1034,"y":906,"score":26,"level":0},{"x":1064,"y":906,"score":116,"level":0},{"x":1103,"y":906,"score":54,"level":0},{"x":1171,"y":906,"score":88,"level":0},{"x":1243,"y":906,"score":80,"level":0},{"x":1284,"y":906,"score":98,"level":0},{"x":1295,"y":906,"score":45,"level":0},{"x":1332,"y":906,"score":110,"level":0},{"x":1337,"y":906,"score":36,"level":0},{"x":1376,"y":906,"score":32,"level":0},{"x":1450,"y":906,"score":64,"level":0},{"x":377,"y":907,"score":92,"level":0},{"x":409,"y":907,"score":61,"level":0},{"x":465,"y":907,"score":42,"level":0},{"x":492,"y":907,"score":36,"level":0},{"x":504,"y":907,"score":27,"level":0},{"x":552,"y":907,"score":32,"level":0},{"x":702,"y":907,"score":29,"level":0},{"x":889,"y":907,"score":26,"level":0},{"x":947,"y":907,"score":69,"level":0},{"x":1071,"y":907,"score":204,"level":0},{"x":1106,"y":907,"score":98,"level":0},{"x":1134,"y":907,"score":97,"level":0},{"x":1156,"y":907,"score":99,"level":0},{"x":1237,"y":907,"score":114,"level":0},{"x":1251,"y":907,"score":55,"level":0},{"x":1254,"y":907,"score":90,"level":0},{"x":1314,"y":907,"score":69,"level":0},{"x":1347,"y":907,"score":42,"level":0},{"x":1420,"y":907,"score":144,"level":0},{"x":1432,"y":907,"score":144,"level":0},{"x":1457,"y":907,"score":92,"level":0},{"x":1490,"y":907,"score":66,"level":0},{"x":432,"y":908,"score":293,"level":0},{"x":438,"y":908,"score":154,"level":0},{"x":517,"y":908,"score":40,"level":0},{"x":544,"y":908,"score":37,"level":0},{"x":572,"y":908,"score":68,"level":0},{"x":604,"y":908,"score":34,"level":0},{"x":623,"y":908,"score":46,"level":0},{"x":679,"y":908,"score":79,"level":0},{"x":738,"y":908,"score":121,"level":0},{"x":912,"y":908,"score":46,"level":0},{"x":1060,"y":908,"score":36,"level":0},{"x":1079,"y":908,"score":34,"level":0},{"x":1123,"y":908,"score":27,"level":0},{"x":1146,"y":908,"score":81,"level":0},{"x":1211,"y":908,"score":32,"level":0},{"x":1227,"y":908,"score":166,"level":0},{"x":1319,"y":908,"score":56,"level":0},{"x":1326,"y":908,"score":58,"level":0},{"x":1439,"y":908,"score":68,"level":0},{"x":391,"y":909,"score":27,"level":0},{"x":647,"y":909,"score":42,"level":0},{"x":719,"y":909,"score":29,"level":0},{"x":786,"y":909,"score":46,"level":0},{"x":820,"y":909,"score":129,"level":0},{"x":826,"y":909,"score":71,"level":0},{"x":934,"y":909,"score":48,"level":0},{"x":959,"y":909,"score":46,"level":0},{"x":1216,"y":909,"score":37,"level":0},{"x":1289,"y":909,"score":91,"level":0},{"x":1297,"y":909,"score":47,"level":0},{"x":1303,"y":909,"score":148,"level":0},{"x":1335,"y":909,"score":44,"level":0},{"x":1366,"y":909,"score":38,"level":0},{"x":1413,"y":909,"score":49,"level":0},{"x":1445,"y":909,"score":81,"level":0},{"x":592,"y":910,"score":44,"level":0},{"x":603,"y":910,"score":32,"level":0},{"x":629,"y":910,"score":56,"level":0},{"x":661,"y":910,"score":102,"level":0},{"x":707,"y":910,"score":100,"level":0},{"x":751,"y":910,"score":33,"level":0},{"x":797,"y":910,"score":106,"level":0},{"x":920,"y":910,"score":115,"level":0},{"x":951,"y":910,"score":42,"level":0},{"x":1105,"y":910,"score":66,"level":0},{"x":1242,"y":910,"score":69,"level":0},{"x":1273,"y":910,"score":48,"level":0},{"x":1279,"y":910,"score":62,"level":0},{"x":1357,"y":910,"score":39,"level":0},{"x":1405,"y":910,"score":90,"level":0},{"x":1441,"y":910,"score":60,"level":0},{"x":1464,"y":910,"score":70,"level":0},{"x":386,"y":911,"score":153,"level":0},{"x":509,"y":911,"score":28,"level":0},{"x":642,"y":911,"score":51,"level":0},{"x":741,"y":911,"score":79,"level":0},{"x":834,"y":911,"score":55,"level":0},{"x":944,"y":911,"score":32,"level":0},{"x":1054,"y":911,"score":59,"level":0},{"x":1341,"y":911,"score":136,"level":0},{"x":1387,"y":911,"score":32,"level":0},{"x":1447,"y":911,"score":31,"level":0},{"x":1450,"y":911,"score":74,"level":0},{"x":1467,"y":911,"score":40,"level":0},{"x":1481,"y":911,"score":95,"level":0},{"x":478,"y":912,"score":36,"level":0},{"x":559,"y":912,"score":37,"level":0},{"x":972,"y":912,"score":93,"level":0},{"x":1004,"y":912,"score":32,"level":0},{"x":1011,"y":912,"score":96,"level":0},{"x":1042,"y":912,"score":60,"level":0},{"x":1097,"y":912,"score":51,"level":0},{"x":1163,"y":912,"score":44,"level":0},{"x":1173,"y":912,"score":42,"level":0},{"x":1235,"y":912,"score":54,"level":0},{"x":1301,"y":912,"score":103,"level":0},{"x":1314,"y":912,"score":67,"level":0},{"x":1397,"y":912,"score":111,"level":0},{"x":1420,"y":912,"score":44,"level":0},{"x":1433,"y":912,"score":28,"level":0},{"x":386,"y":913,"score":121,"level":0},{"x":503,"y":913,"score":40,"level":0},{"x":673,"y":913,"score":178,"level":0},{"x":680,"y":913,"score":99,"level":0},{"x":761,"y":913,"score":35,"level":0},{"x":806,"y":913,"score":116,"level":0},{"x":868,"y":913,"score":52,"level":0},{"x":1063,"y":913,"score":162,"level":0},{"x":1069,"y":913,"score":178,"level":0},{"x":1231,"y":913,"score":28,"level":0},{"x":451,"y":914,"score":72,"level":0},{"x":526,"y":914,"score":167,"level":0},{"x":618,"y":914,"score":72,"level":0},{"x":688,"y":914,"score":31,"level":0},{"x":737,"y":914,"score":35,"level":0},{"x":826,"y":914,"score":95,"level":0},{"x":854,"y":914,"score":73,"level":0},{"x":860,"y":914,"score":136,"level":0},{"x":912,"y":914,"score":46,"level":0},{"x":970,"y":914,"score":52,"level":0},{"x":1016,"y":914,"score":49,"level":0},{"x":1207,"y":914,"score":107,"level":0},{"x":1243,"y":914,"score":43,"level":0},{"x":1298,"y":914,"score":69,"level":0},{"x":1490,"y":914,"score":32,"level":0},{"x":442,"y":915,"score":45,"level":0},{"x":513,"y":915,"score":33,"level":0},{"x":519,"y":915,"score":120,"level":0},{"x":566,"y":915,"score":47,"level":0},{"x":660,"y":915,"score":52,"level":0},{"x":821,"y":915,"score":57,"level":0},{"x":870,"y":915,"score":69,"level":0},{"x":920,"y":915,"score":113,"level":0},{"x":1076,"y":915,"score":77,"level":0},{"x":1080,"y":915,"score":67,"level":0},{"x":1102,"y":915,"score":36,"level":0},{"x":1158,"y":915,"score":50,"level":0},{"x":1184,"y":915,"score":36,"level":0},{"x":1197,"y":915,"score":109,"level":0},{"x":1256,"y":915,"score":69,"level":0},{"x":1323,"y":915,"score":33,"level":0},{"x":1356,"y":915,"score":28,"level":0},{"x":1427,"y":915,"score":46,"level":0},{"x":464,"y":916,"score":64,"level":0},{"x":547,"y":916,"score":87,"level":0},{"x":654,"y":916,"score":53,"level":0},{"x":797,"y":916,"score":30,"level":0},{"x":875,"y":916,"score":58,"level":0},{"x":1074,"y":916,"score":100,"level":0},{"x":1254,"y":916,"score":100,"level":0},{"x":1267,"y":916,"score":90,"level":0},{"x":1329,"y":916,"score":97,"level":0},{"x":1407,"y":916,"score":56,"level":0},{"x":1416,"y":916,"score":30,"level":0},{"x":434,"y":917,"score":88,"level":0},{"x":441,"y":917,"score":49,"level":0},{"x":530,"y":917,"score":117,"level":0},{"x":630,"y":917,"score":153,"level":0},{"x":710,"y":917,"score":32,"level":0},{"x":735,"y":917,"score":85,"level":0},{"x":944,"y":917,"score":40,"level":0},{"x":953,"y":917,"score":46,"level":0},{"x":963,"y":917,"score":31,"level":0},{"x":1010,"y":917,"score":56,"level":0},{"x":1088,"y":917,"score":183,"level":0},{"x":1129,"y":917,"score":29,"level":0},{"x":1181,"y":917,"score":54,"level":0},{"x":1216,"y":917,"score":38,"level":0},{"x":1309,"y":917,"score":33,"level":0},{"x":1341,"y":917,"score":26,"level":0},{"x":1382,"y":917,"score":31,"level":0},{"x":1395,"y":917,"score":94,"level":0},{"x":473,"y":918,"score":65,"level":0},{"x":697,"y":918,"score":38,"level":0},{"x":781,"y":918,"score":27,"level":0},{"x":791,"y":918,"score":73,"level":0},{"x":856,"y":918,"score":71,"level":0},{"x":928,"y":918,"score":46,"level":0},{"x":975,"y":918,"score":62,"level":0},{"x":1152,"y":918,"score":114,"level":0},{"x":1169,"y":918,"score":144,"level":0},{"x":1176,"y":918,"score":47,"level":0},{"x":1201,"y":918,"score":90,"level":0},{"x":1273,"y":918,"score":146,"level":0},{"x":1303,"y":918,"score":96,"level":0},{"x":1338,"y":918,"score":55,"level":0},{"x":1405,"y":918,"score":50,"level":0},{"x":377,"y":919,"score":40,"level":0},{"x":400,"y":919,"score":57,"level":0},{"x":865,"y":919,"score":45,"level":0},{"x":877,"y":919,"score":28,"level":0},{"x":1059,"y":919,"score":36,"level":0},{"x":1069,"y":919,"score":197,"level":0},{"x":1093,"y":919,"score":47,"level":0},{"x":1245,"y":919,"score":183,"level":0},{"x":1253,"y":919,"score":101,"level":0},{"x":1267,"y":919,"score":106,"level":0},{"x":1297,"y":919,"score":34,"level":0},{"x":1330,"y":919,"score":114,"level":0},{"x":421,"y":920,"score":96,"level":0},{"x":485,"y":920,"score":31,"level":0},{"x":515,"y":920,"score":75,"level":0},{"x":598,"y":920,"score":68,"level":0},{"x":612,"y":920,"score":120,"level":0},{"x":648,"y":920,"score":91,"level":0},{"x":704,"y":920,"score":129,"level":0},{"x":826,"y":920,"score":134,"level":0},{"x":937,"y":920,"score":69,"level":0},{"x":1122,"y":920,"score":28,"level":0},{"x":1206,"y":920,"score":188,"level":0},{"x":1212,"y":920,"score":49,"level":0},{"x":1295,"y":920,"score":65,"level":0},{"x":1371,"y":920,"score":79,"level":0},{"x":1396,"y":920,"score":102,"level":0},{"x":377,"y":921,"score":49,"level":0},{"x":467,"y":921,"score":94,"level":0},{"x":522,"y":921,"score":102,"level":0},{"x":550,"y":921,"score":79,"level":0},{"x":557,"y":921,"score":64,"level":0},{"x":619,"y":921,"score":67,"level":0},{"x":780,"y":921,"score":46,"level":0},{"x":870,"y":921,"score":57,"level":0},{"x":961,"y":921,"score":34,"level":0},{"x":1018,"y":921,"score":107,"level":0},{"x":1046,"y":921,"score":61,"level":0},{"x":1111,"y":921,"score":87,"level":0},{"x":1219,"y":921,"score":46,"level":0},{"x":1257,"y":921,"score":31,"level":0},{"x":1353,"y":921,"score":51,"level":0},{"x":1407,"y":921,"score":34,"level":0},{"x":1419,"y":921,"score":38,"level":0},{"x":436,"y":922,"score":159,"level":0},{"x":456,"y":922,"score":84,"level":0},{"x":531,"y":922,"score":55,"level":0},{"x":570,"y":922,"score":110,"level":0},{"x":923,"y":922,"score":55,"level":0},{"x":1081,"y":922,"score":76,"level":0},{"x":1134,"y":922,"score":70,"level":0},{"x":1136,"y":922,"score":79,"level":0},{"x":1149,"y":922,"score":34,"level":0},{"x":1157,"y":922,"score":61,"level":0},{"x":1162,"y":922,"score":175,"level":0},{"x":1309,"y":922,"score":35,"level":0},{"x":1396,"y":922,"score":90,"level":0},{"x":773,"y":923,"score":183,"level":0},{"x":1037,"y":923,"score":105,"level":0},{"x":1054,"y":923,"score":40,"level":0},{"x":1362,"y":923,"score":55,"level":0},{"x":1403,"y":923,"score":153,"level":0},{"x":1443,"y":923,"score":60,"level":0},{"x":489,"y":924,"score":43,"level":0},{"x":496,"y":924,"score":37,"level":0},{"x":641,"y":924,"score":163,"level":0},{"x":669,"y":924,"score":68,"level":0},{"x":720,"y":924,"score":74,"level":0},{"x":866,"y":924,"score":80,"level":0},{"x":1035,"y":924,"score":94,"level":0},{"x":1074,"y":924,"score":61,"level":0},{"x":1263,"y":924,"score":195,"level":0},{"x":1274,"y":924,"score":94,"level":0},{"x":1280,"y":924,"score":74,"level":0},{"x":1298,"y":924,"score":46,"level":0},{"x":1401,"y":924,"score":74,"level":0},{"x":1433,"y":924,"score":32,"level":0},{"x":454,"y":925,"score":78,"level":0},{"x":463,"y":925,"score":74,"level":0},{"x":527,"y":925,"score":82,"level":0},{"x":633,"y":925,"score":120,"level":0},{"x":778,"y":925,"score":129,"level":0},{"x":810,"y":925,"score":40,"level":0},{"x":837,"y":925,"score":72,"level":0},{"x":854,"y":925,"score":152,"level":0},{"x":1076,"y":925,"score":93,"level":0},{"x":1182,"y":925,"score":34,"level":0},{"x":1216,"y":925,"score":62,"level":0},{"x":1244,"y":925,"score":137,"level":0},{"x":1254,"y":925,"score":171,"level":0},{"x":1359,"y":925,"score":26,"level":0},{"x":1368,"y":925,"score":33,"level":0},{"x":1490,"y":925,"score":39,"level":0},{"x":404,"y":926,"score":80,"level":0},{"x":469,"y":926,"score":125,"level":0},{"x":483,"y":926,"score":151,"level":0},{"x":592,"y":926,"score":46,"level":0},{"x":610,"y":926,"score":140,"level":0},{"x":731,"y":926,"score":96,"level":0},{"x":820,"y":926,"score":58,"level":0},{"x":918,"y":926,"score":54,"level":0},{"x":927,"y":926,"score":125,"level":0},{"x":960,"y":926,"score":120,"level":0},{"x":966,"y":926,"score":28,"level":0},{"x":1010,"y":926,"score":82,"level":0},{"x":1112,"y":926,"score":28,"level":0},{"x":1166,"y":926,"score":32,"level":0},{"x":1170,"y":926,"score":58,"level":0},{"x":1304,"y":926,"score":30,"level":0},{"x":1330,"y":926,"score":33,"level":0},{"x":1373,"y":926,"score":50,"level":0},{"x":1464,"y":926,"score":45,"level":0},{"x":416,"y":927,"score":43,"level":0},{"x":434,"y":927,"score":138,"level":0},{"x":547,"y":927,"score":102,"level":0},{"x":561,"y":927,"score":87,"level":0},{"x":585,"y":927,"score":26,"level":0},{"x":604,"y":927,"score":61,"level":0},{"x":763,"y":927,"score":31,"level":0},{"x":826,"y":927,"score":31,"level":0},{"x":985,"y":927,"score":54,"level":0},{"x":1046,"y":927,"score":102,"level":0},{"x":1079,"y":927,"score":41,"level":0},{"x":1154,"y":927,"score":117,"level":0},{"x":1230,"y":927,"score":93,"level":0},{"x":1237,"y":927,"score":28,"level":0},{"x":1284,"y":927,"score":140,"level":0},{"x":1316,"y":927,"score":85,"level":0},{"x":1337,"y":927,"score":31,"level":0},{"x":398,"y":928,"score":57,"level":0},{"x":448,"y":928,"score":51,"level":0},{"x":556,"y":928,"score":30,"level":0},{"x":571,"y":928,"score":45,"level":0},{"x":647,"y":928,"score":28,"level":0},{"x":765,"y":928,"score":26,"level":0},{"x":783,"y":928,"score":41,"level":0},{"x":1125,"y":928,"score":53,"level":0},{"x":1164,"y":928,"score":31,"level":0},{"x":1310,"y":928,"score":36,"level":0},{"x":1322,"y":928,"score":34,"level":0},{"x":1372,"y":928,"score":58,"level":0},{"x":377,"y":929,"score":44,"level":0},{"x":438,"y":929,"score":41,"level":0},{"x":471,"y":929,"score":47,"level":0},{"x":636,"y":929,"score":52,"level":0},{"x":769,"y":929,"score":37,"level":0},{"x":789,"y":929,"score":66,"level":0},{"x":869,"y":929,"score":66,"level":0},{"x":913,"y":929,"score":27,"level":0},{"x":926,"y":929,"score":139,"level":0},{"x":1033,"y":929,"score":55,"level":0},{"x":1147,"y":929,"score":27,"level":0},{"x":1166,"y":929,"score":31,"level":0},{"x":1198,"y":929,"score":32,"level":0},{"x":1300,"y":929,"score":46,"level":0},{"x":1410,"y":929,"score":27,"level":0},{"x":1475,"y":929,"score":37,"level":0},{"x":422,"y":930,"score":33,"level":0},{"x":497,"y":930,"score":92,"level":0},{"x":527,"y":930,"score":59,"level":0},{"x":536,"y":930,"score":27,"level":0},{"x":591,"y":930,"score":58,"level":0},{"x":642,"y":930,"score":30,"level":0},{"x":837,"y":930,"score":37,"level":0},{"x":847,"y":930,"score":31,"level":0},{"x":882,"y":930,"score":46,"level":0},{"x":931,"y":930,"score":109,"level":0},{"x":1001,"y":930,"score":136,"level":0},{"x":1006,"y":930,"score":138,"level":0},{"x":1124,"y":930,"score":36,"level":0},{"x":1248,"y":930,"score":36,"level":0},{"x":1264,"y":930,"score":67,"level":0},{"x":1274,"y":930,"score":134,"level":0},{"x":506,"y":931,"score":265,"level":0},{"x":515,"y":931,"score":175,"level":0},{"x":521,"y":931,"score":44,"level":0},{"x":631,"y":931,"score":48,"level":0},{"x":651,"y":931,"score":110,"level":0},{"x":732,"y":931,"score":100,"level":0},{"x":750,"y":931,"score":78,"level":0},{"x":798,"y":931,"score":26,"level":0},{"x":841,"y":931,"score":52,"level":0},{"x":957,"y":931,"score":69,"level":0},{"x":1143,"y":931,"score":83,"level":0},{"x":1173,"y":931,"score":184,"level":0},{"x":1214,"y":931,"score":80,"level":0},{"x":1320,"y":931,"score":98,"level":0},{"x":1337,"y":931,"score":40,"level":0},{"x":1378,"y":931,"score":36,"level":0},{"x":456,"y":932,"score":133,"level":0},{"x":552,"y":932,"score":30,"level":0},{"x":607,"y":932,"score":64,"level":0},{"x":619,"y":932,"score":82,"level":0},{"x":778,"y":932,"score":41,"level":0},{"x":945,"y":932,"score":27,"level":0},{"x":960,"y":932,"score":82,"level":0},{"x":979,"y":932,"score":90,"level":0},{"x":995,"y":932,"score":152,"level":0},{"x":1386,"y":932,"score":55,"level":0},{"x":380,"y":933,"score":37,"level":0},{"x":433,"y":933,"score":63,"level":0},{"x":560,"y":933,"score":67,"level":0},{"x":745,"y":933,"score":35,"level":0},{"x":811,"y":933,"score":44,"level":0},{"x":917,"y":933,"score":35,"level":0},{"x":952,"y":933,"score":163,"level":0},{"x":968,"y":933,"score":48,"level":0},{"x":1040,"y":933,"score":50,"level":0},{"x":1053,"y":933,"score":70,"level":0},{"x":1112,"y":933,"score":60,"level":0},{"x":1258,"y":933,"score":44,"level":0},{"x":1311,"y":933,"score":56,"level":0},{"x":461,"y":934,"score":55,"level":0},{"x":487,"y":934,"score":55,"level":0},{"x":522,"y":934,"score":31,"level":0},{"x":699,"y":934,"score":114,"level":0},{"x":740,"y":934,"score":134,"level":0},{"x":805,"y":934,"score":90,"level":0},{"x":842,"y":934,"score":42,"level":0},{"x":1061,"y":934,"score":81,"level":0},{"x":1148,"y":934,"score":64,"level":0},{"x":1242,"y":934,"score":49,"level":0},{"x":1317,"y":934,"score":53,"level":0},{"x":1352,"y":934,"score":92,"level":0},{"x":1357,"y":934,"score":45,"level":0},{"x":389,"y":935,"score":37,"level":0},{"x":426,"y":935,"score":53,"level":0},{"x":500,"y":935,"score":72,"level":0},{"x":543,"y":935,"score":80,"level":0},{"x":567,"y":935,"score":38,"level":0},{"x":626,"y":935,"score":98,"level":0},{"x":675,"y":935,"score":44,"level":0},{"x":683,"y":935,"score":38,"level":0},{"x":714,"y":935,"score":65,"level":0},{"x":720,"y":935,"score":45,"level":0},{"x":862,"y":935,"score":86,"level":0},{"x":868,"y":935,"score":184,"level":0},{"x":922,"y":935,"score":119,"level":0},{"x":962,"y":935,"score":73,"level":0},{"x":974,"y":935,"score":148,"level":0},{"x":1056,"y":935,"score":67,"level":0},{"x":1063,"y":935,"score":112,"level":0},{"x":1074,"y":935,"score":71,"level":0},{"x":1105,"y":935,"score":27,"level":0},{"x":1136,"y":935,"score":30,"level":0},{"x":1178,"y":935,"score":132,"level":0},{"x":1244,"y":935,"score":121,"level":0},{"x":1273,"y":935,"score":42,"level":0},{"x":1290,"y":935,"score":93,"level":0},{"x":593,"y":936,"score":61,"level":0},{"x":759,"y":936,"score":55,"level":0},{"x":829,"y":936,"score":26,"level":0},{"x":851,"y":936,"score":30,"level":0},{"x":882,"y":936,"score":29,"level":0},{"x":935,"y":936,"score":120,"level":0},{"x":1069,"y":936,"score":34,"level":0},{"x":1153,"y":936,"score":39,"level":0},{"x":1234,"y":936,"score":45,"level":0},{"x":1268,"y":936,"score":45,"level":0},{"x":385,"y":937,"score":51,"level":0},{"x":395,"y":937,"score":100,"level":0},{"x":405,"y":937,"score":81,"level":0},{"x":417,"y":937,"score":70,"level":0},{"x":438,"y":937,"score":47,"level":0},{"x":481,"y":937,"score":79,"level":0},{"x":507,"y":937,"score":34,"level":0},{"x":514,"y":937,"score":30,"level":0},{"x":638,"y":937,"score":158,"level":0},{"x":692,"y":937,"score":57,"level":0},{"x":753,"y":937,"score":115,"level":0},{"x":792,"y":937,"score":32,"level":0},{"x":887,"y":937,"score":29,"level":0},{"x":957,"y":937,"score":221,"level":0},{"x":1017,"y":937,"score":34,"level":0},{"x":1094,"y":937,"score":88,"level":0},{"x":1132,"y":937,"score":47,"level":0},{"x":1170,"y":937,"score":96,"level":0},{"x":1179,"y":937,"score":134,"level":0},{"x":1202,"y":937,"score":41,"level":0},{"x":1246,"y":937,"score":98,"level":0},{"x":1298,"y":937,"score":58,"level":0},{"x":444,"y":938,"score":41,"level":0},{"x":558,"y":938,"score":68,"level":0},{"x":602,"y":938,"score":86,"level":0},{"x":615,"y":938,"score":51,"level":0},{"x":633,"y":938,"score":84,"level":0},{"x":665,"y":938,"score":54,"level":0},{"x":765,"y":938,"score":111,"level":0},{"x":781,"y":938,"score":34,"level":0},{"x":977,"y":938,"score":69,"level":0},{"x":1013,"y":938,"score":120,"level":0},{"x":1135,"y":938,"score":54,"level":0},{"x":1162,"y":938,"score":80,"level":0},{"x":1213,"y":938,"score":83,"level":0},{"x":1215,"y":938,"score":62,"level":0},{"x":1293,"y":938,"score":60,"level":0},{"x":1307,"y":938,"score":66,"level":0},{"x":494,"y":939,"score":30,"level":0},{"x":532,"y":939,"score":50,"level":0},{"x":649,"y":939,"score":90,"level":0},{"x":814,"y":939,"score":142,"level":0},{"x":952,"y":939,"score":75,"level":0},{"x":1102,"y":939,"score":35,"level":0},{"x":1196,"y":939,"score":52,"level":0},{"x":1241,"y":939,"score":195,"level":0},{"x":1261,"y":939,"score":46,"level":0},{"x":1284,"y":939,"score":36,"level":0},{"x":1311,"y":939,"score":66,"level":0},{"x":1490,"y":939,"score":32,"level":0},{"x":394,"y":940,"score":76,"level":0},{"x":425,"y":940,"score":52,"level":0},{"x":594,"y":940,"score":39,"level":0},{"x":626,"y":940,"score":54,"level":0},{"x":660,"y":940,"score":80,"level":0},{"x":701,"y":940,"score":26,"level":0},{"x":703,"y":940,"score":39,"level":0},{"x":715,"y":940,"score":87,"level":0},{"x":737,"y":940,"score":56,"level":0},{"x":826,"y":940,"score":31,"level":0},{"x":858,"y":940,"score":39,"level":0},{"x":891,"y":940,"score":70,"level":0},{"x":943,"y":940,"score":116,"level":0},{"x":965,"y":940,"score":32,"level":0},{"x":1029,"y":940,"score":32,"level":0},{"x":1064,"y":940,"score":32,"level":0},{"x":1104,"y":940,"score":26,"level":0},{"x":1127,"y":940,"score":124,"level":0},{"x":1183,"y":940,"score":154,"level":0},{"x":1221,"y":940,"score":27,"level":0},{"x":1230,"y":940,"score":80,"level":0},{"x":1295,"y":940,"score":44,"level":0},{"x":1335,"y":940,"score":86,"level":0},{"x":1341,"y":940,"score":208,"level":0},{"x":1348,"y":940,"score":130,"level":0},{"x":1403,"y":940,"score":30,"level":0},{"x":400,"y":941,"score":91,"level":0},{"x":501,"y":941,"score":106,"level":0},{"x":612,"y":941,"score":38,"level":0},{"x":745,"y":941,"score":107,"level":0},{"x":757,"y":941,"score":73,"level":0},{"x":821,"y":941,"score":42,"level":0},{"x":860,"y":941,"score":31,"level":0},{"x":869,"y":941,"score":120,"level":0},{"x":876,"y":941,"score":34,"level":0},{"x":989,"y":941,"score":226,"level":0},{"x":1005,"y":941,"score":100,"level":0},{"x":1074,"y":941,"score":88,"level":0},{"x":1247,"y":941,"score":33,"level":0},{"x":1270,"y":941,"score":35,"level":0},{"x":1322,"y":941,"score":53,"level":0},{"x":1374,"y":941,"score":31,"level":0},{"x":1405,"y":941,"score":34,"level":0},{"x":393,"y":942,"score":78,"level":0},{"x":508,"y":942,"score":40,"level":0},{"x":513,"y":942,"score":94,"level":0},{"x":638,"y":942,"score":27,"level":0},{"x":881,"y":942,"score":35,"level":0},{"x":886,"y":942,"score":31,"level":0},{"x":917,"y":942,"score":36,"level":0},{"x":938,"y":942,"score":94,"level":0},{"x":950,"y":942,"score":32,"level":0},{"x":968,"y":942,"score":36,"level":0},{"x":983,"y":942,"score":114,"level":0},{"x":1020,"y":942,"score":105,"level":0},{"x":1036,"y":942,"score":145,"level":0},{"x":1086,"y":942,"score":210,"level":0},{"x":1105,"y":942,"score":40,"level":0},{"x":1179,"y":942,"score":251,"level":0},{"x":1217,"y":942,"score":30,"level":0},{"x":1236,"y":942,"score":170,"level":0},{"x":1286,"y":942,"score":34,"level":0},{"x":379,"y":943,"score":70,"level":0},{"x":558,"y":943,"score":67,"level":0},{"x":586,"y":943,"score":64,"level":0},{"x":640,"y":943,"score":26,"level":0},{"x":665,"y":943,"score":84,"level":0},{"x":862,"y":943,"score":96,"level":0},{"x":1011,"y":943,"score":27,"level":0},{"x":1050,"y":943,"score":43,"level":0},{"x":1078,"y":943,"score":48,"level":0},{"x":1092,"y":943,"score":85,"level":0},{"x":1113,"y":943,"score":33,"level":0},{"x":1171,"y":943,"score":142,"level":0},{"x":1200,"y":943,"score":37,"level":0},{"x":1228,"y":943,"score":134,"level":0},{"x":1309,"y":943,"score":50,"level":0},{"x":1332,"y":943,"score":117,"level":0},{"x":1449,"y":943,"score":35,"level":0},{"x":384,"y":944,"score":130,"level":0},{"x":424,"y":944,"score":67,"level":0},{"x":430,"y":944,"score":59,"level":0},{"x":467,"y":944,"score":31,"level":0},{"x":479,"y":944,"score":71,"level":0},{"x":487,"y":944,"score":116,"level":0},{"x":494,"y":944,"score":165,"level":0},{"x":602,"y":944,"score":90,"level":0},{"x":671,"y":944,"score":35,"level":0},{"x":904,"y":944,"score":88,"level":0},{"x":1043,"y":944,"score":29,"level":0},{"x":1064,"y":944,"score":28,"level":0},{"x":1120,"y":944,"score":156,"level":0},{"x":1133,"y":944,"score":34,"level":0},{"x":1148,"y":944,"score":92,"level":0},{"x":1205,"y":944,"score":38,"level":0},{"x":1337,"y":944,"score":54,"level":0},{"x":1461,"y":944,"score":40,"level":0},{"x":401,"y":945,"score":73,"level":0},{"x":591,"y":945,"score":33,"level":0},{"x":632,"y":945,"score":29,"level":0},{"x":654,"y":945,"score":79,"level":0},{"x":708,"y":945,"score":32,"level":0},{"x":723,"y":945,"score":31,"level":0},{"x":735,"y":945,"score":65,"level":0},{"x":820,"y":945,"score":35,"level":0},{"x":885,"y":945,"score":45,"level":0},{"x":941,"y":945,"score":42,"level":0},{"x":978,"y":945,"score":26,"level":0},{"x":1061,"y":945,"score":94,"level":0},{"x":1076,"y":945,"score":34,"level":0},{"x":1157,"y":945,"score":35,"level":0},{"x":1196,"y":945,"score":30,"level":0},{"x":1213,"y":945,"score":108,"level":0},{"x":1238,"y":945,"score":86,"level":0},{"x":1261,"y":945,"score":54,"level":0},{"x":1278,"y":945,"score":65,"level":0},{"x":1342,"y":945,"score":108,"level":0},{"x":1490,"y":945,"score":29,"level":0},{"x":377,"y":946,"score":58,"level":0},{"x":383,"y":946,"score":131,"level":0},{"x":408,"y":946,"score":62,"level":0},{"x":473,"y":946,"score":31,"level":0},{"x":889,"y":946,"score":112,"level":0},{"x":922,"y":946,"score":44,"level":0},{"x":931,"y":946,"score":71,"level":0},{"x":988,"y":946,"score":101,"level":0},{"x":1032,"y":946,"score":51,"level":0},{"x":1151,"y":946,"score":59,"level":0},{"x":1162,"y":946,"score":35,"level":0},{"x":1183,"y":946,"score":281,"level":0},{"x":1251,"y":946,"score":134,"level":0},{"x":1284,"y":946,"score":68,"level":0},{"x":1302,"y":946,"score":49,"level":0},{"x":1348,"y":946,"score":82,"level":0},{"x":513,"y":947,"score":38,"level":0},{"x":528,"y":947,"score":27,"level":0},{"x":663,"y":947,"score":59,"level":0},{"x":717,"y":947,"score":57,"level":0},{"x":747,"y":947,"score":63,"level":0},{"x":832,"y":947,"score":91,"level":0},{"x":887,"y":947,"score":107,"level":0},{"x":909,"y":947,"score":168,"level":0},{"x":1035,"y":947,"score":39,"level":0},{"x":1060,"y":947,"score":81,"level":0},{"x":1104,"y":947,"score":40,"level":0},{"x":1106,"y":947,"score":39,"level":0},{"x":1189,"y":947,"score":94,"level":0},{"x":1229,"y":947,"score":122,"level":0},{"x":1309,"y":947,"score":96,"level":0},{"x":1475,"y":947,"score":35,"level":0},{"x":377,"y":948,"score":61,"level":0},{"x":418,"y":948,"score":30,"level":0},{"x":437,"y":948,"score":79,"level":0},{"x":461,"y":948,"score":34,"level":0},{"x":463,"y":948,"score":44,"level":0},{"x":498,"y":948,"score":52,"level":0},{"x":573,"y":948,"score":79,"level":0},{"x":580,"y":948,"score":162,"level":0},{"x":667,"y":948,"score":96,"level":0},{"x":727,"y":948,"score":117,"level":0},{"x":893,"y":948,"score":33,"level":0},{"x":1170,"y":948,"score":37,"level":0},{"x":1178,"y":948,"score":31,"level":0},{"x":1206,"y":948,"score":63,"level":0},{"x":1319,"y":948,"score":58,"level":0},{"x":389,"y":949,"score":114,"level":0},{"x":396,"y":949,"score":62,"level":0},{"x":449,"y":949,"score":66,"level":0},{"x":477,"y":949,"score":79,"level":0},{"x":540,"y":949,"score":36,"level":0},{"x":550,"y":949,"score":98,"level":0},{"x":555,"y":949,"score":30,"level":0},{"x":675,"y":949,"score":40,"level":0},{"x":700,"y":949,"score":35,"level":0},{"x":736,"y":949,"score":34,"level":0},{"x":738,"y":949,"score":45,"level":0},{"x":776,"y":949,"score":26,"level":0},{"x":857,"y":949,"score":27,"level":0},{"x":862,"y":949,"score":100,"level":0},{"x":898,"y":949,"score":32,"level":0},{"x":903,"y":949,"score":26,"level":0},{"x":1011,"y":949,"score":33,"level":0},{"x":1094,"y":949,"score":98,"level":0},{"x":1099,"y":949,"score":96,"level":0},{"x":1113,"y":949,"score":91,"level":0},{"x":1121,"y":949,"score":101,"level":0},{"x":1269,"y":949,"score":150,"level":0},{"x":1353,"y":949,"score":26,"level":0},{"x":1358,"y":949,"score":30,"level":0},{"x":1398,"y":949,"score":60,"level":0},{"x":1414,"y":949,"score":56,"level":0},{"x":1450,"y":949,"score":32,"level":0},{"x":423,"y":950,"score":65,"level":0},{"x":487,"y":950,"score":94,"level":0},{"x":575,"y":950,"score":90,"level":0},{"x":591,"y":950,"score":84,"level":0},{"x":728,"y":950,"score":28,"level":0},{"x":842,"y":950,"score":71,"level":0},{"x":1077,"y":950,"score":129,"level":0},{"x":1085,"y":950,"score":26,"level":0},{"x":1213,"y":950,"score":70,"level":0},{"x":1261,"y":950,"score":162,"level":0},{"x":1345,"y":950,"score":73,"level":0},{"x":1444,"y":950,"score":38,"level":0},{"x":481,"y":951,"score":69,"level":0},{"x":502,"y":951,"score":56,"level":0},{"x":914,"y":951,"score":55,"level":0},{"x":921,"y":951,"score":55,"level":0},{"x":941,"y":951,"score":64,"level":0},{"x":1109,"y":951,"score":41,"level":0},{"x":1153,"y":951,"score":70,"level":0},{"x":1184,"y":951,"score":68,"level":0},{"x":1197,"y":951,"score":44,"level":0},{"x":1284,"y":951,"score":46,"level":0},{"x":1302,"y":951,"score":78,"level":0},{"x":1323,"y":951,"score":57,"level":0},{"x":1397,"y":951,"score":57,"level":0},{"x":1412,"y":951,"score":151,"level":0},{"x":409,"y":952,"score":41,"level":0},{"x":515,"y":952,"score":164,"level":0},{"x":552,"y":952,"score":64,"level":0},{"x":671,"y":952,"score":40,"level":0},{"x":771,"y":952,"score":86,"level":0},{"x":796,"y":952,"score":39,"level":0},{"x":830,"y":952,"score":53,"level":0},{"x":832,"y":952,"score":58,"level":0},{"x":1061,"y":952,"score":63,"level":0},{"x":1092,"y":952,"score":51,"level":0},{"x":1130,"y":952,"score":70,"level":0},{"x":1203,"y":952,"score":47,"level":0},{"x":1370,"y":952,"score":104,"level":0},{"x":1428,"y":952,"score":29,"level":0},{"x":456,"y":953,"score":48,"level":0},{"x":571,"y":953,"score":65,"level":0},{"x":584,"y":953,"score":140,"level":0},{"x":665,"y":953,"score":45,"level":0},{"x":849,"y":953,"score":44,"level":0},{"x":852,"y":953,"score":83,"level":0},{"x":892,"y":953,"score":54,"level":0},{"x":902,"y":953,"score":27,"level":0},{"x":929,"y":953,"score":39,"level":0},{"x":997,"y":953,"score":98,"level":0},{"x":1083,"y":953,"score":40,"level":0},{"x":1118,"y":953,"score":32,"level":0},{"x":1139,"y":953,"score":81,"level":0},{"x":1290,"y":953,"score":93,"level":0},{"x":1327,"y":953,"score":49,"level":0},{"x":1417,"y":953,"score":69,"level":0},{"x":1434,"y":953,"score":34,"level":0},{"x":391,"y":954,"score":54,"level":0},{"x":442,"y":954,"score":43,"level":0},{"x":527,"y":954,"score":38,"level":0},{"x":579,"y":954,"score":86,"level":0},{"x":658,"y":954,"score":33,"level":0},{"x":750,"y":954,"score":95,"level":0},{"x":1056,"y":954,"score":29,"level":0},{"x":1074,"y":954,"score":72,"level":0},{"x":1233,"y":954,"score":92,"level":0},{"x":1318,"y":954,"score":90,"level":0},{"x":1329,"y":954,"score":55,"level":0},{"x":1336,"y":954,"score":26,"level":0},{"x":424,"y":955,"score":28,"level":0},{"x":532,"y":955,"score":26,"level":0},{"x":540,"y":955,"score":143,"level":0},{"x":554,"y":955,"score":119,"level":0},{"x":700,"y":955,"score":80,"level":0},{"x":732,"y":955,"score":184,"level":0},{"x":758,"y":955,"score":96,"level":0},{"x":826,"y":955,"score":54,"level":0},{"x":898,"y":955,"score":43,"level":0},{"x":1008,"y":955,"score":148,"level":0},{"x":1098,"y":955,"score":206,"level":0},{"x":1244,"y":955,"score":157,"level":0},{"x":1252,"y":955,"score":58,"level":0},{"x":1261,"y":955,"score":29,"level":0},{"x":1269,"y":955,"score":120,"level":0},{"x":1423,"y":955,"score":123,"level":0},{"x":377,"y":956,"score":82,"level":0},{"x":433,"y":956,"score":96,"level":0},{"x":462,"y":956,"score":128,"level":0},{"x":491,"y":956,"score":124,"level":0},{"x":548,"y":956,"score":80,"level":0},{"x":1091,"y":956,"score":75,"level":0},{"x":1148,"y":956,"score":38,"level":0},{"x":1203,"y":956,"score":65,"level":0},{"x":1210,"y":956,"score":55,"level":0},{"x":1213,"y":956,"score":35,"level":0},{"x":1295,"y":956,"score":51,"level":0},{"x":1323,"y":956,"score":55,"level":0},{"x":1347,"y":956,"score":77,"level":0},{"x":394,"y":957,"score":28,"level":0},{"x":403,"y":957,"score":87,"level":0},{"x":515,"y":957,"score":40,"level":0},{"x":693,"y":957,"score":86,"level":0},{"x":707,"y":957,"score":42,"level":0},{"x":759,"y":957,"score":119,"level":0},{"x":778,"y":957,"score":53,"level":0},{"x":952,"y":957,"score":60,"level":0},{"x":977,"y":957,"score":32,"level":0},{"x":993,"y":957,"score":66,"level":0},{"x":1022,"y":957,"score":137,"level":0},{"x":1060,"y":957,"score":49,"level":0},{"x":1080,"y":957,"score":34,"level":0},{"x":1159,"y":957,"score":33,"level":0},{"x":1378,"y":957,"score":61,"level":0},{"x":448,"y":958,"score":32,"level":0},{"x":567,"y":958,"score":35,"level":0},{"x":580,"y":958,"score":53,"level":0},{"x":614,"y":958,"score":124,"level":0},{"x":619,"y":958,"score":40,"level":0},{"x":649,"y":958,"score":38,"level":0},{"x":772,"y":958,"score":242,"level":0},{"x":958,"y":958,"score":31,"level":0},{"x":1083,"y":958,"score":67,"level":0},{"x":1105,"y":958,"score":53,"level":0},{"x":1140,"y":958,"score":35,"level":0},{"x":1385,"y":958,"score":27,"level":0},{"x":535,"y":959,"score":43,"level":0},{"x":561,"y":959,"score":277,"level":0},{"x":590,"y":959,"score":49,"level":0},{"x":625,"y":959,"score":151,"level":0},{"x":657,"y":959,"score":40,"level":0},{"x":703,"y":959,"score":119,"level":0},{"x":789,"y":959,"score":70,"level":0},{"x":893,"y":959,"score":200,"level":0},{"x":924,"y":959,"score":106,"level":0},{"x":986,"y":959,"score":108,"level":0},{"x":1153,"y":959,"score":32,"level":0},{"x":1202,"y":959,"score":46,"level":0},{"x":1258,"y":959,"score":234,"level":0},{"x":1302,"y":959,"score":128,"level":0},{"x":1338,"y":959,"score":66,"level":0},{"x":1355,"y":959,"score":28,"level":0},{"x":385,"y":960,"score":33,"level":0},{"x":468,"y":960,"score":81,"level":0},{"x":474,"y":960,"score":113,"level":0},{"x":638,"y":960,"score":32,"level":0},{"x":666,"y":960,"score":44,"level":0},{"x":673,"y":960,"score":127,"level":0},{"x":685,"y":960,"score":112,"level":0},{"x":738,"y":960,"score":213,"level":0},{"x":849,"y":960,"score":40,"level":0},{"x":930,"y":960,"score":57,"level":0},{"x":1027,"y":960,"score":49,"level":0},{"x":1043,"y":960,"score":103,"level":0},{"x":1050,"y":960,"score":60,"level":0},{"x":1056,"y":960,"score":76,"level":0},{"x":1098,"y":960,"score":36,"level":0},{"x":1110,"y":960,"score":72,"level":0},{"x":1218,"y":960,"score":54,"level":0},{"x":1266,"y":960,"score":49,"level":0},{"x":1318,"y":960,"score":144,"level":0},{"x":1363,"y":960,"score":51,"level":0},{"x":1368,"y":960,"score":65,"level":0},{"x":1401,"y":960,"score":147,"level":0},{"x":1426,"y":960,"score":34,"level":0},{"x":640,"y":961,"score":44,"level":0},{"x":944,"y":961,"score":36,"level":0},{"x":1080,"y":961,"score":31,"level":0},{"x":1135,"y":961,"score":76,"level":0},{"x":1200,"y":961,"score":45,"level":0},{"x":1235,"y":961,"score":49,"level":0},{"x":1247,"y":961,"score":30,"level":0},{"x":1445,"y":961,"score":31,"level":0},{"x":811,"y":962,"score":35,"level":0},{"x":828,"y":962,"score":60,"level":0},{"x":958,"y":962,"score":72,"level":0},{"x":992,"y":962,"score":50,"level":0},{"x":1155,"y":962,"score":55,"level":0},{"x":1214,"y":962,"score":80,"level":0},{"x":1348,"y":962,"score":56,"level":0},{"x":1430,"y":962,"score":28,"level":0},{"x":408,"y":963,"score":113,"level":0},{"x":431,"y":963,"score":47,"level":0},{"x":490,"y":963,"score":34,"level":0},{"x":695,"y":963,"score":121,"level":0},{"x":908,"y":963,"score":29,"level":0},{"x":1031,"y":963,"score":32,"level":0},{"x":1057,"y":963,"score":84,"level":0},{"x":1102,"y":963,"score":42,"level":0},{"x":1195,"y":963,"score":36,"level":0},{"x":1262,"y":963,"score":75,"level":0},{"x":1359,"y":963,"score":33,"level":0},{"x":1374,"y":963,"score":58,"level":0},{"x":1408,"y":963,"score":28,"level":0},{"x":1477,"y":963,"score":46,"level":0},{"x":1484,"y":963,"score":60,"level":0},{"x":646,"y":964,"score":29,"level":0},{"x":664,"y":964,"score":30,"level":0},{"x":713,"y":964,"score":56,"level":0},{"x":789,"y":964,"score":39,"level":0},{"x":796,"y":964,"score":47,"level":0},{"x":805,"y":964,"score":45,"level":0},{"x":853,"y":964,"score":43,"level":0},{"x":934,"y":964,"score":54,"level":0},{"x":939,"y":964,"score":74,"level":0},{"x":1000,"y":964,"score":62,"level":0},{"x":1059,"y":964,"score":134,"level":0},{"x":1323,"y":964,"score":88,"level":0},{"x":1325,"y":964,"score":60,"level":0},{"x":1354,"y":964,"score":43,"level":0},{"x":1469,"y":964,"score":30,"level":0},{"x":1490,"y":964,"score":28,"level":0},{"x":453,"y":965,"score":84,"level":0},{"x":582,"y":965,"score":126,"level":0},{"x":587,"y":965,"score":120,"level":0},{"x":616,"y":965,"score":28,"level":0},{"x":699,"y":965,"score":146,"level":0},{"x":705,"y":965,"score":77,"level":0},{"x":751,"y":965,"score":90,"level":0},{"x":868,"y":965,"score":55,"level":0},{"x":969,"y":965,"score":32,"level":0},{"x":1026,"y":965,"score":34,"level":0},{"x":1083,"y":965,"score":60,"level":0},{"x":1289,"y":965,"score":34,"level":0},{"x":1317,"y":965,"score":75,"level":0},{"x":421,"y":966,"score":136,"level":0},{"x":836,"y":966,"score":144,"level":0},{"x":944,"y":966,"score":97,"level":0},{"x":981,"y":966,"score":124,"level":0},{"x":1016,"y":966,"score":127,"level":0},{"x":1074,"y":966,"score":48,"level":0},{"x":1090,"y":966,"score":112,"level":0},{"x":1109,"y":966,"score":46,"level":0},{"x":1250,"y":966,"score":57,"level":0},{"x":1322,"y":966,"score":67,"level":0},{"x":427,"y":967,"score":96,"level":0},{"x":433,"y":967,"score":69,"level":0},{"x":440,"y":967,"score":88,"level":0},{"x":568,"y":967,"score":83,"level":0},{"x":587,"y":967,"score":70,"level":0},{"x":765,"y":967,"score":46,"level":0},{"x":784,"y":967,"score":34,"level":0},{"x":809,"y":967,"score":31,"level":0},{"x":961,"y":967,"score":63,"level":0},{"x":975,"y":967,"score":39,"level":0},{"x":1008,"y":967,"score":157,"level":0},{"x":1053,"y":967,"score":37,"level":0},{"x":1162,"y":967,"score":26,"level":0},{"x":1220,"y":967,"score":158,"level":0},{"x":1281,"y":967,"score":41,"level":0},{"x":1346,"y":967,"score":130,"level":0},{"x":1353,"y":967,"score":76,"level":0},{"x":459,"y":968,"score":34,"level":0},{"x":593,"y":968,"score":60,"level":0},{"x":629,"y":968,"score":80,"level":0},{"x":678,"y":968,"score":42,"level":0},{"x":693,"y":968,"score":105,"level":0},{"x":799,"y":968,"score":52,"level":0},{"x":900,"y":968,"score":81,"level":0},{"x":1025,"y":968,"score":105,"level":0},{"x":1124,"y":968,"score":86,"level":0},{"x":1147,"y":968,"score":54,"level":0},{"x":1168,"y":968,"score":42,"level":0},{"x":1419,"y":968,"score":32,"level":0},{"x":1424,"y":968,"score":39,"level":0},{"x":1430,"y":968,"score":147,"level":0},{"x":1438,"y":968,"score":75,"level":0},{"x":1444,"y":968,"score":100,"level":0},{"x":1452,"y":968,"score":26,"level":0},{"x":1478,"y":968,"score":30,"level":0},{"x":1484,"y":968,"score":66,"level":0},{"x":491,"y":969,"score":26,"level":0},{"x":687,"y":969,"score":56,"level":0},{"x":824,"y":969,"score":41,"level":0},{"x":988,"y":969,"score":44,"level":0},{"x":1041,"y":969,"score":171,"level":0},{"x":1047,"y":969,"score":33,"level":0},{"x":1183,"y":969,"score":94,"level":0},{"x":1189,"y":969,"score":41,"level":0},{"x":1241,"y":969,"score":88,"level":0},{"x":1315,"y":969,"score":72,"level":0},{"x":453,"y":970,"score":151,"level":0},{"x":465,"y":970,"score":26,"level":0},{"x":479,"y":970,"score":26,"level":0},{"x":556,"y":970,"score":27,"level":0},{"x":603,"y":970,"score":28,"level":0},{"x":700,"y":970,"score":107,"level":0},{"x":758,"y":970,"score":112,"level":0},{"x":782,"y":970,"score":44,"level":0},{"x":828,"y":970,"score":42,"level":0},{"x":867,"y":970,"score":56,"level":0},{"x":1055,"y":970,"score":42,"level":0},{"x":1065,"y":970,"score":91,"level":0},{"x":1288,"y":970,"score":44,"level":0},{"x":1302,"y":970,"score":92,"level":0},{"x":1360,"y":970,"score":28,"level":0},{"x":1401,"y":970,"score":32,"level":0},{"x":1452,"y":970,"score":30,"level":0},{"x":415,"y":971,"score":54,"level":0},{"x":671,"y":971,"score":94,"level":0},{"x":691,"y":971,"score":33,"level":0},{"x":746,"y":971,"score":33,"level":0},{"x":1070,"y":971,"score":28,"level":0},{"x":1198,"y":971,"score":48,"level":0},{"x":1274,"y":971,"score":39,"level":0},{"x":393,"y":972,"score":32,"level":0},{"x":403,"y":972,"score":57,"level":0},{"x":606,"y":972,"score":47,"level":0},{"x":624,"y":972,"score":40,"level":0},{"x":679,"y":972,"score":67,"level":0},{"x":777,"y":972,"score":54,"level":0},{"x":841,"y":972,"score":96,"level":0},{"x":1017,"y":972,"score":49,"level":0},{"x":1077,"y":972,"score":26,"level":0},{"x":1103,"y":972,"score":62,"level":0},{"x":1133,"y":972,"score":112,"level":0},{"x":1141,"y":972,"score":88,"level":0},{"x":1254,"y":972,"score":49,"level":0},{"x":1353,"y":972,"score":64,"level":0},{"x":386,"y":973,"score":41,"level":0},{"x":407,"y":973,"score":44,"level":0},{"x":442,"y":973,"score":150,"level":0},{"x":569,"y":973,"score":75,"level":0},{"x":714,"y":973,"score":28,"level":0},{"x":737,"y":973,"score":43,"level":0},{"x":762,"y":973,"score":30,"level":0},{"x":837,"y":973,"score":31,"level":0},{"x":910,"y":973,"score":40,"level":0},{"x":920,"y":973,"score":36,"level":0},{"x":938,"y":973,"score":89,"level":0},{"x":947,"y":973,"score":52,"level":0},{"x":1084,"y":973,"score":52,"level":0},{"x":1112,"y":973,"score":50,"level":0},{"x":1234,"y":973,"score":119,"level":0},{"x":1339,"y":973,"score":46,"level":0},{"x":1345,"y":973,"score":126,"level":0},{"x":1432,"y":973,"score":41,"level":0},{"x":1437,"y":973,"score":116,"level":0},{"x":417,"y":974,"score":57,"level":0},{"x":426,"y":974,"score":42,"level":0},{"x":575,"y":974,"score":72,"level":0},{"x":601,"y":974,"score":53,"level":0},{"x":658,"y":974,"score":44,"level":0},{"x":687,"y":974,"score":148,"level":0},{"x":845,"y":974,"score":179,"level":0},{"x":854,"y":974,"score":40,"level":0},{"x":961,"y":974,"score":29,"level":0},{"x":988,"y":974,"score":34,"level":0},{"x":1204,"y":974,"score":50,"level":0},{"x":1322,"y":974,"score":45,"level":0},{"x":434,"y":975,"score":73,"level":0},{"x":471,"y":975,"score":32,"level":0},{"x":758,"y":975,"score":26,"level":0},{"x":896,"y":975,"score":64,"level":0},{"x":915,"y":975,"score":66,"level":0},{"x":972,"y":975,"score":70,"level":0},{"x":996,"y":975,"score":68,"level":0},{"x":1005,"y":975,"score":30,"level":0},{"x":404,"y":976,"score":36,"level":0},{"x":580,"y":976,"score":57,"level":0},{"x":699,"y":976,"score":77,"level":0},{"x":738,"y":976,"score":29,"level":0},{"x":743,"y":976,"score":84,"level":0},{"x":835,"y":976,"score":128,"level":0},{"x":850,"y":976,"score":89,"level":0},{"x":865,"y":976,"score":88,"level":0},{"x":933,"y":976,"score":26,"level":0},{"x":979,"y":976,"score":28,"level":0},{"x":1062,"y":976,"score":70,"level":0},{"x":1463,"y":976,"score":27,"level":0},{"x":1468,"y":976,"score":29,"level":0},{"x":453,"y":977,"score":53,"level":0},{"x":463,"y":977,"score":44,"level":0},{"x":564,"y":977,"score":88,"level":0},{"x":635,"y":977,"score":65,"level":0},{"x":669,"y":977,"score":36,"level":0},{"x":773,"y":977,"score":122,"level":0},{"x":795,"y":977,"score":64,"level":0},{"x":884,"y":977,"score":44,"level":0},{"x":918,"y":977,"score":45,"level":0},{"x":941,"y":977,"score":53,"level":0},{"x":1244,"y":977,"score":34,"level":0},{"x":409,"y":978,"score":44,"level":0},{"x":443,"y":978,"score":36,"level":0},{"x":534,"y":978,"score":105,"level":0},{"x":623,"y":978,"score":63,"level":0},{"x":648,"y":978,"score":53,"level":0},{"x":677,"y":978,"score":54,"level":0},{"x":768,"y":978,"score":35,"level":0},{"x":920,"y":978,"score":119,"level":0},{"x":956,"y":978,"score":65,"level":0},{"x":1149,"y":978,"score":42,"level":0},{"x":1235,"y":978,"score":30,"level":0},{"x":1336,"y":978,"score":37,"level":0},{"x":1424,"y":978,"score":31,"level":0},{"x":1426,"y":978,"score":26,"level":0},{"x":1433,"y":978,"score":43,"level":0},{"x":399,"y":979,"score":138,"level":0},{"x":485,"y":979,"score":122,"level":0},{"x":541,"y":979,"score":113,"level":0},{"x":561,"y":979,"score":76,"level":0},{"x":597,"y":979,"score":38,"level":0},{"x":663,"y":979,"score":95,"level":0},{"x":722,"y":979,"score":26,"level":0},{"x":785,"y":979,"score":54,"level":0},{"x":840,"y":979,"score":123,"level":0},{"x":926,"y":979,"score":79,"level":0},{"x":935,"y":979,"score":37,"level":0},{"x":1103,"y":979,"score":34,"level":0},{"x":1115,"y":979,"score":41,"level":0},{"x":1124,"y":979,"score":141,"level":0},{"x":1224,"y":979,"score":76,"level":0},{"x":1227,"y":979,"score":41,"level":0},{"x":1292,"y":979,"score":27,"level":0},{"x":1320,"y":979,"score":58,"level":0},{"x":1387,"y":979,"score":66,"level":0},{"x":1486,"y":979,"score":42,"level":0},{"x":392,"y":980,"score":119,"level":0},{"x":601,"y":980,"score":38,"level":0},{"x":799,"y":980,"score":55,"level":0},{"x":810,"y":980,"score":37,"level":0},{"x":898,"y":980,"score":71,"level":0},{"x":946,"y":980,"score":146,"level":0},{"x":1019,"y":980,"score":132,"level":0},{"x":1024,"y":980,"score":110,"level":0},{"x":1216,"y":980,"score":51,"level":0},{"x":1262,"y":980,"score":106,"level":0},{"x":374,"y":981,"score":30,"level":0},{"x":406,"y":981,"score":63,"level":0},{"x":448,"y":981,"score":46,"level":0},{"x":559,"y":981,"score":67,"level":0},{"x":567,"y":981,"score":75,"level":0},{"x":620,"y":981,"score":33,"level":0},{"x":764,"y":981,"score":40,"level":0},{"x":802,"y":981,"score":63,"level":0},{"x":832,"y":981,"score":128,"level":0},{"x":853,"y":981,"score":45,"level":0},{"x":910,"y":981,"score":52,"level":0},{"x":943,"y":981,"score":53,"level":0},{"x":1054,"y":981,"score":35,"level":0},{"x":1067,"y":981,"score":27,"level":0},{"x":1073,"y":981,"score":42,"level":0},{"x":1201,"y":981,"score":38,"level":0},{"x":1231,"y":981,"score":78,"level":0},{"x":1256,"y":981,"score":26,"level":0},{"x":1306,"y":981,"score":38,"level":0},{"x":385,"y":982,"score":31,"level":0},{"x":440,"y":982,"score":33,"level":0},{"x":500,"y":982,"score":32,"level":0},{"x":589,"y":982,"score":58,"level":0},{"x":773,"y":982,"score":87,"level":0},{"x":779,"y":982,"score":27,"level":0},{"x":816,"y":982,"score":59,"level":0},{"x":979,"y":982,"score":62,"level":0},{"x":1166,"y":982,"score":64,"level":0},{"x":1274,"y":982,"score":84,"level":0},{"x":1351,"y":982,"score":30,"level":0},{"x":1373,"y":982,"score":76,"level":0},{"x":1461,"y":982,"score":59,"level":0},{"x":1487,"y":982,"score":26,"level":0},{"x":434,"y":983,"score":115,"level":0},{"x":548,"y":983,"score":58,"level":0},{"x":637,"y":983,"score":52,"level":0},{"x":676,"y":983,"score":60,"level":0},{"x":860,"y":983,"score":52,"level":0},{"x":932,"y":983,"score":56,"level":0},{"x":939,"y":983,"score":172,"level":0},{"x":961,"y":983,"score":50,"level":0},{"x":1015,"y":983,"score":118,"level":0},{"x":1035,"y":983,"score":31,"level":0},{"x":1063,"y":983,"score":39,"level":0},{"x":1080,"y":983,"score":52,"level":0},{"x":1090,"y":983,"score":96,"level":0},{"x":1096,"y":983,"score":47,"level":0},{"x":1175,"y":983,"score":32,"level":0},{"x":1237,"y":983,"score":28,"level":0},{"x":380,"y":984,"score":50,"level":0},{"x":541,"y":984,"score":159,"level":0},{"x":553,"y":984,"score":83,"level":0},{"x":581,"y":984,"score":61,"level":0},{"x":630,"y":984,"score":29,"level":0},{"x":730,"y":984,"score":40,"level":0},{"x":743,"y":984,"score":85,"level":0},{"x":762,"y":984,"score":43,"level":0},{"x":890,"y":984,"score":97,"level":0},{"x":1006,"y":984,"score":81,"level":0},{"x":1144,"y":984,"score":159,"level":0},{"x":1285,"y":984,"score":37,"level":0},{"x":1341,"y":984,"score":30,"level":0},{"x":399,"y":985,"score":95,"level":0},{"x":528,"y":985,"score":38,"level":0},{"x":611,"y":985,"score":60,"level":0},{"x":749,"y":985,"score":158,"level":0},{"x":821,"y":985,"score":153,"level":0},{"x":989,"y":985,"score":46,"level":0},{"x":1019,"y":985,"score":45,"level":0},{"x":1104,"y":985,"score":132,"level":0},{"x":1110,"y":985,"score":99,"level":0},{"x":1136,"y":985,"score":63,"level":0},{"x":1190,"y":985,"score":26,"level":0},{"x":1309,"y":985,"score":33,"level":0},{"x":1357,"y":985,"score":31,"level":0},{"x":1431,"y":985,"score":32,"level":0},{"x":1436,"y":985,"score":69,"level":0},{"x":569,"y":986,"score":54,"level":0},{"x":595,"y":986,"score":183,"level":0},{"x":601,"y":986,"score":178,"level":0},{"x":661,"y":986,"score":114,"level":0},{"x":667,"y":986,"score":35,"level":0},{"x":697,"y":986,"score":75,"level":0},{"x":1045,"y":986,"score":72,"level":0},{"x":1180,"y":986,"score":36,"level":0},{"x":1348,"y":986,"score":64,"level":0},{"x":417,"y":987,"score":62,"level":0},{"x":555,"y":987,"score":82,"level":0},{"x":641,"y":987,"score":36,"level":0},{"x":683,"y":987,"score":76,"level":0},{"x":767,"y":987,"score":149,"level":0},{"x":778,"y":987,"score":42,"level":0},{"x":812,"y":987,"score":142,"level":0},{"x":855,"y":987,"score":77,"level":0},{"x":879,"y":987,"score":113,"level":0},{"x":1011,"y":987,"score":56,"level":0},{"x":1047,"y":987,"score":68,"level":0},{"x":1225,"y":987,"score":186,"level":0},{"x":1230,"y":987,"score":97,"level":0},{"x":1400,"y":987,"score":48,"level":0},{"x":1415,"y":987,"score":28,"level":0},{"x":407,"y":988,"score":103,"level":0},{"x":441,"y":988,"score":71,"level":0},{"x":499,"y":988,"score":84,"level":0},{"x":708,"y":988,"score":61,"level":0},{"x":754,"y":988,"score":147,"level":0},{"x":797,"y":988,"score":51,"level":0},{"x":825,"y":988,"score":96,"level":0},{"x":832,"y":988,"score":30,"level":0},{"x":840,"y":988,"score":40,"level":0},{"x":959,"y":988,"score":43,"level":0},{"x":997,"y":988,"score":95,"level":0},{"x":1090,"y":988,"score":83,"level":0},{"x":1096,"y":988,"score":45,"level":0},{"x":1127,"y":988,"score":71,"level":0},{"x":1140,"y":988,"score":36,"level":0},{"x":1213,"y":988,"score":114,"level":0},{"x":1442,"y":988,"score":29,"level":0},{"x":1448,"y":988,"score":28,"level":0},{"x":1486,"y":988,"score":26,"level":0},{"x":381,"y":989,"score":180,"level":0},{"x":530,"y":989,"score":52,"level":0},{"x":543,"y":989,"score":59,"level":0},{"x":559,"y":989,"score":66,"level":0},{"x":723,"y":989,"score":49,"level":0},{"x":860,"y":989,"score":120,"level":0},{"x":972,"y":989,"score":31,"level":0},{"x":1023,"y":989,"score":114,"level":0},{"x":1051,"y":989,"score":42,"level":0},{"x":1106,"y":989,"score":70,"level":0},{"x":1165,"y":989,"score":78,"level":0},{"x":1208,"y":989,"score":28,"level":0},{"x":1289,"y":989,"score":74,"level":0},{"x":1295,"y":989,"score":54,"level":0},{"x":1317,"y":989,"score":92,"level":0},{"x":1343,"y":989,"score":27,"level":0},{"x":387,"y":990,"score":42,"level":0},{"x":434,"y":990,"score":119,"level":0},{"x":607,"y":990,"score":43,"level":0},{"x":700,"y":990,"score":78,"level":0},{"x":736,"y":990,"score":73,"level":0},{"x":892,"y":990,"score":130,"level":0},{"x":1035,"y":990,"score":73,"level":0},{"x":1100,"y":990,"score":104,"level":0},{"x":1150,"y":990,"score":118,"level":0},{"x":425,"y":991,"score":65,"level":0},{"x":546,"y":991,"score":59,"level":0},{"x":595,"y":991,"score":102,"level":0},{"x":747,"y":991,"score":78,"level":0},{"x":773,"y":991,"score":76,"level":0},{"x":816,"y":991,"score":115,"level":0},{"x":895,"y":991,"score":111,"level":0},{"x":922,"y":991,"score":45,"level":0},{"x":990,"y":991,"score":90,"level":0},{"x":1021,"y":991,"score":105,"level":0},{"x":1042,"y":991,"score":122,"level":0},{"x":1059,"y":991,"score":56,"level":0},{"x":1157,"y":991,"score":38,"level":0},{"x":1172,"y":991,"score":26,"level":0},{"x":1192,"y":991,"score":48,"level":0},{"x":1203,"y":991,"score":34,"level":0},{"x":1228,"y":991,"score":95,"level":0},{"x":1357,"y":991,"score":44,"level":0},{"x":1465,"y":991,"score":44,"level":0},{"x":487,"y":992,"score":112,"level":0},{"x":572,"y":992,"score":102,"level":0},{"x":584,"y":992,"score":52,"level":0},{"x":660,"y":992,"score":146,"level":0},{"x":696,"y":992,"score":35,"level":0},{"x":769,"y":992,"score":64,"level":0},{"x":950,"y":992,"score":73,"level":0},{"x":1223,"y":992,"score":87,"level":0},{"x":1274,"y":992,"score":30,"level":0},{"x":1281,"y":992,"score":64,"level":0},{"x":1351,"y":992,"score":26,"level":0},{"x":413,"y":993,"score":40,"level":0},{"x":550,"y":993,"score":92,"level":0},{"x":810,"y":993,"score":80,"level":0},{"x":958,"y":993,"score":49,"level":0},{"x":1025,"y":993,"score":112,"level":0},{"x":1082,"y":993,"score":121,"level":0},{"x":1109,"y":993,"score":96,"level":0},{"x":1128,"y":993,"score":46,"level":0},{"x":1214,"y":993,"score":28,"level":0},{"x":1262,"y":993,"score":30,"level":0},{"x":1302,"y":993,"score":140,"level":0},{"x":372,"y":994,"score":44,"level":0},{"x":392,"y":994,"score":75,"level":0},{"x":397,"y":994,"score":30,"level":0},{"x":403,"y":994,"score":36,"level":0},{"x":427,"y":994,"score":43,"level":0},{"x":433,"y":994,"score":31,"level":0},{"x":439,"y":994,"score":48,"level":0},{"x":541,"y":994,"score":100,"level":0},{"x":575,"y":994,"score":39,"level":0},{"x":580,"y":994,"score":59,"level":0},{"x":611,"y":994,"score":43,"level":0},{"x":625,"y":994,"score":46,"level":0},{"x":666,"y":994,"score":28,"level":0},{"x":727,"y":994,"score":42,"level":0},{"x":755,"y":994,"score":64,"level":0},{"x":763,"y":994,"score":52,"level":0},{"x":779,"y":994,"score":28,"level":0},{"x":853,"y":994,"score":34,"level":0},{"x":870,"y":994,"score":60,"level":0},{"x":886,"y":994,"score":54,"level":0},{"x":945,"y":994,"score":44,"level":0},{"x":980,"y":994,"score":55,"level":0},{"x":988,"y":994,"score":106,"level":0},{"x":999,"y":994,"score":137,"level":0},{"x":1007,"y":994,"score":64,"level":0},{"x":1015,"y":994,"score":54,"level":0},{"x":1038,"y":994,"score":45,"level":0},{"x":1078,"y":994,"score":63,"level":0},{"x":1090,"y":994,"score":30,"level":0},{"x":1143,"y":994,"score":32,"level":0},{"x":1152,"y":994,"score":37,"level":0},{"x":1379,"y":994,"score":70,"level":0},{"x":1385,"y":994,"score":84,"level":0},{"x":1391,"y":994,"score":46,"level":0}]}
});
require.register("noflo-noflo-image/spec/fixtures/textRegion/3010029968_02742a1aec_b.jpg.corners.json", function(exports, require, module){
module.exports = {"corners":[{"x":340,"y":172,"score":40,"level":0},{"x":703,"y":201,"score":51,"level":0},{"x":642,"y":203,"score":34,"level":0},{"x":660,"y":203,"score":30,"level":0},{"x":774,"y":205,"score":35,"level":0},{"x":644,"y":207,"score":79,"level":0},{"x":770,"y":207,"score":33,"level":0},{"x":615,"y":209,"score":34,"level":0},{"x":714,"y":209,"score":30,"level":0},{"x":659,"y":211,"score":26,"level":0},{"x":691,"y":211,"score":34,"level":0},{"x":716,"y":211,"score":46,"level":0},{"x":636,"y":213,"score":45,"level":0},{"x":684,"y":213,"score":43,"level":0},{"x":699,"y":214,"score":29,"level":0},{"x":709,"y":214,"score":48,"level":0},{"x":670,"y":216,"score":32,"level":0},{"x":629,"y":217,"score":29,"level":0},{"x":643,"y":218,"score":38,"level":0},{"x":669,"y":218,"score":54,"level":0},{"x":689,"y":218,"score":36,"level":0},{"x":637,"y":220,"score":30,"level":0},{"x":662,"y":220,"score":60,"level":0},{"x":701,"y":220,"score":44,"level":0},{"x":619,"y":221,"score":28,"level":0},{"x":699,"y":221,"score":26,"level":0},{"x":673,"y":222,"score":30,"level":0},{"x":671,"y":223,"score":55,"level":0},{"x":719,"y":223,"score":33,"level":0},{"x":725,"y":223,"score":52,"level":0},{"x":731,"y":223,"score":32,"level":0},{"x":709,"y":224,"score":66,"level":0},{"x":620,"y":227,"score":51,"level":0},{"x":636,"y":227,"score":27,"level":0},{"x":604,"y":228,"score":30,"level":0},{"x":752,"y":229,"score":34,"level":0},{"x":683,"y":230,"score":42,"level":0},{"x":661,"y":231,"score":32,"level":0},{"x":675,"y":231,"score":50,"level":0},{"x":703,"y":232,"score":81,"level":0},{"x":708,"y":232,"score":50,"level":0},{"x":714,"y":232,"score":52,"level":0},{"x":615,"y":233,"score":46,"level":0},{"x":677,"y":233,"score":38,"level":0},{"x":633,"y":234,"score":38,"level":0},{"x":662,"y":234,"score":38,"level":0},{"x":691,"y":236,"score":30,"level":0},{"x":747,"y":236,"score":64,"level":0},{"x":631,"y":237,"score":30,"level":0},{"x":638,"y":237,"score":42,"level":0},{"x":708,"y":237,"score":54,"level":0},{"x":714,"y":237,"score":29,"level":0},{"x":738,"y":237,"score":178,"level":0},{"x":644,"y":238,"score":30,"level":0},{"x":699,"y":239,"score":46,"level":0},{"x":653,"y":242,"score":58,"level":0},{"x":694,"y":242,"score":32,"level":0},{"x":706,"y":243,"score":42,"level":0},{"x":713,"y":243,"score":97,"level":0},{"x":733,"y":243,"score":62,"level":0},{"x":743,"y":243,"score":72,"level":0},{"x":620,"y":244,"score":27,"level":0},{"x":676,"y":244,"score":36,"level":0},{"x":750,"y":246,"score":104,"level":0},{"x":725,"y":247,"score":34,"level":0},{"x":749,"y":248,"score":76,"level":0},{"x":642,"y":250,"score":35,"level":0},{"x":743,"y":250,"score":26,"level":0},{"x":751,"y":251,"score":105,"level":0},{"x":650,"y":252,"score":50,"level":0},{"x":684,"y":253,"score":34,"level":0},{"x":678,"y":254,"score":55,"level":0},{"x":615,"y":255,"score":58,"level":0},{"x":675,"y":255,"score":43,"level":0},{"x":754,"y":256,"score":39,"level":0},{"x":624,"y":257,"score":31,"level":0},{"x":643,"y":257,"score":46,"level":0},{"x":650,"y":257,"score":32,"level":0},{"x":718,"y":259,"score":36,"level":0},{"x":702,"y":260,"score":42,"level":0},{"x":737,"y":261,"score":49,"level":0},{"x":698,"y":262,"score":32,"level":0},{"x":729,"y":262,"score":35,"level":0},{"x":652,"y":267,"score":44,"level":0},{"x":730,"y":269,"score":55,"level":0},{"x":722,"y":270,"score":77,"level":0},{"x":698,"y":271,"score":47,"level":0},{"x":614,"y":276,"score":32,"level":0},{"x":742,"y":277,"score":37,"level":0},{"x":738,"y":280,"score":76,"level":0},{"x":627,"y":281,"score":37,"level":0},{"x":672,"y":285,"score":26,"level":0},{"x":710,"y":287,"score":33,"level":0},{"x":738,"y":291,"score":87,"level":0},{"x":594,"y":292,"score":42,"level":0},{"x":703,"y":292,"score":93,"level":0},{"x":722,"y":293,"score":26,"level":0},{"x":688,"y":294,"score":53,"level":0},{"x":686,"y":296,"score":28,"level":0},{"x":694,"y":296,"score":42,"level":0},{"x":585,"y":297,"score":84,"level":0},{"x":704,"y":297,"score":90,"level":0},{"x":717,"y":298,"score":77,"level":0},{"x":655,"y":300,"score":34,"level":0},{"x":714,"y":300,"score":82,"level":0},{"x":727,"y":300,"score":79,"level":0},{"x":733,"y":300,"score":158,"level":0},{"x":640,"y":301,"score":31,"level":0},{"x":659,"y":302,"score":40,"level":0},{"x":694,"y":303,"score":73,"level":0},{"x":674,"y":304,"score":28,"level":0},{"x":703,"y":304,"score":40,"level":0},{"x":662,"y":305,"score":65,"level":0},{"x":717,"y":305,"score":26,"level":0},{"x":616,"y":307,"score":74,"level":0},{"x":683,"y":308,"score":26,"level":0},{"x":629,"y":309,"score":26,"level":0},{"x":731,"y":309,"score":51,"level":0},{"x":605,"y":310,"score":27,"level":0},{"x":701,"y":311,"score":109,"level":0},{"x":621,"y":312,"score":27,"level":0},{"x":658,"y":312,"score":28,"level":0},{"x":690,"y":312,"score":39,"level":0},{"x":692,"y":313,"score":50,"level":0},{"x":635,"y":314,"score":43,"level":0},{"x":694,"y":314,"score":63,"level":0},{"x":739,"y":314,"score":60,"level":0},{"x":717,"y":316,"score":31,"level":0},{"x":620,"y":318,"score":39,"level":0},{"x":605,"y":319,"score":46,"level":0},{"x":600,"y":320,"score":96,"level":0},{"x":640,"y":321,"score":36,"level":0},{"x":720,"y":321,"score":76,"level":0},{"x":737,"y":322,"score":72,"level":0},{"x":712,"y":323,"score":139,"level":0},{"x":608,"y":325,"score":36,"level":0},{"x":690,"y":326,"score":35,"level":0},{"x":636,"y":327,"score":35,"level":0},{"x":639,"y":327,"score":26,"level":0},{"x":719,"y":327,"score":33,"level":0},{"x":706,"y":329,"score":32,"level":0},{"x":711,"y":330,"score":131,"level":0},{"x":730,"y":331,"score":94,"level":0},{"x":634,"y":333,"score":76,"level":0},{"x":720,"y":334,"score":34,"level":0},{"x":606,"y":335,"score":39,"level":0},{"x":740,"y":337,"score":30,"level":0},{"x":614,"y":338,"score":31,"level":0},{"x":681,"y":342,"score":26,"level":0},{"x":712,"y":343,"score":42,"level":0},{"x":736,"y":343,"score":72,"level":0},{"x":603,"y":345,"score":32,"level":0},{"x":721,"y":347,"score":34,"level":0},{"x":704,"y":348,"score":124,"level":0},{"x":723,"y":348,"score":40,"level":0},{"x":728,"y":348,"score":44,"level":0},{"x":634,"y":350,"score":63,"level":0},{"x":697,"y":350,"score":55,"level":0},{"x":593,"y":351,"score":36,"level":0},{"x":720,"y":352,"score":31,"level":0},{"x":722,"y":353,"score":30,"level":0},{"x":731,"y":353,"score":206,"level":0},{"x":701,"y":356,"score":34,"level":0},{"x":725,"y":360,"score":38,"level":0},{"x":693,"y":363,"score":93,"level":0},{"x":719,"y":368,"score":52,"level":0},{"x":711,"y":372,"score":68,"level":0},{"x":707,"y":377,"score":52,"level":0},{"x":603,"y":379,"score":45,"level":0},{"x":610,"y":379,"score":110,"level":0},{"x":617,"y":380,"score":76,"level":0},{"x":681,"y":381,"score":31,"level":0},{"x":704,"y":381,"score":40,"level":0},{"x":627,"y":382,"score":26,"level":0},{"x":588,"y":384,"score":39,"level":0},{"x":609,"y":385,"score":85,"level":0},{"x":671,"y":385,"score":26,"level":0},{"x":670,"y":390,"score":44,"level":0},{"x":679,"y":391,"score":70,"level":0},{"x":615,"y":392,"score":31,"level":0},{"x":669,"y":395,"score":42,"level":0},{"x":622,"y":396,"score":143,"level":0},{"x":677,"y":396,"score":46,"level":0},{"x":577,"y":397,"score":63,"level":0},{"x":617,"y":397,"score":39,"level":0},{"x":685,"y":398,"score":106,"level":0},{"x":659,"y":400,"score":71,"level":0},{"x":621,"y":402,"score":53,"level":0},{"x":635,"y":402,"score":30,"level":0},{"x":672,"y":402,"score":29,"level":0},{"x":625,"y":403,"score":48,"level":0},{"x":638,"y":403,"score":33,"level":0},{"x":646,"y":406,"score":36,"level":0},{"x":721,"y":408,"score":101,"level":0},{"x":658,"y":409,"score":86,"level":0},{"x":718,"y":412,"score":59,"level":0},{"x":622,"y":415,"score":34,"level":0},{"x":721,"y":417,"score":33,"level":0},{"x":726,"y":417,"score":33,"level":0},{"x":711,"y":420,"score":82,"level":0},{"x":707,"y":424,"score":28,"level":0},{"x":813,"y":424,"score":48,"level":0},{"x":725,"y":429,"score":33,"level":0},{"x":728,"y":429,"score":42,"level":0},{"x":629,"y":430,"score":48,"level":0},{"x":698,"y":430,"score":58,"level":0},{"x":707,"y":430,"score":36,"level":0},{"x":635,"y":432,"score":38,"level":0},{"x":726,"y":432,"score":83,"level":0},{"x":706,"y":434,"score":38,"level":0},{"x":723,"y":438,"score":57,"level":0},{"x":726,"y":438,"score":44,"level":0},{"x":706,"y":439,"score":34,"level":0},{"x":836,"y":440,"score":36,"level":0},{"x":639,"y":441,"score":52,"level":0},{"x":724,"y":441,"score":50,"level":0},{"x":631,"y":443,"score":33,"level":0},{"x":783,"y":443,"score":27,"level":0},{"x":841,"y":444,"score":38,"level":0},{"x":725,"y":445,"score":58,"level":0},{"x":730,"y":445,"score":26,"level":0},{"x":630,"y":447,"score":27,"level":0},{"x":650,"y":447,"score":28,"level":0},{"x":707,"y":449,"score":33,"level":0},{"x":635,"y":450,"score":35,"level":0},{"x":641,"y":450,"score":36,"level":0},{"x":728,"y":452,"score":35,"level":0},{"x":652,"y":453,"score":27,"level":0},{"x":645,"y":454,"score":69,"level":0},{"x":726,"y":454,"score":30,"level":0},{"x":731,"y":454,"score":32,"level":0},{"x":640,"y":455,"score":97,"level":0},{"x":658,"y":455,"score":47,"level":0},{"x":690,"y":462,"score":51,"level":0},{"x":650,"y":464,"score":74,"level":0},{"x":654,"y":475,"score":40,"level":0},{"x":649,"y":476,"score":74,"level":0},{"x":652,"y":477,"score":29,"level":0},{"x":735,"y":477,"score":32,"level":0},{"x":650,"y":478,"score":32,"level":0},{"x":648,"y":480,"score":55,"level":0},{"x":654,"y":482,"score":58,"level":0},{"x":650,"y":485,"score":49,"level":0},{"x":735,"y":485,"score":73,"level":0},{"x":737,"y":485,"score":60,"level":0},{"x":651,"y":487,"score":30,"level":0},{"x":658,"y":487,"score":30,"level":0},{"x":680,"y":489,"score":96,"level":0},{"x":662,"y":492,"score":66,"level":0},{"x":674,"y":492,"score":74,"level":0},{"x":734,"y":492,"score":36,"level":0},{"x":654,"y":493,"score":52,"level":0},{"x":723,"y":493,"score":32,"level":0},{"x":731,"y":493,"score":31,"level":0},{"x":679,"y":494,"score":141,"level":0},{"x":715,"y":494,"score":78,"level":0},{"x":693,"y":495,"score":26,"level":0},{"x":663,"y":497,"score":38,"level":0},{"x":676,"y":497,"score":42,"level":0},{"x":696,"y":497,"score":35,"level":0},{"x":715,"y":497,"score":60,"level":0},{"x":701,"y":498,"score":75,"level":0},{"x":723,"y":498,"score":52,"level":0},{"x":679,"y":499,"score":55,"level":0},{"x":706,"y":499,"score":47,"level":0},{"x":660,"y":501,"score":26,"level":0},{"x":684,"y":502,"score":325,"level":0},{"x":678,"y":503,"score":79,"level":0},{"x":691,"y":503,"score":36,"level":0},{"x":653,"y":506,"score":34,"level":0},{"x":683,"y":510,"score":52,"level":0},{"x":694,"y":513,"score":36,"level":0},{"x":678,"y":523,"score":29,"level":0},{"x":697,"y":527,"score":28,"level":0},{"x":764,"y":530,"score":81,"level":0},{"x":757,"y":532,"score":349,"level":0},{"x":762,"y":535,"score":41,"level":0},{"x":766,"y":538,"score":61,"level":0},{"x":755,"y":539,"score":233,"level":0},{"x":775,"y":540,"score":38,"level":0},{"x":769,"y":541,"score":58,"level":0},{"x":777,"y":542,"score":37,"level":0},{"x":759,"y":543,"score":79,"level":0},{"x":771,"y":543,"score":59,"level":0},{"x":754,"y":545,"score":120,"level":0},{"x":734,"y":546,"score":29,"level":0},{"x":810,"y":546,"score":26,"level":0},{"x":764,"y":548,"score":38,"level":0},{"x":783,"y":548,"score":32,"level":0},{"x":772,"y":549,"score":51,"level":0},{"x":778,"y":550,"score":59,"level":0},{"x":774,"y":551,"score":48,"level":0},{"x":1002,"y":552,"score":32,"level":0},{"x":776,"y":553,"score":42,"level":0},{"x":781,"y":553,"score":59,"level":0},{"x":770,"y":554,"score":43,"level":0},{"x":792,"y":557,"score":83,"level":0},{"x":786,"y":558,"score":79,"level":0},{"x":547,"y":560,"score":34,"level":0},{"x":777,"y":561,"score":45,"level":0},{"x":533,"y":562,"score":26,"level":0},{"x":933,"y":562,"score":48,"level":0},{"x":779,"y":563,"score":51,"level":0},{"x":791,"y":563,"score":57,"level":0},{"x":789,"y":565,"score":46,"level":0},{"x":782,"y":566,"score":55,"level":0},{"x":784,"y":568,"score":62,"level":0},{"x":934,"y":569,"score":34,"level":0},{"x":839,"y":571,"score":98,"level":0},{"x":941,"y":571,"score":122,"level":0},{"x":788,"y":572,"score":30,"level":0},{"x":841,"y":572,"score":116,"level":0},{"x":814,"y":573,"score":34,"level":0},{"x":834,"y":574,"score":122,"level":0},{"x":933,"y":574,"score":133,"level":0},{"x":939,"y":575,"score":34,"level":0},{"x":508,"y":576,"score":27,"level":0},{"x":521,"y":576,"score":35,"level":0},{"x":806,"y":577,"score":77,"level":0},{"x":842,"y":581,"score":69,"level":0},{"x":522,"y":582,"score":26,"level":0},{"x":825,"y":583,"score":114,"level":0},{"x":841,"y":587,"score":62,"level":0},{"x":805,"y":589,"score":173,"level":0},{"x":811,"y":589,"score":91,"level":0},{"x":554,"y":591,"score":28,"level":0},{"x":846,"y":591,"score":33,"level":0},{"x":558,"y":592,"score":36,"level":0},{"x":839,"y":592,"score":46,"level":0},{"x":513,"y":593,"score":30,"level":0},{"x":843,"y":593,"score":54,"level":0},{"x":805,"y":595,"score":61,"level":0},{"x":809,"y":597,"score":137,"level":0},{"x":846,"y":597,"score":79,"level":0},{"x":816,"y":598,"score":164,"level":0},{"x":830,"y":598,"score":65,"level":0},{"x":560,"y":599,"score":34,"level":0},{"x":687,"y":599,"score":30,"level":0},{"x":621,"y":600,"score":39,"level":0},{"x":685,"y":601,"score":32,"level":0},{"x":803,"y":602,"score":48,"level":0},{"x":814,"y":602,"score":106,"level":0},{"x":825,"y":602,"score":208,"level":0},{"x":572,"y":603,"score":77,"level":0},{"x":597,"y":603,"score":71,"level":0},{"x":616,"y":604,"score":70,"level":0},{"x":809,"y":604,"score":215,"level":0},{"x":830,"y":604,"score":26,"level":0},{"x":836,"y":604,"score":163,"level":0},{"x":798,"y":607,"score":100,"level":0},{"x":805,"y":607,"score":150,"level":0},{"x":824,"y":607,"score":308,"level":0},{"x":631,"y":608,"score":124,"level":0},{"x":818,"y":608,"score":232,"level":0},{"x":478,"y":609,"score":32,"level":0},{"x":615,"y":610,"score":45,"level":0},{"x":626,"y":610,"score":38,"level":0},{"x":815,"y":611,"score":180,"level":0},{"x":836,"y":611,"score":42,"level":0},{"x":844,"y":611,"score":110,"level":0},{"x":619,"y":612,"score":99,"level":0},{"x":674,"y":612,"score":35,"level":0},{"x":793,"y":612,"score":80,"level":0},{"x":804,"y":612,"score":162,"level":0},{"x":852,"y":612,"score":182,"level":0},{"x":649,"y":613,"score":57,"level":0},{"x":810,"y":613,"score":45,"level":0},{"x":589,"y":614,"score":30,"level":0},{"x":638,"y":614,"score":34,"level":0},{"x":798,"y":614,"score":234,"level":0},{"x":567,"y":615,"score":38,"level":0},{"x":581,"y":615,"score":53,"level":0},{"x":642,"y":615,"score":53,"level":0},{"x":823,"y":615,"score":166,"level":0},{"x":644,"y":616,"score":43,"level":0},{"x":664,"y":616,"score":33,"level":0},{"x":789,"y":616,"score":135,"level":0},{"x":795,"y":616,"score":183,"level":0},{"x":814,"y":616,"score":167,"level":0},{"x":843,"y":617,"score":32,"level":0},{"x":576,"y":619,"score":30,"level":0},{"x":833,"y":619,"score":228,"level":0},{"x":805,"y":620,"score":202,"level":0},{"x":821,"y":620,"score":54,"level":0},{"x":851,"y":620,"score":177,"level":0},{"x":659,"y":621,"score":272,"level":0},{"x":783,"y":621,"score":36,"level":0},{"x":793,"y":621,"score":85,"level":0},{"x":610,"y":622,"score":50,"level":0},{"x":816,"y":622,"score":286,"level":0},{"x":788,"y":623,"score":212,"level":0},{"x":621,"y":624,"score":46,"level":0},{"x":813,"y":624,"score":155,"level":0},{"x":832,"y":624,"score":118,"level":0},{"x":802,"y":625,"score":87,"level":0},{"x":843,"y":625,"score":189,"level":0},{"x":857,"y":625,"score":76,"level":0},{"x":574,"y":626,"score":39,"level":0},{"x":599,"y":626,"score":38,"level":0},{"x":660,"y":626,"score":70,"level":0},{"x":808,"y":626,"score":53,"level":0},{"x":827,"y":626,"score":155,"level":0},{"x":615,"y":627,"score":34,"level":0},{"x":665,"y":627,"score":108,"level":0},{"x":777,"y":627,"score":106,"level":0},{"x":784,"y":627,"score":137,"level":0},{"x":797,"y":627,"score":224,"level":0},{"x":839,"y":627,"score":172,"level":0},{"x":823,"y":628,"score":168,"level":0},{"x":852,"y":628,"score":110,"level":0},{"x":610,"y":630,"score":61,"level":0},{"x":795,"y":630,"score":167,"level":0},{"x":811,"y":630,"score":211,"level":0},{"x":631,"y":631,"score":32,"level":0},{"x":806,"y":631,"score":230,"level":0},{"x":836,"y":631,"score":241,"level":0},{"x":857,"y":631,"score":53,"level":0},{"x":772,"y":632,"score":70,"level":0},{"x":782,"y":632,"score":178,"level":0},{"x":790,"y":632,"score":41,"level":0},{"x":822,"y":633,"score":134,"level":0},{"x":847,"y":633,"score":43,"level":0},{"x":777,"y":634,"score":220,"level":0},{"x":803,"y":634,"score":187,"level":0},{"x":816,"y":634,"score":148,"level":0},{"x":833,"y":634,"score":171,"level":0},{"x":793,"y":635,"score":88,"level":0},{"x":637,"y":636,"score":37,"level":0},{"x":768,"y":636,"score":123,"level":0},{"x":774,"y":636,"score":167,"level":0},{"x":813,"y":636,"score":120,"level":0},{"x":618,"y":637,"score":27,"level":0},{"x":631,"y":637,"score":138,"level":0},{"x":788,"y":637,"score":203,"level":0},{"x":829,"y":637,"score":251,"level":0},{"x":808,"y":638,"score":129,"level":0},{"x":818,"y":639,"score":111,"level":0},{"x":784,"y":640,"score":198,"level":0},{"x":802,"y":640,"score":249,"level":0},{"x":826,"y":640,"score":230,"level":0},{"x":833,"y":640,"score":142,"level":0},{"x":629,"y":641,"score":91,"level":0},{"x":762,"y":641,"score":41,"level":0},{"x":795,"y":641,"score":243,"level":0},{"x":845,"y":641,"score":47,"level":0},{"x":850,"y":641,"score":30,"level":0},{"x":577,"y":642,"score":45,"level":0},{"x":772,"y":642,"score":239,"level":0},{"x":812,"y":642,"score":199,"level":0},{"x":648,"y":643,"score":66,"level":0},{"x":767,"y":643,"score":192,"level":0},{"x":807,"y":643,"score":176,"level":0},{"x":793,"y":644,"score":219,"level":0},{"x":822,"y":644,"score":68,"level":0},{"x":648,"y":645,"score":56,"level":0},{"x":782,"y":645,"score":139,"level":0},{"x":635,"y":646,"score":33,"level":0},{"x":757,"y":646,"score":157,"level":0},{"x":764,"y":646,"score":181,"level":0},{"x":803,"y":646,"score":158,"level":0},{"x":629,"y":647,"score":45,"level":0},{"x":777,"y":647,"score":211,"level":0},{"x":798,"y":647,"score":220,"level":0},{"x":817,"y":649,"score":222,"level":0},{"x":774,"y":650,"score":227,"level":0},{"x":791,"y":650,"score":268,"level":0},{"x":752,"y":651,"score":57,"level":0},{"x":762,"y":651,"score":168,"level":0},{"x":785,"y":651,"score":240,"level":0},{"x":813,"y":651,"score":106,"level":0},{"x":636,"y":652,"score":74,"level":0},{"x":802,"y":652,"score":244,"level":0},{"x":665,"y":653,"score":40,"level":0},{"x":757,"y":653,"score":218,"level":0},{"x":783,"y":653,"score":188,"level":0},{"x":797,"y":653,"score":186,"level":0},{"x":678,"y":654,"score":32,"level":0},{"x":772,"y":655,"score":179,"level":0},{"x":810,"y":655,"score":248,"level":0},{"x":671,"y":656,"score":47,"level":0},{"x":747,"y":656,"score":142,"level":0},{"x":754,"y":656,"score":184,"level":0},{"x":819,"y":656,"score":102,"level":0},{"x":766,"y":657,"score":210,"level":0},{"x":792,"y":657,"score":120,"level":0},{"x":763,"y":659,"score":147,"level":0},{"x":781,"y":659,"score":210,"level":0},{"x":810,"y":660,"score":98,"level":0},{"x":641,"y":661,"score":59,"level":0},{"x":663,"y":661,"score":40,"level":0},{"x":742,"y":661,"score":86,"level":0},{"x":752,"y":661,"score":186,"level":0},{"x":775,"y":661,"score":204,"level":0},{"x":840,"y":661,"score":33,"level":0},{"x":790,"y":662,"score":157,"level":0},{"x":824,"y":662,"score":41,"level":0},{"x":831,"y":662,"score":47,"level":0},{"x":838,"y":662,"score":28,"level":0},{"x":650,"y":663,"score":60,"level":0},{"x":747,"y":663,"score":218,"level":0},{"x":733,"y":664,"score":28,"level":0},{"x":772,"y":664,"score":222,"level":0},{"x":785,"y":664,"score":172,"level":0},{"x":744,"y":665,"score":197,"level":0},{"x":762,"y":665,"score":178,"level":0},{"x":610,"y":666,"score":86,"level":0},{"x":737,"y":666,"score":168,"level":0},{"x":767,"y":666,"score":91,"level":0},{"x":782,"y":666,"score":110,"level":0},{"x":618,"y":667,"score":35,"level":0},{"x":668,"y":667,"score":50,"level":0},{"x":777,"y":667,"score":205,"level":0},{"x":675,"y":668,"score":293,"level":0},{"x":826,"y":668,"score":72,"level":0},{"x":754,"y":669,"score":229,"level":0},{"x":787,"y":669,"score":168,"level":0},{"x":771,"y":670,"score":292,"level":0},{"x":816,"y":670,"score":27,"level":0},{"x":732,"y":671,"score":56,"level":0},{"x":742,"y":671,"score":178,"level":0},{"x":781,"y":671,"score":169,"level":0},{"x":793,"y":671,"score":28,"level":0},{"x":737,"y":672,"score":234,"level":0},{"x":798,"y":672,"score":84,"level":0},{"x":762,"y":673,"score":189,"level":0},{"x":776,"y":673,"score":214,"level":0},{"x":752,"y":674,"score":137,"level":0},{"x":790,"y":674,"score":33,"level":0},{"x":519,"y":675,"score":78,"level":0},{"x":633,"y":675,"score":34,"level":0},{"x":728,"y":675,"score":71,"level":0},{"x":734,"y":675,"score":113,"level":0},{"x":747,"y":675,"score":112,"level":0},{"x":767,"y":675,"score":143,"level":0},{"x":773,"y":675,"score":117,"level":0},{"x":801,"y":675,"score":46,"level":0}]}
});

















require.alias("noflo-noflo/src/lib/Graph.js", "noflo-mirobot/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-mirobot/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-mirobot/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-mirobot/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-mirobot/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-mirobot/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-mirobot/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-mirobot/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-mirobot/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-mirobot/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-mirobot/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-mirobot/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-mirobot/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-mirobot/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-mirobot/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-mirobot/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-mirobot/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-mirobot/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-mirobot/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-mirobot/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-mirobot/deps/noflo/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("noflo-noflo-dom/components/AddClass.js", "noflo-mirobot/deps/noflo-dom/components/AddClass.js");
require.alias("noflo-noflo-dom/components/AppendChild.js", "noflo-mirobot/deps/noflo-dom/components/AppendChild.js");
require.alias("noflo-noflo-dom/components/CreateElement.js", "noflo-mirobot/deps/noflo-dom/components/CreateElement.js");
require.alias("noflo-noflo-dom/components/CreateFragment.js", "noflo-mirobot/deps/noflo-dom/components/CreateFragment.js");
require.alias("noflo-noflo-dom/components/GetAttribute.js", "noflo-mirobot/deps/noflo-dom/components/GetAttribute.js");
require.alias("noflo-noflo-dom/components/GetElement.js", "noflo-mirobot/deps/noflo-dom/components/GetElement.js");
require.alias("noflo-noflo-dom/components/HasClass.js", "noflo-mirobot/deps/noflo-dom/components/HasClass.js");
require.alias("noflo-noflo-dom/components/Listen.js", "noflo-mirobot/deps/noflo-dom/components/Listen.js");
require.alias("noflo-noflo-dom/components/ReadHtml.js", "noflo-mirobot/deps/noflo-dom/components/ReadHtml.js");
require.alias("noflo-noflo-dom/components/RemoveElement.js", "noflo-mirobot/deps/noflo-dom/components/RemoveElement.js");
require.alias("noflo-noflo-dom/components/SetAttribute.js", "noflo-mirobot/deps/noflo-dom/components/SetAttribute.js");
require.alias("noflo-noflo-dom/components/WriteHtml.js", "noflo-mirobot/deps/noflo-dom/components/WriteHtml.js");
require.alias("noflo-noflo-dom/components/RemoveClass.js", "noflo-mirobot/deps/noflo-dom/components/RemoveClass.js");
require.alias("noflo-noflo-dom/components/RequestAnimationFrame.js", "noflo-mirobot/deps/noflo-dom/components/RequestAnimationFrame.js");
require.alias("noflo-noflo-dom/index.js", "noflo-mirobot/deps/noflo-dom/index.js");
require.alias("noflo-noflo-dom/index.js", "noflo-dom/index.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-dom/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-dom/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-dom/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-dom/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-dom/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-dom/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-dom/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-dom/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-dom/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-dom/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-dom/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-dom/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-dom/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-dom/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-dom/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-dom/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-dom/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-dom/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-dom/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-dom/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-dom/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("noflo-noflo-core/components/Callback.js", "noflo-mirobot/deps/noflo-core/components/Callback.js");
require.alias("noflo-noflo-core/components/DisconnectAfterPacket.js", "noflo-mirobot/deps/noflo-core/components/DisconnectAfterPacket.js");
require.alias("noflo-noflo-core/components/Drop.js", "noflo-mirobot/deps/noflo-core/components/Drop.js");
require.alias("noflo-noflo-core/components/Group.js", "noflo-mirobot/deps/noflo-core/components/Group.js");
require.alias("noflo-noflo-core/components/Kick.js", "noflo-mirobot/deps/noflo-core/components/Kick.js");
require.alias("noflo-noflo-core/components/Merge.js", "noflo-mirobot/deps/noflo-core/components/Merge.js");
require.alias("noflo-noflo-core/components/Output.js", "noflo-mirobot/deps/noflo-core/components/Output.js");
require.alias("noflo-noflo-core/components/Repeat.js", "noflo-mirobot/deps/noflo-core/components/Repeat.js");
require.alias("noflo-noflo-core/components/RepeatAsync.js", "noflo-mirobot/deps/noflo-core/components/RepeatAsync.js");
require.alias("noflo-noflo-core/components/RepeatDelayed.js", "noflo-mirobot/deps/noflo-core/components/RepeatDelayed.js");
require.alias("noflo-noflo-core/components/SendNext.js", "noflo-mirobot/deps/noflo-core/components/SendNext.js");
require.alias("noflo-noflo-core/components/Split.js", "noflo-mirobot/deps/noflo-core/components/Split.js");
require.alias("noflo-noflo-core/components/RunInterval.js", "noflo-mirobot/deps/noflo-core/components/RunInterval.js");
require.alias("noflo-noflo-core/components/RunTimeout.js", "noflo-mirobot/deps/noflo-core/components/RunTimeout.js");
require.alias("noflo-noflo-core/components/MakeFunction.js", "noflo-mirobot/deps/noflo-core/components/MakeFunction.js");
require.alias("noflo-noflo-core/index.js", "noflo-mirobot/deps/noflo-core/index.js");
require.alias("noflo-noflo-core/components/ReadGlobal.js", "noflo-mirobot/deps/noflo-core/components/ReadGlobal.js");
require.alias("noflo-noflo-core/index.js", "noflo-core/index.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-core/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-core/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-core/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-core/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-core/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-core/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-core/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-core/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-core/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-core/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-core/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-core/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-core/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-core/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-core/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-core/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-core/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-core/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-core/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-core/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-core/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-core/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-core/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-noflo-interaction/components/ListenChange.js", "noflo-mirobot/deps/noflo-interaction/components/ListenChange.js");
require.alias("noflo-noflo-interaction/components/ListenDrag.js", "noflo-mirobot/deps/noflo-interaction/components/ListenDrag.js");
require.alias("noflo-noflo-interaction/components/ListenHash.js", "noflo-mirobot/deps/noflo-interaction/components/ListenHash.js");
require.alias("noflo-noflo-interaction/components/ListenKeyboard.js", "noflo-mirobot/deps/noflo-interaction/components/ListenKeyboard.js");
require.alias("noflo-noflo-interaction/components/ListenKeyboardShortcuts.js", "noflo-mirobot/deps/noflo-interaction/components/ListenKeyboardShortcuts.js");
require.alias("noflo-noflo-interaction/components/ListenMouse.js", "noflo-mirobot/deps/noflo-interaction/components/ListenMouse.js");
require.alias("noflo-noflo-interaction/components/ListenPointer.js", "noflo-mirobot/deps/noflo-interaction/components/ListenPointer.js");
require.alias("noflo-noflo-interaction/components/ListenResize.js", "noflo-mirobot/deps/noflo-interaction/components/ListenResize.js");
require.alias("noflo-noflo-interaction/components/ListenScroll.js", "noflo-mirobot/deps/noflo-interaction/components/ListenScroll.js");
require.alias("noflo-noflo-interaction/components/ListenSpeech.js", "noflo-mirobot/deps/noflo-interaction/components/ListenSpeech.js");
require.alias("noflo-noflo-interaction/components/ListenTouch.js", "noflo-mirobot/deps/noflo-interaction/components/ListenTouch.js");
require.alias("noflo-noflo-interaction/components/SetHash.js", "noflo-mirobot/deps/noflo-interaction/components/SetHash.js");
require.alias("noflo-noflo-interaction/components/ReadCoordinates.js", "noflo-mirobot/deps/noflo-interaction/components/ReadCoordinates.js");
require.alias("noflo-noflo-interaction/index.js", "noflo-mirobot/deps/noflo-interaction/index.js");
require.alias("noflo-noflo-interaction/components/ReadGamepad.js", "noflo-mirobot/deps/noflo-interaction/components/ReadGamepad.js");
require.alias("noflo-noflo-interaction/index.js", "noflo-interaction/index.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-interaction/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-interaction/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-interaction/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-interaction/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-interaction/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-interaction/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-interaction/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-interaction/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-interaction/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-interaction/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-interaction/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-interaction/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-interaction/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-interaction/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-interaction/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-interaction/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-interaction/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-interaction/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-interaction/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-interaction/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-interaction/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("noflo-noflo-runtime-webrtc/runtime/network.js", "noflo-mirobot/deps/noflo-runtime-webrtc/runtime/network.js");
require.alias("noflo-noflo-runtime-webrtc/runtime/network.js", "noflo-mirobot/deps/noflo-runtime-webrtc/index.js");
require.alias("noflo-noflo-runtime-webrtc/runtime/network.js", "noflo-runtime-webrtc/index.js");
require.alias("noflo-noflo-runtime-base/src/Base.js", "noflo-noflo-runtime-webrtc/deps/noflo-runtime-base/src/Base.js");
require.alias("noflo-noflo-runtime-base/src/protocol/Graph.js", "noflo-noflo-runtime-webrtc/deps/noflo-runtime-base/src/protocol/Graph.js");
require.alias("noflo-noflo-runtime-base/src/protocol/Network.js", "noflo-noflo-runtime-webrtc/deps/noflo-runtime-base/src/protocol/Network.js");
require.alias("noflo-noflo-runtime-base/src/protocol/Component.js", "noflo-noflo-runtime-webrtc/deps/noflo-runtime-base/src/protocol/Component.js");
require.alias("noflo-noflo-runtime-base/src/protocol/Runtime.js", "noflo-noflo-runtime-webrtc/deps/noflo-runtime-base/src/protocol/Runtime.js");
require.alias("noflo-noflo-runtime-base/src/Base.js", "noflo-noflo-runtime-webrtc/deps/noflo-runtime-base/index.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-runtime-base/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-runtime-base/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-runtime-base/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo-runtime-base/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-runtime-base/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-runtime-base/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-noflo-runtime-base/src/Base.js", "noflo-noflo-runtime-base/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo-runtime-webrtc/deps/events/index.js");

require.alias("broofa-node-uuid/uuid.js", "noflo-noflo-runtime-webrtc/deps/node-uuid/uuid.js");
require.alias("broofa-node-uuid/uuid.js", "noflo-noflo-runtime-webrtc/deps/node-uuid/index.js");
require.alias("broofa-node-uuid/uuid.js", "broofa-node-uuid/index.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-runtime-webrtc/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-runtime-webrtc/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("noflo-noflo-core/components/Callback.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/Callback.js");
require.alias("noflo-noflo-core/components/DisconnectAfterPacket.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/DisconnectAfterPacket.js");
require.alias("noflo-noflo-core/components/Drop.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/Drop.js");
require.alias("noflo-noflo-core/components/Group.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/Group.js");
require.alias("noflo-noflo-core/components/Kick.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/Kick.js");
require.alias("noflo-noflo-core/components/Merge.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/Merge.js");
require.alias("noflo-noflo-core/components/Output.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/Output.js");
require.alias("noflo-noflo-core/components/Repeat.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/Repeat.js");
require.alias("noflo-noflo-core/components/RepeatAsync.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/RepeatAsync.js");
require.alias("noflo-noflo-core/components/RepeatDelayed.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/RepeatDelayed.js");
require.alias("noflo-noflo-core/components/SendNext.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/SendNext.js");
require.alias("noflo-noflo-core/components/Split.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/Split.js");
require.alias("noflo-noflo-core/components/RunInterval.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/RunInterval.js");
require.alias("noflo-noflo-core/components/RunTimeout.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/RunTimeout.js");
require.alias("noflo-noflo-core/components/MakeFunction.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/MakeFunction.js");
require.alias("noflo-noflo-core/index.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/index.js");
require.alias("noflo-noflo-core/components/ReadGlobal.js", "noflo-noflo-runtime-webrtc/deps/noflo-core/components/ReadGlobal.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-core/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-core/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-core/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-core/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-core/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-core/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-core/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-core/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-core/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-core/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-core/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-core/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-core/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-core/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-core/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-core/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-core/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-core/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-core/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-core/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-core/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-core/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-core/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-noflo-runtime-webrtc/runtime/network.js", "noflo-noflo-runtime-webrtc/index.js");
require.alias("noflo-noflo-image/components/CalculateAspectRatio.js", "noflo-mirobot/deps/noflo-image/components/CalculateAspectRatio.js");
require.alias("noflo-noflo-image/components/GetOrientation.js", "noflo-mirobot/deps/noflo-image/components/GetOrientation.js");
require.alias("noflo-noflo-image/components/Measure.js", "noflo-mirobot/deps/noflo-image/components/Measure.js");
require.alias("noflo-noflo-image/components/ToFullscale.js", "noflo-mirobot/deps/noflo-image/components/ToFullscale.js");
require.alias("noflo-noflo-image/spec/testutils.js", "noflo-mirobot/deps/noflo-image/spec/testutils.js");
require.alias("noflo-noflo-image/index.js", "noflo-mirobot/deps/noflo-image/index.js");
require.alias("noflo-noflo-image/components/CreateImage-node.js", "noflo-mirobot/deps/noflo-image/components/CreateImage-node.js");
require.alias("noflo-noflo-image/components/CreateImage.js", "noflo-mirobot/deps/noflo-image/components/CreateImage.js");
require.alias("noflo-noflo-image/components/GetFeaturesYAPE.js", "noflo-mirobot/deps/noflo-image/components/GetFeaturesYAPE.js");
require.alias("noflo-noflo-image/components/FindFeatureFreeAreas.js", "noflo-mirobot/deps/noflo-image/components/FindFeatureFreeAreas.js");
require.alias("noflo-noflo-image/graphs/UrlToCanvas.json", "noflo-mirobot/deps/noflo-image/graphs/UrlToCanvas.json");
require.alias("noflo-noflo-image/spec/fixtures/textAnywhere/flickr-3178100324-original_small.jpg.corners.json", "noflo-mirobot/deps/noflo-image/spec/fixtures/textAnywhere/flickr-3178100324-original_small.jpg.corners.json");
require.alias("noflo-noflo-image/spec/fixtures/noText/flickr-8132786781-small.jpg.corners.json", "noflo-mirobot/deps/noflo-image/spec/fixtures/noText/flickr-8132786781-small.jpg.corners.json");
require.alias("noflo-noflo-image/spec/fixtures/textRegion/3010029968_02742a1aec_b.jpg.corners.json", "noflo-mirobot/deps/noflo-image/spec/fixtures/textRegion/3010029968_02742a1aec_b.jpg.corners.json");
require.alias("noflo-noflo-image/components/GetHistogram.js", "noflo-mirobot/deps/noflo-image/components/GetHistogram.js");
require.alias("noflo-noflo-image/components/GetColors.js", "noflo-mirobot/deps/noflo-image/components/GetColors.js");
require.alias("noflo-noflo-image/components/GetCannyEdges.js", "noflo-mirobot/deps/noflo-image/components/GetCannyEdges.js");
require.alias("noflo-noflo-image/components/ImageToCanvas.js", "noflo-mirobot/deps/noflo-image/components/ImageToCanvas.js");
require.alias("noflo-noflo-image/components/VideoToCanvas.js", "noflo-mirobot/deps/noflo-image/components/VideoToCanvas.js");
require.alias("noflo-noflo-image/index.js", "noflo-image/index.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-image/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-image/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-image/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-image/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-image/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-image/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-image/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-image/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-image/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-image/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-image/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-image/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-image/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-image/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-image/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-image/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-image/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-image/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-image/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-image/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-image/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("visionmedia-superagent/lib/client.js", "noflo-noflo-image/deps/superagent/lib/client.js");
require.alias("visionmedia-superagent/lib/client.js", "noflo-noflo-image/deps/superagent/index.js");
require.alias("component-emitter/index.js", "visionmedia-superagent/deps/emitter/index.js");

require.alias("component-reduce/index.js", "visionmedia-superagent/deps/reduce/index.js");

require.alias("visionmedia-superagent/lib/client.js", "visionmedia-superagent/index.js");
require.alias("noflo-noflo-canvas/index.js", "noflo-noflo-image/deps/noflo-canvas/index.js");
require.alias("noflo-noflo-canvas/lib/MakeCanvasPrimative.js", "noflo-noflo-image/deps/noflo-canvas/lib/MakeCanvasPrimative.js");
require.alias("noflo-noflo-canvas/components/CreateCanvas.js", "noflo-noflo-image/deps/noflo-canvas/components/CreateCanvas.js");
require.alias("noflo-noflo-canvas/components/MakeColor.js", "noflo-noflo-image/deps/noflo-canvas/components/MakeColor.js");
require.alias("noflo-noflo-canvas/components/MakeRange.js", "noflo-noflo-image/deps/noflo-canvas/components/MakeRange.js");
require.alias("noflo-noflo-canvas/components/MakeIncrement.js", "noflo-noflo-image/deps/noflo-canvas/components/MakeIncrement.js");
require.alias("noflo-noflo-canvas/components/MakeRandom.js", "noflo-noflo-image/deps/noflo-canvas/components/MakeRandom.js");
require.alias("noflo-noflo-canvas/components/MakePoint.js", "noflo-noflo-image/deps/noflo-canvas/components/MakePoint.js");
require.alias("noflo-noflo-canvas/components/MakeGrid.js", "noflo-noflo-image/deps/noflo-canvas/components/MakeGrid.js");
require.alias("noflo-noflo-canvas/components/MakeRectangle.js", "noflo-noflo-image/deps/noflo-canvas/components/MakeRectangle.js");
require.alias("noflo-noflo-canvas/components/MakeCircle.js", "noflo-noflo-image/deps/noflo-canvas/components/MakeCircle.js");
require.alias("noflo-noflo-canvas/components/MakeBezierCurve.js", "noflo-noflo-image/deps/noflo-canvas/components/MakeBezierCurve.js");
require.alias("noflo-noflo-canvas/components/MakeArc.js", "noflo-noflo-image/deps/noflo-canvas/components/MakeArc.js");
require.alias("noflo-noflo-canvas/components/MakePath.js", "noflo-noflo-image/deps/noflo-canvas/components/MakePath.js");
require.alias("noflo-noflo-canvas/components/Transform.js", "noflo-noflo-image/deps/noflo-canvas/components/Transform.js");
require.alias("noflo-noflo-canvas/components/Group.js", "noflo-noflo-image/deps/noflo-canvas/components/Group.js");
require.alias("noflo-noflo-canvas/components/Recurse.js", "noflo-noflo-image/deps/noflo-canvas/components/Recurse.js");
require.alias("noflo-noflo-canvas/components/StrokeStyle.js", "noflo-noflo-image/deps/noflo-canvas/components/StrokeStyle.js");
require.alias("noflo-noflo-canvas/components/LineWidth.js", "noflo-noflo-image/deps/noflo-canvas/components/LineWidth.js");
require.alias("noflo-noflo-canvas/components/FillStyle.js", "noflo-noflo-image/deps/noflo-canvas/components/FillStyle.js");
require.alias("noflo-noflo-canvas/components/Stroke.js", "noflo-noflo-image/deps/noflo-canvas/components/Stroke.js");
require.alias("noflo-noflo-canvas/components/Fill.js", "noflo-noflo-image/deps/noflo-canvas/components/Fill.js");
require.alias("noflo-noflo-canvas/components/StrokeRect.js", "noflo-noflo-image/deps/noflo-canvas/components/StrokeRect.js");
require.alias("noflo-noflo-canvas/components/FillRect.js", "noflo-noflo-image/deps/noflo-canvas/components/FillRect.js");
require.alias("noflo-noflo-canvas/components/ClearRect.js", "noflo-noflo-image/deps/noflo-canvas/components/ClearRect.js");
require.alias("noflo-noflo-canvas/components/DrawImage.js", "noflo-noflo-image/deps/noflo-canvas/components/DrawImage.js");
require.alias("noflo-noflo-canvas/components/Draw.js", "noflo-noflo-image/deps/noflo-canvas/components/Draw.js");
require.alias("noflo-noflo-canvas/components/CreateCanvas-node.js", "noflo-noflo-image/deps/noflo-canvas/components/CreateCanvas-node.js");
require.alias("noflo-noflo-canvas/components/ColorArrayToCss.js", "noflo-noflo-image/deps/noflo-canvas/components/ColorArrayToCss.js");
require.alias("noflo-noflo-canvas/components/SavePNG.js", "noflo-noflo-image/deps/noflo-canvas/components/SavePNG.js");
require.alias("noflo-noflo-canvas/components/MakeRGBColor.js", "noflo-noflo-image/deps/noflo-canvas/components/MakeRGBColor.js");
require.alias("noflo-noflo-canvas/graphs/PointFromObject.json", "noflo-noflo-image/deps/noflo-canvas/graphs/PointFromObject.json");
require.alias("noflo-noflo-canvas/graphs/RectangleFromObject.json", "noflo-noflo-image/deps/noflo-canvas/graphs/RectangleFromObject.json");
require.alias("noflo-noflo-canvas/graphs/CopyCanvas.json", "noflo-noflo-image/deps/noflo-canvas/graphs/CopyCanvas.json");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-canvas/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-canvas/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-canvas/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-canvas/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-canvas/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-canvas/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-canvas/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-canvas/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-canvas/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-canvas/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-canvas/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-canvas/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-canvas/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-canvas/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-canvas/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-canvas/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-canvas/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-canvas/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-canvas/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-canvas/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-canvas/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("noflo-noflo-core/components/Callback.js", "noflo-noflo-image/deps/noflo-core/components/Callback.js");
require.alias("noflo-noflo-core/components/DisconnectAfterPacket.js", "noflo-noflo-image/deps/noflo-core/components/DisconnectAfterPacket.js");
require.alias("noflo-noflo-core/components/Drop.js", "noflo-noflo-image/deps/noflo-core/components/Drop.js");
require.alias("noflo-noflo-core/components/Group.js", "noflo-noflo-image/deps/noflo-core/components/Group.js");
require.alias("noflo-noflo-core/components/Kick.js", "noflo-noflo-image/deps/noflo-core/components/Kick.js");
require.alias("noflo-noflo-core/components/Merge.js", "noflo-noflo-image/deps/noflo-core/components/Merge.js");
require.alias("noflo-noflo-core/components/Output.js", "noflo-noflo-image/deps/noflo-core/components/Output.js");
require.alias("noflo-noflo-core/components/Repeat.js", "noflo-noflo-image/deps/noflo-core/components/Repeat.js");
require.alias("noflo-noflo-core/components/RepeatAsync.js", "noflo-noflo-image/deps/noflo-core/components/RepeatAsync.js");
require.alias("noflo-noflo-core/components/RepeatDelayed.js", "noflo-noflo-image/deps/noflo-core/components/RepeatDelayed.js");
require.alias("noflo-noflo-core/components/SendNext.js", "noflo-noflo-image/deps/noflo-core/components/SendNext.js");
require.alias("noflo-noflo-core/components/Split.js", "noflo-noflo-image/deps/noflo-core/components/Split.js");
require.alias("noflo-noflo-core/components/RunInterval.js", "noflo-noflo-image/deps/noflo-core/components/RunInterval.js");
require.alias("noflo-noflo-core/components/RunTimeout.js", "noflo-noflo-image/deps/noflo-core/components/RunTimeout.js");
require.alias("noflo-noflo-core/components/MakeFunction.js", "noflo-noflo-image/deps/noflo-core/components/MakeFunction.js");
require.alias("noflo-noflo-core/index.js", "noflo-noflo-image/deps/noflo-core/index.js");
require.alias("noflo-noflo-core/components/ReadGlobal.js", "noflo-noflo-image/deps/noflo-core/components/ReadGlobal.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-core/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-core/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-core/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-core/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-core/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-core/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-core/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-core/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-core/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-core/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-core/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-core/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-core/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-core/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-core/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-core/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-core/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-core/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-core/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-core/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-core/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-core/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-core/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-noflo-objects/components/Extend.js", "noflo-noflo-image/deps/noflo-objects/components/Extend.js");
require.alias("noflo-noflo-objects/components/MergeObjects.js", "noflo-noflo-image/deps/noflo-objects/components/MergeObjects.js");
require.alias("noflo-noflo-objects/components/SplitObject.js", "noflo-noflo-image/deps/noflo-objects/components/SplitObject.js");
require.alias("noflo-noflo-objects/components/ReplaceKey.js", "noflo-noflo-image/deps/noflo-objects/components/ReplaceKey.js");
require.alias("noflo-noflo-objects/components/Keys.js", "noflo-noflo-image/deps/noflo-objects/components/Keys.js");
require.alias("noflo-noflo-objects/components/Size.js", "noflo-noflo-image/deps/noflo-objects/components/Size.js");
require.alias("noflo-noflo-objects/components/Values.js", "noflo-noflo-image/deps/noflo-objects/components/Values.js");
require.alias("noflo-noflo-objects/components/Join.js", "noflo-noflo-image/deps/noflo-objects/components/Join.js");
require.alias("noflo-noflo-objects/components/ExtractProperty.js", "noflo-noflo-image/deps/noflo-objects/components/ExtractProperty.js");
require.alias("noflo-noflo-objects/components/InsertProperty.js", "noflo-noflo-image/deps/noflo-objects/components/InsertProperty.js");
require.alias("noflo-noflo-objects/components/SliceArray.js", "noflo-noflo-image/deps/noflo-objects/components/SliceArray.js");
require.alias("noflo-noflo-objects/components/SplitArray.js", "noflo-noflo-image/deps/noflo-objects/components/SplitArray.js");
require.alias("noflo-noflo-objects/components/FilterPropertyValue.js", "noflo-noflo-image/deps/noflo-objects/components/FilterPropertyValue.js");
require.alias("noflo-noflo-objects/components/FlattenObject.js", "noflo-noflo-image/deps/noflo-objects/components/FlattenObject.js");
require.alias("noflo-noflo-objects/components/MapProperty.js", "noflo-noflo-image/deps/noflo-objects/components/MapProperty.js");
require.alias("noflo-noflo-objects/components/RemoveProperty.js", "noflo-noflo-image/deps/noflo-objects/components/RemoveProperty.js");
require.alias("noflo-noflo-objects/components/MapPropertyValue.js", "noflo-noflo-image/deps/noflo-objects/components/MapPropertyValue.js");
require.alias("noflo-noflo-objects/components/GetObjectKey.js", "noflo-noflo-image/deps/noflo-objects/components/GetObjectKey.js");
require.alias("noflo-noflo-objects/components/UniqueArray.js", "noflo-noflo-image/deps/noflo-objects/components/UniqueArray.js");
require.alias("noflo-noflo-objects/components/SetProperty.js", "noflo-noflo-image/deps/noflo-objects/components/SetProperty.js");
require.alias("noflo-noflo-objects/components/SimplifyObject.js", "noflo-noflo-image/deps/noflo-objects/components/SimplifyObject.js");
require.alias("noflo-noflo-objects/components/DuplicateProperty.js", "noflo-noflo-image/deps/noflo-objects/components/DuplicateProperty.js");
require.alias("noflo-noflo-objects/components/CreateObject.js", "noflo-noflo-image/deps/noflo-objects/components/CreateObject.js");
require.alias("noflo-noflo-objects/components/CreateDate.js", "noflo-noflo-image/deps/noflo-objects/components/CreateDate.js");
require.alias("noflo-noflo-objects/components/SetPropertyValue.js", "noflo-noflo-image/deps/noflo-objects/components/SetPropertyValue.js");
require.alias("noflo-noflo-objects/components/CallMethod.js", "noflo-noflo-image/deps/noflo-objects/components/CallMethod.js");
require.alias("noflo-noflo-objects/index.js", "noflo-noflo-image/deps/noflo-objects/index.js");
require.alias("noflo-noflo-objects/components/GetCurrentTimestamp.js", "noflo-noflo-image/deps/noflo-objects/components/GetCurrentTimestamp.js");
require.alias("noflo-noflo-objects/components/FilterProperty.js", "noflo-noflo-image/deps/noflo-objects/components/FilterProperty.js");
require.alias("noflo-noflo-objects/components/CreateError.js", "noflo-noflo-image/deps/noflo-objects/components/CreateError.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-objects/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-objects/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-objects/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-objects/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-objects/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-objects/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-objects/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-objects/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-objects/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-objects/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-objects/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-objects/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-objects/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-objects/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-objects/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-objects/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-objects/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-objects/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-objects/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-objects/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-objects/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-objects/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-objects/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("mrluc-owl-deepcopy/deep_copy.js", "noflo-noflo-objects/deps/owl-deepcopy/deep_copy.js");
require.alias("mrluc-owl-deepcopy/deep_copy.js", "noflo-noflo-objects/deps/owl-deepcopy/index.js");
require.alias("mrluc-owl-deepcopy/deep_copy.js", "mrluc-owl-deepcopy/index.js");
require.alias("noflo-noflo-groups/components/ReadGroups.js", "noflo-noflo-image/deps/noflo-groups/components/ReadGroups.js");
require.alias("noflo-noflo-groups/components/RemoveGroups.js", "noflo-noflo-image/deps/noflo-groups/components/RemoveGroups.js");
require.alias("noflo-noflo-groups/components/Regroup.js", "noflo-noflo-image/deps/noflo-groups/components/Regroup.js");
require.alias("noflo-noflo-groups/components/Group.js", "noflo-noflo-image/deps/noflo-groups/components/Group.js");
require.alias("noflo-noflo-groups/components/GroupZip.js", "noflo-noflo-image/deps/noflo-groups/components/GroupZip.js");
require.alias("noflo-noflo-groups/components/FilterByGroup.js", "noflo-noflo-image/deps/noflo-groups/components/FilterByGroup.js");
require.alias("noflo-noflo-groups/components/Objectify.js", "noflo-noflo-image/deps/noflo-groups/components/Objectify.js");
require.alias("noflo-noflo-groups/components/ReadGroup.js", "noflo-noflo-image/deps/noflo-groups/components/ReadGroup.js");
require.alias("noflo-noflo-groups/components/SendByGroup.js", "noflo-noflo-image/deps/noflo-groups/components/SendByGroup.js");
require.alias("noflo-noflo-groups/components/CollectGroups.js", "noflo-noflo-image/deps/noflo-groups/components/CollectGroups.js");
require.alias("noflo-noflo-groups/components/CollectObject.js", "noflo-noflo-image/deps/noflo-groups/components/CollectObject.js");
require.alias("noflo-noflo-groups/components/CollectTree.js", "noflo-noflo-image/deps/noflo-groups/components/CollectTree.js");
require.alias("noflo-noflo-groups/components/FirstGroup.js", "noflo-noflo-image/deps/noflo-groups/components/FirstGroup.js");
require.alias("noflo-noflo-groups/components/LastGroup.js", "noflo-noflo-image/deps/noflo-groups/components/LastGroup.js");
require.alias("noflo-noflo-groups/components/MapGroup.js", "noflo-noflo-image/deps/noflo-groups/components/MapGroup.js");
require.alias("noflo-noflo-groups/components/MergeGroups.js", "noflo-noflo-image/deps/noflo-groups/components/MergeGroups.js");
require.alias("noflo-noflo-groups/components/GroupByObjectKey.js", "noflo-noflo-image/deps/noflo-groups/components/GroupByObjectKey.js");
require.alias("noflo-noflo-groups/graphs/ObjectifyByGroup.fbp", "noflo-noflo-image/deps/noflo-groups/graphs/ObjectifyByGroup.fbp");
require.alias("noflo-noflo-groups/components/GenerateGroup.js", "noflo-noflo-image/deps/noflo-groups/components/GenerateGroup.js");
require.alias("noflo-noflo-groups/index.js", "noflo-noflo-image/deps/noflo-groups/index.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-groups/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-groups/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-groups/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-groups/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-groups/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-groups/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-groups/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-groups/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-groups/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-groups/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-groups/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-groups/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-groups/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-groups/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-groups/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-groups/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-groups/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-groups/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-groups/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-groups/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-groups/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-groups/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-groups/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("noflo-noflo-core/components/Callback.js", "noflo-noflo-groups/deps/noflo-core/components/Callback.js");
require.alias("noflo-noflo-core/components/DisconnectAfterPacket.js", "noflo-noflo-groups/deps/noflo-core/components/DisconnectAfterPacket.js");
require.alias("noflo-noflo-core/components/Drop.js", "noflo-noflo-groups/deps/noflo-core/components/Drop.js");
require.alias("noflo-noflo-core/components/Group.js", "noflo-noflo-groups/deps/noflo-core/components/Group.js");
require.alias("noflo-noflo-core/components/Kick.js", "noflo-noflo-groups/deps/noflo-core/components/Kick.js");
require.alias("noflo-noflo-core/components/Merge.js", "noflo-noflo-groups/deps/noflo-core/components/Merge.js");
require.alias("noflo-noflo-core/components/Output.js", "noflo-noflo-groups/deps/noflo-core/components/Output.js");
require.alias("noflo-noflo-core/components/Repeat.js", "noflo-noflo-groups/deps/noflo-core/components/Repeat.js");
require.alias("noflo-noflo-core/components/RepeatAsync.js", "noflo-noflo-groups/deps/noflo-core/components/RepeatAsync.js");
require.alias("noflo-noflo-core/components/RepeatDelayed.js", "noflo-noflo-groups/deps/noflo-core/components/RepeatDelayed.js");
require.alias("noflo-noflo-core/components/SendNext.js", "noflo-noflo-groups/deps/noflo-core/components/SendNext.js");
require.alias("noflo-noflo-core/components/Split.js", "noflo-noflo-groups/deps/noflo-core/components/Split.js");
require.alias("noflo-noflo-core/components/RunInterval.js", "noflo-noflo-groups/deps/noflo-core/components/RunInterval.js");
require.alias("noflo-noflo-core/components/RunTimeout.js", "noflo-noflo-groups/deps/noflo-core/components/RunTimeout.js");
require.alias("noflo-noflo-core/components/MakeFunction.js", "noflo-noflo-groups/deps/noflo-core/components/MakeFunction.js");
require.alias("noflo-noflo-core/index.js", "noflo-noflo-groups/deps/noflo-core/index.js");
require.alias("noflo-noflo-core/components/ReadGlobal.js", "noflo-noflo-groups/deps/noflo-core/components/ReadGlobal.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-core/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-core/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-core/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-core/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-core/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-core/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-core/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-core/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-core/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-core/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-core/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-core/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-core/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-core/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-core/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-core/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-core/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-core/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-core/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-core/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-core/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-core/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-core/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("broofa-node-uuid/uuid.js", "noflo-noflo-groups/deps/node-uuid/uuid.js");
require.alias("broofa-node-uuid/uuid.js", "noflo-noflo-groups/deps/node-uuid/index.js");
require.alias("broofa-node-uuid/uuid.js", "broofa-node-uuid/index.js");
require.alias("noflo-noflo-strings/components/CompileString.js", "noflo-noflo-image/deps/noflo-strings/components/CompileString.js");
require.alias("noflo-noflo-strings/components/Filter.js", "noflo-noflo-image/deps/noflo-strings/components/Filter.js");
require.alias("noflo-noflo-strings/components/SendString.js", "noflo-noflo-image/deps/noflo-strings/components/SendString.js");
require.alias("noflo-noflo-strings/components/SplitStr.js", "noflo-noflo-image/deps/noflo-strings/components/SplitStr.js");
require.alias("noflo-noflo-strings/components/StringTemplate.js", "noflo-noflo-image/deps/noflo-strings/components/StringTemplate.js");
require.alias("noflo-noflo-strings/components/Replace.js", "noflo-noflo-image/deps/noflo-strings/components/Replace.js");
require.alias("noflo-noflo-strings/components/Jsonify.js", "noflo-noflo-image/deps/noflo-strings/components/Jsonify.js");
require.alias("noflo-noflo-strings/components/ParseFloat.js", "noflo-noflo-image/deps/noflo-strings/components/ParseFloat.js");
require.alias("noflo-noflo-strings/components/ParseInt.js", "noflo-noflo-image/deps/noflo-strings/components/ParseInt.js");
require.alias("noflo-noflo-strings/components/ParseJson.js", "noflo-noflo-image/deps/noflo-strings/components/ParseJson.js");
require.alias("noflo-noflo-strings/index.js", "noflo-noflo-image/deps/noflo-strings/index.js");
require.alias("noflo-noflo-strings/components/Base64Encode.js", "noflo-noflo-image/deps/noflo-strings/components/Base64Encode.js");
require.alias("noflo-noflo-strings/components/EscapeQuotes.js", "noflo-noflo-image/deps/noflo-strings/components/EscapeQuotes.js");
require.alias("noflo-noflo-strings/components/LowerCaseString.js", "noflo-noflo-image/deps/noflo-strings/components/LowerCaseString.js");
require.alias("noflo-noflo-strings/components/MatchReplace.js", "noflo-noflo-image/deps/noflo-strings/components/MatchReplace.js");
require.alias("noflo-noflo-strings/components/Quote.js", "noflo-noflo-image/deps/noflo-strings/components/Quote.js");
require.alias("noflo-noflo-strings/components/Splice.js", "noflo-noflo-image/deps/noflo-strings/components/Splice.js");
require.alias("noflo-noflo-strings/components/SubStr.js", "noflo-noflo-image/deps/noflo-strings/components/SubStr.js");
require.alias("noflo-noflo-strings/components/TemplateReplace.js", "noflo-noflo-image/deps/noflo-strings/components/TemplateReplace.js");
require.alias("noflo-noflo-strings/components/ToString.js", "noflo-noflo-image/deps/noflo-strings/components/ToString.js");
require.alias("noflo-noflo-strings/graphs/SendJson.fbp", "noflo-noflo-image/deps/noflo-strings/graphs/SendJson.fbp");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-strings/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-strings/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-strings/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-strings/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-strings/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-strings/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-strings/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-strings/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-strings/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-strings/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-strings/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-strings/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-strings/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-strings/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-strings/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-strings/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-strings/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-strings/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-strings/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-strings/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-strings/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-strings/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo-strings/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-noflo-dom/components/AddClass.js", "noflo-noflo-image/deps/noflo-dom/components/AddClass.js");
require.alias("noflo-noflo-dom/components/AppendChild.js", "noflo-noflo-image/deps/noflo-dom/components/AppendChild.js");
require.alias("noflo-noflo-dom/components/CreateElement.js", "noflo-noflo-image/deps/noflo-dom/components/CreateElement.js");
require.alias("noflo-noflo-dom/components/CreateFragment.js", "noflo-noflo-image/deps/noflo-dom/components/CreateFragment.js");
require.alias("noflo-noflo-dom/components/GetAttribute.js", "noflo-noflo-image/deps/noflo-dom/components/GetAttribute.js");
require.alias("noflo-noflo-dom/components/GetElement.js", "noflo-noflo-image/deps/noflo-dom/components/GetElement.js");
require.alias("noflo-noflo-dom/components/HasClass.js", "noflo-noflo-image/deps/noflo-dom/components/HasClass.js");
require.alias("noflo-noflo-dom/components/Listen.js", "noflo-noflo-image/deps/noflo-dom/components/Listen.js");
require.alias("noflo-noflo-dom/components/ReadHtml.js", "noflo-noflo-image/deps/noflo-dom/components/ReadHtml.js");
require.alias("noflo-noflo-dom/components/RemoveElement.js", "noflo-noflo-image/deps/noflo-dom/components/RemoveElement.js");
require.alias("noflo-noflo-dom/components/SetAttribute.js", "noflo-noflo-image/deps/noflo-dom/components/SetAttribute.js");
require.alias("noflo-noflo-dom/components/WriteHtml.js", "noflo-noflo-image/deps/noflo-dom/components/WriteHtml.js");
require.alias("noflo-noflo-dom/components/RemoveClass.js", "noflo-noflo-image/deps/noflo-dom/components/RemoveClass.js");
require.alias("noflo-noflo-dom/components/RequestAnimationFrame.js", "noflo-noflo-image/deps/noflo-dom/components/RequestAnimationFrame.js");
require.alias("noflo-noflo-dom/index.js", "noflo-noflo-image/deps/noflo-dom/index.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-dom/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-dom/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-dom/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-dom/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-dom/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-dom/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-dom/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-dom/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-dom/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-dom/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-dom/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-dom/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-dom/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-dom/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-dom/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-dom/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-dom/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-dom/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-dom/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-dom/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-dom/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("noflo-noflo-ajax/components/Get.js", "noflo-noflo-image/deps/noflo-ajax/components/Get.js");
require.alias("noflo-noflo-ajax/components/GetJsonP.js", "noflo-noflo-image/deps/noflo-ajax/components/GetJsonP.js");
require.alias("noflo-noflo-ajax/index.js", "noflo-noflo-image/deps/noflo-ajax/index.js");
require.alias("noflo-noflo-ajax/components/CorsProxy.js", "noflo-noflo-image/deps/noflo-ajax/components/CorsProxy.js");
require.alias("noflo-noflo/src/lib/Graph.js", "noflo-noflo-ajax/deps/noflo/src/lib/Graph.js");
require.alias("noflo-noflo/src/lib/InternalSocket.js", "noflo-noflo-ajax/deps/noflo/src/lib/InternalSocket.js");
require.alias("noflo-noflo/src/lib/BasePort.js", "noflo-noflo-ajax/deps/noflo/src/lib/BasePort.js");
require.alias("noflo-noflo/src/lib/InPort.js", "noflo-noflo-ajax/deps/noflo/src/lib/InPort.js");
require.alias("noflo-noflo/src/lib/OutPort.js", "noflo-noflo-ajax/deps/noflo/src/lib/OutPort.js");
require.alias("noflo-noflo/src/lib/Ports.js", "noflo-noflo-ajax/deps/noflo/src/lib/Ports.js");
require.alias("noflo-noflo/src/lib/Port.js", "noflo-noflo-ajax/deps/noflo/src/lib/Port.js");
require.alias("noflo-noflo/src/lib/ArrayPort.js", "noflo-noflo-ajax/deps/noflo/src/lib/ArrayPort.js");
require.alias("noflo-noflo/src/lib/Component.js", "noflo-noflo-ajax/deps/noflo/src/lib/Component.js");
require.alias("noflo-noflo/src/lib/AsyncComponent.js", "noflo-noflo-ajax/deps/noflo/src/lib/AsyncComponent.js");
require.alias("noflo-noflo/src/lib/LoggingComponent.js", "noflo-noflo-ajax/deps/noflo/src/lib/LoggingComponent.js");
require.alias("noflo-noflo/src/lib/ComponentLoader.js", "noflo-noflo-ajax/deps/noflo/src/lib/ComponentLoader.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-ajax/deps/noflo/src/lib/NoFlo.js");
require.alias("noflo-noflo/src/lib/Network.js", "noflo-noflo-ajax/deps/noflo/src/lib/Network.js");
require.alias("noflo-noflo/src/lib/Platform.js", "noflo-noflo-ajax/deps/noflo/src/lib/Platform.js");
require.alias("noflo-noflo/src/lib/Journal.js", "noflo-noflo-ajax/deps/noflo/src/lib/Journal.js");
require.alias("noflo-noflo/src/lib/Utils.js", "noflo-noflo-ajax/deps/noflo/src/lib/Utils.js");
require.alias("noflo-noflo/src/lib/Helpers.js", "noflo-noflo-ajax/deps/noflo/src/lib/Helpers.js");
require.alias("noflo-noflo/src/lib/Streams.js", "noflo-noflo-ajax/deps/noflo/src/lib/Streams.js");
require.alias("noflo-noflo/src/components/Graph.js", "noflo-noflo-ajax/deps/noflo/src/components/Graph.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo-ajax/deps/noflo/index.js");
require.alias("bergie-emitter/index.js", "noflo-noflo/deps/events/index.js");

require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/underscore.js");
require.alias("jashkenas-underscore/underscore.js", "noflo-noflo/deps/underscore/index.js");
require.alias("jashkenas-underscore/underscore.js", "jashkenas-underscore/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/lib/fbp.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-noflo/deps/fbp/index.js");
require.alias("noflo-fbp/lib/fbp.js", "noflo-fbp/index.js");
require.alias("noflo-noflo/src/lib/NoFlo.js", "noflo-noflo/index.js");
require.alias("jonnor-jsfeat/build/jsfeat.js", "noflo-noflo-image/deps/jsfeat/build/jsfeat.js");
require.alias("jonnor-jsfeat/build/jsfeat.js", "noflo-noflo-image/deps/jsfeat/index.js");
require.alias("jonnor-jsfeat/build/jsfeat.js", "jonnor-jsfeat/index.js");
require.alias("jonnor-color-thief/js/color-thief.js", "noflo-noflo-image/deps/color-thief/js/color-thief.js");
require.alias("jonnor-color-thief/js/color-thief.js", "noflo-noflo-image/deps/color-thief/index.js");
require.alias("jonnor-color-thief/js/color-thief.js", "jonnor-color-thief/index.js");